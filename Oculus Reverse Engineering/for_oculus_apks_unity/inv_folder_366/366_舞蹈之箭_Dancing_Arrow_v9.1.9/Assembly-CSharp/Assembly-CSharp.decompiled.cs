using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using DG.Tweening;
using DeviceNetwork;
using ExitGames.Client.Photon;
using HTC.UnityPlugin.StereoRendering;
using Il2CppDummyDll;
using MEC;
using MK.Glow.Legacy;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Photon.Pun;
using Photon.Realtime;
using Runningtap;
using TMPro;
using Tayx.Graphy.Advanced;
using Tayx.Graphy.Audio;
using Tayx.Graphy.Fps;
using Tayx.Graphy.Graph;
using Tayx.Graphy.Ram;
using Tayx.Graphy.UI;
using Tayx.Graphy.Utils;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;
using Valve.VR;
using Xft;
using uTools;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99764C", Offset = "0x99764C")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B3FC", Offset = "0x99B3FC")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B410", Offset = "0x99B410")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99765C", Offset = "0x99765C")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B424", Offset = "0x99B424")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B438", Offset = "0x99B438")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B44C", Offset = "0x99B44C")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99766C", Offset = "0x99766C")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B460", Offset = "0x99B460")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B474", Offset = "0x99B474")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B488", Offset = "0x99B488")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B49C", Offset = "0x99B49C")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B4B0", Offset = "0x99B4B0")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x99B4C4", Offset = "0x99B4C4")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
public class PlayBtnImg : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image btn;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Color[] setColor;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xC193A4", Offset = "0xC193A4", VA = "0xC193A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xC193E4", Offset = "0xC193E4", VA = "0xC193E4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xC194BC", Offset = "0xC194BC", VA = "0xC194BC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xC194FC", Offset = "0xC194FC", VA = "0xC194FC")]
	public PlayBtnImg()
	{
	}
}
[Token(Token = "0x2000006")]
public class UIModeSetting : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button btn;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image checkImg;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool checkToPowerOverMode;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xE0A4D8", Offset = "0xE0A4D8", VA = "0xE0A4D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE0A598", Offset = "0xE0A598", VA = "0xE0A598")]
	private void PowerOverWhelming()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE0A850", Offset = "0xE0A850", VA = "0xE0A850")]
	public UIModeSetting()
	{
	}
}
[Token(Token = "0x2000007")]
public class UIBtnHighlighte : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9992F8", Offset = "0x9992F8")]
	private sealed class <Logic>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIBtnHighlighte <>4__this;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170002E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xEE29E8", Offset = "0xEE29E8", VA = "0xEE29E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xEE2A54", Offset = "0xEE2A54", VA = "0xEE2A54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xEE2730", Offset = "0xEE2730", VA = "0xEE2730")]
		[DebuggerHidden]
		public <Logic>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xEE2874", Offset = "0xEE2874", VA = "0xEE2874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xEE2878", Offset = "0xEE2878", VA = "0xEE2878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xEE29F0", Offset = "0xEE29F0", VA = "0xEE29F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color defaultColor;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color HighlightColor;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds arrowSpeed;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image Child;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite[] childDefault;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public Coroutine colorChangeRoutine;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool checkPoint;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool onPointer;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xEE2670", Offset = "0xEE2670", VA = "0xEE2670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xEE26B0", Offset = "0xEE26B0", VA = "0xEE26B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A48E0", Offset = "0x9A48E0")]
	private IEnumerator Logic()
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xEE275C", Offset = "0xEE275C", VA = "0xEE275C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xEE2770", Offset = "0xEE2770", VA = "0xEE2770", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xEE277C", Offset = "0xEE277C", VA = "0xEE277C")]
	public void InitColor()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xEE27F0", Offset = "0xEE27F0", VA = "0xEE27F0")]
	public UIBtnHighlighte()
	{
	}
}
[Token(Token = "0x2000008")]
public class UIChangeColorTween : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image bg_Glow;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xEE2A5C", Offset = "0xEE2A5C", VA = "0xEE2A5C")]
	public void TweenColor(int level)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xEE2ACC", Offset = "0xEE2ACC", VA = "0xEE2ACC")]
	public UIChangeColorTween()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x99767C", Offset = "0x99767C")]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader _combineLayersShader;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x1700000C")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0xC16C2C", Offset = "0xC16C2C", VA = "0xC16C2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x6000028")]
		[Address(RVA = "0xC16CD0", Offset = "0xC16CD0", VA = "0xC16CD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xC16D98", Offset = "0xC16D98", VA = "0xC16D98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0xC16F20", Offset = "0xC16F20", VA = "0xC16F20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0xC16FC4", Offset = "0xC16FC4", VA = "0xC16FC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xC1708C", Offset = "0xC1708C", VA = "0xC1708C")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xC16E1C", Offset = "0xC16E1C", VA = "0xC16E1C")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xC17160", Offset = "0xC17160", VA = "0xC17160")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xC171E4", Offset = "0xC171E4", VA = "0xC171E4")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xC17220", Offset = "0xC17220", VA = "0xC17220")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x200000A")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B4E8", Offset = "0x99B4E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B4E8", Offset = "0x99B4E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99B4E8", Offset = "0x99B4E8")]
	public float radius;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B564", Offset = "0x99B564")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99B564", Offset = "0x99B564")]
	public float density;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B5B8", Offset = "0x99B5B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99B5B8", Offset = "0x99B5B8")]
	public float exponent;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B610", Offset = "0x99B610")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99B610", Offset = "0x99B610")]
	public int maxPixelizationLevel;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B664", Offset = "0x99B664")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B69C", Offset = "0x99B69C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B69C", Offset = "0x99B69C")]
	public bool debugSphere;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB9318C", Offset = "0xB9318C", VA = "0xB9318C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB932FC", Offset = "0xB932FC", VA = "0xB932FC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB9334C", Offset = "0xB9334C", VA = "0xB9334C")]
	public VolumetricSphere()
	{
	}
}
[Token(Token = "0x200000B")]
public class CustomRTRainUpdate : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomRenderTexture RainCustomRT;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int UpdateCount;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCF6AC8", Offset = "0xCF6AC8", VA = "0xCF6AC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCF6AE4", Offset = "0xCF6AE4", VA = "0xCF6AE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCF6B08", Offset = "0xCF6B08", VA = "0xCF6B08")]
	public CustomRTRainUpdate()
	{
	}
}
[Token(Token = "0x200000C")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB60E38", Offset = "0xB60E38", VA = "0xB60E38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB610A0", Offset = "0xB610A0", VA = "0xB610A0")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x200000D")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xB610A8", Offset = "0xB610A8", VA = "0xB610A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xB61124", Offset = "0xB61124", VA = "0xB61124")]
	private void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB613E4", Offset = "0xB613E4", VA = "0xB613E4")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x200000E")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000011")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0xB61448", Offset = "0xB61448", VA = "0xB61448")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003D")]
		[Address(RVA = "0xB61450", Offset = "0xB61450", VA = "0xB61450")]
		set
		{
		}
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB61458", Offset = "0xB61458", VA = "0xB61458")]
	private void Start()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB61498", Offset = "0xB61498", VA = "0xB61498")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB61624", Offset = "0xB61624", VA = "0xB61624")]
	public Smear()
	{
	}
}
[Token(Token = "0x200000F")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xC1BED0", Offset = "0xC1BED0", VA = "0xC1BED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xC1BF88", Offset = "0xC1BF88", VA = "0xC1BF88")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xC1C00C", Offset = "0xC1C00C", VA = "0xC1C00C")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x2000010")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xB66F10", Offset = "0xB66F10", VA = "0xB66F10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xB66FC8", Offset = "0xB66FC8", VA = "0xB66FC8")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x2000011")]
public class AnalyticsExampleMainScreen : MonoBehaviour
{
	[Token(Token = "0x6000046")]
	[Address(RVA = "0xD138E8", Offset = "0xD138E8", VA = "0xD138E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xD14C38", Offset = "0xD14C38", VA = "0xD14C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xD14D54", Offset = "0xD14D54", VA = "0xD14D54")]
	public AnalyticsExampleMainScreen()
	{
	}
}
[Token(Token = "0x2000012")]
public class AnalyticsExampleSecondaryScreen : MonoBehaviour
{
	[Token(Token = "0x6000049")]
	[Address(RVA = "0xD14D5C", Offset = "0xD14D5C", VA = "0xD14D5C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD16010", Offset = "0xD16010", VA = "0xD16010")]
	public AnalyticsExampleSecondaryScreen()
	{
	}
}
[Token(Token = "0x2000013")]
public class PortalEntry : MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider playerCollider;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hmdRig;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hmdEye;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StereoRenderer stereoRenderer;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xC1B380", Offset = "0xC1B380", VA = "0xC1B380")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xC1B704", Offset = "0xC1B704", VA = "0xC1B704")]
	public PortalEntry()
	{
	}
}
[Token(Token = "0x2000014")]
public class CreateStereoRenderer : MonoBehaviour
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xCF6940", Offset = "0xCF6940", VA = "0xCF6940")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xCF6AC0", Offset = "0xCF6AC0", VA = "0xCF6AC0")]
	public CreateStereoRenderer()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997730", Offset = "0x997730")]
public class PortalDoorCollideDetection : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider playerCollider;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PortalSet portalManger;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StereoRenderer stereoRenderer;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xC1B1A8", Offset = "0xC1B1A8", VA = "0xC1B1A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xC1B20C", Offset = "0xC1B20C", VA = "0xC1B20C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xC1B378", Offset = "0xC1B378", VA = "0xC1B378")]
	public PortalDoorCollideDetection()
	{
	}
}
[Token(Token = "0x2000016")]
public class PortalSet : MonoBehaviour
{
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999308", Offset = "0x999308")]
	private sealed class <MovePlayer>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortalSet <>4__this;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StereoRenderer stereoRenderer;

		[Token(Token = "0x170002E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xC1BC54", Offset = "0xC1BC54", VA = "0xC1BC54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0xC1BCC0", Offset = "0xC1BCC0", VA = "0xC1BCC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xC1B7A8", Offset = "0xC1B7A8", VA = "0xC1B7A8")]
		[DebuggerHidden]
		public <MovePlayer>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xC1B7DC", Offset = "0xC1B7DC", VA = "0xC1B7DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xC1B7E0", Offset = "0xC1B7E0", VA = "0xC1B7E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xC1BC5C", Offset = "0xC1BC5C", VA = "0xC1BC5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hmdRig;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hmdEye;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isColliding;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xC1B334", Offset = "0xC1B334", VA = "0xC1B334")]
	public void OnPlayerEnter(StereoRenderer stereoRenderer)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xC1B70C", Offset = "0xC1B70C", VA = "0xC1B70C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4944", Offset = "0x9A4944")]
	private IEnumerator MovePlayer(StereoRenderer stereoRenderer)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xC1B7D4", Offset = "0xC1B7D4", VA = "0xC1B7D4")]
	public PortalSet()
	{
	}
}
[Token(Token = "0x2000017")]
public class FollowHmd : MonoBehaviour
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hmdCamera;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xD06244", Offset = "0xD06244", VA = "0xD06244")]
	private void Update()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xD062A0", Offset = "0xD062A0", VA = "0xD062A0")]
	public FollowHmd()
	{
	}
}
[Token(Token = "0x2000018")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_framesNeededToUpdate;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Camera, Camera> m_ReflectionCameras;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture m_ReflectionTextureLeft;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture m_ReflectionTextureRight;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_frameCounter;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xE02670", Offset = "0xE02670", VA = "0xE02670")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xE02860", Offset = "0xE02860", VA = "0xE02860")]
	private void RenderCamera(Camera cam, Renderer rend, Camera.StereoscopicEye eye, ref RenderTexture reflectionTexture)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE03F4C", Offset = "0xE03F4C", VA = "0xE03F4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xE035C8", Offset = "0xE035C8", VA = "0xE035C8")]
	private void CopyCameraProperties(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE02FE4", Offset = "0xE02FE4", VA = "0xE02FE4")]
	private void CreateMirrorObjects(Camera currentCamera, Camera.StereoscopicEye eye, out Camera reflectionCamera, ref RenderTexture reflectionTexture)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE04178", Offset = "0xE04178", VA = "0xE04178")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE03B4C", Offset = "0xE03B4C", VA = "0xE03B4C")]
	private Vector4 CameraSpacePlane(Matrix4x4 worldToCameraMatrix, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE038A8", Offset = "0xE038A8", VA = "0xE038A8")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xE03CE4", Offset = "0xE03CE4", VA = "0xE03CE4")]
	private static void MakeProjectionMatrixOblique(ref Matrix4x4 matrix, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE04198", Offset = "0xE04198", VA = "0xE04198")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x2000019")]
[ExecuteInEditMode]
public class MirrorReflection1 : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_framesNeededToUpdate;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Camera, Camera> m_ReflectionCameras;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture m_ReflectionTextureLeft;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture m_ReflectionTextureRight;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_frameCounter;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE04240", Offset = "0xE04240", VA = "0xE04240")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE04430", Offset = "0xE04430", VA = "0xE04430")]
	private void RenderCamera(Camera cam, Renderer rend, Camera.StereoscopicEye eye, ref RenderTexture reflectionTexture)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE05DC8", Offset = "0xE05DC8", VA = "0xE05DC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE05218", Offset = "0xE05218", VA = "0xE05218")]
	private void CopyCameraProperties(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE04C34", Offset = "0xE04C34", VA = "0xE04C34")]
	private void CreateMirrorObjects(Camera currentCamera, Camera.StereoscopicEye eye, out Camera reflectionCamera, ref RenderTexture reflectionTexture)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE05FF4", Offset = "0xE05FF4", VA = "0xE05FF4")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE0579C", Offset = "0xE0579C", VA = "0xE0579C")]
	private Vector4 CameraSpacePlane(Matrix4x4 worldToCameraMatrix, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE054F8", Offset = "0xE054F8", VA = "0xE054F8")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE05B60", Offset = "0xE05B60", VA = "0xE05B60")]
	private static void MakeProjectionMatrixOblique(ref Matrix4x4 matrix, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE05934", Offset = "0xE05934", VA = "0xE05934")]
	protected Matrix4x4 HMDMatrix4x4ToMatrix4x4(HmdMatrix44_t input)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE06014", Offset = "0xE06014", VA = "0xE06014")]
	public MirrorReflection1()
	{
	}
}
[Token(Token = "0x200001A")]
public class UI_SktBoxRot : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UI_Result;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hmd_Rot;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform skyBox_Rot;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE17950", Offset = "0xE17950", VA = "0xE17950")]
	private void Update()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE179FC", Offset = "0xE179FC", VA = "0xE179FC")]
	public UI_SktBoxRot()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9977B4", Offset = "0x9977B4")]
public class FastList<T>
{
	[Token(Token = "0x20003F8")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999318", Offset = "0x999318")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170002E8")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001AB3")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170002E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AB5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AB0")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001AB1")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AB2")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB4")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000012")]
	public int Count
	{
		[Token(Token = "0x6000072")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000073")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public T Item
	{
		[Token(Token = "0x6000074")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000075")]
		set
		{
		}
	}

	[Token(Token = "0x6000070")]
	public FastList()
	{
	}

	[Token(Token = "0x6000071")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000076")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000077")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000078")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000079")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600007A")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600007B")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600007C")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600007E")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600007F")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000080")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000081")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000083")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A49A8", Offset = "0x9A49A8")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000086")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000087")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000088")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000089")]
	public void Release()
	{
	}
}
[Token(Token = "0x200001C")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xBAFC54", Offset = "0xBAFC54", VA = "0xBAFC54")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200001D")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xBAFC20", Offset = "0xBAFC20", VA = "0xBAFC20")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xC13850", Offset = "0xC13850", VA = "0xC13850")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xC139BC", Offset = "0xC139BC", VA = "0xC139BC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xC13D60", Offset = "0xC13D60", VA = "0xC13D60")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xC13F20", Offset = "0xC13F20", VA = "0xC13F20", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC13F4C", Offset = "0xC13F4C", VA = "0xC13F4C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200001F")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC1BCC8", Offset = "0xC1BCC8", VA = "0xC1BCC8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC1BD54", Offset = "0xC1BD54", VA = "0xC1BD54")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC1BEC8", Offset = "0xC1BEC8", VA = "0xC1BEC8")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000020")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000014")]
	public bool IsVisible
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0xD0E488", Offset = "0xD0E488", VA = "0xD0E488")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000095")]
		[Address(RVA = "0xD0E490", Offset = "0xD0E490", VA = "0xD0E490")]
		set
		{
		}
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xD0E5C4", Offset = "0xD0E5C4", VA = "0xD0E5C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xD0E7EC", Offset = "0xD0E7EC", VA = "0xD0E7EC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xD0E7F4", Offset = "0xD0E7F4", VA = "0xD0E7F4")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000021")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20003FA")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xC1D3DC", Offset = "0xC1D3DC", VA = "0xC1D3DC")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003FB")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2494", Offset = "0x9A2494")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A24AC", Offset = "0x9A24AC")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A24C4", Offset = "0x9A24C4")]
		public float LatencyWeight;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A24DC", Offset = "0x9A24DC")]
		public int MaxSamples;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xC1D3E4", Offset = "0xC1D3E4", VA = "0xC1D3E4")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xC1D598", Offset = "0xC1D598", VA = "0xC1D598")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xC1C9E4", Offset = "0xC1C9E4", VA = "0xC1C9E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xC1CB28", Offset = "0xC1CB28", VA = "0xC1CB28")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xC1CED0", Offset = "0xC1CED0", VA = "0xC1CED0")]
	private void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xC1CE24", Offset = "0xC1CE24", VA = "0xC1CE24")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xC1D144", Offset = "0xC1D144", VA = "0xC1D144")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xC1D4F4", Offset = "0xC1D4F4", VA = "0xC1D4F4")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class P2PManager
{
	[Token(Token = "0x20003FC")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001B0A")]
		Update = 1
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xC150D0", Offset = "0xC150D0", VA = "0xC150D0")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xC15190", Offset = "0xC15190", VA = "0xC15190")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xC15274", Offset = "0xC15274", VA = "0xC15274")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xC152F8", Offset = "0xC152F8", VA = "0xC152F8")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xC15458", Offset = "0xC15458", VA = "0xC15458")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xC15748", Offset = "0xC15748", VA = "0xC15748")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xC15B48", Offset = "0xC15B48", VA = "0xC15B48")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xC15DFC", Offset = "0xC15DFC", VA = "0xC15DFC")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xC15910", Offset = "0xC15910", VA = "0xC15910")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xC15D24", Offset = "0xC15D24", VA = "0xC15D24")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xC15A00", Offset = "0xC15A00", VA = "0xC15A00")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xC1602C", Offset = "0xC1602C", VA = "0xC1602C")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xC15960", Offset = "0xC15960", VA = "0xC15960")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xC15D70", Offset = "0xC15D70", VA = "0xC15D70")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xC15AA8", Offset = "0xC15AA8", VA = "0xC15AA8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xC160B8", Offset = "0xC160B8", VA = "0xC160B8")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000023")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xC19800", Offset = "0xC19800", VA = "0xC19800", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xC19848", Offset = "0xC19848", VA = "0xC19848", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xC19880", Offset = "0xC19880", VA = "0xC19880", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xC198A8", Offset = "0xC198A8", VA = "0xC198A8")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xC19A4C", Offset = "0xC19A4C", VA = "0xC19A4C")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xC19AD0", Offset = "0xC19AD0", VA = "0xC19AD0")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xC19B24", Offset = "0xC19B24", VA = "0xC19B24")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000024")]
public class RemotePlayer
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xC1D62C", Offset = "0xC1D62C", VA = "0xC1D62C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000025")]
public class RoomManager
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xC1E83C", Offset = "0xC1E83C", VA = "0xC1E83C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xC1E908", Offset = "0xC1E908", VA = "0xC1E908")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xC1EA70", Offset = "0xC1EA70", VA = "0xC1EA70")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xC1EB84", Offset = "0xC1EB84", VA = "0xC1EB84")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xC1EC3C", Offset = "0xC1EC3C", VA = "0xC1EC3C")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xC1ED68", Offset = "0xC1ED68", VA = "0xC1ED68")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xC1EAA0", Offset = "0xC1EAA0", VA = "0xC1EAA0")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xC1EDF8", Offset = "0xC1EDF8", VA = "0xC1EDF8")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xC1F4F4", Offset = "0xC1F4F4", VA = "0xC1F4F4")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xC1F81C", Offset = "0xC1F81C", VA = "0xC1F81C")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xC1F0F0", Offset = "0xC1F0F0", VA = "0xC1F0F0")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000026")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20003FD")]
	public enum State
	{
		[Token(Token = "0x4001B0C")]
		INITIALIZING,
		[Token(Token = "0x4001B0D")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001B0E")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001B0F")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001B10")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001B11")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001B12")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001B13")]
		SHUTDOWN
	}

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000015")]
	public static State CurrentState
	{
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xB636B4", Offset = "0xB636B4", VA = "0xB636B4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000016")]
	public static ulong MyID
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xB6372C", Offset = "0xB6372C", VA = "0xB6372C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000017")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xB63808", Offset = "0xB63808", VA = "0xB63808")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xB61728", Offset = "0xB61728", VA = "0xB61728", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xB61AEC", Offset = "0xB61AEC", VA = "0xB61AEC", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xB6227C", Offset = "0xB6227C", VA = "0xB6227C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB62550", Offset = "0xB62550", VA = "0xB62550", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xB62554", Offset = "0xB62554", VA = "0xB62554")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB6264C", Offset = "0xB6264C", VA = "0xB6264C")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB62DC0", Offset = "0xB62DC0", VA = "0xB62DC0")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xB63310", Offset = "0xB63310", VA = "0xB63310")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xB634EC", Offset = "0xB634EC", VA = "0xB634EC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB63644", Offset = "0xB63644", VA = "0xB63644")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB61E6C", Offset = "0xB61E6C", VA = "0xB61E6C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB623DC", Offset = "0xB623DC", VA = "0xB623DC")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xB61F20", Offset = "0xB61F20", VA = "0xB61F20")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xB63920", Offset = "0xB63920", VA = "0xB63920")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xB63AA4", Offset = "0xB63AA4", VA = "0xB63AA4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xB63B90", Offset = "0xB63B90", VA = "0xB63B90")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xB63CC4", Offset = "0xB63CC4", VA = "0xB63CC4")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xB63D98", Offset = "0xB63D98", VA = "0xB63D98")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB62490", Offset = "0xB62490", VA = "0xB62490")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB641E0", Offset = "0xB641E0", VA = "0xB641E0")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB64270", Offset = "0xB64270", VA = "0xB64270")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB64000", Offset = "0xB64000", VA = "0xB64000")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB6446C", Offset = "0xB6446C", VA = "0xB6446C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB616A0", Offset = "0xB616A0", VA = "0xB616A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A4A0C", Offset = "0x9A4A0C")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB645B4", Offset = "0xB645B4", VA = "0xB645B4")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB64680", Offset = "0xB64680", VA = "0xB64680")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000027")]
public class VoipManager
{
	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB92B14", Offset = "0xB92B14", VA = "0xB92B14")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB92BD4", Offset = "0xB92BD4", VA = "0xB92BD4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB92CB8", Offset = "0xB92CB8", VA = "0xB92CB8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB92D3C", Offset = "0xB92D3C", VA = "0xB92D3C")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB92E9C", Offset = "0xB92E9C", VA = "0xB92E9C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000028")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xD0E0E8", Offset = "0xD0E0E8", VA = "0xD0E0E8")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xD0E16C", Offset = "0xD0E16C", VA = "0xD0E16C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xD0E2F4", Offset = "0xD0E2F4", VA = "0xD0E2F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xD0E358", Offset = "0xD0E358", VA = "0xD0E358")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xD0E1A8", Offset = "0xD0E1A8", VA = "0xD0E1A8")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xD0E420", Offset = "0xD0E420", VA = "0xD0E420")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xD0E480", Offset = "0xD0E480", VA = "0xD0E480")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000029")]
public class AvatarLayer
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xD16DA0", Offset = "0xD16DA0", VA = "0xD16DA0")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC16388", Offset = "0xC16388", VA = "0xC16388")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20003FE")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xC06310", Offset = "0xC06310", VA = "0xC06310")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20003FF")]
	public enum HandType
	{
		[Token(Token = "0x4001B16")]
		Right,
		[Token(Token = "0x4001B17")]
		Left,
		[Token(Token = "0x4001B18")]
		Max
	}

	[Token(Token = "0x2000400")]
	public enum HandJoint
	{
		[Token(Token = "0x4001B1A")]
		HandBase,
		[Token(Token = "0x4001B1B")]
		IndexBase,
		[Token(Token = "0x4001B1C")]
		IndexTip,
		[Token(Token = "0x4001B1D")]
		ThumbBase,
		[Token(Token = "0x4001B1E")]
		ThumbTip,
		[Token(Token = "0x4001B1F")]
		Max
	}

	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999328", Offset = "0x999328")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170002EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xC0629C", Offset = "0xC0629C", VA = "0xC0629C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xC06308", Offset = "0xC06308", VA = "0xC06308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xC060CC", Offset = "0xC060CC", VA = "0xC060CC")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xC060F8", Offset = "0xC060F8", VA = "0xC060F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xC060FC", Offset = "0xC060FC", VA = "0xC060FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xC062A4", Offset = "0xC062A4", VA = "0xC062A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B70C", Offset = "0x99B70C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B744", Offset = "0x99B744")]
	public bool EnableBody;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B77C", Offset = "0x99B77C")]
	public bool RecordPackets;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B7B4", Offset = "0x99B7B4")]
	public bool StartWithControllers;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B7EC", Offset = "0x99B7EC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B7EC", Offset = "0x99B7EC")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B85C", Offset = "0x99B85C")]
	private bool CombineMeshes;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B894", Offset = "0x99B894")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B8CC", Offset = "0x99B8CC")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99B904", Offset = "0x99B904")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B93C", Offset = "0x99B93C")]
	public bool EnableLaughter;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000E3")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000E5")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000E6")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000E7")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000E8")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000E9")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xC4F498", Offset = "0xC4F498", VA = "0xC4F498")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xC4F8B8", Offset = "0xC4F8B8", VA = "0xC4F8B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xC4F944", Offset = "0xC4F944", VA = "0xC4F944")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xC4F9B4", Offset = "0xC4F9B4", VA = "0xC4F9B4")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xC4FADC", Offset = "0xC4FADC", VA = "0xC4FADC")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xC4FBC4", Offset = "0xC4FBC4", VA = "0xC4FBC4")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xC4FCA8", Offset = "0xC4FCA8", VA = "0xC4FCA8")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xC4FE94", Offset = "0xC4FE94", VA = "0xC4FE94")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xC4FF5C", Offset = "0xC4FF5C", VA = "0xC4FF5C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xC4FFE0", Offset = "0xC4FFE0", VA = "0xC4FFE0")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xC500CC", Offset = "0xC500CC", VA = "0xC500CC")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xC5015C", Offset = "0xC5015C", VA = "0xC5015C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xC50288", Offset = "0xC50288", VA = "0xC50288")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xC502E8", Offset = "0xC502E8", VA = "0xC502E8")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000FC")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xC50770", Offset = "0xC50770", VA = "0xC50770")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xC50AD4", Offset = "0xC50AD4", VA = "0xC50AD4")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xC50C88", Offset = "0xC50C88", VA = "0xC50C88")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xC50F58", Offset = "0xC50F58", VA = "0xC50F58")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xC51048", Offset = "0xC51048", VA = "0xC51048")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xC51404", Offset = "0xC51404", VA = "0xC51404")]
	private void Start()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xC51728", Offset = "0xC51728", VA = "0xC51728")]
	private void Update()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xC52178", Offset = "0xC52178", VA = "0xC52178")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xC521C0", Offset = "0xC521C0", VA = "0xC521C0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xC512CC", Offset = "0xC512CC", VA = "0xC512CC")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xC51368", Offset = "0xC51368", VA = "0xC51368")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xC521F0", Offset = "0xC521F0", VA = "0xC521F0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC51AB0", Offset = "0xC51AB0", VA = "0xC51AB0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC52440", Offset = "0xC52440", VA = "0xC52440")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xC52258", Offset = "0xC52258", VA = "0xC52258")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xC52704", Offset = "0xC52704", VA = "0xC52704")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xC52B40", Offset = "0xC52B40", VA = "0xC52B40")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xC52D90", Offset = "0xC52D90", VA = "0xC52D90")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xC52ED4", Offset = "0xC52ED4", VA = "0xC52ED4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xC53094", Offset = "0xC53094", VA = "0xC53094")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xC51C6C", Offset = "0xC51C6C", VA = "0xC51C6C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xC53170", Offset = "0xC53170", VA = "0xC53170")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xC51AC0", Offset = "0xC51AC0", VA = "0xC51AC0")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xC53264", Offset = "0xC53264", VA = "0xC53264")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xC53890", Offset = "0xC53890", VA = "0xC53890")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xC53D68", Offset = "0xC53D68", VA = "0xC53D68")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xC53DE8", Offset = "0xC53DE8", VA = "0xC53DE8")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xC53E6C", Offset = "0xC53E6C", VA = "0xC53E6C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xC5200C", Offset = "0xC5200C", VA = "0xC5200C")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xC53330", Offset = "0xC53330", VA = "0xC53330")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xC54328", Offset = "0xC54328", VA = "0xC54328")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4A70", Offset = "0x9A4A70")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xC543A8", Offset = "0xC543A8", VA = "0xC543A8")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC541C8", Offset = "0xC541C8", VA = "0xC541C8")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC54470", Offset = "0xC54470", VA = "0xC54470")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC5455C", Offset = "0xC5455C", VA = "0xC5455C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC53F44", Offset = "0xC53F44", VA = "0xC53F44")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC54648", Offset = "0xC54648", VA = "0xC54648")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200002C")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC06394", Offset = "0xC06394", VA = "0xC06394")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200002D")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC06450", Offset = "0xC06450", VA = "0xC06450")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC07788", Offset = "0xC07788", VA = "0xC07788")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC07320", Offset = "0xC07320", VA = "0xC07320")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xC070B0", Offset = "0xC070B0", VA = "0xC070B0")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xC07194", Offset = "0xC07194", VA = "0xC07194")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xC07A00", Offset = "0xC07A00", VA = "0xC07A00")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000106")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xC07F90", Offset = "0xC07F90", VA = "0xC07F90")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xC08214", Offset = "0xC08214", VA = "0xC08214")]
	private void Update()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xC08690", Offset = "0xC08690", VA = "0xC08690")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xC087A4", Offset = "0xC087A4", VA = "0xC087A4")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xC08914", Offset = "0xC08914", VA = "0xC08914")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xC08A40", Offset = "0xC08A40", VA = "0xC08A40")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000031")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xC08AA4", Offset = "0xC08AA4", VA = "0xC08AA4")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xC08340", Offset = "0xC08340", VA = "0xC08340")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xC090AC", Offset = "0xC090AC", VA = "0xC090AC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xC09110", Offset = "0xC09110", VA = "0xC09110")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xC098FC", Offset = "0xC098FC", VA = "0xC098FC")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xC086F4", Offset = "0xC086F4", VA = "0xC086F4")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000032")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000402")]
	public enum PacketMode
	{
		[Token(Token = "0x4001B24")]
		SDK,
		[Token(Token = "0x4001B25")]
		Unity
	}

	[Token(Token = "0x2000403")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xC0B41C", Offset = "0xC0B41C", VA = "0xC0B41C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000404")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xC0B574", Offset = "0xC0B574", VA = "0xC0B574")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xC0B0E8", Offset = "0xC0B0E8", VA = "0xC0B0E8")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000137")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xC0B0F8", Offset = "0xC0B0F8", VA = "0xC0B0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xC0B18C", Offset = "0xC0B18C", VA = "0xC0B18C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xC0B404", Offset = "0xC0B404", VA = "0xC0B404")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xC0B40C", Offset = "0xC0B40C", VA = "0xC0B40C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000033")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xC0B938", Offset = "0xC0B938", VA = "0xC0B938")]
	private void Update()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xC0BAA4", Offset = "0xC0BAA4", VA = "0xC0BAA4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xC0BB10", Offset = "0xC0BB10", VA = "0xC0BB10")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xC0BC7C", Offset = "0xC0BC7C", VA = "0xC0BC7C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xC0C020", Offset = "0xC0C020", VA = "0xC0C020")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xC0C254", Offset = "0xC0C254", VA = "0xC0C254", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xC0C280", Offset = "0xC0C280", VA = "0xC0C280")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000405")]
	public enum TextureType
	{
		[Token(Token = "0x4001B36")]
		DiffuseTextures,
		[Token(Token = "0x4001B37")]
		NormalMaps,
		[Token(Token = "0x4001B38")]
		RoughnessMaps,
		[Token(Token = "0x4001B39")]
		Count
	}

	[Token(Token = "0x2000406")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000407")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000408")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000409")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xC0E600", Offset = "0xC0E600", VA = "0xC0E600")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999338", Offset = "0x999338")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170002EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0xC0F020", Offset = "0xC0F020", VA = "0xC0F020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xC0F08C", Offset = "0xC0F08C", VA = "0xC0F08C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xC0E414", Offset = "0xC0E414", VA = "0xC0E414")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xC0E944", Offset = "0xC0E944", VA = "0xC0E944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xC0E948", Offset = "0xC0E948", VA = "0xC0E948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xC0F028", Offset = "0xC0F028", VA = "0xC0F028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400013A")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400013B")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400013C")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400013D")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xC0C330", Offset = "0xC0C330", VA = "0xC0C330")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xC0C500", Offset = "0xC0C500", VA = "0xC0C500")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xC0C540", Offset = "0xC0C540", VA = "0xC0C540")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xC0CCA4", Offset = "0xC0CCA4", VA = "0xC0CCA4")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xC0CF48", Offset = "0xC0CF48", VA = "0xC0CF48")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xC0C5D4", Offset = "0xC0C5D4", VA = "0xC0C5D4")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xC0D040", Offset = "0xC0D040", VA = "0xC0D040")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xC0C9FC", Offset = "0xC0C9FC", VA = "0xC0C9FC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xC0D2DC", Offset = "0xC0D2DC", VA = "0xC0D2DC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xC0D558", Offset = "0xC0D558", VA = "0xC0D558")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xC0D658", Offset = "0xC0D658", VA = "0xC0D658")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xC0D690", Offset = "0xC0D690", VA = "0xC0D690")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xC0CC08", Offset = "0xC0CC08", VA = "0xC0CC08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4AD4", Offset = "0x9A4AD4")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xC0E440", Offset = "0xC0E440", VA = "0xC0E440")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000018")]
	public float Duration
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0xC0F094", Offset = "0xC0F094", VA = "0xC0F094")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000019")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0xC0F104", Offset = "0xC0F104", VA = "0xC0F104")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xC0F18C", Offset = "0xC0F18C", VA = "0xC0F18C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xC0F274", Offset = "0xC0F274", VA = "0xC0F274")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xC0F3EC", Offset = "0xC0F3EC", VA = "0xC0F3EC")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xC0F514", Offset = "0xC0F514", VA = "0xC0F514")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xC0F5E8", Offset = "0xC0F5E8", VA = "0xC0F5E8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xC0F7F8", Offset = "0xC0F7F8", VA = "0xC0F7F8")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xC0FA54", Offset = "0xC0FA54", VA = "0xC0FA54")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000037")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD26974", Offset = "0xD26974", VA = "0xD26974")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xD26A8C", Offset = "0xD26A8C", VA = "0xD26A8C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xD26C44", Offset = "0xD26C44", VA = "0xD26C44")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xD26B00", Offset = "0xD26B00", VA = "0xD26B00")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xD26B98", Offset = "0xD26B98", VA = "0xD26B98")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000038")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000160")]
	[Address(RVA = "0xD2655C", Offset = "0xD2655C", VA = "0xD2655C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xD26914", Offset = "0xD26914", VA = "0xD26914")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xD26704", Offset = "0xD26704", VA = "0xD26704")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xD26780", Offset = "0xD26780", VA = "0xD26780")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xD26820", Offset = "0xD26820", VA = "0xD26820")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000039")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000145")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000146")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xC0FC4C", Offset = "0xC0FC4C", VA = "0xC0FC4C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xC0FCD8", Offset = "0xC0FCD8", VA = "0xC0FCD8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xC0FCF4", Offset = "0xC0FCF4", VA = "0xC0FCF4")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xC0FEA8", Offset = "0xC0FEA8", VA = "0xC0FEA8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xC1009C", Offset = "0xC1009C", VA = "0xC1009C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200003A")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xC1012C", Offset = "0xC1012C", VA = "0xC1012C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xC10218", Offset = "0xC10218", VA = "0xC10218")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xC10414", Offset = "0xC10414", VA = "0xC10414")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xC107BC", Offset = "0xC107BC", VA = "0xC107BC")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xC108BC", Offset = "0xC108BC", VA = "0xC108BC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200003B")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400014F")]
	Body = 1,
	[Token(Token = "0x4000150")]
	Hands = 2,
	[Token(Token = "0x4000151")]
	Base = 4,
	[Token(Token = "0x4000152")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000153")]
	Expressive = 0x20,
	[Token(Token = "0x4000154")]
	All = -1
}
[Token(Token = "0x200003C")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000156")]
	AvatarSpecification,
	[Token(Token = "0x4000157")]
	AssetLoaded,
	[Token(Token = "0x4000158")]
	Count
}
[Token(Token = "0x200003D")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200003E")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200003F")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x400015E")]
	Mesh,
	[Token(Token = "0x400015F")]
	Texture,
	[Token(Token = "0x4000160")]
	Pose,
	[Token(Token = "0x4000161")]
	Material,
	[Token(Token = "0x4000162")]
	CombinedMesh,
	[Token(Token = "0x4000163")]
	PBSMaterial,
	[Token(Token = "0x4000164")]
	FailedLoad,
	[Token(Token = "0x4000165")]
	Count
}
[Token(Token = "0x2000040")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000041")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000042")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000043")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000044")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000045")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400019A")]
	RGB24,
	[Token(Token = "0x400019B")]
	DXT1,
	[Token(Token = "0x400019C")]
	DXT5,
	[Token(Token = "0x400019D")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400019E")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400019F")]
	Count
}
[Token(Token = "0x2000046")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000047")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001A7")]
	SkinnedMeshRender,
	[Token(Token = "0x40001A8")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001A9")]
	ProjectorRender,
	[Token(Token = "0x40001AA")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001AB")]
	Count
}
[Token(Token = "0x2000048")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001AD")]
	Unknown,
	[Token(Token = "0x40001AE")]
	Default,
	[Token(Token = "0x40001AF")]
	Verbose,
	[Token(Token = "0x40001B0")]
	Debug,
	[Token(Token = "0x40001B1")]
	Info,
	[Token(Token = "0x40001B2")]
	Warn,
	[Token(Token = "0x40001B3")]
	Error,
	[Token(Token = "0x40001B4")]
	Fatal,
	[Token(Token = "0x40001B5")]
	Silent
}
[Token(Token = "0x2000049")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200004A")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001BA")]
	One = 1,
	[Token(Token = "0x40001BB")]
	Two = 2,
	[Token(Token = "0x40001BC")]
	Three = 4,
	[Token(Token = "0x40001BD")]
	Joystick = 8
}
[Token(Token = "0x200004B")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001BF")]
	One = 1,
	[Token(Token = "0x40001C0")]
	Two = 2,
	[Token(Token = "0x40001C1")]
	Joystick = 4,
	[Token(Token = "0x40001C2")]
	ThumbRest = 8,
	[Token(Token = "0x40001C3")]
	Index = 0x10,
	[Token(Token = "0x40001C4")]
	Pointing = 0x40,
	[Token(Token = "0x40001C5")]
	ThumbUp = 0x80
}
[Token(Token = "0x200004C")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200004E")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200004F")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000050")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000051")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000054")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001E5")]
	Add,
	[Token(Token = "0x40001E6")]
	Multiply,
	[Token(Token = "0x40001E7")]
	Count
}
[Token(Token = "0x2000055")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001E9")]
	Color,
	[Token(Token = "0x40001EA")]
	Texture,
	[Token(Token = "0x40001EB")]
	TextureSingleChannel,
	[Token(Token = "0x40001EC")]
	Parallax,
	[Token(Token = "0x40001ED")]
	Count
}
[Token(Token = "0x2000056")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001EF")]
	None,
	[Token(Token = "0x40001F0")]
	Positional,
	[Token(Token = "0x40001F1")]
	ViewReflection,
	[Token(Token = "0x40001F2")]
	Fresnel,
	[Token(Token = "0x40001F3")]
	Pulse,
	[Token(Token = "0x40001F4")]
	Count
}
[Token(Token = "0x2000057")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001F6")]
	Touch,
	[Token(Token = "0x40001F7")]
	Malibu,
	[Token(Token = "0x40001F8")]
	Go,
	[Token(Token = "0x40001F9")]
	Quest,
	[Token(Token = "0x40001FA")]
	Count
}
[Token(Token = "0x2000058")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001FC")]
	Lowest = 1,
	[Token(Token = "0x40001FD")]
	Medium = 3,
	[Token(Token = "0x40001FE")]
	Highest = 5
}
[Token(Token = "0x2000059")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000200")]
	Unknown = -1,
	[Token(Token = "0x4000201")]
	One,
	[Token(Token = "0x4000202")]
	Two
}
[Token(Token = "0x200005A")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x175267C", Offset = "0x175267C", VA = "0x175267C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA72A68", Offset = "0xA72A68", VA = "0xA72A68", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA72A70", Offset = "0xA72A70", VA = "0xA72A70", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005B")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x17529AC", Offset = "0x17529AC", VA = "0x17529AC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA72D10", Offset = "0xA72D10", VA = "0xA72D10", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA72D18", Offset = "0xA72D18", VA = "0xA72D18", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005C")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1751D24", Offset = "0x1751D24", VA = "0x1751D24")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA727C0", Offset = "0xA727C0", VA = "0xA727C0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xA727C8", Offset = "0xA727C8", VA = "0xA727C8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005D")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1752EE8", Offset = "0x1752EE8", VA = "0x1752EE8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xA73610", Offset = "0xA73610", VA = "0xA73610", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA73618", Offset = "0xA73618", VA = "0xA73618", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005E")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xC0639C", Offset = "0xC0639C", VA = "0xC0639C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200005F")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000060")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000237")]
	FirstPerson = 1,
	[Token(Token = "0x4000238")]
	ThirdPerson = 2,
	[Token(Token = "0x4000239")]
	SelfOccluding = 4
}
[Token(Token = "0x2000061")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000062")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000064")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000065")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400024F")]
	Default,
	[Token(Token = "0x4000250")]
	GripSphere,
	[Token(Token = "0x4000251")]
	GripCube,
	[Token(Token = "0x4000252")]
	Count
}
[Token(Token = "0x2000066")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000254")]
	Body,
	[Token(Token = "0x4000255")]
	Clothing,
	[Token(Token = "0x4000256")]
	Eyewear,
	[Token(Token = "0x4000257")]
	Hair,
	[Token(Token = "0x4000258")]
	Beard,
	[Token(Token = "0x4000259")]
	Count
}
[Token(Token = "0x2000067")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000068")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200006A")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200006B")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000263")]
	AvatarHead,
	[Token(Token = "0x4000264")]
	AvatarHand,
	[Token(Token = "0x4000265")]
	Object,
	[Token(Token = "0x4000266")]
	ObjectStatic,
	[Token(Token = "0x4000267")]
	Count
}
[Token(Token = "0x200006C")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200006D")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200006E")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200006F")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000070")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000273")]
	Point,
	[Token(Token = "0x4000274")]
	Direction,
	[Token(Token = "0x4000275")]
	Spot,
	[Token(Token = "0x4000276")]
	Count
}
[Token(Token = "0x2000071")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000072")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000073")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000074")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000075")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400028C")]
	None = 0u,
	[Token(Token = "0x400028D")]
	GazeTarget = 1u,
	[Token(Token = "0x400028E")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000076")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000077")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000078")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000079")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200007A")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200007B")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200040B")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xA4F378", Offset = "0xA4F378", VA = "0xA4F378")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002A3")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700001A")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0xC09990", Offset = "0xC09990", VA = "0xC09990")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xC108CC", Offset = "0xC108CC", VA = "0xC108CC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xC10B3C", Offset = "0xC10B3C", VA = "0xC10B3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC10BB0", Offset = "0xC10BB0", VA = "0xC10BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xC11404", Offset = "0xC11404", VA = "0xC11404")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xC11460", Offset = "0xC11460", VA = "0xC11460")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xC114BC", Offset = "0xC114BC", VA = "0xC114BC")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xC11524", Offset = "0xC11524", VA = "0xC11524")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xC1158C", Offset = "0xC1158C", VA = "0xC1158C")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xC1123C", Offset = "0xC1123C", VA = "0xC1123C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xC1167C", Offset = "0xC1167C", VA = "0xC1167C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xC11798", Offset = "0xC11798", VA = "0xC11798")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xC09B54", Offset = "0xC09B54", VA = "0xC09B54")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xC1187C", Offset = "0xC1187C", VA = "0xC1187C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xC10B14", Offset = "0xC10B14", VA = "0xC10B14")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xC0CD0C", Offset = "0xC0CD0C", VA = "0xC0CD0C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xC11954", Offset = "0xC11954", VA = "0xC11954")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200007C")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700001B")]
	public static string AppID
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xC11914", Offset = "0xC11914", VA = "0xC11914")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xC11B1C", Offset = "0xC11B1C", VA = "0xC11B1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public static string MobileAppID
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xC11934", Offset = "0xC11934", VA = "0xC11934")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xC11B4C", Offset = "0xC11B4C", VA = "0xC11B4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xC119E8", Offset = "0xC119E8", VA = "0xC119E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xC11B7C", Offset = "0xC11B7C", VA = "0xC11B7C")]
		set
		{
		}
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xC11BD4", Offset = "0xC11BD4", VA = "0xC11BD4")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200007D")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC133F0", Offset = "0xC133F0", VA = "0xC133F0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC08AAC", Offset = "0xC08AAC", VA = "0xC08AAC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC13574", Offset = "0xC13574", VA = "0xC13574")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC136D8", Offset = "0xC136D8", VA = "0xC136D8")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200007E")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC136E8", Offset = "0xC136E8", VA = "0xC136E8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC08CE0", Offset = "0xC08CE0", VA = "0xC08CE0")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC13840", Offset = "0xC13840", VA = "0xC13840")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200007F")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002B2")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002B3")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002B4")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xC11C44", Offset = "0xC11C44", VA = "0xC11C44")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xC08E7C", Offset = "0xC08E7C", VA = "0xC08E7C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xC12BA0", Offset = "0xC12BA0", VA = "0xC12BA0")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xC12290", Offset = "0xC12290", VA = "0xC12290")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xC12058", Offset = "0xC12058", VA = "0xC12058")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xC12170", Offset = "0xC12170", VA = "0xC12170")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xC133E0", Offset = "0xC133E0", VA = "0xC133E0")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000080")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200040C")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200040D")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xA4F43C", Offset = "0xA4F43C", VA = "0xA4F43C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200040E")]
	public struct TextureSet
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xA4F520", Offset = "0xA4F520", VA = "0xA4F520")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999348", Offset = "0x999348")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170002EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xC14E84", Offset = "0xC14E84", VA = "0xC14E84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xC14EF0", Offset = "0xC14EF0", VA = "0xC14EF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xC147C0", Offset = "0xC147C0", VA = "0xC147C0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xC14970", Offset = "0xC14970", VA = "0xC14970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xC14974", Offset = "0xC14974", VA = "0xC14974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xC14E8C", Offset = "0xC14E8C", VA = "0xC14E8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002B8")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002B9")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002BC")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002BD")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002BE")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002BF")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002C0")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002C1")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002C2")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xC1400C", Offset = "0xC1400C", VA = "0xC1400C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xC14464", Offset = "0xC14464", VA = "0xC14464")]
	public void Update()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xC0EFCC", Offset = "0xC0EFCC", VA = "0xC0EFCC")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xC0D130", Offset = "0xC0D130", VA = "0xC0D130")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xC145F0", Offset = "0xC145F0", VA = "0xC145F0")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xC0CD90", Offset = "0xC0CD90", VA = "0xC0CD90")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xC0CF98", Offset = "0xC0CF98", VA = "0xC0CF98")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xC1470C", Offset = "0xC1470C", VA = "0xC1470C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4BD8", Offset = "0x9A4BD8")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xC11628", Offset = "0xC11628", VA = "0xC11628")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xC147EC", Offset = "0xC147EC", VA = "0xC147EC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000081")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xC14EF8", Offset = "0xC14EF8", VA = "0xC14EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xC15064", Offset = "0xC15064", VA = "0xC15064")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000082")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60001C2")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xD02020", Offset = "0xD02020", VA = "0xD02020")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000083")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B994", Offset = "0x99B994")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99B9CC", Offset = "0x99B9CC")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BA04", Offset = "0x99BA04")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xBB8DA8", Offset = "0xBB8DA8", VA = "0xBB8DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xBB8DAC", Offset = "0xBB8DAC", VA = "0xBB8DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xBB8E2C", Offset = "0xBB8E2C", VA = "0xBB8E2C")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xBB901C", Offset = "0xBB901C", VA = "0xBB901C")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000084")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xBB9044", Offset = "0xBB9044", VA = "0xBB9044")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xBB9154", Offset = "0xBB9154", VA = "0xBB9154")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xBB946C", Offset = "0xBB946C", VA = "0xBB946C")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xBB9704", Offset = "0xBB9704", VA = "0xBB9704")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xBB9754", Offset = "0xBB9754", VA = "0xBB9754")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000085")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700001E")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x106C7AC", Offset = "0x106C7AC", VA = "0x106C7AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x106CA70", Offset = "0x106CA70", VA = "0x106CA70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x106CBB4", Offset = "0x106CBB4", VA = "0x106CBB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x106CAE8", Offset = "0x106CAE8", VA = "0x106CAE8")]
	public void Init()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x106A8E0", Offset = "0x106A8E0", VA = "0x106A8E0")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x106CD3C", Offset = "0x106CD3C", VA = "0x106CD3C")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x106A878", Offset = "0x106A878", VA = "0x106A878")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x106A964", Offset = "0x106A964", VA = "0x106A964")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x106CC4C", Offset = "0x106CC4C", VA = "0x106CC4C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x106CDDC", Offset = "0x106CDDC", VA = "0x106CDDC")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x106CE18", Offset = "0x106CE18", VA = "0x106CE18")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x106D014", Offset = "0x106D014", VA = "0x106D014")]
	private void Prune()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x106CE28", Offset = "0x106CE28", VA = "0x106CE28")]
	private void Display()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x106D0C4", Offset = "0x106D0C4", VA = "0x106D0C4")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000086")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x106F954", Offset = "0x106F954", VA = "0x106F954")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000087")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000410")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001B6C")]
		SingleTap,
		[Token(Token = "0x4001B6D")]
		DoubleTap,
		[Token(Token = "0x4001B6E")]
		Left,
		[Token(Token = "0x4001B6F")]
		Right,
		[Token(Token = "0x4001B70")]
		Up,
		[Token(Token = "0x4001B71")]
		Down
	}

	[Token(Token = "0x2000411")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x10694BC", Offset = "0x10694BC", VA = "0x10694BC")]
	public static void Create()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1074BF8", Offset = "0x1074BF8", VA = "0x1074BF8")]
	public static void Update()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1074F1C", Offset = "0x1074F1C", VA = "0x1074F1C")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1074D68", Offset = "0x1074D68", VA = "0x1074D68")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x106A3C0", Offset = "0x106A3C0", VA = "0x106A3C0")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000088")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1074FE4", Offset = "0x1074FE4", VA = "0x1074FE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1075060", Offset = "0x1075060", VA = "0x1075060")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x10750F8", Offset = "0x10750F8", VA = "0x10750F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1075154", Offset = "0x1075154", VA = "0x1075154")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x10751B8", Offset = "0x10751B8", VA = "0x10751B8")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x10751BC", Offset = "0x10751BC", VA = "0x10751BC")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000089")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000412")]
	public enum Result
	{
		[Token(Token = "0x4001B73")]
		Success = 0,
		[Token(Token = "0x4001B74")]
		Unknown = -2200,
		[Token(Token = "0x4001B75")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001B76")]
		InvalidParam = -2202,
		[Token(Token = "0x4001B77")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001B78")]
		MissingDLL = -2204,
		[Token(Token = "0x4001B79")]
		BadVersion = -2205,
		[Token(Token = "0x4001B7A")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000413")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001B7C")]
		S16_Mono,
		[Token(Token = "0x4001B7D")]
		S16_Stereo,
		[Token(Token = "0x4001B7E")]
		F32_Mono,
		[Token(Token = "0x4001B7F")]
		F32_Stereo
	}

	[Token(Token = "0x2000414")]
	public enum Viseme
	{
		[Token(Token = "0x4001B81")]
		sil,
		[Token(Token = "0x4001B82")]
		PP,
		[Token(Token = "0x4001B83")]
		FF,
		[Token(Token = "0x4001B84")]
		TH,
		[Token(Token = "0x4001B85")]
		DD,
		[Token(Token = "0x4001B86")]
		kk,
		[Token(Token = "0x4001B87")]
		CH,
		[Token(Token = "0x4001B88")]
		SS,
		[Token(Token = "0x4001B89")]
		nn,
		[Token(Token = "0x4001B8A")]
		RR,
		[Token(Token = "0x4001B8B")]
		aa,
		[Token(Token = "0x4001B8C")]
		E,
		[Token(Token = "0x4001B8D")]
		ih,
		[Token(Token = "0x4001B8E")]
		oh,
		[Token(Token = "0x4001B8F")]
		ou
	}

	[Token(Token = "0x2000415")]
	public enum Signals
	{
		[Token(Token = "0x4001B91")]
		VisemeOn,
		[Token(Token = "0x4001B92")]
		VisemeOff,
		[Token(Token = "0x4001B93")]
		VisemeAmount,
		[Token(Token = "0x4001B94")]
		VisemeSmoothing,
		[Token(Token = "0x4001B95")]
		LaughterAmount
	}

	[Token(Token = "0x2000416")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001B97")]
		Original,
		[Token(Token = "0x4001B98")]
		Enhanced,
		[Token(Token = "0x4001B99")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000417")]
	public class Frame
	{
		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x106A110", Offset = "0x106A110", VA = "0x106A110")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x106A16C", Offset = "0x106A16C", VA = "0x106A16C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x106A1FC", Offset = "0x106A1FC", VA = "0x106A1FC")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002DD")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x10689B4", Offset = "0x10689B4", VA = "0x10689B4")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x1068A5C", Offset = "0x1068A5C", VA = "0x1068A5C")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1068AE4", Offset = "0x1068AE4", VA = "0x1068AE4")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1068B90", Offset = "0x1068B90", VA = "0x1068B90")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1068C50", Offset = "0x1068C50", VA = "0x1068C50")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1068D34", Offset = "0x1068D34", VA = "0x1068D34")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1068DCC", Offset = "0x1068DCC", VA = "0x1068DCC")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1068E64", Offset = "0x1068E64", VA = "0x1068E64")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1068F24", Offset = "0x1068F24", VA = "0x1068F24")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1069038", Offset = "0x1069038", VA = "0x1069038")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x10694C0", Offset = "0x10694C0", VA = "0x10694C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1069384", Offset = "0x1069384", VA = "0x1069384")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x10695A0", Offset = "0x10695A0", VA = "0x10695A0")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x10696B4", Offset = "0x10696B4", VA = "0x10696B4")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x1069724", Offset = "0x1069724", VA = "0x1069724")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x106978C", Offset = "0x106978C", VA = "0x106978C")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x10698B0", Offset = "0x10698B0", VA = "0x10698B0")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x10699E8", Offset = "0x10699E8", VA = "0x10699E8")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1069AC8", Offset = "0x1069AC8", VA = "0x1069AC8")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1069BA8", Offset = "0x1069BA8", VA = "0x1069BA8")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1069CAC", Offset = "0x1069CAC", VA = "0x1069CAC")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1069E54", Offset = "0x1069E54", VA = "0x1069E54")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1069FF4", Offset = "0x1069FF4", VA = "0x1069FF4")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x99785C", Offset = "0x99785C")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BA3C", Offset = "0x99BA3C")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BA74", Offset = "0x99BA74")]
	public bool enableTouchInput;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BAAC", Offset = "0x99BAAC")]
	public bool audioLoopback;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BAE4", Offset = "0x99BAE4")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BB1C", Offset = "0x99BB1C")]
	public bool showVisemes;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BB54", Offset = "0x99BB54")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BB8C", Offset = "0x99BB8C")]
	public bool skipAudioSource;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BBC4", Offset = "0x99BBC4")]
	public float gain;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x106A294", Offset = "0x106A294", VA = "0x106A294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x106A494", Offset = "0x106A494", VA = "0x106A494")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x106A9E4", Offset = "0x106A9E4", VA = "0x106A9E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x106ACA0", Offset = "0x106ACA0", VA = "0x106ACA0")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x106AD08", Offset = "0x106AD08", VA = "0x106AD08")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x106AD78", Offset = "0x106AD78", VA = "0x106AD78")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x106AF14", Offset = "0x106AF14", VA = "0x106AF14")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x106B0B0", Offset = "0x106B0B0", VA = "0x106B0B0")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x106B1E4", Offset = "0x106B1E4", VA = "0x106B1E4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x106AA2C", Offset = "0x106AA2C", VA = "0x106AA2C")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x106A7A4", Offset = "0x106A7A4", VA = "0x106A7A4")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x106B1F4", Offset = "0x106B1F4", VA = "0x106B1F4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x106B320", Offset = "0x106B320", VA = "0x106B320")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x200008B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9978C0", Offset = "0x9978C0")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BBFC", Offset = "0x99BBFC")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BC34", Offset = "0x99BC34")]
	public bool enableAcceleration;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700001F")]
	public int Smoothing
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x106B4AC", Offset = "0x106B4AC", VA = "0x106B4AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x106B3C0", Offset = "0x106B3C0", VA = "0x106B3C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public uint Context
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x106B4B4", Offset = "0x106B4B4", VA = "0x106B4B4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000021")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x106B4BC", Offset = "0x106B4BC", VA = "0x106B4BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x106B4C4", Offset = "0x106B4C4", VA = "0x106B4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x106B670", Offset = "0x106B670", VA = "0x106B670")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x106B794", Offset = "0x106B794", VA = "0x106B794")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x106B79C", Offset = "0x106B79C", VA = "0x106B79C")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x106B890", Offset = "0x106B890", VA = "0x106B890")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x106B958", Offset = "0x106B958", VA = "0x106B958")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x106B344", Offset = "0x106B344", VA = "0x106B344")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x200008C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997924", Offset = "0x997924")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BC6C", Offset = "0x99BC6C")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x106B9D0", Offset = "0x106B9D0", VA = "0x106B9D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x106BB4C", Offset = "0x106BB4C", VA = "0x106BB4C")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x200008D")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BCA4", Offset = "0x99BCA4")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BCDC", Offset = "0x99BCDC")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BD14", Offset = "0x99BD14")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BD4C", Offset = "0x99BD4C")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BD84", Offset = "0x99BD84")]
	public KeyCode laughterKey;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BDBC", Offset = "0x99BDBC")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99BDF4", Offset = "0x99BDF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BDF4", Offset = "0x99BDF4")]
	public float laughterThreshold;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99BE48", Offset = "0x99BE48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BE48", Offset = "0x99BE48")]
	public float laughterMultiplier;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99BE9C", Offset = "0x99BE9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BE9C", Offset = "0x99BE9C")]
	public int smoothAmount;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x106BB50", Offset = "0x106BB50", VA = "0x106BB50")]
	private void Start()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x106BCA8", Offset = "0x106BCA8", VA = "0x106BCA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x106BF78", Offset = "0x106BF78", VA = "0x106BF78")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x106BDB8", Offset = "0x106BDB8", VA = "0x106BDB8")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x106BE84", Offset = "0x106BE84", VA = "0x106BE84")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x106C050", Offset = "0x106C050", VA = "0x106C050")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x106C120", Offset = "0x106C120", VA = "0x106C120")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x106C188", Offset = "0x106C188", VA = "0x106C188")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x200008E")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99BEF4", Offset = "0x99BEF4")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x99BEF4", Offset = "0x99BEF4")]
	public Texture[] Textures;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99C160", Offset = "0x99C160")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C160", Offset = "0x99C160")]
	public int smoothAmount;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x106C29C", Offset = "0x106C29C", VA = "0x106C29C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x106C404", Offset = "0x106C404", VA = "0x106C404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x106C5BC", Offset = "0x106C5BC", VA = "0x106C5BC")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x106C6E4", Offset = "0x106C6E4", VA = "0x106C6E4")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997988", Offset = "0x997988")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000418")]
	public enum micActivation
	{
		[Token(Token = "0x4001B9F")]
		HoldToSpeak,
		[Token(Token = "0x4001BA0")]
		PushToSpeak,
		[Token(Token = "0x4001BA1")]
		ConstantSpeak
	}

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C1B8", Offset = "0x99C1B8")]
	public AudioSource audioSource;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C1F0", Offset = "0x99C1F0")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C228", Offset = "0x99C228")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99C260", Offset = "0x99C260")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C260", Offset = "0x99C260")]
	private float micInputVolume;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C2C8", Offset = "0x99C2C8")]
	private int micFrequency;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C314", Offset = "0x99C314")]
	public micActivation micControl;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C34C", Offset = "0x99C34C")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C384", Offset = "0x99C384")]
	public string selectedDevice;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000022")]
	public float MicFrequency
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x106D144", Offset = "0x106D144", VA = "0x106D144")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x106D150", Offset = "0x106D150", VA = "0x106D150")]
		set
		{
		}
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x106D1DC", Offset = "0x106D1DC", VA = "0x106D1DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x106D2A8", Offset = "0x106D2A8", VA = "0x106D2A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x106D2F4", Offset = "0x106D2F4", VA = "0x106D2F4")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x106D458", Offset = "0x106D458", VA = "0x106D458")]
	private void Update()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x106D89C", Offset = "0x106D89C", VA = "0x106D89C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x106D8B0", Offset = "0x106D8B0", VA = "0x106D8B0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x106D8C8", Offset = "0x106D8C8", VA = "0x106D8C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x106D8CC", Offset = "0x106D8CC", VA = "0x106D8CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x106D944", Offset = "0x106D944", VA = "0x106D944")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x106D390", Offset = "0x106D390", VA = "0x106D390")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x106D6FC", Offset = "0x106D6FC", VA = "0x106D6FC")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x106D5B4", Offset = "0x106D5B4", VA = "0x106D5B4")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x106DB54", Offset = "0x106DB54", VA = "0x106DB54")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x106DB5C", Offset = "0x106DB5C", VA = "0x106DB5C")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000090")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x106BAA4", Offset = "0x106BAA4", VA = "0x106BAA4")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x106DB8C", Offset = "0x106DB8C", VA = "0x106DB8C")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000091")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000419")]
	public delegate void OnClick();

	[Token(Token = "0x200041A")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200041B")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200041C")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999358", Offset = "0x999358")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xCF7FB8", Offset = "0xCF7FB8", VA = "0xCF7FB8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xCF89F4", Offset = "0xCF89F4", VA = "0xCF89F4")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999368", Offset = "0x999368")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xCF8248", Offset = "0xCF8248", VA = "0xCF8248")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xCF8C28", Offset = "0xCF8C28", VA = "0xCF8C28")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999378", Offset = "0x999378")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xCF8488", Offset = "0xCF8488", VA = "0xCF8488")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xCF8E8C", Offset = "0xCF8E8C", VA = "0xCF8E8C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999388", Offset = "0x999388")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xCF8644", Offset = "0xCF8644", VA = "0xCF8644")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xCF9264", Offset = "0xCF9264", VA = "0xCF9264")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999398", Offset = "0x999398")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xCF88C0", Offset = "0xCF88C0", VA = "0xCF88C0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xCF9288", Offset = "0xCF9288", VA = "0xCF9288")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000311")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000312")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000313")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000320")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000321")]
	private const float marginH = 16f;

	[Token(Token = "0x4000322")]
	private const float marginV = 16f;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xCF6E44", Offset = "0xCF6E44", VA = "0xCF6E44")]
	public void Awake()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xCF72C4", Offset = "0xCF72C4", VA = "0xCF72C4")]
	public void Show()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xCF78BC", Offset = "0xCF78BC", VA = "0xCF78BC")]
	public void Hide()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xCF7660", Offset = "0xCF7660", VA = "0xCF7660")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xCF7A7C", Offset = "0xCF7A7C", VA = "0xCF7A7C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xCF7D78", Offset = "0xCF7D78", VA = "0xCF7D78")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xCF7FC0", Offset = "0xCF7FC0", VA = "0xCF7FC0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xCF80A8", Offset = "0xCF80A8", VA = "0xCF80A8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xCF8250", Offset = "0xCF8250", VA = "0xCF8250")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xCF82EC", Offset = "0xCF82EC", VA = "0xCF82EC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xCF8490", Offset = "0xCF8490", VA = "0xCF8490")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xCF864C", Offset = "0xCF864C", VA = "0xCF864C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xCF88C8", Offset = "0xCF88C8", VA = "0xCF88C8")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xCF8978", Offset = "0xCF8978", VA = "0xCF8978")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000092")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xD72794", Offset = "0xD72794", VA = "0xD72794")]
	private void Start()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xD72838", Offset = "0xD72838", VA = "0xD72838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD72900", Offset = "0xD72900", VA = "0xD72900")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD72940", Offset = "0xD72940", VA = "0xD72940")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000093")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000422")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001BAB")]
		On,
		[Token(Token = "0x4001BAC")]
		Off,
		[Token(Token = "0x4001BAD")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000023")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xBB6D7C", Offset = "0xBB6D7C", VA = "0xBB6D7C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xBB6D38", Offset = "0xBB6D38", VA = "0xBB6D38")]
		set
		{
		}
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xBB6D84", Offset = "0xBB6D84", VA = "0xBB6D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xBB6DE8", Offset = "0xBB6DE8", VA = "0xBB6DE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xBB6F00", Offset = "0xBB6F00", VA = "0xBB6F00", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xBB6F1C", Offset = "0xBB6F1C", VA = "0xBB6F1C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xBB6F74", Offset = "0xBB6F74", VA = "0xBB6F74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xBB71D8", Offset = "0xBB71D8", VA = "0xBB71D8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xBB72EC", Offset = "0xBB72EC", VA = "0xBB72EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xBB7380", Offset = "0xBB7380", VA = "0xBB7380")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xBB7450", Offset = "0xBB7450", VA = "0xBB7450")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xBB7508", Offset = "0xBB7508", VA = "0xBB7508")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xBB75D4", Offset = "0xBB75D4", VA = "0xBB75D4")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000094")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xD271B0", Offset = "0xD271B0", VA = "0xD271B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xD273C0", Offset = "0xD273C0", VA = "0xD273C0")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xD2789C", Offset = "0xD2789C", VA = "0xD2789C")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000095")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xD6D3E8", Offset = "0xD6D3E8", VA = "0xD6D3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xD6D520", Offset = "0xD6D520", VA = "0xD6D520")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xD6D77C", Offset = "0xD6D77C", VA = "0xD6D77C")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000096")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000024")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xD6D828", Offset = "0xD6D828", VA = "0xD6D828")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xD6D47C", Offset = "0xD6D47C", VA = "0xD6D47C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4C3C", Offset = "0x9A4C3C")]
		add
		{
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xD6D784", Offset = "0xD6D784", VA = "0xD6D784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4C4C", Offset = "0x9A4C4C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xD6D834", Offset = "0xD6D834", VA = "0xD6D834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xD6D9A0", Offset = "0xD6D9A0", VA = "0xD6D9A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xD6DB20", Offset = "0xD6DB20", VA = "0xD6DB20")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xD6DB28", Offset = "0xD6DB28", VA = "0xD6DB28")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000097")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000343")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000344")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000345")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C46C", Offset = "0x99C46C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C4A4", Offset = "0x99C4A4")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C4DC", Offset = "0x99C4DC")]
	public float HeightOffset;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C514", Offset = "0x99C514")]
	public float MinimumHeight;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C54C", Offset = "0x99C54C")]
	public float MaximumHeight;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xD282F0", Offset = "0xD282F0", VA = "0xD282F0")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xD282F8", Offset = "0xD282F8", VA = "0xD282F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xD28384", Offset = "0xD28384", VA = "0xD28384")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xD28414", Offset = "0xD28414", VA = "0xD28414")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xD284A4", Offset = "0xD284A4", VA = "0xD284A4")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xD288B4", Offset = "0xD288B4", VA = "0xD288B4")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xD28B60", Offset = "0xD28B60", VA = "0xD28B60")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000098")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xBBA004", Offset = "0xBBA004", VA = "0xBBA004")]
	private void Start()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xBBA0CC", Offset = "0xBBA0CC", VA = "0xBBA0CC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000099")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000423")]
	public enum States
	{
		[Token(Token = "0x4001BAF")]
		Ready,
		[Token(Token = "0x4001BB0")]
		Aim,
		[Token(Token = "0x4001BB1")]
		CancelAim,
		[Token(Token = "0x4001BB2")]
		PreTeleport,
		[Token(Token = "0x4001BB3")]
		CancelTeleport,
		[Token(Token = "0x4001BB4")]
		Teleporting,
		[Token(Token = "0x4001BB5")]
		PostTeleport
	}

	[Token(Token = "0x2000424")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001BB7")]
		None,
		[Token(Token = "0x4001BB8")]
		Aim,
		[Token(Token = "0x4001BB9")]
		PreTeleport,
		[Token(Token = "0x4001BBA")]
		Teleport
	}

	[Token(Token = "0x2000425")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001BBC")]
		Point,
		[Token(Token = "0x4001BBD")]
		Sphere,
		[Token(Token = "0x4001BBE")]
		Capsule
	}

	[Token(Token = "0x2000426")]
	public class AimData
	{
		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A24F4", Offset = "0x9A24F4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170002F0")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xBBD448", Offset = "0xBBD448", VA = "0xBBD448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9E44", Offset = "0x9A9E44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xBBD450", Offset = "0xBBD450", VA = "0xBBD450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9E54", Offset = "0x9A9E54")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xBBD3CC", Offset = "0xBBD3CC", VA = "0xBBD3CC")]
		public AimData()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xBBD458", Offset = "0xBBD458", VA = "0xBBD458")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9993A8", Offset = "0x9993A8")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170002F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0xBBD200", Offset = "0xBBD200", VA = "0xBBD200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xBBD26C", Offset = "0xBBD26C", VA = "0xBBD26C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xBBB614", Offset = "0xBBB614", VA = "0xBBB614")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xBBD0F4", Offset = "0xBBD0F4", VA = "0xBBD0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xBBD0F8", Offset = "0xBBD0F8", VA = "0xBBD0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xBBD208", Offset = "0xBBD208", VA = "0xBBD208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9993B8", Offset = "0x9993B8")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170002F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0xBBCB74", Offset = "0xBBCB74", VA = "0xBBCB74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B02")]
			[Address(RVA = "0xBBCBE0", Offset = "0xBBCBE0", VA = "0xBBCBE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xBBBB0C", Offset = "0xBBBB0C", VA = "0xBBBB0C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xBBCA20", Offset = "0xBBCA20", VA = "0xBBCA20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xBBCA24", Offset = "0xBBCA24", VA = "0xBBCA24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xBBCB7C", Offset = "0xBBCB7C", VA = "0xBBCB7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9993C8", Offset = "0x9993C8")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170002F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0xBBCC94", Offset = "0xBBCC94", VA = "0xBBCC94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xBBCD00", Offset = "0xBBCD00", VA = "0xBBCD00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xBBBD00", Offset = "0xBBBD00", VA = "0xBBBD00")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xBBCBE8", Offset = "0xBBCBE8", VA = "0xBBCBE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xBBCBEC", Offset = "0xBBCBEC", VA = "0xBBCBEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xBBCC9C", Offset = "0xBBCC9C", VA = "0xBBCC9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9993D8", Offset = "0x9993D8")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170002F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0xBBD080", Offset = "0xBBD080", VA = "0xBBD080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0xBBD0EC", Offset = "0xBBD0EC", VA = "0xBBD0EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xBBBEF4", Offset = "0xBBBEF4", VA = "0xBBBEF4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xBBCF98", Offset = "0xBBCF98", VA = "0xBBCF98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xBBCF9C", Offset = "0xBBCF9C", VA = "0xBBCF9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xBBD088", Offset = "0xBBD088", VA = "0xBBD088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9993E8", Offset = "0x9993E8")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B12")]
			[Address(RVA = "0xBBCDB4", Offset = "0xBBCDB4", VA = "0xBBCDB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0xBBCE20", Offset = "0xBBCE20", VA = "0xBBCE20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xBBC0E8", Offset = "0xBBC0E8", VA = "0xBBC0E8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xBBCD08", Offset = "0xBBCD08", VA = "0xBBCD08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xBBCD0C", Offset = "0xBBCD0C", VA = "0xBBCD0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xBBCDBC", Offset = "0xBBCDBC", VA = "0xBBCDBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9993F8", Offset = "0x9993F8")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170002FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0xBBD358", Offset = "0xBBD358", VA = "0xBBD358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xBBD3C4", Offset = "0xBBD3C4", VA = "0xBBD3C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xBBC2DC", Offset = "0xBBC2DC", VA = "0xBBC2DC")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xBBD274", Offset = "0xBBD274", VA = "0xBBD274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xBBD278", Offset = "0xBBD278", VA = "0xBBD278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xBBD360", Offset = "0xBBD360", VA = "0xBBD360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999408", Offset = "0x999408")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170002FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0xBBCF24", Offset = "0xBBCF24", VA = "0xBBCF24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xBBCF90", Offset = "0xBBCF90", VA = "0xBBCF90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xBBC4D0", Offset = "0xBBC4D0", VA = "0xBBC4D0")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xBBCE28", Offset = "0xBBCE28", VA = "0xBBCE28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xBBCE2C", Offset = "0xBBCE2C", VA = "0xBBCE2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xBBCF2C", Offset = "0xBBCF2C", VA = "0xBBCF2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C584", Offset = "0x99C584")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C5BC", Offset = "0x99C5BC")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C5F4", Offset = "0x99C5F4")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C62C", Offset = "0x99C62C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C664", Offset = "0x99C664")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C69C", Offset = "0x99C69C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C6D4", Offset = "0x99C6D4")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C70C", Offset = "0x99C70C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99C744", Offset = "0x99C744")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C754", Offset = "0x99C754")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C78C", Offset = "0x99C78C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99C7D4", Offset = "0x99C7D4")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C7E4", Offset = "0x99C7E4")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C81C", Offset = "0x99C81C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C854", Offset = "0x99C854")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C88C", Offset = "0x99C88C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000025")]
	public States CurrentState
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xBBAAF0", Offset = "0xBBAAF0", VA = "0xBBAAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4C5C", Offset = "0x9A4C5C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xBBAAF8", Offset = "0xBBAAF8", VA = "0xBBAAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4C6C", Offset = "0x9A4C6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xBBAD28", Offset = "0xBBAD28", VA = "0xBBAD28")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000027")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xBBAD54", Offset = "0xBBAD54", VA = "0xBBAD54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4C9C", Offset = "0x9A4C9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xBBAD5C", Offset = "0xBBAD5C", VA = "0xBBAD5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4CAC", Offset = "0x9A4CAC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xBBAB00", Offset = "0xBBAB00", VA = "0xBBAB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4C7C", Offset = "0x9A4C7C")]
		add
		{
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xBBABA4", Offset = "0xBBABA4", VA = "0xBBABA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4C8C", Offset = "0x9A4C8C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xBBB4CC", Offset = "0xBBB4CC", VA = "0xBBB4CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4CF4", Offset = "0x9A4CF4")]
		add
		{
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xBBB570", Offset = "0xBBB570", VA = "0xBBB570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4D04", Offset = "0x9A4D04")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xBBB640", Offset = "0xBBB640", VA = "0xBBB640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4D78", Offset = "0x9A4D78")]
		add
		{
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xBBB6E4", Offset = "0xBBB6E4", VA = "0xBBB6E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4D88", Offset = "0x9A4D88")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xBBB788", Offset = "0xBBB788", VA = "0xBBB788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4D98", Offset = "0x9A4D98")]
		add
		{
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xBBB82C", Offset = "0xBBB82C", VA = "0xBBB82C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4DA8", Offset = "0x9A4DA8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xBBB944", Offset = "0xBBB944", VA = "0xBBB944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4DB8", Offset = "0x9A4DB8")]
		add
		{
		}
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xBBB9E8", Offset = "0xBBB9E8", VA = "0xBBB9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4DC8", Offset = "0x9A4DC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xBBBB38", Offset = "0xBBBB38", VA = "0xBBBB38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4E3C", Offset = "0x9A4E3C")]
		add
		{
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xBBBBDC", Offset = "0xBBBBDC", VA = "0xBBBBDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4E4C", Offset = "0x9A4E4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xBBBD2C", Offset = "0xBBBD2C", VA = "0xBBBD2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4EC0", Offset = "0x9A4EC0")]
		add
		{
		}
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xBBBDD0", Offset = "0xBBBDD0", VA = "0xBBBDD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4ED0", Offset = "0x9A4ED0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xBBBF20", Offset = "0xBBBF20", VA = "0xBBBF20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4F44", Offset = "0x9A4F44")]
		add
		{
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xBBBFC4", Offset = "0xBBBFC4", VA = "0xBBBFC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4F54", Offset = "0x9A4F54")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xBBC114", Offset = "0xBBC114", VA = "0xBBC114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4FC8", Offset = "0x9A4FC8")]
		add
		{
		}
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xBBC1B8", Offset = "0xBBC1B8", VA = "0xBBC1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A4FD8", Offset = "0x9A4FD8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xBBC308", Offset = "0xBBC308", VA = "0xBBC308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A504C", Offset = "0x9A504C")]
		add
		{
		}
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xBBC3AC", Offset = "0xBBC3AC", VA = "0xBBC3AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A505C", Offset = "0x9A505C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xBBC4FC", Offset = "0xBBC4FC", VA = "0xBBC4FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A50D0", Offset = "0x9A50D0")]
		add
		{
		}
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xBBC5A0", Offset = "0xBBC5A0", VA = "0xBBC5A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A50E0", Offset = "0x9A50E0")]
		remove
		{
		}
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xBBA7A8", Offset = "0xBBA7A8", VA = "0xBBA7A8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xBBA7CC", Offset = "0xBBA7CC", VA = "0xBBA7CC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xBBAC48", Offset = "0xBBAC48", VA = "0xBBAC48")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xBBAD64", Offset = "0xBBAD64", VA = "0xBBAD64")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xBBB0C4", Offset = "0xBBB0C4", VA = "0xBBB0C4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A4CBC", Offset = "0x9A4CBC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xBBB17C", Offset = "0xBBB17C", VA = "0xBBB17C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xBBB278", Offset = "0xBBB278", VA = "0xBBB278")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xBBB294", Offset = "0xBBB294", VA = "0xBBB294")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xBBB360", Offset = "0xBBB360", VA = "0xBBB360")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xBBB3A8", Offset = "0xBBB3A8", VA = "0xBBB3A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xBBB414", Offset = "0xBBB414", VA = "0xBBB414", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xBBB4C4", Offset = "0xBBB4C4", VA = "0xBBB4C4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xBBB444", Offset = "0xBBB444", VA = "0xBBB444")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4D14", Offset = "0x9A4D14")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xBBB8D0", Offset = "0xBBB8D0", VA = "0xBBB8D0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xBBBA8C", Offset = "0xBBBA8C", VA = "0xBBBA8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4DD8", Offset = "0x9A4DD8")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xBBBC80", Offset = "0xBBBC80", VA = "0xBBBC80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4E5C", Offset = "0x9A4E5C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xBBBE74", Offset = "0xBBBE74", VA = "0xBBBE74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4EE0", Offset = "0x9A4EE0")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xBBC068", Offset = "0xBBC068", VA = "0xBBC068")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4F64", Offset = "0x9A4F64")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xBBC25C", Offset = "0xBBC25C", VA = "0xBBC25C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A4FE8", Offset = "0x9A4FE8")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xBBC450", Offset = "0xBBC450", VA = "0xBBC450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A506C", Offset = "0x9A506C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xBBC644", Offset = "0xBBC644", VA = "0xBBC644")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xBBC78C", Offset = "0xBBC78C", VA = "0xBBC78C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xBBC7C4", Offset = "0xBBC7C4", VA = "0xBBC7C4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xBBC8E0", Offset = "0xBBC8E0", VA = "0xBBC8E0")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xBBCA10", Offset = "0xBBCA10", VA = "0xBBCA10")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200009A")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xB603DC", Offset = "0xB603DC", VA = "0xB603DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A50F0", Offset = "0x9A50F0")]
		add
		{
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xB60480", Offset = "0xB60480", VA = "0xB60480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5100", Offset = "0x9A5100")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xB60524", Offset = "0xB60524", VA = "0xB60524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5110", Offset = "0x9A5110")]
		add
		{
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xB605C8", Offset = "0xB605C8", VA = "0xB605C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5120", Offset = "0x9A5120")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xB6066C", Offset = "0xB6066C", VA = "0xB6066C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xB6074C", Offset = "0xB6074C", VA = "0xB6074C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xB60750", Offset = "0xB60750", VA = "0xB60750")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xB607C4", Offset = "0xB607C4", VA = "0xB607C4")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xB60938", Offset = "0xB60938", VA = "0xB60938")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xB60C20", Offset = "0xB60C20", VA = "0xB60C20")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xB60E18", Offset = "0xB60E18", VA = "0xB60E18")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200009B")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xEDCBA8", Offset = "0xEDCBA8", VA = "0xEDCBA8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xEDCC50", Offset = "0xEDCC50", VA = "0xEDCC50", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002AF")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xEDCD48", Offset = "0xEDCD48", VA = "0xEDCD48")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C984", Offset = "0x99C984")]
	public float Range;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xEDCD58", Offset = "0xEDCD58", VA = "0xEDCD58", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xEDCEB8", Offset = "0xEDCEB8", VA = "0xEDCEB8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C9BC", Offset = "0x99C9BC")]
	public float Range;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99C9F4", Offset = "0x99C9F4")]
	public float MinimumElevation;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CA2C", Offset = "0x99CA2C")]
	public float Gravity;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CA64", Offset = "0x99CA64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99CA64", Offset = "0x99CA64")]
	public float AimVelocity;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CAC0", Offset = "0x99CAC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99CAC0", Offset = "0x99CAC0")]
	public float AimStep;

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xEDCEC8", Offset = "0xEDCEC8", VA = "0xEDCEC8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xEDD118", Offset = "0xEDD118", VA = "0xEDD118")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CB18", Offset = "0x99CB18")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xEDD12C", Offset = "0xEDD12C", VA = "0xEDD12C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xEDD230", Offset = "0xEDD230", VA = "0xEDD230")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xEDD260", Offset = "0xEDD260", VA = "0xEDD260")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xEDD290", Offset = "0xEDD290", VA = "0xEDD290")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xEDD33C", Offset = "0xEDD33C", VA = "0xEDD33C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xEDD3A8", Offset = "0xEDD3A8", VA = "0xEDD3A8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xEDD410", Offset = "0xEDD410", VA = "0xEDD410")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99CB50", Offset = "0x99CB50")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CB60", Offset = "0x99CB60")]
	public Transform PositionIndicator;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CB98", Offset = "0x99CB98")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CBD0", Offset = "0x99CBD0")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000028")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xEDD534", Offset = "0xEDD534", VA = "0xEDD534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5130", Offset = "0x9A5130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xEDD53C", Offset = "0xEDD53C", VA = "0xEDD53C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5140", Offset = "0x9A5140")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xEDD6FC", Offset = "0xEDD6FC", VA = "0xEDD6FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5150", Offset = "0x9A5150")]
		add
		{
		}
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xEDD7A0", Offset = "0xEDD7A0", VA = "0xEDD7A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5160", Offset = "0x9A5160")]
		remove
		{
		}
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xEDD548", Offset = "0xEDD548", VA = "0xEDD548")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xEDD5E0", Offset = "0xEDD5E0", VA = "0xEDD5E0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xEDD6B8", Offset = "0xEDD6B8", VA = "0xEDD6B8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xEDD6F8", Offset = "0xEDD6F8", VA = "0xEDD6F8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xEDD844", Offset = "0xEDD844", VA = "0xEDD844")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xEDD8AC", Offset = "0xEDD8AC", VA = "0xEDD8AC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xEDD8D0", Offset = "0xEDD8D0", VA = "0xEDD8D0", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000A0")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999418", Offset = "0x999418")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170002FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0xEDE018", Offset = "0xEDE018", VA = "0xEDE018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0xEDE084", Offset = "0xEDE084", VA = "0xEDE084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xEDDD30", Offset = "0xEDDD30", VA = "0xEDDD30")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xEDDF78", Offset = "0xEDDF78", VA = "0xEDDF78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xEDDF7C", Offset = "0xEDDF7C", VA = "0xEDDF7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xEDE020", Offset = "0xEDE020", VA = "0xEDE020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999428", Offset = "0x999428")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000301")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0xEDDF04", Offset = "0xEDDF04", VA = "0xEDDF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0xEDDF70", Offset = "0xEDDF70", VA = "0xEDDF70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xEDDDDC", Offset = "0xEDDDDC", VA = "0xEDDDDC")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xEDDE60", Offset = "0xEDDE60", VA = "0xEDDE60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xEDDE64", Offset = "0xEDDE64", VA = "0xEDDE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xEDDF0C", Offset = "0xEDDF0C", VA = "0xEDDF0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xEDDAC8", Offset = "0xEDDAC8", VA = "0xEDDAC8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xEDDB88", Offset = "0xEDDB88", VA = "0xEDDB88", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xEDDBE8", Offset = "0xEDDBE8", VA = "0xEDDBE8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xEDDCB0", Offset = "0xEDDCB0", VA = "0xEDDCB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5170", Offset = "0x9A5170")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xEDDD5C", Offset = "0xEDDD5C", VA = "0xEDDD5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A51D4", Offset = "0x9A51D4")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002CC")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002CD")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xEDDE08", Offset = "0xEDDE08", VA = "0xEDDE08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5238", Offset = "0x9A5238")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xEDDE34", Offset = "0xEDDE34", VA = "0xEDDE34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5248", Offset = "0x9A5248")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99CC18", Offset = "0x99CC18")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CC28", Offset = "0x99CC28")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CC60", Offset = "0x99CC60")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CC98", Offset = "0x99CC98")]
	public bool FastTeleport;

	[Token(Token = "0x17000029")]
	public Transform Pointer
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xEDE08C", Offset = "0xEDE08C", VA = "0xEDE08C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5258", Offset = "0x9A5258")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xEDE094", Offset = "0xEDE094", VA = "0xEDE094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5268", Offset = "0x9A5268")]
		private set
		{
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xEDE09C", Offset = "0xEDE09C", VA = "0xEDE09C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xEDE1FC", Offset = "0xEDE1FC", VA = "0xEDE1FC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xEDE2B8", Offset = "0xEDE2B8", VA = "0xEDE2B8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A2")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000430")]
	public enum InputModes
	{
		[Token(Token = "0x4001BE0")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001BE1")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001BE2")]
		ThumbstickTeleport,
		[Token(Token = "0x4001BE3")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000431")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001BE5")]
		A,
		[Token(Token = "0x4001BE6")]
		B,
		[Token(Token = "0x4001BE7")]
		LeftTrigger,
		[Token(Token = "0x4001BE8")]
		LeftThumbstick,
		[Token(Token = "0x4001BE9")]
		RightTrigger,
		[Token(Token = "0x4001BEA")]
		RightThumbstick,
		[Token(Token = "0x4001BEB")]
		X,
		[Token(Token = "0x4001BEC")]
		Y
	}

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CCD0", Offset = "0x99CCD0")]
	public InputModes InputMode;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CD08", Offset = "0x99CD08")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CD40", Offset = "0x99CD40")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CD78", Offset = "0x99CD78")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xEDE2BC", Offset = "0xEDE2BC", VA = "0xEDE2BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xEDE2C0", Offset = "0xEDE2C0", VA = "0xEDE2C0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xEDE710", Offset = "0xEDE710", VA = "0xEDE710", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xEDE7D4", Offset = "0xEDE7D4", VA = "0xEDE7D4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000A3")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000432")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001BEE")]
		HeadRelative,
		[Token(Token = "0x4001BEF")]
		ForwardFacing
	}

	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999438", Offset = "0x999438")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000303")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0xEDECB4", Offset = "0xEDECB4", VA = "0xEDECB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0xEDED20", Offset = "0xEDED20", VA = "0xEDED20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xEDEA7C", Offset = "0xEDEA7C", VA = "0xEDEA7C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xEDEBFC", Offset = "0xEDEBFC", VA = "0xEDEBFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xEDEC00", Offset = "0xEDEC00", VA = "0xEDEC00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xEDECBC", Offset = "0xEDECBC", VA = "0xEDECBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xEDE898", Offset = "0xEDE898", VA = "0xEDE898")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xEDE960", Offset = "0xEDE960", VA = "0xEDE960")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xEDE968", Offset = "0xEDE968", VA = "0xEDE968", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xEDE9B4", Offset = "0xEDE9B4", VA = "0xEDE9B4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xEDE9FC", Offset = "0xEDE9FC", VA = "0xEDE9FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5278", Offset = "0x9A5278")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002DF")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xEDEAA8", Offset = "0xEDEAA8", VA = "0xEDEAA8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xEDEBD0", Offset = "0xEDEBD0", VA = "0xEDEBD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A52DC", Offset = "0x9A52DC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xEDED28", Offset = "0xEDED28", VA = "0xEDED28", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xEDED2C", Offset = "0xEDED2C", VA = "0xEDED2C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xEDEDAC", Offset = "0xEDEDAC", VA = "0xEDEDAC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000A5")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CDB0", Offset = "0x99CDB0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CDE8", Offset = "0x99CDE8")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CE20", Offset = "0x99CE20")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CE58", Offset = "0x99CE58")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xEDEDB0", Offset = "0xEDEDB0", VA = "0xEDEDB0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xEDEE20", Offset = "0xEDEE20", VA = "0xEDEE20", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xEDF2A8", Offset = "0xEDF2A8", VA = "0xEDF2A8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CE90", Offset = "0x99CE90")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CEC8", Offset = "0x99CEC8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CF00", Offset = "0x99CF00")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xEDF2AC", Offset = "0xEDF2AC", VA = "0xEDF2AC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xEDF2F0", Offset = "0xEDF2F0", VA = "0xEDF2F0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xEDF764", Offset = "0xEDF764", VA = "0xEDF764")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000A7")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xEDF774", Offset = "0xEDF774", VA = "0xEDF774")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xEDF778", Offset = "0xEDF778", VA = "0xEDF778")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xEDF780", Offset = "0xEDF780", VA = "0xEDF780")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xEDF868", Offset = "0xEDF868", VA = "0xEDF868")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xEDF890", Offset = "0xEDF890", VA = "0xEDF890")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000A8")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99CF38", Offset = "0x99CF38")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002A")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xEDF8A8", Offset = "0xEDF8A8", VA = "0xEDF8A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A52EC", Offset = "0x9A52EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xEDF8B0", Offset = "0xEDF8B0", VA = "0xEDF8B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A52FC", Offset = "0x9A52FC")]
		private set
		{
		}
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xEDCBDC", Offset = "0xEDCBDC", VA = "0xEDCBDC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xEDCD14", Offset = "0xEDCD14", VA = "0xEDCD14", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xEDF8B8", Offset = "0xEDF8B8", VA = "0xEDF8B8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A530C", Offset = "0x9A530C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xEDD39C", Offset = "0xEDD39C", VA = "0xEDD39C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xEDD408", Offset = "0xEDD408", VA = "0xEDD408", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xEDCD50", Offset = "0xEDCD50", VA = "0xEDCD50")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000A9")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999448", Offset = "0x999448")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000305")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0xEDFF54", Offset = "0xEDFF54", VA = "0xEDFF54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xEDFFC0", Offset = "0xEDFFC0", VA = "0xEDFFC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xEDFB40", Offset = "0xEDFB40", VA = "0xEDFB40")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xEDFCDC", Offset = "0xEDFCDC", VA = "0xEDFCDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xEDFCE0", Offset = "0xEDFCE0", VA = "0xEDFCE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xEDFF5C", Offset = "0xEDFF5C", VA = "0xEDFF5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CF48", Offset = "0x99CF48")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003BA")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xEDF980", Offset = "0xEDF980", VA = "0xEDF980")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xEDFA64", Offset = "0xEDFA64", VA = "0xEDFA64", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xEDFA94", Offset = "0xEDFA94", VA = "0xEDFA94", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xEDFAC0", Offset = "0xEDFAC0", VA = "0xEDFAC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5344", Offset = "0x9A5344")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xEDFB6C", Offset = "0xEDFB6C", VA = "0xEDFB6C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002FD")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xEDFB88", Offset = "0xEDFB88", VA = "0xEDFB88", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xEDFCB0", Offset = "0xEDFCB0", VA = "0xEDFCB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A53A8", Offset = "0x9A53A8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xEDFFC8", Offset = "0xEDFFC8", VA = "0xEDFFC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xEE0030", Offset = "0xEE0030", VA = "0xEE0030", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xEE01B8", Offset = "0xEE01B8", VA = "0xEE01B8", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xEE02A8", Offset = "0xEE02A8", VA = "0xEE02A8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A53B8", Offset = "0x9A53B8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xEE02AC", Offset = "0xEE02AC", VA = "0xEE02AC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CF80", Offset = "0x99CF80")]
	public float LOSOffset;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CFB8", Offset = "0x99CFB8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xEE02B8", Offset = "0xEE02B8", VA = "0xEE02B8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xEE04EC", Offset = "0xEE04EC", VA = "0xEE04EC")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000307")]
	[Address(RVA = "0xEE04F8", Offset = "0xEE04F8", VA = "0xEE04F8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xEE0680", Offset = "0xEE0680", VA = "0xEE0680")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000AD")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000309")]
	[Address(RVA = "0xEE0684", Offset = "0xEE0684", VA = "0xEE0684", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xEE0724", Offset = "0xEE0724", VA = "0xEE0724", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600030B")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xEE07C0", Offset = "0xEE07C0", VA = "0xEE07C0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000AE")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999458", Offset = "0x999458")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000307")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xEE0B5C", Offset = "0xEE0B5C", VA = "0xEE0B5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0xEE0BC8", Offset = "0xEE0BC8", VA = "0xEE0BC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xEE0874", Offset = "0xEE0874", VA = "0xEE0874")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xEE0A4C", Offset = "0xEE0A4C", VA = "0xEE0A4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xEE0A50", Offset = "0xEE0A50", VA = "0xEE0A50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xEE0B64", Offset = "0xEE0B64", VA = "0xEE0B64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99CFF0", Offset = "0x99CFF0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99CFF0", Offset = "0x99CFF0")]
	public float TransitionDuration;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D048", Offset = "0x99D048")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D048", Offset = "0x99D048")]
	public float TeleportDelay;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D09C", Offset = "0x99D09C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xEE07C8", Offset = "0xEE07C8", VA = "0xEE07C8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xEE07F4", Offset = "0xEE07F4", VA = "0xEE07F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A53F0", Offset = "0x9A53F0")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xEE08A0", Offset = "0xEE08A0", VA = "0xEE08A0")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000AF")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000310")]
	[Address(RVA = "0xEE0BD0", Offset = "0xEE0BD0", VA = "0xEE0BD0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xEE0BEC", Offset = "0xEE0BEC", VA = "0xEE0BEC")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000B0")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999468", Offset = "0x999468")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000309")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B42")]
			[Address(RVA = "0xEE0E68", Offset = "0xEE0E68", VA = "0xEE0E68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B44")]
			[Address(RVA = "0xEE0ED4", Offset = "0xEE0ED4", VA = "0xEE0ED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xEE0CA0", Offset = "0xEE0CA0", VA = "0xEE0CA0")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xEE0D24", Offset = "0xEE0D24", VA = "0xEE0D24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xEE0D28", Offset = "0xEE0D28", VA = "0xEE0D28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xEE0E70", Offset = "0xEE0E70", VA = "0xEE0E70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D0D4", Offset = "0x99D0D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D0D4", Offset = "0x99D0D4")]
	public float TransitionDuration;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xEE0BF4", Offset = "0xEE0BF4", VA = "0xEE0BF4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xEE0C20", Offset = "0xEE0C20", VA = "0xEE0C20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5454", Offset = "0x9A5454")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xEE0CCC", Offset = "0xEE0CCC", VA = "0xEE0CCC")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000B1")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000437")]
	public enum PlabackState
	{
		[Token(Token = "0x4001C02")]
		Idle = 1,
		[Token(Token = "0x4001C03")]
		Preparing,
		[Token(Token = "0x4001C04")]
		Buffering,
		[Token(Token = "0x4001C05")]
		Ready,
		[Token(Token = "0x4001C06")]
		Ended
	}

	[Token(Token = "0x2000438")]
	public enum StereoMode
	{
		[Token(Token = "0x4001C08")]
		Unknown = -1,
		[Token(Token = "0x4001C09")]
		Mono,
		[Token(Token = "0x4001C0A")]
		TopBottom,
		[Token(Token = "0x4001C0B")]
		LeftRight,
		[Token(Token = "0x4001C0C")]
		Mesh
	}

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700002B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xF649F4", Offset = "0xF649F4", VA = "0xF649F4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0xF64CB0", Offset = "0xF64CB0", VA = "0xF64CB0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xF617C0", Offset = "0xF617C0", VA = "0xF617C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xF62E80", Offset = "0xF62E80", VA = "0xF62E80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xF64EFC", Offset = "0xF64EFC", VA = "0xF64EFC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000030")]
	public static long Duration
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xF63064", Offset = "0xF63064", VA = "0xF63064")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000031")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xF61DD0", Offset = "0xF61DD0", VA = "0xF61DD0")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000032")]
	public static int VideoWidth
	{
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xF61BE8", Offset = "0xF61BE8", VA = "0xF61BE8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000033")]
	public static int VideoHeight
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0xF61CDC", Offset = "0xF61CDC", VA = "0xF61CDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000034")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xF62F70", Offset = "0xF62F70", VA = "0xF62F70")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xF6260C", Offset = "0xF6260C", VA = "0xF6260C")]
		set
		{
		}
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xF636E8", Offset = "0xF636E8", VA = "0xF636E8")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xF63424", Offset = "0xF63424", VA = "0xF63424")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xF62294", Offset = "0xF62294", VA = "0xF62294")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xF6241C", Offset = "0xF6241C", VA = "0xF6241C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xF63234", Offset = "0xF63234", VA = "0xF63234")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xF638F4", Offset = "0xF638F4", VA = "0xF638F4")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xF62CB0", Offset = "0xF62CB0", VA = "0xF62CB0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000B2")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xD2818C", Offset = "0xD2818C", VA = "0xD2818C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A54B8", Offset = "0x9A54B8")]
		add
		{
		}
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xD28230", Offset = "0xD28230", VA = "0xD28230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A54C8", Offset = "0x9A54C8")]
		remove
		{
		}
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xD282D4", Offset = "0xD282D4", VA = "0xD282D4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xD282E8", Offset = "0xD282E8", VA = "0xD282E8")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000B3")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000439")]
	public enum ButtonType
	{
		[Token(Token = "0x4001C0E")]
		Play,
		[Token(Token = "0x4001C0F")]
		Pause,
		[Token(Token = "0x4001C10")]
		FastForward,
		[Token(Token = "0x4001C11")]
		Rewind,
		[Token(Token = "0x4001C12")]
		SkipForward,
		[Token(Token = "0x4001C13")]
		SkipBack,
		[Token(Token = "0x4001C14")]
		Stop
	}

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000035")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xDFACA4", Offset = "0xDFACA4", VA = "0xDFACA4")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xDFACAC", Offset = "0xDFACAC", VA = "0xDFACAC")]
		set
		{
		}
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xDFACD0", Offset = "0xDFACD0", VA = "0xDFACD0", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xDFC1A0", Offset = "0xDFC1A0", VA = "0xDFC1A0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000B4")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200043A")]
	public enum VideoShape
	{
		[Token(Token = "0x4001C16")]
		_360,
		[Token(Token = "0x4001C17")]
		_180,
		[Token(Token = "0x4001C18")]
		Quad
	}

	[Token(Token = "0x200043B")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001C1A")]
		Mono,
		[Token(Token = "0x4001C1B")]
		TopBottom,
		[Token(Token = "0x4001C1C")]
		LeftRight,
		[Token(Token = "0x4001C1D")]
		BottomTop
	}

	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999478", Offset = "0x999478")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700030B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xF63BE0", Offset = "0xF63BE0", VA = "0xF63BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0xF63C4C", Offset = "0xF63C4C", VA = "0xF63C4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xF61F44", Offset = "0xF61F44", VA = "0xF61F44")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xF63A4C", Offset = "0xF63A4C", VA = "0xF63A4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xF63A50", Offset = "0xF63A50", VA = "0xF63A50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xF63BE8", Offset = "0xF63BE8", VA = "0xF63BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999488", Offset = "0x999488")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xF621F4", Offset = "0xF621F4", VA = "0xF621F4")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xF63610", Offset = "0xF63610", VA = "0xF63610")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99D15C", Offset = "0x99D15C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99D16C", Offset = "0x99D16C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99D17C", Offset = "0x99D17C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000036")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xF61524", Offset = "0xF61524", VA = "0xF61524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A54D8", Offset = "0x9A54D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xF6152C", Offset = "0xF6152C", VA = "0xF6152C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A54E8", Offset = "0x9A54E8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public long Duration
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xF61538", Offset = "0xF61538", VA = "0xF61538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A54F8", Offset = "0x9A54F8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xF61540", Offset = "0xF61540", VA = "0xF61540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5508", Offset = "0x9A5508")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0xF61548", Offset = "0xF61548", VA = "0xF61548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5518", Offset = "0x9A5518")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000335")]
		[Address(RVA = "0xF61550", Offset = "0xF61550", VA = "0xF61550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5528", Offset = "0x9A5528")]
		private set
		{
		}
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xF61558", Offset = "0xF61558", VA = "0xF61558")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xF61828", Offset = "0xF61828", VA = "0xF61828")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xF61894", Offset = "0xF61894", VA = "0xF61894")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xF61EC4", Offset = "0xF61EC4", VA = "0xF61EC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5538", Offset = "0x9A5538")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xF61F70", Offset = "0xF61F70", VA = "0xF61F70")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xF621FC", Offset = "0xF621FC", VA = "0xF621FC")]
	public void Play()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xF62388", Offset = "0xF62388", VA = "0xF62388")]
	public void Pause()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xF62510", Offset = "0xF62510", VA = "0xF62510")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xF62760", Offset = "0xF62760", VA = "0xF62760")]
	private void Update()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xF63158", Offset = "0xF63158", VA = "0xF63158")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xF63390", Offset = "0xF63390", VA = "0xF63390")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xF63518", Offset = "0xF63518", VA = "0xF63518")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xF63600", Offset = "0xF63600", VA = "0xF63600")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000B5")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200043E")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001C25")]
		Playing,
		[Token(Token = "0x4001C26")]
		Paused,
		[Token(Token = "0x4001C27")]
		Rewinding,
		[Token(Token = "0x4001C28")]
		FastForwarding
	}

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xF63C54", Offset = "0xF63C54", VA = "0xF63C54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xF63F14", Offset = "0xF63F14", VA = "0xF63F14")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xF64040", Offset = "0xF64040", VA = "0xF64040")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xF64158", Offset = "0xF64158", VA = "0xF64158")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xF64240", Offset = "0xF64240", VA = "0xF64240")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xF64128", Offset = "0xF64128", VA = "0xF64128")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xF6430C", Offset = "0xF6430C", VA = "0xF6430C")]
	private void Update()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xF63E00", Offset = "0xF63E00", VA = "0xF63E00")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xF646D8", Offset = "0xF646D8", VA = "0xF646D8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000B6")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9979EC", Offset = "0x9979EC")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x200043F")]
	private enum CubeFace
	{
		[Token(Token = "0x4001C2A")]
		Right,
		[Token(Token = "0x4001C2B")]
		Left,
		[Token(Token = "0x4001C2C")]
		Top,
		[Token(Token = "0x4001C2D")]
		Bottom,
		[Token(Token = "0x4001C2E")]
		Front,
		[Token(Token = "0x4001C2F")]
		Back,
		[Token(Token = "0x4001C30")]
		COUNT
	}

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1071308", Offset = "0x1071308", VA = "0x1071308")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x10714B8", Offset = "0x10714B8", VA = "0x10714B8")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1071674", Offset = "0x1071674", VA = "0x1071674")]
	private void Update()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1071B60", Offset = "0x1071B60", VA = "0x1071B60")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1071E58", Offset = "0x1071E58", VA = "0x1071E58")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x10730D8", Offset = "0x10730D8", VA = "0x10730D8")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1073138", Offset = "0x1073138", VA = "0x1073138")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x10721D8", Offset = "0x10721D8", VA = "0x10721D8")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1073220", Offset = "0x1073220", VA = "0x1073220")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x107340C", Offset = "0x107340C", VA = "0x107340C")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x10726A0", Offset = "0x10726A0", VA = "0x10726A0")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x10729D4", Offset = "0x10729D4", VA = "0x10729D4")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1072D30", Offset = "0x1072D30", VA = "0x1072D30")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x10735C8", Offset = "0x10735C8", VA = "0x10735C8")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000B7")]
public static class VectorUtil
{
	[Token(Token = "0x600035B")]
	[Address(RVA = "0xB8D5B8", Offset = "0xB8D5B8", VA = "0xB8D5B8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000B8")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xCF968C", Offset = "0xCF968C", VA = "0xCF968C")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xCF9AF0", Offset = "0xCF9AF0", VA = "0xCF9AF0")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xCF9BAC", Offset = "0xCF9BAC", VA = "0xCF9BAC")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xCF9E08", Offset = "0xCF9E08", VA = "0xCF9E08")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xCF9EF4", Offset = "0xCF9EF4", VA = "0xCF9EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xCF9FD0", Offset = "0xCF9FD0", VA = "0xCF9FD0")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xCFA03C", Offset = "0xCFA03C", VA = "0xCFA03C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xCFA044", Offset = "0xCFA044", VA = "0xCFA044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A55AC", Offset = "0x9A55AC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xCFA0A0", Offset = "0xCFA0A0", VA = "0xCFA0A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A55BC", Offset = "0x9A55BC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xCFA0FC", Offset = "0xCFA0FC", VA = "0xCFA0FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A55CC", Offset = "0x9A55CC")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xCFA158", Offset = "0xCFA158", VA = "0xCFA158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A55DC", Offset = "0x9A55DC")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000B9")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999498", Offset = "0x999498")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700030D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xD72DEC", Offset = "0xD72DEC", VA = "0xD72DEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xD72E58", Offset = "0xD72E58", VA = "0xD72E58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xD72C6C", Offset = "0xD72C6C", VA = "0xD72C6C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xD72CA0", Offset = "0xD72CA0", VA = "0xD72CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xD72CA4", Offset = "0xD72CA4", VA = "0xD72CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xD72DF4", Offset = "0xD72DF4", VA = "0xD72DF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xD72948", Offset = "0xD72948", VA = "0xD72948")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xD72A68", Offset = "0xD72A68", VA = "0xD72A68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xD729E8", Offset = "0xD729E8", VA = "0xD729E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A55EC", Offset = "0x9A55EC")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xD72C98", Offset = "0xD72C98", VA = "0xD72C98")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000BA")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D19C", Offset = "0x99D19C")]
	public int SubdivisionsU;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D1B8", Offset = "0x99D1B8")]
	public int SubdivisionsV;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xD2911C", Offset = "0xD2911C", VA = "0xD2911C")]
	private void Update()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xD29C28", Offset = "0xD29C28", VA = "0xD29C28")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000BB")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000039")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xBBA0D4", Offset = "0xBBA0D4", VA = "0xBBA0D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xBBA12C", Offset = "0xBBA12C", VA = "0xBBA12C")]
	public void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xBBA48C", Offset = "0xBBA48C", VA = "0xBBA48C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xBBA570", Offset = "0xBBA570", VA = "0xBBA570")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A5650", Offset = "0x9A5650")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000371")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000372")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000373")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000374")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000375")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000376")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000377")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000378")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xBBA5D8", Offset = "0xBBA5D8", VA = "0xBBA5D8")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xBBA618", Offset = "0xBBA618", VA = "0xBBA618")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xBBA68C", Offset = "0xBBA68C", VA = "0xBBA68C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xBBA7F0", Offset = "0xBBA7F0", VA = "0xBBA7F0")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xBBA8D0", Offset = "0xBBA8D0", VA = "0xBBA8D0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xBBA390", Offset = "0xBBA390", VA = "0xBBA390")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xBBA994", Offset = "0xBBA994", VA = "0xBBA994")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xBBAA04", Offset = "0xBBAA04", VA = "0xBBAA04")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xBBAAE8", Offset = "0xBBAAE8", VA = "0xBBAAE8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997A80", Offset = "0x997A80")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000441")]
	public enum DrawMode
	{
		[Token(Token = "0x4001C35")]
		Opaque,
		[Token(Token = "0x4001C36")]
		OpaqueWithClip,
		[Token(Token = "0x4001C37")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001C38")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700003A")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x10710D8", Offset = "0x10710D8", VA = "0x10710D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x107116C", Offset = "0x107116C", VA = "0x107116C")]
		set
		{
		}
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x106F988", Offset = "0x106F988", VA = "0x106F988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x10706CC", Offset = "0x10706CC", VA = "0x10706CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1070750", Offset = "0x1070750", VA = "0x1070750")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1070844", Offset = "0x1070844", VA = "0x1070844")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1070938", Offset = "0x1070938", VA = "0x1070938", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1070B40", Offset = "0x1070B40", VA = "0x1070B40")]
	private void Update()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1071248", Offset = "0x1071248", VA = "0x1071248")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000BD")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9994A8", Offset = "0x9994A8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xB67C20", Offset = "0xB67C20", VA = "0xB67C20")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xB67D10", Offset = "0xB67D10", VA = "0xB67D10")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xB67A68", Offset = "0xB67A68", VA = "0xB67A68")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xB67C28", Offset = "0xB67C28", VA = "0xB67C28")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xB67D08", Offset = "0xB67D08", VA = "0xB67D08")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000BE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x997AE4", Offset = "0x997AE4")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000443")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001C3C")]
		MouseXAndY,
		[Token(Token = "0x4001C3D")]
		MouseX,
		[Token(Token = "0x4001C3E")]
		MouseY
	}

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xF611DC", Offset = "0xF611DC", VA = "0xF611DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xF61444", Offset = "0xF61444", VA = "0xF61444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xF61504", Offset = "0xF61504", VA = "0xF61504")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000BF")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000C0")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xF75DD0", Offset = "0xF75DD0", VA = "0xF75DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xF75DD4", Offset = "0xF75DD4", VA = "0xF75DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xF75DD8", Offset = "0xF75DD8", VA = "0xF75DD8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xF75F48", Offset = "0xF75F48", VA = "0xF75F48")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xF75E28", Offset = "0xF75E28", VA = "0xF75E28")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xF75EBC", Offset = "0xF75EBC", VA = "0xF75EBC")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xF75F98", Offset = "0xF75F98", VA = "0xF75F98")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xF76030", Offset = "0xF76030", VA = "0xF76030")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xF761A0", Offset = "0xF761A0", VA = "0xF761A0")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xF76310", Offset = "0xF76310", VA = "0xF76310")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000C1")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000444")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x400045D")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000463")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC4B7C8", Offset = "0xC4B7C8", VA = "0xC4B7C8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC4B5F8", Offset = "0xC4B5F8", VA = "0xC4B5F8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A5688", Offset = "0x9A5688")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC4B800", Offset = "0xC4B800", VA = "0xC4B800")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xC4B95C", Offset = "0xC4B95C", VA = "0xC4B95C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC4BA68", Offset = "0xC4BA68", VA = "0xC4BA68")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xC4C4A0", Offset = "0xC4C4A0", VA = "0xC4C4A0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xC4B8B0", Offset = "0xC4B8B0", VA = "0xC4B8B0")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xC4B9C0", Offset = "0xC4B9C0", VA = "0xC4B9C0")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xC4C19C", Offset = "0xC4C19C", VA = "0xC4C19C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xC4C234", Offset = "0xC4C234", VA = "0xC4C234")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC4C2D0", Offset = "0xC4C2D0", VA = "0xC4C2D0")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC4C36C", Offset = "0xC4C36C", VA = "0xC4C36C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC4C404", Offset = "0xC4C404", VA = "0xC4C404")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC4D318", Offset = "0xC4D318", VA = "0xC4D318")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC4D3D8", Offset = "0xC4D3D8", VA = "0xC4D3D8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC4D498", Offset = "0xC4D498", VA = "0xC4D498")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000C2")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000445")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001C40")]
		Uninitialized = -1,
		[Token(Token = "0x4001C41")]
		NotEnabled,
		[Token(Token = "0x4001C42")]
		Success,
		[Token(Token = "0x4001C43")]
		StreamError,
		[Token(Token = "0x4001C44")]
		ProcessError,
		[Token(Token = "0x4001C45")]
		MaxStatValue
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xF65060", Offset = "0xF65060", VA = "0xF65060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xF652A8", Offset = "0xF652A8", VA = "0xF652A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xF65498", Offset = "0xF65498", VA = "0xF65498")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000C3")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000446")]
	private enum Parameters
	{
		[Token(Token = "0x4001C47")]
		P_GAIN,
		[Token(Token = "0x4001C48")]
		P_USEINVSQR,
		[Token(Token = "0x4001C49")]
		P_NEAR,
		[Token(Token = "0x4001C4A")]
		P_FAR,
		[Token(Token = "0x4001C4B")]
		P_RADIUS,
		[Token(Token = "0x4001C4C")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001C4D")]
		P_AMBISTAT,
		[Token(Token = "0x4001C4E")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001C4F")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001C50")]
		P_SENDLEVEL,
		[Token(Token = "0x4001C51")]
		P_NUM
	}

	[Token(Token = "0x4000468")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700003B")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xF65844", Offset = "0xF65844", VA = "0xF65844")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xF6584C", Offset = "0xF6584C", VA = "0xF6584C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float Gain
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xF65858", Offset = "0xF65858", VA = "0xF65858")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xF65860", Offset = "0xF65860", VA = "0xF65860")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xF658E4", Offset = "0xF658E4", VA = "0xF658E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xF658EC", Offset = "0xF658EC", VA = "0xF658EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float Near
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xF658F8", Offset = "0xF658F8", VA = "0xF658F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xF65900", Offset = "0xF65900", VA = "0xF65900")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public float Far
	{
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xF65988", Offset = "0xF65988", VA = "0xF65988")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xF65990", Offset = "0xF65990", VA = "0xF65990")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xF65A18", Offset = "0xF65A18", VA = "0xF65A18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xF65A20", Offset = "0xF65A20", VA = "0xF65A20")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public float ReverbSend
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xF65AA8", Offset = "0xF65AA8", VA = "0xF65AA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xF65AB0", Offset = "0xF65AB0", VA = "0xF65AB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xF65B38", Offset = "0xF65B38", VA = "0xF65B38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xF65B40", Offset = "0xF65B40", VA = "0xF65B40")]
		set
		{
		}
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xF6550C", Offset = "0xF6550C", VA = "0xF6550C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A56EC", Offset = "0x9A56EC")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xF6574C", Offset = "0xF6574C", VA = "0xF6574C")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xF65B4C", Offset = "0xF65B4C", VA = "0xF65B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xF65CC4", Offset = "0xF65CC4", VA = "0xF65CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xF65CC8", Offset = "0xF65CC8", VA = "0xF65CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xF65BB8", Offset = "0xF65BB8", VA = "0xF65BB8")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xF65D94", Offset = "0xF65D94", VA = "0xF65D94")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xF661FC", Offset = "0xF661FC", VA = "0xF661FC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xF656B4", Offset = "0xF656B4", VA = "0xF656B4")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xF662E0", Offset = "0xF662E0", VA = "0xF662E0")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000C4")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000473")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000475")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xF66300", Offset = "0xF66300", VA = "0xF66300")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xF6630C", Offset = "0xF6630C", VA = "0xF6630C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xF663DC", Offset = "0xF663DC", VA = "0xF663DC")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xF66344", Offset = "0xF66344", VA = "0xF66344")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xF66474", Offset = "0xF66474", VA = "0xF66474")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000C5")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000447")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000448")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400047C")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000043")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xF69364", Offset = "0xF69364", VA = "0xF69364")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public string filePath
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xF693F0", Offset = "0xF693F0", VA = "0xF693F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xF69468", Offset = "0xF69468", VA = "0xF69468")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xF695A4", Offset = "0xF695A4", VA = "0xF695A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xF695A8", Offset = "0xF695A8", VA = "0xF695A8")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xF69B18", Offset = "0xF69B18", VA = "0xF69B18")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xF69EBC", Offset = "0xF69EBC", VA = "0xF69EBC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xF6A01C", Offset = "0xF6A01C", VA = "0xF6A01C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xF6A7A8", Offset = "0xF6A7A8", VA = "0xF6A7A8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xF6A7F4", Offset = "0xF6A7F4", VA = "0xF6A7F4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xF6C178", Offset = "0xF6C178", VA = "0xF6C178")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xF6C04C", Offset = "0xF6C04C", VA = "0xF6C04C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xF6994C", Offset = "0xF6994C", VA = "0xF6994C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xF69778", Offset = "0xF69778", VA = "0xF69778")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xF6C78C", Offset = "0xF6C78C", VA = "0xF6C78C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xF6CBD4", Offset = "0xF6CBD4", VA = "0xF6CBD4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000C6")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000449")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001C58")]
		Int8,
		[Token(Token = "0x4001C59")]
		UInt8,
		[Token(Token = "0x4001C5A")]
		Int16,
		[Token(Token = "0x4001C5B")]
		UInt16,
		[Token(Token = "0x4001C5C")]
		Int32,
		[Token(Token = "0x4001C5D")]
		UInt32,
		[Token(Token = "0x4001C5E")]
		Int64,
		[Token(Token = "0x4001C5F")]
		UInt64,
		[Token(Token = "0x4001C60")]
		Float16,
		[Token(Token = "0x4001C61")]
		Float32,
		[Token(Token = "0x4001C62")]
		Float64
	}

	[Token(Token = "0x200044A")]
	public class ClientType
	{
		[Token(Token = "0x4001C63")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001C64")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001C65")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001C66")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001C67")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001C68")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001C69")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001C6A")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001C6B")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001C6C")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001C6D")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001C6E")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001C6F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001C70")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001C71")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xF66970", Offset = "0xF66970", VA = "0xF66970")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200044B")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001B5A")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001B5B")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001B5C")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001B5D")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001B5E")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001B5F")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001B60")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001B61")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B62")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B63")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B64")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001B65")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001B66")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001B67")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001B68")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200044C")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001C72")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700030F")]
		private IntPtr context
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xF6773C", Offset = "0xF6773C", VA = "0xF6773C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xF677A0", Offset = "0xF677A0", VA = "0xF677A0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xF67848", Offset = "0xF67848", VA = "0xF67848")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xF678F0", Offset = "0xF678F0", VA = "0xF678F0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xF67914", Offset = "0xF67914", VA = "0xF67914")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xF679BC", Offset = "0xF679BC", VA = "0xF679BC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xF679E0", Offset = "0xF679E0", VA = "0xF679E0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xF67A84", Offset = "0xF67A84", VA = "0xF67A84", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xF67AA8", Offset = "0xF67AA8", VA = "0xF67AA8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xF67B40", Offset = "0xF67B40", VA = "0xF67B40", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xF67B48", Offset = "0xF67B48", VA = "0xF67B48")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xF67C6C", Offset = "0xF67C6C", VA = "0xF67C6C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xF67D64", Offset = "0xF67D64", VA = "0xF67D64")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xF67E14", Offset = "0xF67E14", VA = "0xF67E14", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xF67E20", Offset = "0xF67E20", VA = "0xF67E20")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xF67F6C", Offset = "0xF67F6C", VA = "0xF67F6C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xF67F78", Offset = "0xF67F78", VA = "0xF67F78")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xF6803C", Offset = "0xF6803C", VA = "0xF6803C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xF68048", Offset = "0xF68048", VA = "0xF68048")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xF6810C", Offset = "0xF6810C", VA = "0xF6810C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xF68118", Offset = "0xF68118", VA = "0xF68118")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xF681DC", Offset = "0xF681DC", VA = "0xF681DC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xF681E8", Offset = "0xF681E8", VA = "0xF681E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xF6828C", Offset = "0xF6828C", VA = "0xF6828C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xF682B0", Offset = "0xF682B0", VA = "0xF682B0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xF68348", Offset = "0xF68348", VA = "0xF68348", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xF68350", Offset = "0xF68350", VA = "0xF68350")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xF68410", Offset = "0xF68410", VA = "0xF68410", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xF6841C", Offset = "0xF6841C", VA = "0xF6841C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xF684DC", Offset = "0xF684DC", VA = "0xF684DC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xF684EC", Offset = "0xF684EC", VA = "0xF684EC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xF68594", Offset = "0xF68594", VA = "0xF68594", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xF6691C", Offset = "0xF6691C", VA = "0xF6691C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200044D")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001C74")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000310")]
		private IntPtr context
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0xF685A0", Offset = "0xF685A0", VA = "0xF685A0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xF66734", Offset = "0xF66734", VA = "0xF66734")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xF68604", Offset = "0xF68604", VA = "0xF68604")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xF686AC", Offset = "0xF686AC", VA = "0xF686AC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xF686D0", Offset = "0xF686D0", VA = "0xF686D0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xF68778", Offset = "0xF68778", VA = "0xF68778", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xF6879C", Offset = "0xF6879C", VA = "0xF6879C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xF68844", Offset = "0xF68844", VA = "0xF68844", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xF68868", Offset = "0xF68868", VA = "0xF68868")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xF68900", Offset = "0xF68900", VA = "0xF68900", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xF68908", Offset = "0xF68908", VA = "0xF68908")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xF68A2C", Offset = "0xF68A2C", VA = "0xF68A2C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xF68B24", Offset = "0xF68B24", VA = "0xF68B24")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xF68BD4", Offset = "0xF68BD4", VA = "0xF68BD4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xF68BE0", Offset = "0xF68BE0", VA = "0xF68BE0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xF68D2C", Offset = "0xF68D2C", VA = "0xF68D2C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xF68D38", Offset = "0xF68D38", VA = "0xF68D38")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xF68DFC", Offset = "0xF68DFC", VA = "0xF68DFC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xF68E08", Offset = "0xF68E08", VA = "0xF68E08")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xF68ECC", Offset = "0xF68ECC", VA = "0xF68ECC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xF68ED8", Offset = "0xF68ED8", VA = "0xF68ED8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xF68F9C", Offset = "0xF68F9C", VA = "0xF68F9C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xF68FA8", Offset = "0xF68FA8", VA = "0xF68FA8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xF69050", Offset = "0xF69050", VA = "0xF69050", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xF69074", Offset = "0xF69074", VA = "0xF69074")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xF6910C", Offset = "0xF6910C", VA = "0xF6910C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xF69114", Offset = "0xF69114", VA = "0xF69114")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xF691D4", Offset = "0xF691D4", VA = "0xF691D4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xF691E0", Offset = "0xF691E0", VA = "0xF691E0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xF692A0", Offset = "0xF692A0", VA = "0xF692A0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xF692B0", Offset = "0xF692B0", VA = "0xF692B0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xF69358", Offset = "0xF69358", VA = "0xF69358", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xF667DC", Offset = "0xF667DC", VA = "0xF667DC")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200044E")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001C76")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000311")]
		private IntPtr context
		{
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0xF66978", Offset = "0xF66978", VA = "0xF66978")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xF66828", Offset = "0xF66828", VA = "0xF66828")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xF669DC", Offset = "0xF669DC", VA = "0xF669DC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xF66A84", Offset = "0xF66A84", VA = "0xF66A84", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xF66AA8", Offset = "0xF66AA8", VA = "0xF66AA8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xF66B50", Offset = "0xF66B50", VA = "0xF66B50", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xF66B74", Offset = "0xF66B74", VA = "0xF66B74")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xF66C1C", Offset = "0xF66C1C", VA = "0xF66C1C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xF66C40", Offset = "0xF66C40", VA = "0xF66C40")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xF66CD8", Offset = "0xF66CD8", VA = "0xF66CD8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xF66CE0", Offset = "0xF66CE0", VA = "0xF66CE0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xF66E04", Offset = "0xF66E04", VA = "0xF66E04", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xF66EFC", Offset = "0xF66EFC", VA = "0xF66EFC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xF66FAC", Offset = "0xF66FAC", VA = "0xF66FAC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xF66FB8", Offset = "0xF66FB8", VA = "0xF66FB8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xF67104", Offset = "0xF67104", VA = "0xF67104", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xF67110", Offset = "0xF67110", VA = "0xF67110")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xF671D4", Offset = "0xF671D4", VA = "0xF671D4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xF671E0", Offset = "0xF671E0", VA = "0xF671E0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xF672A4", Offset = "0xF672A4", VA = "0xF672A4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xF672B0", Offset = "0xF672B0", VA = "0xF672B0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xF67374", Offset = "0xF67374", VA = "0xF67374", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xF67380", Offset = "0xF67380", VA = "0xF67380")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xF67428", Offset = "0xF67428", VA = "0xF67428", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xF6744C", Offset = "0xF6744C", VA = "0xF6744C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xF674E4", Offset = "0xF674E4", VA = "0xF674E4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xF674EC", Offset = "0xF674EC", VA = "0xF674EC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xF675AC", Offset = "0xF675AC", VA = "0xF675AC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xF675B8", Offset = "0xF675B8", VA = "0xF675B8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xF67678", Offset = "0xF67678", VA = "0xF67678", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xF67688", Offset = "0xF67688", VA = "0xF67688")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xF67730", Offset = "0xF67730", VA = "0xF67730", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xF668D0", Offset = "0xF668D0", VA = "0xF668D0")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000045")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xF66484", Offset = "0xF66484", VA = "0xF66484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xF66504", Offset = "0xF66504", VA = "0xF66504")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xF66968", Offset = "0xF66968", VA = "0xF66968")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000C7")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200044F")]
	public enum Preset
	{
		[Token(Token = "0x4001C79")]
		Custom,
		[Token(Token = "0x4001C7A")]
		AcousticTile,
		[Token(Token = "0x4001C7B")]
		Brick,
		[Token(Token = "0x4001C7C")]
		BrickPainted,
		[Token(Token = "0x4001C7D")]
		Carpet,
		[Token(Token = "0x4001C7E")]
		CarpetHeavy,
		[Token(Token = "0x4001C7F")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001C80")]
		CeramicTile,
		[Token(Token = "0x4001C81")]
		Concrete,
		[Token(Token = "0x4001C82")]
		ConcreteRough,
		[Token(Token = "0x4001C83")]
		ConcreteBlock,
		[Token(Token = "0x4001C84")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001C85")]
		Curtain,
		[Token(Token = "0x4001C86")]
		Foliage,
		[Token(Token = "0x4001C87")]
		Glass,
		[Token(Token = "0x4001C88")]
		GlassHeavy,
		[Token(Token = "0x4001C89")]
		Grass,
		[Token(Token = "0x4001C8A")]
		Gravel,
		[Token(Token = "0x4001C8B")]
		GypsumBoard,
		[Token(Token = "0x4001C8C")]
		PlasterOnBrick,
		[Token(Token = "0x4001C8D")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001C8E")]
		Soil,
		[Token(Token = "0x4001C8F")]
		SoundProof,
		[Token(Token = "0x4001C90")]
		Snow,
		[Token(Token = "0x4001C91")]
		Steel,
		[Token(Token = "0x4001C92")]
		Water,
		[Token(Token = "0x4001C93")]
		WoodThin,
		[Token(Token = "0x4001C94")]
		WoodThick,
		[Token(Token = "0x4001C95")]
		WoodFloor,
		[Token(Token = "0x4001C96")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000450")]
	public sealed class Point
	{
		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xF75640", Offset = "0xF75640", VA = "0xF75640")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xF757B8", Offset = "0xF757B8", VA = "0xF757B8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xF75828", Offset = "0xF75828", VA = "0xF75828")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9994B8", Offset = "0x9994B8")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B3EC", Offset = "0x99B3EC")]
		private sealed class <>c
		{
			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6002497")]
			[Address(RVA = "0xF75CB0", Offset = "0xF75CB0", VA = "0xF75CB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002498")]
			[Address(RVA = "0xF75CB8", Offset = "0xF75CB8", VA = "0xF75CB8")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6002499")]
			[Address(RVA = "0xF75CD4", Offset = "0xF75CD4", VA = "0xF75CD4")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000312")]
		public float Item
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xF75860", Offset = "0xF75860", VA = "0xF75860")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xF75734", Offset = "0xF75734", VA = "0xF75734")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D2C4", Offset = "0x99D2C4")]
	public Spectrum absorption;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D2FC", Offset = "0x99D2FC")]
	public Spectrum transmission;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D334", Offset = "0x99D334")]
	public Spectrum scattering;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000046")]
	public Preset preset
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xF6CCB8", Offset = "0xF6CCB8", VA = "0xF6CCB8")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xF6CCC0", Offset = "0xF6CCC0", VA = "0xF6CCC0")]
		set
		{
		}
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xF6CCE8", Offset = "0xF6CCE8", VA = "0xF6CCE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xF6C61C", Offset = "0xF6C61C", VA = "0xF6C61C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xF6D2F0", Offset = "0xF6D2F0", VA = "0xF6D2F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xF6D2F4", Offset = "0xF6D2F4", VA = "0xF6D2F4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xF6CCEC", Offset = "0xF6CCEC", VA = "0xF6CCEC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xF6BEB8", Offset = "0xF6BEB8", VA = "0xF6BEB8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xF6D3D8", Offset = "0xF6D3D8", VA = "0xF6D3D8")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xF6D898", Offset = "0xF6D898", VA = "0xF6D898")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xF6DD60", Offset = "0xF6DD60", VA = "0xF6DD60")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xF6E228", Offset = "0xF6E228", VA = "0xF6E228")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xF6E6F4", Offset = "0xF6E6F4", VA = "0xF6E6F4")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xF6EBB8", Offset = "0xF6EBB8", VA = "0xF6EBB8")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xF6F07C", Offset = "0xF6F07C", VA = "0xF6F07C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xF6F548", Offset = "0xF6F548", VA = "0xF6F548")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xF6FA14", Offset = "0xF6FA14", VA = "0xF6FA14")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xF6FEDC", Offset = "0xF6FEDC", VA = "0xF6FEDC")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xF703A8", Offset = "0xF703A8", VA = "0xF703A8")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xF70874", Offset = "0xF70874", VA = "0xF70874")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xF70D38", Offset = "0xF70D38", VA = "0xF70D38")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xF711FC", Offset = "0xF711FC", VA = "0xF711FC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xF716C0", Offset = "0xF716C0", VA = "0xF716C0")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xF71B8C", Offset = "0xF71B8C", VA = "0xF71B8C")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xF71F18", Offset = "0xF71F18", VA = "0xF71F18")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xF7229C", Offset = "0xF7229C", VA = "0xF7229C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xF72768", Offset = "0xF72768", VA = "0xF72768")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xF72C30", Offset = "0xF72C30", VA = "0xF72C30")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xF730F8", Offset = "0xF730F8", VA = "0xF730F8")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xF73480", Offset = "0xF73480", VA = "0xF73480")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xF735FC", Offset = "0xF735FC", VA = "0xF735FC")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xF73980", Offset = "0xF73980", VA = "0xF73980")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xF73E48", Offset = "0xF73E48", VA = "0xF73E48")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xF74314", Offset = "0xF74314", VA = "0xF74314")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xF747DC", Offset = "0xF747DC", VA = "0xF747DC")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xF74CA8", Offset = "0xF74CA8", VA = "0xF74CA8")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xF75174", Offset = "0xF75174", VA = "0xF75174")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xF75678", Offset = "0xF75678", VA = "0xF75678")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xF75CF0", Offset = "0xF75CF0", VA = "0xF75CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xF75DC0", Offset = "0xF75DC0", VA = "0xF75DC0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000C9")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000047")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0xF65580", Offset = "0xF65580", VA = "0xF65580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xF763A0", Offset = "0xF763A0", VA = "0xF763A0")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000487")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000410")]
	[Address(RVA = "0xF763B0", Offset = "0xF763B0", VA = "0xF763B0")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xF76460", Offset = "0xF76460", VA = "0xF76460")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xF7656C", Offset = "0xF7656C", VA = "0xF7656C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xF76570", Offset = "0xF76570", VA = "0xF76570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xF76574", Offset = "0xF76574", VA = "0xF76574")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000CB")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceModEnableSwitch SwitchTarget;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 scale;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xB91FCC", Offset = "0xB91FCC", VA = "0xB91FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xB921D8", Offset = "0xB921D8", VA = "0xB921D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xB925FC", Offset = "0xB925FC", VA = "0xB925FC")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xB926F4", Offset = "0xB926F4", VA = "0xB926F4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xB924A8", Offset = "0xB924A8", VA = "0xB924A8")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xB92AA8", Offset = "0xB92AA8", VA = "0xB92AA8")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x20000CC")]
public class VoiceModEnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600041B")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xB92108", Offset = "0xB92108", VA = "0xB92108")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xB92B0C", Offset = "0xB92B0C", VA = "0xB92B0C")]
	public VoiceModEnableSwitch()
	{
	}
}
[Token(Token = "0x20000CD")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000048")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1067EB0", Offset = "0x1067EB0", VA = "0x1067EB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1068174", Offset = "0x1068174", VA = "0x1068174")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x10682B8", Offset = "0x10682B8", VA = "0x10682B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x10681EC", Offset = "0x10681EC", VA = "0x10681EC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x10683B8", Offset = "0x10683B8", VA = "0x10683B8")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x106852C", Offset = "0x106852C", VA = "0x106852C")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1068350", Offset = "0x1068350", VA = "0x1068350")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1068608", Offset = "0x1068608", VA = "0x1068608")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x106843C", Offset = "0x106843C", VA = "0x106843C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x10685CC", Offset = "0x10685CC", VA = "0x10685CC")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1068688", Offset = "0x1068688", VA = "0x1068688")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1068884", Offset = "0x1068884", VA = "0x1068884")]
	private void Prune()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1068698", Offset = "0x1068698", VA = "0x1068698")]
	private void Display()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1068934", Offset = "0x1068934", VA = "0x1068934")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x20000CE")]
public delegate void OVRCallback();
[Token(Token = "0x20000CF")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x20000D0")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x20000D1")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x20000D2")]
internal static class OVRMessenger
{
	[Token(Token = "0x2000452")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x106EA44", Offset = "0x106EA44", VA = "0x106EA44")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x2000453")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x106E63C", Offset = "0x106E63C", VA = "0x106E63C")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x106DC08", Offset = "0x106DC08", VA = "0x106DC08")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x106DC8C", Offset = "0x106DC8C", VA = "0x106DC8C")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x106E060", Offset = "0x106E060", VA = "0x106E060")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x106E3E8", Offset = "0x106E3E8", VA = "0x106E3E8")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x106E6B4", Offset = "0x106E6B4", VA = "0x106E6B4")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x106E8F0", Offset = "0x106E8F0", VA = "0x106E8F0")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x106E9C0", Offset = "0x106E9C0", VA = "0x106E9C0")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x106E9C4", Offset = "0x106E9C4", VA = "0x106E9C4")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x106EABC", Offset = "0x106EABC", VA = "0x106EABC")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000446")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000447")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000448")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x106EBC8", Offset = "0x106EBC8", VA = "0x106EBC8")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x600044A")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x600044B")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x600044C")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x106ECDC", Offset = "0x106ECDC", VA = "0x106ECDC")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x600044E")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x600044F")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x6000450")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x20000D3")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x6000452")]
	[Address(RVA = "0xE022C4", Offset = "0xE022C4", VA = "0xE022C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xE02340", Offset = "0xE02340", VA = "0xE02340")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xE023A0", Offset = "0xE023A0", VA = "0xE023A0")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x20000D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997B1C", Offset = "0x997B1C")]
public class OVRMicInput : MonoBehaviour
{
	[Token(Token = "0x2000454")]
	public enum micActivation
	{
		[Token(Token = "0x4001C9C")]
		HoldToSpeak,
		[Token(Token = "0x4001C9D")]
		PushToSpeak,
		[Token(Token = "0x4001C9E")]
		ConstantSpeak
	}

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GuiSelectDevice;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float sensitivity;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public micActivation micControl;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedDevice;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float loudness;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool micSelected;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int minFreq;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxFreq;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool focused;

	[Token(Token = "0x17000049")]
	public float Sensitivity
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x106EEE4", Offset = "0x106EEE4", VA = "0x106EEE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x106EEEC", Offset = "0x106EEEC", VA = "0x106EEEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public float SourceVolume
	{
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x106EF74", Offset = "0x106EF74", VA = "0x106EF74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x106EF7C", Offset = "0x106EF7C", VA = "0x106EF7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public float MicFrequency
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x106F004", Offset = "0x106F004", VA = "0x106F004")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0x106F010", Offset = "0x106F010", VA = "0x106F010")]
		set
		{
		}
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x106F09C", Offset = "0x106F09C", VA = "0x106F09C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x106F168", Offset = "0x106F168", VA = "0x106F168")]
	private void Start()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x106F2F0", Offset = "0x106F2F0", VA = "0x106F2F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x106F678", Offset = "0x106F678", VA = "0x106F678")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x106F68C", Offset = "0x106F68C", VA = "0x106F68C")]
	private void OnApplicationPause(bool focus)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x106F6A0", Offset = "0x106F6A0", VA = "0x106F6A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x106F6A4", Offset = "0x106F6A4", VA = "0x106F6A4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x106F71C", Offset = "0x106F71C", VA = "0x106F71C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x106F228", Offset = "0x106F228", VA = "0x106F228")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x106F5F0", Offset = "0x106F5F0", VA = "0x106F5F0")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x106F4BC", Offset = "0x106F4BC", VA = "0x106F4BC")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x106F5E8", Offset = "0x106F5E8", VA = "0x106F5E8")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x106F92C", Offset = "0x106F92C", VA = "0x106F92C")]
	public OVRMicInput()
	{
	}
}
[Token(Token = "0x20000D5")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x2000455")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x4001CA0")]
		Unknown = -2250,
		[Token(Token = "0x4001CA1")]
		CannotCreateContext = -2251,
		[Token(Token = "0x4001CA2")]
		InvalidParam = -2252,
		[Token(Token = "0x4001CA3")]
		BadSampleRate = -2253,
		[Token(Token = "0x4001CA4")]
		MissingDLL = -2254,
		[Token(Token = "0x4001CA5")]
		BadVersion = -2255,
		[Token(Token = "0x4001CA6")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x2000456")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x4001CA8")]
		None
	}

	[Token(Token = "0x40004A6")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x40004A7")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000468")]
	[Address(RVA = "0x10751C4", Offset = "0x10751C4", VA = "0x10751C4")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000469")]
	[Address(RVA = "0x107526C", Offset = "0x107526C", VA = "0x107526C")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600046A")]
	[Address(RVA = "0x10752F4", Offset = "0x10752F4", VA = "0x10752F4")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x600046B")]
	[Address(RVA = "0x10753A4", Offset = "0x10753A4", VA = "0x10753A4")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x600046C")]
	[Address(RVA = "0x107543C", Offset = "0x107543C", VA = "0x107543C")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x600046D")]
	[Address(RVA = "0x10754D4", Offset = "0x10754D4", VA = "0x10754D4")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1075584", Offset = "0x1075584", VA = "0x1075584")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600046F")]
	[Address(RVA = "0x107563C", Offset = "0x107563C", VA = "0x107563C")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000470")]
	[Address(RVA = "0x10756F4", Offset = "0x10756F4", VA = "0x10756F4")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x107579C", Offset = "0x107579C", VA = "0x107579C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1075B28", Offset = "0x1075B28", VA = "0x1075B28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1075B2C", Offset = "0x1075B2C", VA = "0x1075B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1075B30", Offset = "0x1075B30", VA = "0x1075B30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1075C3C", Offset = "0x1075C3C", VA = "0x1075C3C")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1075CA4", Offset = "0x1075CA4", VA = "0x1075CA4")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1075D84", Offset = "0x1075D84", VA = "0x1075D84")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x1075E64", Offset = "0x1075E64", VA = "0x1075E64")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1075F60", Offset = "0x1075F60", VA = "0x1075F60")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x107604C", Offset = "0x107604C", VA = "0x107604C")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1076138", Offset = "0x1076138", VA = "0x1076138")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x107621C", Offset = "0x107621C", VA = "0x107621C")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x20000D6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997B80", Offset = "0x997B80")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x2000457")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x4001CAA")]
		MixInputAudio,
		[Token(Token = "0x4001CAB")]
		PitchInputAudio,
		[Token(Token = "0x4001CAC")]
		SetBands,
		[Token(Token = "0x4001CAD")]
		FormantCorrection,
		[Token(Token = "0x4001CAE")]
		Carrier1_TrackPitch,
		[Token(Token = "0x4001CAF")]
		Carrier1_Type,
		[Token(Token = "0x4001CB0")]
		Carrier1_Gain,
		[Token(Token = "0x4001CB1")]
		Carrier1_Frequency,
		[Token(Token = "0x4001CB2")]
		Carrier1_Note,
		[Token(Token = "0x4001CB3")]
		Carrier1_PulseWidth,
		[Token(Token = "0x4001CB4")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x4001CB5")]
		Carrier2_TrackPitch,
		[Token(Token = "0x4001CB6")]
		Carrier2_Type,
		[Token(Token = "0x4001CB7")]
		Carrier2_Gain,
		[Token(Token = "0x4001CB8")]
		Carrier2_Frequency,
		[Token(Token = "0x4001CB9")]
		Carrier2_Note,
		[Token(Token = "0x4001CBA")]
		Carrier2_PulseWidth,
		[Token(Token = "0x4001CBB")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x4001CBC")]
		Count
	}

	[Token(Token = "0x2000458")]
	public struct VMPreset
	{
		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1076288", Offset = "0x1076288", VA = "0x1076288")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1076354", Offset = "0x1076354", VA = "0x1076354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x10768EC", Offset = "0x10768EC", VA = "0x10768EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1076B4C", Offset = "0x1076B4C", VA = "0x1076B4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1076C70", Offset = "0x1076C70", VA = "0x1076C70")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1076E9C", Offset = "0x1076E9C", VA = "0x1076E9C")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1076F9C", Offset = "0x1076F9C", VA = "0x1076F9C")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1077274", Offset = "0x1077274", VA = "0x1077274")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1077294", Offset = "0x1077294", VA = "0x1077294")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x10772F4", Offset = "0x10772F4", VA = "0x10772F4")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1077398", Offset = "0x1077398", VA = "0x1077398")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1076AB0", Offset = "0x1076AB0", VA = "0x1076AB0")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1076538", Offset = "0x1076538", VA = "0x1076538")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1077478", Offset = "0x1077478", VA = "0x1077478")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x20000D7")]
public class AddFinish : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image btnImg;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99D3BC", Offset = "0x99D3BC")]
	private bool <CheckState>k__BackingField;

	[Token(Token = "0x1700004C")]
	public bool CheckState
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xD13080", Offset = "0xD13080", VA = "0xD13080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5700", Offset = "0x9A5700")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xD13088", Offset = "0xD13088", VA = "0xD13088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5710", Offset = "0x9A5710")]
		set
		{
		}
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xD13094", Offset = "0xD13094", VA = "0xD13094")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xD130D4", Offset = "0xD130D4", VA = "0xD130D4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xD13144", Offset = "0xD13144", VA = "0xD13144", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xD13194", Offset = "0xD13194", VA = "0xD13194")]
	public AddFinish()
	{
	}
}
[Token(Token = "0x20000D8")]
public class AddPause : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image pauseImgArr;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99D3CC", Offset = "0x99D3CC")]
	private bool <CheckState>k__BackingField;

	[Token(Token = "0x1700004D")]
	private bool CheckState
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0xD13584", Offset = "0xD13584", VA = "0xD13584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5720", Offset = "0x9A5720")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000493")]
		[Address(RVA = "0xD1358C", Offset = "0xD1358C", VA = "0xD1358C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5730", Offset = "0x9A5730")]
		set
		{
		}
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xD13598", Offset = "0xD13598", VA = "0xD13598")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xD135D8", Offset = "0xD135D8", VA = "0xD135D8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xD13648", Offset = "0xD13648", VA = "0xD13648", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xD13698", Offset = "0xD13698", VA = "0xD13698")]
	public AddPause()
	{
	}
}
[Token(Token = "0x20000D9")]
public class AddWarning : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image btnImg;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text btnText;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99D3DC", Offset = "0x99D3DC")]
	private bool <CheckState>k__BackingField;

	[Token(Token = "0x1700004E")]
	public bool CheckState
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xD136A8", Offset = "0xD136A8", VA = "0xD136A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5740", Offset = "0x9A5740")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xD136B0", Offset = "0xD136B0", VA = "0xD136B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5750", Offset = "0x9A5750")]
		set
		{
		}
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xD136BC", Offset = "0xD136BC", VA = "0xD136BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xD136FC", Offset = "0xD136FC", VA = "0xD136FC", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xD1376C", Offset = "0xD1376C", VA = "0xD1376C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xD137BC", Offset = "0xD137BC", VA = "0xD137BC")]
	public AddWarning()
	{
	}
}
[Token(Token = "0x20000DA")]
public class GameLogic_finished : FsmState<eGAME_STATE>
{
	[Token(Token = "0x600049E")]
	[Address(RVA = "0xD08C64", Offset = "0xD08C64", VA = "0xD08C64")]
	public GameLogic_finished()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xD0BD60", Offset = "0xD0BD60", VA = "0xD0BD60", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xD0BEAC", Offset = "0xD0BEAC", VA = "0xD0BEAC", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xD0BEFC", Offset = "0xD0BEFC", VA = "0xD0BEFC", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x20000DB")]
public class GameLogic_mainNew : FsmState<eGAME_STATE>
{
	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xD08BBC", Offset = "0xD08BBC", VA = "0xD08BBC")]
	public GameLogic_mainNew()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xD0BF90", Offset = "0xD0BF90", VA = "0xD0BF90", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xD0C120", Offset = "0xD0C120", VA = "0xD0C120", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xD0C170", Offset = "0xD0C170", VA = "0xD0C170", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x20000DC")]
public class GameLogic_pause : FsmState<eGAME_STATE>
{
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xD08C10", Offset = "0xD08C10", VA = "0xD08C10")]
	public GameLogic_pause()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xD0C264", Offset = "0xD0C264", VA = "0xD0C264", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xD0C300", Offset = "0xD0C300", VA = "0xD0C300", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xD0C350", Offset = "0xD0C350", VA = "0xD0C350", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x20000DD")]
public class GameLogic_Warning : FsmState<eGAME_STATE>
{
	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xD08B68", Offset = "0xD08B68", VA = "0xD08B68")]
	public GameLogic_Warning()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xD0BB60", Offset = "0xD0BB60", VA = "0xD0BB60", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xD0BC74", Offset = "0xD0BC74", VA = "0xD0BC74", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xD0BCC4", Offset = "0xD0BCC4", VA = "0xD0BCC4", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x20000DE")]
public class SceneMgr : MonoSingletonPass<SceneMgr>
{
	[Token(Token = "0x2000459")]
	public enum FadeSet
	{
		[Token(Token = "0x4001CD2")]
		FADE_IN,
		[Token(Token = "0x4001CD3")]
		FADE_OUT
	}

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fadeBox;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FadeSet fadeset;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float duration;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xB5E720", Offset = "0xB5E720", VA = "0xB5E720", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xB5E770", Offset = "0xB5E770", VA = "0xB5E770")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xB5E7E4", Offset = "0xB5E7E4", VA = "0xB5E7E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xB5E7E8", Offset = "0xB5E7E8", VA = "0xB5E7E8")]
	private void Fade(float duration, FadeSet type)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xB5E980", Offset = "0xB5E980", VA = "0xB5E980")]
	public SceneMgr()
	{
	}
}
[Token(Token = "0x20000DF")]
public class SongItemPref : MonoBehaviour
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99D3EC", Offset = "0x99D3EC")]
	private BeatGroup <beatGroup>k__BackingField;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int itemIdx;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int musicIdx;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image songSpr;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button selectSongBtn;

	[Token(Token = "0x1700004F")]
	public BeatGroup beatGroup
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xB64A70", Offset = "0xB64A70", VA = "0xB64A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5760", Offset = "0x9A5760")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xB64A78", Offset = "0xB64A78", VA = "0xB64A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5770", Offset = "0x9A5770")]
		private set
		{
		}
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xB64A80", Offset = "0xB64A80", VA = "0xB64A80")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xB64B18", Offset = "0xB64B18", VA = "0xB64B18")]
	public void SetSongInfo(int idx, BeatGroup _bg, int _musicIdx)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xB64BEC", Offset = "0xB64BEC", VA = "0xB64BEC")]
	private void SelectMusicClick()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xB64F2C", Offset = "0xB64F2C", VA = "0xB64F2C")]
	public void SelectMusic()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xB64CB0", Offset = "0xB64CB0", VA = "0xB64CB0")]
	private void SelectMusicProc()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xB650C0", Offset = "0xB650C0", VA = "0xB650C0")]
	public SongItemPref()
	{
	}
}
[Token(Token = "0x20000E0")]
public class tok2 : MonoBehaviour
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cam;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation ani;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isClick;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1753648", Offset = "0x1753648", VA = "0x1753648")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x17536B4", Offset = "0x17536B4", VA = "0x17536B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1753704", Offset = "0x1753704", VA = "0x1753704")]
	private void raycasting(Ray ray)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1753708", Offset = "0x1753708", VA = "0x1753708")]
	public tok2()
	{
	}
}
[Token(Token = "0x20000E1")]
public class UIFinished : UIBase
{
	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text diffTxt;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text musicSubTitleTxt;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text musicMainTitle;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text musicSingerTxt;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text nicecutTxt;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text scoreTxt;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text rankTxt;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text TitleTxt;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button restartBtn;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button homeBtn;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image rankSpr;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string rank;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xE078AC", Offset = "0xE078AC", VA = "0xE078AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xE07950", Offset = "0xE07950", VA = "0xE07950")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xE07A2C", Offset = "0xE07A2C", VA = "0xE07A2C")]
	private void OnClick_restart()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xE07B44", Offset = "0xE07B44", VA = "0xE07B44")]
	private void OnClick_home()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xE07C00", Offset = "0xE07C00", VA = "0xE07C00", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xE080FC", Offset = "0xE080FC", VA = "0xE080FC", Slot = "7")]
	public override void Close()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xE08104", Offset = "0xE08104", VA = "0xE08104")]
	public UIFinished()
	{
	}
}
[Token(Token = "0x20000E2")]
public class UIMgr_Play : MonoBehaviour
{
	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xE0A2C4", Offset = "0xE0A2C4", VA = "0xE0A2C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xE0A4D0", Offset = "0xE0A4D0", VA = "0xE0A4D0")]
	public UIMgr_Play()
	{
	}
}
[Token(Token = "0x20000E3")]
public class UIPause : UIBase
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button mainBtn;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button restartBtn;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button continueBtn;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image songImg;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text songText;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 pauseOn;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 mUIPlayScale;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xE0B0D8", Offset = "0xE0B0D8", VA = "0xE0B0D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xE0B17C", Offset = "0xE0B17C", VA = "0xE0B17C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xE0B29C", Offset = "0xE0B29C", VA = "0xE0B29C", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xE0BB24", Offset = "0xE0BB24", VA = "0xE0BB24", Slot = "7")]
	public override void Close()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xE0BB2C", Offset = "0xE0BB2C", VA = "0xE0BB2C")]
	public void SetInit()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xE0BC6C", Offset = "0xE0BC6C", VA = "0xE0BC6C")]
	private void mainBtnOnClick()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xE0BF80", Offset = "0xE0BF80", VA = "0xE0BF80")]
	private void restartBtnOnClick()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xE0C230", Offset = "0xE0C230", VA = "0xE0C230")]
	private void continueBtnOnClick()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xE0C3B4", Offset = "0xE0C3B4", VA = "0xE0C3B4")]
	private void WaitingPause()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xE0C454", Offset = "0xE0C454", VA = "0xE0C454")]
	public UIPause()
	{
	}
}
[Token(Token = "0x20000E4")]
public class UISelectMusicNew : UIBase
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SongItemPref[] m_songItemPrefArr;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation rot;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip[] animationClips;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text song_timeTxt;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text song_bpmTxt;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text song_notesTxt;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text stats_highScoreTxt;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text stats_maxComboTxt;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text stats_maxRankTxt;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text songEngNameTxt;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text songTitleTxt;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text songSingerTxt;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text levelAuthor;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text[] subLevel;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button upBtn;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button downBtn;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button startBtn;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99D45C", Offset = "0x99D45C")]
	public Button GameSetBtn;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button GeneralSetBtn;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color magenta;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button[] prevNext;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99D494", Offset = "0x99D494")]
	public Text _langUI;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string[] localize;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int index;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99D4CC", Offset = "0x99D4CC")]
	public Image hitVolumeFillImg;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip samepleClip;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AudioSource sampleSoure;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float hitVolumeControl;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99D504", Offset = "0x99D504")]
	public Image vibrateFillImg;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99D53C", Offset = "0x99D53C")]
	private float defualtHeight;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text heightText;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Button SetBtn;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Button AutoBtn;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UIScoreInfo lastScore;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public DiffcultyButton[] diffBtnGroup;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ModeChangeButton[] modeChangeBtnGroup;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public VerseChangeBtn verseChangeBtn;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Image upPageImg;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Image downPageImg;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Image bigPlane;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int m_musicIdx;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int musicPageCnt;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int musicSlotCount;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Image[] unLevelGrayImage;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Image[] unModeGrayImage;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Color[] changeToStartBtnColor;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public UIChangeColorTween bg_GlowEff;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private eBEAT_MODE mode;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public eBEAT_LEVEL level;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private eBEAT_LANGUAGE language;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xE0F5A8", Offset = "0xE0F5A8", VA = "0xE0F5A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xE0FA48", Offset = "0xE0FA48", VA = "0xE0FA48", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xE0FA70", Offset = "0xE0FA70", VA = "0xE0FA70")]
	private void initSingle()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xE0FCEC", Offset = "0xE0FCEC", VA = "0xE0FCEC")]
	public void SetMusicState()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xE10A68", Offset = "0xE10A68", VA = "0xE10A68", Slot = "7")]
	public override void Close()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xE0FBE4", Offset = "0xE0FBE4", VA = "0xE0FBE4")]
	private void InitGrayImg()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xE0FC68", Offset = "0xE0FC68", VA = "0xE0FC68")]
	private void InitGrayImg2()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xE10ACC", Offset = "0xE10ACC", VA = "0xE10ACC")]
	private void OnGrayImg(int _val)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xE10B38", Offset = "0xE10B38", VA = "0xE10B38")]
	private void OnGrayImg2(int _val)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xE10BA4", Offset = "0xE10BA4", VA = "0xE10BA4")]
	private void NullSubLevel(int _val)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xE10CF0", Offset = "0xE10CF0", VA = "0xE10CF0")]
	private void UpMusicList()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xE110EC", Offset = "0xE110EC", VA = "0xE110EC")]
	private void DownMusicList()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xE10EA4", Offset = "0xE10EA4", VA = "0xE10EA4")]
	private void MusicSlotChange()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xE112A8", Offset = "0xE112A8", VA = "0xE112A8")]
	public void MultiplayChangeMusic(int _musicPageCnt)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xE10024", Offset = "0xE10024", VA = "0xE10024")]
	public void SetMusicSlot()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xE1131C", Offset = "0xE1131C", VA = "0xE1131C")]
	public void PlaySpinAnim(int slotidx)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xE1161C", Offset = "0xE1161C", VA = "0xE1161C")]
	public void SetButtonImage()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xE11620", Offset = "0xE11620", VA = "0xE11620")]
	private void OnClick_Start()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xE10820", Offset = "0xE10820", VA = "0xE10820")]
	private void SetMusicInfo(BeatRecord _record)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xE11808", Offset = "0xE11808", VA = "0xE11808")]
	public void SelectMusic(BeatGroup sBG, int idx)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xE105A8", Offset = "0xE105A8", VA = "0xE105A8")]
	private void SetDifficultyBtn(BeatGroup _bg, BeatRecord br)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xE10278", Offset = "0xE10278", VA = "0xE10278")]
	private void SetModeChangeyBtn(BeatGroup _bg, BeatRecord br)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xE11914", Offset = "0xE11914", VA = "0xE11914")]
	public void SelectDiff(BeatRecord selectBR)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xE11AF8", Offset = "0xE11AF8", VA = "0xE11AF8")]
	public void SelectMode(BeatRecord selectBR)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xE101C4", Offset = "0xE101C4", VA = "0xE101C4")]
	public BeatGroup GetSelectBeatGroup()
	{
		return null;
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xE11D10", Offset = "0xE11D10", VA = "0xE11D10")]
	public void OnClick_GameSetting()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xE11DC0", Offset = "0xE11DC0", VA = "0xE11DC0")]
	public void Onclick_GeneralSetting()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xE11E78", Offset = "0xE11E78", VA = "0xE11E78")]
	public void HeightSet()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xE120A4", Offset = "0xE120A4", VA = "0xE120A4")]
	public void HeightAuto()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xE11F70", Offset = "0xE11F70", VA = "0xE11F70")]
	public void Height()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xE12198", Offset = "0xE12198", VA = "0xE12198")]
	public void VibrateDown()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xE12250", Offset = "0xE12250", VA = "0xE12250")]
	public void VibrateUp()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xE1230C", Offset = "0xE1230C", VA = "0xE1230C")]
	public void HitVolumeDown()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xE12400", Offset = "0xE12400", VA = "0xE12400")]
	public void HitVolumeUp()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xE124F8", Offset = "0xE124F8", VA = "0xE124F8")]
	private void PreviousLang()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xE1279C", Offset = "0xE1279C", VA = "0xE1279C")]
	private void NextLang()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xE1258C", Offset = "0xE1258C", VA = "0xE1258C")]
	private void LangCheck()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xE12830", Offset = "0xE12830", VA = "0xE12830")]
	public UISelectMusicNew()
	{
	}
}
[Token(Token = "0x20000E5")]
public class UIWarning : UIBase
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button okButton;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xE13538", Offset = "0xE13538", VA = "0xE13538")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xE13638", Offset = "0xE13638", VA = "0xE13638", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xE1379C", Offset = "0xE1379C", VA = "0xE1379C")]
	private void OkButtonClick()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xE138D4", Offset = "0xE138D4", VA = "0xE138D4")]
	public UIWarning()
	{
	}
}
[Token(Token = "0x20000E6")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
public class BloomEffect : MonoBehaviour
{
	[Token(Token = "0x400051C")]
	private const int BoxDownPrefilterPass = 0;

	[Token(Token = "0x400051D")]
	private const int BoxDownPass = 1;

	[Token(Token = "0x400051E")]
	private const int BoxUpPass = 2;

	[Token(Token = "0x400051F")]
	private const int ApplyBloomPass = 3;

	[Token(Token = "0x4000520")]
	private const int DebugBloomPass = 4;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader bloomShader;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D574", Offset = "0x99D574")]
	public float intensity;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D58C", Offset = "0x99D58C")]
	public int iterations;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D5A4", Offset = "0x99D5A4")]
	public float threshold;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D5BC", Offset = "0x99D5BC")]
	public float softThreshold;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debug;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture[] textures;

	[NonSerialized]
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material bloom;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xD26C9C", Offset = "0xD26C9C", VA = "0xD26C9C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xD2712C", Offset = "0xD2712C", VA = "0xD2712C")]
	public BloomEffect()
	{
	}
}
[Token(Token = "0x20000E7")]
public class ColorGradeConfig : MonoBehaviour
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color _Shadows;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color _Midtones;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color _Hilights;

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xD2A0F4", Offset = "0xD2A0F4", VA = "0xD2A0F4")]
	public ColorGradeConfig()
	{
	}
}
[Token(Token = "0x20000E8")]
[DisallowMultipleComponent]
public class Outline2 : MonoBehaviour
{
	[Token(Token = "0x200045A")]
	public enum Mode
	{
		[Token(Token = "0x4001CD5")]
		OutlineAll,
		[Token(Token = "0x4001CD6")]
		OutlineVisible,
		[Token(Token = "0x4001CD7")]
		OutlineHidden,
		[Token(Token = "0x4001CD8")]
		OutlineAndSilhouette,
		[Token(Token = "0x4001CD9")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x200045B")]
	private class ListVector3
	{
		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xC4F1E8", Offset = "0xC4F1E8", VA = "0xC4F1E8")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9994F0", Offset = "0x9994F0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xC4F398", Offset = "0xC4F398", VA = "0xC4F398")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xC4F3A0", Offset = "0xC4F3A0", VA = "0xC4F3A0")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xC4F430", Offset = "0xC4F430", VA = "0xC4F430")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D5F4", Offset = "0x99D5F4")]
	private float outlineWidth;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99D634", Offset = "0x99D634")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D634", Offset = "0x99D634")]
	private bool precomputeOutline;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x17000050")]
	public Mode OutlineMode
	{
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xC4DBBC", Offset = "0xC4DBBC", VA = "0xC4DBBC")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000500")]
		[Address(RVA = "0xC4DBC4", Offset = "0xC4DBC4", VA = "0xC4DBC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000501")]
		[Address(RVA = "0xC4DBD4", Offset = "0xC4DBD4", VA = "0xC4DBD4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000502")]
		[Address(RVA = "0xC4DBE0", Offset = "0xC4DBE0", VA = "0xC4DBE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000503")]
		[Address(RVA = "0xC4DBF4", Offset = "0xC4DBF4", VA = "0xC4DBF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000504")]
		[Address(RVA = "0xC4DBFC", Offset = "0xC4DBFC", VA = "0xC4DBFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xC4DC0C", Offset = "0xC4DC0C", VA = "0xC4DC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xC4E030", Offset = "0xC4E030", VA = "0xC4E030")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xC4E14C", Offset = "0xC4E14C", VA = "0xC4E14C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xC4E3D8", Offset = "0xC4E3D8", VA = "0xC4E3D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xC4E5A4", Offset = "0xC4E5A4", VA = "0xC4E5A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xC4E6C0", Offset = "0xC4E6C0", VA = "0xC4E6C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xC4E22C", Offset = "0xC4E22C", VA = "0xC4E22C")]
	private void Bake()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xC4DD74", Offset = "0xC4DD74", VA = "0xC4DD74")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xC4E738", Offset = "0xC4E738", VA = "0xC4E738")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xC4E3EC", Offset = "0xC4E3EC", VA = "0xC4E3EC")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xC4F1F0", Offset = "0xC4F1F0", VA = "0xC4F1F0")]
	public Outline2()
	{
	}
}
[Token(Token = "0x20000E9")]
[ExecuteInEditMode]
public class PlanarRealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureResolution;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_clipPlaneOffset;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_finalClipPlaneOffset;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_NormalsFromMesh;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_BaseClipOffsetFromMesh;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool m_BaseClipOffsetFromMeshInverted;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_calculatedNormal;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private System.Collections.Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xC17228", Offset = "0xC17228", VA = "0xC17228")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xC18F68", Offset = "0xC18F68", VA = "0xC18F68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xC185C0", Offset = "0xC185C0", VA = "0xC185C0")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xC17FC0", Offset = "0xC17FC0", VA = "0xC17FC0")]
	private void CreateSurfaceObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xC192B4", Offset = "0xC192B4", VA = "0xC192B4")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xC18B44", Offset = "0xC18B44", VA = "0xC18B44")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xC18D2C", Offset = "0xC18D2C", VA = "0xC18D2C")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xC188A0", Offset = "0xC188A0", VA = "0xC188A0")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xC192D4", Offset = "0xC192D4", VA = "0xC192D4")]
	public PlanarRealtimeReflection()
	{
	}
}
[Token(Token = "0x20000EA")]
public class RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xC1C954", Offset = "0xC1C954", VA = "0xC1C954")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xC1C9B8", Offset = "0xC1C9B8", VA = "0xC1C9B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xC1C9D4", Offset = "0xC1C9D4", VA = "0xC1C9D4")]
	public RealtimeReflection()
	{
	}
}
[Token(Token = "0x20000EB")]
public class SpectrumVis : MonoBehaviour
{
	[Token(Token = "0x200045D")]
	public enum axisStrech
	{
		[Token(Token = "0x4001CDF")]
		dx,
		[Token(Token = "0x4001CE0")]
		dy,
		[Token(Token = "0x4001CE1")]
		dz,
		[Token(Token = "0x4001CE2")]
		dyAndDz,
		[Token(Token = "0x4001CE3")]
		all
	}

	[Token(Token = "0x200045E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999500", Offset = "0x999500")]
	private sealed class <Spectrum_GC>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpectrumVis <>4__this;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000313")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xB66C34", Offset = "0xB66C34", VA = "0xB66C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000314")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xB66CA0", Offset = "0xB66CA0", VA = "0xB66CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xB665F4", Offset = "0xB665F4", VA = "0xB665F4")]
		[DebuggerHidden]
		public <Spectrum_GC>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xB666DC", Offset = "0xB666DC", VA = "0xB666DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xB666E0", Offset = "0xB666E0", VA = "0xB666E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xB66C3C", Offset = "0xB66C3C", VA = "0xB66C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] cubes;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] cubes2;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GrowthRate;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GrowSpeed;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ReductionSpeed;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MaxSound;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float RestrictionNumber;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public axisStrech stretchAxis;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] material;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] SpectrumData;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int EqualizerIndex;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float ScaleY;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float absScale;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float absScale2;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentTrans;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CoroutineHandle handle;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Shader equalshader;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Shader fevershader;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool check_GameToEqualizer;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99D744", Offset = "0x99D744")]
	private WaitForFixedUpdate routineTime;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool feverCheck;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 previousScale;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xB661A0", Offset = "0xB661A0", VA = "0xB661A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xB66264", Offset = "0xB66264", VA = "0xB66264")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xB66364", Offset = "0xB66364", VA = "0xB66364")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xB663D0", Offset = "0xB663D0", VA = "0xB663D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xB662E4", Offset = "0xB662E4", VA = "0xB662E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5780", Offset = "0x9A5780")]
	public IEnumerator<float> Spectrum_GC()
	{
		return null;
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xB664CC", Offset = "0xB664CC", VA = "0xB664CC")]
	public void FeverEqual()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xB66560", Offset = "0xB66560", VA = "0xB66560")]
	public void EndFeverEqual()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xB66620", Offset = "0xB66620", VA = "0xB66620")]
	public SpectrumVis()
	{
	}
}
[Token(Token = "0x20000EC")]
public class XWeaponTrailDemo : MonoBehaviour
{
	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation SwordAnimation;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XWeaponTrail ProTrailDistort;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XWeaponTrail ProTrailShort;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XWeaponTrail ProTraillong;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XWeaponTrail SimpleTrail;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxCollider mBox;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sword;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject parent;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x174B7C0", Offset = "0x174B7C0", VA = "0x174B7C0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x174B968", Offset = "0x174B968", VA = "0x174B968")]
	private void Update()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x174BB30", Offset = "0x174BB30", VA = "0x174BB30")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x174C1B0", Offset = "0x174C1B0", VA = "0x174C1B0")]
	public XWeaponTrailDemo()
	{
	}
}
[Token(Token = "0x20000ED")]
public class AudioFrequencyRing : MonoBehaviour
{
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnalyzeAudio audioData;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sampleCubePrefab;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 StartScale;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Radius;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Sensitivity;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] sampleCube;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xD16018", Offset = "0xD16018", VA = "0xD16018")]
	private void Start()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xD16334", Offset = "0xD16334", VA = "0xD16334")]
	private void Update()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xD16434", Offset = "0xD16434", VA = "0xD16434")]
	public AudioFrequencyRing()
	{
	}
}
[Token(Token = "0x20000EE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997C3C", Offset = "0x997C3C")]
public class AudioParamLight : MonoBehaviour
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnalyzeAudio audioData;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minBrightness;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxBrightness;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int band;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light myLight;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xD164A0", Offset = "0xD164A0", VA = "0xD164A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xD16504", Offset = "0xD16504", VA = "0xD16504")]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xD16574", Offset = "0xD16574", VA = "0xD16574")]
	public AudioParamLight()
	{
	}
}
[Token(Token = "0x20000EF")]
public class AudioParamMaterial : MonoBehaviour
{
	[Token(Token = "0x200045F")]
	public enum ValueType
	{
		[Token(Token = "0x4001CE9")]
		Color,
		[Token(Token = "0x4001CEA")]
		Float
	}

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnalyzeAudio audioData;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int band;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useBuffer;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sensitivity;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color Tint;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ValueType valueType;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ShaderProperty;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material material;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xD16588", Offset = "0xD16588", VA = "0xD16588")]
	private void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xD16630", Offset = "0xD16630", VA = "0xD16630")]
	private void Update()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xD1673C", Offset = "0xD1673C", VA = "0xD1673C")]
	public AudioParamMaterial()
	{
	}
}
[Token(Token = "0x20000F0")]
public class AudioParamScale : MonoBehaviour
{
	[Token(Token = "0x2000460")]
	public enum ScaleDriver
	{
		[Token(Token = "0x4001CEC")]
		Amplitude,
		[Token(Token = "0x4001CED")]
		AudioBand
	}

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnalyzeAudio audioData;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int band;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sensitivity;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useBuffer;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ScaleDriver scaleDriver;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D77C", Offset = "0x99D77C")]
	public Vector3 startScale;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99D7B4", Offset = "0x99D7B4")]
	public Vector3 Axis;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float drivenValue;

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xD1679C", Offset = "0xD1679C", VA = "0xD1679C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xD1689C", Offset = "0xD1689C", VA = "0xD1689C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xD16A14", Offset = "0xD16A14", VA = "0xD16A14")]
	public AudioParamScale()
	{
	}
}
[Token(Token = "0x20000F1")]
public class AudioParamStereo : MonoBehaviour
{
	[Token(Token = "0x2000461")]
	public enum Channel
	{
		[Token(Token = "0x4001CEF")]
		Stereo,
		[Token(Token = "0x4001CF0")]
		Left,
		[Token(Token = "0x4001CF1")]
		Right
	}

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnalyzeAudio audioData;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Channel channel;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int band;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sensitivity;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float smoothing;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useBuffer;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float stereo;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float stereoBuffer;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xD16AC0", Offset = "0xD16AC0", VA = "0xD16AC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xD16CF0", Offset = "0xD16CF0", VA = "0xD16CF0")]
	private float GetStereoBuffer()
	{
		return default(float);
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xD16D90", Offset = "0xD16D90", VA = "0xD16D90")]
	public AudioParamStereo()
	{
	}
}
[Token(Token = "0x20000F2")]
public class PlayHeadControls : MonoBehaviour
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slider;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xC195D8", Offset = "0xC195D8", VA = "0xC195D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xC196A4", Offset = "0xC196A4", VA = "0xC196A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xC19750", Offset = "0xC19750", VA = "0xC19750")]
	public void Scrub()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xC197F8", Offset = "0xC197F8", VA = "0xC197F8")]
	public PlayHeadControls()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ScaleOnAmplitude : MonoBehaviour
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnalyzeAudio audioData;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useBuffer;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float startScale;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxScale;

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xB5E1E4", Offset = "0xB5E1E4", VA = "0xB5E1E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xB5E2E8", Offset = "0xB5E2E8", VA = "0xB5E2E8")]
	public ScaleOnAmplitude()
	{
	}
}
[Token(Token = "0x20000F4")]
public class AddMusicDown : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UISelectMusicNew m_selectMusic;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image backImg;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image arrowImg;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] downBackSprArr;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] downArrowSprArr;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] downArrowBackSprArr;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float bigScale;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float oriScale;

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xD131A4", Offset = "0xD131A4", VA = "0xD131A4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xD1328C", Offset = "0xD1328C", VA = "0xD1328C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xD1337C", Offset = "0xD1337C", VA = "0xD1337C")]
	public AddMusicDown()
	{
	}
}
[Token(Token = "0x20000F5")]
public class AddMusicUp : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UISelectMusicNew m_selectMusic;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image backImg;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image arrowImg;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] upBackSprArr;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] upArrowSprArr;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] upArrowBackSprArr;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float bigScale;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float oriScale;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xD13394", Offset = "0xD13394", VA = "0xD13394", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xD1347C", Offset = "0xD1347C", VA = "0xD1347C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xD1356C", Offset = "0xD1356C", VA = "0xD1356C")]
	public AddMusicUp()
	{
	}
}
[Token(Token = "0x20000F6")]
public class AlreadySound : MonoBehaviour
{
	[Token(Token = "0x6000545")]
	[Address(RVA = "0xD137CC", Offset = "0xD137CC", VA = "0xD137CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xD138E0", Offset = "0xD138E0", VA = "0xD138E0")]
	public AlreadySound()
	{
	}
}
[Token(Token = "0x20000F7")]
public class BeatBoxMissDelete_tok2 : MonoBehaviour
{
	[Token(Token = "0x6000547")]
	[Address(RVA = "0xD1EF44", Offset = "0xD1EF44", VA = "0xD1EF44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xD1F058", Offset = "0xD1F058", VA = "0xD1F058")]
	public BeatBoxMissDelete_tok2()
	{
	}
}
[Token(Token = "0x20000F8")]
public class Define
{
	[Token(Token = "0x6000549")]
	[Address(RVA = "0xCFA1B4", Offset = "0xCFA1B4", VA = "0xCFA1B4")]
	public static float GetX()
	{
		return default(float);
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xCFA204", Offset = "0xCFA204", VA = "0xCFA204")]
	public static void SetX(float _value)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xCFA260", Offset = "0xCFA260", VA = "0xCFA260")]
	public static float GetY()
	{
		return default(float);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xCFA2B0", Offset = "0xCFA2B0", VA = "0xCFA2B0")]
	public static void SetY(float _value)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xCFA30C", Offset = "0xCFA30C", VA = "0xCFA30C")]
	public static float GetZ()
	{
		return default(float);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xCFA35C", Offset = "0xCFA35C", VA = "0xCFA35C")]
	public static void SetZ(float _value)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xCFA3B8", Offset = "0xCFA3B8", VA = "0xCFA3B8")]
	public Define()
	{
	}
}
[Token(Token = "0x20000F9")]
public class ComboEffect : MonoBehaviour
{
	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999510", Offset = "0x999510")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sequence CB_Seq;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ComboEffect <>4__this;

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xD2A45C", Offset = "0xD2A45C", VA = "0xD2A45C")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xD2A7DC", Offset = "0xD2A7DC", VA = "0xD2A7DC")]
		internal void <Sequ>b__0()
		{
		}
	}

	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999520", Offset = "0x999520")]
	private sealed class <BeatText>d__21 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ComboEffect <>4__this;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <TimeSum>5__2;

		[Token(Token = "0x17000315")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xD2B110", Offset = "0xD2B110", VA = "0xD2B110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000316")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xD2B17C", Offset = "0xD2B17C", VA = "0xD2B17C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xD2A764", Offset = "0xD2A764", VA = "0xD2A764")]
		[DebuggerHidden]
		public <BeatText>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xD2AF28", Offset = "0xD2AF28", VA = "0xD2AF28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xD2AF2C", Offset = "0xD2AF2C", VA = "0xD2AF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xD2B118", Offset = "0xD2B118", VA = "0xD2B118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999530", Offset = "0x999530")]
	private sealed class <BeatText2>d__22 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ComboEffect <>4__this;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <TimeSum>5__2;

		[Token(Token = "0x17000317")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0xD2AE58", Offset = "0xD2AE58", VA = "0xD2AE58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000318")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xD2AEC4", Offset = "0xD2AEC4", VA = "0xD2AEC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xD2A790", Offset = "0xD2A790", VA = "0xD2A790")]
		[DebuggerHidden]
		public <BeatText2>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xD2A8A8", Offset = "0xD2A8A8", VA = "0xD2A8A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xD2A8AC", Offset = "0xD2A8AC", VA = "0xD2A8AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xD2AE60", Offset = "0xD2AE60", VA = "0xD2AE60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float MaxSize;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float MinSize;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x99D82C", Offset = "0x99D82C")]
	[SerializeField]
	private float GrowTime;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float ReductionTime;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x99D878", Offset = "0x99D878")]
	[SerializeField]
	private float MaxAlpha;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float MinAlpha;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x99D8C4", Offset = "0x99D8C4")]
	[SerializeField]
	private float GrowTime2;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float MaintainTime2;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float ReductionTime2;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x99D920", Offset = "0x99D920")]
	[SerializeField]
	private GameObject ComboText;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Text ComboTextAlpha;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text ComboNumberText;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TextMeshProUGUI thisText;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int thisCombo;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float thisSize;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isCombo;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private CoroutineHandle handle;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xD2A1DC", Offset = "0xD2A1DC", VA = "0xD2A1DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xD2A270", Offset = "0xD2A270", VA = "0xD2A270")]
	public void CB_Init()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xD2A2D4", Offset = "0xD2A2D4", VA = "0xD2A2D4")]
	public void Sequ()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xD2A464", Offset = "0xD2A464", VA = "0xD2A464")]
	private void Update()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xD2A664", Offset = "0xD2A664", VA = "0xD2A664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A57E4", Offset = "0x9A57E4")]
	private IEnumerator<float> BeatText()
	{
		return null;
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xD2A6E4", Offset = "0xD2A6E4", VA = "0xD2A6E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5848", Offset = "0x9A5848")]
	private IEnumerator<float> BeatText2()
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xD2A7BC", Offset = "0xD2A7BC", VA = "0xD2A7BC")]
	public ComboEffect()
	{
	}
}
[Token(Token = "0x20000FA")]
public class ComboMaker : MonoSingletonBase<ComboMaker>
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ComboText;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ComboText2;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ComboTextRoot;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> ComboTextList;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xD2B1E0", Offset = "0xD2B1E0", VA = "0xD2B1E0")]
	public void MakeComboText(int comboCount, Vector3 pos)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xD2B478", Offset = "0xD2B478", VA = "0xD2B478")]
	public ComboMaker()
	{
	}
}
[Token(Token = "0x20000FB")]
public class Effect : MonoBehaviour
{
	[Token(Token = "0x2000465")]
	public enum eEFFECT_STATE
	{
		[Token(Token = "0x4001CFD")]
		pos,
		[Token(Token = "0x4001CFE")]
		attach
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int m_key;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected bool m_isNeedPlay;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected float m_size;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GameObject m_effect;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Transform m_attachParent;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected eEFFECT_STATE m_effectState;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool m_isLoop;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ParticleBase> m_particleList;

	[Token(Token = "0x17000053")]
	public bool isOpen
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xD008E8", Offset = "0xD008E8", VA = "0xD008E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000054")]
	public int getKey
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xD00998", Offset = "0xD00998", VA = "0xD00998")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xD009A0", Offset = "0xD009A0", VA = "0xD009A0")]
	private bool CreateEffect(string _path)
	{
		return default(bool);
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xD00BF4", Offset = "0xD00BF4", VA = "0xD00BF4")]
	public void Close()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xD00C1C", Offset = "0xD00C1C", VA = "0xD00C1C")]
	public void Play(string _path, Vector3 _pos, string _name, bool _loop)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xD00D98", Offset = "0xD00D98", VA = "0xD00D98")]
	public void Play(string _path, Vector3 _pos, Quaternion _rot, float _size, bool _loop)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xD00F44", Offset = "0xD00F44", VA = "0xD00F44")]
	public void Play(string _path, Transform _attachParent, float _size, bool _loop)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xD010C8", Offset = "0xD010C8", VA = "0xD010C8")]
	public void Play(string _path, Vector3 _pos, Quaternion _rot, string _score, bool _loop = false)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xD014A8", Offset = "0xD014A8", VA = "0xD014A8")]
	private void PlayInit()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xD015A0", Offset = "0xD015A0", VA = "0xD015A0")]
	public bool IsStop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xD01654", Offset = "0xD01654", VA = "0xD01654", Slot = "4")]
	public virtual void UpdateLogic()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xD017A0", Offset = "0xD017A0", VA = "0xD017A0")]
	public Effect()
	{
	}
}
[Token(Token = "0x20000FC")]
public class EffectMgr : MonoBehaviour
{
	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999540", Offset = "0x999540")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _key;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xD01CDC", Offset = "0xD01CDC", VA = "0xD01CDC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xD01FD0", Offset = "0xD01FD0", VA = "0xD01FD0")]
		internal bool <GetEffect>b__0(Effect _effect)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EffectMgr m_instance;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject newFloating;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oldFloating;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isfirstCheck;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_parent_effect;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Effect> m_effectList;

	[Token(Token = "0x17000055")]
	public static EffectMgr Instance
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0xD01388", Offset = "0xD01388", VA = "0xD01388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xD01824", Offset = "0xD01824", VA = "0xD01824")]
	public Effect Play(string _path, Vector3 _pos, string _name, bool _loop = false)
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xD01B50", Offset = "0xD01B50", VA = "0xD01B50")]
	public Effect Play(string _path, Vector3 _pos, Quaternion _rot, float _size, bool _loop = false)
	{
		return null;
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xD01BCC", Offset = "0xD01BCC", VA = "0xD01BCC")]
	public Effect Play(string _path, Transform _parent, float _size = 1f, bool _loop = false)
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xD01C30", Offset = "0xD01C30", VA = "0xD01C30")]
	public Effect Play(string _path, Vector3 _pos, Quaternion _rot, string _score, bool _loop = false)
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xD018A0", Offset = "0xD018A0", VA = "0xD018A0")]
	private Effect GetEffect(string _path)
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xD01CE4", Offset = "0xD01CE4", VA = "0xD01CE4")]
	public void Clear()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xD01E18", Offset = "0xD01E18", VA = "0xD01E18")]
	private void Update()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xD01F54", Offset = "0xD01F54", VA = "0xD01F54")]
	public EffectMgr()
	{
	}
}
[Token(Token = "0x20000FD")]
public class Particle_animation : ParticleBase
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation m_animation;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_startSize;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xC163CC", Offset = "0xC163CC", VA = "0xC163CC")]
	public Particle_animation(Animation _ani)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xC16408", Offset = "0xC16408", VA = "0xC16408", Slot = "4")]
	public override void SetSize(float _size)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xC16504", Offset = "0xC16504", VA = "0xC16504", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xC16574", Offset = "0xC16574", VA = "0xC16574", Slot = "6")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xC16608", Offset = "0xC16608", VA = "0xC16608", Slot = "7")]
	public override bool IsStop()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000FE")]
public class Particle_animator : ParticleBase
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_animator;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_startSize;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xC166A4", Offset = "0xC166A4", VA = "0xC166A4")]
	public Particle_animator(Animator _ani)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xC166E0", Offset = "0xC166E0", VA = "0xC166E0", Slot = "4")]
	public override void SetSize(float _size)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xC167DC", Offset = "0xC167DC", VA = "0xC167DC", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xC1684C", Offset = "0xC1684C", VA = "0xC1684C", Slot = "6")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xC168E0", Offset = "0xC168E0", VA = "0xC168E0", Slot = "7")]
	public override bool IsStop()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000FF")]
public class Particle_particleSystem : ParticleBase
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem m_particle;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_startSize;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xC16950", Offset = "0xC16950", VA = "0xC16950")]
	public Particle_particleSystem(ParticleSystem _particle)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xC169B4", Offset = "0xC169B4", VA = "0xC169B4", Slot = "4")]
	public override void SetSize(float _size)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xC16A68", Offset = "0xC16A68", VA = "0xC16A68", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xC16AFC", Offset = "0xC16AFC", VA = "0xC16AFC", Slot = "6")]
	public override void Stop()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xC16B90", Offset = "0xC16B90", VA = "0xC16B90", Slot = "7")]
	public override bool IsStop()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000100")]
public class ParticleBase
{
	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_size;

	[Token(Token = "0x17000056")]
	public float getSize
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xC1639C", Offset = "0xC1639C", VA = "0xC1639C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xC163A4", Offset = "0xC163A4", VA = "0xC163A4", Slot = "4")]
	public virtual void SetSize(float _size)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xC163AC", Offset = "0xC163AC", VA = "0xC163AC", Slot = "5")]
	public virtual void Play()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xC163B0", Offset = "0xC163B0", VA = "0xC163B0", Slot = "6")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xC163B4", Offset = "0xC163B4", VA = "0xC163B4", Slot = "7")]
	public virtual bool IsStop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xC163BC", Offset = "0xC163BC", VA = "0xC163BC")]
	public ParticleBase()
	{
	}
}
[Token(Token = "0x2000101")]
public class MicroCoroutine
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<IEnumerator> _coroutines;

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xE023A8", Offset = "0xE023A8", VA = "0xE023A8")]
	public void AddCoroutine(IEnumerator enumerator)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xE02410", Offset = "0xE02410", VA = "0xE02410")]
	public void StopCoroutine(IEnumerator enumerator)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xE02478", Offset = "0xE02478", VA = "0xE02478")]
	public void StopAllCoroutines()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xE024D0", Offset = "0xE024D0", VA = "0xE024D0")]
	public void Run()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xE025F4", Offset = "0xE025F4", VA = "0xE025F4")]
	public MicroCoroutine()
	{
	}
}
[Token(Token = "0x2000102")]
public class CoroutineManager : MonoBehaviour
{
	[Token(Token = "0x2000467")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999550", Offset = "0x999550")]
	private sealed class <RunUpdateMicroCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineManager <>4__this;

		[Token(Token = "0x17000319")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xCF68CC", Offset = "0xCF68CC", VA = "0xCF68CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xCF6938", Offset = "0xCF6938", VA = "0xCF6938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xCF6470", Offset = "0xCF6470", VA = "0xCF6470")]
		[DebuggerHidden]
		public <RunUpdateMicroCoroutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xCF6848", Offset = "0xCF6848", VA = "0xCF6848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xCF684C", Offset = "0xCF684C", VA = "0xCF684C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xCF68D4", Offset = "0xCF68D4", VA = "0xCF68D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999560", Offset = "0x999560")]
	private sealed class <RunFixedUpdateMicroCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineManager <>4__this;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <fu>5__2;

		[Token(Token = "0x1700031B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xCF67D4", Offset = "0xCF67D4", VA = "0xCF67D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xCF6840", Offset = "0xCF6840", VA = "0xCF6840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xCF649C", Offset = "0xCF649C", VA = "0xCF649C")]
		[DebuggerHidden]
		public <RunFixedUpdateMicroCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xCF6700", Offset = "0xCF6700", VA = "0xCF6700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xCF6704", Offset = "0xCF6704", VA = "0xCF6704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xCF67DC", Offset = "0xCF67DC", VA = "0xCF67DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999570", Offset = "0x999570")]
	private sealed class <RunEndOfFrameMicroCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineManager <>4__this;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForEndOfFrame <eof>5__2;

		[Token(Token = "0x1700031D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xCF668C", Offset = "0xCF668C", VA = "0xCF668C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xCF66F8", Offset = "0xCF66F8", VA = "0xCF66F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xCF64C8", Offset = "0xCF64C8", VA = "0xCF64C8")]
		[DebuggerHidden]
		public <RunEndOfFrameMicroCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xCF65B8", Offset = "0xCF65B8", VA = "0xCF65B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xCF65BC", Offset = "0xCF65BC", VA = "0xCF65BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xCF6694", Offset = "0xCF6694", VA = "0xCF6694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CoroutineManager _instance;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MicroCoroutine updateMicroCoroutine;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MicroCoroutine fixedUpdateMicroCoroutine;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MicroCoroutine endOfFrameMicroCoroutine;

	[Token(Token = "0x17000057")]
	public static CoroutineManager instance
	{
		[Token(Token = "0x6000588")]
		[Address(RVA = "0xCF5F10", Offset = "0xCF5F10", VA = "0xCF5F10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xCF603C", Offset = "0xCF603C", VA = "0xCF603C")]
	public static void StartUpdateCoroutine(IEnumerator routine)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xCF6104", Offset = "0xCF6104", VA = "0xCF6104")]
	public static void StartFixedUpdateCoroutine(IEnumerator routine)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xCF61CC", Offset = "0xCF61CC", VA = "0xCF61CC")]
	public static void StartEndOfFrameCoroutine(IEnumerator routine)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xCF6294", Offset = "0xCF6294", VA = "0xCF6294")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xCF62F0", Offset = "0xCF62F0", VA = "0xCF62F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A58AC", Offset = "0x9A58AC")]
	private IEnumerator RunUpdateMicroCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xCF6370", Offset = "0xCF6370", VA = "0xCF6370")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5910", Offset = "0x9A5910")]
	private IEnumerator RunFixedUpdateMicroCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xCF63F0", Offset = "0xCF63F0", VA = "0xCF63F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5974", Offset = "0x9A5974")]
	private IEnumerator RunEndOfFrameMicroCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xCF64F4", Offset = "0xCF64F4", VA = "0xCF64F4")]
	public CoroutineManager()
	{
	}
}
[Token(Token = "0x2000103")]
public class DataMgr : MonoSingletonPass<DataMgr>
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MeshRenderer> LightList;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LightSizeBlue;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float LightSizeRed;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float LightUpSize1;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float LightUpSize2;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float LightUpSize3;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xCF6B18", Offset = "0xCF6B18", VA = "0xCF6B18", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xCF6B68", Offset = "0xCF6B68", VA = "0xCF6B68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xCF6DB8", Offset = "0xCF6DB8", VA = "0xCF6DB8")]
	public DataMgr()
	{
	}
}
[Token(Token = "0x2000104")]
public static class EasingFunction
{
	[Token(Token = "0x200046A")]
	public enum Ease
	{
		[Token(Token = "0x4001D0C")]
		EaseInQuad,
		[Token(Token = "0x4001D0D")]
		EaseOutQuad,
		[Token(Token = "0x4001D0E")]
		EaseInOutQuad,
		[Token(Token = "0x4001D0F")]
		EaseInCubic,
		[Token(Token = "0x4001D10")]
		EaseOutCubic,
		[Token(Token = "0x4001D11")]
		EaseInOutCubic,
		[Token(Token = "0x4001D12")]
		EaseInQuart,
		[Token(Token = "0x4001D13")]
		EaseOutQuart,
		[Token(Token = "0x4001D14")]
		EaseInOutQuart,
		[Token(Token = "0x4001D15")]
		EaseInQuint,
		[Token(Token = "0x4001D16")]
		EaseOutQuint,
		[Token(Token = "0x4001D17")]
		EaseInOutQuint,
		[Token(Token = "0x4001D18")]
		EaseInSine,
		[Token(Token = "0x4001D19")]
		EaseOutSine,
		[Token(Token = "0x4001D1A")]
		EaseInOutSine,
		[Token(Token = "0x4001D1B")]
		EaseInExpo,
		[Token(Token = "0x4001D1C")]
		EaseOutExpo,
		[Token(Token = "0x4001D1D")]
		EaseInOutExpo,
		[Token(Token = "0x4001D1E")]
		EaseInCirc,
		[Token(Token = "0x4001D1F")]
		EaseOutCirc,
		[Token(Token = "0x4001D20")]
		EaseInOutCirc,
		[Token(Token = "0x4001D21")]
		Linear,
		[Token(Token = "0x4001D22")]
		Spring,
		[Token(Token = "0x4001D23")]
		EaseInBounce,
		[Token(Token = "0x4001D24")]
		EaseOutBounce,
		[Token(Token = "0x4001D25")]
		EaseInOutBounce,
		[Token(Token = "0x4001D26")]
		EaseInBack,
		[Token(Token = "0x4001D27")]
		EaseOutBack,
		[Token(Token = "0x4001D28")]
		EaseInOutBack,
		[Token(Token = "0x4001D29")]
		EaseInElastic,
		[Token(Token = "0x4001D2A")]
		EaseOutElastic,
		[Token(Token = "0x4001D2B")]
		EaseInOutElastic
	}

	[Token(Token = "0x200046B")]
	public delegate float Function(float s, float e, float v);

	[Token(Token = "0x40005D1")]
	private const float NATURAL_LOG_OF_2 = 0.6931472f;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xCFD314", Offset = "0xCFD314", VA = "0xCFD314")]
	public static float Linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xCFD39C", Offset = "0xCFD39C", VA = "0xCFD39C")]
	public static float Spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xCFD4A0", Offset = "0xCFD4A0", VA = "0xCFD4A0")]
	public static float EaseInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xCFD4B4", Offset = "0xCFD4B4", VA = "0xCFD4B4")]
	public static float EaseOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xCFD4D0", Offset = "0xCFD4D0", VA = "0xCFD4D0")]
	public static float EaseInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xCFD524", Offset = "0xCFD524", VA = "0xCFD524")]
	public static float EaseInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xCFD53C", Offset = "0xCFD53C", VA = "0xCFD53C")]
	public static float EaseOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xCFD564", Offset = "0xCFD564", VA = "0xCFD564")]
	public static float EaseInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xCFD5BC", Offset = "0xCFD5BC", VA = "0xCFD5BC")]
	public static float EaseInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xCFD5D8", Offset = "0xCFD5D8", VA = "0xCFD5D8")]
	public static float EaseOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xCFD600", Offset = "0xCFD600", VA = "0xCFD600")]
	public static float EaseInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xCFD65C", Offset = "0xCFD65C", VA = "0xCFD65C")]
	public static float EaseInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xCFD67C", Offset = "0xCFD67C", VA = "0xCFD67C")]
	public static float EaseOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xCFD6AC", Offset = "0xCFD6AC", VA = "0xCFD6AC")]
	public static float EaseInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xCFD714", Offset = "0xCFD714", VA = "0xCFD714")]
	public static float EaseInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xCFD7AC", Offset = "0xCFD7AC", VA = "0xCFD7AC")]
	public static float EaseOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xCFD840", Offset = "0xCFD840", VA = "0xCFD840")]
	public static float EaseInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xCFD8E4", Offset = "0xCFD8E4", VA = "0xCFD8E4")]
	public static float EaseInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xCFD97C", Offset = "0xCFD97C", VA = "0xCFD97C")]
	public static float EaseOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xCFDA14", Offset = "0xCFDA14", VA = "0xCFDA14")]
	public static float EaseInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xCFDB04", Offset = "0xCFDB04", VA = "0xCFDB04")]
	public static float EaseInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xCFDBB0", Offset = "0xCFDBB0", VA = "0xCFDBB0")]
	public static float EaseOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xCFDC5C", Offset = "0xCFDC5C", VA = "0xCFDC5C")]
	public static float EaseInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xCFDD54", Offset = "0xCFDD54", VA = "0xCFDD54")]
	public static float EaseInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xCFDD90", Offset = "0xCFDD90", VA = "0xCFDD90")]
	public static float EaseOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xCFDE60", Offset = "0xCFDE60", VA = "0xCFDE60")]
	public static float EaseInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xCFDEE4", Offset = "0xCFDEE4", VA = "0xCFDEE4")]
	public static float EaseInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xCFDF14", Offset = "0xCFDF14", VA = "0xCFDF14")]
	public static float EaseOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xCFDF54", Offset = "0xCFDF54", VA = "0xCFDF54")]
	public static float EaseInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xCFDFD8", Offset = "0xCFDFD8", VA = "0xCFDFD8")]
	public static float EaseInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xCFE0C0", Offset = "0xCFE0C0", VA = "0xCFE0C0")]
	public static float EaseOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xCFE1A4", Offset = "0xCFE1A4", VA = "0xCFE1A4")]
	public static float EaseInOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xCFE308", Offset = "0xCFE308", VA = "0xCFE308")]
	public static float LinearD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xCFE310", Offset = "0xCFE310", VA = "0xCFE310")]
	public static float EaseInQuadD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xCFE320", Offset = "0xCFE320", VA = "0xCFE320")]
	public static float EaseOutQuadD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xCFE33C", Offset = "0xCFE33C", VA = "0xCFE33C")]
	public static float EaseInOutQuadD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xCFE364", Offset = "0xCFE364", VA = "0xCFE364")]
	public static float EaseInCubicD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xCFE37C", Offset = "0xCFE37C", VA = "0xCFE37C")]
	public static float EaseOutCubicD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xCFE39C", Offset = "0xCFE39C", VA = "0xCFE39C")]
	public static float EaseInOutCubicD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xCFE3CC", Offset = "0xCFE3CC", VA = "0xCFE3CC")]
	public static float EaseInQuartD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xCFE3E8", Offset = "0xCFE3E8", VA = "0xCFE3E8")]
	public static float EaseOutQuartD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xCFE40C", Offset = "0xCFE40C", VA = "0xCFE40C")]
	public static float EaseInOutQuartD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xCFE444", Offset = "0xCFE444", VA = "0xCFE444")]
	public static float EaseInQuintD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xCFE464", Offset = "0xCFE464", VA = "0xCFE464")]
	public static float EaseOutQuintD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xCFE48C", Offset = "0xCFE48C", VA = "0xCFE48C")]
	public static float EaseInOutQuintD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xCFE4C4", Offset = "0xCFE4C4", VA = "0xCFE4C4")]
	public static float EaseInSineD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xCFE568", Offset = "0xCFE568", VA = "0xCFE568")]
	public static float EaseOutSineD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xCFE5FC", Offset = "0xCFE5FC", VA = "0xCFE5FC")]
	public static float EaseInOutSineD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xCFE698", Offset = "0xCFE698", VA = "0xCFE698")]
	public static float EaseInExpoD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xCFE738", Offset = "0xCFE738", VA = "0xCFE738")]
	public static float EaseOutExpoD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xCFE7D8", Offset = "0xCFE7D8", VA = "0xCFE7D8")]
	public static float EaseInOutExpoD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xCFE8C8", Offset = "0xCFE8C8", VA = "0xCFE8C8")]
	public static float EaseInCircD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xCFE96C", Offset = "0xCFE96C", VA = "0xCFE96C")]
	public static float EaseOutCircD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xCFEA18", Offset = "0xCFEA18", VA = "0xCFEA18")]
	public static float EaseInOutCircD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xCFEB10", Offset = "0xCFEB10", VA = "0xCFEB10")]
	public static float EaseInBounceD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xCFEB84", Offset = "0xCFEB84", VA = "0xCFEB84")]
	public static float EaseOutBounceD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xCFEBF0", Offset = "0xCFEBF0", VA = "0xCFEBF0")]
	public static float EaseInOutBounceD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xCFEC84", Offset = "0xCFEC84", VA = "0xCFEC84")]
	public static float EaseInBackD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xCFECB4", Offset = "0xCFECB4", VA = "0xCFECB4")]
	public static float EaseOutBackD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xCFECF0", Offset = "0xCFECF0", VA = "0xCFECF0")]
	public static float EaseInOutBackD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xCFED80", Offset = "0xCFED80", VA = "0xCFED80")]
	public static float EaseInElasticD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xCFED8C", Offset = "0xCFED8C", VA = "0xCFED8C")]
	public static float EaseOutElasticD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xCFEE90", Offset = "0xCFEE90", VA = "0xCFEE90")]
	public static float EaseInOutElasticD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xCFF028", Offset = "0xCFF028", VA = "0xCFF028")]
	public static float SpringD(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xCFF1DC", Offset = "0xCFF1DC", VA = "0xCFF1DC")]
	public static Function GetEasingFunction(Ease easingFunction)
	{
		return null;
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xD0016C", Offset = "0xD0016C", VA = "0xD0016C")]
	public static Function GetEasingFunctionDerivative(Ease easingFunction)
	{
		return null;
	}
}
[Token(Token = "0x2000105")]
public class LayerDefine
{
	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int m_meshLayer;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int m_boxLayer;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int m_weaponLayer;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int m_addweaponLayer;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int m_vibrateLayer;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int m_defaultLayer;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int m_playerLayer;

	[Token(Token = "0x17000058")]
	public static int getMeshLayer
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xBB75E4", Offset = "0xBB75E4", VA = "0xBB75E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000059")]
	public static int getBoxLayer
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xBB76BC", Offset = "0xBB76BC", VA = "0xBB76BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005A")]
	public static int getWeaponLayer
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xBB7794", Offset = "0xBB7794", VA = "0xBB7794")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005B")]
	public static int getAddWeaponLayer
	{
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xBB7870", Offset = "0xBB7870", VA = "0xBB7870")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005C")]
	public static int getVibrateLayer
	{
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xBB794C", Offset = "0xBB794C", VA = "0xBB794C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005D")]
	public static int getDefaultLayer
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xBB7A28", Offset = "0xBB7A28", VA = "0xBB7A28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005E")]
	public static int getPlayerLayer
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xBB7B04", Offset = "0xBB7B04", VA = "0xBB7B04")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xBB7BE0", Offset = "0xBB7BE0", VA = "0xBB7BE0")]
	public LayerDefine()
	{
	}
}
[Token(Token = "0x2000106")]
public class TimeOver
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isStop;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_time;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_maxTime;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityAction m_endEvent;

	[Token(Token = "0x1700005F")]
	public float getRemainTime
	{
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xEE1E20", Offset = "0xEE1E20", VA = "0xEE1E20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xEE1E2C", Offset = "0xEE1E2C", VA = "0xEE1E2C")]
	public void StartTime(float _maxTime, UnityAction _event)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xEE1E40", Offset = "0xEE1E40", VA = "0xEE1E40")]
	public void UpdateLogic()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xEE1EB0", Offset = "0xEE1EB0", VA = "0xEE1EB0")]
	public TimeOver()
	{
	}
}
[Token(Token = "0x2000107")]
public class VibrateTrigger : MonoBehaviour
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice vDevice;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isRay;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxDistance;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject startPos;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Effect;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float EffectSize;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private RaycastHit hit;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int layerMask;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject Effect_;

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xB8DE08", Offset = "0xB8DE08", VA = "0xB8DE08")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xB8DF64", Offset = "0xB8DF64", VA = "0xB8DF64")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xB8E434", Offset = "0xB8E434", VA = "0xB8E434")]
	public VibrateTrigger()
	{
	}
}
[Token(Token = "0x2000108")]
public class Weapon : MonoBehaviour
{
	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999580", Offset = "0x999580")]
	private sealed class <temp>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon <>4__this;

		[Token(Token = "0x1700031F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x174B554", Offset = "0x174B554", VA = "0x174B554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0x174B5C0", Offset = "0x174B5C0", VA = "0x174B5C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x174B458", Offset = "0x174B458", VA = "0x174B458")]
		[DebuggerHidden]
		public <temp>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x174B484", Offset = "0x174B484", VA = "0x174B484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x174B488", Offset = "0x174B488", VA = "0x174B488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x174B55C", Offset = "0x174B55C", VA = "0x174B55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform point;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eBEAT_COLOR beatColor;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VibrateTrigger vtrigger;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoxCollider weaponCollider;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform bladePosition;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControllerDevice m_device;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float wait;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isActive;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xB93374", Offset = "0xB93374", VA = "0xB93374")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xB933D8", Offset = "0xB933D8", VA = "0xB933D8")]
	public void Vibrate(float time, ushort power)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xB934A0", Offset = "0xB934A0", VA = "0xB934A0")]
	public void Open(ControllerDevice _device)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xB9355C", Offset = "0xB9355C", VA = "0xB9355C")]
	public void SetBoxColliderSize(bool isSize)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xB935D0", Offset = "0xB935D0", VA = "0xB935D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A59D8", Offset = "0x9A59D8")]
	private IEnumerator temp()
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xB93650", Offset = "0xB93650", VA = "0xB93650")]
	public Weapon()
	{
	}
}
[Token(Token = "0x2000109")]
public class GameDataBase
{
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected string m_fileName;

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xD06C70", Offset = "0xD06C70", VA = "0xD06C70")]
	public GameDataBase(string _fileName)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xD06CA4", Offset = "0xD06CA4", VA = "0xD06CA4", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xD06CA8", Offset = "0xD06CA8", VA = "0xD06CA8", Slot = "5")]
	public virtual string GetSaveData()
	{
		return null;
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xD06CB0", Offset = "0xD06CB0", VA = "0xD06CB0", Slot = "6")]
	public virtual void SetSaveData(string _content)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xD06CB4", Offset = "0xD06CB4", VA = "0xD06CB4", Slot = "7")]
	public virtual void Save()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xD06E4C", Offset = "0xD06E4C", VA = "0xD06E4C", Slot = "8")]
	public virtual void Load()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xD07018", Offset = "0xD07018", VA = "0xD07018", Slot = "9")]
	public virtual void UpdateLogic()
	{
	}
}
[Token(Token = "0x200010A")]
public class GameDataMgr : XcSingleton<GameDataMgr>
{
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ScoreData scoreData;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xD0701C", Offset = "0xD0701C", VA = "0xD0701C")]
	public void Load()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xD0703C", Offset = "0xD0703C", VA = "0xD0703C")]
	public GameDataMgr()
	{
	}
}
[Serializable]
[Token(Token = "0x200010B")]
public class Score
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int rank;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int score;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long startTime;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxcombo;

	[Token(Token = "0x17000060")]
	public string getStartTimeString
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xB5E9F8", Offset = "0xB5E9F8", VA = "0xB5E9F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xB5EA30", Offset = "0xB5EA30", VA = "0xB5EA30")]
	public Score()
	{
	}
}
[Serializable]
[Token(Token = "0x200010C")]
public class ScoreList
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int musicIndex;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public eBEAT_LEVEL level;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eBEAT_MODE mode;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Score> scoreList;

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xB5FB38", Offset = "0xB5FB38", VA = "0xB5FB38")]
	public ScoreList()
	{
	}
}
[Token(Token = "0x200010D")]
public class ScoreData : GameDataBase
{
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999590", Offset = "0x999590")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScoreList _list;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xB5ED18", Offset = "0xB5ED18", VA = "0xB5ED18")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xB5F73C", Offset = "0xB5F73C", VA = "0xB5F73C")]
		internal bool <AddScore>b__0(ScoreList _s1)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9995A0", Offset = "0x9995A0")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _select;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public eBEAT_LEVEL _level;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eBEAT_MODE _mode;

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xB5EFB0", Offset = "0xB5EFB0", VA = "0xB5EFB0")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xB5F8A0", Offset = "0xB5F8A0", VA = "0xB5F8A0")]
		internal bool <GetMaxScore>b__1(ScoreList _s1)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9995B0", Offset = "0x9995B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<ScoreList> <>9__5_0;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<Score> <>9__5_2;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<ScoreList> <>9__6_0;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<Score> <>9__6_1;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Comparison<ScoreList> <>9__7_0;

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xB5F5AC", Offset = "0xB5F5AC", VA = "0xB5F5AC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xB5F5B4", Offset = "0xB5F5B4", VA = "0xB5F5B4")]
		internal int <GetMaxScore>b__5_0(ScoreList _s1, ScoreList _s2)
		{
			return default(int);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xB5F604", Offset = "0xB5F604", VA = "0xB5F604")]
		internal int <GetMaxScore>b__5_2(Score _s1, Score _s2)
		{
			return default(int);
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xB5F650", Offset = "0xB5F650", VA = "0xB5F650")]
		internal int <ResetRank>b__6_0(ScoreList _s1, ScoreList _s2)
		{
			return default(int);
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xB5F6A0", Offset = "0xB5F6A0", VA = "0xB5F6A0")]
		internal int <ResetRank>b__6_1(Score _s1, Score _s2)
		{
			return default(int);
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xB5F6EC", Offset = "0xB5F6EC", VA = "0xB5F6EC")]
		internal int <GetRankList>b__7_0(ScoreList _s1, ScoreList _s2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000470")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9995C0", Offset = "0x9995C0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _select;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public eBEAT_LEVEL _level;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eBEAT_MODE _mode;

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xB5F53C", Offset = "0xB5F53C", VA = "0xB5F53C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xB5F9EC", Offset = "0xB5F9EC", VA = "0xB5F9EC")]
		internal bool <GetRankList>b__1(ScoreList _s1)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ScoreList> scoreList;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xB5EA38", Offset = "0xB5EA38", VA = "0xB5EA38")]
	public ScoreData()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xB5EAC0", Offset = "0xB5EAC0", VA = "0xB5EAC0", Slot = "5")]
	public override string GetSaveData()
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xB5EB10", Offset = "0xB5EB10", VA = "0xB5EB10", Slot = "6")]
	public override void SetSaveData(string _content)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xB5EBE0", Offset = "0xB5EBE0", VA = "0xB5EBE0")]
	public void AddScore(ScoreList _list, Score _score)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xB5ED20", Offset = "0xB5ED20", VA = "0xB5ED20")]
	public Score GetMaxScore(int _select, eBEAT_MODE _mode, eBEAT_LEVEL _level)
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xB5EFB8", Offset = "0xB5EFB8", VA = "0xB5EFB8")]
	public void ResetRank()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xB5F2E0", Offset = "0xB5F2E0", VA = "0xB5F2E0")]
	public List<Score> GetRankList(int _maxRank, int _select, eBEAT_MODE _mode, eBEAT_LEVEL _level)
	{
		return null;
	}
}
[Token(Token = "0x200010E")]
public class GameLogic_LoadingMode : FsmState<eGAME_STATE>
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_time;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xD08918", Offset = "0xD08918", VA = "0xD08918")]
	public GameLogic_LoadingMode()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xD09C30", Offset = "0xD09C30", VA = "0xD09C30", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xD09D00", Offset = "0xD09D00", VA = "0xD09D00", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xD09DD8", Offset = "0xD09DD8", VA = "0xD09DD8", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x200010F")]
public class GameLogic_Main : FsmState<eGAME_STATE>
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TimeOver m_timeOver;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xD0896C", Offset = "0xD0896C", VA = "0xD0896C")]
	public GameLogic_Main()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xD09E28", Offset = "0xD09E28", VA = "0xD09E28", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xD09F80", Offset = "0xD09F80", VA = "0xD09F80", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xD09FE4", Offset = "0xD09FE4", VA = "0xD09FE4", Slot = "6")]
	public override void End()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xD0A070", Offset = "0xD0A070", VA = "0xD0A070")]
	private void OnEventPlay()
	{
	}
}
[Token(Token = "0x2000110")]
public class GameLogic_Play : FsmState<eGAME_STATE>
{
	[Token(Token = "0x6000608")]
	[Address(RVA = "0xD08A40", Offset = "0xD08A40", VA = "0xD08A40")]
	public GameLogic_Play()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xD0A0F8", Offset = "0xD0A0F8", VA = "0xD0A0F8", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xD0A2D4", Offset = "0xD0A2D4", VA = "0xD0A2D4", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xD0A8E4", Offset = "0xD0A8E4", VA = "0xD0A8E4", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x2000111")]
public class GameLogic_PlayEnd : FsmState<eGAME_STATE>
{
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_time;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xD08A94", Offset = "0xD08A94", VA = "0xD08A94")]
	public GameLogic_PlayEnd()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xD0A934", Offset = "0xD0A934", VA = "0xD0A934", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xD0AA78", Offset = "0xD0AA78", VA = "0xD0AA78", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xD0AC78", Offset = "0xD0AC78", VA = "0xD0AC78", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x2000112")]
public class GameLogic_Ready : FsmState<eGAME_STATE>
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_time;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _sceneNum;

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xD089EC", Offset = "0xD089EC", VA = "0xD089EC")]
	public GameLogic_Ready()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xD0B014", Offset = "0xD0B014", VA = "0xD0B014", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xD0B31C", Offset = "0xD0B31C", VA = "0xD0B31C", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xD0B41C", Offset = "0xD0B41C", VA = "0xD0B41C", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x2000113")]
public class GameLogic_Result : FsmState<eGAME_STATE>
{
	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TimeOver m_timeOver;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xD08AE8", Offset = "0xD08AE8", VA = "0xD08AE8")]
	public GameLogic_Result()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xD0B46C", Offset = "0xD0B46C", VA = "0xD0B46C", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xD0B5E8", Offset = "0xD0B5E8", VA = "0xD0B5E8", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xD0B64C", Offset = "0xD0B64C", VA = "0xD0B64C", Slot = "6")]
	public override void End()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xD0B69C", Offset = "0xD0B69C", VA = "0xD0B69C")]
	private void OnEventPlay()
	{
	}
}
[Token(Token = "0x2000114")]
public class GameLogic_SelectMode : FsmState<eGAME_STATE>
{
	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TimeOver m_timeOver;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xD08898", Offset = "0xD08898", VA = "0xD08898")]
	public GameLogic_SelectMode()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xD0B724", Offset = "0xD0B724", VA = "0xD0B724", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xD0B87C", Offset = "0xD0B87C", VA = "0xD0B87C", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xD0B8E0", Offset = "0xD0B8E0", VA = "0xD0B8E0", Slot = "6")]
	public override void End()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xD0B930", Offset = "0xD0B930", VA = "0xD0B930")]
	private void OnEventPlay()
	{
	}
}
[Token(Token = "0x2000115")]
public class GameLogic_Title : FsmState<eGAME_STATE>
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_time;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xD08844", Offset = "0xD08844", VA = "0xD08844")]
	public GameLogic_Title()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xD0B934", Offset = "0xD0B934", VA = "0xD0B934", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xD0BA38", Offset = "0xD0BA38", VA = "0xD0BA38", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xD0BB10", Offset = "0xD0BB10", VA = "0xD0BB10", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x2000116")]
public enum eGame_Rank
{
	[Token(Token = "0x4000602")]
	F,
	[Token(Token = "0x4000603")]
	C,
	[Token(Token = "0x4000604")]
	B,
	[Token(Token = "0x4000605")]
	A,
	[Token(Token = "0x4000606")]
	S,
	[Token(Token = "0x4000607")]
	SS,
	[Token(Token = "0x4000608")]
	SSS
}
[Token(Token = "0x2000117")]
public enum eGAME_STATE
{
	[Token(Token = "0x400060A")]
	TITLE,
	[Token(Token = "0x400060B")]
	SELECT_MODE,
	[Token(Token = "0x400060C")]
	LOADING_MODE,
	[Token(Token = "0x400060D")]
	MAIN,
	[Token(Token = "0x400060E")]
	READY,
	[Token(Token = "0x400060F")]
	PLAY,
	[Token(Token = "0x4000610")]
	PLAY_END,
	[Token(Token = "0x4000611")]
	RESULT,
	[Token(Token = "0x4000612")]
	WARNING,
	[Token(Token = "0x4000613")]
	NEWMAIN,
	[Token(Token = "0x4000614")]
	PAUSE,
	[Token(Token = "0x4000615")]
	FINISHED,
	[Token(Token = "0x4000616")]
	MULTIMODESELECT,
	[Token(Token = "0x4000617")]
	MULTIMENU,
	[Token(Token = "0x4000618")]
	MULTIPLAYEND,
	[Token(Token = "0x4000619")]
	MULTIFINISHED
}
[Token(Token = "0x2000118")]
public enum eGAME_MODE
{
	[Token(Token = "0x400061B")]
	LITE,
	[Token(Token = "0x400061C")]
	STANDARD,
	[Token(Token = "0x400061D")]
	CHALLENGE
}
[Token(Token = "0x2000119")]
public static class MonoExtension
{
	[Token(Token = "0x6000622")]
	[Address(RVA = "0xF61178", Offset = "0xF61178", VA = "0xF61178")]
	public static void Invoke(this MonoBehaviour m, Action method, float time)
	{
	}
}
[Token(Token = "0x200011A")]
public class GameLogicMgr : MonoSingletonPass<GameLogicMgr>
{
	[Token(Token = "0x2000471")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9995D0", Offset = "0x9995D0")]
	private sealed class <NextState>d__131 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameLogicMgr <>4__this;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public eGAME_STATE _state;

		[Token(Token = "0x17000321")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xD09818", Offset = "0xD09818", VA = "0xD09818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xD09884", Offset = "0xD09884", VA = "0xD09884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xD095B0", Offset = "0xD095B0", VA = "0xD095B0")]
		[DebuggerHidden]
		public <NextState>d__131(int <>1__state)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xD09730", Offset = "0xD09730", VA = "0xD09730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xD09734", Offset = "0xD09734", VA = "0xD09734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xD09820", Offset = "0xD09820", VA = "0xD09820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000472")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9995E0", Offset = "0x9995E0")]
	private sealed class <NextState>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _sceneIdx;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameLogicMgr <>4__this;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public eGAME_STATE _state;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <sceneOperation>5__2;

		[Token(Token = "0x17000323")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xD09A30", Offset = "0xD09A30", VA = "0xD09A30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xD09A9C", Offset = "0xD09A9C", VA = "0xD09A9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xD095DC", Offset = "0xD095DC", VA = "0xD095DC")]
		[DebuggerHidden]
		public <NextState>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xD0988C", Offset = "0xD0988C", VA = "0xD0988C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xD09890", Offset = "0xD09890", VA = "0xD09890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xD09A38", Offset = "0xD09A38", VA = "0xD09A38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99D96C", Offset = "0x99D96C")]
	public float playerHeight;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float vibrateValue;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hitVolumeValue;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isHeightAuto;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public eGAME_MODE gameMode;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ControllerDevice leftDevice;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ControllerDevice rightDevice;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameLogic_Achievements achievements;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BeatBoxSpawn spawn;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject bg;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider missDlete;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Collider AlreadySound;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isEnd;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool isSucc;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool isFloating;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool isSceneChange;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BeatBoxEffectSound effectSound;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float m_noteSpeed;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_weaponIdx;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_isUseUILaser;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BeatRecord m_select;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BeatPlay m_beatPlay;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Score m_playScore;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ScoreList m_playScoreList;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AudioSource m_sound;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource m_feverSound;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool feverState;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool isFever;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool isWholeSong;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform HmdPos;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject reflection;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public eBEAT_LANGUAGE language;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ExitGames.Client.Photon.Hashtable _currentHash;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject QuestPos;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private float[] m_firstVerseSeconds;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private AudioClip[] m_musicClipArr;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private AudioClip FeverClip;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int volFlag;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99D9E4", Offset = "0x99D9E4")]
	public float rangeScale;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int missDamage;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Camera[] cam;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int damageValue;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public int playerPlayCount;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int playerFever;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public bool playerCombo;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int m_score;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int m_combo;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int m_floatingScore;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int m_hp;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int perfectNote;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public int greatNote;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public int goodNote;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public int badNote;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int missNote;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int maxCombo;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public eGame_Rank rank;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int minCombo;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int feverGage;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private FsmClass<eGAME_STATE> m_logic;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public eGAME_STATE startState;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float feverTime;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float _fadeDuration;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float _delayTime;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool isFade;

	[Token(Token = "0x17000061")]
	public AudioSource getAudio
	{
		[Token(Token = "0x6000623")]
		[Address(RVA = "0xD070D8", Offset = "0xD070D8", VA = "0xD070D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public int getScore
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0xD07B0C", Offset = "0xD07B0C", VA = "0xD07B0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000063")]
	public int getFloatingScore
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0xD07B14", Offset = "0xD07B14", VA = "0xD07B14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000064")]
	public int getCombo
	{
		[Token(Token = "0x600063F")]
		[Address(RVA = "0xD07EB8", Offset = "0xD07EB8", VA = "0xD07EB8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000065")]
	public int getHp
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0xD07EC0", Offset = "0xD07EC0", VA = "0xD07EC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000066")]
	public int getMaxHp
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0xD07A94", Offset = "0xD07A94", VA = "0xD07A94")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000067")]
	public bool isUseUILaser
	{
		[Token(Token = "0x6000642")]
		[Address(RVA = "0xD07EC8", Offset = "0xD07EC8", VA = "0xD07EC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000068")]
	public BeatRecord getSelect
	{
		[Token(Token = "0x6000645")]
		[Address(RVA = "0xCFD248", Offset = "0xCFD248", VA = "0xCFD248")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public FsmClass<eGAME_STATE> getLogic
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0xD07ED8", Offset = "0xD07ED8", VA = "0xD07ED8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public float getNoteSpeed
	{
		[Token(Token = "0x6000647")]
		[Address(RVA = "0xD07EE0", Offset = "0xD07EE0", VA = "0xD07EE0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006B")]
	public int getWeaponIdx
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0xD07F20", Offset = "0xD07F20", VA = "0xD07F20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006C")]
	public int getMaxWeaponIdx
	{
		[Token(Token = "0x600064A")]
		[Address(RVA = "0xD07F28", Offset = "0xD07F28", VA = "0xD07F28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xD06820", Offset = "0xD06820", VA = "0xD06820")]
	public void PlaySound(string _path)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xD07190", Offset = "0xD07190", VA = "0xD07190")]
	public void PlaySoundAsync(int path)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xD07348", Offset = "0xD07348", VA = "0xD07348")]
	public int PlayTimePerSong()
	{
		return default(int);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xD0737C", Offset = "0xD0737C", VA = "0xD0737C")]
	public string SongName()
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xD0739C", Offset = "0xD0739C", VA = "0xD0739C")]
	public string SongLevel()
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xD070E0", Offset = "0xD070E0", VA = "0xD070E0")]
	private int GetMusicNumber(string path)
	{
		return default(int);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xD0743C", Offset = "0xD0743C", VA = "0xD0743C")]
	public float GetVerseSeconds(string _path)
	{
		return default(float);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xD07494", Offset = "0xD07494", VA = "0xD07494")]
	public float PlaySeconds()
	{
		return default(float);
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xD06120", Offset = "0xD06120", VA = "0xD06120")]
	public int GetBeatCount(string _path)
	{
		return default(int);
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xD074F4", Offset = "0xD074F4", VA = "0xD074F4")]
	public void StopSound()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xD07588", Offset = "0xD07588", VA = "0xD07588")]
	public void StartScore()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xD07678", Offset = "0xD07678", VA = "0xD07678")]
	public void SaveScore()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xD077B4", Offset = "0xD077B4", VA = "0xD077B4")]
	public void PlayEndSet()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xD078E8", Offset = "0xD078E8", VA = "0xD078E8")]
	public void EndGame()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xD07994", Offset = "0xD07994", VA = "0xD07994")]
	private void FadeGameSound()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xD07A78", Offset = "0xD07A78", VA = "0xD07A78")]
	public void InitPlayData()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xD07A9C", Offset = "0xD07A9C", VA = "0xD07A9C")]
	public void AddComboScore(int _value)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xD07AE0", Offset = "0xD07AE0", VA = "0xD07AE0")]
	public void AddScore(int _value)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xD07B00", Offset = "0xD07B00", VA = "0xD07B00")]
	public void SetScore(int _value)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xD07B1C", Offset = "0xD07B1C", VA = "0xD07B1C")]
	public void SetCombo(int _value)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xD07B3C", Offset = "0xD07B3C", VA = "0xD07B3C")]
	public void AddCombo(int _value)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xD07B64", Offset = "0xD07B64", VA = "0xD07B64")]
	public void AddHp(int _value)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xD07D04", Offset = "0xD07D04", VA = "0xD07D04")]
	public void SetHp(int _value)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xD07D20", Offset = "0xD07D20", VA = "0xD07D20")]
	public eGame_Rank GetRank(int _totalBeat)
	{
		return default(eGame_Rank);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xD07E98", Offset = "0xD07E98", VA = "0xD07E98")]
	public float GetAchievement(int _totalBeat)
	{
		return default(float);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xD067E8", Offset = "0xD067E8", VA = "0xD067E8")]
	public void SetUserUILaser(bool _isLaser)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xD07ED0", Offset = "0xD07ED0", VA = "0xD07ED0")]
	public void SetSelect(BeatRecord _record)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xD07EE8", Offset = "0xD07EE8", VA = "0xD07EE8")]
	public void SetNoteSpeed(float _speed)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xD07F30", Offset = "0xD07F30", VA = "0xD07F30")]
	public void SetWeaponIdx(int _weaponIdx)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xD07F38", Offset = "0xD07F38", VA = "0xD07F38")]
	public void ResetWeapon()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xD08090", Offset = "0xD08090", VA = "0xD08090", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xD08E44", Offset = "0xD08E44", VA = "0xD08E44")]
	private void Update()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xD08CB8", Offset = "0xD08CB8", VA = "0xD08CB8")]
	public void SceneComponent()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xD08E9C", Offset = "0xD08E9C", VA = "0xD08E9C")]
	public void FadeVolume()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xD09088", Offset = "0xD09088", VA = "0xD09088")]
	private void Start()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xD0908C", Offset = "0xD0908C", VA = "0xD0908C")]
	public void OnVGSLogin()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xD09090", Offset = "0xD09090", VA = "0xD09090")]
	public void OnVGSLogout()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xD09094", Offset = "0xD09094", VA = "0xD09094")]
	public void ProcessOverlayBeforeShow()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xD090A0", Offset = "0xD090A0", VA = "0xD090A0")]
	public void ProcessOverlayAfterHide()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xD090AC", Offset = "0xD090AC", VA = "0xD090AC")]
	public void FeverTimeStart(float delay = 10f)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xD091B8", Offset = "0xD091B8", VA = "0xD091B8")]
	public void FeverSound()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xD092FC", Offset = "0xD092FC", VA = "0xD092FC")]
	public void FeverTimeEnd()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xD093AC", Offset = "0xD093AC", VA = "0xD093AC")]
	public void Fade(eGAME_STATE _state, bool fading)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xD09520", Offset = "0xD09520", VA = "0xD09520")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5A4C", Offset = "0x9A5A4C")]
	public IEnumerator NextState(eGAME_STATE _state)
	{
		return null;
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xD09488", Offset = "0xD09488", VA = "0xD09488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5AB0", Offset = "0x9A5AB0")]
	public IEnumerator NextState(eGAME_STATE _state, int _sceneIdx)
	{
		return null;
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xD09608", Offset = "0xD09608", VA = "0xD09608")]
	public GameLogicMgr()
	{
	}
}
[Token(Token = "0x200011B")]
public class GameLogic_Achievements : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string rhythmGamer;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string comboExpert;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string feverMaster;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xD0787C", Offset = "0xD0787C", VA = "0xD0787C")]
	public void SetPlayCount(int playCount)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xD08768", Offset = "0xD08768", VA = "0xD08768")]
	public int GetPlayCount()
	{
		return default(int);
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xD09AA4", Offset = "0xD09AA4", VA = "0xD09AA4")]
	public void SetComboCount(int comboCount)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xD09B38", Offset = "0xD09B38", VA = "0xD09B38")]
	public int GetComboCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xD08838", Offset = "0xD08838", VA = "0xD08838")]
	public void SetFeverCount(int feverCount)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xD087D0", Offset = "0xD087D0", VA = "0xD087D0")]
	public int GetFeverCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xD09BA0", Offset = "0xD09BA0", VA = "0xD09BA0")]
	public GameLogic_Achievements()
	{
	}
}
[Token(Token = "0x200011C")]
public class StageMover : MonoBehaviour
{
	[Token(Token = "0x2000473")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9995F0", Offset = "0x9995F0")]
	private sealed class <SetRotation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int angle;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] objList;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StageMover <>4__this;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float time;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public EasingFunction.Ease rotateFunction;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timeNow>5__2;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <objAngle>5__3;

		[Token(Token = "0x17000325")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0xB679F4", Offset = "0xB679F4", VA = "0xB679F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xB67A60", Offset = "0xB67A60", VA = "0xB67A60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xB67224", Offset = "0xB67224", VA = "0xB67224")]
		[DebuggerHidden]
		public <SetRotation>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xB67670", Offset = "0xB67670", VA = "0xB67670", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xB67674", Offset = "0xB67674", VA = "0xB67674", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xB679FC", Offset = "0xB679FC", VA = "0xB679FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999600", Offset = "0x999600")]
	private sealed class <ResetRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StageMover <>4__this;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] objList;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EasingFunction.Ease rotateFunction;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeNow>5__2;

		[Token(Token = "0x17000327")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xB675FC", Offset = "0xB675FC", VA = "0xB675FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xB67668", Offset = "0xB67668", VA = "0xB67668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xB67250", Offset = "0xB67250", VA = "0xB67250")]
		[DebuggerHidden]
		public <ResetRotation>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xB6728C", Offset = "0xB6728C", VA = "0xB6728C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xB67290", Offset = "0xB67290", VA = "0xB67290", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xB67604", Offset = "0xB67604", VA = "0xB67604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] moveObj;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int angle;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float time;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EasingFunction.Ease easeFunction;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public bool RotateEnd;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool CoroutineLoop;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int RotateState;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] startAngle;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rotate;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xB66FD0", Offset = "0xB66FD0", VA = "0xB66FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xB67044", Offset = "0xB67044", VA = "0xB67044")]
	public void StartRotate()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xB67054", Offset = "0xB67054", VA = "0xB67054")]
	public void StopRotate()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xB67064", Offset = "0xB67064", VA = "0xB67064")]
	public void ResetRotate()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xB67160", Offset = "0xB67160", VA = "0xB67160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5B14", Offset = "0x9A5B14")]
	private IEnumerator SetRotation(GameObject[] objList, int angle, float time = 2f, EasingFunction.Ease rotateFunction = EasingFunction.Ease.Linear)
	{
		return null;
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xB670AC", Offset = "0xB670AC", VA = "0xB670AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5B78", Offset = "0x9A5B78")]
	private IEnumerator ResetRotation(GameObject[] objList, float time = 2f, EasingFunction.Ease rotateFunction = EasingFunction.Ease.Linear)
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xB6727C", Offset = "0xB6727C", VA = "0xB6727C")]
	public StageMover()
	{
	}
}
[Token(Token = "0x200011D")]
public class GarbageCollectorExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000475")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999610", Offset = "0x999610")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GarbageCollector.Mode> <>9__0_0;

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xD0DB8C", Offset = "0xD0DB8C", VA = "0xD0DB8C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xD0DB94", Offset = "0xD0DB94", VA = "0xD0DB94")]
		internal void <ListenForGCModeChange>b__0_0(GarbageCollector.Mode mode)
		{
		}
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xD0D988", Offset = "0xD0D988", VA = "0xD0D988")]
	private static void ListenForGCModeChange()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xD0DA6C", Offset = "0xD0DA6C", VA = "0xD0DA6C")]
	private static void LogMode()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xD05BBC", Offset = "0xD05BBC", VA = "0xD05BBC")]
	public static void EnableGC()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xD0B318", Offset = "0xD0B318", VA = "0xD0B318")]
	public static void DisableGC()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xD0DB1C", Offset = "0xD0DB1C", VA = "0xD0DB1C")]
	public GarbageCollectorExample()
	{
	}
}
[Token(Token = "0x200011E")]
public class GoogleLogManager : MonoSingletonPass<GoogleLogManager>
{
	[Token(Token = "0x2000476")]
	public enum _platform
	{
		[Token(Token = "0x4001D59")]
		STEAM,
		[Token(Token = "0x4001D5A")]
		SMG,
		[Token(Token = "0x4001D5B")]
		QUEST,
		[Token(Token = "0x4001D5C")]
		KT,
		[Token(Token = "0x4001D5D")]
		LG,
		[Token(Token = "0x4001D5E")]
		DEV,
		[Token(Token = "0x4001D5F")]
		ZEMER
	}

	[Token(Token = "0x2000477")]
	public class LogStart
	{
		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2504", Offset = "0x9A2504")]
		private string <client_time>k__BackingField;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2514", Offset = "0x9A2514")]
		private string <session_id>k__BackingField;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2524", Offset = "0x9A2524")]
		private string <hmd_ModelNumber>k__BackingField;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2534", Offset = "0x9A2534")]
		private string <app_publish_ver>k__BackingField;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2544", Offset = "0x9A2544")]
		private string <platform_name>k__BackingField;

		[Token(Token = "0x17000329")]
		public string client_time
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xD6CF74", Offset = "0xD6CF74", VA = "0xD6CF74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA684", Offset = "0x9AA684")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xD6CF7C", Offset = "0xD6CF7C", VA = "0xD6CF7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA694", Offset = "0x9AA694")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public string session_id
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xD6CF84", Offset = "0xD6CF84", VA = "0xD6CF84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA6A4", Offset = "0x9AA6A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xD6CF8C", Offset = "0xD6CF8C", VA = "0xD6CF8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA6B4", Offset = "0x9AA6B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public string hmd_ModelNumber
		{
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xD6CF94", Offset = "0xD6CF94", VA = "0xD6CF94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA6C4", Offset = "0x9AA6C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xD6CF9C", Offset = "0xD6CF9C", VA = "0xD6CF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA6D4", Offset = "0x9AA6D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public string app_publish_ver
		{
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xD6CFA4", Offset = "0xD6CFA4", VA = "0xD6CFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA6E4", Offset = "0x9AA6E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xD6CFAC", Offset = "0xD6CFAC", VA = "0xD6CFAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA6F4", Offset = "0x9AA6F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public string platform_name
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xD6CFB4", Offset = "0xD6CFB4", VA = "0xD6CFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA704", Offset = "0x9AA704")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xD6CFBC", Offset = "0xD6CFBC", VA = "0xD6CFBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA714", Offset = "0x9AA714")]
			set
			{
			}
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xD6CCC0", Offset = "0xD6CCC0", VA = "0xD6CCC0")]
		public LogStart()
		{
		}
	}

	[Token(Token = "0x2000478")]
	public class LogPlay
	{
		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2554", Offset = "0x9A2554")]
		private string <session_id>k__BackingField;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2564", Offset = "0x9A2564")]
		private string <client_time>k__BackingField;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2574", Offset = "0x9A2574")]
		private int <song_play_time>k__BackingField;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2584", Offset = "0x9A2584")]
		private string <song_play_name>k__BackingField;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2594", Offset = "0x9A2594")]
		private string <song_level>k__BackingField;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A25A4", Offset = "0x9A25A4")]
		private int <song_play_point>k__BackingField;

		[Token(Token = "0x1700032E")]
		public string session_id
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xD6CF14", Offset = "0xD6CF14", VA = "0xD6CF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA724", Offset = "0x9AA724")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xD6CF1C", Offset = "0xD6CF1C", VA = "0xD6CF1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA734", Offset = "0x9AA734")]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public string client_time
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xD6CF24", Offset = "0xD6CF24", VA = "0xD6CF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA744", Offset = "0x9AA744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xD6CF2C", Offset = "0xD6CF2C", VA = "0xD6CF2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA754", Offset = "0x9AA754")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public int song_play_time
		{
			[Token(Token = "0x6001C41")]
			[Address(RVA = "0xD6CF34", Offset = "0xD6CF34", VA = "0xD6CF34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA764", Offset = "0x9AA764")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xD6CF3C", Offset = "0xD6CF3C", VA = "0xD6CF3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA774", Offset = "0x9AA774")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public string song_play_name
		{
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xD6CF44", Offset = "0xD6CF44", VA = "0xD6CF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA784", Offset = "0x9AA784")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xD6CF4C", Offset = "0xD6CF4C", VA = "0xD6CF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA794", Offset = "0x9AA794")]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public string song_level
		{
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0xD6CF54", Offset = "0xD6CF54", VA = "0xD6CF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA7A4", Offset = "0x9AA7A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xD6CF5C", Offset = "0xD6CF5C", VA = "0xD6CF5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA7B4", Offset = "0x9AA7B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public int song_play_point
		{
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xD6CF64", Offset = "0xD6CF64", VA = "0xD6CF64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA7C4", Offset = "0x9AA7C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xD6CF6C", Offset = "0xD6CF6C", VA = "0xD6CF6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA7D4", Offset = "0x9AA7D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xD6CCC8", Offset = "0xD6CCC8", VA = "0xD6CCC8")]
		public LogPlay()
		{
		}
	}

	[Token(Token = "0x2000479")]
	public class LogEnd
	{
		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A25B4", Offset = "0x9A25B4")]
		private string <client_time>k__BackingField;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A25C4", Offset = "0x9A25C4")]
		private string <session_id>k__BackingField;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A25D4", Offset = "0x9A25D4")]
		private float <total_play_time>k__BackingField;

		[Token(Token = "0x17000334")]
		public string client_time
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xD6CEE4", Offset = "0xD6CEE4", VA = "0xD6CEE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA7E4", Offset = "0x9AA7E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xD6CEEC", Offset = "0xD6CEEC", VA = "0xD6CEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA7F4", Offset = "0x9AA7F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public string session_id
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xD6CEF4", Offset = "0xD6CEF4", VA = "0xD6CEF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA804", Offset = "0x9AA804")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xD6CEFC", Offset = "0xD6CEFC", VA = "0xD6CEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA814", Offset = "0x9AA814")]
			set
			{
			}
		}

		[Token(Token = "0x17000336")]
		public float total_play_time
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xD6CF04", Offset = "0xD6CF04", VA = "0xD6CF04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA824", Offset = "0x9AA824")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xD6CF0C", Offset = "0xD6CF0C", VA = "0xD6CF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA834", Offset = "0x9AA834")]
			set
			{
			}
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xD6CCD0", Offset = "0xD6CCD0", VA = "0xD6CCD0")]
		public LogEnd()
		{
		}
	}

	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999620", Offset = "0x999620")]
	private sealed class <Upload>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string URL;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000337")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xD6CE70", Offset = "0xD6CE70", VA = "0xD6CE70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xD6CEDC", Offset = "0xD6CEDC", VA = "0xD6CEDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xD6C9DC", Offset = "0xD6C9DC", VA = "0xD6C9DC")]
		[DebuggerHidden]
		public <Upload>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xD6CCD8", Offset = "0xD6CCD8", VA = "0xD6CCD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xD6CCDC", Offset = "0xD6CCDC", VA = "0xD6CCDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xD6CE78", Offset = "0xD6CE78", VA = "0xD6CE78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LogStart m_Log_Start;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LogPlay m_Log_Play;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LogEnd m_Log_End;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public _platform platform;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int waitingTime;

	[Token(Token = "0x4000670")]
	private const string random_string_val = "abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool Paused;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xD6BF70", Offset = "0xD6BF70", VA = "0xD6BF70", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xD6BFC0", Offset = "0xD6BFC0", VA = "0xD6BFC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xD6BFC8", Offset = "0xD6BFC8", VA = "0xD6BFC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xD6C000", Offset = "0xD6C000", VA = "0xD6C000")]
	public void LogData_Start()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xD6C430", Offset = "0xD6C430", VA = "0xD6C430")]
	public void LogData_Play(string song_name, int time, string level, int point)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xD6C740", Offset = "0xD6C740", VA = "0xD6C740")]
	public void LogData_End()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xD6C95C", Offset = "0xD6C95C", VA = "0xD6C95C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5BDC", Offset = "0x9A5BDC")]
	private IEnumerator Upload(string URL, string tagData, Action<string> callback)
	{
		return null;
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xD6CA08", Offset = "0xD6CA08", VA = "0xD6CA08")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xD6CA48", Offset = "0xD6CA48", VA = "0xD6CA48")]
	public static string encode_utf8(string value)
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xD6CADC", Offset = "0xD6CADC", VA = "0xD6CADC")]
	public static string random_string_maker(int length)
	{
		return null;
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xD6C348", Offset = "0xD6C348", VA = "0xD6C348")]
	public static string GetUniqueIdentifier()
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xD6C3C8", Offset = "0xD6C3C8", VA = "0xD6C3C8")]
	private string ObjectToJson(object obj)
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xD6CBC0", Offset = "0xD6CBC0", VA = "0xD6CBC0")]
	public GoogleLogManager()
	{
	}
}
[Token(Token = "0x200011F")]
public class HeadWeapon : MonoBehaviour
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform point;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform addPoint;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public eBEAT_COLOR beatColor;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VibrateTrigger vtrigger;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ControllerDevice m_device;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xD72E60", Offset = "0xD72E60", VA = "0xD72E60")]
	public void Vibrate(float time)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xD72EF8", Offset = "0xD72EF8", VA = "0xD72EF8")]
	public void Open(ControllerDevice _device)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xD72FB4", Offset = "0xD72FB4", VA = "0xD72FB4")]
	public HeadWeapon()
	{
	}
}
[Token(Token = "0x2000120")]
public class KTLogManager : MonoBehaviour
{
	[Token(Token = "0x200047B")]
	public class Log
	{
		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A25E4", Offset = "0x9A25E4")]
		private string <client_time>k__BackingField;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A25F4", Offset = "0x9A25F4")]
		private string <app_id>k__BackingField;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2604", Offset = "0x9A2604")]
		private string <app_name>k__BackingField;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2614", Offset = "0x9A2614")]
		private string <environment>k__BackingField;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2624", Offset = "0x9A2624")]
		private string <log_source_type>k__BackingField;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2634", Offset = "0x9A2634")]
		private string <member_no>k__BackingField;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2644", Offset = "0x9A2644")]
		private string <device_os_name>k__BackingField;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2654", Offset = "0x9A2654")]
		private string <device_os_ver>k__BackingField;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2664", Offset = "0x9A2664")]
		private string <session_id>k__BackingField;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2674", Offset = "0x9A2674")]
		private string <app_publish_ver>k__BackingField;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2684", Offset = "0x9A2684")]
		private ActionInfo <action_info>k__BackingField;

		[Token(Token = "0x17000339")]
		public string client_time
		{
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xBB1970", Offset = "0xBB1970", VA = "0xBB1970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA894", Offset = "0x9AA894")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xBB1978", Offset = "0xBB1978", VA = "0xBB1978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA8A4", Offset = "0x9AA8A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		public string app_id
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xBB1980", Offset = "0xBB1980", VA = "0xBB1980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA8B4", Offset = "0x9AA8B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xBB1988", Offset = "0xBB1988", VA = "0xBB1988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA8C4", Offset = "0x9AA8C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public string app_name
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xBB1990", Offset = "0xBB1990", VA = "0xBB1990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA8D4", Offset = "0x9AA8D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xBB1998", Offset = "0xBB1998", VA = "0xBB1998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA8E4", Offset = "0x9AA8E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public string environment
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xBB19A0", Offset = "0xBB19A0", VA = "0xBB19A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA8F4", Offset = "0x9AA8F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xBB19A8", Offset = "0xBB19A8", VA = "0xBB19A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA904", Offset = "0x9AA904")]
			set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public string log_source_type
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xBB19B0", Offset = "0xBB19B0", VA = "0xBB19B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA914", Offset = "0x9AA914")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xBB19B8", Offset = "0xBB19B8", VA = "0xBB19B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA924", Offset = "0x9AA924")]
			set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public string member_no
		{
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xBB19C0", Offset = "0xBB19C0", VA = "0xBB19C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA934", Offset = "0x9AA934")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xBB19C8", Offset = "0xBB19C8", VA = "0xBB19C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA944", Offset = "0x9AA944")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public string device_os_name
		{
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xBB19D0", Offset = "0xBB19D0", VA = "0xBB19D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA954", Offset = "0x9AA954")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xBB19D8", Offset = "0xBB19D8", VA = "0xBB19D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA964", Offset = "0x9AA964")]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public string device_os_ver
		{
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xBB19E0", Offset = "0xBB19E0", VA = "0xBB19E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA974", Offset = "0x9AA974")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xBB19E8", Offset = "0xBB19E8", VA = "0xBB19E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA984", Offset = "0x9AA984")]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public string session_id
		{
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xBB19F0", Offset = "0xBB19F0", VA = "0xBB19F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA994", Offset = "0x9AA994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xBB19F8", Offset = "0xBB19F8", VA = "0xBB19F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA9A4", Offset = "0x9AA9A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public string app_publish_ver
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xBB1A00", Offset = "0xBB1A00", VA = "0xBB1A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA9B4", Offset = "0x9AA9B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0xBB1A08", Offset = "0xBB1A08", VA = "0xBB1A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA9C4", Offset = "0x9AA9C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public ActionInfo action_info
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xBB1A10", Offset = "0xBB1A10", VA = "0xBB1A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA9D4", Offset = "0x9AA9D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xBB1A18", Offset = "0xBB1A18", VA = "0xBB1A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA9E4", Offset = "0x9AA9E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xBB1178", Offset = "0xBB1178", VA = "0xBB1178")]
		public Log()
		{
		}
	}

	[Token(Token = "0x200047C")]
	public class ActionInfo
	{
		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2694", Offset = "0x9A2694")]
		private string <action_type>k__BackingField;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A26A4", Offset = "0x9A26A4")]
		private action_param <action_param>k__BackingField;

		[Token(Token = "0x17000344")]
		public string action_type
		{
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xBB1910", Offset = "0xBB1910", VA = "0xBB1910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AA9F4", Offset = "0x9AA9F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xBB1918", Offset = "0xBB1918", VA = "0xBB1918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA04", Offset = "0x9AAA04")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public action_param action_param
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xBB1920", Offset = "0xBB1920", VA = "0xBB1920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA14", Offset = "0x9AAA14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xBB1928", Offset = "0xBB1928", VA = "0xBB1928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA24", Offset = "0x9AAA24")]
			set
			{
			}
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xBB0550", Offset = "0xBB0550", VA = "0xBB0550")]
		public ActionInfo()
		{
		}
	}

	[Token(Token = "0x200047D")]
	public interface action_param
	{
	}

	[Token(Token = "0x200047E")]
	public class ActionParam_Start : action_param
	{
		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A26B4", Offset = "0x9A26B4")]
		private string <success_yn>k__BackingField;

		[Token(Token = "0x17000346")]
		public string success_yn
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xBB1950", Offset = "0xBB1950", VA = "0xBB1950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA34", Offset = "0x9AAA34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xBB1958", Offset = "0xBB1958", VA = "0xBB1958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA44", Offset = "0x9AAA44")]
			set
			{
			}
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xBB0548", Offset = "0xBB0548", VA = "0xBB0548")]
		public ActionParam_Start()
		{
		}
	}

	[Token(Token = "0x200047F")]
	public class ActionParam_heart : action_param
	{
		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A26C4", Offset = "0x9A26C4")]
		private int <total_play_time>k__BackingField;

		[Token(Token = "0x17000347")]
		public int total_play_time
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xBB1960", Offset = "0xBB1960", VA = "0xBB1960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA54", Offset = "0x9AAA54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xBB1968", Offset = "0xBB1968", VA = "0xBB1968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA64", Offset = "0x9AAA64")]
			set
			{
			}
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xBB091C", Offset = "0xBB091C", VA = "0xBB091C")]
		public ActionParam_heart()
		{
		}
	}

	[Token(Token = "0x2000480")]
	public class ActionParam_End : action_param
	{
		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A26D4", Offset = "0x9A26D4")]
		private string <success_yn>k__BackingField;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A26E4", Offset = "0x9A26E4")]
		private int <total_play_time>k__BackingField;

		[Token(Token = "0x17000348")]
		public string success_yn
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xBB1930", Offset = "0xBB1930", VA = "0xBB1930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA74", Offset = "0x9AAA74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xBB1938", Offset = "0xBB1938", VA = "0xBB1938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA84", Offset = "0x9AAA84")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public int total_play_time
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xBB1940", Offset = "0xBB1940", VA = "0xBB1940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAA94", Offset = "0x9AAA94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0xBB1948", Offset = "0xBB1948", VA = "0xBB1948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAAA4", Offset = "0x9AAAA4")]
			set
			{
			}
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xBB0C54", Offset = "0xBB0C54", VA = "0xBB0C54")]
		public ActionParam_End()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999630", Offset = "0x999630")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<string> <>9__24_0;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<string> <>9__28_0;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<string> <>9__30_0;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<string> <>9__30_1;

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xBB11E8", Offset = "0xBB11E8", VA = "0xBB11E8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xBB11F0", Offset = "0xBB11F0", VA = "0xBB11F0")]
		internal void <heartbeat>b__24_0(string result)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xBB1278", Offset = "0xBB1278", VA = "0xBB1278")]
		internal void <Start>b__28_0(string result)
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xBB1300", Offset = "0xBB1300", VA = "0xBB1300")]
		internal void <OnApplicationPause>b__30_0(string result)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xBB1388", Offset = "0xBB1388", VA = "0xBB1388")]
		internal void <OnApplicationPause>b__30_1(string result)
		{
		}
	}

	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999640", Offset = "0x999640")]
	private sealed class <heartbeat>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KTLogManager <>4__this;

		[Token(Token = "0x1700034A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xBB189C", Offset = "0xBB189C", VA = "0xBB189C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0xBB1908", Offset = "0xBB1908", VA = "0xBB1908", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xBB05D8", Offset = "0xBB05D8", VA = "0xBB05D8")]
		[DebuggerHidden]
		public <heartbeat>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xBB16E8", Offset = "0xBB16E8", VA = "0xBB16E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xBB16EC", Offset = "0xBB16EC", VA = "0xBB16EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xBB18A4", Offset = "0xBB18A4", VA = "0xBB18A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999650", Offset = "0x999650")]
	private sealed class <Upload>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string URL;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string jsonData;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x1700034C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xBB1674", Offset = "0xBB1674", VA = "0xBB1674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xBB16E0", Offset = "0xBB16E0", VA = "0xBB16E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xBB0CF8", Offset = "0xBB0CF8", VA = "0xBB0CF8")]
		[DebuggerHidden]
		public <Upload>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xBB1410", Offset = "0xBB1410", VA = "0xBB1410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xBB1414", Offset = "0xBB1414", VA = "0xBB1414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xBB167C", Offset = "0xBB167C", VA = "0xBB167C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int waitingTime;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator heartbeat_repeat;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string url;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool forceExit;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool Paused;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string checkLive;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject BoxCtrl;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static KTLogManager mInstance;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Log m_Log;

	[Token(Token = "0x1700006D")]
	public static KTLogManager instance
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xBAFCB4", Offset = "0xBAFCB4", VA = "0xBAFCB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xBAFDFC", Offset = "0xBAFDFC", VA = "0xBAFDFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xBAFF30", Offset = "0xBAFF30", VA = "0xBAFF30")]
	public static string EncryptSHA512(string Data)
	{
		return null;
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xBB0090", Offset = "0xBB0090", VA = "0xBB0090")]
	private void CreateJsonFile(string createPath, string fileName, string jsonData)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xBB0190", Offset = "0xBB0190", VA = "0xBB0190")]
	private string ObjectToJson(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000685")]
	private T JsonToOject<T>(string jsonData)
	{
		return (T)null;
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xBB01F8", Offset = "0xBB01F8", VA = "0xBB01F8")]
	public string LogData_Start()
	{
		return null;
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xBB0558", Offset = "0xBB0558", VA = "0xBB0558")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5C40", Offset = "0x9A5C40")]
	private IEnumerator heartbeat()
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xBB0604", Offset = "0xBB0604", VA = "0xBB0604")]
	public string LogData_Play()
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xBB0924", Offset = "0xBB0924", VA = "0xBB0924")]
	public string LogData_End()
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xBB0C5C", Offset = "0xBB0C5C", VA = "0xBB0C5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5CA4", Offset = "0x9A5CA4")]
	private IEnumerator Upload(string URL, string jsonData, Action<string> callback)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xBB0D24", Offset = "0xBB0D24", VA = "0xBB0D24")]
	private void Start()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xBB0E6C", Offset = "0xBB0E6C", VA = "0xBB0E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xBB0EA4", Offset = "0xBB0EA4", VA = "0xBB0EA4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xBB10D4", Offset = "0xBB10D4", VA = "0xBB10D4")]
	public KTLogManager()
	{
	}
}
[Token(Token = "0x2000121")]
public class BeatBoxCheck
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public eBEAT_COLOR beatColor;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 laserPoint;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isCheck;

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xD1EC30", Offset = "0xD1EC30", VA = "0xD1EC30")]
	public BeatBoxCheck(eBEAT_COLOR _color)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xD1ECBC", Offset = "0xD1ECBC", VA = "0xD1ECBC")]
	public BeatBoxCheck()
	{
	}
}
[Token(Token = "0x2000122")]
public class BeatBox : MonoBehaviour
{
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999660", Offset = "0x999660")]
	private sealed class <MoveTranslateAndRotate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeatBox <>4__this;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <positionCheck>5__2;

		[Token(Token = "0x1700034E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xD1E9E8", Offset = "0xD1E9E8", VA = "0xD1E9E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xD1EA54", Offset = "0xD1EA54", VA = "0xD1EA54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xD1D9BC", Offset = "0xD1D9BC", VA = "0xD1D9BC")]
		[DebuggerHidden]
		public <MoveTranslateAndRotate>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xD1E394", Offset = "0xD1E394", VA = "0xD1E394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xD1E398", Offset = "0xD1E398", VA = "0xD1E398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xD1E9F0", Offset = "0xD1E9F0", VA = "0xD1E9F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999670", Offset = "0x999670")]
	private sealed class <UpdateLogic>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeatBox <>4__this;

		[Token(Token = "0x17000350")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xD1EBBC", Offset = "0xD1EBBC", VA = "0xD1EBBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xD1EC28", Offset = "0xD1EC28", VA = "0xD1EC28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xD1DB48", Offset = "0xD1DB48", VA = "0xD1DB48")]
		[DebuggerHidden]
		public <UpdateLogic>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xD1EA5C", Offset = "0xD1EA5C", VA = "0xD1EA5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xD1EA60", Offset = "0xD1EA60", VA = "0xD1EA60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xD1EBC4", Offset = "0xD1EBC4", VA = "0xD1EBC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999680", Offset = "0x999680")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eBEAT_COLOR _beatColor;

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xD1E224", Offset = "0xD1E224", VA = "0xD1E224")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xD1E36C", Offset = "0xD1E36C", VA = "0xD1E36C")]
		internal bool <GetBoxCheck>b__0(BeatBoxCheck _find)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform meshAttach;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99DA1C", Offset = "0x99DA1C")]
	private BeatData <beatData>k__BackingField;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BeatMesh m_beatMesh;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<BeatBoxCheck> m_beatBoxCheckList;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MeshRenderer> addMeshList;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<GameObject> m_obj;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private BoxSpawnAni _spawnAni;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _spawnEffectAni;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 oriPos;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_path;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public int recyclingIndex;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color temp_color;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 pos;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BeatMeshArrow temp;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WaitForFixedUpdate delay;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForFixedUpdate delay_update;

	[Token(Token = "0x1700006E")]
	public BeatData beatData
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0xD1D254", Offset = "0xD1D254", VA = "0xD1D254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5D08", Offset = "0x9A5D08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000692")]
		[Address(RVA = "0xD1D25C", Offset = "0xD1D25C", VA = "0xD1D25C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5D18", Offset = "0x9A5D18")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public BeatMesh getBeatMesh
	{
		[Token(Token = "0x6000693")]
		[Address(RVA = "0xD1D264", Offset = "0xD1D264", VA = "0xD1D264")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xD1D26C", Offset = "0xD1D26C", VA = "0xD1D26C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xD1D93C", Offset = "0xD1D93C", VA = "0xD1D93C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5D28", Offset = "0x9A5D28")]
	private IEnumerator MoveTranslateAndRotate()
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xD1D9E8", Offset = "0xD1D9E8", VA = "0xD1D9E8")]
	private void CheckNotExist()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xD1D8BC", Offset = "0xD1D8BC", VA = "0xD1D8BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5D8C", Offset = "0x9A5D8C")]
	private IEnumerator UpdateLogic()
	{
		return null;
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xD1DB74", Offset = "0xD1DB74", VA = "0xD1DB74")]
	public void DeleteBeatBoxMiss()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xD1DC08", Offset = "0xD1DC08", VA = "0xD1DC08")]
	public void Disable()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xD1DF7C", Offset = "0xD1DF7C", VA = "0xD1DF7C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xD1E018", Offset = "0xD1E018", VA = "0xD1E018")]
	public void AddCheckBox(Collider other)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xD1E15C", Offset = "0xD1E15C", VA = "0xD1E15C")]
	public BeatBoxCheck GetBoxCheck(eBEAT_COLOR _beatColor)
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xD1E22C", Offset = "0xD1E22C", VA = "0xD1E22C")]
	private string GetMeshColorPath(eBEAT_COLOR _color)
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xD1D644", Offset = "0xD1D644", VA = "0xD1D644")]
	public string GetMeshPath(eBEAT_TYPE _beatType, eBEAT_COLOR _color)
	{
		return null;
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xD1E2A4", Offset = "0xD1E2A4", VA = "0xD1E2A4")]
	public BeatBox()
	{
	}
}
[Token(Token = "0x2000123")]
public class BeatBoxEffectSound
{
	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_playSoundTime;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xD1ED34", Offset = "0xD1ED34", VA = "0xD1ED34")]
	public void PlaySound(string _path)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xD1EDE0", Offset = "0xD1EDE0", VA = "0xD1EDE0")]
	public void UpdateLogic()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xD1EE18", Offset = "0xD1EE18", VA = "0xD1EE18")]
	public BeatBoxEffectSound()
	{
	}
}
[Token(Token = "0x2000124")]
public class BeatBoxMissDelete : MonoBehaviour
{
	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xD1EE28", Offset = "0xD1EE28", VA = "0xD1EE28")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xD1EF3C", Offset = "0xD1EF3C", VA = "0xD1EF3C")]
	public BeatBoxMissDelete()
	{
	}
}
[Serializable]
[Token(Token = "0x2000125")]
public class Recycling
{
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isUse;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BeatBox beatBox;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xC1C9DC", Offset = "0xC1C9DC", VA = "0xC1C9DC")]
	public Recycling()
	{
	}
}
[Token(Token = "0x2000126")]
public class BeatBoxSpawn : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999690", Offset = "0x999690")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<BeatData> <>9__20_0;

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xD20644", Offset = "0xD20644", VA = "0xD20644")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xD2064C", Offset = "0xD2064C", VA = "0xD2064C")]
		internal int <Play>b__20_0(BeatData _sort_1, BeatData _sort_2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000488")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9996A0", Offset = "0x9996A0")]
	private sealed class <CreateBeatBox_GC>d__26 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BeatBoxSpawn <>4__this;

		[Token(Token = "0x17000352")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xD20FB8", Offset = "0xD20FB8", VA = "0xD20FB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000353")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xD21024", Offset = "0xD21024", VA = "0xD21024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xD1F8DC", Offset = "0xD1F8DC", VA = "0xD1F8DC")]
		[DebuggerHidden]
		public <CreateBeatBox_GC>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xD20AEC", Offset = "0xD20AEC", VA = "0xD20AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xD20AF0", Offset = "0xD20AF0", VA = "0xD20AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xD20FC0", Offset = "0xD20FC0", VA = "0xD20FC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9996B0", Offset = "0x9996B0")]
	private sealed class <ActivatedionBeatBox>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BeatBoxSpawn <>4__this;

		[Token(Token = "0x17000354")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xD20A1C", Offset = "0xD20A1C", VA = "0xD20A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000355")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0xD20A88", Offset = "0xD20A88", VA = "0xD20A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xD1F908", Offset = "0xD1F908", VA = "0xD1F908")]
		[DebuggerHidden]
		public <ActivatedionBeatBox>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xD2069C", Offset = "0xD2069C", VA = "0xD2069C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xD206A0", Offset = "0xD206A0", VA = "0xD206A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xD20A24", Offset = "0xD20A24", VA = "0xD20A24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mover;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lineDis;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float spawnBeatDis;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isVerticalBeat;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _left;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _up;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_isStopGame;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BeatPlay m_beatPlay;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BeatRecord m_beatRecord;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<BeatData> m_beatDataList;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<BeatBox> m_beatBoxList;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject m_resBeatBox;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Recycling> m_recyclingList;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForFixedUpdate delay_GC;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Recycling temp;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BeatData _beatData_GC;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BeatBox _box;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 _pos;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForFixedUpdate delay_GC_AC;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<BeatData> b;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BeatData a;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _playTime;

	[Token(Token = "0x17000070")]
	public List<Recycling> getRecycling
	{
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xD1F060", Offset = "0xD1F060", VA = "0xD1F060")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000071")]
	public BeatPlay beatPlay
	{
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xD174A0", Offset = "0xD174A0", VA = "0xD174A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xD1F068", Offset = "0xD1F068", VA = "0xD1F068")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xD1F0D4", Offset = "0xD1F0D4", VA = "0xD1F0D4")]
	public void ClearBeatBoxs()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xD1F358", Offset = "0xD1F358", VA = "0xD1F358")]
	public void Play(BeatRecord _record)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xD1F7DC", Offset = "0xD1F7DC", VA = "0xD1F7DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5DF0", Offset = "0x9A5DF0")]
	private IEnumerator<float> CreateBeatBox_GC()
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xD1F85C", Offset = "0xD1F85C", VA = "0xD1F85C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5E54", Offset = "0x9A5E54")]
	private IEnumerator<float> ActivatedionBeatBox()
	{
		return null;
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xD1F934", Offset = "0xD1F934", VA = "0xD1F934")]
	private Recycling FindNotUsed()
	{
		return null;
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xD1FB84", Offset = "0xD1FB84", VA = "0xD1FB84")]
	private Vector3 SpawnPos(BeatData beatData, Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xD2025C", Offset = "0xD2025C", VA = "0xD2025C")]
	public void UpdateLogic()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xD20484", Offset = "0xD20484", VA = "0xD20484")]
	public BeatBoxSpawn()
	{
	}
}
[Token(Token = "0x2000127")]
public class BeatMesh : MonoBehaviour
{
	[Token(Token = "0x40006AE")]
	protected const float mc_checkMinDis = 0.03f;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider checkCollider;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider outBoxCollider;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string distortEffect;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string LeftHitFX;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string RightHitFX;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string missImg;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string XImg;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string LeftHitSound;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string RightHitSound;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string NoHitSound;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string WrongHitSound;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string perfectFX;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string greatFX;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string goodFX;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string badFX;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string allPerfectFX;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string[] FXname;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99DA7C", Offset = "0x99DA7C")]
	private BeatBox <beatBox>k__BackingField;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool m_isHitCheck;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool isBlueAlreadySound;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool isRedAlreadySound;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject[] m_BoxRigid;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject[] m_BoxMesh;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99DAAC", Offset = "0x99DAAC")]
	private Quaternion <oriRot>k__BackingField;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99DABC", Offset = "0x99DABC")]
	private MeshRenderer[] <mesh>k__BackingField;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int pastCombo;

	[Token(Token = "0x17000072")]
	public BeatBox beatBox
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xD21780", Offset = "0xD21780", VA = "0xD21780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5EB8", Offset = "0x9A5EB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xD21788", Offset = "0xD21788", VA = "0xD21788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5EC8", Offset = "0x9A5EC8")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public GameObject[] getSideObj_rigid
	{
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xD21790", Offset = "0xD21790", VA = "0xD21790")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public bool isHitCheck
	{
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xD21798", Offset = "0xD21798", VA = "0xD21798")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000075")]
	public Quaternion oriRot
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xD217A0", Offset = "0xD217A0", VA = "0xD217A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5ED8", Offset = "0x9A5ED8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xD217AC", Offset = "0xD217AC", VA = "0xD217AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5EE8", Offset = "0x9A5EE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public MeshRenderer[] mesh
	{
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xD217B8", Offset = "0xD217B8", VA = "0xD217B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5EF8", Offset = "0x9A5EF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xD217C0", Offset = "0xD217C0", VA = "0xD217C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A5F08", Offset = "0x9A5F08")]
		private set
		{
		}
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xD217C8", Offset = "0xD217C8", VA = "0xD217C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xD2197C", Offset = "0xD2197C", VA = "0xD2197C", Slot = "4")]
	public virtual void Open(BeatBox _beatBox)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xD21A2C", Offset = "0xD21A2C", VA = "0xD21A2C", Slot = "5")]
	public virtual void AddOutHitWeapon(Collider other)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xD21A30", Offset = "0xD21A30", VA = "0xD21A30", Slot = "6")]
	public virtual void AddHitWeapon(Collider other)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xD21A34", Offset = "0xD21A34", VA = "0xD21A34", Slot = "7")]
	public virtual void Miss()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xD21CE8", Offset = "0xD21CE8", VA = "0xD21CE8", Slot = "8")]
	public virtual void AlreadySoundPlay()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xD21C64", Offset = "0xD21C64", VA = "0xD21C64")]
	public void MissSound()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xD21E64", Offset = "0xD21E64", VA = "0xD21E64", Slot = "9")]
	public virtual void SuccEvent()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xD22224", Offset = "0xD22224", VA = "0xD22224", Slot = "10")]
	public virtual void FailedEvent()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xD2240C", Offset = "0xD2240C", VA = "0xD2240C")]
	public void CutMesh(eBEAT_COLOR _weaponColor, Weapon _weapon, Vector3 _hitPoint)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xD22550", Offset = "0xD22550", VA = "0xD22550")]
	public void FailedMesh(eBEAT_COLOR _weaponColor, Weapon _weapon)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xD22680", Offset = "0xD22680", VA = "0xD22680")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xD227AC", Offset = "0xD227AC", VA = "0xD227AC")]
	public BeatMesh()
	{
	}
}
[Token(Token = "0x2000128")]
public class BeatMeshArrow : BeatMesh
{
	[StructLayout(3)]
	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9996C0", Offset = "0x9996C0")]
	private struct <AddOutHitWeapon>d__9 : IAsyncStateMachine
	{
		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BeatMeshArrow <>4__this;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider other;

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xA50684", Offset = "0xA50684", VA = "0xA50684", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xA5068C", Offset = "0xA5068C", VA = "0xA5068C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9996D0", Offset = "0x9996D0")]
	private struct <AddHitWeapon>d__11 : IAsyncStateMachine
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BeatMeshArrow <>4__this;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider other;

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xA50670", Offset = "0xA50670", VA = "0xA50670", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xA50678", Offset = "0xA50678", VA = "0xA50678", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9996E0", Offset = "0x9996E0")]
	private sealed class <BoxScale>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject a;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <BoxTime>5__2;

		[Token(Token = "0x17000356")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xD246CC", Offset = "0xD246CC", VA = "0xD246CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xD24738", Offset = "0xD24738", VA = "0xD24738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xD23A80", Offset = "0xD23A80", VA = "0xD23A80")]
		[DebuggerHidden]
		public <BoxScale>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xD24474", Offset = "0xD24474", VA = "0xD24474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xD24478", Offset = "0xD24478", VA = "0xD24478", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xD246D4", Offset = "0xD246D4", VA = "0xD246D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9996F0", Offset = "0x9996F0")]
	private sealed class <BoxRotate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RotateEnd;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Boxtransform;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <BoxTime>5__2;

		[Token(Token = "0x17000358")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xD24400", Offset = "0xD24400", VA = "0xD24400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0xD2446C", Offset = "0xD2446C", VA = "0xD2446C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xD23AAC", Offset = "0xD23AAC", VA = "0xD23AAC")]
		[DebuggerHidden]
		public <BoxRotate>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xD241F0", Offset = "0xD241F0", VA = "0xD241F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xD241F4", Offset = "0xD241F4", VA = "0xD241F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xD24408", Offset = "0xD24408", VA = "0xD24408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float biyul;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Weapon _weapon;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 _point;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 ohit1;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 div;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 result;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 _hit;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private BeatBoxCheck _check;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _colorTest;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 _dir;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 offset;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float _angle;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool _isSucc;

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xD22B6C", Offset = "0xD22B6C", VA = "0xD22B6C", Slot = "4")]
	public override void Open(BeatBox _beatBox)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xD22C58", Offset = "0xD22C58", VA = "0xD22C58", Slot = "7")]
	public override void Miss()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xD1E8BC", Offset = "0xD1E8BC", VA = "0xD1E8BC")]
	public void ResetRotation()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xD22CEC", Offset = "0xD22CEC", VA = "0xD22CEC", Slot = "5")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9A5F18", Offset = "0x9A5F18")]
	public override void AddOutHitWeapon(Collider other)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xD22DF0", Offset = "0xD22DF0", VA = "0xD22DF0", Slot = "6")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9A5F7C", Offset = "0x9A5F7C")]
	public override void AddHitWeapon(Collider other)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xD22EF4", Offset = "0xD22EF4", VA = "0xD22EF4")]
	public bool IsSucc(eBEAT_COLOR _weaponColor, Vector3 _weaponPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xD23A7C", Offset = "0xD23A7C", VA = "0xD23A7C", Slot = "9")]
	public override void SuccEvent()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xD22BD8", Offset = "0xD22BD8", VA = "0xD22BD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A5FE0", Offset = "0x9A5FE0")]
	private IEnumerator BoxScale(GameObject a)
	{
		return null;
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xD22C5C", Offset = "0xD22C5C", VA = "0xD22C5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7044", Offset = "0x9A7044")]
	private IEnumerator BoxRotate(Transform Boxtransform, float RotateEnd)
	{
		return null;
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xD23AD8", Offset = "0xD23AD8", VA = "0xD23AD8")]
	public BeatMeshArrow()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xD23AE8", Offset = "0xD23AE8", VA = "0xD23AE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A70A8", Offset = "0x9A70A8")]
	[DebuggerHidden]
	private void <>n__0(Collider other)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xD23AEC", Offset = "0xD23AEC", VA = "0xD23AEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A70E0", Offset = "0x9A70E0")]
	[DebuggerHidden]
	private void <>n__1(Collider other)
	{
	}
}
[Token(Token = "0x2000129")]
public class BeatMeshBomb : BeatMesh
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Animation ani;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xD24740", Offset = "0xD24740", VA = "0xD24740", Slot = "4")]
	public override void Open(BeatBox _beatBox)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xD247C4", Offset = "0xD247C4", VA = "0xD247C4", Slot = "7")]
	public override void Miss()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xD24850", Offset = "0xD24850", VA = "0xD24850")]
	public BeatMeshBomb()
	{
	}
}
[Token(Token = "0x200012A")]
public class BeatMeshHit : BeatMesh
{
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999700", Offset = "0x999700")]
	private sealed class <BoxScale>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject a;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <BoxTime>5__2;

		[Token(Token = "0x1700035A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xD2521C", Offset = "0xD2521C", VA = "0xD2521C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xD25288", Offset = "0xD25288", VA = "0xD25288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xD24F88", Offset = "0xD24F88", VA = "0xD24F88")]
		[DebuggerHidden]
		public <BoxScale>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xD24FC4", Offset = "0xD24FC4", VA = "0xD24FC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xD24FC8", Offset = "0xD24FC8", VA = "0xD24FC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xD25224", Offset = "0xD25224", VA = "0xD25224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Weapon _weapon;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float biyul;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xD24854", Offset = "0xD24854", VA = "0xD24854", Slot = "4")]
	public override void Open(BeatBox _beatBox)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xD24940", Offset = "0xD24940", VA = "0xD24940", Slot = "7")]
	public override void Miss()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xD24944", Offset = "0xD24944", VA = "0xD24944", Slot = "5")]
	public override void AddOutHitWeapon(Collider other)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xD24D40", Offset = "0xD24D40", VA = "0xD24D40", Slot = "6")]
	public override void AddHitWeapon(Collider other)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xD24BF8", Offset = "0xD24BF8", VA = "0xD24BF8")]
	public bool IsSucc(eBEAT_COLOR _weaponColor, Vector3 _weaponPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xD24EB8", Offset = "0xD24EB8", VA = "0xD24EB8", Slot = "9")]
	public override void SuccEvent()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xD248C0", Offset = "0xD248C0", VA = "0xD248C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7118", Offset = "0x9A7118")]
	private IEnumerator BoxScale(GameObject a)
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xD24FB4", Offset = "0xD24FB4", VA = "0xD24FB4")]
	public BeatMeshHit()
	{
	}
}
[Token(Token = "0x200012B")]
public class BeatMeshNoHit : BeatMesh
{
	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xD25290", Offset = "0xD25290", VA = "0xD25290")]
	public BeatMeshNoHit()
	{
	}
}
[Token(Token = "0x200012C")]
public class BeatMeshTrigger : MonoBehaviour
{
	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BeatMesh mesh;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xD25294", Offset = "0xD25294", VA = "0xD25294")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xD25338", Offset = "0xD25338", VA = "0xD25338")]
	public BeatMeshTrigger()
	{
	}
}
[Token(Token = "0x200012D")]
public class BeatPlay : MonoBehaviour
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource m_sound;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isStop;

	[Token(Token = "0x17000077")]
	public bool isReady
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xD2036C", Offset = "0xD2036C", VA = "0xD2036C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000078")]
	public float playTime
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xD20440", Offset = "0xD20440", VA = "0xD20440")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xD25340", Offset = "0xD25340", VA = "0xD25340")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public bool isPlay
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xD17560", Offset = "0xD17560", VA = "0xD17560")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007A")]
	public float getTotalTime
	{
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xD25498", Offset = "0xD25498", VA = "0xD25498")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007B")]
	public float getPitch
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xD259B8", Offset = "0xD259B8", VA = "0xD259B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xD2558C", Offset = "0xD2558C", VA = "0xD2558C")]
	public void playSpeed(float speed)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xD1F6BC", Offset = "0xD1F6BC", VA = "0xD1F6BC")]
	public void Open(string _path)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xD255A8", Offset = "0xD255A8", VA = "0xD255A8")]
	public void Play()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xD25738", Offset = "0xD25738", VA = "0xD25738")]
	public void ResetPlay()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xD25814", Offset = "0xD25814", VA = "0xD25814")]
	public void SetPause()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xD258DC", Offset = "0xD258DC", VA = "0xD258DC")]
	public void Stop()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xD2567C", Offset = "0xD2567C", VA = "0xD2567C")]
	public void SetPitch(float _value)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xD25A50", Offset = "0xD25A50", VA = "0xD25A50")]
	public BeatPlay()
	{
	}
}
[Token(Token = "0x200012E")]
public class BGMPlayer : MonoBehaviour
{
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999710", Offset = "0x999710")]
	private sealed class <IsPlayMusic>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BGMPlayer <>4__this;

		[Token(Token = "0x1700035C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xD175A4", Offset = "0xD175A4", VA = "0xD175A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xD17610", Offset = "0xD17610", VA = "0xD17610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xD16EA8", Offset = "0xD16EA8", VA = "0xD16EA8")]
		[DebuggerHidden]
		public <IsPlayMusic>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xD16F78", Offset = "0xD16F78", VA = "0xD16F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xD16F7C", Offset = "0xD16F7C", VA = "0xD16F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xD175AC", Offset = "0xD175AC", VA = "0xD175AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audio;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForFixedUpdate coroutineUpdate;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds coroutineTimeFloat;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool stopSW;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xD16DA8", Offset = "0xD16DA8", VA = "0xD16DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xD16E28", Offset = "0xD16E28", VA = "0xD16E28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A717C", Offset = "0x9A717C")]
	private IEnumerator IsPlayMusic()
	{
		return null;
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xD16ED4", Offset = "0xD16ED4", VA = "0xD16ED4")]
	public BGMPlayer()
	{
	}
}
[Token(Token = "0x200012F")]
public class BoxPosData : MonoSingletonPass<BoxPosData>
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] boxData;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private System.Random random;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xD278A4", Offset = "0xD278A4", VA = "0xD278A4")]
	public Vector2 GetBoxPos(int count)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xD27998", Offset = "0xD27998", VA = "0xD27998")]
	public BoxPosData()
	{
	}
}
[Token(Token = "0x2000130")]
public class BoxSpawnAni : MonoBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animation ani;

	[Token(Token = "0x40006E3")]
	private const string aniName = "box_com_speed";

	[Token(Token = "0x1700007C")]
	public Animation getAni
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xD27A34", Offset = "0xD27A34", VA = "0xD27A34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xD1D780", Offset = "0xD1D780", VA = "0xD1D780")]
	public void Play()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xD27A3C", Offset = "0xD27A3C", VA = "0xD27A3C")]
	public void SpawnEffect()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xD27A40", Offset = "0xD27A40", VA = "0xD27A40")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xD27B20", Offset = "0xD27B20", VA = "0xD27B20")]
	public BoxSpawnAni()
	{
	}
}
[Token(Token = "0x2000131")]
public class RandomHitSound : MonoBehaviour
{
	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<AudioClip> hitSound;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audio;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xC1C2CC", Offset = "0xC1C2CC", VA = "0xC1C2CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xC1C330", Offset = "0xC1C330", VA = "0xC1C330")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xC1C3F4", Offset = "0xC1C3F4", VA = "0xC1C3F4")]
	public RandomHitSound()
	{
	}
}
[Token(Token = "0x2000132")]
public enum BtnHoverEnum : byte
{
	[Token(Token = "0x40006E7")]
	MultiPlayBtn,
	[Token(Token = "0x40006E8")]
	CustomBtn
}
[Token(Token = "0x2000133")]
public enum WarnPopup : byte
{
	[Token(Token = "0x40006EA")]
	YN,
	[Token(Token = "0x40006EB")]
	Chk
}
[Token(Token = "0x2000134")]
public enum MultiplayMode : byte
{
	[Token(Token = "0x40006ED")]
	VrRoom,
	[Token(Token = "0x40006EE")]
	Steam,
	[Token(Token = "0x40006EF")]
	Quest,
	[Token(Token = "0x40006F0")]
	Single
}
[Token(Token = "0x2000135")]
public enum RoomMode : byte
{
	[Token(Token = "0x40006F2")]
	Open,
	[Token(Token = "0x40006F3")]
	Lock
}
[Token(Token = "0x2000136")]
public enum SceneEnum : byte
{
	[Token(Token = "0x40006F5")]
	Loading,
	[Token(Token = "0x40006F6")]
	Main,
	[Token(Token = "0x40006F7")]
	Game,
	[Token(Token = "0x40006F8")]
	TestMain,
	[Token(Token = "0x40006F9")]
	TestGame
}
[Token(Token = "0x2000137")]
public enum MultiGameStateEnum : byte
{
	[Token(Token = "0x40006FB")]
	Loading,
	[Token(Token = "0x40006FC")]
	Play,
	[Token(Token = "0x40006FD")]
	GameOver
}
[Token(Token = "0x2000138")]
public enum RateEnum : byte
{
	[Token(Token = "0x40006FF")]
	Perfect,
	[Token(Token = "0x4000700")]
	Great,
	[Token(Token = "0x4000701")]
	Good,
	[Token(Token = "0x4000702")]
	Bad,
	[Token(Token = "0x4000703")]
	Miss
}
[Token(Token = "0x2000139")]
public class EtcProc : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _randomStringVal;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _randomIntegerVal;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _randomKoreanStringVal;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] _randomKoreanArray0;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string[] _randomKoreanArray1;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _randomEngCapital;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xD03600", Offset = "0xD03600", VA = "0xD03600")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xD03604", Offset = "0xD03604", VA = "0xD03604")]
	private void InitValue()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xD05154", Offset = "0xD05154", VA = "0xD05154")]
	public string RandomStringMaker(int _length)
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xD05234", Offset = "0xD05234", VA = "0xD05234")]
	public string RandomIntegerMaker(int _length)
	{
		return null;
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xD05314", Offset = "0xD05314", VA = "0xD05314")]
	public string RandomKoreanStringMaker(int _length)
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xD053FC", Offset = "0xD053FC", VA = "0xD053FC")]
	public string RandomENGInitialMaker(int _engLength, int _numLength)
	{
		return null;
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xD05534", Offset = "0xD05534", VA = "0xD05534")]
	public string RandomKoreanNameMaker(int _numLength)
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xD0568C", Offset = "0xD0568C", VA = "0xD0568C")]
	public EtcProc()
	{
	}
}
[Token(Token = "0x200013A")]
public class FadeProc : MonoBehaviour
{
	[Token(Token = "0x2000490")]
	private enum FadeKind
	{
		[Token(Token = "0x4001DB9")]
		In,
		[Token(Token = "0x4001DBA")]
		Out
	}

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _fadeBox;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_fadeTR;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_fadeOvrTR;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _fadeTime;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _activeTime;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FadeKind _fadeEnum;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool fadeSW;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _fadeOutSW;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool _fadeInSW;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xD05734", Offset = "0xD05734", VA = "0xD05734")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xD05738", Offset = "0xD05738", VA = "0xD05738")]
	private void AwakeValue()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xD057F8", Offset = "0xD057F8", VA = "0xD057F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xD05808", Offset = "0xD05808", VA = "0xD05808")]
	private void InitValue()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xD05864", Offset = "0xD05864", VA = "0xD05864")]
	private void Update()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xD05A8C", Offset = "0xD05A8C", VA = "0xD05A8C")]
	public void FadeOutProc()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xD05ADC", Offset = "0xD05ADC", VA = "0xD05ADC")]
	private void FadeOutUpdate()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xD05818", Offset = "0xD05818", VA = "0xD05818")]
	public void FadeInProc()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xD05868", Offset = "0xD05868", VA = "0xD05868")]
	private void FadeUpdateProc()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xD05BC0", Offset = "0xD05BC0", VA = "0xD05BC0")]
	private void FadeInUpdate()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xD05CA8", Offset = "0xD05CA8", VA = "0xD05CA8")]
	public FadeProc()
	{
	}
}
[Token(Token = "0x200013B")]
public class GamePlayManager : MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GamePlayManager mInstance;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FadeProc m_fadeProc;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameSyncProc m_gameSyncProc;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UI_MultiFinished m_uiMultiFinished;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MultiGameStateEnum gameState;

	[Token(Token = "0x1700007D")]
	public static GamePlayManager instance
	{
		[Token(Token = "0x600070E")]
		[Address(RVA = "0xD06344", Offset = "0xD06344", VA = "0xD06344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xD0C3EC", Offset = "0xD0C3EC", VA = "0xD0C3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xD0C5A4", Offset = "0xD0C5A4", VA = "0xD0C5A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xD0C624", Offset = "0xD0C624", VA = "0xD0C624")]
	public GamePlayManager()
	{
	}
}
[Token(Token = "0x200013C")]
public class GameSyncProc : MonoBehaviourPunCallbacks
{
	[Serializable]
	[Token(Token = "0x2000491")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999720", Offset = "0x999720")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<int, LeaderBoardListPrefabProc>, int> <>9__18_0;

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xD0D930", Offset = "0xD0D930", VA = "0xD0D930")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xD0D938", Offset = "0xD0D938", VA = "0xD0D938")]
		internal int <LeaderBoardSort>b__18_0(KeyValuePair<int, LeaderBoardListPrefabProc> pair)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonView m_photonView;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leaderBoardGO;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leaderBoardListParentGO;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeaderBoardListPrefabProc m_leaderBoardListPrefabProc;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<int, LeaderBoardListPrefabProc> m_leaderBoardDic;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ExitGames.Client.Photon.Hashtable _currentHash;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ExitGames.Client.Photon.Hashtable _newHash;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hpBarGameOverGO;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button exitBtn;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int RateValue;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xD0C62C", Offset = "0xD0C62C", VA = "0xD0C62C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xD0C700", Offset = "0xD0C700", VA = "0xD0C700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xD0C7C8", Offset = "0xD0C7C8", VA = "0xD0C7C8", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xD0C830", Offset = "0xD0C830", VA = "0xD0C830", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xD0C704", Offset = "0xD0C704", VA = "0xD0C704")]
	private void LeaderBoardInit()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xD0C898", Offset = "0xD0C898", VA = "0xD0C898")]
	private void LeaderBoardListAllDel()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xD0C9BC", Offset = "0xD0C9BC", VA = "0xD0C9BC")]
	private void LeaderBoardListAdd()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xD0CB78", Offset = "0xD0CB78", VA = "0xD0CB78")]
	private void LeaderBoardListObjAdd(int _key, Player _player, int _rank)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xD0CCE8", Offset = "0xD0CCE8", VA = "0xD0CCE8")]
	private void LeaderBoardSort()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xD0D024", Offset = "0xD0D024", VA = "0xD0D024")]
	public void NoteUpdate()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xD0D358", Offset = "0xD0D358", VA = "0xD0D358")]
	public void GameOverChk()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xD0A73C", Offset = "0xD0A73C", VA = "0xD0A73C")]
	public void SetGameOver()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xD0D65C", Offset = "0xD0D65C", VA = "0xD0D65C")]
	private void ExitBtnClick()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xD0D6BC", Offset = "0xD0D6BC", VA = "0xD0D6BC")]
	[PunRPC]
	private void NoteUpdateRPC(int _actorNum, int _combo, int _score, int _rate)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xD0D790", Offset = "0xD0D790", VA = "0xD0D790")]
	[PunRPC]
	private void GameOverRPC()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xD0D818", Offset = "0xD0D818", VA = "0xD0D818", Slot = "46")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xD0D8C0", Offset = "0xD0D8C0", VA = "0xD0D8C0")]
	public GameSyncProc()
	{
	}
}
[Token(Token = "0x200013D")]
public class LoadingProc : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhotonView m_photonView;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ExitGames.Client.Photon.Hashtable _currentHash;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xBB9764", Offset = "0xBB9764", VA = "0xBB9764", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xBB97CC", Offset = "0xBB97CC", VA = "0xBB97CC", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xBB9834", Offset = "0xBB9834", VA = "0xBB9834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xBB98A8", Offset = "0xBB98A8", VA = "0xBB98A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xBB9AF8", Offset = "0xBB9AF8", VA = "0xBB9AF8")]
	public void GameSceneLoad()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xBB9BF4", Offset = "0xBB9BF4", VA = "0xBB9BF4")]
	public void GameSceneLoadSuccess()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xBB98EC", Offset = "0xBB98EC", VA = "0xBB98EC")]
	private void GameStartChkProc()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xBB9D2C", Offset = "0xBB9D2C", VA = "0xBB9D2C")]
	private bool LoadingChkProc()
	{
		return default(bool);
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xBB9F1C", Offset = "0xBB9F1C", VA = "0xBB9F1C")]
	[PunRPC]
	private void GameSceneLoadRPC()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xBB9F48", Offset = "0xBB9F48", VA = "0xBB9F48")]
	[PunRPC]
	private void GameStartRPC()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xBB9FFC", Offset = "0xBB9FFC", VA = "0xBB9FFC")]
	public LoadingProc()
	{
	}
}
[Token(Token = "0x200013E")]
public class MainPlayManager : MonoBehaviour
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MainPlayManager mInstance;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FadeProc m_fadeProc;

	[Token(Token = "0x1700007E")]
	public static MainPlayManager instance
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0xDF903C", Offset = "0xDF903C", VA = "0xDF903C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xDF9184", Offset = "0xDF9184", VA = "0xDF9184")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xDF92CC", Offset = "0xDF92CC", VA = "0xDF92CC")]
	public MainPlayManager()
	{
	}
}
[Token(Token = "0x200013F")]
public class ConnProc : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ExitGames.Client.Photon.Hashtable _playerCustomHash;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isban;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xD2B4FC", Offset = "0xD2B4FC", VA = "0xD2B4FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xD2B500", Offset = "0xD2B500", VA = "0xD2B500")]
	private void Start()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xD2B508", Offset = "0xD2B508", VA = "0xD2B508", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xD2B570", Offset = "0xD2B570", VA = "0xD2B570", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xD2B5D8", Offset = "0xD2B5D8", VA = "0xD2B5D8")]
	private void ConnectedValueInit()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xD2B660", Offset = "0xD2B660", VA = "0xD2B660")]
	private void BasicPropertiesInit()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xD2B7A4", Offset = "0xD2B7A4", VA = "0xD2B7A4")]
	private void PlayerPropertiesInit()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xD2B914", Offset = "0xD2B914", VA = "0xD2B914")]
	public void PhotonConnect()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xD2BA70", Offset = "0xD2BA70", VA = "0xD2BA70")]
	public void PhotonDisconnect()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xD2BB80", Offset = "0xD2BB80", VA = "0xD2BB80", Slot = "29")]
	public override void OnConnected()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xD2BB88", Offset = "0xD2BB88", VA = "0xD2BB88", Slot = "44")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xD2BCB4", Offset = "0xD2BCB4", VA = "0xD2BCB4", Slot = "30")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xD2BD2C", Offset = "0xD2BD2C", VA = "0xD2BD2C", Slot = "37")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xD2C198", Offset = "0xD2C198", VA = "0xD2C198")]
	public ConnProc()
	{
	}
}
[Token(Token = "0x2000140")]
public class MatchingProc : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ExitGames.Client.Photon.Hashtable _newHash;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ExitGames.Client.Photon.Hashtable _roomCustomHash;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ExitGames.Client.Photon.Hashtable _roomJoinCustomHash;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string[] _roomCustomString;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Photon.Realtime.RoomOptions _roomOptions;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int createCount;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int createCurrentCount;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xDF92D4", Offset = "0xDF92D4", VA = "0xDF92D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xDF92D8", Offset = "0xDF92D8", VA = "0xDF92D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xDF92DC", Offset = "0xDF92DC", VA = "0xDF92DC", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xDF9344", Offset = "0xDF9344", VA = "0xDF9344", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xDF93AC", Offset = "0xDF93AC", VA = "0xDF93AC")]
	private void ValueInit()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xDF93B4", Offset = "0xDF93B4", VA = "0xDF93B4")]
	private void RoomPropertiesInit()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xDF9740", Offset = "0xDF9740", VA = "0xDF9740")]
	private void RoomOptionsInit()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xDF985C", Offset = "0xDF985C", VA = "0xDF985C")]
	private void RoomJoinPropertiesInit()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xDF9994", Offset = "0xDF9994", VA = "0xDF9994")]
	public void RoomCreateFirst()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xDF9AF4", Offset = "0xDF9AF4", VA = "0xDF9AF4")]
	private void RoomCreateRetry()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xDF9BF4", Offset = "0xDF9BF4", VA = "0xDF9BF4")]
	public void RoomNumberEnter(string _roomName)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xDF9CB0", Offset = "0xDF9CB0", VA = "0xDF9CB0")]
	public void RoomRandomEnter()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xDF9DB4", Offset = "0xDF9DB4", VA = "0xDF9DB4")]
	public void RoomGameStart()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xDF9E28", Offset = "0xDF9E28", VA = "0xDF9E28")]
	public void RoomGameEnd()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xDF9E9C", Offset = "0xDF9E9C", VA = "0xDF9E9C")]
	public void PlayerGameStart()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xDFA044", Offset = "0xDFA044", VA = "0xDFA044")]
	public void PlayerGameEnd()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xDFA1E8", Offset = "0xDFA1E8", VA = "0xDFA1E8", Slot = "34")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xDFA2F4", Offset = "0xDFA2F4", VA = "0xDFA2F4", Slot = "32")]
	public override void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xDFA59C", Offset = "0xDFA59C", VA = "0xDFA59C", Slot = "40")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xDFA714", Offset = "0xDFA714", VA = "0xDFA714", Slot = "33")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xDFAA08", Offset = "0xDFAA08", VA = "0xDFAA08", Slot = "43")]
	public override void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xDFAC9C", Offset = "0xDFAC9C", VA = "0xDFAC9C")]
	public MatchingProc()
	{
	}
}
[Token(Token = "0x2000141")]
public class PlayerInfoData
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Player m_player;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string uuid;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string nickName;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isReady;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isLoad;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool isGameOver;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool isDisconn;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xC19B94", Offset = "0xC19B94", VA = "0xC19B94")]
	public void SetInit(Player _player)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xC19BA4", Offset = "0xC19BA4", VA = "0xC19BA4")]
	public void UpdateProperties()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xC19D08", Offset = "0xC19D08", VA = "0xC19D08")]
	public PlayerInfoData()
	{
	}
}
[Token(Token = "0x2000142")]
public class PlayerInfoProc : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonView m_photonview;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<int, PlayerInfoData> m_playerInfoDataDic;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerInfoData _m_playerInfoData;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xC19D10", Offset = "0xC19D10", VA = "0xC19D10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xC19D84", Offset = "0xC19D84", VA = "0xC19D84")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xC19DF8", Offset = "0xC19DF8", VA = "0xC19DF8", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xC19E6C", Offset = "0xC19E6C", VA = "0xC19E6C", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xC19D88", Offset = "0xC19D88", VA = "0xC19D88")]
	private void DicInit()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xC19EE0", Offset = "0xC19EE0", VA = "0xC19EE0")]
	private void InputJoinDicPlayer()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xC1A108", Offset = "0xC1A108", VA = "0xC1A108", Slot = "40")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xC1A130", Offset = "0xC1A130", VA = "0xC1A130", Slot = "30")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xC1A158", Offset = "0xC1A158", VA = "0xC1A158", Slot = "41")]
	public override void OnPlayerEnteredRoom(Player _newPlayer)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xC1A268", Offset = "0xC1A268", VA = "0xC1A268", Slot = "42")]
	public override void OnPlayerLeftRoom(Player _otherPlayer)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xC1A370", Offset = "0xC1A370", VA = "0xC1A370", Slot = "46")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xC1A378", Offset = "0xC1A378", VA = "0xC1A378")]
	public PlayerInfoProc()
	{
	}
}
[Token(Token = "0x2000143")]
public class SelectMusicProc : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ExitGames.Client.Photon.Hashtable _currentHash;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xB5FE7C", Offset = "0xB5FE7C", VA = "0xB5FE7C", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xB5FEE4", Offset = "0xB5FEE4", VA = "0xB5FEE4", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xB5FF4C", Offset = "0xB5FF4C", VA = "0xB5FF4C", Slot = "45")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xB6019C", Offset = "0xB6019C", VA = "0xB6019C", Slot = "41")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xB60250", Offset = "0xB60250", VA = "0xB60250", Slot = "31")]
	public override void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xB603D4", Offset = "0xB603D4", VA = "0xB603D4")]
	public SelectMusicProc()
	{
	}
}
[Token(Token = "0x2000144")]
public class PM : MonoSingletonPass<PM>
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConnProc m_connProc;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EtcProc m_etcProc;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MatchingProc m_matchingProc;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerInfoProc m_playerInfoProc;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SelectMusicProc m_selectMuiscProc;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LoadingProc m_loadingProc;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SceneLoadProc m_sceneLoadProc;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MultiplayMode multiplayModeSelect;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public RoomMode roomModeSelect;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int maxPlayer;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isConnected;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool isConnectedIng;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool isDebugMode;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xC16144", Offset = "0xC16144", VA = "0xC16144", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xC16304", Offset = "0xC16304", VA = "0xC16304")]
	private void Start()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xC16318", Offset = "0xC16318", VA = "0xC16318")]
	public PM()
	{
	}
}
[Token(Token = "0x2000145")]
public class FinishListPrefabProc : MonoBehaviour
{
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject meIngGO;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text rankTxt;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text nameTxt;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text niceTxt;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text scoreTxt;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image greadeImg;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xD05DA0", Offset = "0xD05DA0", VA = "0xD05DA0")]
	public void AddObj(Player _player, int _rank, string _name, int _nice, int _miss, int _good, int _greate, int _score, bool _isGameOver)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xD05F5C", Offset = "0xD05F5C", VA = "0xD05F5C")]
	private void GradeProc(int _miss, int _good, int _greate, bool _isGameOver)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xD0623C", Offset = "0xD0623C", VA = "0xD0623C")]
	public FinishListPrefabProc()
	{
	}
}
[Token(Token = "0x2000146")]
public class LeaderBoardListPrefabProc : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeaderBoard_Manager m_leaderBoardMgr;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Player m_photonPlayer;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int comboVal;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int scoreVal;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int rateVal;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool isGameOver;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string nameVal;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int rankVal;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int missNoteCount;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int badNoteCount;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int goodNoteCount;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int greateNoteCount;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int niceNoteCount;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text rankTxt;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text nameTxt;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject meImgGO;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xBB7C74", Offset = "0xBB7C74", VA = "0xBB7C74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xBB7D58", Offset = "0xBB7D58", VA = "0xBB7D58", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xBB7DC0", Offset = "0xBB7DC0", VA = "0xBB7DC0", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xBB7CF0", Offset = "0xBB7CF0", VA = "0xBB7CF0")]
	private void InitValue()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xBB7E28", Offset = "0xBB7E28", VA = "0xBB7E28")]
	public void DelObj()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xBB7EA4", Offset = "0xBB7EA4", VA = "0xBB7EA4")]
	public void AddObj(Player _player, int _rank)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xBB7ED4", Offset = "0xBB7ED4", VA = "0xBB7ED4")]
	private void SetUIProc(int _rank)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xBB7FE0", Offset = "0xBB7FE0", VA = "0xBB7FE0")]
	public void SetNoteProc(int _actorNum, int _combo, int _score, int _rate)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xBB8710", Offset = "0xBB8710", VA = "0xBB8710")]
	private void SetGameOver()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xBB88B0", Offset = "0xBB88B0", VA = "0xBB88B0")]
	public void SetRankProc(int _rank)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xBB8984", Offset = "0xBB8984", VA = "0xBB8984", Slot = "42")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xBB89D8", Offset = "0xBB89D8", VA = "0xBB89D8", Slot = "46")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xBB8AD8", Offset = "0xBB8AD8", VA = "0xBB8AD8")]
	public LeaderBoardListPrefabProc()
	{
	}
}
[Token(Token = "0x2000147")]
public class PlayerListPrefabProc : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject meImgGO;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject masterImgGO;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text nameTxt;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject readyImgGO;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button banBtn;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Player m_photonPlayer;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ExitGames.Client.Photon.Hashtable _playerHash;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xC1A380", Offset = "0xC1A380", VA = "0xC1A380", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xC1A3E8", Offset = "0xC1A3E8", VA = "0xC1A3E8", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xC1A450", Offset = "0xC1A450", VA = "0xC1A450")]
	public void AddObj(Player _player)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xC1A4B4", Offset = "0xC1A4B4", VA = "0xC1A4B4")]
	public void DelObj()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xC1A478", Offset = "0xC1A478", VA = "0xC1A478")]
	private void Init_Obj()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xC1A530", Offset = "0xC1A530", VA = "0xC1A530")]
	private void MeImgProc()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xC1A5CC", Offset = "0xC1A5CC", VA = "0xC1A5CC")]
	private void MasterImgProc()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xC1A618", Offset = "0xC1A618", VA = "0xC1A618")]
	private void NameTxtProc()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xC1A650", Offset = "0xC1A650", VA = "0xC1A650")]
	private void ReadyImgProc()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xC1A70C", Offset = "0xC1A70C", VA = "0xC1A70C")]
	private void BanBtnProc()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xC1A82C", Offset = "0xC1A82C", VA = "0xC1A82C")]
	private void BanBtnClick()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xC1A8D0", Offset = "0xC1A8D0", VA = "0xC1A8D0")]
	public void BanBtnYes()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xC1A93C", Offset = "0xC1A93C", VA = "0xC1A93C", Slot = "46")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xC1A9F0", Offset = "0xC1A9F0", VA = "0xC1A9F0", Slot = "42")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xC1AB58", Offset = "0xC1AB58", VA = "0xC1AB58", Slot = "31")]
	public override void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xC1AB90", Offset = "0xC1AB90", VA = "0xC1AB90")]
	public PlayerListPrefabProc()
	{
	}
}
[Token(Token = "0x2000148")]
public class PropertiesKey
{
	[Token(Token = "0x4000764")]
	public const string roomType = "rt";

	[Token(Token = "0x4000765")]
	public const string roomMode = "rm";

	[Token(Token = "0x4000766")]
	public const string roomVerse = "rv";

	[Token(Token = "0x4000767")]
	public const string roomMusicCount = "rmc";

	[Token(Token = "0x4000768")]
	public const string roomMusicLevel = "rml";

	[Token(Token = "0x4000769")]
	public const string roomMusicMode = "rmm";

	[Token(Token = "0x400076A")]
	public const string playerIsReady = "pir";

	[Token(Token = "0x400076B")]
	public const string playerIsLoad = "pil";

	[Token(Token = "0x400076C")]
	public const string playerIsGameover = "pig";

	[Token(Token = "0x400076D")]
	public const string playerIsDisconn = "pid";

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xC1C2C4", Offset = "0xC1C2C4", VA = "0xC1C2C4")]
	public PropertiesKey()
	{
	}
}
[Token(Token = "0x2000149")]
public class SceneLoadProc : MonoBehaviour
{
	[Token(Token = "0x2000492")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999730", Offset = "0x999730")]
	private sealed class <SceneLoadCor>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoadProc <>4__this;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <op>5__2;

		[Token(Token = "0x1700035E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xB5E6AC", Offset = "0xB5E6AC", VA = "0xB5E6AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xB5E718", Offset = "0xB5E718", VA = "0xB5E718", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xB5E4F0", Offset = "0xB5E4F0", VA = "0xB5E4F0")]
		[DebuggerHidden]
		public <SceneLoadCor>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xB5E524", Offset = "0xB5E524", VA = "0xB5E524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xB5E528", Offset = "0xB5E528", VA = "0xB5E528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xB5E6B4", Offset = "0xB5E6B4", VA = "0xB5E6B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _loadSceneNum;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _sceneValue;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xB5E408", Offset = "0xB5E408", VA = "0xB5E408")]
	public void SceneLoad(int _sceneNum, int _value)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xB5E470", Offset = "0xB5E470", VA = "0xB5E470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7220", Offset = "0x9A7220")]
	private IEnumerator SceneLoadCor()
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xB5E51C", Offset = "0xB5E51C", VA = "0xB5E51C")]
	public SceneLoadProc()
	{
	}
}
[Token(Token = "0x200014A")]
public class BtnHover : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BtnHoverEnum btnHoverSelect;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image btnImage;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text btnText;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool chkState;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color Normal_Color;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color Hover_Color;

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xD27B28", Offset = "0xD27B28", VA = "0xD27B28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xD27BA8", Offset = "0xD27BA8", VA = "0xD27BA8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xD27C38", Offset = "0xD27C38", VA = "0xD27C38", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xD27CBC", Offset = "0xD27CBC", VA = "0xD27CBC")]
	public BtnHover()
	{
	}
}
[Token(Token = "0x200014B")]
public class GL_MuiltiPlayEnd : FsmState<eGAME_STATE>
{
	[Token(Token = "0x6000795")]
	[Address(RVA = "0xD062A8", Offset = "0xD062A8", VA = "0xD062A8")]
	public GL_MuiltiPlayEnd()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xD062FC", Offset = "0xD062FC", VA = "0xD062FC", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xD0648C", Offset = "0xD0648C", VA = "0xD0648C", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xD064DC", Offset = "0xD064DC", VA = "0xD064DC", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x200014C")]
public class GL_MultiFinished : FsmState<eGAME_STATE>
{
	[Token(Token = "0x6000799")]
	[Address(RVA = "0xD06568", Offset = "0xD06568", VA = "0xD06568")]
	public GL_MultiFinished()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xD065BC", Offset = "0xD065BC", VA = "0xD065BC", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xD06848", Offset = "0xD06848", VA = "0xD06848", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xD06898", Offset = "0xD06898", VA = "0xD06898", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x200014D")]
public class GL_MultiMenu : FsmState<eGAME_STATE>
{
	[Token(Token = "0x600079D")]
	[Address(RVA = "0xD068E8", Offset = "0xD068E8", VA = "0xD068E8")]
	public GL_MultiMenu()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xD0693C", Offset = "0xD0693C", VA = "0xD0693C", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xD069C0", Offset = "0xD069C0", VA = "0xD069C0", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xD06A10", Offset = "0xD06A10", VA = "0xD06A10", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x200014E")]
public class GL_MultiModeSelect : FsmState<eGAME_STATE>
{
	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xD06AAC", Offset = "0xD06AAC", VA = "0xD06AAC")]
	public GL_MultiModeSelect()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xD06B00", Offset = "0xD06B00", VA = "0xD06B00", Slot = "4")]
	public override void Enter()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xD06B84", Offset = "0xD06B84", VA = "0xD06B84", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xD06BD4", Offset = "0xD06BD4", VA = "0xD06BD4", Slot = "6")]
	public override void End()
	{
	}
}
[Token(Token = "0x200014F")]
public class UI_EnterRoom : UIBase
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField numIF;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button exitBtn;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button enterBtn;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xE13BEC", Offset = "0xE13BEC", VA = "0xE13BEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xE13CC8", Offset = "0xE13CC8", VA = "0xE13CC8", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xE13D30", Offset = "0xE13D30", VA = "0xE13D30")]
	private void ExitBtnClick()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xE13D38", Offset = "0xE13D38", VA = "0xE13D38")]
	private void EnterBtnClick()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xE13E40", Offset = "0xE13E40", VA = "0xE13E40")]
	public UI_EnterRoom()
	{
	}
}
[Token(Token = "0x2000150")]
public class UI_LoadingPopup : UIBase
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text subjectTxt;

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xE13E48", Offset = "0xE13E48", VA = "0xE13E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xE13E4C", Offset = "0xE13E4C", VA = "0xE13E4C", Slot = "6")]
	public override void Open_Loading(int _num)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xE13F28", Offset = "0xE13F28", VA = "0xE13F28")]
	public UI_LoadingPopup()
	{
	}
}
[Token(Token = "0x2000151")]
public class UI_MultiFinished : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999740", Offset = "0x999740")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<int, LeaderBoardListPrefabProc>, int> <>9__11_0;

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xE14868", Offset = "0xE14868", VA = "0xE14868")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xE14870", Offset = "0xE14870", VA = "0xE14870")]
		internal int <ListAddProc>b__11_0(KeyValuePair<int, LeaderBoardListPrefabProc> pair)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject finishedUIGO;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text titleTxt;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text songTxt;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text singerTxt;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text diffTxt;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button exitBtn;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject listParentGO;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FinishListPrefabProc m_finishListPrefabProc;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ExitGames.Client.Photon.Hashtable _roomHash;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xE13F30", Offset = "0xE13F30", VA = "0xE13F30")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xE13FC8", Offset = "0xE13FC8", VA = "0xE13FC8")]
	public void Open()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xE14234", Offset = "0xE14234", VA = "0xE14234")]
	private void ListAddProc()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xE14674", Offset = "0xE14674", VA = "0xE14674")]
	private void ExitBtnClick()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xE147F8", Offset = "0xE147F8", VA = "0xE147F8")]
	public UI_MultiFinished()
	{
	}
}
[Token(Token = "0x2000152")]
public class UI_MultiMenu : UIBase
{
	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject steamPanel;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button steamEnterBtn;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button steamEnterAutoBtn;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button steamMakeBtn;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button steamExitBtn;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject vrPanel;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button vrEnterBtn;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button vrMakeBtn;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button vrExitBtn;

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xE148C0", Offset = "0xE148C0", VA = "0xE148C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xE14AF0", Offset = "0xE14AF0", VA = "0xE14AF0", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xE14BE0", Offset = "0xE14BE0", VA = "0xE14BE0")]
	private void SteamEnterBtnClick()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xE14C64", Offset = "0xE14C64", VA = "0xE14C64")]
	private void SteamEnterAutoBtnClick()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xE14CE4", Offset = "0xE14CE4", VA = "0xE14CE4")]
	private void SteamMakeBtnClick()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xE14D64", Offset = "0xE14D64", VA = "0xE14D64")]
	private void SteamExitBtnClick()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xE14DE4", Offset = "0xE14DE4", VA = "0xE14DE4")]
	private void VrEnterBtnClick()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xE14E68", Offset = "0xE14E68", VA = "0xE14E68")]
	private void VrMakeBtnClick()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xE14EE8", Offset = "0xE14EE8", VA = "0xE14EE8")]
	private void VrExitBtnClick()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xE14F68", Offset = "0xE14F68", VA = "0xE14F68")]
	public UI_MultiMenu()
	{
	}
}
[Token(Token = "0x2000153")]
public class UI_MultiModeSelect : UIBase
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button multiBtn;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button singleBtn;

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xE14F70", Offset = "0xE14F70", VA = "0xE14F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xE1504C", Offset = "0xE1504C", VA = "0xE1504C", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xE150B4", Offset = "0xE150B4", VA = "0xE150B4")]
	private void CameraChangeProc()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xE15158", Offset = "0xE15158", VA = "0xE15158")]
	private void MultiBtnClick()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xE1520C", Offset = "0xE1520C", VA = "0xE1520C")]
	private void SingleBtnClick()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xE152C8", Offset = "0xE152C8", VA = "0xE152C8")]
	public UI_MultiModeSelect()
	{
	}
}
[Token(Token = "0x2000154")]
public class UI_SelectMusicProc : UIBase
{
	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button startBtn;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button readyBtn;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject readyTrueGO;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject readyFalseGO;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button exitBtn;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject roomInfoGO;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text roomNameTxt;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject playerListParentPanelGO;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerListPrefabProc m_playerListPrefabProc;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dictionary<int, PlayerListPrefabProc> m_playerListDic;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VerseChangeBtn m_verseChangeBtn;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button lockBtn;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject lockSelectGO;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIModeSetting m_uiModeSetting;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public DiffcultyButton[] m_lvBtnArray;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ModeChangeButton[] m_modeChgArray;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ExitGames.Client.Photon.Hashtable _currentHash;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ExitGames.Client.Photon.Hashtable _newHash;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xE152D0", Offset = "0xE152D0", VA = "0xE152D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xE1549C", Offset = "0xE1549C", VA = "0xE1549C", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xE15740", Offset = "0xE15740", VA = "0xE15740", Slot = "7")]
	public override void Close()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xE15778", Offset = "0xE15778", VA = "0xE15778")]
	private void InvokeInit()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xE160D8", Offset = "0xE160D8", VA = "0xE160D8")]
	private void RoomChkDebug()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xE15514", Offset = "0xE15514", VA = "0xE15514")]
	public void ReadyStartBtnInit()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xE16418", Offset = "0xE16418", VA = "0xE16418")]
	private void StartBtnClick()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xE162D4", Offset = "0xE162D4", VA = "0xE162D4")]
	private void ReadyBtnInit()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xE16BF0", Offset = "0xE16BF0", VA = "0xE16BF0")]
	private void ReadyBtnClick()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xE16ADC", Offset = "0xE16ADC", VA = "0xE16ADC")]
	private bool PlayerCountChkProc()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xE16848", Offset = "0xE16848", VA = "0xE16848")]
	private bool ReadyChkProc()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xE16DF8", Offset = "0xE16DF8", VA = "0xE16DF8")]
	private void ExitBtnClick()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xE157BC", Offset = "0xE157BC", VA = "0xE157BC")]
	public void LockBtnProc()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xE16EF8", Offset = "0xE16EF8", VA = "0xE16EF8")]
	private void LockBtnClick()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xE15668", Offset = "0xE15668", VA = "0xE15668")]
	private void RoomInfoInit()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xE1718C", Offset = "0xE1718C", VA = "0xE1718C")]
	private void RoomPlayerListAllDel()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xE172B0", Offset = "0xE172B0", VA = "0xE172B0")]
	private void RoomPlayerListAdd()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xE17558", Offset = "0xE17558", VA = "0xE17558")]
	public void RoomPlayerListObjAdd(int _key, Player _player)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xE17458", Offset = "0xE17458", VA = "0xE17458")]
	private void RoomNumberProc()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xE15900", Offset = "0xE15900", VA = "0xE15900")]
	public void MusicSelectGetChange()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xE10F6C", Offset = "0xE10F6C", VA = "0xE10F6C")]
	public void MusicSelectSetChange(int _musicPageCnt)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xE15C10", Offset = "0xE15C10", VA = "0xE15C10")]
	public void MusicLvGetChange()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xE176C0", Offset = "0xE176C0", VA = "0xE176C0")]
	public void MusicLvSetChange()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xE15A90", Offset = "0xE15A90", VA = "0xE15A90")]
	public void MusicModeGetChange()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xE17804", Offset = "0xE17804", VA = "0xE17804")]
	public void MusicModeSetChange()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xE15D90", Offset = "0xE15D90", VA = "0xE15D90")]
	private void MusicVerseGetChange()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xE15F2C", Offset = "0xE15F2C", VA = "0xE15F2C")]
	private void PowerOverBtnProc()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xE17948", Offset = "0xE17948", VA = "0xE17948")]
	public UI_SelectMusicProc()
	{
	}
}
[Token(Token = "0x2000155")]
public class UI_WarnPopup : UIBase
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ynPanel;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ynTitleTxt;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button ynYesBtn;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button ynNoBtn;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject chkPanel;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text chkTitleTxt;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button chkBtn;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _number;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _actorNum;

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xE17A04", Offset = "0xE17A04", VA = "0xE17A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xE17B24", Offset = "0xE17B24", VA = "0xE17B24", Slot = "5")]
	public override void Open_Warn(WarnPopup _kind, int _num, int _id)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xE17F08", Offset = "0xE17F08", VA = "0xE17F08")]
	private void YnYesBtnClick()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xE17FF0", Offset = "0xE17FF0", VA = "0xE17FF0")]
	private void YnNoBtnClick()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xE1809C", Offset = "0xE1809C", VA = "0xE1809C")]
	private void ChkBtnClick()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xE180A4", Offset = "0xE180A4", VA = "0xE180A4")]
	public UI_WarnPopup()
	{
	}
}
[Token(Token = "0x2000156")]
public class EnterRoom_Manager : MonoBehaviour
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField EnterRoom_InputField;

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xD02028", Offset = "0xD02028", VA = "0xD02028")]
	public void EnterRoom_Input(string number)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xD02068", Offset = "0xD02068", VA = "0xD02068")]
	public void EnterRoom_BackSpace()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xD020C4", Offset = "0xD020C4", VA = "0xD020C4")]
	public EnterRoom_Manager()
	{
	}
}
[Token(Token = "0x2000157")]
public class LeaderBoard_Manager : MonoBehaviour
{
	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Combo_Val_Txt;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Score_Val_Txt;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image[] Rate_Bg_Img;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] Rate_Typo_Img;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sequence RateSeq;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isGameOver;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image GameOver_Img;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color ImgAlpha;

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xBB8AE0", Offset = "0xBB8AE0", VA = "0xBB8AE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xBB8AE4", Offset = "0xBB8AE4", VA = "0xBB8AE4")]
	public void LeaderBoard_Init()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xBB80B4", Offset = "0xBB80B4", VA = "0xBB80B4")]
	public void Combo_Insert(int combo)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xBB8228", Offset = "0xBB8228", VA = "0xBB8228")]
	public void Score_Insert(int score)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xBB83B0", Offset = "0xBB83B0", VA = "0xBB83B0")]
	public void Rate_Insert(int rate)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xBB87C8", Offset = "0xBB87C8", VA = "0xBB87C8")]
	public void LB_GameOver()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xBB8C6C", Offset = "0xBB8C6C", VA = "0xBB8C6C")]
	public LeaderBoard_Manager()
	{
	}
}
[Token(Token = "0x2000158")]
public class MultiPlay_Finish_Manager : MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScrollRect MP_Finish_ScrollRect;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float MP_Finish_ScrollPos;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MP_Finish_ScrollVal;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MP_Finish_ScrollTime;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xF646E8", Offset = "0xF646E8", VA = "0xF646E8")]
	public void ScrollUp()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xF64834", Offset = "0xF64834", VA = "0xF64834")]
	public void ScrollDown()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xF6497C", Offset = "0xF6497C", VA = "0xF6497C")]
	public MultiPlay_Finish_Manager()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xF64984", Offset = "0xF64984", VA = "0xF64984")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7284", Offset = "0x9A7284")]
	private float <ScrollUp>b__4_0()
	{
		return default(float);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xF649A0", Offset = "0xF649A0", VA = "0xF649A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7294", Offset = "0x9A7294")]
	private void <ScrollUp>b__4_1(float x)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xF649BC", Offset = "0xF649BC", VA = "0xF649BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A72A4", Offset = "0x9A72A4")]
	private float <ScrollDown>b__5_0()
	{
		return default(float);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xF649D8", Offset = "0xF649D8", VA = "0xF649D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A72B4", Offset = "0x9A72B4")]
	private void <ScrollDown>b__5_1(float x)
	{
	}
}
[Token(Token = "0x2000159")]
public class RoomInfo_Manager : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScrollRect RoomInfo_ScrollRect;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float RoomInfo_ScrollPos;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RoomInfo_ScrollVal;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RoomInfo_ScrollTime;

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xC1E530", Offset = "0xC1E530", VA = "0xC1E530")]
	public void ScrollUp()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xC1E67C", Offset = "0xC1E67C", VA = "0xC1E67C")]
	public void ScrollDown()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xC1E7C4", Offset = "0xC1E7C4", VA = "0xC1E7C4")]
	public RoomInfo_Manager()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xC1E7CC", Offset = "0xC1E7CC", VA = "0xC1E7CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A72C4", Offset = "0x9A72C4")]
	private float <ScrollUp>b__4_0()
	{
		return default(float);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xC1E7E8", Offset = "0xC1E7E8", VA = "0xC1E7E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A72D4", Offset = "0x9A72D4")]
	private void <ScrollUp>b__4_1(float x)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xC1E804", Offset = "0xC1E804", VA = "0xC1E804")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A72E4", Offset = "0x9A72E4")]
	private float <ScrollDown>b__5_0()
	{
		return default(float);
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xC1E820", Offset = "0xC1E820", VA = "0xC1E820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A72F4", Offset = "0x9A72F4")]
	private void <ScrollDown>b__5_1(float x)
	{
	}
}
[Token(Token = "0x200015A")]
public class Scale_Tween : MonoBehaviour
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ease scale_ease;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scale_x;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scale_y;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scale_speed;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xB5E2F0", Offset = "0xB5E2F0", VA = "0xB5E2F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xB5E3E0", Offset = "0xB5E3E0", VA = "0xB5E3E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xB5E400", Offset = "0xB5E400", VA = "0xB5E400")]
	public Scale_Tween()
	{
	}
}
[Token(Token = "0x200015B")]
public class SelecMode_Tween : MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SM_Logo_Img;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform SM_Box;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sequence SelectModeSeq;

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xB5FBB4", Offset = "0xB5FBB4", VA = "0xB5FBB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xB5FBD8", Offset = "0xB5FBD8", VA = "0xB5FBD8")]
	public void SelectMode_Init()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xB5FCC8", Offset = "0xB5FCC8", VA = "0xB5FCC8")]
	public void SelectMode_Tween_Play()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xB5FE74", Offset = "0xB5FE74", VA = "0xB5FE74")]
	public SelecMode_Tween()
	{
	}
}
[Token(Token = "0x200015C")]
public enum eBEAT_TYPE
{
	[Token(Token = "0x40007C2")]
	left,
	[Token(Token = "0x40007C3")]
	right,
	[Token(Token = "0x40007C4")]
	up,
	[Token(Token = "0x40007C5")]
	down,
	[Token(Token = "0x40007C6")]
	hit,
	[Token(Token = "0x40007C7")]
	noHit,
	[Token(Token = "0x40007C8")]
	up_left,
	[Token(Token = "0x40007C9")]
	down_left,
	[Token(Token = "0x40007CA")]
	down_right,
	[Token(Token = "0x40007CB")]
	up_right
}
[Token(Token = "0x200015D")]
public enum eBEAT_COLOR
{
	[Token(Token = "0x40007CD")]
	magenta,
	[Token(Token = "0x40007CE")]
	blue
}
[Token(Token = "0x200015E")]
public enum eBEAT_LEVEL
{
	[Token(Token = "0x40007D0")]
	EASY,
	[Token(Token = "0x40007D1")]
	NORMAL,
	[Token(Token = "0x40007D2")]
	HARD
}
[Token(Token = "0x200015F")]
public enum eBEAT_MODE
{
	[Token(Token = "0x40007D4")]
	OneHand,
	[Token(Token = "0x40007D5")]
	TwoHands
}
[Token(Token = "0x2000160")]
public enum eBEAT_VERSE
{
	[Token(Token = "0x40007D7")]
	FirstVerse,
	[Token(Token = "0x40007D8")]
	WholeSong
}
[Token(Token = "0x2000161")]
public enum eBEAT_LANGUAGE
{
	[Token(Token = "0x40007DA")]
	korean,
	[Token(Token = "0x40007DB")]
	english,
	[Token(Token = "0x40007DC")]
	chinese,
	[Token(Token = "0x40007DD")]
	japanese
}
[Serializable]
[Token(Token = "0x2000162")]
public sealed class BeatData
{
	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float beatTime;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int line;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eBEAT_TYPE beatType;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eBEAT_COLOR beatColor;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xD21088", Offset = "0xD21088", VA = "0xD21088")]
	public BeatData(float _beatIdx, int _line, eBEAT_TYPE _beatType, eBEAT_COLOR _beatColor)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xD210D8", Offset = "0xD210D8", VA = "0xD210D8")]
	public Quaternion GetRot()
	{
		return default(Quaternion);
	}
}
[Serializable]
[Token(Token = "0x2000163")]
public sealed class BeatRecord
{
	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int groupIndex;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public eBEAT_LEVEL level;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int subLevel;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string icon;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string engName;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string korName;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string chiName;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string japName;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string engSingerName;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string korSingerName;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string chiSingerName;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string japSingerName;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string songKind;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string levelAuthor;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float bpm;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float beat;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string path;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float startTime;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<string> localize;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float previewStartTime;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float previewDuration;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public eBEAT_MODE mode;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public eBEAT_VERSE verse;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public eBEAT_LANGUAGE languageMode;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<BeatData> beatList;

	[Token(Token = "0x1700007F")]
	public float getSecBeatCount
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0xD25A58", Offset = "0xD25A58", VA = "0xD25A58")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000080")]
	public float getBeatSec
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0xD20F98", Offset = "0xD20F98", VA = "0xD20F98")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xD25A78", Offset = "0xD25A78", VA = "0xD25A78")]
	public string GetLevelString()
	{
		return null;
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xD25B88", Offset = "0xD25B88", VA = "0xD25B88")]
	public string GetModeString()
	{
		return null;
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xD25BE8", Offset = "0xD25BE8", VA = "0xD25BE8")]
	public BeatRecord()
	{
	}
}
[Token(Token = "0x2000164")]
public sealed class BeatGroup
{
	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999750", Offset = "0x999750")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eBEAT_LEVEL _level;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public eBEAT_MODE _mode;

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xD2152C", Offset = "0xD2152C", VA = "0xD2152C")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xD21700", Offset = "0xD21700", VA = "0xD21700")]
		internal bool <GetLevelRecord>b__0(BeatRecord _record)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999760", Offset = "0x999760")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eBEAT_LEVEL _level;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public eBEAT_MODE _mode;

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xD21600", Offset = "0xD21600", VA = "0xD21600")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xD21740", Offset = "0xD21740", VA = "0xD21740")]
		internal bool <GetSublevelRecord>b__0(BeatRecord _record)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999770", Offset = "0x999770")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eBEAT_MODE _mode;

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xD216D0", Offset = "0xD216D0", VA = "0xD216D0")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xD216D8", Offset = "0xD216D8", VA = "0xD216D8")]
		internal bool <GetModeRecord>b__0(BeatRecord _record)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int group;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BeatRecord> beatList;

	[Token(Token = "0x17000081")]
	public string icon
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0xD21334", Offset = "0xD21334", VA = "0xD21334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000082")]
	public string title
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0xD213B0", Offset = "0xD213B0", VA = "0xD213B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xD212A4", Offset = "0xD212A4", VA = "0xD212A4")]
	public BeatGroup(int _group)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xD213F8", Offset = "0xD213F8", VA = "0xD213F8")]
	public BeatRecord GetFirstRecord()
	{
		return null;
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xD21460", Offset = "0xD21460", VA = "0xD21460")]
	public BeatRecord GetLevelRecord(eBEAT_LEVEL _level, eBEAT_MODE _mode)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xD21534", Offset = "0xD21534", VA = "0xD21534")]
	public BeatRecord GetSublevelRecord(eBEAT_LEVEL _level, eBEAT_MODE _mode)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xD21608", Offset = "0xD21608", VA = "0xD21608")]
	public BeatRecord GetModeRecord(eBEAT_MODE _mode)
	{
		return null;
	}
}
[Token(Token = "0x2000165")]
public sealed class BeatTable
{
	[Token(Token = "0x2000497")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999780", Offset = "0x999780")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _group;

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xD263B0", Offset = "0xD263B0", VA = "0xD263B0")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xD26534", Offset = "0xD26534", VA = "0xD26534")]
		internal bool <GetGroup>b__0(BeatGroup _find)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<BeatRecord> m_recordList;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<BeatGroup> m_groupRecordList;

	[Token(Token = "0x17000083")]
	public List<BeatRecord> getRecordList
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0xD25DA8", Offset = "0xD25DA8", VA = "0xD25DA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000084")]
	public List<BeatGroup> getGroupRecordList
	{
		[Token(Token = "0x6000812")]
		[Address(RVA = "0xD25DB0", Offset = "0xD25DB0", VA = "0xD25DB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xD25DB8", Offset = "0xD25DB8", VA = "0xD25DB8")]
	public string GetLanguageString()
	{
		return null;
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xD25E54", Offset = "0xD25E54", VA = "0xD25E54")]
	public BeatTable()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xD25F04", Offset = "0xD25F04", VA = "0xD25F04")]
	public BeatTable(string _filename)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xD260C8", Offset = "0xD260C8", VA = "0xD260C8")]
	public void ReadTable(string _filename)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xD262E8", Offset = "0xD262E8", VA = "0xD262E8")]
	public BeatGroup GetGroup(int _group)
	{
		return null;
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xD263B8", Offset = "0xD263B8", VA = "0xD263B8")]
	public void WriteTable(string _filename)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xD2643C", Offset = "0xD2643C", VA = "0xD2643C")]
	public void AddRecord(BeatRecord _record)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xD264B8", Offset = "0xD264B8", VA = "0xD264B8")]
	public void Remove(BeatRecord _record)
	{
	}
}
[Token(Token = "0x2000166")]
public static class JsonHelper
{
	[Serializable]
	[Token(Token = "0x2000498")]
	private class Wrapper<T>
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> items;

		[Token(Token = "0x6001CDD")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x600081B")]
	public static List<T> FromJson<T>(string json)
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	public static string ToJson<T>(List<T> array)
	{
		return null;
	}

	[Token(Token = "0x600081D")]
	public static string ToJson<T>(List<T> array, bool prettyPrint)
	{
		return null;
	}
}
[Token(Token = "0x2000167")]
public class TableMgr : XcSingleton<TableMgr>
{
	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isLoad;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BeatTable beatTable;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xECD138", Offset = "0xECD138", VA = "0xECD138")]
	public void CheckLoad()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xECD148", Offset = "0xECD148", VA = "0xECD148")]
	public void Load()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xECD1E8", Offset = "0xECD1E8", VA = "0xECD1E8")]
	public void Save()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xECD244", Offset = "0xECD244", VA = "0xECD244")]
	public TableMgr()
	{
	}
}
[Token(Token = "0x2000168")]
public class DiffcultyButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color m_overColor;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_normalColor;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] easyOnOffSprArr;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] normalOnOffSprArr;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite[] hardOnOffSprArr;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image easyonOffImg;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image normalonOffImg;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image hardonOffImg;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text[] titleTxt;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public eBEAT_LEVEL beatLevel;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button diffBtn;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BeatRecord beatRecord;

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xCFC9A8", Offset = "0xCFC9A8", VA = "0xCFC9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xCFCA40", Offset = "0xCFCA40", VA = "0xCFCA40")]
	public void SetBeatRecord(BeatRecord _bratR)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xCFCA48", Offset = "0xCFCA48", VA = "0xCFCA48")]
	private void InitSprite()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xCFCAE8", Offset = "0xCFCAE8", VA = "0xCFCAE8")]
	public void SetDiffBtn(BeatRecord selectBeatRecord)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xCFCD90", Offset = "0xCFCD90", VA = "0xCFCD90")]
	private void onClick_diffBtn()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xCFCFA4", Offset = "0xCFCFA4", VA = "0xCFCFA4")]
	public void SlaveClientBtnEvent()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xCFD07C", Offset = "0xCFD07C", VA = "0xCFD07C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xCFD0E0", Offset = "0xCFD0E0", VA = "0xCFD0E0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xCFD30C", Offset = "0xCFD30C", VA = "0xCFD30C")]
	public DiffcultyButton()
	{
	}
}
[Token(Token = "0x2000169")]
public class ModeChangeButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color m_overColor;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color m_normalColor;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite[] OneHandSprArr;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite[] TwoHandsSprArr;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image OneHandImg;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image TwoHandaImg;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Image[] modeImage;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private eBEAT_MODE beatMode;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Button modeBtn;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99DB7C", Offset = "0x99DB7C")]
	private BeatRecord <beatRecord>k__BackingField;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool checkState;

	[Token(Token = "0x17000085")]
	public BeatRecord beatRecord
	{
		[Token(Token = "0x600082B")]
		[Address(RVA = "0xF60B10", Offset = "0xF60B10", VA = "0xF60B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7304", Offset = "0x9A7304")]
		get
		{
			return null;
		}
		[Token(Token = "0x600082C")]
		[Address(RVA = "0xF60B18", Offset = "0xF60B18", VA = "0xF60B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7314", Offset = "0x9A7314")]
		set
		{
		}
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xF60B20", Offset = "0xF60B20", VA = "0xF60B20")]
	private void Start()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xF60BE0", Offset = "0xF60BE0", VA = "0xF60BE0")]
	public void SetBeatRecord(BeatRecord _bratR)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xF60BE8", Offset = "0xF60BE8", VA = "0xF60BE8")]
	private void InitSprite()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xF60C64", Offset = "0xF60C64", VA = "0xF60C64")]
	public void SetModeChangeBtn(BeatRecord selectBeatRecord)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xF60D60", Offset = "0xF60D60", VA = "0xF60D60")]
	private void onClick_modeChangeBtn()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xF60F74", Offset = "0xF60F74", VA = "0xF60F74")]
	public void SlaveClientModeBtnEvnet()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xF6104C", Offset = "0xF6104C", VA = "0xF6104C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xF610DC", Offset = "0xF610DC", VA = "0xF610DC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xF61168", Offset = "0xF61168", VA = "0xF61168")]
	public ModeChangeButton()
	{
	}
}
[Token(Token = "0x200016A")]
public class OptionSelect : MonoBehaviour
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button weaponChangeBtn;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button InvincibilityBtn;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC4DAD0", Offset = "0xC4DAD0", VA = "0xC4DAD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC4DBAC", Offset = "0xC4DBAC", VA = "0xC4DBAC")]
	private void OnClick_weaponChange()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC4DBB0", Offset = "0xC4DBB0", VA = "0xC4DBB0")]
	private void OnClick_invincibility()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC4DBB4", Offset = "0xC4DBB4", VA = "0xC4DBB4")]
	public OptionSelect()
	{
	}
}
[Token(Token = "0x200016B")]
public class UIMusicSlot : MonoBehaviour
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image icon;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BeatGroup beatGroup;

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xE0A858", Offset = "0xE0A858", VA = "0xE0A858")]
	public void Open(BeatGroup _beatGroup)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xE0A924", Offset = "0xE0A924", VA = "0xE0A924")]
	public void Close()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xE0A9C4", Offset = "0xE0A9C4", VA = "0xE0A9C4")]
	public UIMusicSlot()
	{
	}
}
[Token(Token = "0x200016C")]
public class UINoteSpeedInfo : UIBase
{
	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button btnRight;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button btnLeft;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text textSpeed;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xE0A9CC", Offset = "0xE0A9CC", VA = "0xE0A9CC")]
	private void OnClick_right()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xE0AB3C", Offset = "0xE0AB3C", VA = "0xE0AB3C")]
	private void OnClick_left()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xE0ABEC", Offset = "0xE0ABEC", VA = "0xE0ABEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xE0ACC8", Offset = "0xE0ACC8", VA = "0xE0ACC8", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xE0AA7C", Offset = "0xE0AA7C", VA = "0xE0AA7C")]
	public void ResetData()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xE0ACF0", Offset = "0xE0ACF0", VA = "0xE0ACF0")]
	public UINoteSpeedInfo()
	{
	}
}
[Token(Token = "0x200016D")]
public class UIScoreInfo : MonoBehaviour
{
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textNumber;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textStartTime;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textScore;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text textCombo;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string rank;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image rankSpr;

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xE0D7B8", Offset = "0xE0D7B8", VA = "0xE0D7B8")]
	public void SetDefault()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xE0D914", Offset = "0xE0D914", VA = "0xE0D914")]
	public void Open(Score _score)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xE0DBDC", Offset = "0xE0DBDC", VA = "0xE0DBDC")]
	public UIScoreInfo()
	{
	}
}
[Token(Token = "0x200016E")]
public class UISelectMusic : UIBase
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99DBAC", Offset = "0x99DBAC")]
	[SerializeField]
	private Text song_timeTxt;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text song_bpmTxt;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text song_notesTxt;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text stats_highScoreTxt;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text stats_maxComboTxt;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text stats_maxRankTxt;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99DC48", Offset = "0x99DC48")]
	[SerializeField]
	private Button startBtn;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button leftBtn;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Button rightBtn;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ModeChangeButton[] modeChangeBtnGroup;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private DiffcultyButton[] levelBtnGroup;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99DCD4", Offset = "0x99DCD4")]
	[SerializeField]
	private Image song_MainImg;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Image[] leftArrowImg;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Image[] rightArrowImg;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Image[] unModeGrayImage;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Image[] unLevelGrayImage;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Image[] dotImg;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Sprite[] dotSprite;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99DD80", Offset = "0x99DD80")]
	[SerializeField]
	private UIScoreInfo lastScore;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private int musicIdx;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private int musicPageCnt;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private int musicSlotCount;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private int dotCnt;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private bool isMaxLeft;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[SerializeField]
	private bool isMaxRight;

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xE0E134", Offset = "0xE0E134", VA = "0xE0E134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xE0E254", Offset = "0xE0E254", VA = "0xE0E254")]
	private new void Open()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xE0E2D4", Offset = "0xE0E2D4", VA = "0xE0E2D4")]
	private void InitGrayModeImg()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xE0E358", Offset = "0xE0E358", VA = "0xE0E358")]
	private void InitGrayLevelImg()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xE0E3DC", Offset = "0xE0E3DC", VA = "0xE0E3DC")]
	private void OnGrayModeImg(int _val)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xE0E448", Offset = "0xE0E448", VA = "0xE0E448")]
	private void OnGrayLevelImg(int _vale)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xE0E4C4", Offset = "0xE0E4C4", VA = "0xE0E4C4")]
	private void InitDotArr()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xE0E600", Offset = "0xE0E600", VA = "0xE0E600")]
	public void SetMusicSlot()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xE0E68C", Offset = "0xE0E68C", VA = "0xE0E68C")]
	private void SetMusicInfo(BeatRecord _record)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xE0E7DC", Offset = "0xE0E7DC", VA = "0xE0E7DC")]
	public void SetMusicState()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xE0EA74", Offset = "0xE0EA74", VA = "0xE0EA74")]
	private void OnClick_Start()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xE0EB30", Offset = "0xE0EB30", VA = "0xE0EB30")]
	private void OnClick_LeftMusicList()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xE0EDB0", Offset = "0xE0EDB0", VA = "0xE0EDB0")]
	private void OnClick_RightMusicList()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xE0EF34", Offset = "0xE0EF34", VA = "0xE0EF34")]
	private void SetRankInfo()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xE0EC40", Offset = "0xE0EC40", VA = "0xE0EC40")]
	public void SetButtonImage()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xE0EF38", Offset = "0xE0EF38", VA = "0xE0EF38")]
	public void SelectMusic(BeatGroup sBG, int idx)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xE0EFB8", Offset = "0xE0EFB8", VA = "0xE0EFB8")]
	private void SetModeChangeyBtn(BeatGroup _bg, BeatRecord br)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xE0F174", Offset = "0xE0F174", VA = "0xE0F174")]
	private void SetDifficultyBtn(BeatGroup _bg, BeatRecord br)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xE0F340", Offset = "0xE0F340", VA = "0xE0F340")]
	public void SelectMode(BeatRecord selectBR)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xE0F46C", Offset = "0xE0F46C", VA = "0xE0F46C")]
	public void SelectDiff(BeatRecord selectBR)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xE0F598", Offset = "0xE0F598", VA = "0xE0F598")]
	public UISelectMusic()
	{
	}
}
[Token(Token = "0x200016F")]
public class UIToggle : UIBase
{
	[Token(Token = "0x2000499")]
	public delegate void OnEvent(UIToggle _toggle);

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button btnClick;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dis;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Select;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isOn;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isDisable;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BeatRecord beatRecord;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OnEvent m_event;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xE12864", Offset = "0xE12864", VA = "0xE12864")]
	public void Open(BeatRecord _record, OnEvent _event)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xE1297C", Offset = "0xE1297C", VA = "0xE1297C")]
	private void OnClick_Change()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xE12990", Offset = "0xE12990", VA = "0xE12990")]
	public void SetOn(bool _isOn)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xE12D9C", Offset = "0xE12D9C", VA = "0xE12D9C")]
	public void SetOff()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xE12920", Offset = "0xE12920", VA = "0xE12920")]
	public void SetDisable(bool _is)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xE12DC4", Offset = "0xE12DC4", VA = "0xE12DC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xE12E5C", Offset = "0xE12E5C", VA = "0xE12E5C")]
	public UIToggle()
	{
	}
}
[Token(Token = "0x2000170")]
public class UIWeaponChange : UIBase
{
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button btnChange;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] weaponList;

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xE138DC", Offset = "0xE138DC", VA = "0xE138DC")]
	private void OnClick_Change()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xE13AC0", Offset = "0xE13AC0", VA = "0xE13AC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xE13B58", Offset = "0xE13B58", VA = "0xE13B58", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xE13A38", Offset = "0xE13A38", VA = "0xE13A38")]
	private void SetIndex(int _index)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xE13BE4", Offset = "0xE13BE4", VA = "0xE13BE4")]
	public UIWeaponChange()
	{
	}
}
[Token(Token = "0x2000171")]
public class VerseChangeBtn : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button VerseBtn;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] VerseOnOffSprArr;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text VerseText;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string onlyFirstVerse;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string wholeSong;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ExitGames.Client.Photon.Hashtable _roomHash;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image VerseImg;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private eBEAT_VERSE _verse;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BeatRecord _record;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xB8D64C", Offset = "0xB8D64C", VA = "0xB8D64C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xB8D868", Offset = "0xB8D868", VA = "0xB8D868", Slot = "27")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xB8D8D0", Offset = "0xB8D8D0", VA = "0xB8D8D0", Slot = "28")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xB8D6EC", Offset = "0xB8D6EC", VA = "0xB8D6EC")]
	public void SetVerse()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xB8D938", Offset = "0xB8D938", VA = "0xB8D938")]
	private void VerseBtnClick()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xB8DBB4", Offset = "0xB8DBB4", VA = "0xB8DBB4")]
	public void SetProc()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xB8DC74", Offset = "0xB8DC74", VA = "0xB8DC74", Slot = "45")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xB8DE00", Offset = "0xB8DE00", VA = "0xB8DE00")]
	public VerseChangeBtn()
	{
	}
}
[Token(Token = "0x2000172")]
public class ButtonCD : MonoBehaviour
{
	[Token(Token = "0x200049A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999790", Offset = "0x999790")]
	private sealed class <IESetButtonEnable>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonCD <>4__this;

		[Token(Token = "0x17000360")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xD28118", Offset = "0xD28118", VA = "0xD28118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xD28184", Offset = "0xD28184", VA = "0xD28184", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xD28010", Offset = "0xD28010", VA = "0xD28010")]
		[DebuggerHidden]
		public <IESetButtonEnable>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xD28050", Offset = "0xD28050", VA = "0xD28050", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xD28054", Offset = "0xD28054", VA = "0xD28054", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xD28120", Offset = "0xD28120", VA = "0xD28120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float CD;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mClickTime;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isChangeColor;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button mButton;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xD27CC4", Offset = "0xD27CC4", VA = "0xD27CC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xD27D84", Offset = "0xD27D84", VA = "0xD27D84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xD27F24", Offset = "0xD27F24", VA = "0xD27F24")]
	public void OnPointerClick()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xD27F90", Offset = "0xD27F90", VA = "0xD27F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7324", Offset = "0x9A7324")]
	private IEnumerator IESetButtonEnable()
	{
		return null;
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xD27D8C", Offset = "0xD27D8C", VA = "0xD27D8C")]
	private void SetButtonEnable(bool enable)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xD2803C", Offset = "0xD2803C", VA = "0xD2803C")]
	public ButtonCD()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x997CB0", Offset = "0x997CB0")]
public class GradientEx : BaseMeshEffect
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool horizontal;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color colorFrom;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color colorTo;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve curve;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xD6CFC4", Offset = "0xD6CFC4", VA = "0xD6CFC4", Slot = "20")]
	public override void ModifyMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xD6D264", Offset = "0xD6D264", VA = "0xD6D264")]
	public GradientEx()
	{
	}
}
[Token(Token = "0x2000174")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997CE8", Offset = "0x997CE8")]
public class ImageAnimation : MonoBehaviour
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_frameGap;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_autoNativeSize;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] m_sprites;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99DE6C", Offset = "0x99DE6C")]
	private Image <image>k__BackingField;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_curFrame;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_spriteCount;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_lastTime;

	[Token(Token = "0x17000086")]
	public Image image
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0xBAF6A4", Offset = "0xBAF6A4", VA = "0xBAF6A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7388", Offset = "0x9A7388")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xBAF6AC", Offset = "0xBAF6AC", VA = "0xBAF6AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7398", Offset = "0x9A7398")]
		private set
		{
		}
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xBAF6B4", Offset = "0xBAF6B4", VA = "0xBAF6B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xBAF858", Offset = "0xBAF858", VA = "0xBAF858")]
	private void Update()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xBAF77C", Offset = "0xBAF77C", VA = "0xBAF77C")]
	private void CheckSpriteCount(Sprite[] sprites)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xBAF92C", Offset = "0xBAF92C", VA = "0xBAF92C")]
	public void SetSprites(Sprite[] sprites, float frameGap = 0.25f, bool nativeSize = false)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xBAFB18", Offset = "0xBAFB18", VA = "0xBAFB18")]
	public static ImageAnimation Begin(Image image, Sprite[] sprites, float frameGap = 0.25f, bool nativeSize = false)
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xBAFC10", Offset = "0xBAFC10", VA = "0xBAFC10")]
	public ImageAnimation()
	{
	}
}
[Token(Token = "0x2000175")]
public class Joystick : MonoBehaviour
{
	[Token(Token = "0x600087F")]
	[Address(RVA = "0xBAFCA4", Offset = "0xBAFCA4", VA = "0xBAFCA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xBAFCA8", Offset = "0xBAFCA8", VA = "0xBAFCA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xBAFCAC", Offset = "0xBAFCAC", VA = "0xBAFCAC")]
	public Joystick()
	{
	}
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997D4C", Offset = "0x997D4C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x997D4C", Offset = "0x997D4C")]
public class PressGapEvent : MonoBehaviour
{
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityAction pressAction;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityAction releaseAction;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool available;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gap;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool startDelay;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_lastTime;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_pressed;

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xC1C014", Offset = "0xC1C014", VA = "0xC1C014")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xC1C1BC", Offset = "0xC1C1BC", VA = "0xC1C1BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xC1C1C4", Offset = "0xC1C1C4", VA = "0xC1C1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xC1C230", Offset = "0xC1C230", VA = "0xC1C230")]
	private void OnPress(BaseEventData data)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xC1C274", Offset = "0xC1C274", VA = "0xC1C274")]
	private void OnRelease(BaseEventData data)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xC1C2A0", Offset = "0xC1C2A0", VA = "0xC1C2A0")]
	public PressGapEvent()
	{
	}
}
[Token(Token = "0x2000177")]
public class SpinWithMouse : MonoBehaviour, IDragHandler, IEventSystemHandler
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xB66D04", Offset = "0xB66D04", VA = "0xB66D04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xB66DB0", Offset = "0xB66DB0", VA = "0xB66DB0", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xB66F00", Offset = "0xB66F00", VA = "0xB66F00")]
	public SpinWithMouse()
	{
	}
}
[Token(Token = "0x2000178")]
public class UIActiveObjects : MonoBehaviour
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> active;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> deactive;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button mButton;

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xEE1EB8", Offset = "0xEE1EB8", VA = "0xEE1EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xEE1FF4", Offset = "0xEE1FF4", VA = "0xEE1FF4")]
	public void OnClick()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xEE1FFC", Offset = "0xEE1FFC", VA = "0xEE1FFC")]
	public void OnClick(bool state)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xEE20EC", Offset = "0xEE20EC", VA = "0xEE20EC")]
	private void Set(GameObject go, bool state)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xEE2194", Offset = "0xEE2194", VA = "0xEE2194")]
	public UIActiveObjects()
	{
	}
}
[Token(Token = "0x2000179")]
public class UIEventTrigger : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerClickHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IDropHandler
{
	[Token(Token = "0x200049B")]
	public delegate void VoidDelegate(GameObject go);

	[Token(Token = "0x200049C")]
	public delegate void EventDataDelegate(PointerEventData eventData);

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventDataDelegate onDown;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EventDataDelegate onUp;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EventDataDelegate onClick;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventDataDelegate onBeginDrag;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EventDataDelegate onDrag;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EventDataDelegate onEndDrag;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EventDataDelegate onDrop;

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xEE2AD4", Offset = "0xEE2AD4", VA = "0xEE2AD4")]
	public static UIEventTrigger Get(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xEE2B90", Offset = "0xEE2B90", VA = "0xEE2B90", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xEE2BA4", Offset = "0xEE2BA4", VA = "0xEE2BA4", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xEE2BB8", Offset = "0xEE2BB8", VA = "0xEE2BB8", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xEE2BCC", Offset = "0xEE2BCC", VA = "0xEE2BCC", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xEE2BE0", Offset = "0xEE2BE0", VA = "0xEE2BE0", Slot = "8")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xEE2BF4", Offset = "0xEE2BF4", VA = "0xEE2BF4", Slot = "9")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xEE2C08", Offset = "0xEE2C08", VA = "0xEE2C08", Slot = "10")]
	public void OnDrop(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xEE2C1C", Offset = "0xEE2C1C", VA = "0xEE2C1C")]
	public UIEventTrigger()
	{
	}
}
[Token(Token = "0x200017A")]
public class UILoop : MonoBehaviour
{
	[Token(Token = "0x200049D")]
	public delegate void UILoopCallBack(int index, GameObject go);

	[Token(Token = "0x200049E")]
	private enum Direction
	{
		[Token(Token = "0x4001DCE")]
		Horizontal,
		[Token(Token = "0x4001DCF")]
		Vertical
	}

	[Serializable]
	[Token(Token = "0x200049F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9997A0", Offset = "0x9997A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RectTransform> <>9__34_0;

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xE0A06C", Offset = "0xE0A06C", VA = "0xE0A06C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xE0A074", Offset = "0xE0A074", VA = "0xE0A074")]
		internal int <Start>b__34_0(RectTransform rect1, RectTransform rect2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected RectTransform m_Cell;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Vector2 m_CellGap;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Vector2 m_Page;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Direction direction;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99DEBC", Offset = "0x99DEBC")]
	private int m_BufferNo;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int m_ItemsCount;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<RectTransform> m_InstantiateItems;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_PrevPos;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_CurrentIndex;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UILoopCallBack onUpdate;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UILoopCallBack onCreate;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UILoopCallBack onRemove;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 m_InstantiateSize;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ScrollRect m_ScrollRect;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RectTransform m_Rect;

	[Token(Token = "0x17000087")]
	private Vector2 CellRect
	{
		[Token(Token = "0x6000899")]
		[Address(RVA = "0xE082D8", Offset = "0xE082D8", VA = "0xE082D8")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000088")]
	protected float CellScale
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0xE083E8", Offset = "0xE083E8", VA = "0xE083E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000089")]
	private float DirectionPos
	{
		[Token(Token = "0x600089B")]
		[Address(RVA = "0xE08410", Offset = "0xE08410", VA = "0xE08410")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008A")]
	private Vector2 InstantiateSize
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0xE0844C", Offset = "0xE0844C", VA = "0xE0844C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700008B")]
	private int PageCount
	{
		[Token(Token = "0x600089D")]
		[Address(RVA = "0xE0853C", Offset = "0xE0853C", VA = "0xE0853C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008C")]
	private int PageScale
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0xE08550", Offset = "0xE08550", VA = "0xE08550")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008D")]
	private int InstantiateCount
	{
		[Token(Token = "0x600089F")]
		[Address(RVA = "0xE08570", Offset = "0xE08570", VA = "0xE08570")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008E")]
	protected float scale
	{
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xE085B0", Offset = "0xE085B0", VA = "0xE085B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008F")]
	protected float MaxPrevPos
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xE097C4", Offset = "0xE097C4", VA = "0xE097C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xE085C8", Offset = "0xE085C8", VA = "0xE085C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xE086E8", Offset = "0xE086E8", VA = "0xE086E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xE08E94", Offset = "0xE08E94", VA = "0xE08E94")]
	private void ShowItem(int index)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xE08F88", Offset = "0xE08F88", VA = "0xE08F88")]
	private void HideItem(int index)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xE08C98", Offset = "0xE08C98", VA = "0xE08C98")]
	private void HideAllItem()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xE089D4", Offset = "0xE089D4", VA = "0xE089D4")]
	private void CreateItem(int index)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xE09278", Offset = "0xE09278", VA = "0xE09278")]
	protected void RemoveItem(int index)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xE0939C", Offset = "0xE0939C", VA = "0xE0939C")]
	protected void ClearAll()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xE09744", Offset = "0xE09744", VA = "0xE09744")]
	protected void Reset()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xE08D1C", Offset = "0xE08D1C", VA = "0xE08D1C")]
	private Vector2 GetRectByNum(int num)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xE08E18", Offset = "0xE08E18", VA = "0xE08E18")]
	private void SetBound(Vector2 bound)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE09834", Offset = "0xE09834", VA = "0xE09834")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE08F28", Offset = "0xE08F28", VA = "0xE08F28")]
	protected void MoveItemToIndex(int index, RectTransform item)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE09BF0", Offset = "0xE09BF0", VA = "0xE09BF0")]
	private Vector2 getPosByIndex(int index)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xE09D20", Offset = "0xE09D20", VA = "0xE09D20")]
	private void UpdateItem(int index, GameObject item)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xE09DA0", Offset = "0xE09DA0", VA = "0xE09DA0")]
	protected int GetFirstItemCell()
	{
		return default(int);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xE09E18", Offset = "0xE09E18", VA = "0xE09E18")]
	public int GetCellIndexByItemIndex(int index)
	{
		return default(int);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xE09ED4", Offset = "0xE09ED4", VA = "0xE09ED4")]
	public int GetRealCellIndexByCurCellIndex(int curCell)
	{
		return default(int);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xE09F5C", Offset = "0xE09F5C", VA = "0xE09F5C")]
	public UILoop()
	{
	}
}
[Token(Token = "0x200017B")]
public class UIScrollRect : ScrollRect
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Action<PointerEventData> onBeginDrag;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Action<PointerEventData> onDrag;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Action<PointerEventData> onEndDrag;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xE0DC3C", Offset = "0xE0DC3C", VA = "0xE0DC3C", Slot = "44")]
	public override void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xE0DCC0", Offset = "0xE0DCC0", VA = "0xE0DCC0", Slot = "46")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xE0DD44", Offset = "0xE0DD44", VA = "0xE0DD44", Slot = "45")]
	public override void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xE0DDC8", Offset = "0xE0DDC8", VA = "0xE0DDC8")]
	public UIScrollRect()
	{
	}
}
[Token(Token = "0x200017C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997DD4", Offset = "0x997DD4")]
public class UIToggleColor : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Graphic target;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color activeColor;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color deactiveColor;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Toggle toggle;

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xE12EA8", Offset = "0xE12EA8", VA = "0xE12EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xE13008", Offset = "0xE13008", VA = "0xE13008")]
	public void OnToggle(bool state)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xE130F0", Offset = "0xE130F0", VA = "0xE130F0")]
	public UIToggleColor()
	{
	}
}
[Token(Token = "0x200017D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997E38", Offset = "0x997E38")]
public class UIToggleObjects : MonoBehaviour
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> active;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> deactive;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle toggle;

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xE130F8", Offset = "0xE130F8", VA = "0xE130F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xE13348", Offset = "0xE13348", VA = "0xE13348")]
	public void DoToggle()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xE13258", Offset = "0xE13258", VA = "0xE13258")]
	public void DoToggle(bool state)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xE13368", Offset = "0xE13368", VA = "0xE13368")]
	private void Set(GameObject go, bool state)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xE13410", Offset = "0xE13410", VA = "0xE13410")]
	public UIToggleObjects()
	{
	}
}
[Token(Token = "0x200017E")]
public class UIAlphaTween : UITween
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TweenAlpha tw;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float type_1;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float type_2;

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xEE223C", Offset = "0xEE223C", VA = "0xEE223C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xEE2388", Offset = "0xEE2388", VA = "0xEE2388", Slot = "4")]
	public override void PlayT1(bool _isDisable = false, [Optional] UnityAction _event)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xEE2424", Offset = "0xEE2424", VA = "0xEE2424", Slot = "5")]
	public override void PlayT2(bool _isDisable = false, [Optional] UnityAction _event)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xEE24C0", Offset = "0xEE24C0", VA = "0xEE24C0")]
	public UIAlphaTween()
	{
	}
}
[Token(Token = "0x200017F")]
public class UIScaleTween : UITween
{
	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TweenScale tw;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 type_1;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 type_2;

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xE0D3A4", Offset = "0xE0D3A4", VA = "0xE0D3A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xE0D4F0", Offset = "0xE0D4F0", VA = "0xE0D4F0", Slot = "4")]
	public override void PlayT1(bool _isDisable = false, [Optional] UnityAction _event)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xE0D5F4", Offset = "0xE0D5F4", VA = "0xE0D5F4", Slot = "5")]
	public override void PlayT2(bool _isDisable = false, [Optional] UnityAction _event)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xE0D6F8", Offset = "0xE0D6F8", VA = "0xE0D6F8")]
	public UIScaleTween()
	{
	}
}
[Token(Token = "0x2000180")]
public class UITween : MonoBehaviour
{
	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_isFinishedDisable;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityAction m_finishedEvent;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float type_1_delay;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float type_2_delay;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float type_1_duration;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float type_2_duration;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EaseType type_1_method;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public EaseType type_2_method;

	[Token(Token = "0x17000090")]
	public bool isOpen
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xE13514", Offset = "0xE13514", VA = "0xE13514")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xE134B8", Offset = "0xE134B8", VA = "0xE134B8")]
	protected void OnFinishedEvent()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xE0D598", Offset = "0xE0D598", VA = "0xE0D598", Slot = "4")]
	public virtual void PlayT1(bool _isDisable = false, [Optional] UnityAction _event)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xE0D69C", Offset = "0xE0D69C", VA = "0xE0D69C", Slot = "5")]
	public virtual void PlayT2(bool _isDisable = false, [Optional] UnityAction _event)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xE0D798", Offset = "0xE0D798", VA = "0xE0D798")]
	public UITween()
	{
	}
}
[Token(Token = "0x2000181")]
public class UIBase : MonoBehaviour
{
	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UIBase> m_updateList;

	[Token(Token = "0x17000091")]
	public bool isOpen
	{
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xEE2644", Offset = "0xEE2644", VA = "0xEE2644")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xEE24C8", Offset = "0xEE24C8", VA = "0xEE24C8", Slot = "4")]
	public virtual void Open()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xEE24F0", Offset = "0xEE24F0", VA = "0xEE24F0", Slot = "5")]
	public virtual void Open_Warn(WarnPopup _kind, int _num, int _id)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xEE2518", Offset = "0xEE2518", VA = "0xEE2518", Slot = "6")]
	public virtual void Open_Loading(int _num)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xEE2540", Offset = "0xEE2540", VA = "0xEE2540", Slot = "7")]
	public virtual void Close()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xEE2568", Offset = "0xEE2568", VA = "0xEE2568", Slot = "8")]
	public virtual void UpdateLogic()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xEE2668", Offset = "0xEE2668", VA = "0xEE2668")]
	public UIBase()
	{
	}
}
[Token(Token = "0x2000182")]
public class UILoadingMode : UIBase
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] lite;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] standard;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] challenge;

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xE08164", Offset = "0xE08164", VA = "0xE08164", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xE08248", Offset = "0xE08248", VA = "0xE08248")]
	public void SetModeActive(GameObject[] _list, bool _isActive)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xE082D0", Offset = "0xE082D0", VA = "0xE082D0")]
	public UILoadingMode()
	{
	}
}
[Token(Token = "0x2000183")]
public class UIMgr : MonoSingletonPass<UIMgr>
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIPlay play;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIWarning warning;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UISelectMusicNew selectMusicNew;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIPause pause;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIFinished finished;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UI_MultiModeSelect m_multiModeSelect;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UI_MultiMenu m_multiMenu;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UI_EnterRoom m_enterRoom;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UI_LoadingPopup m_loadingPopup;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UI_WarnPopup m_warnPopup;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UI_SelectMusicProc m_selectMusicProc;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xE0A1B0", Offset = "0xE0A1B0", VA = "0xE0A1B0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xE0A254", Offset = "0xE0A254", VA = "0xE0A254")]
	public UIMgr()
	{
	}
}
[Token(Token = "0x2000184")]
public class UIOption : MonoBehaviour
{
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textX;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textY;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textZ;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button btnClose;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button btnAdd_x;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button btnMin_x;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button btnAdd_y;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button btnMin_y;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button btnAdd_z;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button btnMin_z;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button btnReset;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button btnOK;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 m_position;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float m_moveDis;

	[Token(Token = "0x17000092")]
	public bool isOpen
	{
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xE0AFD0", Offset = "0xE0AFD0", VA = "0xE0AFD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xE0ACF8", Offset = "0xE0ACF8", VA = "0xE0ACF8")]
	private void OnClick_Add_x()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xE0ADB0", Offset = "0xE0ADB0", VA = "0xE0ADB0")]
	private void OnClick_Min_x()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xE0ADC4", Offset = "0xE0ADC4", VA = "0xE0ADC4")]
	private void OnClick_Add_y()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xE0ADD8", Offset = "0xE0ADD8", VA = "0xE0ADD8")]
	private void OnClick_Min_y()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xE0ADEC", Offset = "0xE0ADEC", VA = "0xE0ADEC")]
	private void OnClick_Add_z()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xE0ADFC", Offset = "0xE0ADFC", VA = "0xE0ADFC")]
	private void OnClick_Min_z()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xE0AE0C", Offset = "0xE0AE0C", VA = "0xE0AE0C")]
	private void OnClick_Reset()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xE0AE80", Offset = "0xE0AE80", VA = "0xE0AE80")]
	private void OnClick_Ok()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xE0AEF4", Offset = "0xE0AEF4", VA = "0xE0AEF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xE0AD0C", Offset = "0xE0AD0C", VA = "0xE0AD0C")]
	public void ResetPositionText()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xE0AFF4", Offset = "0xE0AFF4", VA = "0xE0AFF4")]
	public void Open()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xE0AECC", Offset = "0xE0AECC", VA = "0xE0AECC")]
	public void Close()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xE0B054", Offset = "0xE0B054", VA = "0xE0B054")]
	public UIOption()
	{
	}
}
[Token(Token = "0x2000185")]
public class UIPlay : UIBase
{
	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textScore;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textCombo;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject floatingPlace;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int rightMaxCombo;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text centerCombo;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image imgHp;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject readyAnimation;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isAniPlay;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text musicTitle;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text musicLength;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text accuracy;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text rank;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image feverGage;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float tmpFloat;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _rate;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int m_hp;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int m_combo;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_score;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BloomEffect[] lrCameraBloomEffArr;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int maxMin;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int maxSec;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int min;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int sec;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int waitforSec;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int totalBeatCount;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string scoreTxt;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string floatingScore;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string colorName;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform _pos;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xE0C4E8", Offset = "0xE0C4E8", VA = "0xE0C4E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xE0C4EC", Offset = "0xE0C4EC", VA = "0xE0C4EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xE0C590", Offset = "0xE0C590", VA = "0xE0C590")]
	public void SetMusicPlayTime()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xE0C9B8", Offset = "0xE0C9B8", VA = "0xE0C9B8")]
	public void SetCurRankAndAccuracy()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xE0CB54", Offset = "0xE0CB54", VA = "0xE0CB54", Slot = "4")]
	public override void Open()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xE0CD40", Offset = "0xE0CD40", VA = "0xE0CD40")]
	public void SetHp(int _value, int _maxValue)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xE0CEA0", Offset = "0xE0CEA0", VA = "0xE0CEA0")]
	public void SetCombo(int _combo)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xE0D04C", Offset = "0xE0D04C", VA = "0xE0D04C")]
	public void SetScore(int _score)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xE0D10C", Offset = "0xE0D10C", VA = "0xE0D10C")]
	public void SetFloatingScore(int _floatingScore)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xE0D270", Offset = "0xE0D270", VA = "0xE0D270")]
	public void PlayStartAnimation()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xE0D2C8", Offset = "0xE0D2C8", VA = "0xE0D2C8", Slot = "7")]
	public override void Close()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xE0D2D0", Offset = "0xE0D2D0", VA = "0xE0D2D0")]
	public UIPlay()
	{
	}
}
[Token(Token = "0x2000186")]
public class UIResult : UIBase
{
	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xE0D39C", Offset = "0xE0D39C", VA = "0xE0D39C")]
	public UIResult()
	{
	}
}
[Token(Token = "0x2000187")]
public class UISelectMode : UIBase
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button btnLite;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button btnStandard;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button btnChallenge;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text textRemainTime;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xE0DDD0", Offset = "0xE0DDD0", VA = "0xE0DDD0")]
	public void OnClick_Lite()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xE0DE68", Offset = "0xE0DE68", VA = "0xE0DE68")]
	private void OnClick_Standard()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xE0DF04", Offset = "0xE0DF04", VA = "0xE0DF04")]
	private void OnClick_Challenge()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xE0DFA0", Offset = "0xE0DFA0", VA = "0xE0DFA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xE0E12C", Offset = "0xE0E12C", VA = "0xE0E12C")]
	public UISelectMode()
	{
	}
}
[Token(Token = "0x2000188")]
public class UITitle : UIBase
{
	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xE1285C", Offset = "0xE1285C", VA = "0xE1285C")]
	public UITitle()
	{
	}
}
[Token(Token = "0x2000189")]
public class EqualizerController1 : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int CreateStickNum;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject StickObject;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SticksMain;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> Sticks;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ObjectAudioSource;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float RestrictionNumber;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int IndexPush;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float GrowthRate;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float GrowSpeed;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ReductionSpeed;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float MaxSound;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioSource;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string color;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> NewSticks;

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xD02B70", Offset = "0xD02B70", VA = "0xD02B70")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xD02E00", Offset = "0xD02E00", VA = "0xD02E00")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xD033F0", Offset = "0xD033F0", VA = "0xD033F0")]
	public void SetHp(int _value, int _maxValue)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xD03550", Offset = "0xD03550", VA = "0xD03550")]
	public EqualizerController1()
	{
	}
}
[Token(Token = "0x200018A")]
public class EqualizerController : MonoBehaviour
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int CreateStickNum;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Radius;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float interval;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int DirectionOfRotation;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SticksMain;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> Sticks;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ObjectAudioSource;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float RestrictionNumber;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int IndexPush;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float GrowthRate;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float GrowSpeed;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ReductionSpeed;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float MaxSound;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioSource;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string color;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> NewSticks;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xD020CC", Offset = "0xD020CC", VA = "0xD020CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xD0235C", Offset = "0xD0235C", VA = "0xD0235C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xD0294C", Offset = "0xD0294C", VA = "0xD0294C")]
	public void SetHp(int _value, int _maxValue)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xD02AAC", Offset = "0xD02AAC", VA = "0xD02AAC")]
	public EqualizerController()
	{
	}
}
[Token(Token = "0x200018B")]
public class FileUtil_
{
	[Token(Token = "0x6000904")]
	public static T Get<T>(Dictionary<string, string> _data, string _key, [Optional] T def)
	{
		return (T)null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xD05CB0", Offset = "0xD05CB0", VA = "0xD05CB0")]
	public static string GetResPath(string _filename, string _ext = "bytes")
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xD05D24", Offset = "0xD05D24", VA = "0xD05D24")]
	public static string GetFilePath(string _filename, string _ext = "bytes")
	{
		return null;
	}

	[Token(Token = "0x6000907")]
	public static bool SaveJson<T>(T t, string _path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000908")]
	public static T LoadJson<T>(string _path)
	{
		return (T)null;
	}

	[Token(Token = "0x6000909")]
	public static bool SaveClass<T>(T t, string _path)
	{
		return default(bool);
	}

	[Token(Token = "0x600090A")]
	public static T LoadClass<T>(string _path)
	{
		return (T)null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xD05D98", Offset = "0xD05D98", VA = "0xD05D98")]
	public FileUtil_()
	{
	}
}
[Serializable]
[Token(Token = "0x200018C")]
public class FsmClass<TFsm_Type>
{
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected SortedDictionary<TFsm_Type, FsmState<TFsm_Type>> m_fsmStateList;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected FsmState<TFsm_Type> m_curState;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected FsmState<TFsm_Type> m_nextState;

	[Token(Token = "0x17000093")]
	public FsmState<TFsm_Type> getCurState
	{
		[Token(Token = "0x600090C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000094")]
	public TFsm_Type getCurStateType
	{
		[Token(Token = "0x600090D")]
		get
		{
			return (TFsm_Type)null;
		}
	}

	[Token(Token = "0x17000095")]
	public FsmState<TFsm_Type> getNextState
	{
		[Token(Token = "0x600090E")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000096")]
	public TFsm_Type getNextStateType
	{
		[Token(Token = "0x600090F")]
		get
		{
			return (TFsm_Type)null;
		}
	}

	[Token(Token = "0x6000910")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x6000911")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000912")]
	public virtual void AddFsm(FsmState<TFsm_Type> _state)
	{
	}

	[Token(Token = "0x6000913")]
	public virtual void SetState(TFsm_Type _state)
	{
	}

	[Token(Token = "0x6000914")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000915")]
	public FsmClass()
	{
	}
}
[Serializable]
[Token(Token = "0x200018D")]
public abstract class FsmState<TFsm_Type>
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TFsm_Type m_stateType;

	[Token(Token = "0x17000097")]
	public TFsm_Type getStateType
	{
		[Token(Token = "0x6000917")]
		get
		{
			return (TFsm_Type)null;
		}
	}

	[Token(Token = "0x6000916")]
	public FsmState(TFsm_Type _stateIdx)
	{
	}

	[Token(Token = "0x6000918")]
	public virtual void Enter()
	{
	}

	[Token(Token = "0x6000919")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600091A")]
	public virtual void End()
	{
	}
}
[Token(Token = "0x200018E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997E9C", Offset = "0x997E9C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997E9C", Offset = "0x997E9C")]
public class MeshCombine : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xDFC208", Offset = "0xDFC208", VA = "0xDFC208")]
	private void Start()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xDFC46C", Offset = "0xDFC46C", VA = "0xDFC46C")]
	public MeshCombine()
	{
	}
}
[Token(Token = "0x200018F")]
public static class MeshCut
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Plane blade;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Transform victim_transform;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Mesh victim_mesh;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool[] sides;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<int>[] left_Gather_subIndices;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<int>[] right_Gather_subIndices;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static List<Vector3>[] left_Gather_added_Points;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static List<Vector2>[] left_Gather_added_uvs;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static List<Vector3>[] left_Gather_added_normals;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static List<Vector3>[] right_Gather_added_Points;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static List<Vector2>[] right_Gather_added_uvs;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static List<Vector3>[] right_Gather_added_normals;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Vector3 leftPoint1;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static Vector3 leftPoint2;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static Vector3 rightPoint1;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private static Vector3 rightPoint2;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static Vector2 left_uv1;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static Vector2 left_uv2;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static Vector2 right_uv1;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static Vector2 right_uv2;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static Vector3 left_normal1;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private static Vector3 left_normal2;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private static Vector3 right_normal1;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private static Vector3 right_normal2;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private static List<int>[] left_Final_subIndices;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private static List<Vector3> left_Final_vertices;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private static List<Vector3> left_Final_normals;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private static List<Vector2> left_Final_uvs;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static List<int>[] right_Final_subIndices;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private static List<Vector3> right_Final_vertices;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private static List<Vector3> right_Final_normals;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private static List<Vector2> right_Final_uvs;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private static List<Vector3> createdVertexPoints;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private static int sub;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private static int[] indices;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private static int[] secondIndices;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private static List<Vector3> capVertTracker;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private static List<Vector3> capVertpolygon;

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xDFC474", Offset = "0xDFC474", VA = "0xDFC474")]
	public static GameObject[] Cut(GameObject victim, Vector3 anchorPoint, Vector3 normalDirection, Material capMaterial)
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xDFF6A0", Offset = "0xDFF6A0", VA = "0xDFF6A0")]
	public static void Cut(GameObject victim, Vector3 anchorPoint, Vector3 normalDirection, Material capMaterial, GameObject leftObj, GameObject rightObj)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xDFD1DC", Offset = "0xDFD1DC", VA = "0xDFD1DC")]
	private static void ResetGatheringValues()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xDFD528", Offset = "0xDFD528", VA = "0xDFD528")]
	private static void ResetFaceCuttingTemps()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xDFD6A4", Offset = "0xDFD6A4", VA = "0xDFD6A4")]
	private static void Cut_this_Face(int submesh, int index1, int index2, int index3)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xE00290", Offset = "0xE00290", VA = "0xE00290")]
	private static void Add_Left_triangle(int submesh, Vector3 faceNormal, Vector3[] points, Vector2[] uvs, Vector3[] normals)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xE00710", Offset = "0xE00710", VA = "0xE00710")]
	private static void Add_Right_triangle(int submesh, Vector3 faceNormal, Vector3[] points, Vector2[] uvs, Vector3[] normals)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xDFE4E8", Offset = "0xDFE4E8", VA = "0xDFE4E8")]
	private static void ResetFinalArrays()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xDFE6B4", Offset = "0xDFE6B4", VA = "0xDFE6B4")]
	private static void SetFinalArrays_withOriginals()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xDFEAF0", Offset = "0xDFEAF0", VA = "0xDFEAF0")]
	private static void AddNewTriangles_toFinalArrays()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xDFEF74", Offset = "0xDFEF74", VA = "0xDFEF74")]
	private static void MakeCaps()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xE00B90", Offset = "0xE00B90", VA = "0xE00B90")]
	private static void FillCap(List<Vector3> vertices)
	{
	}
}
[Token(Token = "0x2000190")]
public class MonoSingletonPass<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x17000098")]
	public static T Instance
	{
		[Token(Token = "0x600092A")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600092B")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600092C")]
	public MonoSingletonPass()
	{
	}
}
[Token(Token = "0x2000191")]
public class MonoSingletonBase<T> : MonoBehaviour where T : class
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T singleTonObject;

	[Token(Token = "0x17000099")]
	public static T Instance
	{
		[Token(Token = "0x600092F")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600092E")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000930")]
	public MonoSingletonBase()
	{
	}
}
[Token(Token = "0x2000192")]
public class RealtimeCubemap : MonoBehaviour
{
	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cubemapSize;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool oneFacePerFrame;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture renderTexture;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC1C3FC", Offset = "0xC1C3FC", VA = "0xC1C3FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xC1C780", Offset = "0xC1C780", VA = "0xC1C780")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC1C400", Offset = "0xC1C400", VA = "0xC1C400")]
	private void UpdateCubemap(int faceMask)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC1C8CC", Offset = "0xC1C8CC", VA = "0xC1C8CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC1C944", Offset = "0xC1C944", VA = "0xC1C944")]
	public RealtimeCubemap()
	{
	}
}
[Token(Token = "0x2000193")]
public class ResUtil
{
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, AudioClip> audioClipResPool;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Sprite> spriteResPool;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, TextAsset> textAssetResPool;

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC1D634", Offset = "0xC1D634", VA = "0xC1D634")]
	public static GameObject CreateGameObject(string _path, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xC1D734", Offset = "0xC1D734", VA = "0xC1D734")]
	public static GameObject CreateGameObject(string _path)
	{
		return null;
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xC1D914", Offset = "0xC1D914", VA = "0xC1D914")]
	public static GameObject LoadGameObject(string _path)
	{
		return null;
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xC1D97C", Offset = "0xC1D97C", VA = "0xC1D97C")]
	public static Texture Loadtexture(string _path)
	{
		return null;
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xC1DA08", Offset = "0xC1DA08", VA = "0xC1DA08")]
	public static AudioClip LoadAudioClip(string _path)
	{
		return null;
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xC1DB54", Offset = "0xC1DB54", VA = "0xC1DB54")]
	public static Material LoadMaterial(string _path)
	{
		return null;
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xC1DBE0", Offset = "0xC1DBE0", VA = "0xC1DBE0")]
	public static TextAsset LoadTextAsset(string _path)
	{
		return null;
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xC1DD84", Offset = "0xC1DD84", VA = "0xC1DD84")]
	public static Sprite LoadSprite(string strPath)
	{
		return null;
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xC1D7D4", Offset = "0xC1D7D4", VA = "0xC1D7D4")]
	public static void SetAttach(Transform tChild, Transform tParent)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xC1DEE8", Offset = "0xC1DEE8", VA = "0xC1DEE8")]
	public static string GetEditSelectResPath(string sourcePath, string strName)
	{
		return null;
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xC1E05C", Offset = "0xC1E05C", VA = "0xC1E05C")]
	public static Transform FindName(Transform _trn, string _name)
	{
		return null;
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xC1E198", Offset = "0xC1E198", VA = "0xC1E198")]
	public static void DestoryChild(Transform _trn)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xC1E2D0", Offset = "0xC1E2D0", VA = "0xC1E2D0")]
	public static void SetChildLayer(Transform _trn, string _str)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xC1E440", Offset = "0xC1E440", VA = "0xC1E440")]
	public ResUtil()
	{
	}
}
[Token(Token = "0x2000194")]
public class Sound : MonoBehaviour
{
	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource sound_audio;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundMgr.eTYPE soundType;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xB650C8", Offset = "0xB650C8", VA = "0xB650C8")]
	public void Init(SoundMgr.eTYPE _type, string _path)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xB653A4", Offset = "0xB653A4", VA = "0xB653A4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xB65438", Offset = "0xB65438", VA = "0xB65438")]
	public void SetVolume(float _volume)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xB654E0", Offset = "0xB654E0", VA = "0xB654E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xB654E4", Offset = "0xB654E4", VA = "0xB654E4")]
	public void Play(bool _isloop, float _volume)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xB65614", Offset = "0xB65614", VA = "0xB65614")]
	private void Update()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xB656C8", Offset = "0xB656C8", VA = "0xB656C8")]
	public Sound()
	{
	}
}
[Token(Token = "0x2000195")]
public class SoundMgr : MonoBehaviour
{
	[Token(Token = "0x20004A0")]
	public enum eTYPE
	{
		[Token(Token = "0x4001DD3")]
		BGM,
		[Token(Token = "0x4001DD4")]
		EFFECT_SOUND
	}

	[Token(Token = "0x20004A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9997B0", Offset = "0x9997B0")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _isSameOver;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xB65E68", Offset = "0xB65E68", VA = "0xB65E68")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xB66154", Offset = "0xB66154", VA = "0xB66154")]
		internal bool <PlaySound>b__0(Sound _search)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SoundMgr ms_instance;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_buttonSoundPath;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_startBtnSound;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_keySoundPath;

	[Token(Token = "0x4000930")]
	private const float default_bgm = 1f;

	[Token(Token = "0x4000931")]
	private const float default_effect = 1f;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_volume_bgm;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_volume_effect;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SortedDictionary<eTYPE, SortedDictionary<int, List<Sound>>> m_soundList;

	[Token(Token = "0x1700009A")]
	public static SoundMgr Instance
	{
		[Token(Token = "0x600094C")]
		[Address(RVA = "0xB64F30", Offset = "0xB64F30", VA = "0xB64F30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009B")]
	public float getVolume_bgm
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xB65E70", Offset = "0xB65E70", VA = "0xB65E70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009C")]
	public float getVolume_effect
	{
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xB65E9C", Offset = "0xB65E9C", VA = "0xB65E9C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xB656D0", Offset = "0xB656D0", VA = "0xB656D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xB657FC", Offset = "0xB657FC", VA = "0xB657FC")]
	public void SetSoundVolume(eTYPE _type, float _volume)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xB659C0", Offset = "0xB659C0", VA = "0xB659C0")]
	public void StopSound(eTYPE _type)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xB65B74", Offset = "0xB65B74", VA = "0xB65B74")]
	public Sound PlaySound(eTYPE _type, string _strPath, float _volume, bool _isloop, bool _isSameOver)
	{
		return null;
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xB65E78", Offset = "0xB65E78", VA = "0xB65E78")]
	public Sound PlayBGM(string _strPath)
	{
		return null;
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xB65E94", Offset = "0xB65E94", VA = "0xB65E94")]
	public void StopBGM()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xB6509C", Offset = "0xB6509C", VA = "0xB6509C")]
	public void PlayBtnSound()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xB65EA4", Offset = "0xB65EA4", VA = "0xB65EA4")]
	public void GameStartSound()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xB65EC8", Offset = "0xB65EC8", VA = "0xB65EC8")]
	public void PlaySoundKey()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xB65EEC", Offset = "0xB65EEC", VA = "0xB65EEC")]
	public void SetVolume_effect(float fVolume, bool _isSave = false)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xB65F7C", Offset = "0xB65F7C", VA = "0xB65F7C")]
	public void SetVolume_effect(float fVolume)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xB65F84", Offset = "0xB65F84", VA = "0xB65F84")]
	public Sound PlayEffectSound(string _path)
	{
		return null;
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xB66050", Offset = "0xB66050", VA = "0xB66050")]
	public Sound PlayEffectSound(string _path, float _volume)
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xB66084", Offset = "0xB66084", VA = "0xB66084")]
	public SoundMgr()
	{
	}
}
[Token(Token = "0x2000196")]
public class Util
{
	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder s_sb;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string[] s_strs;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xC83CF0", Offset = "0xC83CF0", VA = "0xC83CF0")]
	public static string GetGoldText_T2(long _iGold)
	{
		return null;
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xC84050", Offset = "0xC84050", VA = "0xC84050")]
	public static string GetGoldText_T1(int _iGold)
	{
		return null;
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xC840B4", Offset = "0xC840B4", VA = "0xC840B4")]
	public static string GetGoldText_T1(long _iGold)
	{
		return null;
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xC84138", Offset = "0xC84138", VA = "0xC84138")]
	public static int GetRandomIndex(List<int> _list)
	{
		return default(int);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xC84238", Offset = "0xC84238", VA = "0xC84238")]
	public static Vector3 GetBezier3(Vector3 p1, Vector3 p2, Vector3 p3, float mu)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xC842AC", Offset = "0xC842AC", VA = "0xC842AC")]
	public static Vector3 GetBezier4(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, float mu)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xC84348", Offset = "0xC84348", VA = "0xC84348")]
	public static Vector3 GetCatmullRomSpline(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xC84524", Offset = "0xC84524", VA = "0xC84524")]
	public static float UpAngle(Vector3 fwd, Vector3 targetDir)
	{
		return default(float);
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xC8476C", Offset = "0xC8476C", VA = "0xC8476C")]
	public static float ContAngle(Vector3 fwd, Vector3 targetDir)
	{
		return default(float);
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xC848C8", Offset = "0xC848C8", VA = "0xC848C8")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xC84680", Offset = "0xC84680", VA = "0xC84680")]
	public static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
	{
		return default(int);
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xC84978", Offset = "0xC84978", VA = "0xC84978")]
	public static bool IsSightDetect(Vector3 posCur, Quaternion rot, Vector3 posTarget, float fAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xC84B00", Offset = "0xC84B00", VA = "0xC84B00")]
	public static string colorToHex(Color32 color)
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xC84BA8", Offset = "0xC84BA8", VA = "0xC84BA8")]
	public static Color hexToColor(string hex)
	{
		return default(Color);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xC84D18", Offset = "0xC84D18", VA = "0xC84D18")]
	public static int GetDay(int _time)
	{
		return default(int);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xC84D38", Offset = "0xC84D38", VA = "0xC84D38")]
	public static int GetHour(int _time)
	{
		return default(int);
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xC84D58", Offset = "0xC84D58", VA = "0xC84D58")]
	public static int GetMinute(int _time)
	{
		return default(int);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xC84D9C", Offset = "0xC84D9C", VA = "0xC84D9C")]
	public static int GetSecond(int _time)
	{
		return default(int);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xC84DE8", Offset = "0xC84DE8", VA = "0xC84DE8")]
	public static long GetNowSystemTimeSecond()
	{
		return default(long);
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xC84E80", Offset = "0xC84E80", VA = "0xC84E80")]
	public static long GetSystemTimeSecond(long _time)
	{
		return default(long);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xC84EA4", Offset = "0xC84EA4", VA = "0xC84EA4")]
	public static float GetVecDic_DY(Vector3 _pos1, Vector3 _pos2)
	{
		return default(float);
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xC84F3C", Offset = "0xC84F3C", VA = "0xC84F3C")]
	public static Vector3 GetVecDir_DY(Vector3 _pos1, Vector3 _pos2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xC84FD4", Offset = "0xC84FD4", VA = "0xC84FD4")]
	public static bool IsInAngle(Vector3 posCur, Quaternion rot, Vector3 posTarget, float fAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xC8515C", Offset = "0xC8515C", VA = "0xC8515C")]
	public Util()
	{
	}
}
[Token(Token = "0x2000197")]
internal static class YieldInstructionCache
{
	[Token(Token = "0x20004A2")]
	private class FloatComparer : IEqualityComparer<float>
	{
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x174F70C", Offset = "0x174F70C", VA = "0x174F70C", Slot = "4")]
		private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x174F718", Offset = "0x174F718", VA = "0x174F718", Slot = "5")]
		private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x174F704", Offset = "0x174F704", VA = "0x174F704")]
		public FloatComparer()
		{
		}
	}

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly WaitForEndOfFrame WaitForEndOfFrame;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly WaitForFixedUpdate WaitForFixedUpdate;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<float, WaitForSeconds> _timeInterval;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x174F4F4", Offset = "0x174F4F4", VA = "0x174F4F4")]
	public static WaitForSeconds WaitForSeconds(float seconds)
	{
		return null;
	}
}
[Token(Token = "0x2000198")]
public class TargetVector3
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 m_target;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 m_pos;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_speed;

	[Token(Token = "0x1700009D")]
	public Vector3 getValue
	{
		[Token(Token = "0x600097C")]
		[Address(RVA = "0xECD3B8", Offset = "0xECD3B8", VA = "0xECD3B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700009E")]
	public bool isMoveing
	{
		[Token(Token = "0x600097E")]
		[Address(RVA = "0xECD524", Offset = "0xECD524", VA = "0xECD524")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xECD398", Offset = "0xECD398", VA = "0xECD398")]
	public void SetTarget(Vector3 _pos)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xECD3A4", Offset = "0xECD3A4", VA = "0xECD3A4")]
	public void SetValue(Vector3 _pos)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xECD3B0", Offset = "0xECD3B0", VA = "0xECD3B0")]
	public void SetSpeed(float _speed)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xECD3C4", Offset = "0xECD3C4", VA = "0xECD3C4")]
	public void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xECD5C4", Offset = "0xECD5C4", VA = "0xECD5C4")]
	public TargetVector3()
	{
	}
}
[Token(Token = "0x2000199")]
public class TargetValue
{
	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_target;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float m_value;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_speed;

	[Token(Token = "0x1700009F")]
	public float getValue
	{
		[Token(Token = "0x6000982")]
		[Address(RVA = "0xECD2C4", Offset = "0xECD2C4", VA = "0xECD2C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A0")]
	public float getTarget
	{
		[Token(Token = "0x6000983")]
		[Address(RVA = "0xECD2CC", Offset = "0xECD2CC", VA = "0xECD2CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A1")]
	public bool isMoveing
	{
		[Token(Token = "0x6000984")]
		[Address(RVA = "0xECD2D4", Offset = "0xECD2D4", VA = "0xECD2D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xECD2B4", Offset = "0xECD2B4", VA = "0xECD2B4")]
	public void SetSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xECD2BC", Offset = "0xECD2BC", VA = "0xECD2BC")]
	public void SetTarget(float _target)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xECD2E4", Offset = "0xECD2E4", VA = "0xECD2E4")]
	public void SetValue(float _value)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xECD2EC", Offset = "0xECD2EC", VA = "0xECD2EC")]
	public void Update(float _teimdelta)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xECD32C", Offset = "0xECD32C", VA = "0xECD32C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xECD388", Offset = "0xECD388", VA = "0xECD388")]
	public TargetValue()
	{
	}
}
[Token(Token = "0x200019A")]
public class XcSingleton<T> where T : class, new()
{
	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object m_syncobj;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T m_instance;

	[Token(Token = "0x170000A2")]
	public static T Instance
	{
		[Token(Token = "0x6000989")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600098A")]
	public XcSingleton()
	{
	}
}
[Token(Token = "0x200019B")]
public class ControllerDevice : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ui_CheckToOneVibration;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float viberatePower;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rigidController;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRControllerHelper trackedObj_ovr;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRManager controllerManager_ovr;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRInput.Controller controller_ovr;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_TrackedObject trackedObj_st;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SteamVR_Controller.Device controller_st;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject weaponParent;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public eBEAT_COLOR beatColor;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody weaponRigidbody;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Handle;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Weapon weapon;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isShake;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float timeadd;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99DF5C", Offset = "0x99DF5C")]
	public float limit;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float m_vibrateTime;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isOn;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xD2C1A0", Offset = "0xD2C1A0", VA = "0xD2C1A0")]
	public void Start()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xD2C470", Offset = "0xD2C470", VA = "0xD2C470")]
	public void Create()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xD2C5E0", Offset = "0xD2C5E0", VA = "0xD2C5E0")]
	public void CreateWeapon(string _path)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xD2C974", Offset = "0xD2C974", VA = "0xD2C974")]
	public void DestoryWeapon()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xD2CA14", Offset = "0xD2CA14", VA = "0xD2CA14")]
	public void UpdateWeapon()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xD2CED8", Offset = "0xD2CED8", VA = "0xD2CED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xD2D008", Offset = "0xD2D008", VA = "0xD2D008")]
	public void Vibrate(float time)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xD2D010", Offset = "0xD2D010", VA = "0xD2D010")]
	public void SetViberationPower(ushort power)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xD2CEFC", Offset = "0xD2CEFC", VA = "0xD2CEFC")]
	private void UpdateVibration()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xD2D090", Offset = "0xD2D090", VA = "0xD2D090")]
	public ControllerDevice()
	{
	}
}
[Token(Token = "0x200019C")]
public class SDKMgr : MonoSingletonPass<SDKMgr>
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isSteam;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] CamRig;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _XRModelName;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ZemerLog;

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xB5DF54", Offset = "0xB5DF54", VA = "0xB5DF54", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xB5DFE8", Offset = "0xB5DFE8", VA = "0xB5DFE8")]
	public void CameraOnOff()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xB5E174", Offset = "0xB5E174", VA = "0xB5E174")]
	public SDKMgr()
	{
	}
}
[Token(Token = "0x200019D")]
public class ViveControllerInput : BaseInputModule
{
	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ViveControllerInput Instance;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99DF74", Offset = "0x99DF74")]
	public Sprite CursorSprite;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material CursorMaterial;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float NormalCursorScale;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LineRenderer line;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x99DFAC", Offset = "0x99DFAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99DFAC", Offset = "0x99DFAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99DFAC", Offset = "0x99DFAC")]
	public bool GuiHit;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E020", Offset = "0x99E020")]
	public bool ButtonUsed;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E058", Offset = "0x99E058")]
	public RectTransform[] Cursors;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject[] CurrentPoint;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject[] CurrentPressed;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject[] CurrentDragging;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PointerEventData[] PointEvents;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool Initialized;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E090", Offset = "0x99E090")]
	public Camera ControllerCamera;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRManager ControllerManager;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private OVRControllerHelper[] Controllers;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OVRInput.Controller[] ControllerDevices;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private OVRManager controllerManager_ovr;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private OVRControllerHelper[] controllers_ovr;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OVRInput.Controller[] controllerDevices_ovr;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SteamVR_ControllerManager controllerManager_st;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SteamVR_TrackedObject[] controllers_st;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SteamVR_Controller.Device[] controllerDevices_st;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject[] controllerObj;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<LineRenderer> m_lineRenderList;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool isPause;

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xB8E450", Offset = "0xB8E450", VA = "0xB8E450", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xB8E4C0", Offset = "0xB8E4C0", VA = "0xB8E4C0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xB8EE78", Offset = "0xB8EE78", VA = "0xB8EE78")]
	private bool GetLookPointerEventData(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xB8F8B8", Offset = "0xB8F8B8", VA = "0xB8F8B8")]
	private void UpdateCursor(int index, PointerEventData pointData)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xB8FC5C", Offset = "0xB8FC5C", VA = "0xB8FC5C")]
	public void ClearSelection()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xB8FCFC", Offset = "0xB8FCFC", VA = "0xB8FCFC")]
	private void Select(GameObject go)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xB8FDE0", Offset = "0xB8FDE0", VA = "0xB8FDE0")]
	private bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xB8FF38", Offset = "0xB8FF38", VA = "0xB8FF38")]
	private void UpdateCameraPosition(int index)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xB9002C", Offset = "0xB9002C", VA = "0xB9002C")]
	private void InitializeControllers()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xB902D8", Offset = "0xB902D8", VA = "0xB902D8", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xB91A88", Offset = "0xB91A88", VA = "0xB91A88")]
	private bool ButtonDown(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xB91C1C", Offset = "0xB91C1C", VA = "0xB91C1C")]
	private bool ButtonUp(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xB91DB0", Offset = "0xB91DB0", VA = "0xB91DB0")]
	private bool ButtonMenu(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xB91F44", Offset = "0xB91F44", VA = "0xB91F44")]
	public ViveControllerInput()
	{
	}
}
[Token(Token = "0x200019E")]
public class WeaponManager : MonoBehaviour
{
	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_Controller.Device controller_st;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInput.Controller controller_ovr;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x174B5C8", Offset = "0x174B5C8", VA = "0x174B5C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x174B71C", Offset = "0x174B71C", VA = "0x174B71C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x174B7B8", Offset = "0x174B7B8", VA = "0x174B7B8")]
	public WeaponManager()
	{
	}
}
[Token(Token = "0x200019F")]
public class ZemerLogManager : MonoBehaviour
{
	[Token(Token = "0x20004A3")]
	public class Log
	{
		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A26F4", Offset = "0x9A26F4")]
		private string <client_time>k__BackingField;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2704", Offset = "0x9A2704")]
		private string <app_id>k__BackingField;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2714", Offset = "0x9A2714")]
		private string <app_name>k__BackingField;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2724", Offset = "0x9A2724")]
		private string <environment>k__BackingField;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2734", Offset = "0x9A2734")]
		private string <log_source_type>k__BackingField;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2744", Offset = "0x9A2744")]
		private string <member_no>k__BackingField;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2754", Offset = "0x9A2754")]
		private string <device_os_name>k__BackingField;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2764", Offset = "0x9A2764")]
		private string <device_os_ver>k__BackingField;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2774", Offset = "0x9A2774")]
		private string <session_id>k__BackingField;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2784", Offset = "0x9A2784")]
		private string <app_publish_ver>k__BackingField;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2794", Offset = "0x9A2794")]
		private ActionInfo <action_info>k__BackingField;

		[Token(Token = "0x17000362")]
		public string client_time
		{
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x1751154", Offset = "0x1751154", VA = "0x1751154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAE94", Offset = "0x9AAE94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x175115C", Offset = "0x175115C", VA = "0x175115C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAEA4", Offset = "0x9AAEA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public string app_id
		{
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x1751164", Offset = "0x1751164", VA = "0x1751164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAEB4", Offset = "0x9AAEB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x175116C", Offset = "0x175116C", VA = "0x175116C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAEC4", Offset = "0x9AAEC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public string app_name
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x1751174", Offset = "0x1751174", VA = "0x1751174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAED4", Offset = "0x9AAED4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x175117C", Offset = "0x175117C", VA = "0x175117C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAEE4", Offset = "0x9AAEE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public string environment
		{
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x1751184", Offset = "0x1751184", VA = "0x1751184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAEF4", Offset = "0x9AAEF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x175118C", Offset = "0x175118C", VA = "0x175118C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF04", Offset = "0x9AAF04")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public string log_source_type
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x1751194", Offset = "0x1751194", VA = "0x1751194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF14", Offset = "0x9AAF14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x175119C", Offset = "0x175119C", VA = "0x175119C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF24", Offset = "0x9AAF24")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public string member_no
		{
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0x17511A4", Offset = "0x17511A4", VA = "0x17511A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF34", Offset = "0x9AAF34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x17511AC", Offset = "0x17511AC", VA = "0x17511AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF44", Offset = "0x9AAF44")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public string device_os_name
		{
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x17511B4", Offset = "0x17511B4", VA = "0x17511B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF54", Offset = "0x9AAF54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x17511BC", Offset = "0x17511BC", VA = "0x17511BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF64", Offset = "0x9AAF64")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public string device_os_ver
		{
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x17511C4", Offset = "0x17511C4", VA = "0x17511C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF74", Offset = "0x9AAF74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x17511CC", Offset = "0x17511CC", VA = "0x17511CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF84", Offset = "0x9AAF84")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public string session_id
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x17511D4", Offset = "0x17511D4", VA = "0x17511D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAF94", Offset = "0x9AAF94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x17511DC", Offset = "0x17511DC", VA = "0x17511DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAFA4", Offset = "0x9AAFA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public string app_publish_ver
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x17511E4", Offset = "0x17511E4", VA = "0x17511E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAFB4", Offset = "0x9AAFB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x17511EC", Offset = "0x17511EC", VA = "0x17511EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAFC4", Offset = "0x9AAFC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public ActionInfo action_info
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x17511F4", Offset = "0x17511F4", VA = "0x17511F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAFD4", Offset = "0x9AAFD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x17511FC", Offset = "0x17511FC", VA = "0x17511FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAFE4", Offset = "0x9AAFE4")]
			set
			{
			}
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1750A40", Offset = "0x1750A40", VA = "0x1750A40")]
		public Log()
		{
		}
	}

	[Token(Token = "0x20004A4")]
	public class ActionInfo
	{
		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A27A4", Offset = "0x9A27A4")]
		private string <action_type>k__BackingField;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A27B4", Offset = "0x9A27B4")]
		private action_param <action_param>k__BackingField;

		[Token(Token = "0x1700036D")]
		public string action_type
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x17510F4", Offset = "0x17510F4", VA = "0x17510F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AAFF4", Offset = "0x9AAFF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x17510FC", Offset = "0x17510FC", VA = "0x17510FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB004", Offset = "0x9AB004")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public action_param action_param
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x1751104", Offset = "0x1751104", VA = "0x1751104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB014", Offset = "0x9AB014")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x175110C", Offset = "0x175110C", VA = "0x175110C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB024", Offset = "0x9AB024")]
			set
			{
			}
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x174FFB4", Offset = "0x174FFB4", VA = "0x174FFB4")]
		public ActionInfo()
		{
		}
	}

	[Token(Token = "0x20004A5")]
	public interface action_param
	{
	}

	[Token(Token = "0x20004A6")]
	public class ActionParam_Start : action_param
	{
		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A27C4", Offset = "0x9A27C4")]
		private string <success_yn>k__BackingField;

		[Token(Token = "0x1700036F")]
		public string success_yn
		{
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x1751134", Offset = "0x1751134", VA = "0x1751134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB034", Offset = "0x9AB034")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x175113C", Offset = "0x175113C", VA = "0x175113C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB044", Offset = "0x9AB044")]
			set
			{
			}
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x174FFAC", Offset = "0x174FFAC", VA = "0x174FFAC")]
		public ActionParam_Start()
		{
		}
	}

	[Token(Token = "0x20004A7")]
	public class ActionParam_heart : action_param
	{
		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A27D4", Offset = "0x9A27D4")]
		private int <total_play_time>k__BackingField;

		[Token(Token = "0x17000370")]
		public int total_play_time
		{
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x1751144", Offset = "0x1751144", VA = "0x1751144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB054", Offset = "0x9AB054")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x175114C", Offset = "0x175114C", VA = "0x175114C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB064", Offset = "0x9AB064")]
			set
			{
			}
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1750358", Offset = "0x1750358", VA = "0x1750358")]
		public ActionParam_heart()
		{
		}
	}

	[Token(Token = "0x20004A8")]
	public class ActionParam_End : action_param
	{
		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A27E4", Offset = "0x9A27E4")]
		private string <success_yn>k__BackingField;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A27F4", Offset = "0x9A27F4")]
		private int <total_play_time>k__BackingField;

		[Token(Token = "0x17000371")]
		public string success_yn
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x1751114", Offset = "0x1751114", VA = "0x1751114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB074", Offset = "0x9AB074")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0x175111C", Offset = "0x175111C", VA = "0x175111C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB084", Offset = "0x9AB084")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public int total_play_time
		{
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0x1751124", Offset = "0x1751124", VA = "0x1751124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB094", Offset = "0x9AB094")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x175112C", Offset = "0x175112C", VA = "0x175112C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB0A4", Offset = "0x9AB0A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x1750668", Offset = "0x1750668", VA = "0x1750668")]
		public ActionParam_End()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9997C0", Offset = "0x9997C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<string> <>9__29_0;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<string> <>9__33_0;

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x1750AB0", Offset = "0x1750AB0", VA = "0x1750AB0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1750AB8", Offset = "0x1750AB8", VA = "0x1750AB8")]
		internal void <heartbeat>b__29_0(string result)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x1750B40", Offset = "0x1750B40", VA = "0x1750B40")]
		internal void <Start>b__33_0(string result)
		{
		}
	}

	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9997D0", Offset = "0x9997D0")]
	private sealed class <heartbeat>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZemerLogManager <>4__this;

		[Token(Token = "0x17000373")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0x1751080", Offset = "0x1751080", VA = "0x1751080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000374")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x17510EC", Offset = "0x17510EC", VA = "0x17510EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x175003C", Offset = "0x175003C", VA = "0x175003C")]
		[DebuggerHidden]
		public <heartbeat>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x1750ECC", Offset = "0x1750ECC", VA = "0x1750ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x1750ED0", Offset = "0x1750ED0", VA = "0x1750ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x1751088", Offset = "0x1751088", VA = "0x1751088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9997E0", Offset = "0x9997E0")]
	private sealed class <Upload>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string URL;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string jsonData;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x17000375")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x1750E58", Offset = "0x1750E58", VA = "0x1750E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x1750EC4", Offset = "0x1750EC4", VA = "0x1750EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x175070C", Offset = "0x175070C", VA = "0x175070C")]
		[DebuggerHidden]
		public <Upload>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x1750BC8", Offset = "0x1750BC8", VA = "0x1750BC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x1750BCC", Offset = "0x1750BCC", VA = "0x1750BCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x1750E60", Offset = "0x1750E60", VA = "0x1750E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int waitingTime;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator heartbeat_repeat;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string url;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool forceExit;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool Paused;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string app_id;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string app_name;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string device_os_name;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string app_publish_ver;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string check_live;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string log_source_type;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject BoxCtrl;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ZemerLogManager mInstance;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Log m_Log;

	[Token(Token = "0x170000A3")]
	public static ZemerLogManager instance
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x174F740", Offset = "0x174F740", VA = "0x174F740")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x174F888", Offset = "0x174F888", VA = "0x174F888")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x174F9BC", Offset = "0x174F9BC", VA = "0x174F9BC")]
	public static string EncryptSHA512(string Data)
	{
		return null;
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x174FB1C", Offset = "0x174FB1C", VA = "0x174FB1C")]
	private void CreateJsonFile(string createPath, string fileName, string jsonData)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x174FC1C", Offset = "0x174FC1C", VA = "0x174FC1C")]
	private string ObjectToJson(object obj)
	{
		return null;
	}

	[Token(Token = "0x60009AF")]
	private T JsonToOject<T>(string jsonData)
	{
		return (T)null;
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x174FC84", Offset = "0x174FC84", VA = "0x174FC84")]
	public string LogData_Start()
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x174FFBC", Offset = "0x174FFBC", VA = "0x174FFBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A73A8", Offset = "0x9A73A8")]
	private IEnumerator heartbeat()
	{
		return null;
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1750068", Offset = "0x1750068", VA = "0x1750068")]
	public string LogData_Play()
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1750360", Offset = "0x1750360", VA = "0x1750360")]
	public string LogData_End()
	{
		return null;
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1750670", Offset = "0x1750670", VA = "0x1750670")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A740C", Offset = "0x9A740C")]
	private IEnumerator Upload(string URL, string jsonData, Action<string> callback)
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1750738", Offset = "0x1750738", VA = "0x1750738")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1750880", Offset = "0x1750880", VA = "0x1750880")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x17508B8", Offset = "0x17508B8", VA = "0x17508B8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1750924", Offset = "0x1750924", VA = "0x1750924")]
	public ZemerLogManager()
	{
	}
}
[Token(Token = "0x20001A0")]
public struct GazeEventArgs
{
	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distance;
}
[Token(Token = "0x20001A1")]
public delegate void GazeEventHandler(object sender, GazeEventArgs e);
[Token(Token = "0x20001A2")]
public class SteamVR_GazeTracker : MonoBehaviour
{
	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInGaze;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gazeInCutoff;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float gazeOutCutoff;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform hmdTrackedObject;

	[Token(Token = "0x14000011")]
	public event GazeEventHandler GazeOn
	{
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xB72274", Offset = "0xB72274", VA = "0xB72274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7470", Offset = "0x9A7470")]
		add
		{
		}
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xB72318", Offset = "0xB72318", VA = "0xB72318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7480", Offset = "0x9A7480")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event GazeEventHandler GazeOff
	{
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xB723BC", Offset = "0xB723BC", VA = "0xB723BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7490", Offset = "0x9A7490")]
		add
		{
		}
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xB72460", Offset = "0xB72460", VA = "0xB72460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A74A0", Offset = "0x9A74A0")]
		remove
		{
		}
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xB72504", Offset = "0xB72504", VA = "0xB72504")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xB72508", Offset = "0xB72508", VA = "0xB72508", Slot = "4")]
	public virtual void OnGazeOn(GazeEventArgs e)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xB72524", Offset = "0xB72524", VA = "0xB72524", Slot = "5")]
	public virtual void OnGazeOff(GazeEventArgs e)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xB72540", Offset = "0xB72540", VA = "0xB72540")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xB728C4", Offset = "0xB728C4", VA = "0xB728C4")]
	public SteamVR_GazeTracker()
	{
	}
}
[Token(Token = "0x20001A3")]
public struct PointerEventArgs
{
	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float distance;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;
}
[Token(Token = "0x20001A4")]
public delegate void PointerEventHandler(object sender, PointerEventArgs e);
[Token(Token = "0x20001A5")]
public class SteamVR_LaserPointer : MonoBehaviour
{
	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject holder;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pointer;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool addRigidBody;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform reference;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform previousContact;

	[Token(Token = "0x14000013")]
	public event PointerEventHandler PointerIn
	{
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xB73808", Offset = "0xB73808", VA = "0xB73808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A74B0", Offset = "0x9A74B0")]
		add
		{
		}
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xB738AC", Offset = "0xB738AC", VA = "0xB738AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A74C0", Offset = "0x9A74C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event PointerEventHandler PointerOut
	{
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xB73950", Offset = "0xB73950", VA = "0xB73950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A74D0", Offset = "0x9A74D0")]
		add
		{
		}
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xB739F4", Offset = "0xB739F4", VA = "0xB739F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A74E0", Offset = "0x9A74E0")]
		remove
		{
		}
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xB73A98", Offset = "0xB73A98", VA = "0xB73A98")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xB73EC0", Offset = "0xB73EC0", VA = "0xB73EC0", Slot = "4")]
	public virtual void OnPointerIn(PointerEventArgs e)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xB73F04", Offset = "0xB73F04", VA = "0xB73F04", Slot = "5")]
	public virtual void OnPointerOut(PointerEventArgs e)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xB73F48", Offset = "0xB73F48", VA = "0xB73F48")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xB74454", Offset = "0xB74454", VA = "0xB74454")]
	public SteamVR_LaserPointer()
	{
	}
}
[Token(Token = "0x20001A6")]
public class SteamVR_Teleporter : MonoBehaviour
{
	[Token(Token = "0x20004AC")]
	public enum TeleportType
	{
		[Token(Token = "0x4001DF3")]
		TeleportTypeUseTerrain,
		[Token(Token = "0x4001DF4")]
		TeleportTypeUseCollider,
		[Token(Token = "0x4001DF5")]
		TeleportTypeUseZeroY
	}

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool teleportOnClick;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TeleportType teleportType;

	[Token(Token = "0x170000A4")]
	private Transform reference
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xCB321C", Offset = "0xCB321C", VA = "0xCB321C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xCB32BC", Offset = "0xCB32BC", VA = "0xCB32BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xCB3530", Offset = "0xCB3530", VA = "0xCB3530")]
	private void DoClick(object sender, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xCB38D0", Offset = "0xCB38D0", VA = "0xCB38D0")]
	public SteamVR_Teleporter()
	{
	}
}
[Token(Token = "0x20001A7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997F28", Offset = "0x997F28")]
public class SteamVR_TestThrow : MonoBehaviour
{
	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody attachPoint;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_TrackedObject trackedObj;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FixedJoint joint;

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xCB4A08", Offset = "0xCB4A08", VA = "0xCB4A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xCB4A6C", Offset = "0xCB4A6C", VA = "0xCB4A6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xCB4DD8", Offset = "0xCB4DD8", VA = "0xCB4DD8")]
	public SteamVR_TestThrow()
	{
	}
}
[Token(Token = "0x20001A8")]
public class SteamVR_TestTrackedCamera : MonoBehaviour
{
	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool undistorted;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool cropped;

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xCB4DE0", Offset = "0xCB4DE0", VA = "0xCB4DE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xCB4EA4", Offset = "0xCB4EA4", VA = "0xCB4EA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xCB4FB0", Offset = "0xCB4FB0", VA = "0xCB4FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xCB5348", Offset = "0xCB5348", VA = "0xCB5348")]
	public SteamVR_TestTrackedCamera()
	{
	}
}
[Token(Token = "0x20001A9")]
public struct ClickedEventArgs
{
	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float padX;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float padY;
}
[Token(Token = "0x20001AA")]
public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);
[Token(Token = "0x20001AB")]
public class SteamVR_TrackedController : MonoBehaviour
{
	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint controllerIndex;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerState_t controllerState;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool triggerPressed;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool steamPressed;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool menuPressed;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool padPressed;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool padTouched;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool gripped;

	[Token(Token = "0x14000015")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xCB5EA8", Offset = "0xCB5EA8", VA = "0xCB5EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A74F0", Offset = "0x9A74F0")]
		add
		{
		}
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xCB5F4C", Offset = "0xCB5F4C", VA = "0xCB5F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7500", Offset = "0x9A7500")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xCB5FF0", Offset = "0xCB5FF0", VA = "0xCB5FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7510", Offset = "0x9A7510")]
		add
		{
		}
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xCB6094", Offset = "0xCB6094", VA = "0xCB6094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7520", Offset = "0x9A7520")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xCB348C", Offset = "0xCB348C", VA = "0xCB348C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7530", Offset = "0x9A7530")]
		add
		{
		}
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xCB6138", Offset = "0xCB6138", VA = "0xCB6138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7540", Offset = "0x9A7540")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xCB61DC", Offset = "0xCB61DC", VA = "0xCB61DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7550", Offset = "0x9A7550")]
		add
		{
		}
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xCB6280", Offset = "0xCB6280", VA = "0xCB6280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7560", Offset = "0x9A7560")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event ClickedEventHandler SteamClicked
	{
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xCB6324", Offset = "0xCB6324", VA = "0xCB6324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7570", Offset = "0x9A7570")]
		add
		{
		}
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xCB63C8", Offset = "0xCB63C8", VA = "0xCB63C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7580", Offset = "0x9A7580")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xCB646C", Offset = "0xCB646C", VA = "0xCB646C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7590", Offset = "0x9A7590")]
		add
		{
		}
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xCB6510", Offset = "0xCB6510", VA = "0xCB6510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A75A0", Offset = "0x9A75A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xCB65B4", Offset = "0xCB65B4", VA = "0xCB65B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A75B0", Offset = "0x9A75B0")]
		add
		{
		}
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xCB6658", Offset = "0xCB6658", VA = "0xCB6658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A75C0", Offset = "0x9A75C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xCB66FC", Offset = "0xCB66FC", VA = "0xCB66FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A75D0", Offset = "0x9A75D0")]
		add
		{
		}
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xCB67A0", Offset = "0xCB67A0", VA = "0xCB67A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A75E0", Offset = "0x9A75E0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xCB6844", Offset = "0xCB6844", VA = "0xCB6844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A75F0", Offset = "0x9A75F0")]
		add
		{
		}
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xCB68E8", Offset = "0xCB68E8", VA = "0xCB68E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7600", Offset = "0x9A7600")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xCB698C", Offset = "0xCB698C", VA = "0xCB698C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7610", Offset = "0x9A7610")]
		add
		{
		}
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xCB6A30", Offset = "0xCB6A30", VA = "0xCB6A30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7620", Offset = "0x9A7620")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xCB6AD4", Offset = "0xCB6AD4", VA = "0xCB6AD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7630", Offset = "0x9A7630")]
		add
		{
		}
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xCB6B78", Offset = "0xCB6B78", VA = "0xCB6B78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7640", Offset = "0x9A7640")]
		remove
		{
		}
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xCB6C1C", Offset = "0xCB6C1C", VA = "0xCB6C1C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xCB6D68", Offset = "0xCB6D68", VA = "0xCB6D68")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xCB6D70", Offset = "0xCB6D70", VA = "0xCB6D70", Slot = "5")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xCB6D9C", Offset = "0xCB6D9C", VA = "0xCB6D9C", Slot = "6")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xCB6DC8", Offset = "0xCB6DC8", VA = "0xCB6DC8", Slot = "7")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xCB6DF4", Offset = "0xCB6DF4", VA = "0xCB6DF4", Slot = "8")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xCB6E20", Offset = "0xCB6E20", VA = "0xCB6E20", Slot = "9")]
	public virtual void OnSteamClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xCB6E4C", Offset = "0xCB6E4C", VA = "0xCB6E4C", Slot = "10")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xCB6E78", Offset = "0xCB6E78", VA = "0xCB6E78", Slot = "11")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xCB6EA4", Offset = "0xCB6EA4", VA = "0xCB6EA4", Slot = "12")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xCB6ED0", Offset = "0xCB6ED0", VA = "0xCB6ED0", Slot = "13")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xCB6EFC", Offset = "0xCB6EFC", VA = "0xCB6EFC", Slot = "14")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xCB6F28", Offset = "0xCB6F28", VA = "0xCB6F28", Slot = "15")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xCB6F54", Offset = "0xCB6F54", VA = "0xCB6F54", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xCB7248", Offset = "0xCB7248", VA = "0xCB7248")]
	public SteamVR_TrackedController()
	{
	}
}
[Token(Token = "0x20001AC")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E1C8", Offset = "0x99E1C8")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E1D8", Offset = "0x99E1D8")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E1E8", Offset = "0x99E1E8")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E1F8", Offset = "0x99E1F8")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E208", Offset = "0x99E208")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E218", Offset = "0x99E218")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E228", Offset = "0x99E228")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E238", Offset = "0x99E238")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E248", Offset = "0x99E248")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E258", Offset = "0x99E258")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E268", Offset = "0x99E268")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E278", Offset = "0x99E278")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E288", Offset = "0x99E288")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x170000A5")]
	public static bool active
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xB67D30", Offset = "0xB67D30", VA = "0xB67D30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	public static bool enabled
	{
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xB67DA0", Offset = "0xB67DA0", VA = "0xB67DA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xB67E3C", Offset = "0xB67E3C", VA = "0xB67E3C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public static SteamVR instance
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xB67F84", Offset = "0xB67F84", VA = "0xB67F84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A8")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xB682C4", Offset = "0xB682C4", VA = "0xB682C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A9")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xB68C70", Offset = "0xB68C70", VA = "0xB68C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7650", Offset = "0x9A7650")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xB68C78", Offset = "0xB68C78", VA = "0xB68C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7660", Offset = "0x9A7660")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xB68C80", Offset = "0xB68C80", VA = "0xB68C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7670", Offset = "0x9A7670")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xB68C88", Offset = "0xB68C88", VA = "0xB68C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7680", Offset = "0x9A7680")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public CVROverlay overlay
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xB68C90", Offset = "0xB68C90", VA = "0xB68C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7690", Offset = "0x9A7690")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xB68C98", Offset = "0xB68C98", VA = "0xB68C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A76A0", Offset = "0x9A76A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public static bool initializing
	{
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xB68CA0", Offset = "0xB68CA0", VA = "0xB68CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A76B0", Offset = "0x9A76B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xB68D08", Offset = "0xB68D08", VA = "0xB68D08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A76C0", Offset = "0x9A76C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public static bool calibrating
	{
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xB68D78", Offset = "0xB68D78", VA = "0xB68D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A76D0", Offset = "0x9A76D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xB68DE0", Offset = "0xB68DE0", VA = "0xB68DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A76E0", Offset = "0x9A76E0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public static bool outOfRange
	{
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xB68E50", Offset = "0xB68E50", VA = "0xB68E50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A76F0", Offset = "0x9A76F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xB68EB8", Offset = "0xB68EB8", VA = "0xB68EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7700", Offset = "0x9A7700")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public float sceneWidth
	{
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xB68F28", Offset = "0xB68F28", VA = "0xB68F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7710", Offset = "0x9A7710")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xB68F30", Offset = "0xB68F30", VA = "0xB68F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7720", Offset = "0x9A7720")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public float sceneHeight
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xB68F38", Offset = "0xB68F38", VA = "0xB68F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7730", Offset = "0x9A7730")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xB68F40", Offset = "0xB68F40", VA = "0xB68F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7740", Offset = "0x9A7740")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public float aspect
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xB68F48", Offset = "0xB68F48", VA = "0xB68F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7750", Offset = "0x9A7750")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xB68F50", Offset = "0xB68F50", VA = "0xB68F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7760", Offset = "0x9A7760")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public float fieldOfView
	{
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xB68F58", Offset = "0xB68F58", VA = "0xB68F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7770", Offset = "0x9A7770")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xB68F60", Offset = "0xB68F60", VA = "0xB68F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7780", Offset = "0x9A7780")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xB68F68", Offset = "0xB68F68", VA = "0xB68F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7790", Offset = "0x9A7790")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xB68F70", Offset = "0xB68F70", VA = "0xB68F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A77A0", Offset = "0x9A77A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xB68F78", Offset = "0xB68F78", VA = "0xB68F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A77B0", Offset = "0x9A77B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xB68F80", Offset = "0xB68F80", VA = "0xB68F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A77C0", Offset = "0x9A77C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xB68F88", Offset = "0xB68F88", VA = "0xB68F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A77D0", Offset = "0x9A77D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xB68F90", Offset = "0xB68F90", VA = "0xB68F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A77E0", Offset = "0x9A77E0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xB68F98", Offset = "0xB68F98", VA = "0xB68F98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B7")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xB690F8", Offset = "0xB690F8", VA = "0xB690F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B8")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xB69104", Offset = "0xB69104", VA = "0xB69104")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B9")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xB69110", Offset = "0xB69110", VA = "0xB69110")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BA")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xB6915C", Offset = "0xB6915C", VA = "0xB6915C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xB680A0", Offset = "0xB680A0", VA = "0xB680A0")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xB68330", Offset = "0xB68330", VA = "0xB68330")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xB69168", Offset = "0xB69168", VA = "0xB69168")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xB68FA4", Offset = "0xB68FA4", VA = "0xB68FA4")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xB6911C", Offset = "0xB6911C", VA = "0xB6911C")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xB69258", Offset = "0xB69258", VA = "0xB69258")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xB6930C", Offset = "0xB6930C", VA = "0xB6930C")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xB693C0", Offset = "0xB693C0", VA = "0xB693C0")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xB69474", Offset = "0xB69474", VA = "0xB69474")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xB69520", Offset = "0xB69520", VA = "0xB69520")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xB68484", Offset = "0xB68484", VA = "0xB68484")]
	private SteamVR()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xB699C4", Offset = "0xB699C4", VA = "0xB699C4", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xB69C80", Offset = "0xB69C80", VA = "0xB69C80", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xB69A34", Offset = "0xB69A34", VA = "0xB69A34")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xB67EDC", Offset = "0xB67EDC", VA = "0xB67EDC")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x20001AD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x997F8C", Offset = "0x997F8C")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E2A8", Offset = "0x99E2A8")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Collections.Hashtable values;

	[Token(Token = "0x40009D0")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x40009D1")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x40009D2")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x40009D3")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x170000BB")]
	public Transform head
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xB69D74", Offset = "0xB69D74", VA = "0xB69D74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	public Transform offset
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xB69D7C", Offset = "0xB69D7C", VA = "0xB69D7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public Transform origin
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xB69D84", Offset = "0xB69D84", VA = "0xB69D84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	public Camera camera
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xB69DA0", Offset = "0xB69DA0", VA = "0xB69DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A77F0", Offset = "0x9A77F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xB69DA8", Offset = "0xB69DA8", VA = "0xB69DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7800", Offset = "0x9A7800")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public Transform ears
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xB69DB0", Offset = "0xB69DB0", VA = "0xB69DB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C0")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xB69E40", Offset = "0xB69E40", VA = "0xB69E40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xB69E48", Offset = "0xB69E48", VA = "0xB69E48")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public string baseName
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xB6B0A8", Offset = "0xB6B0A8", VA = "0xB6B0A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xB69DB8", Offset = "0xB69DB8", VA = "0xB69DB8")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xB69E50", Offset = "0xB69E50", VA = "0xB69E50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xB69E58", Offset = "0xB69E58", VA = "0xB69E58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xB6A9F8", Offset = "0xB6A9F8", VA = "0xB6A9F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xB6AA64", Offset = "0xB6AA64", VA = "0xB6AA64")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xB6A1EC", Offset = "0xB6A1EC", VA = "0xB6A1EC")]
	public void Expand()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xB6B180", Offset = "0xB6B180", VA = "0xB6B180")]
	public void Collapse()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xB6B630", Offset = "0xB6B630", VA = "0xB6B630")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x20001AE")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xB6B638", Offset = "0xB6B638", VA = "0xB6B638")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xB6B6D4", Offset = "0xB6B6D4", VA = "0xB6B6D4")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x20001AF")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xB6B6DC", Offset = "0xB6B6DC", VA = "0xB6B6DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xB6B778", Offset = "0xB6B778", VA = "0xB6B778")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x20001B0")]
public class SteamVR_Controller
{
	[Token(Token = "0x20004AD")]
	public class ButtonMask
	{
		[Token(Token = "0x4001DF6")]
		public const ulong System = 1uL;

		[Token(Token = "0x4001DF7")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4001DF8")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4001DF9")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4001DFA")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4001DFB")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4001DFC")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4001DFD")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4001DFE")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4001DFF")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xB6BEE8", Offset = "0xB6BEE8", VA = "0xB6BEE8")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x20004AE")]
	public class Device
	{
		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2804", Offset = "0x9A2804")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2814", Offset = "0x9A2814")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x17000377")]
		public uint index
		{
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0xB6BEF0", Offset = "0xB6BEF0", VA = "0xB6BEF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB154", Offset = "0x9AB154")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0xB6BEF8", Offset = "0xB6BEF8", VA = "0xB6BEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB164", Offset = "0x9AB164")]
			private set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public bool valid
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xB6BF00", Offset = "0xB6BF00", VA = "0xB6BF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB174", Offset = "0x9AB174")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D38")]
			[Address(RVA = "0xB6BF08", Offset = "0xB6BF08", VA = "0xB6BF08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB184", Offset = "0x9AB184")]
			private set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public bool connected
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xB6BEBC", Offset = "0xB6BEBC", VA = "0xB6BEBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037A")]
		public bool hasTracking
		{
			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0xB6BF14", Offset = "0xB6BF14", VA = "0xB6BF14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037B")]
		public bool outOfRange
		{
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xB6BF38", Offset = "0xB6BF38", VA = "0xB6BF38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037C")]
		public bool calibrating
		{
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0xB6BF70", Offset = "0xB6BF70", VA = "0xB6BF70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037D")]
		public bool uninitialized
		{
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0xB6BFA0", Offset = "0xB6BFA0", VA = "0xB6BFA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037E")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0xB6BE5C", Offset = "0xB6BE5C", VA = "0xB6BE5C")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x1700037F")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0xB6BFCC", Offset = "0xB6BFCC", VA = "0xB6BFCC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000380")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6001D40")]
			[Address(RVA = "0xB6C01C", Offset = "0xB6C01C", VA = "0xB6C01C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xB6B8F0", Offset = "0xB6B8F0", VA = "0xB6B8F0")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xB6C070", Offset = "0xB6C070", VA = "0xB6C070")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xB6C0B4", Offset = "0xB6C0B4", VA = "0xB6C0B4")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xB6C0F8", Offset = "0xB6C0F8", VA = "0xB6C0F8")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xB6B964", Offset = "0xB6B964", VA = "0xB6B964")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xB6C228", Offset = "0xB6C228", VA = "0xB6C228")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xB6C258", Offset = "0xB6C258", VA = "0xB6C258")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xB6C29C", Offset = "0xB6C29C", VA = "0xB6C29C")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xB6C2E0", Offset = "0xB6C2E0", VA = "0xB6C2E0")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xB6C318", Offset = "0xB6C318", VA = "0xB6C318")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xB6C364", Offset = "0xB6C364", VA = "0xB6C364")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xB6C3B0", Offset = "0xB6C3B0", VA = "0xB6C3B0")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xB6C3E0", Offset = "0xB6C3E0", VA = "0xB6C3E0")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xB6C424", Offset = "0xB6C424", VA = "0xB6C424")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xB6C468", Offset = "0xB6C468", VA = "0xB6C468")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xB6C4A0", Offset = "0xB6C4A0", VA = "0xB6C4A0")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xB6C4EC", Offset = "0xB6C4EC", VA = "0xB6C4EC")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xB6C538", Offset = "0xB6C538", VA = "0xB6C538")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xB6C614", Offset = "0xB6C614", VA = "0xB6C614")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xB6C128", Offset = "0xB6C128", VA = "0xB6C128")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xB6C6B0", Offset = "0xB6C6B0", VA = "0xB6C6B0")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xB6C6D4", Offset = "0xB6C6D4", VA = "0xB6C6D4")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xB6C710", Offset = "0xB6C710", VA = "0xB6C710")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20004AF")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4001E0B")]
		First,
		[Token(Token = "0x4001E0C")]
		Leftmost,
		[Token(Token = "0x4001E0D")]
		Rightmost,
		[Token(Token = "0x4001E0E")]
		FarthestLeft,
		[Token(Token = "0x4001E0F")]
		FarthestRight
	}

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xB6B780", Offset = "0xB6B780", VA = "0xB6B780")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xB6B928", Offset = "0xB6B928", VA = "0xB6B928")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xB6BAF0", Offset = "0xB6BAF0", VA = "0xB6BAF0")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xB6BEE0", Offset = "0xB6BEE0", VA = "0xB6BEE0")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x20001B1")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E2C8", Offset = "0x99E2C8")]
	public GameObject[] objects;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E300", Offset = "0x99E300")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xB6C74C", Offset = "0xB6C74C", VA = "0xB6C74C")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xB6C880", Offset = "0xB6C880", VA = "0xB6C880")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xB6C9E8", Offset = "0xB6C9E8", VA = "0xB6C9E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xB6C9EC", Offset = "0xB6C9EC", VA = "0xB6C9EC")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xB6CD6C", Offset = "0xB6CD6C", VA = "0xB6CD6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xB6D354", Offset = "0xB6D354", VA = "0xB6D354")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xB6D3B8", Offset = "0xB6D3B8", VA = "0xB6D3B8")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xB6D788", Offset = "0xB6D788", VA = "0xB6D788")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xB6D68C", Offset = "0xB6D68C", VA = "0xB6D68C")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xB6D8FC", Offset = "0xB6D8FC", VA = "0xB6D8FC")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xB6DB68", Offset = "0xB6DB68", VA = "0xB6DB68")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xB6D228", Offset = "0xB6D228", VA = "0xB6D228")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xB6CF58", Offset = "0xB6CF58", VA = "0xB6CF58")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xB6DB6C", Offset = "0xB6DB6C", VA = "0xB6DB6C")]
	private void Update()
	{
	}
}
[Token(Token = "0x20001B2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x998010", Offset = "0x998010")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xB6DDDC", Offset = "0xB6DDDC", VA = "0xB6DDDC")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xB6DF4C", Offset = "0xB6DF4C", VA = "0xB6DF4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xB6E0F8", Offset = "0xB6E0F8", VA = "0xB6E0F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xB6E1D0", Offset = "0xB6E1D0", VA = "0xB6E1D0")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x20001B3")]
public static class SteamVR_Events
{
	[Token(Token = "0x20004B0")]
	public abstract class Action
	{
		[Token(Token = "0x17000381")]
		public bool enabled
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xB6D344", Offset = "0xB6D344", VA = "0xB6D344")]
			set
			{
			}
		}

		[Token(Token = "0x6001D57")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xB6EDF8", Offset = "0xB6EDF8", VA = "0xB6EDF8")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004B1")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xB6E3B8", Offset = "0xB6E3B8", VA = "0xB6E3B8")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xB6EE00", Offset = "0xB6EE00", VA = "0xB6EE00", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004B2")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x6001D5C")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x6001D5D")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004B3")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x6001D5E")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6001D5F")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004B4")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x6001D60")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001D61")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x20004B5")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xB6E0F0", Offset = "0xB6E0F0", VA = "0xB6E0F0")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xB6E1C8", Offset = "0xB6E1C8", VA = "0xB6E1C8")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xB6EE30", Offset = "0xB6EE30", VA = "0xB6EE30")]
		public void Send()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xB6EDF0", Offset = "0xB6EDF0", VA = "0xB6EDF0")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20004B6")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x6001D66")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6001D67")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6001D68")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x6001D69")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20004B7")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x6001D6A")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6001D6B")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6001D6C")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6001D6D")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20004B8")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x6001D6E")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001D6F")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001D70")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6001D71")]
		public Event()
		{
		}
	}

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xB6E1D8", Offset = "0xB6E1D8", VA = "0xB6E1D8")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xB6CC1C", Offset = "0xB6CC1C", VA = "0xB6CC1C")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xB6E27C", Offset = "0xB6E27C", VA = "0xB6E27C")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xB6E320", Offset = "0xB6E320", VA = "0xB6E320")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xB6E408", Offset = "0xB6E408", VA = "0xB6E408")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xB6E4AC", Offset = "0xB6E4AC", VA = "0xB6E4AC")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xB6CB78", Offset = "0xB6CB78", VA = "0xB6CB78")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xB6E550", Offset = "0xB6E550", VA = "0xB6E550")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xB6E5F4", Offset = "0xB6E5F4", VA = "0xB6E5F4")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xB6E698", Offset = "0xB6E698", VA = "0xB6E698")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xB6E73C", Offset = "0xB6E73C", VA = "0xB6E73C")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xB6E7E0", Offset = "0xB6E7E0", VA = "0xB6E7E0")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xB6E878", Offset = "0xB6E878", VA = "0xB6E878")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xB6E91C", Offset = "0xB6E91C", VA = "0xB6E91C")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xB6E9C0", Offset = "0xB6E9C0", VA = "0xB6E9C0")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xB6CCC0", Offset = "0xB6CCC0", VA = "0xB6CCC0")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x20001B4")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004B9")]
	public struct Config
	{
		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xB6EE38", Offset = "0xB6EE38", VA = "0xB6EE38")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xB6F7E0", Offset = "0xB6F7E0", VA = "0xB6F7E0")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xB6F7E4", Offset = "0xB6F7E4", VA = "0xB6F7E4")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xB6FE00", Offset = "0xB6FE00", VA = "0xB6FE00")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xB700B4", Offset = "0xB700B4", VA = "0xB700B4")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xB70808", Offset = "0xB70808", VA = "0xB70808")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xB70928", Offset = "0xB70928", VA = "0xB70928")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xB7092C", Offset = "0xB7092C", VA = "0xB7092C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xB70BB8", Offset = "0xB70BB8", VA = "0xB70BB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xB70D2C", Offset = "0xB70D2C", VA = "0xB70D2C")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x20001B5")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xB70D34", Offset = "0xB70D34", VA = "0xB70D34")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xB70DF8", Offset = "0xB70DF8", VA = "0xB70DF8")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xB70EC0", Offset = "0xB70EC0", VA = "0xB70EC0")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xB70F28", Offset = "0xB70F28", VA = "0xB70F28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xB710F4", Offset = "0xB710F4", VA = "0xB710F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xB711BC", Offset = "0xB711BC", VA = "0xB711BC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xB714F4", Offset = "0xB714F4", VA = "0xB714F4")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x20001B6")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x998074", Offset = "0x998074")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xB71634", Offset = "0xB71634", VA = "0xB71634")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xB71E14", Offset = "0xB71E14", VA = "0xB71E14")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xB71FD4", Offset = "0xB71FD4", VA = "0xB71FD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xB720C4", Offset = "0xB720C4", VA = "0xB720C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xB721B0", Offset = "0xB721B0", VA = "0xB721B0")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x20001B7")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xB721D0", Offset = "0xB721D0", VA = "0xB721D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xB7226C", Offset = "0xB7226C", VA = "0xB7226C")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x20001B8")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xB728E0", Offset = "0xB728E0", VA = "0xB728E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xB732EC", Offset = "0xB732EC", VA = "0xB732EC")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xB737F8", Offset = "0xB737F8", VA = "0xB737F8")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x20001B9")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9997F0", Offset = "0x9997F0")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x17000382")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xB761A8", Offset = "0xB761A8", VA = "0xB761A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xB76214", Offset = "0xB76214", VA = "0xB76214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xB752A8", Offset = "0xB752A8", VA = "0xB752A8")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xB7533C", Offset = "0xB7533C", VA = "0xB7533C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xB75340", Offset = "0xB75340", VA = "0xB75340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xB761B0", Offset = "0xB761B0", VA = "0xB761B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x170000C2")]
	public static bool loading
	{
		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xB74470", Offset = "0xB74470", VA = "0xB74470")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C3")]
	public static float progress
	{
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xB74508", Offset = "0xB74508", VA = "0xB74508")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C4")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xB74620", Offset = "0xB74620", VA = "0xB74620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xB746FC", Offset = "0xB746FC", VA = "0xB746FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xB7470C", Offset = "0xB7470C", VA = "0xB7470C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xB74824", Offset = "0xB74824", VA = "0xB74824")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xB74950", Offset = "0xB74950", VA = "0xB74950")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xB75140", Offset = "0xB75140", VA = "0xB75140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xB747A4", Offset = "0xB747A4", VA = "0xB747A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7810", Offset = "0x9A7810")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xB74DB4", Offset = "0xB74DB4", VA = "0xB74DB4")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xB752D4", Offset = "0xB752D4", VA = "0xB752D4")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x20001BA")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E368", Offset = "0x99E368")]
	private float <scale>k__BackingField;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x170000C5")]
	public RenderTexture texture
	{
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xB7621C", Offset = "0xB7621C", VA = "0xB7621C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C6")]
	public float scale
	{
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xB762EC", Offset = "0xB762EC", VA = "0xB762EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7874", Offset = "0x9A7874")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xB762F4", Offset = "0xB762F4", VA = "0xB762F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7884", Offset = "0x9A7884")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xB762FC", Offset = "0xB762FC", VA = "0xB762FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xB764A8", Offset = "0xB764A8", VA = "0xB764A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xB780B0", Offset = "0xB780B0", VA = "0xB780B0")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xB77F78", Offset = "0xB77F78", VA = "0xB77F78")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xB784A4", Offset = "0xB784A4", VA = "0xB784A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xB77E8C", Offset = "0xB77E8C", VA = "0xB77E8C")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xB7843C", Offset = "0xB7843C", VA = "0xB7843C")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xB78474", Offset = "0xB78474", VA = "0xB78474")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xB78674", Offset = "0xB78674", VA = "0xB78674")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x20001BB")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x20004BB")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E378", Offset = "0x99E378")]
	public float scale;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E3B0", Offset = "0x99E3B0")]
	public float distance;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E3E8", Offset = "0x99E3E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E3E8", Offset = "0x99E3E8")]
	public float alpha;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E43C", Offset = "0x99E43C")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x170000C7")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xCA95E8", Offset = "0xCA95E8", VA = "0xCA95E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7894", Offset = "0x9A7894")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xCA9638", Offset = "0xCA9638", VA = "0xCA9638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A78A4", Offset = "0x9A78A4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public static string key
	{
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xCA9690", Offset = "0xCA9690", VA = "0xCA9690")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xCA9708", Offset = "0xCA9708", VA = "0xCA9708")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xCA9860", Offset = "0xCA9860", VA = "0xCA9860")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xCA9920", Offset = "0xCA9920", VA = "0xCA9920")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xCAA36C", Offset = "0xCAA36C", VA = "0xCAA36C")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xCAA478", Offset = "0xCAA478", VA = "0xCAA478")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xCAA638", Offset = "0xCAA638", VA = "0xCAA638")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x20001BC")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x998114", Offset = "0x998114")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x20004BC")]
	public enum Size
	{
		[Token(Token = "0x4001E37")]
		Calibrated,
		[Token(Token = "0x4001E38")]
		_400x300,
		[Token(Token = "0x4001E39")]
		_300x225,
		[Token(Token = "0x4001E3A")]
		_200x150
	}

	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999800", Offset = "0x999800")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x17000384")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xCAB8AC", Offset = "0xCAB8AC", VA = "0xCAB8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xCAB918", Offset = "0xCAB918", VA = "0xCAB918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xCAB704", Offset = "0xCAB704", VA = "0xCAB704")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xCAB77C", Offset = "0xCAB77C", VA = "0xCAB77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xCAB780", Offset = "0xCAB780", VA = "0xCAB780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xCAB8B4", Offset = "0xCAB8B4", VA = "0xCAB8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xCAA710", Offset = "0xCAA710", VA = "0xCAA710")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xCAAABC", Offset = "0xCAAABC", VA = "0xCAAABC")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xCAB320", Offset = "0xCAB320", VA = "0xCAB320")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xCAB5C0", Offset = "0xCAB5C0", VA = "0xCAB5C0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xCAB330", Offset = "0xCAB330", VA = "0xCAB330")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xCAB5D0", Offset = "0xCAB5D0", VA = "0xCAB5D0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xCAB684", Offset = "0xCAB684", VA = "0xCAB684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A78B4", Offset = "0x9A78B4")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xCAB730", Offset = "0xCAB730", VA = "0xCAB730")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x20001BD")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999810", Offset = "0x999810")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x17000386")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xCAE7CC", Offset = "0xCAE7CC", VA = "0xCAE7CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xCAE838", Offset = "0xCAE838", VA = "0xCAE838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xCAC188", Offset = "0xCAC188", VA = "0xCAC188")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xCAE60C", Offset = "0xCAE60C", VA = "0xCAE60C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xCAE610", Offset = "0xCAE610", VA = "0xCAE610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xCAE7D4", Offset = "0xCAE7D4", VA = "0xCAE7D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E45C", Offset = "0x99E45C")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x170000C9")]
	public static EVREye eye
	{
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xCAB920", Offset = "0xCAB920", VA = "0xCAB920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7918", Offset = "0x9A7918")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xCAB970", Offset = "0xCAB970", VA = "0xCAB970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7928", Offset = "0x9A7928")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xCAA210", Offset = "0xCAA210", VA = "0xCAA210")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xCAC020", Offset = "0xCAC020", VA = "0xCAC020")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xCAC070", Offset = "0xCAC070", VA = "0xCAC070")]
		set
		{
		}
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xCAB9C4", Offset = "0xCAB9C4", VA = "0xCAB9C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xCABA18", Offset = "0xCABA18", VA = "0xCABA18")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xCABA90", Offset = "0xCABA90", VA = "0xCABA90")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xCABD30", Offset = "0xCABD30", VA = "0xCABD30")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xCA9D68", Offset = "0xCA9D68", VA = "0xCA9D68")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xCABB04", Offset = "0xCABB04", VA = "0xCABB04")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xCABDDC", Offset = "0xCABDDC", VA = "0xCABDDC")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xCABFCC", Offset = "0xCABFCC", VA = "0xCABFCC")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xCAC108", Offset = "0xCAC108", VA = "0xCAC108")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7938", Offset = "0x9A7938")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xCAC1B4", Offset = "0xCAC1B4", VA = "0xCAC1B4")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xCAC304", Offset = "0xCAC304", VA = "0xCAC304")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xCAC55C", Offset = "0xCAC55C", VA = "0xCAC55C")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xCAC564", Offset = "0xCAC564", VA = "0xCAC564")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xCAC6B8", Offset = "0xCAC6B8", VA = "0xCAC6B8")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xCADA28", Offset = "0xCADA28", VA = "0xCADA28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xCADCBC", Offset = "0xCADCBC", VA = "0xCADCBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xCADE80", Offset = "0xCADE80", VA = "0xCADE80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xCAE008", Offset = "0xCAE008", VA = "0xCAE008")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xCAE0E8", Offset = "0xCAE0E8", VA = "0xCAE0E8")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xCAE0EC", Offset = "0xCAE0EC", VA = "0xCAE0EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xCAE4F8", Offset = "0xCAE4F8", VA = "0xCAE4F8")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x20001BE")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x20004BF")]
	public class RenderModel
	{
		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2824", Offset = "0x9A2824")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2834", Offset = "0x9A2834")]
		private Material <material>k__BackingField;

		[Token(Token = "0x17000388")]
		public Mesh mesh
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xCB2404", Offset = "0xCB2404", VA = "0xCB2404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB284", Offset = "0x9AB284")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xCB240C", Offset = "0xCB240C", VA = "0xCB240C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB294", Offset = "0x9AB294")]
			private set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public Material material
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xCB2414", Offset = "0xCB2414", VA = "0xCB2414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB2A4", Offset = "0x9AB2A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xCB241C", Offset = "0xCB241C", VA = "0xCB241C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB2B4", Offset = "0x9AB2B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xCB0EEC", Offset = "0xCB0EEC", VA = "0xCB0EEC")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x20004C0")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x1700038A")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xCAF998", Offset = "0xCAF998", VA = "0xCAF998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xCB2424", Offset = "0xCB2424", VA = "0xCB2424", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xCAF2BC", Offset = "0xCAF2BC", VA = "0xCAF2BC")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999820", Offset = "0x999820")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x1700038B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xCB2390", Offset = "0xCB2390", VA = "0xCB2390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0xCB23FC", Offset = "0xCB23FC", VA = "0xCB23FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xCAEC88", Offset = "0xCAEC88", VA = "0xCAEC88")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xCB18DC", Offset = "0xCB18DC", VA = "0xCB18DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xCB19B8", Offset = "0xCB19B8", VA = "0xCB19B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xCB18F8", Offset = "0xCB18F8", VA = "0xCB18F8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xCB2398", Offset = "0xCB2398", VA = "0xCB2398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999830", Offset = "0x999830")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x1700038D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xCB1868", Offset = "0xCB1868", VA = "0xCB1868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xCB18D4", Offset = "0xCB18D4", VA = "0xCB18D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xCB0F3C", Offset = "0xCB0F3C", VA = "0xCB0F3C")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xCB16C4", Offset = "0xCB16C4", VA = "0xCB16C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xCB16C8", Offset = "0xCB16C8", VA = "0xCB16C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xCB1870", Offset = "0xCB1870", VA = "0xCB1870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000A6F")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E46C", Offset = "0x99E46C")]
	public string modelOverride;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E4A4", Offset = "0x99E4A4")]
	public Shader shader;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E4DC", Offset = "0x99E4DC")]
	public bool verbose;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E514", Offset = "0x99E514")]
	public bool createComponents;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E54C", Offset = "0x99E54C")]
	public bool updateDynamically;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x4000A76")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E584", Offset = "0x99E584")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static System.Collections.Hashtable models;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static System.Collections.Hashtable materials;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x170000CC")]
	public string renderModelName
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xCAE840", Offset = "0xCAE840", VA = "0xCAE840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A799C", Offset = "0x9A799C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xCAE848", Offset = "0xCAE848", VA = "0xCAE848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A79AC", Offset = "0x9A79AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xCAE850", Offset = "0xCAE850", VA = "0xCAE850")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xCAEA98", Offset = "0xCAEA98", VA = "0xCAEA98")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xCAEBD4", Offset = "0xCAEBD4", VA = "0xCAEBD4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xCAE8CC", Offset = "0xCAE8CC", VA = "0xCAE8CC")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xCAEBEC", Offset = "0xCAEBEC", VA = "0xCAEBEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A79BC", Offset = "0x9A79BC")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xCAECB4", Offset = "0xCAECB4", VA = "0xCAECB4")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xCAFF74", Offset = "0xCAFF74", VA = "0xCAFF74")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xCB0E78", Offset = "0xCB0E78", VA = "0xCB0E78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7A20", Offset = "0x9A7A20")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xCB0F68", Offset = "0xCB0F68", VA = "0xCB0F68")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xCAF17C", Offset = "0xCAF17C", VA = "0xCAF17C")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xCAF2C4", Offset = "0xCAF2C4", VA = "0xCAF2C4")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xCB100C", Offset = "0xCB100C", VA = "0xCB100C")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xCB1184", Offset = "0xCB1184", VA = "0xCB1184")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xCB12A0", Offset = "0xCB12A0", VA = "0xCB12A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xCB12F8", Offset = "0xCB12F8", VA = "0xCB12F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xCAFB10", Offset = "0xCAFB10", VA = "0xCAFB10")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xCB1598", Offset = "0xCB1598", VA = "0xCB1598")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xCB0A68", Offset = "0xCB0A68", VA = "0xCB0A68")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xCB0A74", Offset = "0xCB0A74", VA = "0xCB0A74")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xCB0C88", Offset = "0xCB0C88", VA = "0xCB0C88")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x20001BF")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x20004C3")]
	public enum CellSize
	{
		[Token(Token = "0x4001E52")]
		x1024,
		[Token(Token = "0x4001E53")]
		x64,
		[Token(Token = "0x4001E54")]
		x32,
		[Token(Token = "0x4001E55")]
		x16,
		[Token(Token = "0x4001E56")]
		x8
	}

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xCB249C", Offset = "0xCB249C", VA = "0xCB249C")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xCB2508", Offset = "0xCB2508", VA = "0xCB2508")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xCB2564", Offset = "0xCB2564", VA = "0xCB2564")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xCB2950", Offset = "0xCB2950", VA = "0xCB2950")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xCB29C8", Offset = "0xCB29C8", VA = "0xCB29C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xCB29DC", Offset = "0xCB29DC", VA = "0xCB29DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xCB29E0", Offset = "0xCB29E0", VA = "0xCB29E0")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x20001C0")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xCB29F4", Offset = "0xCB29F4", VA = "0xCB29F4")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xCB2DA0", Offset = "0xCB2DA0", VA = "0xCB2DA0")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xCB2E30", Offset = "0xCB2E30", VA = "0xCB2E30")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x20001C1")]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUIText text;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color fadeColor;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeDuration;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private double lastUpdate;

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xCB2E38", Offset = "0xCB2E38", VA = "0xCB2E38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xCB2F8C", Offset = "0xCB2F8C", VA = "0xCB2F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xCB31E0", Offset = "0xCB31E0", VA = "0xCB31E0")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x20001C2")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xCB38E0", Offset = "0xCB38E0", VA = "0xCB38E0")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xCB3E94", Offset = "0xCB3E94", VA = "0xCB3E94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xCB3F5C", Offset = "0xCB3F5C", VA = "0xCB3F5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xCB3A94", Offset = "0xCB3A94", VA = "0xCB3A94")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xCB4024", Offset = "0xCB4024", VA = "0xCB4024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xCB48EC", Offset = "0xCB48EC", VA = "0xCB48EC")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x20001C3")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x20004C4")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2844", Offset = "0x9A2844")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2854", Offset = "0x9A2854")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x1700038F")]
		public bool undistorted
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xCB59D4", Offset = "0xCB59D4", VA = "0xCB59D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB364", Offset = "0x9AB364")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xCB59DC", Offset = "0xCB59DC", VA = "0xCB59DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB374", Offset = "0x9AB374")]
			private set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public uint deviceIndex
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xCB59E8", Offset = "0xCB59E8", VA = "0xCB59E8")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000391")]
		public bool hasCamera
		{
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xCB4E84", Offset = "0xCB4E84", VA = "0xCB4E84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000392")]
		public bool hasTracking
		{
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0xCB52C8", Offset = "0xCB52C8", VA = "0xCB52C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000393")]
		public uint frameId
		{
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0xCB5D90", Offset = "0xCB5D90", VA = "0xCB5D90")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000394")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0xCB5DB4", Offset = "0xCB5DB4", VA = "0xCB5DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB384", Offset = "0x9AB384")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xCB5DC0", Offset = "0xCB5DC0", VA = "0xCB5DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB394", Offset = "0x9AB394")]
			private set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xCB5DCC", Offset = "0xCB5DCC", VA = "0xCB5DCC")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x17000396")]
		public Texture2D texture
		{
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0xCB52A4", Offset = "0xCB52A4", VA = "0xCB52A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xCB52EC", Offset = "0xCB52EC", VA = "0xCB52EC")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000398")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0xCB5DD4", Offset = "0xCB5DD4", VA = "0xCB5DD4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000399")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0xCB5E24", Offset = "0xCB5E24", VA = "0xCB5E24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xCB54B4", Offset = "0xCB54B4", VA = "0xCB54B4")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xCB5E78", Offset = "0xCB5E78", VA = "0xCB5E78")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xCB4E6C", Offset = "0xCB4E6C", VA = "0xCB4E6C")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xCB4EF8", Offset = "0xCB4EF8", VA = "0xCB4EF8")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xCB5A08", Offset = "0xCB5A08", VA = "0xCB5A08")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x20004C5")]
	private class VideoStream
	{
		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2864", Offset = "0x9A2864")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x1700039A")]
		public uint deviceIndex
		{
			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0xCB5870", Offset = "0xCB5870", VA = "0xCB5870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB3A4", Offset = "0x9AB3A4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0xCB5878", Offset = "0xCB5878", VA = "0xCB5878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB3B4", Offset = "0x9AB3B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public ulong handle
		{
			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0xCB5880", Offset = "0xCB5880", VA = "0xCB5880")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700039C")]
		public bool hasCamera
		{
			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0xCB5888", Offset = "0xCB5888", VA = "0xCB5888")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xCB57C4", Offset = "0xCB57C4", VA = "0xCB57C4")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xCB5890", Offset = "0xCB5890", VA = "0xCB5890")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xCB5930", Offset = "0xCB5930", VA = "0xCB5930")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xCB5358", Offset = "0xCB5358", VA = "0xCB5358")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xCB5510", Offset = "0xCB5510", VA = "0xCB5510")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xCB4E58", Offset = "0xCB4E58", VA = "0xCB4E58")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xCB566C", Offset = "0xCB566C", VA = "0xCB566C")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xCB5868", Offset = "0xCB5868", VA = "0xCB5868")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x20001C4")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x20004C6")]
	public enum EIndex
	{
		[Token(Token = "0x4001E63")]
		None = -1,
		[Token(Token = "0x4001E64")]
		Hmd,
		[Token(Token = "0x4001E65")]
		Device1,
		[Token(Token = "0x4001E66")]
		Device2,
		[Token(Token = "0x4001E67")]
		Device3,
		[Token(Token = "0x4001E68")]
		Device4,
		[Token(Token = "0x4001E69")]
		Device5,
		[Token(Token = "0x4001E6A")]
		Device6,
		[Token(Token = "0x4001E6B")]
		Device7,
		[Token(Token = "0x4001E6C")]
		Device8,
		[Token(Token = "0x4001E6D")]
		Device9,
		[Token(Token = "0x4001E6E")]
		Device10,
		[Token(Token = "0x4001E6F")]
		Device11,
		[Token(Token = "0x4001E70")]
		Device12,
		[Token(Token = "0x4001E71")]
		Device13,
		[Token(Token = "0x4001E72")]
		Device14,
		[Token(Token = "0x4001E73")]
		Device15
	}

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E594", Offset = "0x99E594")]
	public Transform origin;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E5CC", Offset = "0x99E5CC")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x170000CD")]
	public bool isValid
	{
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xCB7250", Offset = "0xCB7250", VA = "0xCB7250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7A84", Offset = "0x9A7A84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xCB7258", Offset = "0xCB7258", VA = "0xCB7258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7A94", Offset = "0x9A7A94")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xCB7264", Offset = "0xCB7264", VA = "0xCB7264")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xCB74D4", Offset = "0xCB74D4", VA = "0xCB74D4")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xCB7590", Offset = "0xCB7590", VA = "0xCB7590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xCB763C", Offset = "0xCB763C", VA = "0xCB763C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xCB7674", Offset = "0xCB7674", VA = "0xCB7674")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x20001C5")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xCB775C", Offset = "0xCB775C", VA = "0xCB775C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xCB77F8", Offset = "0xCB77F8", VA = "0xCB77F8")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x20001C6")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x20004C7")]
	public struct RigidTransform
	{
		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x1700039D")]
		public static RigidTransform identity
		{
			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0xCB8574", Offset = "0xCB8574", VA = "0xCB8574")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xCB8644", Offset = "0xCB8644", VA = "0xCB8644")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xA4FCD0", Offset = "0xA4FCD0", VA = "0xA4FCD0")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xA4FCE4", Offset = "0xA4FCE4", VA = "0xA4FCE4")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xA4FCEC", Offset = "0xA4FCEC", VA = "0xA4FCEC")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xA4FCF4", Offset = "0xA4FCF4", VA = "0xA4FCF4")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xA4FD30", Offset = "0xA4FD30", VA = "0xA4FD30")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xA4FD74", Offset = "0xA4FD74", VA = "0xA4FD74")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xA4FD7C", Offset = "0xA4FD7C", VA = "0xA4FD7C")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xA4FD84", Offset = "0xA4FD84", VA = "0xA4FD84", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xA4FD8C", Offset = "0xA4FD8C", VA = "0xA4FD8C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xCB8E14", Offset = "0xCB8E14", VA = "0xCB8E14")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xCB8F4C", Offset = "0xCB8F4C", VA = "0xCB8F4C")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xCB9084", Offset = "0xCB9084", VA = "0xCB9084")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xA4FDC8", Offset = "0xA4FDC8", VA = "0xA4FDC8")]
		public void Inverse()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xA4FDD0", Offset = "0xA4FDD0", VA = "0xA4FDD0")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xA4FDD8", Offset = "0xA4FDD8", VA = "0xA4FDD8")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xA4FE20", Offset = "0xA4FE20", VA = "0xA4FE20")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xA4FE28", Offset = "0xA4FE28", VA = "0xA4FE28")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xCB96B0", Offset = "0xCB96B0", VA = "0xCB96B0")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xCB96B4", Offset = "0xCB96B4", VA = "0xCB96B4")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xA4FE30", Offset = "0xA4FE30", VA = "0xA4FE30")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x20004C8")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xCB7800", Offset = "0xCB7800", VA = "0xCB7800")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xCB79CC", Offset = "0xCB79CC", VA = "0xCB79CC")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xCB7A24", Offset = "0xCB7A24", VA = "0xCB7A24")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xCB7A34", Offset = "0xCB7A34", VA = "0xCB7A34")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xCB7A44", Offset = "0xCB7A44", VA = "0xCB7A44")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xCB7B48", Offset = "0xCB7B48", VA = "0xCB7B48")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xCB7B58", Offset = "0xCB7B58", VA = "0xCB7B58")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xCB7B68", Offset = "0xCB7B68", VA = "0xCB7B68")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xCB7B84", Offset = "0xCB7B84", VA = "0xCB7B84")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xCB7BD0", Offset = "0xCB7BD0", VA = "0xCB7BD0")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xCB7BE0", Offset = "0xCB7BE0", VA = "0xCB7BE0")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xCB7C24", Offset = "0xCB7C24", VA = "0xCB7C24")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xCB7CE0", Offset = "0xCB7CE0", VA = "0xCB7CE0")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xCB7EAC", Offset = "0xCB7EAC", VA = "0xCB7EAC")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xCB7EE8", Offset = "0xCB7EE8", VA = "0xCB7EE8")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xCB8020", Offset = "0xCB8020", VA = "0xCB8020")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xCAC898", Offset = "0xCAC898", VA = "0xCAC898")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x20001C7")]
public class DeviceClient : MonoBehaviour
{
	[Token(Token = "0x20004C9")]
	public delegate void OnConnectSuccessDelegate();

	[Token(Token = "0x20004CA")]
	public delegate void OnConnectFailDelegate();

	[Token(Token = "0x20004CB")]
	private delegate void ProcessPacketDelegate(DevicePacketData packetData);

	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999840", Offset = "0x999840")]
	private sealed class <DelayDeviceRestore>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDelay;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DeviceClient <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0xCFC854", Offset = "0xCFC854", VA = "0xCFC854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xCFC8C0", Offset = "0xCFC8C0", VA = "0xCFC8C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xCFC420", Offset = "0xCFC420", VA = "0xCFC420")]
		[DebuggerHidden]
		public <DelayDeviceRestore>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xCFC784", Offset = "0xCFC784", VA = "0xCFC784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xCFC788", Offset = "0xCFC788", VA = "0xCFC788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xCFC85C", Offset = "0xCFC85C", VA = "0xCFC85C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnConnectSuccessDelegate OnConnectSuccessCallback;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OnConnectFailDelegate OnConnectFailCallback;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRDeviceInteract _deviceInteract;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Socket _socket;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _ipAddress;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _port;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private byte[] _receiveBuffer;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _receiveBytes;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Queue<string> _packetQ;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ProcessPacketDelegate[] _OnProcessPacketCallbacks;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _needCallDeviceRestore;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E5DC", Offset = "0x99E5DC")]
	private VROverlayClient <_overlayClient>k__BackingField;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _enableProcessPacket;

	[Token(Token = "0x170000CE")]
	public VROverlayClient _overlayClient
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xCFA3C0", Offset = "0xCFA3C0", VA = "0xCFA3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7AD4", Offset = "0x9A7AD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xCFA3C8", Offset = "0xCFA3C8", VA = "0xCFA3C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7AE4", Offset = "0x9A7AE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xCFA3D0", Offset = "0xCFA3D0", VA = "0xCFA3D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xCFAA98", Offset = "0xCFAA98", VA = "0xCFAA98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xCFAC78", Offset = "0xCFAC78", VA = "0xCFAC78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xCFACE4", Offset = "0xCFACE4", VA = "0xCFACE4")]
	private void OnConnect(IAsyncResult ar)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xCFAE0C", Offset = "0xCFAE0C", VA = "0xCFAE0C")]
	private void StartReceiveData()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xCFB230", Offset = "0xCFB230", VA = "0xCFB230")]
	private void OnReceive(IAsyncResult ar)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xCFB32C", Offset = "0xCFB32C", VA = "0xCFB32C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xCFB37C", Offset = "0xCFB37C", VA = "0xCFB37C")]
	private void ProcessPacket()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xCFB8E4", Offset = "0xCFB8E4", VA = "0xCFB8E4")]
	private void OnProcessPacket_None(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xCFB8F0", Offset = "0xCFB8F0", VA = "0xCFB8F0")]
	private void OnProcessPacket_SC_Ack_ChangeHMDLauncher(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xCFB97C", Offset = "0xCFB97C", VA = "0xCFB97C")]
	private void OnProcessPacket_SC_Req_ChangeVRApp(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xCFBA94", Offset = "0xCFBA94", VA = "0xCFBA94")]
	private void OnProcessPacket_SC_Req_QuitVRApp(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xCFBB0C", Offset = "0xCFBB0C", VA = "0xCFBB0C")]
	private void OnProcessPacket_SC_Ack_ShowHideOverlay(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xCFBBC4", Offset = "0xCFBBC4", VA = "0xCFBBC4")]
	private void OnProcessPacket_SC_Ack_SendVGSInfo(DevicePacketData receivePacketData)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xCFBE10", Offset = "0xCFBE10", VA = "0xCFBE10")]
	private void SendPacket(string sendJsonData)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xCFBE8C", Offset = "0xCFBE8C", VA = "0xCFBE8C")]
	public void SendPacket_CS_Req_ChangeHMDLauncher()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xCFBFB8", Offset = "0xCFBFB8", VA = "0xCFBFB8")]
	public void SendPacket_CS_Ack_ChangeVRApp()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xCFC0E4", Offset = "0xCFC0E4", VA = "0xCFC0E4")]
	public void SendPacket_CS_Req_ShowHideOverlay(string request, string appName, string appFolderName, string windowHandle)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xCFC254", Offset = "0xCFC254", VA = "0xCFC254")]
	public void SendPacket_CS_Ack_ShowHideOverlay(string request, string result, string data)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xCFC364", Offset = "0xCFC364", VA = "0xCFC364")]
	public void SendPacket_CS_Ack_ErrorCode(eErrorCodeType errorCode)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xCFAEB8", Offset = "0xCFAEB8", VA = "0xCFAEB8")]
	private void SendPacket_CS_Ack_GetVersionInfo()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xCFAF78", Offset = "0xCFAF78", VA = "0xCFAF78")]
	private void SendPacket_CS_Req_SendVGSInfo()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xCFB498", Offset = "0xCFB498", VA = "0xCFB498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7AF4", Offset = "0x9A7AF4")]
	private IEnumerator DelayDeviceRestore(float fDelay)
	{
		return null;
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xCFC44C", Offset = "0xCFC44C", VA = "0xCFC44C")]
	public void SetDeviceCallback(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack, VRDeviceChange2.OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xCFC540", Offset = "0xCFC540", VA = "0xCFC540")]
	public void SetDeviceBeforeChangeToNoneCallBack(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xCFC5E8", Offset = "0xCFC5E8", VA = "0xCFC5E8")]
	public void SetDeviceChangedToOpenVRCallBack(VRDeviceChange2.OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xCFC690", Offset = "0xCFC690", VA = "0xCFC690")]
	public DeviceClient()
	{
	}
}
[Token(Token = "0x20001C8")]
public class StoveVRSDK : MonoBehaviour
{
	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999850", Offset = "0x999850")]
	private sealed class <WaitWhileConnectServer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoveVRSDK <>4__this;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0xCBA1F8", Offset = "0xCBA1F8", VA = "0xCBA1F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0xCBA264", Offset = "0xCBA264", VA = "0xCBA264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xCB9E78", Offset = "0xCB9E78", VA = "0xCB9E78")]
		[DebuggerHidden]
		public <WaitWhileConnectServer>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xCBA114", Offset = "0xCBA114", VA = "0xCBA114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xCBA118", Offset = "0xCBA118", VA = "0xCBA118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xCBA200", Offset = "0xCBA200", VA = "0xCBA200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StoveVRSDK _instance;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _isFirstTimeAwake;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DeviceClient _deviceClient;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera[] _playerCameras;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VROverlayClient _overlayClient;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E5EC", Offset = "0x99E5EC")]
	private string <_versionInfo>k__BackingField;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isConnectSuccessToServer;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _isConnectFailToServer;

	[Token(Token = "0x170000CF")]
	public static StoveVRSDK instance
	{
		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xCB98D8", Offset = "0xCB98D8", VA = "0xCB98D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D0")]
	public string _versionInfo
	{
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xCB9AC8", Offset = "0xCB9AC8", VA = "0xCB9AC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7B58", Offset = "0x9A7B58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xCB9AD0", Offset = "0xCB9AD0", VA = "0xCB9AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7B68", Offset = "0x9A7B68")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xCB9AD8", Offset = "0xCB9AD8", VA = "0xCB9AD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xCB9D7C", Offset = "0xCB9D7C", VA = "0xCB9D7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xCB9E58", Offset = "0xCB9E58", VA = "0xCB9E58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xCB99D4", Offset = "0xCB99D4", VA = "0xCB99D4")]
	private static StoveVRSDK CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xCB9E5C", Offset = "0xCB9E5C", VA = "0xCB9E5C")]
	public void GetReady()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xCB9E60", Offset = "0xCB9E60", VA = "0xCB9E60")]
	public void OnConnectSuccessToServer()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xCB9E6C", Offset = "0xCB9E6C", VA = "0xCB9E6C")]
	public void OnConnectFailToServer()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xCB9DD8", Offset = "0xCB9DD8", VA = "0xCB9DD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7B78", Offset = "0x9A7B78")]
	private IEnumerator WaitWhileConnectServer()
	{
		return null;
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xCB9EA4", Offset = "0xCB9EA4", VA = "0xCB9EA4")]
	public void SetAppName(string appName, string appFolderName)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xCB9EE8", Offset = "0xCB9EE8", VA = "0xCB9EE8")]
	public void SetOverlayCallBack(VROverlayClient.OnOverlayDelegate OnOverlayBeforeShowCallBack, VROverlayClient.OnOverlayDelegate OnOverlayAfterHideCallBack)
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xCB9FCC", Offset = "0xCB9FCC", VA = "0xCB9FCC")]
	public void UnSetOverlayCallBack(VROverlayClient.OnOverlayDelegate OnOverlayBeforeShowCallBack, VROverlayClient.OnOverlayDelegate OnOverlayAfterHideCallBack)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xCBA0B0", Offset = "0xCBA0B0", VA = "0xCBA0B0")]
	private void QuitApplication()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xCBA0B8", Offset = "0xCBA0B8", VA = "0xCBA0B8")]
	public StoveVRSDK()
	{
	}
}
[Token(Token = "0x20001C9")]
public class VRBlurOptimized : VRPostEffectsBase
{
	[Token(Token = "0x20004CE")]
	public enum BlurType
	{
		[Token(Token = "0x4001E7F")]
		StandardGauss,
		[Token(Token = "0x4001E80")]
		SgxGauss
	}

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E5FC", Offset = "0x99E5FC")]
	public int downsample;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E614", Offset = "0x99E614")]
	public float blurSize;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E62C", Offset = "0x99E62C")]
	public int blurIterations;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public BlurType blurType;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader blurShader;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material blurMaterial;

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xC86038", Offset = "0xC86038", VA = "0xC86038", Slot = "4")]
	public override bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xC86624", Offset = "0xC86624", VA = "0xC86624")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xC866D4", Offset = "0xC866D4", VA = "0xC866D4")]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xC86A94", Offset = "0xC86A94", VA = "0xC86A94")]
	public VRBlurOptimized()
	{
	}
}
[Token(Token = "0x20001CA")]
public class VRDeviceChange2 : MonoBehaviour
{
	[Token(Token = "0x20004CF")]
	public enum eVRDeviceType
	{
		[Token(Token = "0x4001E82")]
		None,
		[Token(Token = "0x4001E83")]
		OpenVR
	}

	[Token(Token = "0x20004D0")]
	public delegate void OnDeviceChangedDelegate();

	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999860", Offset = "0x999860")]
	private sealed class <ChangeSteamVRStateToTransition>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRDeviceChange2 <>4__this;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0xC8748C", Offset = "0xC8748C", VA = "0xC8748C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xC874F8", Offset = "0xC874F8", VA = "0xC874F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xC86BE4", Offset = "0xC86BE4", VA = "0xC86BE4")]
		[DebuggerHidden]
		public <ChangeSteamVRStateToTransition>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xC87230", Offset = "0xC87230", VA = "0xC87230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xC87234", Offset = "0xC87234", VA = "0xC87234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xC87494", Offset = "0xC87494", VA = "0xC87494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999870", Offset = "0x999870")]
	private sealed class <ChangeSteamVRStateToRestore>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bForce;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRDeviceChange2 <>4__this;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xC871BC", Offset = "0xC871BC", VA = "0xC871BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xC87228", Offset = "0xC87228", VA = "0xC87228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xC86CD4", Offset = "0xC86CD4", VA = "0xC86CD4")]
		[DebuggerHidden]
		public <ChangeSteamVRStateToRestore>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xC86D0C", Offset = "0xC86D0C", VA = "0xC86D0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xC86D10", Offset = "0xC86D10", VA = "0xC86D10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xC871C4", Offset = "0xC871C4", VA = "0xC871C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isSteamVRTransitionState;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OnDeviceChangedDelegate OnDeviceBeforeChangeToOpenVRCallBack;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OnDeviceChangedDelegate OnDeviceBeforeChangeToNoneCallBack;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnDeviceChangedDelegate OnDeviceChangedToOpenVRCallBack;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnDeviceChangedDelegate OnDeviceChangedToNoneCallBack;

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xC86B34", Offset = "0xC86B34", VA = "0xC86B34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xC86B38", Offset = "0xC86B38", VA = "0xC86B38")]
	public void StartChangeSteamVRStateToTransition()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xC86B64", Offset = "0xC86B64", VA = "0xC86B64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7BDC", Offset = "0x9A7BDC")]
	private IEnumerator ChangeSteamVRStateToTransition()
	{
		return null;
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xC86C10", Offset = "0xC86C10", VA = "0xC86C10")]
	public void StartChangeSteamVRStateToRestore(bool bForce = false)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xC86C40", Offset = "0xC86C40", VA = "0xC86C40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A7C40", Offset = "0x9A7C40")]
	private IEnumerator ChangeSteamVRStateToRestore(bool bForce)
	{
		return null;
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xC86D00", Offset = "0xC86D00", VA = "0xC86D00")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xC86D04", Offset = "0xC86D04", VA = "0xC86D04")]
	public VRDeviceChange2()
	{
	}
}
[Token(Token = "0x20001CB")]
public class VRDeviceInteract : MonoBehaviour
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E644", Offset = "0x99E644")]
	private VRDeviceChange2 <_deviceChange>k__BackingField;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isDeviceNone;

	[Token(Token = "0x170000D1")]
	public VRDeviceChange2 _deviceChange
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xC87554", Offset = "0xC87554", VA = "0xC87554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7CA4", Offset = "0x9A7CA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xC8755C", Offset = "0xC8755C", VA = "0xC8755C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7CB4", Offset = "0x9A7CB4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xC87564", Offset = "0xC87564", VA = "0xC87564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xC877D4", Offset = "0xC877D4", VA = "0xC877D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xC877D8", Offset = "0xC877D8", VA = "0xC877D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xC877DC", Offset = "0xC877DC", VA = "0xC877DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xC877F4", Offset = "0xC877F4", VA = "0xC877F4")]
	public void OnDeviceBeforeChangeToOpenVR()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xC877F8", Offset = "0xC877F8", VA = "0xC877F8")]
	public void OnDeviceBeforeChangeToNone()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xC877FC", Offset = "0xC877FC", VA = "0xC877FC")]
	public void OnDeviceChangedToOpenVR()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xC87804", Offset = "0xC87804", VA = "0xC87804")]
	public void OnDeviceChangedToNone()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xC87810", Offset = "0xC87810", VA = "0xC87810")]
	public void StartChangeSteamVRStateToTransition()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xC8784C", Offset = "0xC8784C", VA = "0xC8784C")]
	public void StartChangeSteamVRStateToRestore()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xC8788C", Offset = "0xC8788C", VA = "0xC8788C")]
	public VRDeviceInteract()
	{
	}
}
[Token(Token = "0x20001CC")]
public class VROverlayBase : MonoBehaviour
{
	[Token(Token = "0x20004D3")]
	public enum eControllerPositionType
	{
		[Token(Token = "0x4001E8C")]
		Right,
		[Token(Token = "0x4001E8D")]
		Left
	}

	[Token(Token = "0x20004D4")]
	public enum eControllerButtonType
	{
		[Token(Token = "0x4001E8F")]
		Trigger,
		[Token(Token = "0x4001E90")]
		Menu,
		[Token(Token = "0x4001E91")]
		Touchpad,
		[Token(Token = "0x4001E92")]
		Grip,
		[Token(Token = "0x4001E93")]
		Max
	}

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E654", Offset = "0x99E654")]
	private Transform <_cameraTransform>k__BackingField;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E664", Offset = "0x99E664")]
	private string <_overlayKey>k__BackingField;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E674", Offset = "0x99E674")]
	private float <_scale>k__BackingField;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E684", Offset = "0x99E684")]
	private float <_additionalHeight>k__BackingField;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E694", Offset = "0x99E694")]
	private float <_distanceFromCamera>k__BackingField;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E6A4", Offset = "0x99E6A4")]
	private bool <_attachCamera>k__BackingField;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E6B4", Offset = "0x99E6B4")]
	private string <_windowHandle>k__BackingField;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E6C4", Offset = "0x99E6C4")]
	private string <_overlayBGImageFile>k__BackingField;

	[Token(Token = "0x170000D2")]
	public Transform _cameraTransform
	{
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xC87894", Offset = "0xC87894", VA = "0xC87894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7CC4", Offset = "0x9A7CC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xC8789C", Offset = "0xC8789C", VA = "0xC8789C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7CD4", Offset = "0x9A7CD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public string _overlayKey
	{
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xC878A4", Offset = "0xC878A4", VA = "0xC878A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7CE4", Offset = "0x9A7CE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xC878AC", Offset = "0xC878AC", VA = "0xC878AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7CF4", Offset = "0x9A7CF4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public float _scale
	{
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xC878B4", Offset = "0xC878B4", VA = "0xC878B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D04", Offset = "0x9A7D04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xC878BC", Offset = "0xC878BC", VA = "0xC878BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D14", Offset = "0x9A7D14")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public float _additionalHeight
	{
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xC878C4", Offset = "0xC878C4", VA = "0xC878C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D24", Offset = "0x9A7D24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xC878CC", Offset = "0xC878CC", VA = "0xC878CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D34", Offset = "0x9A7D34")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public float _distanceFromCamera
	{
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xC878D4", Offset = "0xC878D4", VA = "0xC878D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D44", Offset = "0x9A7D44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xC878DC", Offset = "0xC878DC", VA = "0xC878DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D54", Offset = "0x9A7D54")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public bool _attachCamera
	{
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xC878E4", Offset = "0xC878E4", VA = "0xC878E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D64", Offset = "0x9A7D64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xC878EC", Offset = "0xC878EC", VA = "0xC878EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D74", Offset = "0x9A7D74")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public string _windowHandle
	{
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xC878F8", Offset = "0xC878F8", VA = "0xC878F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D84", Offset = "0x9A7D84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xC87900", Offset = "0xC87900", VA = "0xC87900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7D94", Offset = "0x9A7D94")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public string _overlayBGImageFile
	{
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC87908", Offset = "0xC87908", VA = "0xC87908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7DA4", Offset = "0x9A7DA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xC87910", Offset = "0xC87910", VA = "0xC87910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7DB4", Offset = "0x9A7DB4")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xC87918", Offset = "0xC87918", VA = "0xC87918")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xC87994", Offset = "0xC87994", VA = "0xC87994")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xC87998", Offset = "0xC87998", VA = "0xC87998")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xC8799C", Offset = "0xC8799C", VA = "0xC8799C", Slot = "4")]
	public virtual void GetControllerButtonPressByTriggerNMenu(ref bool[] isPressedTrigger, ref bool[] isPressedMenu)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xC879A0", Offset = "0xC879A0", VA = "0xC879A0", Slot = "5")]
	public virtual void RequestShowOverlay()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xC879A4", Offset = "0xC879A4", VA = "0xC879A4", Slot = "6")]
	public virtual bool FindOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xC879AC", Offset = "0xC879AC", VA = "0xC879AC", Slot = "7")]
	public virtual string GetOverlayError()
	{
		return null;
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xC879F4", Offset = "0xC879F4", VA = "0xC879F4", Slot = "8")]
	public virtual void ClearOverlay()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xC879F8", Offset = "0xC879F8", VA = "0xC879F8", Slot = "9")]
	public virtual void ProcessOverlayBeforeShow()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xC879FC", Offset = "0xC879FC", VA = "0xC879FC", Slot = "10")]
	public virtual void MakeHMDMatrix()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xC87A00", Offset = "0xC87A00", VA = "0xC87A00", Slot = "11")]
	public virtual void SetupOverlay()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xC87A04", Offset = "0xC87A04", VA = "0xC87A04", Slot = "12")]
	public virtual bool UpdateOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xC87A0C", Offset = "0xC87A0C", VA = "0xC87A0C")]
	public VROverlayBase()
	{
	}
}
[Token(Token = "0x20001CD")]
public class VROverlayClient : MonoBehaviour
{
	[Token(Token = "0x20004D5")]
	public delegate void OnOverlayDelegate();

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E6D4", Offset = "0x99E6D4")]
	private DeviceClient <_deviceClient>k__BackingField;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VROverlayBase _overlayBase;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _cameraTransform;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _elapsedTimeWhilePressedTrigger;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _elapsedTimeWhilePressedMenu;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _HotkeyInvokeTime;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _blockHotkey;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _isShowOverlay;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _overlayKey;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _scale;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _additionalHeight;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _distanceFromCamera;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool _attachCamera;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _requestShowOverlay;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _blurCameraTransform;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera _blurCamera;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VRBlurOptimized _vrBlur;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E6E4", Offset = "0x99E6E4")]
	private string <_appName>k__BackingField;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99E6F4", Offset = "0x99E6F4")]
	private string <_appFolderName>k__BackingField;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnOverlayDelegate OnOverlayBeforeShowCallBack;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OnOverlayDelegate OnOverlayAfterHideCallBack;

	[Token(Token = "0x170000DA")]
	public DeviceClient _deviceClient
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xC87A14", Offset = "0xC87A14", VA = "0xC87A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7DC4", Offset = "0x9A7DC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC87A1C", Offset = "0xC87A1C", VA = "0xC87A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7DD4", Offset = "0x9A7DD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public string _appName
	{
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xC87A24", Offset = "0xC87A24", VA = "0xC87A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7DE4", Offset = "0x9A7DE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xC87A2C", Offset = "0xC87A2C", VA = "0xC87A2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7DF4", Offset = "0x9A7DF4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public string _appFolderName
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xC87A34", Offset = "0xC87A34", VA = "0xC87A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7E04", Offset = "0x9A7E04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC87A3C", Offset = "0xC87A3C", VA = "0xC87A3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7E14", Offset = "0x9A7E14")]
		set
		{
		}
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xC87A44", Offset = "0xC87A44", VA = "0xC87A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xC87B1C", Offset = "0xC87B1C", VA = "0xC87B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xC87CC8", Offset = "0xC87CC8", VA = "0xC87CC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xC87CCC", Offset = "0xC87CCC", VA = "0xC87CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xC87B28", Offset = "0xC87B28", VA = "0xC87B28")]
	public void CreateVROverlayByDevice()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xC87EE4", Offset = "0xC87EE4", VA = "0xC87EE4")]
	private void DetectCamera()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xC87F90", Offset = "0xC87F90", VA = "0xC87F90")]
	public void SetCameraTransform(Transform cameraTransform)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xC87CF0", Offset = "0xC87CF0", VA = "0xC87CF0")]
	private void UpdateInputHotkey()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xC880AC", Offset = "0xC880AC", VA = "0xC880AC")]
	private void RequestShowHideOverlay(bool isShow)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xC88190", Offset = "0xC88190", VA = "0xC88190")]
	public void OnProcess_SC_Ack_ShowHideOverlay(DevicePacketDataOverlay receivePacketOverlay)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xC883E8", Offset = "0xC883E8", VA = "0xC883E8")]
	private void ShowHideOverlay(bool isShow)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xC87EA0", Offset = "0xC87EA0", VA = "0xC87EA0")]
	private void UpdateOverlay()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xC8873C", Offset = "0xC8873C", VA = "0xC8873C")]
	private void SetBlurCamera()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xC88780", Offset = "0xC88780", VA = "0xC88780")]
	private void UnsetBlurCamera()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xC887C4", Offset = "0xC887C4", VA = "0xC887C4")]
	public VROverlayClient()
	{
	}
}
[Token(Token = "0x20001CE")]
public class VROverlayOculus : VROverlayBase
{
	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IntPtr _hWnd;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _screenShotTextureSize;

	[PreserveSig]
	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xC88844", Offset = "0xC88844", VA = "0xC88844")]
	public static extern IntPtr FindWindowEx(IntPtr parentWnd, IntPtr previousWnd, string windowClass, string windowTitle);

	[PreserveSig]
	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xC88934", Offset = "0xC88934", VA = "0xC88934")]
	public static extern IntPtr GetWindowThreadProcessId(IntPtr hWnd, out int process);

	[PreserveSig]
	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xC889DC", Offset = "0xC889DC", VA = "0xC889DC")]
	public static extern IntPtr GetParent(IntPtr hWnd);

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xC88A74", Offset = "0xC88A74", VA = "0xC88A74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xC88A78", Offset = "0xC88A78", VA = "0xC88A78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xC88AD8", Offset = "0xC88AD8", VA = "0xC88AD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xC88ADC", Offset = "0xC88ADC", VA = "0xC88ADC", Slot = "4")]
	public override void GetControllerButtonPressByTriggerNMenu(ref bool[] isPressedTrigger, ref bool[] isPressedMenu)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xC88CB8", Offset = "0xC88CB8", VA = "0xC88CB8", Slot = "6")]
	public override bool FindOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xC88CC0", Offset = "0xC88CC0", VA = "0xC88CC0", Slot = "9")]
	public override void ProcessOverlayBeforeShow()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xC88DE4", Offset = "0xC88DE4", VA = "0xC88DE4", Slot = "12")]
	public override bool UpdateOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xC88A7C", Offset = "0xC88A7C", VA = "0xC88A7C")]
	private void SetCurrentWindowHandle()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xC88DEC", Offset = "0xC88DEC", VA = "0xC88DEC")]
	private IntPtr GetCurrentWindowHandle(int processID)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xC88CC4", Offset = "0xC88CC4", VA = "0xC88CC4")]
	private void GenerateScreenShotForCubemap()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xC88F50", Offset = "0xC88F50", VA = "0xC88F50")]
	private void RenderIntoCubemap(Camera ownerCamera, Cubemap outCubemap)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xC89698", Offset = "0xC89698", VA = "0xC89698")]
	private bool SaveCubemapCapture(Cubemap cubemap, string pathName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xC89BE0", Offset = "0xC89BE0", VA = "0xC89BE0")]
	public VROverlayOculus()
	{
	}
}
[Token(Token = "0x20001CF")]
public class VROverlayVive : VROverlayBase
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRControllerState_t _controllerState;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private uint _controllerStateSize;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ulong _overlayHandle;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EVROverlayError _overlaySetupError;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TrackedDevicePose_t[] _devicePoseArray;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private SteamVR_Utils.RigidTransform _transformOffset;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private HmdMatrix34_t _hmdMatrix;

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xC89BF0", Offset = "0xC89BF0", VA = "0xC89BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xC89BF4", Offset = "0xC89BF4", VA = "0xC89BF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xC89CA4", Offset = "0xC89CA4", VA = "0xC89CA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xC89CA8", Offset = "0xC89CA8", VA = "0xC89CA8", Slot = "4")]
	public override void GetControllerButtonPressByTriggerNMenu(ref bool[] isPressedTrigger, ref bool[] isPressedMenu)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xC89E1C", Offset = "0xC89E1C", VA = "0xC89E1C", Slot = "6")]
	public override bool FindOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xC89EC8", Offset = "0xC89EC8", VA = "0xC89EC8", Slot = "7")]
	public override string GetOverlayError()
	{
		return null;
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xC89F5C", Offset = "0xC89F5C", VA = "0xC89F5C", Slot = "8")]
	public override void ClearOverlay()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xC89FB8", Offset = "0xC89FB8", VA = "0xC89FB8", Slot = "10")]
	public override void MakeHMDMatrix()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xC8A30C", Offset = "0xC8A30C", VA = "0xC8A30C", Slot = "11")]
	public override void SetupOverlay()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xC8A404", Offset = "0xC8A404", VA = "0xC8A404", Slot = "12")]
	public override bool UpdateOverlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xC89CAC", Offset = "0xC89CAC", VA = "0xC89CAC")]
	private void GetControllerButtonPressByTriggerNMenuNormal(ref bool[] isPressedTrigger, ref bool[] isPressedMenu)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xC89FDC", Offset = "0xC89FDC", VA = "0xC89FDC")]
	private void MakeRigidTransformOffset()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xC8A144", Offset = "0xC8A144", VA = "0xC8A144")]
	private void ApplyPositionRotationToOffset()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xC8A54C", Offset = "0xC8A54C", VA = "0xC8A54C")]
	public VROverlayVive()
	{
	}
}
[Token(Token = "0x20001D0")]
public class VRPostEffectsBase : MonoBehaviour
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool supportHDRTextures;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected bool supportDX11;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	protected bool isSupported;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Material> createdMaterials;

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xC861B4", Offset = "0xC861B4", VA = "0xC861B4")]
	protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xC8A5E8", Offset = "0xC8A5E8", VA = "0xC8A5E8")]
	protected Material CreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xC8A7C8", Offset = "0xC8A7C8", VA = "0xC8A7C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xC8A7D4", Offset = "0xC8A7D4", VA = "0xC8A7D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xC8A7D8", Offset = "0xC8A7D8", VA = "0xC8A7D8")]
	private void RemoveCreatedMaterials()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xC8A88C", Offset = "0xC8A88C", VA = "0xC8A88C")]
	protected bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xC8A894", Offset = "0xC8A894", VA = "0xC8A894", Slot = "4")]
	public virtual bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xC8A944", Offset = "0xC8A944", VA = "0xC8A944")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xC860A8", Offset = "0xC860A8", VA = "0xC860A8")]
	protected bool CheckSupport(bool needDepth)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xC8A950", Offset = "0xC8A950", VA = "0xC8A950")]
	protected bool CheckSupport(bool needDepth, bool needHdr)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xC8A9AC", Offset = "0xC8A9AC", VA = "0xC8A9AC")]
	public bool Dx11Support()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xC8657C", Offset = "0xC8657C", VA = "0xC8657C")]
	protected void ReportAutoDisable()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xC8A9B4", Offset = "0xC8A9B4", VA = "0xC8A9B4")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xC8A5BC", Offset = "0xC8A5BC", VA = "0xC8A5BC")]
	protected void NotSupported()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xC8AC04", Offset = "0xC8AC04", VA = "0xC8AC04")]
	protected void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xC86AAC", Offset = "0xC86AAC", VA = "0xC86AAC")]
	public VRPostEffectsBase()
	{
	}
}
namespace The_Amazing_Impact_VFX
{
	[Token(Token = "0x20001D1")]
	public class ButtonAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float initial_size_x;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float initial_size_y;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float factor;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool GO;

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xEE0EDC", Offset = "0xEE0EDC", VA = "0xEE0EDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xEE0F30", Offset = "0xEE0F30", VA = "0xEE0F30")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xEE107C", Offset = "0xEE107C", VA = "0xEE107C")]
		private void Go()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xEE10FC", Offset = "0xEE10FC", VA = "0xEE10FC")]
		public ButtonAnimation()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class SampleManager : MonoBehaviour
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh text_fx_name;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] fx_prefabs;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index_fx;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Ray ray;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private RaycastHit2D ray_cast_hit;

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xEE1114", Offset = "0xEE1114", VA = "0xEE1114")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xEE1308", Offset = "0xEE1308", VA = "0xEE1308")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xEE1D60", Offset = "0xEE1D60", VA = "0xEE1D60")]
		public SampleManager()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class SelfDestruct : MonoBehaviour
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float selfdestruct_in;

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xEE1D68", Offset = "0xEE1D68", VA = "0xEE1D68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xEE1E10", Offset = "0xEE1E10", VA = "0xEE1E10")]
		public SelfDestruct()
		{
		}
	}
}
namespace Tayx.Graphy
{
	[Token(Token = "0x20001D4")]
	public class GraphyDebugger : G_Singleton<GraphyDebugger>
	{
		[Token(Token = "0x20004D6")]
		public enum DebugVariable
		{
			[Token(Token = "0x4001E95")]
			Fps,
			[Token(Token = "0x4001E96")]
			Fps_Min,
			[Token(Token = "0x4001E97")]
			Fps_Max,
			[Token(Token = "0x4001E98")]
			Fps_Avg,
			[Token(Token = "0x4001E99")]
			Ram_Allocated,
			[Token(Token = "0x4001E9A")]
			Ram_Reserved,
			[Token(Token = "0x4001E9B")]
			Ram_Mono,
			[Token(Token = "0x4001E9C")]
			Audio_DB
		}

		[Token(Token = "0x20004D7")]
		public enum DebugComparer
		{
			[Token(Token = "0x4001E9E")]
			Less_than,
			[Token(Token = "0x4001E9F")]
			Equals_or_less_than,
			[Token(Token = "0x4001EA0")]
			Equals,
			[Token(Token = "0x4001EA1")]
			Equals_or_greater_than,
			[Token(Token = "0x4001EA2")]
			Greater_than
		}

		[Token(Token = "0x20004D8")]
		public enum ConditionEvaluation
		{
			[Token(Token = "0x4001EA4")]
			All_conditions_must_be_met,
			[Token(Token = "0x4001EA5")]
			Only_one_condition_has_to_be_met
		}

		[Token(Token = "0x20004D9")]
		public enum MessageType
		{
			[Token(Token = "0x4001EA7")]
			Log,
			[Token(Token = "0x4001EA8")]
			Warning,
			[Token(Token = "0x4001EA9")]
			Error
		}

		[Serializable]
		[Token(Token = "0x20004DA")]
		public struct DebugCondition
		{
			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2874", Offset = "0x9A2874")]
			public DebugVariable Variable;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A28AC", Offset = "0x9A28AC")]
			public DebugComparer Comparer;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A28E4", Offset = "0x9A28E4")]
			public float Value;
		}

		[Serializable]
		[Token(Token = "0x20004DB")]
		public class DebugPacket
		{
			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A291C", Offset = "0x9A291C")]
			public bool Active;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2954", Offset = "0x9A2954")]
			public int Id;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A298C", Offset = "0x9A298C")]
			public bool ExecuteOnce;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A29C4", Offset = "0x9A29C4")]
			public float InitSleepTime;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A29FC", Offset = "0x9A29FC")]
			public float ExecuteSleepTime;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ConditionEvaluation ConditionEvaluation;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2A34", Offset = "0x9A2A34")]
			public List<DebugCondition> DebugConditions;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MessageType MessageType;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[Multiline]
			public string Message;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool TakeScreenshot;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string ScreenshotFileName;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2A7C", Offset = "0x9A2A7C")]
			public bool DebugBreak;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public UnityEvent UnityEvents;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<Action> Callbacks;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool canBeChecked;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
			private bool executed;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float timePassed;

			[Token(Token = "0x170003A6")]
			public bool Check
			{
				[Token(Token = "0x6001DF8")]
				[Address(RVA = "0xED9BAC", Offset = "0xED9BAC", VA = "0xED9BAC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xED9198", Offset = "0xED9198", VA = "0xED9198")]
			public void Update()
			{
			}

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0xED9AAC", Offset = "0xED9AAC", VA = "0xED9AAC")]
			public void Executed()
			{
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xED88D4", Offset = "0xED88D4", VA = "0xED88D4")]
			public DebugPacket()
			{
			}
		}

		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999880", Offset = "0x999880")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xED8D54", Offset = "0xED8D54", VA = "0xED8D54")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xED9B34", Offset = "0xED9B34", VA = "0xED9B34")]
			internal bool <GetFirstDebugPacketWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999890", Offset = "0x999890")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xED8E24", Offset = "0xED8E24", VA = "0xED8E24")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xED9B5C", Offset = "0xED9B5C", VA = "0xED9B5C")]
			internal bool <GetAllDebugPacketsWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9998A0", Offset = "0x9998A0")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xED8FA8", Offset = "0xED8FA8", VA = "0xED8FA8")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xED9B84", Offset = "0xED9B84", VA = "0xED9B84")]
			internal bool <RemoveAllDebugPacketsWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9998B0", Offset = "0x9998B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<DebugPacket> <>9__24_0;

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xED9B20", Offset = "0xED9B20", VA = "0xED9B20")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E04")]
			[Address(RVA = "0xED9B28", Offset = "0xED9B28", VA = "0xED9B28")]
			internal bool <CheckDebugPackets>b__24_0(DebugPacket packet)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<DebugPacket> m_debugPackets;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xED8218", Offset = "0xED8218", VA = "0xED8218")]
		protected GraphyDebugger()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xED82BC", Offset = "0xED82BC", VA = "0xED82BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xED8370", Offset = "0xED8370", VA = "0xED8370")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xED8758", Offset = "0xED8758", VA = "0xED8758")]
		public void AddNewDebugPacket(DebugPacket newDebugPacket)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xED87CC", Offset = "0xED87CC", VA = "0xED87CC")]
		public void AddNewDebugPacket(int newId, DebugCondition newDebugCondition, MessageType newMessageType, string newMessage, bool newDebugBreak, Action newCallback)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xED89D0", Offset = "0xED89D0", VA = "0xED89D0")]
		public void AddNewDebugPacket(int newId, List<DebugCondition> newDebugConditions, MessageType newMessageType, string newMessage, bool newDebugBreak, Action newCallback)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xED8ABC", Offset = "0xED8ABC", VA = "0xED8ABC")]
		public void AddNewDebugPacket(int newId, DebugCondition newDebugCondition, MessageType newMessageType, string newMessage, bool newDebugBreak, List<Action> newCallbacks)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xED8BB4", Offset = "0xED8BB4", VA = "0xED8BB4")]
		public void AddNewDebugPacket(int newId, List<DebugCondition> newDebugConditions, MessageType newMessageType, string newMessage, bool newDebugBreak, List<Action> newCallbacks)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xED8C90", Offset = "0xED8C90", VA = "0xED8C90")]
		public DebugPacket GetFirstDebugPacketWithId(int packetId)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xED8D5C", Offset = "0xED8D5C", VA = "0xED8D5C")]
		public List<DebugPacket> GetAllDebugPacketsWithId(int packetId)
		{
			return null;
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xED8E2C", Offset = "0xED8E2C", VA = "0xED8E2C")]
		public void RemoveFirstDebugPacketWithId(int packetId)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xED8ED0", Offset = "0xED8ED0", VA = "0xED8ED0")]
		public void RemoveAllDebugPacketsWithId(int packetId)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xED8FB0", Offset = "0xED8FB0", VA = "0xED8FB0")]
		public void AddCallbackToFirstDebugPacketWithId(Action callback, int id)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xED904C", Offset = "0xED904C", VA = "0xED904C")]
		public void AddCallbackToAllDebugPacketWithId(Action callback, int id)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xED8374", Offset = "0xED8374", VA = "0xED8374")]
		private void CheckDebugPackets()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xED9200", Offset = "0xED9200", VA = "0xED9200")]
		private bool CheckIfConditionIsMet(DebugCondition debugCondition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xED987C", Offset = "0xED987C", VA = "0xED987C")]
		private float GetRequestedValueFromDebugVariable(DebugVariable debugVariable)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xED9340", Offset = "0xED9340", VA = "0xED9340")]
		private void ExecuteOperationsInDebugPacket(DebugPacket debugPacket)
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class GraphyManager : G_Singleton<GraphyManager>
	{
		[Token(Token = "0x20004E0")]
		public enum Mode
		{
			[Token(Token = "0x4001EC4")]
			FULL,
			[Token(Token = "0x4001EC5")]
			LIGHT
		}

		[Token(Token = "0x20004E1")]
		public enum ModuleType
		{
			[Token(Token = "0x4001EC7")]
			FPS,
			[Token(Token = "0x4001EC8")]
			RAM,
			[Token(Token = "0x4001EC9")]
			AUDIO,
			[Token(Token = "0x4001ECA")]
			ADVANCED
		}

		[Token(Token = "0x20004E2")]
		public enum ModuleState
		{
			[Token(Token = "0x4001ECC")]
			FULL,
			[Token(Token = "0x4001ECD")]
			TEXT,
			[Token(Token = "0x4001ECE")]
			BASIC,
			[Token(Token = "0x4001ECF")]
			BACKGROUND,
			[Token(Token = "0x4001ED0")]
			OFF
		}

		[Token(Token = "0x20004E3")]
		public enum ModulePosition
		{
			[Token(Token = "0x4001ED2")]
			TOP_RIGHT,
			[Token(Token = "0x4001ED3")]
			TOP_LEFT,
			[Token(Token = "0x4001ED4")]
			BOTTOM_RIGHT,
			[Token(Token = "0x4001ED5")]
			BOTTOM_LEFT,
			[Token(Token = "0x4001ED6")]
			FREE
		}

		[Token(Token = "0x20004E4")]
		public enum LookForAudioListener
		{
			[Token(Token = "0x4001ED8")]
			ALWAYS,
			[Token(Token = "0x4001ED9")]
			ON_SCENE_LOAD,
			[Token(Token = "0x4001EDA")]
			NEVER
		}

		[Token(Token = "0x20004E5")]
		public enum ModulePreset
		{
			[Token(Token = "0x4001EDC")]
			FPS_BASIC,
			[Token(Token = "0x4001EDD")]
			FPS_TEXT,
			[Token(Token = "0x4001EDE")]
			FPS_FULL,
			[Token(Token = "0x4001EDF")]
			FPS_TEXT_RAM_TEXT,
			[Token(Token = "0x4001EE0")]
			FPS_FULL_RAM_TEXT,
			[Token(Token = "0x4001EE1")]
			FPS_FULL_RAM_FULL,
			[Token(Token = "0x4001EE2")]
			FPS_TEXT_RAM_TEXT_AUDIO_TEXT,
			[Token(Token = "0x4001EE3")]
			FPS_FULL_RAM_TEXT_AUDIO_TEXT,
			[Token(Token = "0x4001EE4")]
			FPS_FULL_RAM_FULL_AUDIO_TEXT,
			[Token(Token = "0x4001EE5")]
			FPS_FULL_RAM_FULL_AUDIO_FULL,
			[Token(Token = "0x4001EE6")]
			FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL,
			[Token(Token = "0x4001EE7")]
			FPS_BASIC_ADVANCED_FULL
		}

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Mode m_graphyMode;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_enableOnStartup;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool m_keepAlive;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[SerializeField]
		private bool m_background;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_backgroundColor;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_enableHotkeys;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private KeyCode m_toggleModeKeyCode;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_toggleModeCtrl;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_toggleModeAlt;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private KeyCode m_toggleActiveKeyCode;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_toggleActiveCtrl;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool m_toggleActiveAlt;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private ModulePosition m_graphModulePosition;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ModuleState m_fpsModuleState;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E7F4", Offset = "0x99E7F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99E7F4", Offset = "0x99E7F4")]
		[SerializeField]
		private int m_timeToResetMinMaxFps;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_goodFpsColor;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int m_goodFpsThreshold;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Color m_cautionFpsColor;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private int m_cautionFpsThreshold;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color m_criticalFpsColor;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E8AC", Offset = "0x99E8AC")]
		[SerializeField]
		private int m_fpsGraphResolution;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E8F0", Offset = "0x99E8F0")]
		[SerializeField]
		private int m_fpsTextUpdateRate;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ModuleState m_ramModuleState;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Color m_allocatedRamColor;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private Color m_reservedRamColor;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Color m_monoRamColor;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E974", Offset = "0x99E974")]
		[SerializeField]
		private int m_ramGraphResolution;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99E9B8", Offset = "0x99E9B8")]
		[SerializeField]
		private int m_ramTextUpdateRate;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private ModuleState m_audioModuleState;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private LookForAudioListener m_findAudioListenerInCameraIfNull;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioListener m_audioListener;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Color m_audioGraphColor;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99EA3C", Offset = "0x99EA3C")]
		[SerializeField]
		private int m_audioGraphResolution;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99EA80", Offset = "0x99EA80")]
		[SerializeField]
		private int m_audioTextUpdateRate;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private FFTWindow m_FFTWindow;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99EAD4", Offset = "0x99EAD4")]
		[SerializeField]
		private int m_spectrumSize;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private ModulePosition m_advancedModulePosition;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private ModuleState m_advancedModuleState;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_initialized;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool m_active;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool m_focused;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private G_FpsManager m_fpsManager;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private G_RamManager m_ramManager;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private G_AudioManager m_audioManager;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private G_AdvancedData m_advancedData;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private ModulePreset m_modulePresetState;

		[Token(Token = "0x170000DD")]
		public Mode GraphyMode
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0xED9E4C", Offset = "0xED9E4C", VA = "0xED9E4C")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xED3388", Offset = "0xED3388", VA = "0xED3388")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public bool EnableOnStartup
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0xED9EA0", Offset = "0xED9EA0", VA = "0xED9EA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DF")]
		public bool KeepAlive
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xED9EA8", Offset = "0xED9EA8", VA = "0xED9EA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E0")]
		public bool Background
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xED9EB0", Offset = "0xED9EB0", VA = "0xED9EB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0xED3134", Offset = "0xED3134", VA = "0xED3134")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public Color BackgroundColor
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0xED9EB8", Offset = "0xED9EB8", VA = "0xED9EB8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0xED32E0", Offset = "0xED32E0", VA = "0xED32E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public ModulePosition GraphModulePosition
		{
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0xED9EC4", Offset = "0xED9EC4", VA = "0xED9EC4")]
			get
			{
				return default(ModulePosition);
			}
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xED33A8", Offset = "0xED33A8", VA = "0xED33A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public ModuleState FpsModuleState
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0xEDA16C", Offset = "0xEDA16C", VA = "0xEDA16C")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xED340C", Offset = "0xED340C", VA = "0xED340C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public int TimeToResetMinMaxFps
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0xEDA174", Offset = "0xEDA174", VA = "0xEDA174")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xED3A7C", Offset = "0xED3A7C", VA = "0xED3A7C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public Color GoodFPSColor
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xEDA17C", Offset = "0xEDA17C", VA = "0xEDA17C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xED36AC", Offset = "0xED36AC", VA = "0xED36AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public Color CautionFPSColor
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xEDA188", Offset = "0xEDA188", VA = "0xEDA188")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xED3874", Offset = "0xED3874", VA = "0xED3874")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public Color CriticalFPSColor
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xEDA194", Offset = "0xEDA194", VA = "0xEDA194")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xED3A3C", Offset = "0xED3A3C", VA = "0xED3A3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public int GoodFPSThreshold
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0xEDA1A0", Offset = "0xEDA1A0", VA = "0xEDA1A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xED347C", Offset = "0xED347C", VA = "0xED347C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public int CautionFPSThreshold
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0xEDA1A8", Offset = "0xEDA1A8", VA = "0xEDA1A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0xED34E8", Offset = "0xED34E8", VA = "0xED34E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public int FpsGraphResolution
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0xEDA1B0", Offset = "0xEDA1B0", VA = "0xEDA1B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xED3AB8", Offset = "0xED3AB8", VA = "0xED3AB8")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public int FpsTextUpdateRate
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0xEDA1B8", Offset = "0xEDA1B8", VA = "0xEDA1B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xED3AF4", Offset = "0xED3AF4", VA = "0xED3AF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public float CurrentFPS
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0xEDA1C0", Offset = "0xEDA1C0", VA = "0xEDA1C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000ED")]
		public float AverageFPS
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xEDA1E0", Offset = "0xEDA1E0", VA = "0xEDA1E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EE")]
		public float MinFPS
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xEDA200", Offset = "0xEDA200", VA = "0xEDA200")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EF")]
		public float MaxFPS
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xEDA220", Offset = "0xEDA220", VA = "0xEDA220")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F0")]
		public ModuleState RamModuleState
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0xEDA240", Offset = "0xEDA240", VA = "0xEDA240")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xED3B2C", Offset = "0xED3B2C", VA = "0xED3B2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public Color AllocatedRamColor
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xEDA3B4", Offset = "0xEDA3B4", VA = "0xEDA3B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xED3EBC", Offset = "0xED3EBC", VA = "0xED3EBC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public Color ReservedRamColor
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xEDA51C", Offset = "0xEDA51C", VA = "0xEDA51C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xED3CF4", Offset = "0xED3CF4", VA = "0xED3CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public Color MonoRamColor
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0xEDA528", Offset = "0xEDA528", VA = "0xEDA528")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0xED4084", Offset = "0xED4084", VA = "0xED4084")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public int RamGraphResolution
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0xEDA534", Offset = "0xEDA534", VA = "0xEDA534")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0xED40C4", Offset = "0xED40C4", VA = "0xED40C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public int RamTextUpdateRate
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0xEDA53C", Offset = "0xEDA53C", VA = "0xEDA53C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xED4100", Offset = "0xED4100", VA = "0xED4100")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public float AllocatedRam
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0xEDA544", Offset = "0xEDA544", VA = "0xEDA544")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F7")]
		public float ReservedRam
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xEDA564", Offset = "0xEDA564", VA = "0xEDA564")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F8")]
		public float MonoRam
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xEDA584", Offset = "0xEDA584", VA = "0xEDA584")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F9")]
		public ModuleState AudioModuleState
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0xEDA5A4", Offset = "0xEDA5A4", VA = "0xEDA5A4")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xED4138", Offset = "0xED4138", VA = "0xED4138")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public AudioListener AudioListener
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xEDA5AC", Offset = "0xEDA5AC", VA = "0xEDA5AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xEDA5B4", Offset = "0xEDA5B4", VA = "0xEDA5B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public LookForAudioListener FindAudioListenerInCameraIfNull
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xEDA5E8", Offset = "0xEDA5E8", VA = "0xEDA5E8")]
			get
			{
				return default(LookForAudioListener);
			}
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xED433C", Offset = "0xED433C", VA = "0xED433C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public Color AudioGraphColor
		{
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0xEDA5F0", Offset = "0xEDA5F0", VA = "0xEDA5F0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xED4300", Offset = "0xED4300", VA = "0xED4300")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public int AudioGraphResolution
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xEDA5FC", Offset = "0xEDA5FC", VA = "0xEDA5FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0xED43EC", Offset = "0xED43EC", VA = "0xED43EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public int AudioTextUpdateRate
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xEDA604", Offset = "0xEDA604", VA = "0xEDA604")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0xED4428", Offset = "0xED4428", VA = "0xED4428")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public FFTWindow FftWindow
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0xEDA60C", Offset = "0xEDA60C", VA = "0xEDA60C")]
			get
			{
				return default(FFTWindow);
			}
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0xED4374", Offset = "0xED4374", VA = "0xED4374")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public int SpectrumSize
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xEDA614", Offset = "0xEDA614", VA = "0xEDA614")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0xED43B0", Offset = "0xED43B0", VA = "0xED43B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public float[] Spectrum
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xEDA61C", Offset = "0xEDA61C", VA = "0xEDA61C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		public float MaxDB
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xEDA63C", Offset = "0xEDA63C", VA = "0xEDA63C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000103")]
		public ModuleState AdvancedModuleState
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xEDA65C", Offset = "0xEDA65C", VA = "0xEDA65C")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0xED44A4", Offset = "0xED44A4", VA = "0xED44A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public ModulePosition AdvancedModulePosition
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xEDA664", Offset = "0xEDA664", VA = "0xEDA664")]
			get
			{
				return default(ModulePosition);
			}
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xED4460", Offset = "0xED4460", VA = "0xED4460")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xED9BB4", Offset = "0xED9BB4", VA = "0xED9BB4")]
		protected GraphyManager()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xEDA66C", Offset = "0xEDA66C", VA = "0xEDA66C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xEDAB30", Offset = "0xEDAB30", VA = "0xEDAB30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xEDACD8", Offset = "0xEDACD8", VA = "0xEDACD8")]
		private void OnApplicationFocus(bool isFocused)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xEDAD40", Offset = "0xEDAD40", VA = "0xEDAD40")]
		public void SetModulePosition(ModuleType moduleType, ModulePosition modulePosition)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xEDADC4", Offset = "0xEDADC4", VA = "0xEDADC4")]
		public void SetModuleMode(ModuleType moduleType, ModuleState moduleState)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xEDAE58", Offset = "0xEDAE58", VA = "0xEDAE58")]
		public void ToggleModes()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xEDAF40", Offset = "0xEDAF40", VA = "0xEDAF40")]
		public void SetPreset(ModulePreset modulePreset)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xEDB17C", Offset = "0xEDB17C", VA = "0xEDB17C")]
		public void ToggleActive()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xEDB18C", Offset = "0xEDB18C", VA = "0xEDB18C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xEDB204", Offset = "0xEDB204", VA = "0xEDB204")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xEDA670", Offset = "0xEDA670", VA = "0xEDA670")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xEDAB48", Offset = "0xEDAB48", VA = "0xEDAB48")]
		private void CheckForHotkeyPresses()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xEDB3C4", Offset = "0xEDB3C4", VA = "0xEDB3C4")]
		private bool CheckFor1KeyPress(KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xEDB354", Offset = "0xEDB354", VA = "0xEDB354")]
		private bool CheckFor2KeyPress(KeyCode key1, KeyCode key2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xEDB284", Offset = "0xEDB284", VA = "0xEDB284")]
		private bool CheckFor3KeyPress(KeyCode key1, KeyCode key2, KeyCode key3)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xED9E54", Offset = "0xED9E54", VA = "0xED9E54")]
		private void UpdateAllParameters()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xEDACF4", Offset = "0xEDACF4", VA = "0xEDACF4")]
		private void RefreshAllParameters()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class G_GraphShader
	{
		[Token(Token = "0x4000B23")]
		public const int ArrayMaxSizeFull = 512;

		[Token(Token = "0x4000B24")]
		public const int ArrayMaxSizeLight = 128;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ArrayMaxSize;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Array;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image Image;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Name;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Name_Length;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Average;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int averagePropertyId;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float GoodThreshold;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float CautionThreshold;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int goodThresholdPropertyId;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int cautionThresholdPropertyId;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color GoodColor;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color CautionColor;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color CriticalColor;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int goodColorPropertyId;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int cautionColorPropertyId;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int criticalColorPropertyId;

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xECFED4", Offset = "0xECFED4", VA = "0xECFED4")]
		public void InitializeShader()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xED0A24", Offset = "0xED0A24", VA = "0xED0A24")]
		public void UpdateArray()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xED0A7C", Offset = "0xED0A7C", VA = "0xED0A7C")]
		public void UpdateAverage()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xED09B0", Offset = "0xED09B0", VA = "0xED09B0")]
		public void UpdateThresholds()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xED0904", Offset = "0xED0904", VA = "0xED0904")]
		public void UpdateColors()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xED05C0", Offset = "0xED05C0", VA = "0xED05C0")]
		public void UpdatePoints()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xED0AC4", Offset = "0xED0AC4", VA = "0xED0AC4")]
		public G_GraphShader()
		{
		}
	}
}
namespace Tayx.Graphy.Utils
{
	[Token(Token = "0x20001D7")]
	public static class G_ExtensionMethods
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xED1534", Offset = "0xED1534", VA = "0xED1534")]
		public static List<GameObject> SetAllActive(this List<GameObject> gameObjects, bool active)
		{
			return null;
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xED1698", Offset = "0xED1698", VA = "0xED1698")]
		public static List<Image> SetOneActive(this List<Image> images, int active)
		{
			return null;
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xECEFCC", Offset = "0xECEFCC", VA = "0xECEFCC")]
		public static List<Image> SetAllActive(this List<Image> images, bool active)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D8")]
	public class G_Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _applicationIsQuitting;

		[Token(Token = "0x17000105")]
		public static T Instance
		{
			[Token(Token = "0x6000C42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C43")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C45")]
		public G_Singleton()
		{
		}
	}
}
namespace Tayx.Graphy.Utils.NumString
{
	[Token(Token = "0x20001D9")]
	public static class G_FloatString
	{
		[Token(Token = "0x4000B39")]
		private const string floatFormat = "0.0";

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float decimalMultiplier;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] negativeBuffer;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] positiveBuffer;

		[Token(Token = "0x17000106")]
		public static bool Inited
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xECF3B4", Offset = "0xECF3B4", VA = "0xECF3B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		public static float MinValue
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0xECF468", Offset = "0xECF468", VA = "0xECF468")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000108")]
		public static float MaxValue
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xECF4EC", Offset = "0xECF4EC", VA = "0xECF4EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xECF568", Offset = "0xECF568", VA = "0xECF568")]
		public static void Init(float minNegativeValue, float maxPositiveValue, int decimals = 1)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xECE7D0", Offset = "0xECE7D0", VA = "0xECE7D0")]
		public static string ToStringNonAlloc(this float value)
		{
			return null;
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xED7BA0", Offset = "0xED7BA0", VA = "0xED7BA0")]
		public static string ToStringNonAlloc(this float value, string format)
		{
			return null;
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xED7D30", Offset = "0xED7D30", VA = "0xED7D30")]
		public static int ToInt(this float f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xEDCA60", Offset = "0xEDCA60", VA = "0xEDCA60")]
		public static float ToFloat(this int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xEDC9A0", Offset = "0xEDC9A0", VA = "0xEDC9A0")]
		private static int Pow(int f, int p)
		{
			return default(int);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xEDC9BC", Offset = "0xEDC9BC", VA = "0xEDC9BC")]
		private static int ToIndex(this float f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xEDC92C", Offset = "0xEDC92C", VA = "0xEDC92C")]
		private static float FromIndex(this int i)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001DA")]
	public static class G_IntString
	{
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] negativeBuffer;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] positiveBuffer;

		[Token(Token = "0x17000109")]
		public static bool Inited
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0xED7DC0", Offset = "0xED7DC0", VA = "0xED7DC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010A")]
		public static int MinValue
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0xED7E74", Offset = "0xED7E74", VA = "0xED7E74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010B")]
		public static int MaxValue
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0xED7EF4", Offset = "0xED7EF4", VA = "0xED7EF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xED7F70", Offset = "0xED7F70", VA = "0xED7F70")]
		public static void Init(int minNegativeValue, int maxPositiveValue)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xECE684", Offset = "0xECE684", VA = "0xECE684")]
		public static string ToStringNonAlloc(this int value)
		{
			return null;
		}
	}
}
namespace Tayx.Graphy.UI
{
	[Token(Token = "0x20001DB")]
	public interface IModifiableState
	{
		[Token(Token = "0x6000C59")]
		void SetState(GraphyManager.ModuleState newState, bool silentUpdate);
	}
	[Token(Token = "0x20001DC")]
	public interface IMovable
	{
		[Token(Token = "0x6000C5A")]
		void SetPosition(GraphyManager.ModulePosition newModulePosition);
	}
}
namespace Tayx.Graphy.Ram
{
	[Token(Token = "0x20001DD")]
	public class G_RamGraph : G_Graph
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageAllocated;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_imageReserved;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_imageMono;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_resolution;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private G_GraphShader m_shaderGraphAllocated;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private G_GraphShader m_shaderGraphReserved;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private G_GraphShader m_shaderGraphMono;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] m_allocatedArray;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] m_reservedArray;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] m_monoArray;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_highestMemory;

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xEDB51C", Offset = "0xEDB51C", VA = "0xEDB51C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xEDB67C", Offset = "0xEDB67C", VA = "0xEDB67C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xEDB688", Offset = "0xEDB688", VA = "0xEDB688")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xEDB928", Offset = "0xEDB928", VA = "0xEDB928", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xEDBBCC", Offset = "0xEDBBCC", VA = "0xEDBBCC", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xEDB520", Offset = "0xEDB520", VA = "0xEDB520")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xEDC000", Offset = "0xEDC000", VA = "0xEDC000")]
		public G_RamGraph()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class G_RamManager : MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ramGraphGameObject;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private G_RamGraph m_ramGraph;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_RamText m_ramText;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xEDC010", Offset = "0xEDC010", VA = "0xEDC010")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xEDC3E4", Offset = "0xEDC3E4", VA = "0xEDC3E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xED9ECC", Offset = "0xED9ECC", VA = "0xED9ECC", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xEDA248", Offset = "0xEDA248", VA = "0xEDA248", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xEDB278", Offset = "0xEDB278", VA = "0xEDB278")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xEDA3C0", Offset = "0xEDA3C0", VA = "0xEDA3C0")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xEDB3D0", Offset = "0xEDB3D0", VA = "0xEDB3D0")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xEDC014", Offset = "0xEDC014", VA = "0xEDC014")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xEDC3E8", Offset = "0xEDC3E8", VA = "0xEDC3E8")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xEDC4E0", Offset = "0xEDC4E0", VA = "0xEDC4E0")]
		public G_RamManager()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class G_RamMonitor : MonoBehaviour
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_allocatedRam;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_reservedRam;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_monoRam;

		[Token(Token = "0x1700010C")]
		public float AllocatedRam
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0xEDC590", Offset = "0xEDC590", VA = "0xEDC590")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010D")]
		public float ReservedRam
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0xEDC598", Offset = "0xEDC598", VA = "0xEDC598")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010E")]
		public float MonoRam
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xEDC5A0", Offset = "0xEDC5A0", VA = "0xEDC5A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xEDC5A8", Offset = "0xEDC5A8", VA = "0xEDC5A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xEDC610", Offset = "0xEDC610", VA = "0xEDC610")]
		public G_RamMonitor()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class G_RamText : MonoBehaviour
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_allocatedSystemMemorySizeText;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_reservedSystemMemorySizeText;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_monoSystemMemorySizeText;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_updateRate;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_deltaTime;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly string m_memoryStringFormat;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xEDC618", Offset = "0xEDC618", VA = "0xEDC618")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xEDC77C", Offset = "0xEDC77C", VA = "0xEDC77C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xEDC430", Offset = "0xEDC430", VA = "0xEDC430")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xEDC61C", Offset = "0xEDC61C", VA = "0xEDC61C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xEDC8C4", Offset = "0xEDC8C4", VA = "0xEDC8C4")]
		public G_RamText()
		{
		}
	}
}
namespace Tayx.Graphy.Graph
{
	[Token(Token = "0x20001E1")]
	public abstract class G_Graph : MonoBehaviour
	{
		[Token(Token = "0x6000C76")]
		protected abstract void UpdateGraph();

		[Token(Token = "0x6000C77")]
		protected abstract void CreatePoints();

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xED0B84", Offset = "0xED0B84", VA = "0xED0B84")]
		protected G_Graph()
		{
		}
	}
}
namespace Tayx.Graphy.Fps
{
	[Token(Token = "0x20001E2")]
	public class G_FpsGraph : G_Graph
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageGraph;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_resolution;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_GraphShader m_shaderGraph;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] m_fpsArray;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_highestFps;

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xED6210", Offset = "0xED6210", VA = "0xED6210")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xED6308", Offset = "0xED6308", VA = "0xED6308")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xED6314", Offset = "0xED6314", VA = "0xED6314")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xED643C", Offset = "0xED643C", VA = "0xED643C", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xED6644", Offset = "0xED6644", VA = "0xED6644", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xED6214", Offset = "0xED6214", VA = "0xED6214")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xED67C8", Offset = "0xED67C8", VA = "0xED67C8")]
		public G_FpsGraph()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class G_FpsManager : MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_fpsGraphGameObject;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObject> m_nonBasicTextGameObjects;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_FpsGraph m_fpsGraph;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_FpsText m_fpsText;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xED67D8", Offset = "0xED67D8", VA = "0xED67D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xED6BD4", Offset = "0xED6BD4", VA = "0xED6BD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xED6D58", Offset = "0xED6D58", VA = "0xED6D58", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xED6FF8", Offset = "0xED6FF8", VA = "0xED6FF8", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xED7208", Offset = "0xED7208", VA = "0xED7208")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xED6BD8", Offset = "0xED6BD8", VA = "0xED6BD8")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xED725C", Offset = "0xED725C", VA = "0xED725C")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xED67DC", Offset = "0xED67DC", VA = "0xED67DC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xED71C0", Offset = "0xED71C0", VA = "0xED71C0")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xED73D4", Offset = "0xED73D4", VA = "0xED73D4")]
		public G_FpsManager()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class G_FpsMonitor : MonoBehaviour
	{
		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_averageSamples;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_currentFps;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_avgFps;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_minFps;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_maxFps;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_averageFpsSamples;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_avgFpsSamplesOffset;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_indexMask;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_avgFpsSamplesCapacity;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_avgFpsSamplesCount;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_timeToResetMinMaxFps;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_timeToResetMinFpsPassed;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_timeToResetMaxFpsPassed;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float unscaledDeltaTime;

		[Token(Token = "0x1700010F")]
		public float CurrentFPS
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0xED74B0", Offset = "0xED74B0", VA = "0xED74B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000110")]
		public float AverageFPS
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xED74B8", Offset = "0xED74B8", VA = "0xED74B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000111")]
		public float MinFPS
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0xED74C0", Offset = "0xED74C0", VA = "0xED74C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000112")]
		public float MaxFPS
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xED74C8", Offset = "0xED74C8", VA = "0xED74C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xED74D0", Offset = "0xED74D0", VA = "0xED74D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xED7580", Offset = "0xED7580", VA = "0xED7580")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xED7214", Offset = "0xED7214", VA = "0xED7214")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xED74D4", Offset = "0xED74D4", VA = "0xED74D4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xED76F4", Offset = "0xED76F4", VA = "0xED76F4")]
		private void ResizeSamplesBuffer(int size)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xED77A8", Offset = "0xED77A8", VA = "0xED77A8")]
		private int ToBufferIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xED77B8", Offset = "0xED77B8", VA = "0xED77B8")]
		public G_FpsMonitor()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class G_FpsText : MonoBehaviour
	{
		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_fpsText;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_msText;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_avgFpsText;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_minFpsText;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_maxFpsText;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_updateRate;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_frameCount;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_deltaTime;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_fps;

		[Token(Token = "0x4000B90")]
		private const int m_minFps = 0;

		[Token(Token = "0x4000B91")]
		private const int m_maxFps = 10000;

		[Token(Token = "0x4000B92")]
		private const string m_msStringFormat = "0.0";

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xED77D0", Offset = "0xED77D0", VA = "0xED77D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xED7934", Offset = "0xED7934", VA = "0xED7934")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xED7238", Offset = "0xED7238", VA = "0xED7238")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xED7D38", Offset = "0xED7D38", VA = "0xED7D38")]
		private void SetFpsRelatedTextColor(Text text, float fps)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xED77D4", Offset = "0xED77D4", VA = "0xED77D4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xED8208", Offset = "0xED8208", VA = "0xED8208")]
		public G_FpsText()
		{
		}
	}
}
namespace Tayx.Graphy.Audio
{
	[Token(Token = "0x20001E6")]
	public class G_AudioGraph : G_Graph
	{
		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageGraph;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_imageGraphHighestValues;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_resolution;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private G_GraphShader m_shaderGraph;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private G_GraphShader m_shaderGraphHighestValues;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] m_graphArray;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] m_graphArrayHighestValue;

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xECFB00", Offset = "0xECFB00", VA = "0xECFB00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xECFC38", Offset = "0xECFC38", VA = "0xECFC38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xECFCF0", Offset = "0xECFCF0", VA = "0xECFCF0")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xED0008", Offset = "0xED0008", VA = "0xED0008", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xED0608", Offset = "0xED0608", VA = "0xED0608", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xECFB04", Offset = "0xECFB04", VA = "0xECFB04")]
		private void Init()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xED0B74", Offset = "0xED0B74", VA = "0xED0B74")]
		public G_AudioGraph()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class G_AudioManager : MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_audioGraphGameObject;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_audioDbText;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_AudioGraph m_audioGraph;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_AudioText m_audioText;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xED0B8C", Offset = "0xED0B8C", VA = "0xED0B8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xED0F88", Offset = "0xED0F88", VA = "0xED0F88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xED1100", Offset = "0xED1100", VA = "0xED1100", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xED13C8", Offset = "0xED13C8", VA = "0xED13C8", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xED1754", Offset = "0xED1754", VA = "0xED1754")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xED0F8C", Offset = "0xED0F8C", VA = "0xED0F8C")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xED18B0", Offset = "0xED18B0", VA = "0xED18B0")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xED0B90", Offset = "0xED0B90", VA = "0xED0B90")]
		private void Init()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xED1650", Offset = "0xED1650", VA = "0xED1650")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xED1A1C", Offset = "0xED1A1C", VA = "0xED1A1C")]
		public G_AudioManager()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class G_AudioMonitor : MonoBehaviour
	{
		[Token(Token = "0x4000BA9")]
		private const float m_refValue = 1f;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioListener m_audioListener;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GraphyManager.LookForAudioListener m_findAudioListenerInCameraIfNull;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private FFTWindow m_FFTWindow;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_spectrumSize;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_spectrum;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_spectrumHighestValues;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_maxDB;

		[Token(Token = "0x17000113")]
		public float[] Spectrum
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xED1ACC", Offset = "0xED1ACC", VA = "0xED1ACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public float[] SpectrumHighestValues
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0xED1AD4", Offset = "0xED1AD4", VA = "0xED1AD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public float MaxDB
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xED1ADC", Offset = "0xED1ADC", VA = "0xED1ADC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000116")]
		public bool SpectrumDataAvailable
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xECFC80", Offset = "0xECFC80", VA = "0xECFC80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xED1AE4", Offset = "0xED1AE4", VA = "0xED1AE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xED1BB0", Offset = "0xED1BB0", VA = "0xED1BB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xED1EF0", Offset = "0xED1EF0", VA = "0xED1EF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xED1760", Offset = "0xED1760", VA = "0xED1760")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xED0524", Offset = "0xED0524", VA = "0xED0524")]
		public float lin2dB(float linear)
		{
			return default(float);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xED05AC", Offset = "0xED05AC", VA = "0xED05AC")]
		public float dBNormalized(float db)
		{
			return default(float);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xED1E48", Offset = "0xED1E48", VA = "0xED1E48")]
		private AudioListener FindAudioListener()
		{
			return null;
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xED1F6C", Offset = "0xED1F6C", VA = "0xED1F6C")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xED1AE8", Offset = "0xED1AE8", VA = "0xED1AE8")]
		private void Init()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xED1FB4", Offset = "0xED1FB4", VA = "0xED1FB4")]
		public G_AudioMonitor()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class G_AudioText : MonoBehaviour
	{
		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_DBText;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_updateRate;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_deltaTimeOffset;

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xED1FD0", Offset = "0xED1FD0", VA = "0xED1FD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xED214C", Offset = "0xED214C", VA = "0xED214C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xED188C", Offset = "0xED188C", VA = "0xED188C")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xED1FD4", Offset = "0xED1FD4", VA = "0xED1FD4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xED2278", Offset = "0xED2278", VA = "0xED2278")]
		public G_AudioText()
		{
		}
	}
}
namespace Tayx.Graphy.Advanced
{
	[Token(Token = "0x20001EA")]
	public class G_AdvancedData : MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_graphicsDeviceVersionText;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_processorTypeText;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_operatingSystemText;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_systemMemoryText;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text m_graphicsDeviceNameText;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text m_graphicsMemorySizeText;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text m_screenResolutionText;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text m_gameWindowResolutionText;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99EDB0", Offset = "0x99EDB0")]
		[SerializeField]
		private float m_updateRate;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_deltaTime;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StringBuilder m_sb;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly string[] m_windowStrings;

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xECD654", Offset = "0xECD654", VA = "0xECD654")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xECE3C4", Offset = "0xECE3C4", VA = "0xECE3C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xECE948", Offset = "0xECE948", VA = "0xECE948", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xECEF48", Offset = "0xECEF48", VA = "0xECEF48", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xECF100", Offset = "0xECF100", VA = "0xECF100")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xECF10C", Offset = "0xECF10C", VA = "0xECF10C")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xECF264", Offset = "0xECF264", VA = "0xECF264")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xECD658", Offset = "0xECD658", VA = "0xECD658")]
		private void Init()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xECF894", Offset = "0xECF894", VA = "0xECF894")]
		public G_AdvancedData()
		{
		}
	}
}
namespace Tayx.Graphy.CustomizationScene
{
	[Token(Token = "0x20001EB")]
	public class G_CUIColorPicker : MonoBehaviour
	{
		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9998C0", Offset = "0x9998C0")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D satvalTex;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color[] satvalColors;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float Hue;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color[] hueColors;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action resetSatValTexture;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float Saturation;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float Value;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject result;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public G_CUIColorPicker <>4__this;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject hueGO;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action dragH;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GameObject satvalGO;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Action dragSV;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector2 hueSz;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Action applyHue;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Action applySaturationValue;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public GameObject hueKnob;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Action idle;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Vector2 satvalSz;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public GameObject satvalKnob;

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xED5550", Offset = "0xED5550", VA = "0xED5550")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xED58D8", Offset = "0xED58D8", VA = "0xED58D8")]
			internal void <Setup>b__0()
			{
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xED59A0", Offset = "0xED59A0", VA = "0xED59A0")]
			internal void <Setup>b__1()
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xED5AE8", Offset = "0xED5AE8", VA = "0xED5AE8")]
			internal void <Setup>b__2()
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xED5E14", Offset = "0xED5E14", VA = "0xED5E14")]
			internal void <Setup>b__3()
			{
			}

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xED5E8C", Offset = "0xED5E8C", VA = "0xED5E8C")]
			internal void <Setup>b__4()
			{
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xED5FD8", Offset = "0xED5FD8", VA = "0xED5FD8")]
			internal void <Setup>b__5()
			{
			}
		}

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider alphaSlider;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image alphaSliderBGImage;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color _color;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<Color> _onValueChange;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _update;

		[Token(Token = "0x17000117")]
		public Color Color
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0xED4878", Offset = "0xED4878", VA = "0xED4878")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0xED322C", Offset = "0xED322C", VA = "0xED322C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xED50AC", Offset = "0xED50AC", VA = "0xED50AC")]
		public void SetOnValueChangeCallback(Action<Color> onValueChange)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xED50B4", Offset = "0xED50B4", VA = "0xED50B4")]
		private static void RGBToHSV(Color color, out float h, out float s, out float v)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xED5280", Offset = "0xED5280", VA = "0xED5280")]
		private static bool GetLocalMouse(GameObject go, out Vector2 result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xED5460", Offset = "0xED5460", VA = "0xED5460")]
		private static Vector2 GetWidgetSize(GameObject go)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xED5510", Offset = "0xED5510", VA = "0xED5510")]
		private GameObject GO(string name)
		{
			return null;
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xED4884", Offset = "0xED4884", VA = "0xED4884")]
		private void Setup(Color inputColor)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xED5558", Offset = "0xED5558", VA = "0xED5558")]
		public void SetRandomColor()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xED56A0", Offset = "0xED56A0", VA = "0xED56A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xED56F0", Offset = "0xED56F0", VA = "0xED56F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xED5798", Offset = "0xED5798", VA = "0xED5798")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xED57AC", Offset = "0xED57AC", VA = "0xED57AC")]
		public G_CUIColorPicker()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xED5808", Offset = "0xED5808", VA = "0xED5808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7EC4", Offset = "0x9A7EC4")]
		private void <Start>b__16_0(float value)
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class CustomizeGraphy : MonoBehaviour
	{
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99EE14", Offset = "0x99EE14")]
		[SerializeField]
		private G_CUIColorPicker m_colorPicker;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle m_backgroundToggle;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dropdown m_graphyModeDropdown;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_backgroundColorButton;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dropdown m_graphModulePositionDropdown;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99EEA0", Offset = "0x99EEA0")]
		[SerializeField]
		private Dropdown m_fpsModuleStateDropdown;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InputField m_goodInputField;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InputField m_cautionInputField;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button m_goodColorButton;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button m_cautionColorButton;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button m_criticalColorButton;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Slider m_timeToResetMinMaxSlider;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Slider m_fpsGraphResolutionSlider;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Slider m_fpsTextUpdateRateSlider;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99EF6C", Offset = "0x99EF6C")]
		[SerializeField]
		private Dropdown m_ramModuleStateDropdown;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button m_reservedColorButton;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button m_allocatedColorButton;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button m_monoColorButton;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Slider m_ramGraphResolutionSlider;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Slider m_ramTextUpdateRateSlider;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99F008", Offset = "0x99F008")]
		[SerializeField]
		private Dropdown m_audioModuleStateDropdown;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Button m_audioGraphColorButton;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Dropdown m_findAudioListenerDropdown;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Dropdown m_fttWindowDropdown;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Slider m_spectrumSizeSlider;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Slider m_audioGraphResolutionSlider;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Slider m_audioTextUpdateRateSlider;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99F0B4", Offset = "0x99F0B4")]
		[SerializeField]
		private Dropdown m_advancedModulePositionDropdown;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Toggle m_advancedModuleToggle;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99F110", Offset = "0x99F110")]
		[SerializeField]
		private Button m_musicButton;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Button m_sfxButton;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Slider m_musicVolumeSlider;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Slider m_sfxVolumeSlider;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AudioSource m_musicAudioSource;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AudioSource m_sfxAudioSource;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private List<AudioClip> m_sfxAudioClips;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xED2288", Offset = "0xED2288", VA = "0xED2288")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xED2310", Offset = "0xED2310", VA = "0xED2310")]
		private void SetupCallbacks()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xED2F74", Offset = "0xED2F74", VA = "0xED2F74")]
		private void ToggleMusic()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xED2FD4", Offset = "0xED2FD4", VA = "0xED2FD4")]
		private void PlayRandomSFX()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xED3098", Offset = "0xED3098", VA = "0xED3098")]
		public CustomizeGraphy()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xED3114", Offset = "0xED3114", VA = "0xED3114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7ED4", Offset = "0x9A7ED4")]
		private void <SetupCallbacks>b__38_0(bool value)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xED3140", Offset = "0xED3140", VA = "0xED3140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7EE4", Offset = "0x9A7EE4")]
		private void <SetupCallbacks>b__38_1()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xED3230", Offset = "0xED3230", VA = "0xED3230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7EF4", Offset = "0x9A7EF4")]
		private void <SetupCallbacks>b__38_30(Color color)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xED32EC", Offset = "0xED32EC", VA = "0xED32EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F04", Offset = "0x9A7F04")]
		private void <SetupCallbacks>b__38_2(int value)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xED3390", Offset = "0xED3390", VA = "0xED3390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F14", Offset = "0x9A7F14")]
		private void <SetupCallbacks>b__38_3(int value)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xED33F4", Offset = "0xED33F4", VA = "0xED33F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F24", Offset = "0x9A7F24")]
		private void <SetupCallbacks>b__38_4(int value)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xED3430", Offset = "0xED3430", VA = "0xED3430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F34", Offset = "0x9A7F34")]
		private void <SetupCallbacks>b__38_5(string value)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xED349C", Offset = "0xED349C", VA = "0xED349C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F44", Offset = "0x9A7F44")]
		private void <SetupCallbacks>b__38_6(string value)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xED3508", Offset = "0xED3508", VA = "0xED3508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F54", Offset = "0x9A7F54")]
		private void <SetupCallbacks>b__38_7()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xED35F4", Offset = "0xED35F4", VA = "0xED35F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F64", Offset = "0x9A7F64")]
		private void <SetupCallbacks>b__38_31(Color color)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xED36D0", Offset = "0xED36D0", VA = "0xED36D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F74", Offset = "0x9A7F74")]
		private void <SetupCallbacks>b__38_8()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xED37BC", Offset = "0xED37BC", VA = "0xED37BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F84", Offset = "0x9A7F84")]
		private void <SetupCallbacks>b__38_32(Color color)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xED3898", Offset = "0xED3898", VA = "0xED3898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7F94", Offset = "0x9A7F94")]
		private void <SetupCallbacks>b__38_9()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xED3984", Offset = "0xED3984", VA = "0xED3984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7FA4", Offset = "0x9A7FA4")]
		private void <SetupCallbacks>b__38_33(Color color)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xED3A60", Offset = "0xED3A60", VA = "0xED3A60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7FB4", Offset = "0x9A7FB4")]
		private void <SetupCallbacks>b__38_10(float value)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xED3A9C", Offset = "0xED3A9C", VA = "0xED3A9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7FC4", Offset = "0x9A7FC4")]
		private void <SetupCallbacks>b__38_11(float value)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xED3AD8", Offset = "0xED3AD8", VA = "0xED3AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7FD4", Offset = "0x9A7FD4")]
		private void <SetupCallbacks>b__38_12(float value)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xED3B14", Offset = "0xED3B14", VA = "0xED3B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7FE4", Offset = "0x9A7FE4")]
		private void <SetupCallbacks>b__38_13(int value)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xED3B50", Offset = "0xED3B50", VA = "0xED3B50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A7FF4", Offset = "0x9A7FF4")]
		private void <SetupCallbacks>b__38_14()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xED3C3C", Offset = "0xED3C3C", VA = "0xED3C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8004", Offset = "0x9A8004")]
		private void <SetupCallbacks>b__38_34(Color color)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xED3D18", Offset = "0xED3D18", VA = "0xED3D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8014", Offset = "0x9A8014")]
		private void <SetupCallbacks>b__38_15()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xED3E04", Offset = "0xED3E04", VA = "0xED3E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8024", Offset = "0x9A8024")]
		private void <SetupCallbacks>b__38_35(Color color)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xED3EE0", Offset = "0xED3EE0", VA = "0xED3EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8034", Offset = "0x9A8034")]
		private void <SetupCallbacks>b__38_16()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xED3FCC", Offset = "0xED3FCC", VA = "0xED3FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8044", Offset = "0x9A8044")]
		private void <SetupCallbacks>b__38_36(Color color)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xED40A8", Offset = "0xED40A8", VA = "0xED40A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8054", Offset = "0x9A8054")]
		private void <SetupCallbacks>b__38_17(float value)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xED40E4", Offset = "0xED40E4", VA = "0xED40E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8064", Offset = "0x9A8064")]
		private void <SetupCallbacks>b__38_18(float value)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xED4120", Offset = "0xED4120", VA = "0xED4120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8074", Offset = "0x9A8074")]
		private void <SetupCallbacks>b__38_19(int value)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xED415C", Offset = "0xED415C", VA = "0xED415C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8084", Offset = "0x9A8084")]
		private void <SetupCallbacks>b__38_20()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xED4248", Offset = "0xED4248", VA = "0xED4248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8094", Offset = "0x9A8094")]
		private void <SetupCallbacks>b__38_37(Color color)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xED4324", Offset = "0xED4324", VA = "0xED4324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A80A4", Offset = "0x9A80A4")]
		private void <SetupCallbacks>b__38_21(int value)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xED435C", Offset = "0xED435C", VA = "0xED435C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A80B4", Offset = "0x9A80B4")]
		private void <SetupCallbacks>b__38_22(int value)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xED4394", Offset = "0xED4394", VA = "0xED4394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A80C4", Offset = "0x9A80C4")]
		private void <SetupCallbacks>b__38_23(float value)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xED43D0", Offset = "0xED43D0", VA = "0xED43D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A80D4", Offset = "0x9A80D4")]
		private void <SetupCallbacks>b__38_24(float value)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xED440C", Offset = "0xED440C", VA = "0xED440C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A80E4", Offset = "0x9A80E4")]
		private void <SetupCallbacks>b__38_25(float value)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xED4448", Offset = "0xED4448", VA = "0xED4448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A80F4", Offset = "0x9A80F4")]
		private void <SetupCallbacks>b__38_26(int value)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xED4480", Offset = "0xED4480", VA = "0xED4480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8104", Offset = "0x9A8104")]
		private void <SetupCallbacks>b__38_27(bool value)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xED44C8", Offset = "0xED44C8", VA = "0xED44C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8114", Offset = "0x9A8114")]
		private void <SetupCallbacks>b__38_28(float value)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xED44F0", Offset = "0xED44F0", VA = "0xED44F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8124", Offset = "0x9A8124")]
		private void <SetupCallbacks>b__38_29(float value)
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class ForceSliderToMultipleOf3 : MonoBehaviour
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xED4518", Offset = "0xED4518", VA = "0xED4518")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xED45C0", Offset = "0xED45C0", VA = "0xED45C0")]
		private void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xED4628", Offset = "0xED4628", VA = "0xED4628")]
		public ForceSliderToMultipleOf3()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class ForceSliderToPowerOf2 : MonoBehaviour
	{
		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] m_powerOf2Values;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_text;

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xED4630", Offset = "0xED4630", VA = "0xED4630")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xED46D8", Offset = "0xED46D8", VA = "0xED46D8")]
		private void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xED47F4", Offset = "0xED47F4", VA = "0xED47F4")]
		public ForceSliderToPowerOf2()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998214", Offset = "0x998214")]
	public class UpdateTextWithSliderValue : MonoBehaviour
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_text;

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xED60E8", Offset = "0xED60E8", VA = "0xED60E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xED61B8", Offset = "0xED61B8", VA = "0xED61B8")]
		private void UpdateText(float value)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xED6208", Offset = "0xED6208", VA = "0xED6208")]
		public UpdateTextWithSliderValue()
		{
		}
	}
}
namespace DeviceNetwork
{
	[Token(Token = "0x20001F0")]
	public enum DeviceNetworkProtocol
	{
		[Token(Token = "0x4000BF9")]
		None,
		[Token(Token = "0x4000BFA")]
		CS_Req_ChangeHMDLauncher,
		[Token(Token = "0x4000BFB")]
		CS_Ack_ChangeVRApp,
		[Token(Token = "0x4000BFC")]
		SC_Ack_ChangeHMDLauncher,
		[Token(Token = "0x4000BFD")]
		SC_Req_ChangeVRApp,
		[Token(Token = "0x4000BFE")]
		SC_Req_QuitVRApp,
		[Token(Token = "0x4000BFF")]
		CS_Req_ShowHideOverlay,
		[Token(Token = "0x4000C00")]
		SC_Ack_ShowHideOverlay,
		[Token(Token = "0x4000C01")]
		CS_Ack_ShowHideOverlay,
		[Token(Token = "0x4000C02")]
		SC_Req_ErrorCode,
		[Token(Token = "0x4000C03")]
		CS_Ack_ErrorCode,
		[Token(Token = "0x4000C04")]
		SC_Req_GetVersionInfo,
		[Token(Token = "0x4000C05")]
		CS_Ack_GetVersionInfo,
		[Token(Token = "0x4000C06")]
		CS_Req_SendVGSInfo,
		[Token(Token = "0x4000C07")]
		SC_Ack_SendVGSInfo,
		[Token(Token = "0x4000C08")]
		Max
	}
	[Token(Token = "0x20001F1")]
	public enum eErrorCodeType
	{
		[Token(Token = "0x4000C0A")]
		None,
		[Token(Token = "0x4000C0B")]
		AppQuitByFailedConnectToVGS,
		[Token(Token = "0x4000C0C")]
		Max
	}
	[Serializable]
	[Token(Token = "0x20001F2")]
	public class DevicePacketData
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Protocol;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Data;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xCFB528", Offset = "0xCFB528", VA = "0xCFB528")]
		public DevicePacketData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F3")]
	public class DevicePacketDataOverlay
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Request;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Result;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Data;

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xCFBBBC", Offset = "0xCFBBBC", VA = "0xCFBBBC")]
		public DevicePacketDataOverlay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F4")]
	public class DevicePacketDataOverlayAppName
	{
		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AppName;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppFolderName;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string WindowHandle;

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xCFC24C", Offset = "0xCFC24C", VA = "0xCFC24C")]
		public DevicePacketDataOverlayAppName()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F5")]
	public class DevicePacketDataOverlaySetting
	{
		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string OverlayKey;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Scale;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float AdditionalHeight;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DistanceFromCamera;

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xCFC9A0", Offset = "0xCFC9A0", VA = "0xCFC9A0")]
		public DevicePacketDataOverlaySetting()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public static class JsonUtilityCustom
	{
		[Token(Token = "0x6000D0E")]
		public static T FromJson<T>(T instance, string data) where T : class
		{
			return null;
		}
	}
}
namespace BLINDED_AM_ME
{
	[Token(Token = "0x20001F7")]
	public class Mesh_Maker
	{
		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector3> _vertices;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3> _normals;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector2> _uvs;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector4> _tangents;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<List<int>> _subIndices;

		[Token(Token = "0x17000118")]
		public int VertCount
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xD1C890", Offset = "0xD1C890", VA = "0xD1C890")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xD1C8E4", Offset = "0xD1C8E4", VA = "0xD1C8E4")]
		public void AddTriangle(Vector3[] vertices, Vector3[] normals, Vector2[] uvs, int submesh)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xD18BA0", Offset = "0xD18BA0", VA = "0xD18BA0")]
		public void AddTriangle(Vector3[] vertices, Vector3[] normals, Vector2[] uvs, Vector4[] tangents, int submesh)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xD1CBD0", Offset = "0xD1CBD0", VA = "0xD1CBD0")]
		public void RemoveDoubles()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xD1CFE8", Offset = "0xD1CFE8", VA = "0xD1CFE8")]
		private void DoubleFound(int first, int duplicate)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xD1B840", Offset = "0xD1B840", VA = "0xD1B840")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xD18A5C", Offset = "0xD18A5C", VA = "0xD18A5C")]
		public Mesh_Maker()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class MeshCut
	{
		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh_Maker _leftSide;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh_Maker _rightSide;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Plane _blade;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Mesh _victim_mesh;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static List<Vector3> _new_vertices;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int _capMatSub;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Vector3[] leftPoints;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Vector3[] leftNormals;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Vector2[] leftUvs;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Vector4[] leftTangents;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Vector3[] rightPoints;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Vector3[] rightNormals;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Vector2[] rightUvs;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Vector4[] rightTangents;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static Vector3[] final_verts;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static Vector3[] final_norms;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static Vector2[] final_uvs;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static Vector4[] final_tangents;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static Vector3 displacement;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private static Vector2 newUV1;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private static Vector2 newUV2;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static List<Vector3> capVertTracker;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static List<Vector3> capVertpolygon;

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xD17618", Offset = "0xD17618", VA = "0xD17618")]
		public static GameObject[] Cut(GameObject victim, Vector3 anchorPoint, Vector3 normalDirection, Material capMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xD18F04", Offset = "0xD18F04", VA = "0xD18F04")]
		private static void Cut_this_Face(Vector3[] vertices, Vector3[] normals, Vector2[] uvs, Vector4[] tangents, int submesh)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xD1B99C", Offset = "0xD1B99C", VA = "0xD1B99C")]
		private static void FlipFace(Vector3[] verts, Vector3[] norms, Vector2[] uvs, Vector4[] tangents)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xD1B194", Offset = "0xD1B194", VA = "0xD1B194")]
		private static void Capping()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xD1BA88", Offset = "0xD1BA88", VA = "0xD1BA88")]
		private static void FillCap(List<Vector3> vertices)
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xD1C578", Offset = "0xD1C578", VA = "0xD1C578")]
		public MeshCut()
		{
		}
	}
}
namespace uTools
{
	[Token(Token = "0x20001F9")]
	public class Bezier : Tweener
	{
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform target;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3[] path;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isWorld;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float from;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float to;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float mValue;

		[Token(Token = "0x17000119")]
		public float value
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x1753710", Offset = "0x1753710", VA = "0x1753710")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x1753718", Offset = "0x1753718", VA = "0x1753718")]
			set
			{
			}
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1753884", Offset = "0x1753884", VA = "0x1753884", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1753934", Offset = "0x1753934", VA = "0x1753934", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x17539C0", Offset = "0x17539C0", VA = "0x17539C0")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x17537FC", Offset = "0x17537FC", VA = "0x17537FC")]
		public Vector3 GetBezierPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1753A54", Offset = "0x1753A54", VA = "0x1753A54")]
		public Vector3 GetBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1753C1C", Offset = "0x1753C1C", VA = "0x1753C1C")]
		public Bezier()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public interface IPointHandler : IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerClickHandler, IPointerUpHandler, IPointerExitHandler
	{
		[Token(Token = "0x6000D25")]
		new void OnPointerEnter(PointerEventData eventData);

		[Token(Token = "0x6000D26")]
		new void OnPointerDown(PointerEventData eventData);

		[Token(Token = "0x6000D27")]
		new void OnPointerClick(PointerEventData eventData);

		[Token(Token = "0x6000D28")]
		new void OnPointerUp(PointerEventData eventData);

		[Token(Token = "0x6000D29")]
		new void OnPointerExit(PointerEventData eventData);
	}
	[Token(Token = "0x20001FB")]
	public class SliderColors : MonoBehaviour
	{
		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image target;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] colors;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Slider mSlider;

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x17560B8", Offset = "0x17560B8", VA = "0x17560B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1756290", Offset = "0x1756290", VA = "0x1756290")]
		public void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x17563E0", Offset = "0x17563E0", VA = "0x17563E0")]
		public SliderColors()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class ButtonScale : MonoBehaviour, IPointHandler, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerClickHandler, IPointerUpHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform tweenTarget;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 enter;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 down;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 mScale;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TweenScale mTween;

		[Token(Token = "0x1700011A")]
		private RectTransform mCacheTarget
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x1753DA4", Offset = "0x1753DA4", VA = "0x1753DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1753E70", Offset = "0x1753E70", VA = "0x1753E70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1753F38", Offset = "0x1753F38", VA = "0x1753F38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1753FE8", Offset = "0x1753FE8", VA = "0x1753FE8", Slot = "9")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x175408C", Offset = "0x175408C", VA = "0x175408C", Slot = "13")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1754098", Offset = "0x1754098", VA = "0x1754098", Slot = "10")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x17540A4", Offset = "0x17540A4", VA = "0x17540A4", Slot = "12")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x17540B0", Offset = "0x17540B0", VA = "0x17540B0", Slot = "11")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x1753FF4", Offset = "0x1753FF4", VA = "0x1753FF4")]
		private void Scale(Vector3 to)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x17541B0", Offset = "0x17541B0", VA = "0x17541B0")]
		public ButtonScale()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class DragObject : MonoBehaviour, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform target;

		[Token(Token = "0x1700011B")]
		private RectTransform cacheTarget
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x175424C", Offset = "0x175424C", VA = "0x175424C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x17542FC", Offset = "0x17542FC", VA = "0x17542FC", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x17543FC", Offset = "0x17543FC", VA = "0x17543FC")]
		public DragObject()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public enum EaseType
	{
		[Token(Token = "0x4000C46")]
		none,
		[Token(Token = "0x4000C47")]
		easeInQuad,
		[Token(Token = "0x4000C48")]
		easeOutQuad,
		[Token(Token = "0x4000C49")]
		easeInOutQuad,
		[Token(Token = "0x4000C4A")]
		easeInCubic,
		[Token(Token = "0x4000C4B")]
		easeOutCubic,
		[Token(Token = "0x4000C4C")]
		easeInOutCubic,
		[Token(Token = "0x4000C4D")]
		easeInQuart,
		[Token(Token = "0x4000C4E")]
		easeOutQuart,
		[Token(Token = "0x4000C4F")]
		easeInOutQuart,
		[Token(Token = "0x4000C50")]
		easeInQuint,
		[Token(Token = "0x4000C51")]
		easeOutQuint,
		[Token(Token = "0x4000C52")]
		easeInOutQuint,
		[Token(Token = "0x4000C53")]
		easeInSine,
		[Token(Token = "0x4000C54")]
		easeOutSine,
		[Token(Token = "0x4000C55")]
		easeInOutSine,
		[Token(Token = "0x4000C56")]
		easeInExpo,
		[Token(Token = "0x4000C57")]
		easeOutExpo,
		[Token(Token = "0x4000C58")]
		easeInOutExpo,
		[Token(Token = "0x4000C59")]
		easeInCirc,
		[Token(Token = "0x4000C5A")]
		easeOutCirc,
		[Token(Token = "0x4000C5B")]
		easeInOutCirc,
		[Token(Token = "0x4000C5C")]
		linear,
		[Token(Token = "0x4000C5D")]
		spring,
		[Token(Token = "0x4000C5E")]
		easeInBounce,
		[Token(Token = "0x4000C5F")]
		easeOutBounce,
		[Token(Token = "0x4000C60")]
		easeInOutBounce,
		[Token(Token = "0x4000C61")]
		easeInBack,
		[Token(Token = "0x4000C62")]
		easeOutBack,
		[Token(Token = "0x4000C63")]
		easeInOutBack,
		[Token(Token = "0x4000C64")]
		easeInElastic,
		[Token(Token = "0x4000C65")]
		easeOutElastic,
		[Token(Token = "0x4000C66")]
		easeInOutElastic,
		[Token(Token = "0x4000C67")]
		punch
	}
	[Token(Token = "0x20001FF")]
	public enum LoopStyle
	{
		[Token(Token = "0x4000C69")]
		Once,
		[Token(Token = "0x4000C6A")]
		Loop,
		[Token(Token = "0x4000C6B")]
		PingPong
	}
	[Token(Token = "0x2000200")]
	public class EaseManager
	{
		[Token(Token = "0x20004E7")]
		public delegate float EaseDelegate(float start, float end, float t);

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1754404", Offset = "0x1754404", VA = "0x1754404")]
		private static float linear(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x175448C", Offset = "0x175448C", VA = "0x175448C")]
		private static float clerp(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1754558", Offset = "0x1754558", VA = "0x1754558")]
		private static float spring(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x175465C", Offset = "0x175465C", VA = "0x175465C")]
		private static float easeInQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1754670", Offset = "0x1754670", VA = "0x1754670")]
		private static float easeOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x175468C", Offset = "0x175468C", VA = "0x175468C")]
		private static float easeInOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x17546E0", Offset = "0x17546E0", VA = "0x17546E0")]
		private static float easeInCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x17546F8", Offset = "0x17546F8", VA = "0x17546F8")]
		private static float easeOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1754720", Offset = "0x1754720", VA = "0x1754720")]
		private static float easeInOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1754778", Offset = "0x1754778", VA = "0x1754778")]
		private static float easeInQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1754794", Offset = "0x1754794", VA = "0x1754794")]
		private static float easeOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x17547BC", Offset = "0x17547BC", VA = "0x17547BC")]
		private static float easeInOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1754818", Offset = "0x1754818", VA = "0x1754818")]
		private static float easeInQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1754838", Offset = "0x1754838", VA = "0x1754838")]
		private static float easeOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1754868", Offset = "0x1754868", VA = "0x1754868")]
		private static float easeInOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x17548D0", Offset = "0x17548D0", VA = "0x17548D0")]
		private static float easeInSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1754968", Offset = "0x1754968", VA = "0x1754968")]
		private static float easeOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x17549FC", Offset = "0x17549FC", VA = "0x17549FC")]
		private static float easeInOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x1754AA0", Offset = "0x1754AA0", VA = "0x1754AA0")]
		private static float easeInExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x1754B38", Offset = "0x1754B38", VA = "0x1754B38")]
		private static float easeOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x1754BD0", Offset = "0x1754BD0", VA = "0x1754BD0")]
		private static float easeInOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1754CC0", Offset = "0x1754CC0", VA = "0x1754CC0")]
		private static float easeInCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1754D6C", Offset = "0x1754D6C", VA = "0x1754D6C")]
		private static float easeOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1754E18", Offset = "0x1754E18", VA = "0x1754E18")]
		private static float easeInOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1754F10", Offset = "0x1754F10", VA = "0x1754F10")]
		private static float easeInBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1754F4C", Offset = "0x1754F4C", VA = "0x1754F4C")]
		private static float easeOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x175501C", Offset = "0x175501C", VA = "0x175501C")]
		private static float easeInOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x17550A0", Offset = "0x17550A0", VA = "0x17550A0")]
		private static float easeInBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x17550D0", Offset = "0x17550D0", VA = "0x17550D0")]
		private static float easeOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1755110", Offset = "0x1755110", VA = "0x1755110")]
		private static float easeInOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1755194", Offset = "0x1755194", VA = "0x1755194")]
		private static float punch(float amplitude, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x1755254", Offset = "0x1755254", VA = "0x1755254")]
		private static float easeInElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x175533C", Offset = "0x175533C", VA = "0x175533C")]
		private static float easeOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1755420", Offset = "0x1755420", VA = "0x1755420")]
		private static float easeInOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1755584", Offset = "0x1755584", VA = "0x1755584")]
		public static float EasingFromType(float start, float end, float t, EaseType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x1755984", Offset = "0x1755984", VA = "0x1755984")]
		public EaseManager()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class PlayTween : MonoBehaviour, IPointHandler, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerClickHandler, IPointerUpHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject tweenTarget;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Direction playDirection;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Trigger trigger;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int tweenGroup;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool inCludeChildren;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tweener[] mTweeners;

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1755D10", Offset = "0x1755D10", VA = "0x1755D10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1755DF8", Offset = "0x1755DF8", VA = "0x1755DF8", Slot = "9")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1755E1C", Offset = "0x1755E1C", VA = "0x1755E1C", Slot = "10")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1755E30", Offset = "0x1755E30", VA = "0x1755E30", Slot = "11")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1755E44", Offset = "0x1755E44", VA = "0x1755E44", Slot = "12")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x1755E58", Offset = "0x1755E58", VA = "0x1755E58", Slot = "13")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1755E08", Offset = "0x1755E08", VA = "0x1755E08")]
		private void TriggerPlay(Trigger _trigger)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1755E6C", Offset = "0x1755E6C", VA = "0x1755E6C")]
		private void Play()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x17560A4", Offset = "0x17560A4", VA = "0x17560A4")]
		public PlayTween()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public abstract class Tween<T> : Tweener
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T from;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T to;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F1EC", Offset = "0x99F1EC")]
		private T <value>k__BackingField;

		[Token(Token = "0x1700011C")]
		public virtual T value
		{
			[Token(Token = "0x6000D67")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8134", Offset = "0x9A8134")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8144", Offset = "0x9A8144")]
			set
			{
			}
		}

		[Token(Token = "0x6000D69")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A8154", Offset = "0x9A8154")]
		public override void SetStartToCurrentValue()
		{
		}

		[Token(Token = "0x6000D6A")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A818C", Offset = "0x9A818C")]
		public override void SetEndToCurrentValue()
		{
		}

		[Token(Token = "0x6000D6B")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A81C4", Offset = "0x9A81C4")]
		public override void SetCurrentValueToStart()
		{
		}

		[Token(Token = "0x6000D6C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A81FC", Offset = "0x9A81FC")]
		public override void SetCurrentValueToEnd()
		{
		}

		[Token(Token = "0x6000D6D")]
		protected Tween()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class TweenAlpha : Tween<float>
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool includeChildren;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool isCanvasGroup;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float mAlpha;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform mTransform;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Graphic[] mGraphics;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CanvasGroup mCanvasGroup;

		[Token(Token = "0x1700011D")]
		private Transform CachedTranform
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x17564BC", Offset = "0x17564BC", VA = "0x17564BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private Graphic[] CachedGraphics
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x175656C", Offset = "0x175656C", VA = "0x175656C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private CanvasGroup CacheCanvasGroup
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x1756614", Offset = "0x1756614", VA = "0x1756614")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public override float value
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x175676C", Offset = "0x175676C", VA = "0x175676C", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0x1756774", Offset = "0x1756774", VA = "0x1756774", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x17566D4", Offset = "0x17566D4", VA = "0x17566D4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x175688C", Offset = "0x175688C", VA = "0x175688C", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x17567AC", Offset = "0x17567AC", VA = "0x17567AC")]
		private void SetAlpha(Transform _transform, float _alpha)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x17568A8", Offset = "0x17568A8", VA = "0x17568A8")]
		public static TweenAlpha Begin(GameObject go, float from, float to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1756A78", Offset = "0x1756A78", VA = "0x1756A78")]
		public TweenAlpha()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class TweenColor : Tween<Color>
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool includeChildren;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Graphic[] mGraphics;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Color mColor;

		[Token(Token = "0x17000121")]
		public override Color value
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x1756AC8", Offset = "0x1756AC8", VA = "0x1756AC8", Slot = "10")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x1756AD4", Offset = "0x1756AD4", VA = "0x1756AD4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1756BE8", Offset = "0x1756BE8", VA = "0x1756BE8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1756C7C", Offset = "0x1756C7C", VA = "0x1756C7C", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1756B38", Offset = "0x1756B38", VA = "0x1756B38")]
		private void SetColor(Transform _transform, Color _color)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1756CCC", Offset = "0x1756CCC", VA = "0x1756CCC")]
		public static TweenColor Begin(GameObject go, Color from, Color to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1756DE8", Offset = "0x1756DE8", VA = "0x1756DE8")]
		public TweenColor()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public abstract class Tweener : MonoBehaviour
	{
		[Token(Token = "0x20004E8")]
		public enum Style
		{
			[Token(Token = "0x4001EFD")]
			Once,
			[Token(Token = "0x4001EFE")]
			Loop,
			[Token(Token = "0x4001EFF")]
			PingPong
		}

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Tweener current;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EaseType method;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Style style;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve animationCurve;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimeScale;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delay;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool steeperCurves;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int tweenGroup;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFinished;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityAction onUpdate;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject eventReceiver;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public string callWhenFinished;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool mStarted;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float mStartTime;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float mDuration;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float mAmountPerDelta;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float mFactor;

		[Token(Token = "0x17000122")]
		public float amountPerDelta
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x175A294", Offset = "0x175A294", VA = "0x175A294")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000123")]
		public float tweenFactor
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x175A348", Offset = "0x175A348", VA = "0x175A348")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x175A350", Offset = "0x175A350", VA = "0x175A350")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public Direction direction
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x175A3CC", Offset = "0x175A3CC", VA = "0x175A3CC")]
			get
			{
				return default(Direction);
			}
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x175A3EC", Offset = "0x175A3EC", VA = "0x175A3EC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1756768", Offset = "0x1756768", VA = "0x1756768", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x175A438", Offset = "0x175A438", VA = "0x175A438")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x175A774", Offset = "0x175A774", VA = "0x175A774")]
		public void SetOnFinished(UnityEvent finishedCallBack)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x175A77C", Offset = "0x175A77C", VA = "0x175A77C")]
		public void AddOnFinished(UnityEvent finishedCallBack)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x175A780", Offset = "0x175A780", VA = "0x175A780")]
		public void RemoveOnFinished(UnityEvent finishedCallBack)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x175A784", Offset = "0x175A784", VA = "0x175A784")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1756974", Offset = "0x1756974", VA = "0x1756974")]
		public void Sample(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x175A78C", Offset = "0x175A78C", VA = "0x175A78C")]
		public void PlayForward()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x175A794", Offset = "0x175A794", VA = "0x175A794")]
		public void PlayReverse()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1755FFC", Offset = "0x1755FFC", VA = "0x1755FFC")]
		public void Play(bool forward)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x175A79C", Offset = "0x175A79C", VA = "0x175A79C")]
		public void ResetToBeginning()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1755F60", Offset = "0x1755F60", VA = "0x1755F60")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000D90")]
		protected abstract void OnUpdate(float factor, bool isFinished);

		[Token(Token = "0x6000D91")]
		public static T Begin<T>(GameObject go, float duration) where T : Tweener
		{
			return null;
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x175A7E8", Offset = "0x175A7E8", VA = "0x175A7E8", Slot = "6")]
		public virtual void SetStartToCurrentValue()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x175A7EC", Offset = "0x175A7EC", VA = "0x175A7EC", Slot = "7")]
		public virtual void SetEndToCurrentValue()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x175A7F0", Offset = "0x175A7F0", VA = "0x175A7F0", Slot = "8")]
		public virtual void SetCurrentValueToStart()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x175A7F4", Offset = "0x175A7F4", VA = "0x175A7F4", Slot = "9")]
		public virtual void SetCurrentValueToEnd()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x1753C28", Offset = "0x1753C28", VA = "0x1753C28")]
		protected Tweener()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class TweenImage : Tweener
	{
		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99F22C", Offset = "0x99F22C")]
		public float from;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99F244", Offset = "0x99F244")]
		public float to;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mValue;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Image mImage;

		[Token(Token = "0x17000125")]
		public float value
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x1756E48", Offset = "0x1756E48", VA = "0x1756E48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x1756E50", Offset = "0x1756E50", VA = "0x1756E50")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public Image cacheImage
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x1756E58", Offset = "0x1756E58", VA = "0x1756E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1756F58", Offset = "0x1756F58", VA = "0x1756F58", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1756F9C", Offset = "0x1756F9C", VA = "0x1756F9C")]
		public static TweenImage Begin(Image go, float from, float to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1757068", Offset = "0x1757068", VA = "0x1757068")]
		public TweenImage()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class TweenLayoutElement : Tween<float>
	{
		[Token(Token = "0x20004E9")]
		public enum Element
		{
			[Token(Token = "0x4001F01")]
			MinWidth,
			[Token(Token = "0x4001F02")]
			MinHeight,
			[Token(Token = "0x4001F03")]
			PreferredWidth,
			[Token(Token = "0x4001F04")]
			PreferredHeight,
			[Token(Token = "0x4001F05")]
			FlexibleWidth,
			[Token(Token = "0x4001F06")]
			FlexibleHeight
		}

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Element tweenType;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LayoutElement mLayoutElement;

		[Token(Token = "0x17000127")]
		public LayoutElement cachedLayoutElement
		{
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x175706C", Offset = "0x175706C", VA = "0x175706C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		public override float value
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x175711C", Offset = "0x175711C", VA = "0x175711C", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x1757160", Offset = "0x1757160", VA = "0x1757160", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x175728C", Offset = "0x175728C", VA = "0x175728C", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x17572A8", Offset = "0x17572A8", VA = "0x17572A8")]
		public static TweenLayoutElement Begin(GameObject go, float from, float to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1757374", Offset = "0x1757374", VA = "0x1757374")]
		public TweenLayoutElement()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class TweenLongText : Tween<long>
	{
		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private long mValue;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Text mText;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string format;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int digits;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool isTime;

		[Token(Token = "0x17000129")]
		private Text cacheText
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x17573CC", Offset = "0x17573CC", VA = "0x17573CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public override long value
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x175747C", Offset = "0x175747C", VA = "0x175747C", Slot = "10")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x1757484", Offset = "0x1757484", VA = "0x1757484", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x175750C", Offset = "0x175750C", VA = "0x175750C")]
		protected string GetTime()
		{
			return null;
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x17576A0", Offset = "0x17576A0", VA = "0x17576A0", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x17576C8", Offset = "0x17576C8", VA = "0x17576C8")]
		public static TweenText Begin(Text label, float from, float to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x17577A4", Offset = "0x17577A4", VA = "0x17577A4")]
		public TweenLongText()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class TweenPath : Tweener
	{
		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform target;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3[] path;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isWorld;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float from;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float to;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<Vector3> pathPoints;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float mValue;

		[Token(Token = "0x1700012B")]
		public float value
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x175780C", Offset = "0x175780C", VA = "0x175780C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x1757814", Offset = "0x1757814", VA = "0x1757814")]
			set
			{
			}
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1757900", Offset = "0x1757900", VA = "0x1757900", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1757D3C", Offset = "0x1757D3C", VA = "0x1757D3C", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x17579F8", Offset = "0x17579F8", VA = "0x17579F8")]
		public List<Vector3> BuildCRSplinePath(List<Vector3> pts)
		{
			return null;
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1757DC8", Offset = "0x1757DC8", VA = "0x1757DC8")]
		public Vector3 CRSpline(List<Vector3> pts, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x17578F8", Offset = "0x17578F8", VA = "0x17578F8")]
		public Vector3 GetCRSPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x1758220", Offset = "0x1758220", VA = "0x1758220")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x17582B4", Offset = "0x17582B4", VA = "0x17582B4")]
		public TweenPath()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class TweenPosition : Tween<Vector3>
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RectTransform mRectTransform;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform mTransform;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool mIs3D;

		[Token(Token = "0x1700012C")]
		private bool is3D
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x1758334", Offset = "0x1758334", VA = "0x1758334")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x1758550", Offset = "0x1758550", VA = "0x1758550")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		private Transform cachedTransform
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x1758448", Offset = "0x1758448", VA = "0x1758448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private RectTransform cachedRectTransform
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x175855C", Offset = "0x175855C", VA = "0x175855C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		public override Vector3 value
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x1758654", Offset = "0x1758654", VA = "0x1758654", Slot = "10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x1758714", Offset = "0x1758714", VA = "0x1758714", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1758808", Offset = "0x1758808", VA = "0x1758808", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1758908", Offset = "0x1758908", VA = "0x1758908")]
		public static TweenPosition Begin(GameObject go, Vector3 from, Vector3 to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1758A04", Offset = "0x1758A04", VA = "0x1758A04")]
		public TweenPosition()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class TweenRect : Tween<Vector2>
	{
		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform mRectTransform;

		[Token(Token = "0x17000130")]
		public RectTransform cacheRectTransform
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x1758A5C", Offset = "0x1758A5C", VA = "0x1758A5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1758B0C", Offset = "0x1758B0C", VA = "0x1758B0C", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1758C1C", Offset = "0x1758C1C", VA = "0x1758C1C")]
		public static TweenRect Begin(RectTransform go, Vector2 from, Vector2 to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1758D10", Offset = "0x1758D10", VA = "0x1758D10")]
		public TweenRect()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class TweenRotation : Tween<Vector3>
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 mValue;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform mTransform;

		[Token(Token = "0x17000131")]
		public override Vector3 value
		{
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x1758D60", Offset = "0x1758D60", VA = "0x1758D60", Slot = "10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x1758D6C", Offset = "0x1758D6C", VA = "0x1758D6C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		private Transform cachedTransform
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x1758D78", Offset = "0x1758D78", VA = "0x1758D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private Quaternion QuaternionValue
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x1758E20", Offset = "0x1758E20", VA = "0x1758E20")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x1758E40", Offset = "0x1758E40", VA = "0x1758E40")]
			set
			{
			}
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1758E90", Offset = "0x1758E90", VA = "0x1758E90", Slot = "5")]
		protected override void OnUpdate(float _factor, bool _isFinished)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1758F90", Offset = "0x1758F90", VA = "0x1758F90")]
		public static TweenRotation Begin(GameObject go, Vector3 from, Vector3 to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x175908C", Offset = "0x175908C", VA = "0x175908C")]
		public TweenRotation()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class TweenScale : Tween<Vector3>
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 mValue;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform mTransform;

		[Token(Token = "0x17000134")]
		private Transform cachedTransform
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x17590DC", Offset = "0x17590DC", VA = "0x17590DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public override Vector3 value
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x1759184", Offset = "0x1759184", VA = "0x1759184", Slot = "10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x1759190", Offset = "0x1759190", VA = "0x1759190", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x17591E0", Offset = "0x17591E0", VA = "0x17591E0", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x17540B4", Offset = "0x17540B4", VA = "0x17540B4")]
		public static TweenScale Begin(GameObject go, Vector3 from, Vector3 to, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x17592E0", Offset = "0x17592E0", VA = "0x17592E0")]
		public TweenScale()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class TweenShake : Tweener
	{
		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RectTransform mRectTransform;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool is3D;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform mTarget;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 localPosition;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 position;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 localScale;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 localEulerAngles;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 eulerAngles;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		protected Vector3 limit;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected bool isLocal;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		protected ShakeType shakeType;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 mValue;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 tempVector3;

		[Token(Token = "0x17000136")]
		public Transform target
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x1759330", Offset = "0x1759330", VA = "0x1759330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		public Vector3 value
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x17594F8", Offset = "0x17594F8", VA = "0x17594F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x1759504", Offset = "0x1759504", VA = "0x1759504")]
			set
			{
			}
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1759450", Offset = "0x1759450", VA = "0x1759450")]
		private void CacheTargetInfo()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x17598AC", Offset = "0x17598AC", VA = "0x17598AC", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1759510", Offset = "0x1759510", VA = "0x1759510")]
		private void Shake()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1759938", Offset = "0x1759938", VA = "0x1759938")]
		public static TweenShake Begin(GameObject go, Vector3 from, float duration = 1f, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1759A00", Offset = "0x1759A00", VA = "0x1759A00")]
		public TweenShake()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class TweenSlider : Tween<float>
	{
		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float mValue;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Slider mSlider;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool NeedCarry;

		[Token(Token = "0x17000138")]
		private Slider cacheSlider
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x1759AD0", Offset = "0x1759AD0", VA = "0x1759AD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public float sliderValue
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x1759BAC", Offset = "0x1759BAC", VA = "0x1759BAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public override float value
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x1759C88", Offset = "0x1759C88", VA = "0x1759C88", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x1759C90", Offset = "0x1759C90", VA = "0x1759C90", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1759C98", Offset = "0x1759C98", VA = "0x1759C98", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1759CB4", Offset = "0x1759CB4", VA = "0x1759CB4")]
		public static TweenSlider Begin(Slider slider, float from, float to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1759D90", Offset = "0x1759D90", VA = "0x1759D90")]
		public TweenSlider()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class TweenText : Tween<float>
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float mValue;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Text mText;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string format;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int digits;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool isTime;

		[Token(Token = "0x1700013B")]
		private Text cacheText
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x1759DE8", Offset = "0x1759DE8", VA = "0x1759DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		public override float value
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x1759E98", Offset = "0x1759E98", VA = "0x1759E98", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x1759EA0", Offset = "0x1759EA0", VA = "0x1759EA0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x1759FA0", Offset = "0x1759FA0", VA = "0x1759FA0")]
		protected string GetTime()
		{
			return null;
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x175A134", Offset = "0x175A134", VA = "0x175A134", Slot = "5")]
		protected override void OnUpdate(float factor, bool isFinished)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x175A150", Offset = "0x175A150", VA = "0x175A150")]
		public static TweenText Begin(Text label, float from, float to, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x175A22C", Offset = "0x175A22C", VA = "0x175A22C")]
		public TweenText()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public enum Direction
	{
		[Token(Token = "0x4000CC0")]
		Reverse = -1,
		[Token(Token = "0x4000CC1")]
		Toggle,
		[Token(Token = "0x4000CC2")]
		Forward
	}
	[Token(Token = "0x2000212")]
	public enum Trigger
	{
		[Token(Token = "0x4000CC4")]
		OnPointerEnter,
		[Token(Token = "0x4000CC5")]
		OnPointerDown,
		[Token(Token = "0x4000CC6")]
		OnPointerClick,
		[Token(Token = "0x4000CC7")]
		OnPointerUp,
		[Token(Token = "0x4000CC8")]
		OnPointerExit
	}
	[Token(Token = "0x2000213")]
	public enum ShakeType
	{
		[Token(Token = "0x4000CCA")]
		ePosition,
		[Token(Token = "0x4000CCB")]
		eScale,
		[Token(Token = "0x4000CCC")]
		eRotation
	}
}
namespace Runningtap
{
	[Token(Token = "0x2000214")]
	public class AnalyzeAudio : MonoBehaviour
	{
		[Token(Token = "0x20004EA")]
		public enum Channel
		{
			[Token(Token = "0x4001F08")]
			Stereo,
			[Token(Token = "0x4001F09")]
			Left,
			[Token(Token = "0x4001F0A")]
			Right
		}

		[Token(Token = "0x20004EB")]
		public enum FFTW
		{
			[Token(Token = "0x4001F0C")]
			Rectangular,
			[Token(Token = "0x4001F0D")]
			Triangle,
			[Token(Token = "0x4001F0E")]
			Hamming,
			[Token(Token = "0x4001F0F")]
			Hanning,
			[Token(Token = "0x4001F10")]
			Blackman,
			[Token(Token = "0x4001F11")]
			BlackmanHarris
		}

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve FrequencyDistributionCurve;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] frequencyDistribution;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float[] AudioBand;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float[] AudioBandBuffer;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float[] stereoBandSpread;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float[] stereoBandBufferSpread;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float Amplitude;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float AmplitudeBuffer;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] samplesLeft;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] samplesRight;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] frequencyBand;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] bandBuffer;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] bufferDecrease;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] freqBandHighest;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float amplitudeHighest;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99F2EC", Offset = "0x99F2EC")]
		public int FrequencyBands;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float AudioProfile;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Channel channel;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FFTW FrequencyReadMethod;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private FFTWindow fftw;

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xB5D580", Offset = "0xB5D580", VA = "0xB5D580")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xB5D818", Offset = "0xB5D818", VA = "0xB5D818")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xB5D87C", Offset = "0xB5D87C", VA = "0xB5D87C")]
		private void GetSpectrumAudioSource()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xB5D6CC", Offset = "0xB5D6CC", VA = "0xB5D6CC")]
		private void GetFrequencyDistribution()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xB5D8D0", Offset = "0xB5D8D0", VA = "0xB5D8D0")]
		private void MakeFrequencyBands()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xB5DAE8", Offset = "0xB5DAE8", VA = "0xB5DAE8")]
		private void BandBuffer()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xB5DC2C", Offset = "0xB5DC2C", VA = "0xB5DC2C")]
		private void CreateAudioBands()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xB5DDE4", Offset = "0xB5DDE4", VA = "0xB5DDE4")]
		private void GetAmplitude()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xB5D7B4", Offset = "0xB5D7B4", VA = "0xB5D7B4")]
		private void MakeAudioProfile(float audioProfile)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xB5DE9C", Offset = "0xB5DE9C", VA = "0xB5DE9C")]
		public AnalyzeAudio()
		{
		}
	}
}
namespace Xft
{
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x998278", Offset = "0x998278")]
	public class Spline
	{
		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SplineControlPoint> mControlPoints;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SplineControlPoint> mSegments;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Granularity;

		[Token(Token = "0x1700013D")]
		public SplineControlPoint Item
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x174C1B8", Offset = "0x174C1B8", VA = "0x174C1B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public List<SplineControlPoint> Segments
		{
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x174C244", Offset = "0x174C244", VA = "0x174C244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		public List<SplineControlPoint> ControlPoints
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x174C24C", Offset = "0x174C24C", VA = "0x174C24C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x174C254", Offset = "0x174C254", VA = "0x174C254")]
		public SplineControlPoint NextControlPoint(SplineControlPoint controlpoint)
		{
			return null;
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x174C2F0", Offset = "0x174C2F0", VA = "0x174C2F0")]
		public SplineControlPoint PreviousControlPoint(SplineControlPoint controlpoint)
		{
			return null;
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x174C388", Offset = "0x174C388", VA = "0x174C388")]
		public Vector3 NextPosition(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x174C3C0", Offset = "0x174C3C0", VA = "0x174C3C0")]
		public Vector3 PreviousPosition(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x174C3F8", Offset = "0x174C3F8", VA = "0x174C3F8")]
		public Vector3 PreviousNormal(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x174C430", Offset = "0x174C430", VA = "0x174C430")]
		public Vector3 NextNormal(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x174C468", Offset = "0x174C468", VA = "0x174C468")]
		public SplineControlPoint LenToSegment(float t, out float localF)
		{
			return null;
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x174C620", Offset = "0x174C620", VA = "0x174C620")]
		public static Vector3 CatmulRom(Vector3 T0, Vector3 P0, Vector3 P1, Vector3 T1, float f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x174C7A8", Offset = "0x174C7A8", VA = "0x174C7A8")]
		public Vector3 InterpolateByLen(float tl)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x174C8E4", Offset = "0x174C8E4", VA = "0x174C8E4")]
		public Vector3 InterpolateNormalByLen(float tl)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x174CA14", Offset = "0x174CA14", VA = "0x174CA14")]
		public SplineControlPoint AddControlPoint(Vector3 pos, Vector3 up)
		{
			return null;
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x174CB54", Offset = "0x174CB54", VA = "0x174CB54")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x174CBAC", Offset = "0x174CBAC", VA = "0x174CBAC")]
		private void RefreshDistance()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x174CDAC", Offset = "0x174CDAC", VA = "0x174CDAC")]
		public void RefreshSpline()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x174CF14", Offset = "0x174CF14", VA = "0x174CF14")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class SplineControlPoint
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Normal;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ControlPointIndex;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int SegmentIndex;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Dist;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Spline mSpline;

		[Token(Token = "0x17000140")]
		public SplineControlPoint NextControlPoint
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x174CFC4", Offset = "0x174CFC4", VA = "0x174CFC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public SplineControlPoint PreviousControlPoint
		{
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x174CFE4", Offset = "0x174CFE4", VA = "0x174CFE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		public Vector3 NextPosition
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x174D004", Offset = "0x174D004", VA = "0x174D004")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000143")]
		public Vector3 PreviousPosition
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x174D024", Offset = "0x174D024", VA = "0x174D024")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000144")]
		public Vector3 NextNormal
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x174D044", Offset = "0x174D044", VA = "0x174D044")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000145")]
		public Vector3 PreviousNormal
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x174D064", Offset = "0x174D064", VA = "0x174D064")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000146")]
		public bool IsValid
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x174CEF8", Offset = "0x174CEF8", VA = "0x174CEF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x174D084", Offset = "0x174D084", VA = "0x174D084")]
		private Vector3 GetNext2Position()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x174D0AC", Offset = "0x174D0AC", VA = "0x174D0AC")]
		private Vector3 GetNext2Normal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x174C7DC", Offset = "0x174C7DC", VA = "0x174C7DC")]
		public Vector3 Interpolate(float localF)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x174C918", Offset = "0x174C918", VA = "0x174C918")]
		public Vector3 InterpolateNormal(float localF)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x174CB24", Offset = "0x174CB24", VA = "0x174CB24")]
		public void Init(Spline owner)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x174CB14", Offset = "0x174CB14", VA = "0x174CB14")]
		public SplineControlPoint()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class VertexPool
	{
		[Token(Token = "0x20004EC")]
		public class VertexSegment
		{
			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int VertStart;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int IndexStart;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int VertCount;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int IndexCount;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexPool Pool;

			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x174DB08", Offset = "0x174DB08", VA = "0x174DB08")]
			public VertexSegment(int start, int count, int istart, int icount, VertexPool pool)
			{
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x174DD84", Offset = "0x174DD84", VA = "0x174DD84")]
			public void ClearIndices()
			{
			}
		}

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] Vertices;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] Indices;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2[] UVs;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] Colors;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IndiceChanged;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool ColorChanged;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool UVChanged;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool VertChanged;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool UV2Changed;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int VertexTotal;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int VertexUsed;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int IndexTotal;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected int IndexUsed;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool FirstUpdate;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		protected bool VertCountChanged;

		[Token(Token = "0x4000CFA")]
		public const int BlockSize = 108;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float BoundsScheduleTime;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float ElapsedTime;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected XWeaponTrail _owner;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected MeshFilter _meshFilter;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Mesh _mesh2d;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Material _material;

		[Token(Token = "0x17000147")]
		public Mesh MyMesh
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x174D0E4", Offset = "0x174D0E4", VA = "0x174D0E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x174D1F0", Offset = "0x174D1F0", VA = "0x174D1F0")]
		public void RecalculateBounds()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x174D210", Offset = "0x174D210", VA = "0x174D210")]
		private void CreateMeshObj(XWeaponTrail owner, Material material)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x174D544", Offset = "0x174D544", VA = "0x174D544")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x174D614", Offset = "0x174D614", VA = "0x174D614")]
		public VertexPool(Material material, XWeaponTrail owner)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x174D80C", Offset = "0x174D80C", VA = "0x174D80C")]
		public VertexSegment GetVertices(int vcount, int icount)
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x174D714", Offset = "0x174D714", VA = "0x174D714")]
		protected void InitArrays()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x174D964", Offset = "0x174D964", VA = "0x174D964")]
		public void EnlargeArrays(int count, int icount)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x174DB64", Offset = "0x174DB64", VA = "0x174DB64")]
		public void LateUpdate()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class XWeaponTrail : MonoBehaviour
	{
		[Token(Token = "0x20004ED")]
		public class Element
		{
			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 PointStart;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 PointEnd;

			[Token(Token = "0x170003A7")]
			public Vector3 Pos
			{
				[Token(Token = "0x6001E12")]
				[Address(RVA = "0x174E398", Offset = "0x174E398", VA = "0x174E398")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x174F2A8", Offset = "0x174F2A8", VA = "0x174F2A8")]
			public Element(Vector3 start, Vector3 end)
			{
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x174F408", Offset = "0x174F408", VA = "0x174F408")]
			public Element()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		public class ElementPool
		{
			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Stack<Element> _stack;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2AB4", Offset = "0x9A2AB4")]
			private int <CountAll>k__BackingField;

			[Token(Token = "0x170003A8")]
			public int CountAll
			{
				[Token(Token = "0x6001E15")]
				[Address(RVA = "0x174F46C", Offset = "0x174F46C", VA = "0x174F46C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB504", Offset = "0x9AB504")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E16")]
				[Address(RVA = "0x174F474", Offset = "0x174F474", VA = "0x174F474")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB514", Offset = "0x9AB514")]
				private set
				{
				}
			}

			[Token(Token = "0x170003A9")]
			public int CountActive
			{
				[Token(Token = "0x6001E17")]
				[Address(RVA = "0x174F47C", Offset = "0x174F47C", VA = "0x174F47C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170003AA")]
			public int CountInactive
			{
				[Token(Token = "0x6001E18")]
				[Address(RVA = "0x174F4A0", Offset = "0x174F4A0", VA = "0x174F4A0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x174DEFC", Offset = "0x174DEFC", VA = "0x174DEFC")]
			public ElementPool(int preCount)
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x174F1A8", Offset = "0x174F1A8", VA = "0x174F1A8")]
			public Element Get()
			{
				return null;
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x174F240", Offset = "0x174F240", VA = "0x174F240")]
			public void Release(Element element)
			{
			}
		}

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Version;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseWith2D;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SortingLayerName;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int SortingOrder;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform PointStart;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform PointEnd;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int MaxFrame;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int Granularity;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Fps;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color MyColor;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material MyMaterial;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject mBoxa;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float mTrailWidth;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Element mHeadElem;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<Element> mSnapshotList;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected ElementPool mElemPool;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Spline mSpline;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float mFadeT;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected bool mIsFading;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float mFadeTime;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float mElapsedTime;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float mFadeElapsedime;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected GameObject mMeshObj;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected VertexPool mVertexPool;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected VertexPool.VertexSegment mVertexSegment;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool mInited;

		[Token(Token = "0x17000148")]
		public float UpdateInterval
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x174DE08", Offset = "0x174DE08", VA = "0x174DE08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000149")]
		public Vector3 CurHeadPos
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0x174DE18", Offset = "0x174DE18", VA = "0x174DE18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700014A")]
		public float TrailWidth
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x174DEF4", Offset = "0x174DEF4", VA = "0x174DEF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x174B80C", Offset = "0x174B80C", VA = "0x174B80C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x174BEF4", Offset = "0x174BEF4", VA = "0x174BEF4")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x174BECC", Offset = "0x174BECC", VA = "0x174BECC")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x174C1A0", Offset = "0x174C1A0", VA = "0x174C1A0")]
		public void StopSmoothly(float fadeTime)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x174EA04", Offset = "0x174EA04", VA = "0x174EA04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x174ECFC", Offset = "0x174ECFC", VA = "0x174ECFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x174ED20", Offset = "0x174ED20", VA = "0x174ED20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x174ED38", Offset = "0x174ED38", VA = "0x174ED38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x174ED40", Offset = "0x174ED40", VA = "0x174ED40")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x174E22C", Offset = "0x174E22C", VA = "0x174E22C")]
		private void InitSpline()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x174E444", Offset = "0x174E444", VA = "0x174E444")]
		private void RefreshSpline()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x174E630", Offset = "0x174E630", VA = "0x174E630")]
		private void UpdateVertex()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x174EF44", Offset = "0x174EF44", VA = "0x174EF44")]
		private void UpdateIndices()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x174EA94", Offset = "0x174EA94", VA = "0x174EA94")]
		private void UpdateHeadElem()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x174EC8C", Offset = "0x174EC8C", VA = "0x174EC8C")]
		private void UpdateFade()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x174EB54", Offset = "0x174EB54", VA = "0x174EB54")]
		private void RecordCurElem()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x174E0B4", Offset = "0x174E0B4", VA = "0x174E0B4")]
		private void InitOriginalElements()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x174DFFC", Offset = "0x174DFFC", VA = "0x174DFFC")]
		private void InitMeshObj()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x174F308", Offset = "0x174F308", VA = "0x174F308")]
		public XWeaponTrail()
		{
		}
	}
}
namespace GlowingSwords.Scripts
{
	[Token(Token = "0x2000219")]
	public class GameManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9998D0", Offset = "0x9998D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GlowingSword> <>9__2_0;

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xD0E9F4", Offset = "0xD0E9F4", VA = "0xD0E9F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xD0E9FC", Offset = "0xD0E9FC", VA = "0xD0E9FC")]
			internal void <ToggleLightSabers>b__2_0(GlowingSword s)
			{
			}
		}

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GlowingSword> _lightSabers;

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xD0E808", Offset = "0xD0E808", VA = "0xD0E808")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xD0E878", Offset = "0xD0E878", VA = "0xD0E878")]
		public void ToggleLightSabers()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xD0E984", Offset = "0xD0E984", VA = "0xD0E984")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public static class GameObjectExtensions
	{
		[Serializable]
		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9998E0", Offset = "0x9998E0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshFilter, float> <>9__18_0;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MeshFilter, float> <>9__18_1;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MeshFilter, float> <>9__18_2;

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0xD11038", Offset = "0xD11038", VA = "0xD11038")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xD11040", Offset = "0xD11040", VA = "0xD11040")]
			internal float <GetMaxChildrenMeshSize>b__18_0(MeshFilter x)
			{
				return default(float);
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xD110A4", Offset = "0xD110A4", VA = "0xD110A4")]
			internal float <GetMaxChildrenMeshSize>b__18_1(MeshFilter x)
			{
				return default(float);
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xD1110C", Offset = "0xD1110C", VA = "0xD1110C")]
			internal float <GetMaxChildrenMeshSize>b__18_2(MeshFilter x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xD0EA38", Offset = "0xD0EA38", VA = "0xD0EA38")]
		public static void SetXZero(this GameObject gameObject)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xD0EB10", Offset = "0xD0EB10", VA = "0xD0EB10")]
		public static IEnumerable<GameObject> FindChildrenOnNextHierarchyEdge(this GameObject gameObject, bool isActive = true)
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xD0EE5C", Offset = "0xD0EE5C", VA = "0xD0EE5C")]
		private static List<GameObject> GetChildren(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xD0FE4C", Offset = "0xD0FE4C", VA = "0xD0FE4C")]
		public static GameObject[] GetAllChildren(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xD0FF50", Offset = "0xD0FF50", VA = "0xD0FF50")]
		public static GameObject[] FindChildrenByName(this GameObject go, string nam)
		{
			return null;
		}

		[Token(Token = "0x6000E35")]
		public static T FindChildByType<T>(this GameObject go)
		{
			return (T)null;
		}

		[Token(Token = "0x6000E36")]
		public static T FindChildrenByTypeAndName<T>(this GameObject go, string name, bool onlyStartsWithName = false)
		{
			return (T)null;
		}

		[Token(Token = "0x6000E37")]
		public static List<T> FindChildrenByType<T>(this GameObject go, bool needToBeActiveInHierarchy = false)
		{
			return null;
		}

		[Token(Token = "0x6000E38")]
		public static List<Tuple<TFirst, TSecond>> FindChildrenByTypes<TFirst, TSecond>(this GameObject go, bool needToBeActiveInHierarchy = false) where TFirst : Component where TSecond : Component
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xD100EC", Offset = "0xD100EC", VA = "0xD100EC")]
		public static GameObject[] FindChildrenStartName(this GameObject go, string nam)
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xD10288", Offset = "0xD10288", VA = "0xD10288")]
		public static GameObject[] FindChildrenByName(this GameObject go, string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xD103C4", Offset = "0xD103C4", VA = "0xD103C4")]
		public static IEnumerable<Image> FindImageChildrenByName(this GameObject go, string name, bool startsOnlyWithName)
		{
			return null;
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xD105AC", Offset = "0xD105AC", VA = "0xD105AC")]
		public static GameObject FindChildByName(this GameObject go, string nam)
		{
			return null;
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xD10670", Offset = "0xD10670", VA = "0xD10670")]
		public static Image[] FindImageChildrenByName(this GameObject go, string[] names, bool startsOnlyWithName)
		{
			return null;
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xD107B8", Offset = "0xD107B8", VA = "0xD107B8")]
		public static Sprite[] FindChildrenBySpriteType(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xD10864", Offset = "0xD10864", VA = "0xD10864")]
		public static void SetActiveRecursivelyNew(this GameObject go, bool active)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xD10B48", Offset = "0xD10B48", VA = "0xD10B48")]
		public static void DestroyComponentIfPossible(this GameObject go, Type type, bool destroyImmediate = false)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xD10C78", Offset = "0xD10C78", VA = "0xD10C78")]
		public static void DestroyComponentsIfPossible(this GameObject go, Type[] types, bool destroyImmediate = false)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xD10CF4", Offset = "0xD10CF4", VA = "0xD10CF4")]
		public static Vector3? GetMaxChildrenMeshSize(this GameObject gameObject)
		{
			return null;
		}
	}
	[Token(Token = "0x200021B")]
	public class GlowingSword : MonoBehaviour
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99F308", Offset = "0x99F308")]
		[SerializeField]
		private bool saberActive;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _lastSaberActiveStatus;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99F354", Offset = "0x99F354")]
		public Color bladeColor;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GlowingSwordBlade> _blades;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99F38C", Offset = "0x99F38C")]
		public float BladeExtendSpeed;

		[Token(Token = "0x1700014B")]
		public Color BladeColor
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xD11174", Offset = "0xD11174", VA = "0xD11174")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xD11180", Offset = "0xD11180", VA = "0xD11180")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public bool SaberActive
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xD111D0", Offset = "0xD111D0", VA = "0xD111D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xD111D8", Offset = "0xD111D8", VA = "0xD111D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xD1124C", Offset = "0xD1124C", VA = "0xD1124C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xD11400", Offset = "0xD11400", VA = "0xD11400")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xD11280", Offset = "0xD11280", VA = "0xD11280")]
		private bool FindSetupBlades()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xD11350", Offset = "0xD11350", VA = "0xD11350")]
		private void Setup()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xD11480", Offset = "0xD11480", VA = "0xD11480")]
		private void UpdateColor()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xD11574", Offset = "0xD11574", VA = "0xD11574")]
		private void UpdateBlades()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xD111AC", Offset = "0xD111AC", VA = "0xD111AC")]
		public void UpdateLightSaber()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xD0EA28", Offset = "0xD0EA28", VA = "0xD0EA28")]
		public void ToggleActive()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xD1161C", Offset = "0xD1161C", VA = "0xD1161C")]
		public GlowingSword()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xD11638", Offset = "0xD11638", VA = "0xD11638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8344", Offset = "0x9A8344")]
		private void <Setup>b__14_0(GlowingSwordBlade x)
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xD1186C", Offset = "0xD1186C", VA = "0xD1186C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8354", Offset = "0x9A8354")]
		private void <UpdateColor>b__15_0(GlowingSwordBlade x)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xD119D8", Offset = "0xD119D8", VA = "0xD119D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8364", Offset = "0x9A8364")]
		private void <UpdateBlades>b__16_0(GlowingSwordBlade b)
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class GlowingSwordBlade : MonoBehaviour
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _animationRunning;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color _color;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light _light;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _bladeActive;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _extendDelta;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _localXScale;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _localZScale;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _minScale;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _maxScale;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _scaleCurrent;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x1700014D")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xD11D08", Offset = "0xD11D08", VA = "0xD11D08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		public bool BladeActive
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xD11E34", Offset = "0xD11E34", VA = "0xD11E34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xD11A18", Offset = "0xD11A18", VA = "0xD11A18")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public Color Color
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xD11E3C", Offset = "0xD11E3C", VA = "0xD11E3C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0xD11890", Offset = "0xD11890", VA = "0xD11890")]
			set
			{
			}
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xD11660", Offset = "0xD11660", VA = "0xD11660")]
		public void Setup(float extendSpeed, bool active)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xD11EE4", Offset = "0xD11EE4", VA = "0xD11EE4")]
		private void ForceSetActive(bool active)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xD11FBC", Offset = "0xD11FBC", VA = "0xD11FBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xD11F3C", Offset = "0xD11F3C", VA = "0xD11F3C")]
		private void UpdateBladeScaleHeight(float deltaScale)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xD11E48", Offset = "0xD11E48", VA = "0xD11E48")]
		private void UpdateLight()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xD11BA4", Offset = "0xD11BA4", VA = "0xD11BA4")]
		public void UpdateSaberSize()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xD11ADC", Offset = "0xD11ADC", VA = "0xD11ADC")]
		public void UpdateLighting()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xD11FCC", Offset = "0xD11FCC", VA = "0xD11FCC")]
		public GlowingSwordBlade()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class Spin : MonoBehaviour
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _spinDirection;

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xD6BEA8", Offset = "0xD6BEA8", VA = "0xD6BEA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xD6BF68", Offset = "0xD6BF68", VA = "0xD6BF68")]
		public Spin()
		{
		}
	}
}
namespace Kino
{
	[Token(Token = "0x200021E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9982C0", Offset = "0x9982C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9982C0", Offset = "0x9982C0")]
	public class Vignette : MonoBehaviour
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99F3D4", Offset = "0x99F3D4")]
		private float _falloff;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _material;

		[Token(Token = "0x17000150")]
		public float intensity
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0xBB1A20", Offset = "0xBB1A20", VA = "0xBB1A20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0xBB1A28", Offset = "0xBB1A28", VA = "0xBB1A28")]
			set
			{
			}
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xBB1A30", Offset = "0xBB1A30", VA = "0xBB1A30")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xBB1BFC", Offset = "0xBB1BFC", VA = "0xBB1BFC")]
		public Vignette()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998358", Offset = "0x998358")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4000D30")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4000D34")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xC83B88", Offset = "0xC83B88", VA = "0xC83B88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xC83C00", Offset = "0xC83C00", VA = "0xC83C00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xC83CE8", Offset = "0xC83CE8", VA = "0xC83CE8")]
		public FPSCounter()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x2000220")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9983BC", Offset = "0x9983BC")]
	public class ColorGradingEffect : PostEffectsBase
	{
		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color _Shadows;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color _Midtones;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color _Hilights;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader overlayShader;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material overlayMaterial;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ColorGradeConfig m_TargetConfig;

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xC820B0", Offset = "0xC820B0", VA = "0xC820B0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xC823D4", Offset = "0xC823D4", VA = "0xC823D4")]
		public static void getLevels(Vector3 HSVshadows, Vector3 HSVmidtones, Vector3 HSVhighlights, out Color gamma, out Color lowIn, out Color lowOut, out Color hiIn, out Color hiOut)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xC82E00", Offset = "0xC82E00", VA = "0xC82E00")]
		private static Vector3 ColorToHSV(Color c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xC82E8C", Offset = "0xC82E8C", VA = "0xC82E8C")]
		public void applyColorGrading(ColorGradeConfig config)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xC82E94", Offset = "0xC82E94", VA = "0xC82E94")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xC83058", Offset = "0xC83058", VA = "0xC83058")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xC83474", Offset = "0xC83474", VA = "0xC83474")]
		public ColorGradingEffect()
		{
		}
	}
	[Token(Token = "0x2000221")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998430", Offset = "0x998430")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xC82218", Offset = "0xC82218", VA = "0xC82218")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xC83598", Offset = "0xC83598", VA = "0xC83598")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xC8372C", Offset = "0xC8372C", VA = "0xC8372C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xC83738", Offset = "0xC83738", VA = "0xC83738")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xC83740", Offset = "0xC83740", VA = "0xC83740", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xC83748", Offset = "0xC83748", VA = "0xC83748")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xC82100", Offset = "0xC82100", VA = "0xC82100")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xC83754", Offset = "0xC83754", VA = "0xC83754")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xC837B0", Offset = "0xC837B0", VA = "0xC837B0")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xC823D0", Offset = "0xC823D0", VA = "0xC823D0")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xC837B8", Offset = "0xC837B8", VA = "0xC837B8")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xC8356C", Offset = "0xC8356C", VA = "0xC8356C")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xC83808", Offset = "0xC83808", VA = "0xC83808")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xC83558", Offset = "0xC83558", VA = "0xC83558")]
		public PostEffectsBase()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9984A4", Offset = "0x9984A4")]
	public class UIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xC820A0", Offset = "0xC820A0", VA = "0xC820A0", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xC820A8", Offset = "0xC820A8", VA = "0xC820A8")]
		public UIIgnoreRaycast()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x2000223")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xC79160", Offset = "0xC79160", VA = "0xC79160")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x2000224")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xC7A07C", Offset = "0xC7A07C", VA = "0xC7A07C")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000225")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xC816FC", Offset = "0xC816FC", VA = "0xC816FC")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x2000226")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xC81730", Offset = "0xC81730", VA = "0xC81730")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x20004F1")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x20004F2")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4001F2C")]
			DepthTexture,
			[Token(Token = "0x4001F2D")]
			DepthNormalsTexture,
			[Token(Token = "0x4001F2E")]
			GBuffer
		}

		[Token(Token = "0x4000D43")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x4000D44")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x17000151")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xE180AC", Offset = "0xE180AC", VA = "0xE180AC")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x17000152")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0xE18160", Offset = "0xE18160", VA = "0xE18160")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		public override bool active
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0xE18200", Offset = "0xE18200", VA = "0xE18200", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xE18280", Offset = "0xE18280", VA = "0xE18280", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xE182BC", Offset = "0xE182BC", VA = "0xE182BC", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xE18304", Offset = "0xE18304", VA = "0xE18304", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xE18374", Offset = "0xE18374", VA = "0xE18374", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xE18D40", Offset = "0xE18D40", VA = "0xE18D40")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x20004F3")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x4000D46")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x17000154")]
		public override bool active
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xE192E8", Offset = "0xE192E8", VA = "0xE192E8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xE19368", Offset = "0xE19368", VA = "0xE19368")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xE19E1C", Offset = "0xE19E1C", VA = "0xE19E1C")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x20004F4")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x20004F5")]
		private enum Pass
		{
			[Token(Token = "0x4001F41")]
			Depth,
			[Token(Token = "0x4001F42")]
			Normals,
			[Token(Token = "0x4001F43")]
			MovecOpacity,
			[Token(Token = "0x4001F44")]
			MovecImaging,
			[Token(Token = "0x4001F45")]
			MovecArrows
		}

		[Token(Token = "0x20004F6")]
		private class ArrowArray
		{
			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2AC4", Offset = "0x9A2AC4")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2AD4", Offset = "0x9A2AD4")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A2AE4", Offset = "0x9A2AE4")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x170003AB")]
			public Mesh mesh
			{
				[Token(Token = "0x6001E27")]
				[Address(RVA = "0xE1B2F0", Offset = "0xE1B2F0", VA = "0xE1B2F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB524", Offset = "0x9AB524")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E28")]
				[Address(RVA = "0xE1B2F8", Offset = "0xE1B2F8", VA = "0xE1B2F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB534", Offset = "0x9AB534")]
				private set
				{
				}
			}

			[Token(Token = "0x170003AC")]
			public int columnCount
			{
				[Token(Token = "0x6001E29")]
				[Address(RVA = "0xE1B300", Offset = "0xE1B300", VA = "0xE1B300")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB544", Offset = "0x9AB544")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E2A")]
				[Address(RVA = "0xE1B308", Offset = "0xE1B308", VA = "0xE1B308")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB554", Offset = "0x9AB554")]
				private set
				{
				}
			}

			[Token(Token = "0x170003AD")]
			public int rowCount
			{
				[Token(Token = "0x6001E2B")]
				[Address(RVA = "0xE1B310", Offset = "0xE1B310", VA = "0xE1B310")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB564", Offset = "0x9AB564")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E2C")]
				[Address(RVA = "0xE1B318", Offset = "0xE1B318", VA = "0xE1B318")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9AB574", Offset = "0x9AB574")]
				private set
				{
				}
			}

			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0xE1ADEC", Offset = "0xE1ADEC", VA = "0xE1ADEC")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0xE1ADB8", Offset = "0xE1ADB8", VA = "0xE1ADB8")]
			public void Release()
			{
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xE1ADB0", Offset = "0xE1ADB0", VA = "0xE1ADB0")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4000D49")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x17000155")]
		public override bool active
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xE1A26C", Offset = "0xE1A26C", VA = "0xE1A26C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xE1A2DC", Offset = "0xE1A2DC", VA = "0xE1A2DC", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xE1A350", Offset = "0xE1A350", VA = "0xE1A350", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xE1A3B4", Offset = "0xE1A3B4", VA = "0xE1A3B4", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xE1A3FC", Offset = "0xE1A3FC", VA = "0xE1A3FC", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xE1A514", Offset = "0xE1A514", VA = "0xE1A514")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xE1A630", Offset = "0xE1A630", VA = "0xE1A630")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xE1A6F8", Offset = "0xE1A6F8", VA = "0xE1A6F8")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xE1AC98", Offset = "0xE1AC98", VA = "0xE1AC98")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE1B254", Offset = "0xE1B254", VA = "0xE1B254", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE1B2A0", Offset = "0xE1B2A0", VA = "0xE1B2A0")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x20004F7")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x17000156")]
		public override bool active
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xE1B530", Offset = "0xE1B530", VA = "0xE1B530", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xE1B5B0", Offset = "0xE1B5B0", VA = "0xE1B5B0", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xE1B5E4", Offset = "0xE1B5E4", VA = "0xE1B5E4", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xE1B8B4", Offset = "0xE1B8B4", VA = "0xE1B8B4")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x20004F8")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4000D4C")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4000D4D")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x4000D4E")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x17000157")]
		public override bool active
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xE1BA98", Offset = "0xE1BA98", VA = "0xE1BA98", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xE1BB0C", Offset = "0xE1BB0C", VA = "0xE1BB0C")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE1BB38", Offset = "0xE1BB38", VA = "0xE1BB38")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xE1BBF8", Offset = "0xE1BBF8", VA = "0xE1BBF8")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE1BCEC", Offset = "0xE1BCEC", VA = "0xE1BCEC")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE1BDE0", Offset = "0xE1BDE0", VA = "0xE1BDE0")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xE1BEDC", Offset = "0xE1BEDC", VA = "0xE1BEDC")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE1BF68", Offset = "0xE1BF68", VA = "0xE1BF68")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE1C0E8", Offset = "0xE1C0E8", VA = "0xE1C0E8")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE1C218", Offset = "0xE1C218", VA = "0xE1C218")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE1C2C0", Offset = "0xE1C2C0", VA = "0xE1C2C0")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE1C364", Offset = "0xE1C364", VA = "0xE1C364")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE1C4CC", Offset = "0xE1C4CC", VA = "0xE1C4CC")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xE1C568", Offset = "0xE1C568", VA = "0xE1C568")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xE1C610", Offset = "0xE1C610", VA = "0xE1C610")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xE1C644", Offset = "0xE1C644", VA = "0xE1C644")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xE1CC24", Offset = "0xE1CC24", VA = "0xE1CC24")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xE1CCD4", Offset = "0xE1CCD4", VA = "0xE1CCD4")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xE1CD04", Offset = "0xE1CD04", VA = "0xE1CD04")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xE1D598", Offset = "0xE1D598", VA = "0xE1D598", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xE1D7DC", Offset = "0xE1D7DC", VA = "0xE1D7DC")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xE1D904", Offset = "0xE1D904", VA = "0xE1D904", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xE1D994", Offset = "0xE1D994", VA = "0xE1D994")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x20004F9")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x4000D51")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4000D53")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x17000158")]
		public override bool active
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xE1E910", Offset = "0xE1E910", VA = "0xE1E910", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xE1E984", Offset = "0xE1E984", VA = "0xE1E984", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xE1E98C", Offset = "0xE1E98C", VA = "0xE1E98C")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE1EA5C", Offset = "0xE1EA5C", VA = "0xE1EA5C")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE1EB0C", Offset = "0xE1EB0C", VA = "0xE1EB0C")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xE1EBEC", Offset = "0xE1EBEC", VA = "0xE1EBEC")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE1EC3C", Offset = "0xE1EC3C", VA = "0xE1EC3C")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE1F438", Offset = "0xE1F438", VA = "0xE1F438", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xE1F4C8", Offset = "0xE1F4C8", VA = "0xE1F4C8")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x20004FA")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x4000D56")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x17000159")]
		public override bool active
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0xE1F778", Offset = "0xE1F778", VA = "0xE1F778", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xE1F7EC", Offset = "0xE1F7EC", VA = "0xE1F7EC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xE1F7F8", Offset = "0xE1F7F8", VA = "0xE1F7F8")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xE1F940", Offset = "0xE1F940", VA = "0xE1F940", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xE1FB1C", Offset = "0xE1FB1C", VA = "0xE1FB1C")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x20004FB")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4000D5F")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x4000D60")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x4000D61")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x1700015A")]
		public override bool active
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0xC770D0", Offset = "0xC770D0", VA = "0xC770D0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xC77150", Offset = "0xC77150", VA = "0xC77150")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xC7715C", Offset = "0xC7715C", VA = "0xC7715C", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xC77168", Offset = "0xC77168", VA = "0xC77168", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xC7731C", Offset = "0xC7731C", VA = "0xC7731C")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xC77464", Offset = "0xC77464", VA = "0xC77464")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xC78268", Offset = "0xC78268", VA = "0xC78268")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xC783FC", Offset = "0xC783FC", VA = "0xC783FC")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x20004FC")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x4000D62")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x1700015B")]
		public override bool active
		{
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0xC7868C", Offset = "0xC7868C", VA = "0xC7868C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xC78748", Offset = "0xC78748", VA = "0xC78748", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xC78790", Offset = "0xC78790", VA = "0xC78790", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xC78798", Offset = "0xC78798", VA = "0xC78798", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xC787A0", Offset = "0xC787A0", VA = "0xC787A0", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xC78C3C", Offset = "0xC78C3C", VA = "0xC78C3C")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x20004FD")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x1700015C")]
		public override bool active
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xC78DA4", Offset = "0xC78DA4", VA = "0xC78DA4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xC78E20", Offset = "0xC78E20", VA = "0xC78E20")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xC7908C", Offset = "0xC7908C", VA = "0xC7908C")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x20004FE")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x1700015D")]
		public override bool active
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xC79194", Offset = "0xC79194", VA = "0xC79194", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xC79224", Offset = "0xC79224", VA = "0xC79224", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xC79254", Offset = "0xC79254", VA = "0xC79254", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xC79620", Offset = "0xC79620", VA = "0xC79620")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x20004FF")]
		private static class Uniforms
		{
			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x2000500")]
		private enum Pass
		{
			[Token(Token = "0x4001F98")]
			VelocitySetup,
			[Token(Token = "0x4001F99")]
			TileMax1,
			[Token(Token = "0x4001F9A")]
			TileMax2,
			[Token(Token = "0x4001F9B")]
			TileMaxV,
			[Token(Token = "0x4001F9C")]
			NeighborMax,
			[Token(Token = "0x4001F9D")]
			Reconstruction,
			[Token(Token = "0x4001F9E")]
			FrameCompression,
			[Token(Token = "0x4001F9F")]
			FrameBlendingChroma,
			[Token(Token = "0x4001FA0")]
			FrameBlendingRaw
		}

		[Token(Token = "0x2000501")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xC7A124", Offset = "0xC7A124", VA = "0xC7A124")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xC7C214", Offset = "0xC7C214", VA = "0xC7C214")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xC7A328", Offset = "0xC7A328", VA = "0xC7A328")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xC7AA10", Offset = "0xC7AA10", VA = "0xC7AA10")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x2000502")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x20006E5")]
			private struct Frame
			{
				[Token(Token = "0x40022BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x40022BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x40022C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x40022C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x600249A")]
				[Address(RVA = "0xA4F888", Offset = "0xA4F888", VA = "0xA4F888")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x600249B")]
				[Address(RVA = "0xA4F890", Offset = "0xA4F890", VA = "0xA4F890")]
				public void Release()
				{
				}

				[Token(Token = "0x600249C")]
				[Address(RVA = "0xA4F898", Offset = "0xA4F898", VA = "0xA4F898")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x600249D")]
				[Address(RVA = "0xA4F8D4", Offset = "0xA4F8D4", VA = "0xA4F8D4")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xC7A1DC", Offset = "0xC7A1DC", VA = "0xC7A1DC")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xC7A3AC", Offset = "0xC7A3AC", VA = "0xC7A3AC")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xC7B858", Offset = "0xC7B858", VA = "0xC7B858")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xC7B2F4", Offset = "0xC7B2F4", VA = "0xC7B2F4")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xC7BA0C", Offset = "0xC7BA0C", VA = "0xC7BA0C")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xC7BA44", Offset = "0xC7BA44", VA = "0xC7BA44")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xC7C0A8", Offset = "0xC7C0A8", VA = "0xC7C0A8")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x1700015E")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xC7A0B0", Offset = "0xC7A0B0", VA = "0xC7A0B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xC7A168", Offset = "0xC7A168", VA = "0xC7A168")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		public override bool active
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xC7A260", Offset = "0xC7A260", VA = "0xC7A260", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xC7A330", Offset = "0xC7A330", VA = "0xC7A330", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xC7A378", Offset = "0xC7A378", VA = "0xC7A378")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xC7A434", Offset = "0xC7A434", VA = "0xC7A434", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xC7A43C", Offset = "0xC7A43C", VA = "0xC7A43C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xC7A444", Offset = "0xC7A444", VA = "0xC7A444", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xC7A450", Offset = "0xC7A450", VA = "0xC7A450", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xC7B9A4", Offset = "0xC7B9A4", VA = "0xC7B9A4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xC7B9B4", Offset = "0xC7B9B4", VA = "0xC7B9B4")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x2000503")]
		private static class Uniforms
		{
			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x2000504")]
		private enum PassIndex
		{
			[Token(Token = "0x4001FCB")]
			RayTraceStep,
			[Token(Token = "0x4001FCC")]
			CompositeFinal,
			[Token(Token = "0x4001FCD")]
			Blur,
			[Token(Token = "0x4001FCE")]
			CompositeSSR,
			[Token(Token = "0x4001FCF")]
			MinMipGeneration,
			[Token(Token = "0x4001FD0")]
			HitPointToReflections,
			[Token(Token = "0x4001FD1")]
			BilateralKeyPack,
			[Token(Token = "0x4001FD2")]
			BlitDepthAsCSZ,
			[Token(Token = "0x4001FD3")]
			PoissonBlur
		}

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x17000161")]
		public override bool active
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0xC7F3D8", Offset = "0xC7F3D8", VA = "0xC7F3D8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xC7F3D0", Offset = "0xC7F3D0", VA = "0xC7F3D0", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xC7F45C", Offset = "0xC7F45C", VA = "0xC7F45C", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xC7F58C", Offset = "0xC7F58C", VA = "0xC7F58C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xC7F5D4", Offset = "0xC7F5D4", VA = "0xC7F5D4", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xC7F5DC", Offset = "0xC7F5DC", VA = "0xC7F5DC", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xC7CD44", Offset = "0xC7CD44", VA = "0xC7CD44")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000505")]
		private static class Uniforms
		{
			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x4000D6C")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x4000D6D")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F424", Offset = "0x99F424")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x17000162")]
		public override bool active
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0xC80D58", Offset = "0xC80D58", VA = "0xC80D58", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000163")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0xC80DFC", Offset = "0xC80DFC", VA = "0xC80DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8374", Offset = "0x9A8374")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0xC80E04", Offset = "0xC80E04", VA = "0xC80E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8384", Offset = "0x9A8384")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xC80DF4", Offset = "0xC80DF4", VA = "0xC80DF4", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xC7EE20", Offset = "0xC7EE20", VA = "0xC7EE20")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xC7D884", Offset = "0xC7D884", VA = "0xC7D884")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xC7E3A8", Offset = "0xC7E3A8", VA = "0xC7E3A8")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xC81528", Offset = "0xC81528", VA = "0xC81528")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xC80E0C", Offset = "0xC80E0C", VA = "0xC80E0C")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xC80EF0", Offset = "0xC80EF0", VA = "0xC80EF0")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xC813A4", Offset = "0xC813A4", VA = "0xC813A4")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xC8156C", Offset = "0xC8156C", VA = "0xC8156C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xC7CDC8", Offset = "0xC7CDC8", VA = "0xC7CDC8")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x2000506")]
		private static class Uniforms
		{
			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x17000164")]
		public override bool active
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0xC81738", Offset = "0xC81738", VA = "0xC81738", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xC8186C", Offset = "0xC8186C", VA = "0xC8186C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xC7EACC", Offset = "0xC7EACC", VA = "0xC7EACC")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xC7CE48", Offset = "0xC7CE48", VA = "0xC7CE48")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x2000507")]
		private static class Uniforms
		{
			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x17000165")]
		public override bool active
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0xC81AF0", Offset = "0xC81AF0", VA = "0xC81AF0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xC81B64", Offset = "0xC81B64", VA = "0xC81B64", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xC7CE98", Offset = "0xC7CE98", VA = "0xC7CE98")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000237")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x2000508")]
		public enum SampleCount
		{
			[Token(Token = "0x4001FE1")]
			Lowest = 3,
			[Token(Token = "0x4001FE2")]
			Low = 6,
			[Token(Token = "0x4001FE3")]
			Medium = 10,
			[Token(Token = "0x4001FE4")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x2000509")]
		public struct Settings
		{
			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2AF4", Offset = "0x9A2AF4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2AF4", Offset = "0x9A2AF4")]
			public float intensity;

			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A2B48", Offset = "0x9A2B48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2B48", Offset = "0x9A2B48")]
			public float radius;

			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2B9C", Offset = "0x9A2B9C")]
			public SampleCount sampleCount;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2BD4", Offset = "0x9A2BD4")]
			public bool downsampling;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2C0C", Offset = "0x9A2C0C")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2C44", Offset = "0x9A2C44")]
			public bool ambientOnly;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2C7C", Offset = "0x9A2C7C")]
			public bool highPrecision;

			[Token(Token = "0x170003AE")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E48")]
				[Address(RVA = "0xE1901C", Offset = "0xE1901C", VA = "0xE1901C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000166")]
		public Settings settings
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xE18FF0", Offset = "0xE18FF0", VA = "0xE18FF0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0xE19000", Offset = "0xE19000", VA = "0xE19000")]
			set
			{
			}
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xE1900C", Offset = "0xE1900C", VA = "0xE1900C", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xE19034", Offset = "0xE19034", VA = "0xE19034")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000238")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x200050A")]
		public enum Method
		{
			[Token(Token = "0x4001FED")]
			Fxaa,
			[Token(Token = "0x4001FEE")]
			Taa
		}

		[Token(Token = "0x200050B")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4001FF0")]
			ExtremePerformance,
			[Token(Token = "0x4001FF1")]
			Performance,
			[Token(Token = "0x4001FF2")]
			Default,
			[Token(Token = "0x4001FF3")]
			Quality,
			[Token(Token = "0x4001FF4")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x200050C")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2CB4", Offset = "0x9A2CB4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2CB4", Offset = "0x9A2CB4")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2D08", Offset = "0x9A2D08")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2D08", Offset = "0x9A2D08")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2D64", Offset = "0x9A2D64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2D64", Offset = "0x9A2D64")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200050D")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2DBC", Offset = "0x9A2DBC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2DBC", Offset = "0x9A2DBC")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2E14", Offset = "0x9A2E14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2E14", Offset = "0x9A2E14")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2E68", Offset = "0x9A2E68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2E68", Offset = "0x9A2E68")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2EBC", Offset = "0x9A2EBC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2EBC", Offset = "0x9A2EBC")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200050E")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x170003AF")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x6001E4B")]
				[Address(RVA = "0xE192C0", Offset = "0xE192C0", VA = "0xE192C0")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200050F")]
		public struct TaaSettings
		{
			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2F18", Offset = "0x9A2F18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2F18", Offset = "0x9A2F18")]
			public float jitterSpread;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2F70", Offset = "0x9A2F70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2F70", Offset = "0x9A2F70")]
			public float sharpen;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A2FC4", Offset = "0x9A2FC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2FC4", Offset = "0x9A2FC4")]
			public float stationaryBlending;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A301C", Offset = "0x9A301C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A301C", Offset = "0x9A301C")]
			public float motionBlending;

			[Token(Token = "0x170003B0")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x6001E4C")]
				[Address(RVA = "0xE192C8", Offset = "0xE192C8", VA = "0xE192C8")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000510")]
		public struct Settings
		{
			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x170003B1")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E4D")]
				[Address(RVA = "0xE19088", Offset = "0xE19088", VA = "0xE19088")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000167")]
		public Settings settings
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xE19048", Offset = "0xE19048", VA = "0xE19048")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0xE1905C", Offset = "0xE1905C", VA = "0xE1905C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xE19070", Offset = "0xE19070", VA = "0xE19070", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xE190A0", Offset = "0xE190A0", VA = "0xE190A0")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000239")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000511")]
		public struct BloomSettings
		{
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A3074", Offset = "0x9A3074")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3074", Offset = "0x9A3074")]
			public float intensity;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A30C4", Offset = "0x9A30C4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A30C4", Offset = "0x9A30C4")]
			public float threshold;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3114", Offset = "0x9A3114")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3114", Offset = "0x9A3114")]
			public float softKnee;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3168", Offset = "0x9A3168")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3168", Offset = "0x9A3168")]
			public float radius;

			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A31BC", Offset = "0x9A31BC")]
			public bool antiFlicker;

			[Token(Token = "0x170003B2")]
			public float thresholdLinear
			{
				[Token(Token = "0x6001E4F")]
				[Address(RVA = "0xA54ADC", Offset = "0xA54ADC", VA = "0xA54ADC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0xA54AD4", Offset = "0xA54AD4", VA = "0xA54AD4")]
				set
				{
				}
			}

			[Token(Token = "0x170003B3")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x6001E50")]
				[Address(RVA = "0xE1A21C", Offset = "0xE1A21C", VA = "0xE1A21C")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000512")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A31F4", Offset = "0x9A31F4")]
			public Texture texture;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A322C", Offset = "0x9A322C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A322C", Offset = "0x9A322C")]
			public float intensity;

			[Token(Token = "0x170003B4")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x6001E51")]
				[Address(RVA = "0xE1A238", Offset = "0xE1A238", VA = "0xE1A238")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000513")]
		public struct Settings
		{
			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x170003B5")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E52")]
				[Address(RVA = "0xE1A0C4", Offset = "0xE1A0C4", VA = "0xE1A0C4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000168")]
		public Settings settings
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0xE1A038", Offset = "0xE1A038", VA = "0xE1A038")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0xE1A054", Offset = "0xE1A054", VA = "0xE1A054")]
			set
			{
			}
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xE1A078", Offset = "0xE1A078", VA = "0xE1A078", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xE1A148", Offset = "0xE1A148", VA = "0xE1A148")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023A")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000514")]
		public struct DepthSettings
		{
			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A327C", Offset = "0x9A327C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A327C", Offset = "0x9A327C")]
			public float scale;

			[Token(Token = "0x170003B6")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6001E53")]
				[Address(RVA = "0xE1B50C", Offset = "0xE1B50C", VA = "0xE1B50C")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000515")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A32D0", Offset = "0x9A32D0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A32D0", Offset = "0x9A32D0")]
			public float sourceOpacity;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3324", Offset = "0x9A3324")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3324", Offset = "0x9A3324")]
			public float motionImageOpacity;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A3378", Offset = "0x9A3378")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3378", Offset = "0x9A3378")]
			public float motionImageAmplitude;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A33C8", Offset = "0x9A33C8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A33C8", Offset = "0x9A33C8")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A341C", Offset = "0x9A341C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A341C", Offset = "0x9A341C")]
			public int motionVectorsResolution;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A3474", Offset = "0x9A3474")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3474", Offset = "0x9A3474")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x170003B7")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x6001E54")]
				[Address(RVA = "0xE1B514", Offset = "0xE1B514", VA = "0xE1B514")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x2000516")]
		public enum Mode
		{
			[Token(Token = "0x4002017")]
			None,
			[Token(Token = "0x4002018")]
			Depth,
			[Token(Token = "0x4002019")]
			Normals,
			[Token(Token = "0x400201A")]
			MotionVectors,
			[Token(Token = "0x400201B")]
			AmbientOcclusion,
			[Token(Token = "0x400201C")]
			EyeAdaptation,
			[Token(Token = "0x400201D")]
			FocusPlane,
			[Token(Token = "0x400201E")]
			PreGradingLog,
			[Token(Token = "0x400201F")]
			LogLut,
			[Token(Token = "0x4002020")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x2000517")]
		public struct Settings
		{
			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x170003B8")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E55")]
				[Address(RVA = "0xE1B4B8", Offset = "0xE1B4B8", VA = "0xE1B4B8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000169")]
		public Settings settings
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0xE1B444", Offset = "0xE1B444", VA = "0xE1B444")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xE1B458", Offset = "0xE1B458", VA = "0xE1B458")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public bool willInterrupt
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xE1B468", Offset = "0xE1B468", VA = "0xE1B468")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xE1B490", Offset = "0xE1B490", VA = "0xE1B490", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xE18364", Offset = "0xE18364", VA = "0xE18364")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xE1B4E0", Offset = "0xE1B4E0", VA = "0xE1B4E0")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023B")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000518")]
		public struct Settings
		{
			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A34C4", Offset = "0x9A34C4")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A34FC", Offset = "0x9A34FC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A34FC", Offset = "0x9A34FC")]
			public float intensity;

			[Token(Token = "0x170003B9")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E56")]
				[Address(RVA = "0xE1B9FC", Offset = "0xE1B9FC", VA = "0xE1B9FC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700016B")]
		public Settings settings
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xE1B988", Offset = "0xE1B988", VA = "0xE1B988")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xE1B994", Offset = "0xE1B994", VA = "0xE1B994")]
			set
			{
			}
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xE1B9A4", Offset = "0xE1B9A4", VA = "0xE1B9A4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xE1BA34", Offset = "0xE1BA34", VA = "0xE1BA34")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023C")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x2000519")]
		public enum Tonemapper
		{
			[Token(Token = "0x4002027")]
			None,
			[Token(Token = "0x4002028")]
			ACES,
			[Token(Token = "0x4002029")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x200051A")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3550", Offset = "0x9A3550")]
			public Tonemapper tonemapper;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3588", Offset = "0x9A3588")]
			public float neutralBlackIn;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A35A8", Offset = "0x9A35A8")]
			public float neutralWhiteIn;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A35C0", Offset = "0x9A35C0")]
			public float neutralBlackOut;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A35E0", Offset = "0x9A35E0")]
			public float neutralWhiteOut;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A35F8", Offset = "0x9A35F8")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3614", Offset = "0x9A3614")]
			public float neutralWhiteClip;

			[Token(Token = "0x170003BA")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6001E57")]
				[Address(RVA = "0xE1E8E8", Offset = "0xE1E8E8", VA = "0xE1E8E8")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200051B")]
		public struct BasicSettings
		{
			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A362C", Offset = "0x9A362C")]
			public float postExposure;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3664", Offset = "0x9A3664")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3664", Offset = "0x9A3664")]
			public float temperature;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A36C0", Offset = "0x9A36C0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A36C0", Offset = "0x9A36C0")]
			public float tint;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A371C", Offset = "0x9A371C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A371C", Offset = "0x9A371C")]
			public float hueShift;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3778", Offset = "0x9A3778")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3778", Offset = "0x9A3778")]
			public float saturation;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A37CC", Offset = "0x9A37CC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A37CC", Offset = "0x9A37CC")]
			public float contrast;

			[Token(Token = "0x170003BB")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0xE1DFBC", Offset = "0xE1DFBC", VA = "0xE1DFBC")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200051C")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x170003BC")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6001E59")]
				[Address(RVA = "0xE1DFCC", Offset = "0xE1DFCC", VA = "0xE1DFCC")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200051D")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x9A3830", Offset = "0x9A3830")]
			public Color slope;

			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x9A3868", Offset = "0x9A3868")]
			public Color power;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x9A38A0", Offset = "0x9A38A0")]
			public Color offset;

			[Token(Token = "0x170003BD")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001E5A")]
				[Address(RVA = "0xE1E108", Offset = "0xE1E108", VA = "0xE1E108")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200051E")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x9A38D8", Offset = "0x9A38D8")]
			public Color lift;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x9A3910", Offset = "0x9A3910")]
			public Color gamma;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x9A3948", Offset = "0x9A3948")]
			public Color gain;

			[Token(Token = "0x170003BE")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001E5B")]
				[Address(RVA = "0xE1E194", Offset = "0xE1E194", VA = "0xE1E194")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x200051F")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4002042")]
			Linear,
			[Token(Token = "0x4002043")]
			Log
		}

		[Serializable]
		[Token(Token = "0x2000520")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x170003BF")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001E5C")]
				[Address(RVA = "0xE1E098", Offset = "0xE1E098", VA = "0xE1E098")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000521")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x170003C0")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001E5D")]
				[Address(RVA = "0xE1E220", Offset = "0xE1E220", VA = "0xE1E220")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000522")]
		public struct Settings
		{
			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x170003C1")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E5E")]
				[Address(RVA = "0xE1DE18", Offset = "0xE1DE18", VA = "0xE1DE18")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F494", Offset = "0x99F494")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F4A4", Offset = "0x99F4A4")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x1700016C")]
		public Settings settings
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xE1DD48", Offset = "0xE1DD48", VA = "0xE1DD48")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0xE1DD58", Offset = "0xE1DD58", VA = "0xE1DD58")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public bool isDirty
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xE1DD98", Offset = "0xE1DD98", VA = "0xE1DD98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8394", Offset = "0x9A8394")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xE1DDA0", Offset = "0xE1DDA0", VA = "0xE1DDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83A4", Offset = "0x9A83A4")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0xE1DDAC", Offset = "0xE1DDAC", VA = "0xE1DDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83B4", Offset = "0x9A83B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xE1DDB4", Offset = "0xE1DDB4", VA = "0xE1DDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83C4", Offset = "0x9A83C4")]
			internal set
			{
			}
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xE1DDC4", Offset = "0xE1DDC4", VA = "0xE1DDC4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xE1DF60", Offset = "0xE1DF60", VA = "0xE1DF60", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xE1DF6C", Offset = "0xE1DF6C", VA = "0xE1DF6C")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023D")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x2000523")]
		public enum KernelSize
		{
			[Token(Token = "0x400205A")]
			Small,
			[Token(Token = "0x400205B")]
			Medium,
			[Token(Token = "0x400205C")]
			Large,
			[Token(Token = "0x400205D")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x2000524")]
		public struct Settings
		{
			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A39F0", Offset = "0x9A39F0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A39F0", Offset = "0x9A39F0")]
			public float focusDistance;

			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3A44", Offset = "0x9A3A44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3A44", Offset = "0x9A3A44")]
			public float aperture;

			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3AA0", Offset = "0x9A3AA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3AA0", Offset = "0x9A3AA0")]
			public float focalLength;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3AF8", Offset = "0x9A3AF8")]
			public bool useCameraFov;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3B30", Offset = "0x9A3B30")]
			public KernelSize kernelSize;

			[Token(Token = "0x170003C2")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E5F")]
				[Address(RVA = "0xE1F714", Offset = "0xE1F714", VA = "0xE1F714")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700016F")]
		public Settings settings
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xE1F6BC", Offset = "0xE1F6BC", VA = "0xE1F6BC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0xE1F6D0", Offset = "0xE1F6D0", VA = "0xE1F6D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xE1F6E4", Offset = "0xE1F6E4", VA = "0xE1F6E4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xE1F744", Offset = "0xE1F744", VA = "0xE1F744")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023E")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000525")]
		public struct Settings
		{
			[Token(Token = "0x170003C3")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E60")]
				[Address(RVA = "0xC770B4", Offset = "0xC770B4", VA = "0xC770B4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000170")]
		public Settings settings
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0xC7709C", Offset = "0xC7709C", VA = "0xC7709C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xC770A4", Offset = "0xC770A4", VA = "0xC770A4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xC770AC", Offset = "0xC770AC", VA = "0xC770AC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xC770BC", Offset = "0xC770BC", VA = "0xC770BC")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023F")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x2000526")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4002064")]
			Progressive,
			[Token(Token = "0x4002065")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x2000527")]
		public struct Settings
		{
			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3B68", Offset = "0x9A3B68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3B68", Offset = "0x9A3B68")]
			public float lowPercent;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3BC0", Offset = "0x9A3BC0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3BC0", Offset = "0x9A3BC0")]
			public float highPercent;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3C18", Offset = "0x9A3C18")]
			public float minLuminance;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3C50", Offset = "0x9A3C50")]
			public float maxLuminance;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A3C88", Offset = "0x9A3C88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3C88", Offset = "0x9A3C88")]
			public float keyValue;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3CD8", Offset = "0x9A3CD8")]
			public bool dynamicKeyValue;

			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3D10", Offset = "0x9A3D10")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A3D48", Offset = "0x9A3D48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3D48", Offset = "0x9A3D48")]
			public float speedUp;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x9A3D98", Offset = "0x9A3D98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3D98", Offset = "0x9A3D98")]
			public float speedDown;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3DE8", Offset = "0x9A3DE8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3DE8", Offset = "0x9A3DE8")]
			public int logMin;

			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3E3C", Offset = "0x9A3E3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3E3C", Offset = "0x9A3E3C")]
			public int logMax;

			[Token(Token = "0x170003C4")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E61")]
				[Address(RVA = "0xC78600", Offset = "0xC78600", VA = "0xC78600")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000171")]
		public Settings settings
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0xC78580", Offset = "0xC78580", VA = "0xC78580")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0xC7859C", Offset = "0xC7859C", VA = "0xC7859C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xC785BC", Offset = "0xC785BC", VA = "0xC785BC", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xC78644", Offset = "0xC78644", VA = "0xC78644")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000240")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000528")]
		public struct Settings
		{
			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3E90", Offset = "0x9A3E90")]
			public bool excludeSkybox;

			[Token(Token = "0x170003C5")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E62")]
				[Address(RVA = "0xC78D8C", Offset = "0xC78D8C", VA = "0xC78D8C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000172")]
		public Settings settings
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0xC78D70", Offset = "0xC78D70", VA = "0xC78D70")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0xC78D78", Offset = "0xC78D78", VA = "0xC78D78")]
			set
			{
			}
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xC78D80", Offset = "0xC78D80", VA = "0xC78D80", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xC78D94", Offset = "0xC78D94", VA = "0xC78D94")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000241")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000529")]
		public struct Settings
		{
			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3EC8", Offset = "0x9A3EC8")]
			public bool colored;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3F00", Offset = "0x9A3F00")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3F00", Offset = "0x9A3F00")]
			public float intensity;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3F54", Offset = "0x9A3F54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3F54", Offset = "0x9A3F54")]
			public float size;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A3FAC", Offset = "0x9A3FAC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A3FAC", Offset = "0x9A3FAC")]
			public float luminanceContribution;

			[Token(Token = "0x170003C6")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E63")]
				[Address(RVA = "0xC79760", Offset = "0xC79760", VA = "0xC79760")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000173")]
		public Settings settings
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0xC79734", Offset = "0xC79734", VA = "0xC79734")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0xC79744", Offset = "0xC79744", VA = "0xC79744")]
			set
			{
			}
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xC79750", Offset = "0xC79750", VA = "0xC79750", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xC79778", Offset = "0xC79778", VA = "0xC79778")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000242")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200052A")]
		public struct Settings
		{
			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4000", Offset = "0x9A4000")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4000", Offset = "0x9A4000")]
			public float shutterAngle;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4058", Offset = "0x9A4058")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4058", Offset = "0x9A4058")]
			public int sampleCount;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A40B0", Offset = "0x9A40B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A40B0", Offset = "0x9A40B0")]
			public float frameBlending;

			[Token(Token = "0x170003C7")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E64")]
				[Address(RVA = "0xC7C5F8", Offset = "0xC7C5F8", VA = "0xC7C5F8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000174")]
		public Settings settings
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0xC7C5C8", Offset = "0xC7C5C8", VA = "0xC7C5C8")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0xC7C5D8", Offset = "0xC7C5D8", VA = "0xC7C5D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xC7C5E4", Offset = "0xC7C5E4", VA = "0xC7C5E4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xC7C608", Offset = "0xC7C608", VA = "0xC7C608")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x200052B")]
		public enum SSRResolution
		{
			[Token(Token = "0x400207A")]
			High = 0,
			[Token(Token = "0x400207B")]
			Low = 2
		}

		[Token(Token = "0x200052C")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x400207D")]
			PhysicallyBased,
			[Token(Token = "0x400207E")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x200052D")]
		public struct IntensitySettings
		{
			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4104", Offset = "0x9A4104")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4104", Offset = "0x9A4104")]
			public float reflectionMultiplier;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4158", Offset = "0x9A4158")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4158", Offset = "0x9A4158")]
			public float fadeDistance;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A41B0", Offset = "0x9A41B0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A41B0", Offset = "0x9A41B0")]
			public float fresnelFade;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4204", Offset = "0x9A4204")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4204", Offset = "0x9A4204")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x200052E")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A425C", Offset = "0x9A425C")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4294", Offset = "0x9A4294")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A42CC", Offset = "0x9A42CC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A42CC", Offset = "0x9A42CC")]
			public float maxDistance;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4328", Offset = "0x9A4328")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4328", Offset = "0x9A4328")]
			public int iterationCount;

			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4380", Offset = "0x9A4380")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4380", Offset = "0x9A4380")]
			public int stepSize;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A43D4", Offset = "0x9A43D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A43D4", Offset = "0x9A43D4")]
			public float widthModifier;

			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A442C", Offset = "0x9A442C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A442C", Offset = "0x9A442C")]
			public float reflectionBlur;

			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4484", Offset = "0x9A4484")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x200052F")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A44BC", Offset = "0x9A44BC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A44BC", Offset = "0x9A44BC")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x2000530")]
		public struct Settings
		{
			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x170003C8")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E65")]
				[Address(RVA = "0xC80D0C", Offset = "0xC80D0C", VA = "0xC80D0C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000175")]
		public Settings settings
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0xC80C7C", Offset = "0xC80C7C", VA = "0xC80C7C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0xC80CA0", Offset = "0xC80CA0", VA = "0xC80CA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xC80CC0", Offset = "0xC80CC0", VA = "0xC80CC0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xC7F2C0", Offset = "0xC7F2C0", VA = "0xC7F2C0")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000244")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000531")]
		public struct Settings
		{
			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4510", Offset = "0x9A4510")]
			public Texture2D lut;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4548", Offset = "0x9A4548")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4548", Offset = "0x9A4548")]
			public float contribution;

			[Token(Token = "0x170003C9")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E66")]
				[Address(RVA = "0xC81ABC", Offset = "0xC81ABC", VA = "0xC81ABC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000176")]
		public Settings settings
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0xC81A4C", Offset = "0xC81A4C", VA = "0xC81A4C")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xC81A58", Offset = "0xC81A58", VA = "0xC81A58")]
			set
			{
			}
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xC81A68", Offset = "0xC81A68", VA = "0xC81A68", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xC7F310", Offset = "0xC7F310", VA = "0xC7F310")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000245")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x2000532")]
		public enum Mode
		{
			[Token(Token = "0x4002092")]
			Classic,
			[Token(Token = "0x4002093")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x2000533")]
		public struct Settings
		{
			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A459C", Offset = "0x9A459C")]
			public Mode mode;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x9A45D4", Offset = "0x9A45D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A45D4", Offset = "0x9A45D4")]
			public Color color;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4624", Offset = "0x9A4624")]
			public Vector2 center;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A465C", Offset = "0x9A465C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A465C", Offset = "0x9A465C")]
			public float intensity;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A46B0", Offset = "0x9A46B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A46B0", Offset = "0x9A46B0")]
			public float smoothness;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4708", Offset = "0x9A4708")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4708", Offset = "0x9A4708")]
			public float roundness;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A475C", Offset = "0x9A475C")]
			public Texture mask;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A4794", Offset = "0x9A4794")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A4794", Offset = "0x9A4794")]
			public float opacity;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A47E8", Offset = "0x9A47E8")]
			public bool rounded;

			[Token(Token = "0x170003CA")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001E67")]
				[Address(RVA = "0xC81FB4", Offset = "0xC81FB4", VA = "0xC81FB4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000177")]
		public Settings settings
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0xC81F10", Offset = "0xC81F10", VA = "0xC81F10")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0xC81F34", Offset = "0xC81F34", VA = "0xC81F34")]
			set
			{
			}
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xC81F60", Offset = "0xC81F60", VA = "0xC81F60", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xC7F370", Offset = "0xC7F370", VA = "0xC7F370")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x2000246")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9984DC", Offset = "0x9984DC")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9984DC", Offset = "0x9984DC")]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xC7C620", Offset = "0xC7C620", VA = "0xC7C620")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xC7CEE8", Offset = "0xC7CEE8", VA = "0xC7CEE8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xC7DB3C", Offset = "0xC7DB3C", VA = "0xC7DB3C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xC7DC3C", Offset = "0xC7DC3C", VA = "0xC7DC3C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xC7DD58", Offset = "0xC7DD58", VA = "0xC7DD58")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xC7E900", Offset = "0xC7E900", VA = "0xC7E900")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xC7EBF0", Offset = "0xC7EBF0", VA = "0xC7EBF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xC7EDD0", Offset = "0xC7EDD0", VA = "0xC7EDD0")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xC7D5C0", Offset = "0xC7D5C0", VA = "0xC7D5C0")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xC7D494", Offset = "0xC7D494", VA = "0xC7D494")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x6000F4B")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6000F4C")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6000F4D")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6000F4E")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6000F4F")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xC7EE2C", Offset = "0xC7EE2C", VA = "0xC7EE2C")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x17000178")]
		public abstract bool active
		{
			[Token(Token = "0x6000F53")]
			get;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xC7EED4", Offset = "0xC7EED4", VA = "0xC7EED4", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xC7EEDC", Offset = "0xC7EEDC", VA = "0xC7EEDC", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xC7EEE0", Offset = "0xC7EEE0", VA = "0xC7EEE0", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F56")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xC7EEE4", Offset = "0xC7EEE4", VA = "0xC7EEE4")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F544", Offset = "0x99F544")]
		private T <model>k__BackingField;

		[Token(Token = "0x17000179")]
		public T model
		{
			[Token(Token = "0x6000F58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83D4", Offset = "0x9A83D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F59")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83E4", Offset = "0x9A83E4")]
			internal set
			{
			}
		}

		[Token(Token = "0x6000F5A")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x6000F5B")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6000F5D")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x6000F5E")]
		public abstract string GetName();

		[Token(Token = "0x6000F5F")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x6000F60")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6000F61")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6000F62")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F554", Offset = "0x99F554")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x1700017A")]
		public bool interrupted
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0xC7EEEC", Offset = "0xC7EEEC", VA = "0xC7EEEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A83F4", Offset = "0x9A83F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0xC7EEF4", Offset = "0xC7EEF4", VA = "0xC7EEF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8404", Offset = "0x9A8404")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0xC7871C", Offset = "0xC7871C", VA = "0xC7871C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public bool isHdr
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0xC78C20", Offset = "0xC78C20", VA = "0xC78C20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017D")]
		public int width
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0xC7742C", Offset = "0xC7742C", VA = "0xC7742C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017E")]
		public int height
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xC77448", Offset = "0xC77448", VA = "0xC77448")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017F")]
		public Rect viewport
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0xC783E0", Offset = "0xC783E0", VA = "0xC783E0")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xC7EF00", Offset = "0xC7EF00", VA = "0xC7EF00")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC7D434", Offset = "0xC7D434", VA = "0xC7D434")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xC7CD3C", Offset = "0xC7CD3C", VA = "0xC7CD3C")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024C")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0x99F564", Offset = "0x99F564")]
		private bool m_Enabled;

		[Token(Token = "0x17000180")]
		public bool enabled
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0xC7EF0C", Offset = "0xC7EF0C", VA = "0xC7EF0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0xC7EF14", Offset = "0xC7EF14", VA = "0xC7EF14")]
			set
			{
			}
		}

		[Token(Token = "0x6000F6F")]
		public abstract void Reset();

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xC7EF30", Offset = "0xC7EF30", VA = "0xC7EF30", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xC770C8", Offset = "0xC770C8", VA = "0xC770C8")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xC7EF34", Offset = "0xC7EF34", VA = "0xC7EF34")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024E")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xE1DCD0", Offset = "0xE1DCD0", VA = "0xE1DCD0")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xE1C99C", Offset = "0xE1C99C", VA = "0xE1C99C")]
		public void Cache()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xE1CB98", Offset = "0xE1CB98", VA = "0xE1CB98")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200024F")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x17000181")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xC78C00", Offset = "0xC78C00", VA = "0xC78C00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xC7978C", Offset = "0xC7978C", VA = "0xC7978C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000183")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xC797BC", Offset = "0xC797BC", VA = "0xC797BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public static Mesh quad
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xC79900", Offset = "0xC79900", VA = "0xC79900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xC79C54", Offset = "0xC79C54", VA = "0xC79C54")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xC79D5C", Offset = "0xC79D5C", VA = "0xC79D5C")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xC7727C", Offset = "0xC7727C", VA = "0xC7727C")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xC79EFC", Offset = "0xC79EFC", VA = "0xC79EFC")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xC79F4C", Offset = "0xC79F4C", VA = "0xC79F4C")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xC77E64", Offset = "0xC77E64", VA = "0xC77E64")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xC79FC8", Offset = "0xC79FC8", VA = "0xC79FC8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xC7CCC0", Offset = "0xC7CCC0", VA = "0xC7CCC0")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xC7E284", Offset = "0xC7E284", VA = "0xC7E284")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xC78040", Offset = "0xC78040", VA = "0xC78040")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xC78138", Offset = "0xC78138", VA = "0xC78138")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xC7E850", Offset = "0xC7E850", VA = "0xC7E850")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xC7EDCC", Offset = "0xC7EDCC", VA = "0xC7EDCC", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000252")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000185")]
		public bool Highlight
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0xC3A4A0", Offset = "0xC3A4A0", VA = "0xC3A4A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0xC3A4A8", Offset = "0xC3A4A8", VA = "0xC3A4A8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xC3A4B4", Offset = "0xC3A4B4", VA = "0xC3A4B4")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xC3A68C", Offset = "0xC3A68C", VA = "0xC3A68C", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xC3A6B4", Offset = "0xC3A6B4", VA = "0xC3A6B4", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xC3A6DC", Offset = "0xC3A6DC", VA = "0xC3A6DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xC3A580", Offset = "0xC3A580", VA = "0xC3A580")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xC3A994", Offset = "0xC3A994", VA = "0xC3A994")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000186")]
		public bool InRange
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xC3B148", Offset = "0xC3B148", VA = "0xC3B148")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xC3B150", Offset = "0xC3B150", VA = "0xC3B150")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public bool Targeted
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xC3B2D4", Offset = "0xC3B2D4", VA = "0xC3B2D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xC3B2DC", Offset = "0xC3B2DC", VA = "0xC3B2DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xC3B2E8", Offset = "0xC3B2E8", VA = "0xC3B2E8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xC3B15C", Offset = "0xC3B15C", VA = "0xC3B15C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xC3B4D0", Offset = "0xC3B4D0", VA = "0xC3B4D0")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998598", Offset = "0x998598")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000188")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xC3B4D8", Offset = "0xC3B4D8", VA = "0xC3B4D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xC3B4E0", Offset = "0xC3B4E0", VA = "0xC3B4E0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xC3B4FC", Offset = "0xC3B4FC", VA = "0xC3B4FC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xC3B71C", Offset = "0xC3B71C", VA = "0xC3B71C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xC3C0B8", Offset = "0xC3C0B8", VA = "0xC3C0B8", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xC3C698", Offset = "0xC3C698", VA = "0xC3C698", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xC3CA80", Offset = "0xC3CA80", VA = "0xC3CA80")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xC3B990", Offset = "0xC3B990", VA = "0xC3B990")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xC3CB60", Offset = "0xC3CB60", VA = "0xC3CB60")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xC3D004", Offset = "0xC3D004", VA = "0xC3D004", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xC3D01C", Offset = "0xC3D01C", VA = "0xC3D01C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xC3D024", Offset = "0xC3D024", VA = "0xC3D024")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000534")]
		public enum CrosshairState
		{
			[Token(Token = "0x400209E")]
			Disabled,
			[Token(Token = "0x400209F")]
			Enabled,
			[Token(Token = "0x40020A0")]
			Targeted
		}

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xC3EE14", Offset = "0xC3EE14", VA = "0xC3EE14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xC3B434", Offset = "0xC3B434", VA = "0xC3B434")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xC3EE88", Offset = "0xC3EE88", VA = "0xC3EE88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xC3EED4", Offset = "0xC3EED4", VA = "0xC3EED4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xC3ECA8", Offset = "0xC3ECA8", VA = "0xC3ECA8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xC3ED5C", Offset = "0xC3ED5C", VA = "0xC3ED5C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xC3EE0C", Offset = "0xC3EE0C", VA = "0xC3EE0C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xC441F4", Offset = "0xC441F4", VA = "0xC441F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xC442C0", Offset = "0xC442C0", VA = "0xC442C0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xC442CC", Offset = "0xC442CC", VA = "0xC442CC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xC442D8", Offset = "0xC442D8", VA = "0xC442D8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x108094C", Offset = "0x108094C", VA = "0x108094C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x10809A4", Offset = "0x10809A4", VA = "0x10809A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1080C50", Offset = "0x1080C50", VA = "0x1080C50")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1080D44", Offset = "0x1080D44", VA = "0x1080D44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x10809A8", Offset = "0x10809A8", VA = "0x10809A8")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1080E38", Offset = "0x1080E38", VA = "0x1080E38")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000535")]
		public enum ContactTest
		{
			[Token(Token = "0x40020A2")]
			PerpenTest,
			[Token(Token = "0x40020A3")]
			BackwardsPress
		}

		[Token(Token = "0x4000DE5")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000DE6")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000189")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x1080EE8", Offset = "0x1080EE8", VA = "0x1080EE8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018A")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x1080EF0", Offset = "0x1080EF0", VA = "0x1080EF0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1080EFC", Offset = "0x1080EFC", VA = "0x1080EFC", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1081024", Offset = "0x1081024", VA = "0x1081024")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1081194", Offset = "0x1081194", VA = "0x1081194", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x10816F0", Offset = "0x10816F0", VA = "0x10816F0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1081604", Offset = "0x1081604", VA = "0x1081604")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x108179C", Offset = "0x108179C", VA = "0x108179C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1081894", Offset = "0x1081894", VA = "0x1081894")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x10819BC", Offset = "0x10819BC", VA = "0x10819BC")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F710", Offset = "0x99F710")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F720", Offset = "0x99F720")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700018B")]
		public Collider Collider
		{
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xC3A2D4", Offset = "0xC3A2D4", VA = "0xC3A2D4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8414", Offset = "0x9A8414")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0xC3A2DC", Offset = "0xC3A2DC", VA = "0xC3A2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8424", Offset = "0x9A8424")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0xC3A2E4", Offset = "0xC3A2E4", VA = "0xC3A2E4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8434", Offset = "0x9A8434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xC3A2EC", Offset = "0xC3A2EC", VA = "0xC3A2EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8444", Offset = "0x9A8444")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0xC3A2F4", Offset = "0xC3A2F4", VA = "0xC3A2F4", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xC3A348", Offset = "0xC3A348", VA = "0xC3A348")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xC3A3DC", Offset = "0xC3A3DC", VA = "0xC3A3DC")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700018E")]
		Collider Collider
		{
			[Token(Token = "0x6000FC5")]
			get;
		}

		[Token(Token = "0x1700018F")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000FC6")]
			get;
		}

		[Token(Token = "0x17000190")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000FC7")]
			get;
		}
	}
	[Token(Token = "0x200025C")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xC3A3E4", Offset = "0xC3A3E4", VA = "0xC3A3E4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public enum InteractionType
	{
		[Token(Token = "0x4000DFA")]
		Enter,
		[Token(Token = "0x4000DFB")]
		Stay,
		[Token(Token = "0x4000DFC")]
		Exit
	}
	[Token(Token = "0x200025E")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000536")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40020A5")]
			Mesh,
			[Token(Token = "0x40020A6")]
			Skeleton,
			[Token(Token = "0x40020A7")]
			Both
		}

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9998F0", Offset = "0x9998F0")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170003CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6B")]
				[Address(RVA = "0xC3FF40", Offset = "0xC3FF40", VA = "0xC3FF40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E6D")]
				[Address(RVA = "0xC3FFAC", Offset = "0xC3FFAC", VA = "0xC3FFAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xC3F9A0", Offset = "0xC3F9A0", VA = "0xC3F9A0")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xC3FCDC", Offset = "0xC3FCDC", VA = "0xC3FCDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xC3FCE0", Offset = "0xC3FCE0", VA = "0xC3FCE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xC3FF48", Offset = "0xC3FF48", VA = "0xC3FF48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DFD")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F750", Offset = "0x99F750")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000191")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xC3DCD8", Offset = "0xC3DCD8", VA = "0xC3DCD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xC3EEDC", Offset = "0xC3EEDC", VA = "0xC3EEDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0xC3E91C", Offset = "0xC3E91C", VA = "0xC3E91C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xC3EF50", Offset = "0xC3EF50", VA = "0xC3EF50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xC3EFC4", Offset = "0xC3EFC4", VA = "0xC3EFC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xC3F004", Offset = "0xC3F004", VA = "0xC3F004")]
			private set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xC3F078", Offset = "0xC3F078", VA = "0xC3F078")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xC3F0B8", Offset = "0xC3F0B8", VA = "0xC3F0B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xC3F12C", Offset = "0xC3F12C", VA = "0xC3F12C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xC3F16C", Offset = "0xC3F16C", VA = "0xC3F16C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xC3DC9C", Offset = "0xC3DC9C", VA = "0xC3DC9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xC3F1E0", Offset = "0xC3F1E0", VA = "0xC3F1E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xC3E8E0", Offset = "0xC3E8E0", VA = "0xC3E8E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0xC3F250", Offset = "0xC3F250", VA = "0xC3F250")]
			private set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0xC3F2C0", Offset = "0xC3F2C0", VA = "0xC3F2C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0xC3F2FC", Offset = "0xC3F2FC", VA = "0xC3F2FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xC3F36C", Offset = "0xC3F36C", VA = "0xC3F36C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0xC3F3A8", Offset = "0xC3F3A8", VA = "0xC3F3A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xC3F418", Offset = "0xC3F418", VA = "0xC3F418")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xC3F454", Offset = "0xC3F454", VA = "0xC3F454")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xC3F4C4", Offset = "0xC3F4C4", VA = "0xC3F4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8454", Offset = "0x9A8454")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xC3F514", Offset = "0xC3F514", VA = "0xC3F514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8464", Offset = "0x9A8464")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xC3F56C", Offset = "0xC3F56C", VA = "0xC3F56C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xC3F918", Offset = "0xC3F918", VA = "0xC3F918")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xC3F898", Offset = "0xC3F898", VA = "0xC3F898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8474", Offset = "0x9A8474")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xC3AF98", Offset = "0xC3AF98", VA = "0xC3AF98")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xC3F9CC", Offset = "0xC3F9CC", VA = "0xC3F9CC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xC3E95C", Offset = "0xC3E95C", VA = "0xC3E95C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xC3DB0C", Offset = "0xC3DB0C", VA = "0xC3DB0C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xC3FBAC", Offset = "0xC3FBAC", VA = "0xC3FBAC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000538")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xC40768", Offset = "0xC40768", VA = "0xC40768")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700019C")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xC3FFB4", Offset = "0xC3FFB4", VA = "0xC3FFB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xC3FFBC", Offset = "0xC3FFBC", VA = "0xC3FFBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xC3FFC4", Offset = "0xC3FFC4", VA = "0xC3FFC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xC3FFCC", Offset = "0xC3FFCC", VA = "0xC3FFCC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0xC3FFD4", Offset = "0xC3FFD4", VA = "0xC3FFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A84D8", Offset = "0x9A84D8")]
			add
			{
			}
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xC40078", Offset = "0xC40078", VA = "0xC40078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A84E8", Offset = "0x9A84E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xC40190", Offset = "0xC40190", VA = "0xC40190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A84F8", Offset = "0x9A84F8")]
			add
			{
			}
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xC40234", Offset = "0xC40234", VA = "0xC40234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8508", Offset = "0x9A8508")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0xC4034C", Offset = "0xC4034C", VA = "0xC4034C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8518", Offset = "0x9A8518")]
			add
			{
			}
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xC403F0", Offset = "0xC403F0", VA = "0xC403F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8528", Offset = "0x9A8528")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xC4011C", Offset = "0xC4011C", VA = "0xC4011C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xC402D8", Offset = "0xC402D8", VA = "0xC402D8", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xC40494", Offset = "0xC40494", VA = "0xC40494", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000FF4")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xC40508", Offset = "0xC40508", VA = "0xC40508", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xC40634", Offset = "0xC40634", VA = "0xC40634", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xC40760", Offset = "0xC40760", VA = "0xC40760")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000E15")]
		None,
		[Token(Token = "0x4000E16")]
		Proximity,
		[Token(Token = "0x4000E17")]
		Contact,
		[Token(Token = "0x4000E18")]
		Action
	}
	[Token(Token = "0x2000261")]
	public enum InteractableState
	{
		[Token(Token = "0x4000E1A")]
		Default,
		[Token(Token = "0x4000E1B")]
		ProximityState,
		[Token(Token = "0x4000E1C")]
		ContactState,
		[Token(Token = "0x4000E1D")]
		ActionState
	}
	[Token(Token = "0x2000262")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xC408A0", Offset = "0xC408A0", VA = "0xC408A0")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170001A0")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xC407B8", Offset = "0xC407B8", VA = "0xC407B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xC4056C", Offset = "0xC4056C", VA = "0xC4056C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xC40698", Offset = "0xC40698", VA = "0xC40698")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xC40820", Offset = "0xC40820", VA = "0xC40820")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999900", Offset = "0x999900")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170003CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E73")]
				[Address(RVA = "0xC419EC", Offset = "0xC419EC", VA = "0xC419EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E75")]
				[Address(RVA = "0xC41A58", Offset = "0xC41A58", VA = "0xC41A58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0xC41420", Offset = "0xC41420", VA = "0xC41420")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0xC41554", Offset = "0xC41554", VA = "0xC41554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0xC415C8", Offset = "0xC415C8", VA = "0xC415C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xC41570", Offset = "0xC41570", VA = "0xC41570")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xC419F4", Offset = "0xC419F4", VA = "0xC419F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xC412FC", Offset = "0xC412FC", VA = "0xC412FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xC41378", Offset = "0xC41378", VA = "0xC41378")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8538", Offset = "0x9A8538")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xC4144C", Offset = "0xC4144C", VA = "0xC4144C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xC4154C", Offset = "0xC4154C", VA = "0xC4154C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170001A1")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xC3D520", Offset = "0xC3D520", VA = "0xC3D520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xC3D68C", Offset = "0xC3D68C", VA = "0xC3D68C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xC41A60", Offset = "0xC41A60", VA = "0xC41A60")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xC41B14", Offset = "0xC41B14", VA = "0xC41B14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xC41DD8", Offset = "0xC41DD8", VA = "0xC41DD8")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xC41E20", Offset = "0xC41E20", VA = "0xC41E20")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xC420B4", Offset = "0xC420B4", VA = "0xC420B4")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xC421F0", Offset = "0xC421F0", VA = "0xC421F0")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999910", Offset = "0x999910")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170003CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E79")]
				[Address(RVA = "0xC3EB70", Offset = "0xC3EB70", VA = "0xC3EB70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7B")]
				[Address(RVA = "0xC3EBDC", Offset = "0xC3EBDC", VA = "0xC3EBDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xC3D7C0", Offset = "0xC3D7C0", VA = "0xC3D7C0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001E77")]
			[Address(RVA = "0xC3E530", Offset = "0xC3E530", VA = "0xC3E530", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E78")]
			[Address(RVA = "0xC3E534", Offset = "0xC3E534", VA = "0xC3E534", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0xC3EB78", Offset = "0xC3EB78", VA = "0xC3EB78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E2D")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170001A2")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0xC3D3E8", Offset = "0xC3D3E8", VA = "0xC3D3E8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001A3")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xC3D3F0", Offset = "0xC3D3F0", VA = "0xC3D3F0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001A4")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xC3D3F8", Offset = "0xC3D3F8", VA = "0xC3D3F8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public override bool EnableState
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xC3D400", Offset = "0xC3D400", VA = "0xC3D400", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600100E")]
			[Address(RVA = "0xC3D42C", Offset = "0xC3D42C", VA = "0xC3D42C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xC3D468", Offset = "0xC3D468", VA = "0xC3D468", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xC3D740", Offset = "0xC3D740", VA = "0xC3D740")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A859C", Offset = "0x9A859C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xC3D7EC", Offset = "0xC3D7EC", VA = "0xC3D7EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xC3DD18", Offset = "0xC3DD18", VA = "0xC3DD18")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xC3DF9C", Offset = "0xC3DF9C", VA = "0xC3DF9C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xC3E0E8", Offset = "0xC3E0E8", VA = "0xC3E0E8", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xC3E3BC", Offset = "0xC3E3BC", VA = "0xC3E3BC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xC3E3C0", Offset = "0xC3E3C0", VA = "0xC3E3C0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xC3E3C4", Offset = "0xC3E3C4", VA = "0xC3E3C4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F7E0", Offset = "0x99F7E0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F7F0", Offset = "0x99F7F0")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F800", Offset = "0x99F800")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170001A6")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xC3EBE4", Offset = "0xC3EBE4", VA = "0xC3EBE4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8600", Offset = "0x9A8600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xC3EBEC", Offset = "0xC3EBEC", VA = "0xC3EBEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8610", Offset = "0x9A8610")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public bool EnableState
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xC3EBF4", Offset = "0xC3EBF4", VA = "0xC3EBF4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xC3EC10", Offset = "0xC3EC10", VA = "0xC3EC10", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xC3EC30", Offset = "0xC3EC30", VA = "0xC3EC30", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8620", Offset = "0x9A8620")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xC3EC38", Offset = "0xC3EC38", VA = "0xC3EC38", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8630", Offset = "0x9A8630")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public float SphereRadius
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xC3EC44", Offset = "0xC3EC44", VA = "0xC3EC44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8640", Offset = "0x9A8640")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xC3EC4C", Offset = "0xC3EC4C", VA = "0xC3EC4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8650", Offset = "0x9A8650")]
			private set
			{
			}
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xC3EC54", Offset = "0xC3EC54", VA = "0xC3EC54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xC3EC9C", Offset = "0xC3EC9C", VA = "0xC3EC9C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xC3ECA0", Offset = "0xC3ECA0", VA = "0xC3ECA0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000268")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000E3D")]
		None = 0,
		[Token(Token = "0x4000E3E")]
		Ray = 1,
		[Token(Token = "0x4000E3F")]
		Poke = 4,
		[Token(Token = "0x4000E40")]
		All = -1
	}
	[Token(Token = "0x2000269")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000E42")]
		Inactive,
		[Token(Token = "0x4000E43")]
		PrimaryInputDown,
		[Token(Token = "0x4000E44")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000E45")]
		PrimaryInputUp
	}
	[Token(Token = "0x200026A")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xC3E364", Offset = "0xC3E364", VA = "0xC3E364")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200026B")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F810", Offset = "0x99F810")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F820", Offset = "0x99F820")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F830", Offset = "0x99F830")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170001AA")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0xC40968", Offset = "0xC40968", VA = "0xC40968")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0xC40970", Offset = "0xC40970", VA = "0xC40970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8660", Offset = "0x9A8660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xC40978", Offset = "0xC40978", VA = "0xC40978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8670", Offset = "0x9A8670")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001027")]
			get;
		}

		[Token(Token = "0x170001AD")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001028")]
			get;
		}

		[Token(Token = "0x170001AE")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001029")]
			get;
		}

		[Token(Token = "0x170001AF")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0xC40984", Offset = "0xC40984", VA = "0xC40984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8680", Offset = "0x9A8680")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600102B")]
			[Address(RVA = "0xC40990", Offset = "0xC40990", VA = "0xC40990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8690", Offset = "0x9A8690")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0xC4099C", Offset = "0xC4099C", VA = "0xC4099C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A86A0", Offset = "0x9A86A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600102D")]
			[Address(RVA = "0xC409A8", Offset = "0xC409A8", VA = "0xC409A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A86B0", Offset = "0x9A86B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001032")]
			get;
			[Token(Token = "0x6001033")]
			set;
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xC409B4", Offset = "0xC409B4", VA = "0xC409B4")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600102F")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001030")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001031")]
		public abstract void DeFocus();

		[Token(Token = "0x6001034")]
		public abstract void Initialize();

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xC409BC", Offset = "0xC409BC", VA = "0xC409BC")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xC40A0C", Offset = "0xC40A0C", VA = "0xC40A0C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xC40A64", Offset = "0xC40A64", VA = "0xC40A64", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xC40CD0", Offset = "0xC40CD0", VA = "0xC40CD0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xC3E3D8", Offset = "0xC3E3D8", VA = "0xC3E3D8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170001B2")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600103A")]
			get;
		}

		[Token(Token = "0x170001B3")]
		bool EnableState
		{
			[Token(Token = "0x600103C")]
			get;
			[Token(Token = "0x600103D")]
			set;
		}

		[Token(Token = "0x170001B4")]
		bool ToolActivateState
		{
			[Token(Token = "0x600103E")]
			get;
			[Token(Token = "0x600103F")]
			set;
		}

		[Token(Token = "0x600103B")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200026D")]
	public class PinchStateModule
	{
		[Token(Token = "0x200053B")]
		private enum PinchState
		{
			[Token(Token = "0x40020B8")]
			None,
			[Token(Token = "0x40020B9")]
			PinchDown,
			[Token(Token = "0x40020BA")]
			PinchStay,
			[Token(Token = "0x40020BB")]
			PinchUp
		}

		[Token(Token = "0x4000E52")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170001B5")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0xC442E0", Offset = "0xC442E0", VA = "0xC442E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B6")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0xC4436C", Offset = "0xC4436C", VA = "0xC4436C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B7")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xC443F8", Offset = "0xC443F8", VA = "0xC443F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xC44484", Offset = "0xC44484", VA = "0xC44484")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xC444B8", Offset = "0xC444B8", VA = "0xC444B8")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000E55")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000E56")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000E57")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000E58")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000E59")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99F850", Offset = "0x99F850")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170001B8")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0xC44790", Offset = "0xC44790", VA = "0xC44790", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001B9")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0xC44798", Offset = "0xC44798", VA = "0xC44798", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001BA")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0xC44800", Offset = "0xC44800", VA = "0xC44800", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public override bool EnableState
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xC44808", Offset = "0xC44808", VA = "0xC44808", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xC4483C", Offset = "0xC4483C", VA = "0xC4483C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xC448B0", Offset = "0xC448B0", VA = "0xC448B0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xC44910", Offset = "0xC44910", VA = "0xC44910")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xC449AC", Offset = "0xC449AC", VA = "0xC449AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xC44CB4", Offset = "0xC44CB4", VA = "0xC44CB4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xC44DB0", Offset = "0xC44DB0", VA = "0xC44DB0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xC45148", Offset = "0xC45148", VA = "0xC45148")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xC45308", Offset = "0xC45308", VA = "0xC45308")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xC45430", Offset = "0xC45430", VA = "0xC45430")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xC45774", Offset = "0xC45774", VA = "0xC45774")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xC45B90", Offset = "0xC45B90", VA = "0xC45B90", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xC45C88", Offset = "0xC45C88", VA = "0xC45C88", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xC45CC4", Offset = "0xC45CC4", VA = "0xC45CC4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000E65")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000E66")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F8C4", Offset = "0x99F8C4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170001BC")]
		public bool EnableState
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0xC44820", Offset = "0xC44820", VA = "0xC44820", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001057")]
			[Address(RVA = "0xC44858", Offset = "0xC44858", VA = "0xC44858", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xC45DC4", Offset = "0xC45DC4", VA = "0xC45DC4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001059")]
			[Address(RVA = "0xC44C78", Offset = "0xC44C78", VA = "0xC44C78", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xC46020", Offset = "0xC46020", VA = "0xC46020", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A86C0", Offset = "0x9A86C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xC46028", Offset = "0xC46028", VA = "0xC46028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A86D0", Offset = "0x9A86D0")]
			set
			{
			}
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xC45DCC", Offset = "0xC45DCC", VA = "0xC45DCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xC45BD0", Offset = "0xC45BD0", VA = "0xC45BD0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xC46030", Offset = "0xC46030", VA = "0xC46030")]
		private void Update()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xC46368", Offset = "0xC46368", VA = "0xC46368")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xC46558", Offset = "0xC46558", VA = "0xC46558")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170001BF")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0xC3D044", Offset = "0xC3D044", VA = "0xC3D044")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001062")]
			[Address(RVA = "0xC3D04C", Offset = "0xC3D04C", VA = "0xC3D04C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0xC3D0DC", Offset = "0xC3D0DC", VA = "0xC3D0DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0xC3D0E4", Offset = "0xC3D0E4", VA = "0xC3D0E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xC3D154", Offset = "0xC3D154", VA = "0xC3D154")]
		private void Start()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xC3D3C0", Offset = "0xC3D3C0", VA = "0xC3D3C0")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xC3D3D0", Offset = "0xC3D3D0", VA = "0xC3D3D0")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xC3D3E0", Offset = "0xC3D3E0", VA = "0xC3D3E0")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xC3AA90", Offset = "0xC3AA90", VA = "0xC3AA90")]
		private void Awake()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xC3AA94", Offset = "0xC3AA94", VA = "0xC3AA94")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xC3AB34", Offset = "0xC3AB34", VA = "0xC3AB34")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xC3AC28", Offset = "0xC3AC28", VA = "0xC3AC28")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xC3AD1C", Offset = "0xC3AD1C", VA = "0xC3AD1C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xC3ADE0", Offset = "0xC3ADE0", VA = "0xC3ADE0")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xC3AED4", Offset = "0xC3AED4", VA = "0xC3AED4")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xC3AF20", Offset = "0xC3AF20", VA = "0xC3AF20")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xC3B080", Offset = "0xC3B080", VA = "0xC3B080")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xC3B0F4", Offset = "0xC3B0F4", VA = "0xC3B0F4")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xC3B0FC", Offset = "0xC3B0FC", VA = "0xC3B0FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xC3B100", Offset = "0xC3B100", VA = "0xC3B100")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xC3B0B8", Offset = "0xC3B0B8", VA = "0xC3B0B8")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xC3B140", Offset = "0xC3B140", VA = "0xC3B140")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999920", Offset = "0x999920")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170003D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7F")]
				[Address(RVA = "0xC44180", Offset = "0xC44180", VA = "0xC44180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E81")]
				[Address(RVA = "0xC441EC", Offset = "0xC441EC", VA = "0xC441EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xC43E94", Offset = "0xC43E94", VA = "0xC43E94")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0xC43F78", Offset = "0xC43F78", VA = "0xC43F78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0xC43F7C", Offset = "0xC43F7C", VA = "0xC43F7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0xC44188", Offset = "0xC44188", VA = "0xC44188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E76")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000E77")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xC43A70", Offset = "0xC43A70", VA = "0xC43A70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xC43B18", Offset = "0xC43B18", VA = "0xC43B18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xC43DCC", Offset = "0xC43DCC", VA = "0xC43DCC")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xC43D4C", Offset = "0xC43D4C", VA = "0xC43D4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A86E0", Offset = "0x9A86E0")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xC43EC0", Offset = "0xC43EC0", VA = "0xC43EC0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200053D")]
		public enum SelectionState
		{
			[Token(Token = "0x40020C3")]
			Off,
			[Token(Token = "0x40020C4")]
			Selected,
			[Token(Token = "0x40020C5")]
			Highlighted
		}

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170001C1")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0xC465C8", Offset = "0xC465C8", VA = "0xC465C8")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600107D")]
			[Address(RVA = "0xC465D0", Offset = "0xC465D0", VA = "0xC465D0")]
			set
			{
			}
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xC46764", Offset = "0xC46764", VA = "0xC46764")]
		private void Awake()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xC46978", Offset = "0xC46978", VA = "0xC46978")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xC46658", Offset = "0xC46658", VA = "0xC46658")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xC46A60", Offset = "0xC46A60", VA = "0xC46A60")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200053E")]
		public enum SegmentType
		{
			[Token(Token = "0x40020C7")]
			Straight,
			[Token(Token = "0x40020C8")]
			LeftTurn,
			[Token(Token = "0x40020C9")]
			RightTurn,
			[Token(Token = "0x40020CA")]
			Switch
		}

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000E8C")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000E8D")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99F9A4", Offset = "0x99F9A4")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170001C2")]
		public float StartDistance
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0xC46ACC", Offset = "0xC46ACC", VA = "0xC46ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8744", Offset = "0x9A8744")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001084")]
			[Address(RVA = "0xC46AD4", Offset = "0xC46AD4", VA = "0xC46AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8754", Offset = "0x9A8754")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float GridSize
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0xC46ADC", Offset = "0xC46ADC", VA = "0xC46ADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001086")]
			[Address(RVA = "0xC46AE4", Offset = "0xC46AE4", VA = "0xC46AE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public int SubDivCount
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0xC46AEC", Offset = "0xC46AEC", VA = "0xC46AEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001088")]
			[Address(RVA = "0xC46AF4", Offset = "0xC46AF4", VA = "0xC46AF4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public SegmentType Type
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0xC46AFC", Offset = "0xC46AFC", VA = "0xC46AFC")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170001C6")]
		public Pose EndPose
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0xC46B04", Offset = "0xC46B04", VA = "0xC46B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public float Radius
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0xC46F9C", Offset = "0xC46F9C", VA = "0xC46F9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C8")]
		public float SegmentLength
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xC46B6C", Offset = "0xC46B6C", VA = "0xC46B6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xC46FAC", Offset = "0xC46FAC", VA = "0xC46FAC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xC46FC4", Offset = "0xC46FC4", VA = "0xC46FC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xC46BAC", Offset = "0xC46BAC", VA = "0xC46BAC")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xC46FC8", Offset = "0xC46FC8", VA = "0xC46FC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xC46FCC", Offset = "0xC46FCC", VA = "0xC46FCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xC47038", Offset = "0xC47038", VA = "0xC47038")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xC47BCC", Offset = "0xC47BCC", VA = "0xC47BCC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xC47F0C", Offset = "0xC47F0C", VA = "0xC47F0C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999930", Offset = "0x999930")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170003D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E85")]
				[Address(RVA = "0xC48BC4", Offset = "0xC48BC4", VA = "0xC48BC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E87")]
				[Address(RVA = "0xC48C30", Offset = "0xC48C30", VA = "0xC48C30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0xC48904", Offset = "0xC48904", VA = "0xC48904")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0xC48A00", Offset = "0xC48A00", VA = "0xC48A00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0xC48A04", Offset = "0xC48A04", VA = "0xC48A04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xC48BCC", Offset = "0xC48BCC", VA = "0xC48BCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E93")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000E94")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xC47FD4", Offset = "0xC47FD4", VA = "0xC47FD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xC4809C", Offset = "0xC4809C", VA = "0xC4809C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xC48150", Offset = "0xC48150", VA = "0xC48150")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xC48280", Offset = "0xC48280", VA = "0xC48280")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xC483F4", Offset = "0xC483F4", VA = "0xC483F4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xC48594", Offset = "0xC48594", VA = "0xC48594")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xC4882C", Offset = "0xC4882C", VA = "0xC4882C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xC486B0", Offset = "0xC486B0", VA = "0xC486B0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xC486C4", Offset = "0xC486C4", VA = "0xC486C4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xC48884", Offset = "0xC48884", VA = "0xC48884")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8764", Offset = "0x9A8764")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xC48930", Offset = "0xC48930", VA = "0xC48930")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170001C9")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0xC48C38", Offset = "0xC48C38", VA = "0xC48C38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xC48C48", Offset = "0xC48C48", VA = "0xC48C48", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xC48C50", Offset = "0xC48C50", VA = "0xC48C50", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xC490D4", Offset = "0xC490D4", VA = "0xC490D4")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000EA7")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000EA8")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99FAA4", Offset = "0x99FAA4")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170001CA")]
		public float Distance
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xC491E4", Offset = "0xC491E4", VA = "0xC491E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A87C8", Offset = "0x9A87C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xC491EC", Offset = "0xC491EC", VA = "0xC491EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A87D8", Offset = "0x9A87D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public float Scale
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xC491F4", Offset = "0xC491F4", VA = "0xC491F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xC491FC", Offset = "0xC491FC", VA = "0xC491FC")]
			set
			{
			}
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xC48C4C", Offset = "0xC48C4C", VA = "0xC48C4C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xC49204", Offset = "0xC49204", VA = "0xC49204")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xC48CA0", Offset = "0xC48CA0", VA = "0xC48CA0")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xC48F80", Offset = "0xC48F80", VA = "0xC48F80")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60010AC")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xC49144", Offset = "0xC49144", VA = "0xC49144")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999940", Offset = "0x999940")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170003D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E8B")]
				[Address(RVA = "0xC49C60", Offset = "0xC49C60", VA = "0xC49C60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8D")]
				[Address(RVA = "0xC49CCC", Offset = "0xC49CCC", VA = "0xC49CCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0xC49834", Offset = "0xC49834", VA = "0xC49834")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xC499D8", Offset = "0xC499D8", VA = "0xC499D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0xC499DC", Offset = "0xC499DC", VA = "0xC499DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xC49C68", Offset = "0xC49C68", VA = "0xC49C68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xC493E4", Offset = "0xC493E4", VA = "0xC493E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xC4944C", Offset = "0xC4944C", VA = "0xC4944C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xC49558", Offset = "0xC49558", VA = "0xC49558")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xC496C4", Offset = "0xC496C4", VA = "0xC496C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xC495BC", Offset = "0xC495BC", VA = "0xC495BC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xC497A4", Offset = "0xC497A4", VA = "0xC497A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A87E8", Offset = "0x9A87E8")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xC49860", Offset = "0xC49860", VA = "0xC49860")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xC49918", Offset = "0xC49918", VA = "0xC49918")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xC49978", Offset = "0xC49978", VA = "0xC49978")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000541")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40020DD")]
			Start,
			[Token(Token = "0x40020DE")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40020DF")]
			Stop
		}

		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999950", Offset = "0x999950")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170003D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E91")]
				[Address(RVA = "0xC4A654", Offset = "0xC4A654", VA = "0xC4A654", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E93")]
				[Address(RVA = "0xC4A6C0", Offset = "0xC4A6C0", VA = "0xC4A6C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xC49FC4", Offset = "0xC49FC4", VA = "0xC49FC4")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0xC4A414", Offset = "0xC4A414", VA = "0xC4A414", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0xC4A418", Offset = "0xC4A418", VA = "0xC4A418", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xC4A65C", Offset = "0xC4A65C", VA = "0xC4A65C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EBB")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000EBC")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000EBD")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000EBE")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99FB04", Offset = "0x99FB04")]
		protected float _initialSpeed;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xC49CD4", Offset = "0xC49CD4", VA = "0xC49CD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xC49E54", Offset = "0xC49E54", VA = "0xC49E54")]
		private void Update()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xC49E60", Offset = "0xC49E60", VA = "0xC49E60", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xC3AACC", Offset = "0xC3AACC", VA = "0xC3AACC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xC49DC0", Offset = "0xC49DC0", VA = "0xC49DC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A884C", Offset = "0x9A884C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xC49FF0", Offset = "0xC49FF0", VA = "0xC49FF0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xC49F5C", Offset = "0xC49F5C", VA = "0xC49F5C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xC3AB6C", Offset = "0xC3AB6C", VA = "0xC3AB6C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC3AC60", Offset = "0xC3AC60", VA = "0xC3AC60")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC4A230", Offset = "0xC4A230", VA = "0xC4A230")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC4A320", Offset = "0xC4A320", VA = "0xC4A320")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xC3AD54", Offset = "0xC3AD54", VA = "0xC3AD54")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xC3AE18", Offset = "0xC3AE18", VA = "0xC3AE18")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC3AF10", Offset = "0xC3AF10", VA = "0xC3AF10")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC4A3A8", Offset = "0xC4A3A8", VA = "0xC4A3A8")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170001CC")]
		public float TrackLength
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0xC4A6C8", Offset = "0xC4A6C8", VA = "0xC4A6C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0xC4A6D0", Offset = "0xC4A6D0", VA = "0xC4A6D0")]
			private set
			{
			}
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xC4A6D8", Offset = "0xC4A6D8", VA = "0xC4A6D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xC49288", Offset = "0xC49288", VA = "0xC49288")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xC4A6DC", Offset = "0xC4A6DC", VA = "0xC4A6DC")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xC4A8F8", Offset = "0xC4A8F8", VA = "0xC4A8F8")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xC4AA1C", Offset = "0xC4AA1C", VA = "0xC4AA1C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class Pose
	{
		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xC44674", Offset = "0xC44674", VA = "0xC44674")]
		public Pose()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xC44720", Offset = "0xC44720", VA = "0xC44720")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999960", Offset = "0x999960")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170003D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E97")]
				[Address(RVA = "0xC4B080", Offset = "0xC4B080", VA = "0xC4B080", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E99")]
				[Address(RVA = "0xC4B0EC", Offset = "0xC4B0EC", VA = "0xC4B0EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E94")]
			[Address(RVA = "0xC4ACE8", Offset = "0xC4ACE8", VA = "0xC4ACE8")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0xC4AE74", Offset = "0xC4AE74", VA = "0xC4AE74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0xC4AE78", Offset = "0xC4AE78", VA = "0xC4AE78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xC4B088", Offset = "0xC4B088", VA = "0xC4B088", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999970", Offset = "0x999970")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170003DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9D")]
				[Address(RVA = "0xC4B1CC", Offset = "0xC4B1CC", VA = "0xC4B1CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9F")]
				[Address(RVA = "0xC4B238", Offset = "0xC4B238", VA = "0xC4B238", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xC4ADD4", Offset = "0xC4ADD4", VA = "0xC4ADD4")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xC4B0F4", Offset = "0xC4B0F4", VA = "0xC4B0F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xC4B0F8", Offset = "0xC4B0F8", VA = "0xC4B0F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xC4B1D4", Offset = "0xC4B1D4", VA = "0xC4B1D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EE1")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99FCEC", Offset = "0x99FCEC")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170001CD")]
		public bool IsMoving
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xC4AA38", Offset = "0xC4AA38", VA = "0xC4AA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A88B0", Offset = "0x9A88B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xC4AA40", Offset = "0xC4AA40", VA = "0xC4AA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A88C0", Offset = "0x9A88C0")]
			private set
			{
			}
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xC4AA4C", Offset = "0xC4AA4C", VA = "0xC4AA4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xC4AA88", Offset = "0xC4AA88", VA = "0xC4AA88")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xC4ABE0", Offset = "0xC4ABE0", VA = "0xC4ABE0")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xC4AC58", Offset = "0xC4AC58", VA = "0xC4AC58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A88D0", Offset = "0x9A88D0")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xC4AD14", Offset = "0xC4AD14", VA = "0xC4AD14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8934", Offset = "0x9A8934")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xC4AE00", Offset = "0xC4AE00", VA = "0xC4AE00")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xC4AE6C", Offset = "0xC4AE6C", VA = "0xC4AE6C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xC4B240", Offset = "0xC4B240", VA = "0xC4B240")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xC4B2BC", Offset = "0xC4B2BC", VA = "0xC4B2BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xC4B37C", Offset = "0xC4B37C", VA = "0xC4B37C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xC4B484", Offset = "0xC4B484", VA = "0xC4B484")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xC4B508", Offset = "0xC4B508", VA = "0xC4B508")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xC4B5E8", Offset = "0xC4B5E8", VA = "0xC4B5E8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000EF2")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000EF3")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000EF4")]
		EUDT_None,
		[Token(Token = "0x4000EF5")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000280")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999980", Offset = "0x999980")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170003DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA3")]
				[Address(RVA = "0xC439FC", Offset = "0xC439FC", VA = "0xC439FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA5")]
				[Address(RVA = "0xC43A68", Offset = "0xC43A68", VA = "0xC43A68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xC43044", Offset = "0xC43044", VA = "0xC43044")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xC43790", Offset = "0xC43790", VA = "0xC43790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xC43794", Offset = "0xC43794", VA = "0xC43794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0xC43A04", Offset = "0xC43A04", VA = "0xC43A04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000EF7")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000EF8")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000EF9")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99FD2C", Offset = "0x99FD2C")]
		public GameObject mainCamera;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x99FD64", Offset = "0x99FD64")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xC422E0", Offset = "0xC422E0", VA = "0xC422E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xC42B34", Offset = "0xC42B34", VA = "0xC42B34")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xC42C74", Offset = "0xC42C74", VA = "0xC42C74")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xC42DB0", Offset = "0xC42DB0", VA = "0xC42DB0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xC42EEC", Offset = "0xC42EEC", VA = "0xC42EEC")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xC42C48", Offset = "0xC42C48", VA = "0xC42C48")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xC42FC4", Offset = "0xC42FC4", VA = "0xC42FC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8998", Offset = "0x9A8998")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xC43070", Offset = "0xC43070", VA = "0xC43070")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xC42674", Offset = "0xC42674", VA = "0xC42674")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xC43198", Offset = "0xC43198", VA = "0xC43198")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xC430A4", Offset = "0xC430A4", VA = "0xC430A4")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xC4353C", Offset = "0xC4353C", VA = "0xC4353C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xC43618", Offset = "0xC43618", VA = "0xC43618")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xC436A0", Offset = "0xC436A0", VA = "0xC436A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A89FC", Offset = "0x9A89FC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xC436F0", Offset = "0xC436F0", VA = "0xC436F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8A0C", Offset = "0x9A8A0C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xC43740", Offset = "0xC43740", VA = "0xC43740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8A1C", Offset = "0x9A8A1C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x99860C", Offset = "0x99860C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999990", Offset = "0x999990")]
		private sealed class <>c
		{
			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x107487C", Offset = "0x107487C", VA = "0x107487C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x1074884", Offset = "0x1074884", VA = "0x1074884")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F0E")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000F0F")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000F10")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000F11")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000F12")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000F13")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000F14")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000F15")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000F16")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000F17")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000F18")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1073A68", Offset = "0x1073A68", VA = "0x1073A68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1073ACC", Offset = "0x1073ACC", VA = "0x1073ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1073F00", Offset = "0x1073F00", VA = "0x1073F00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1073FCC", Offset = "0x1073FCC", VA = "0x1073FCC")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x10740DC", Offset = "0x10740DC", VA = "0x10740DC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1074418", Offset = "0x1074418", VA = "0x1074418")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1074588", Offset = "0x1074588", VA = "0x1074588")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x10746D8", Offset = "0x10746D8", VA = "0x10746D8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1074178", Offset = "0x1074178", VA = "0x1074178")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1074218", Offset = "0x1074218", VA = "0x1074218")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1073D54", Offset = "0x1073D54", VA = "0x1073D54")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x10747FC", Offset = "0x10747FC", VA = "0x10747FC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000F2B")]
		Default,
		[Token(Token = "0x4000F2C")]
		Generic,
		[Token(Token = "0x4000F2D")]
		PingPongBall,
		[Token(Token = "0x4000F2E")]
		Controller
	}
	[Token(Token = "0x2000283")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001CE")]
		public bool AllowPointing
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x10748B4", Offset = "0x10748B4", VA = "0x10748B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CF")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x10748BC", Offset = "0x10748BC", VA = "0x10748BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D0")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x10748C4", Offset = "0x10748C4", VA = "0x10748C4")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x10748CC", Offset = "0x10748CC", VA = "0x10748CC")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x10748D4", Offset = "0x10748D4", VA = "0x10748D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x1074B4C", Offset = "0x1074B4C", VA = "0x1074B4C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1074BA8", Offset = "0x1074BA8", VA = "0x1074BA8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1074BF0", Offset = "0x1074BF0", VA = "0x1074BF0")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000285")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000F36")]
		TRIANGLES,
		[Token(Token = "0x4000F37")]
		QUADS
	}
	[Token(Token = "0x2000286")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000F39")]
		ABSORPTION,
		[Token(Token = "0x4000F3A")]
		TRANSMISSION,
		[Token(Token = "0x4000F3B")]
		SCATTERING
	}
	[Token(Token = "0x2000287")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000288")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000F40")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000F41")]
		public const string Tab = "    ";

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1077CEC", Offset = "0x1077CEC", VA = "0x1077CEC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8A2C", Offset = "0x9A8A2C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8A2C", Offset = "0x9A8A2C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x1077D74", Offset = "0x1077D74", VA = "0x1077D74")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8A8C", Offset = "0x9A8A8C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8A8C", Offset = "0x9A8A8C")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1077E0C", Offset = "0x1077E0C", VA = "0x1077E0C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8AEC", Offset = "0x9A8AEC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8AEC", Offset = "0x9A8AEC")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1077E94", Offset = "0x1077E94", VA = "0x1077E94")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8B4C", Offset = "0x9A8B4C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8B4C", Offset = "0x9A8B4C")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x1077F1C", Offset = "0x1077F1C", VA = "0x1077F1C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8BAC", Offset = "0x9A8BAC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9A8BAC", Offset = "0x9A8BAC")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class CAPI
	{
		[Token(Token = "0x2000547")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000548")]
		public enum Result
		{
			[Token(Token = "0x40020FB")]
			Success = 0,
			[Token(Token = "0x40020FC")]
			Failure = -1000,
			[Token(Token = "0x40020FD")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40020FE")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40020FF")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4002100")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4002101")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4002102")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4002103")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000549")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x10803A0", Offset = "0x10803A0", VA = "0x10803A0")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000F42")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000F4A")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001108")]
		[Address(RVA = "0x107801C", Offset = "0x107801C", VA = "0x107801C")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x10780C8", Offset = "0x10780C8", VA = "0x10780C8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x1078290", Offset = "0x1078290", VA = "0x1078290")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1078374", Offset = "0x1078374", VA = "0x1078374")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1078400", Offset = "0x1078400", VA = "0x1078400")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600110D")]
		[Address(RVA = "0x107848C", Offset = "0x107848C", VA = "0x107848C")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1078528", Offset = "0x1078528", VA = "0x1078528")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1078640", Offset = "0x1078640", VA = "0x1078640")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x10786DC", Offset = "0x10786DC", VA = "0x10786DC")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001111")]
		[Address(RVA = "0x10787F4", Offset = "0x10787F4", VA = "0x10787F4")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001112")]
		[Address(RVA = "0x1078890", Offset = "0x1078890", VA = "0x1078890")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001113")]
		[Address(RVA = "0x107892C", Offset = "0x107892C", VA = "0x107892C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001114")]
		[Address(RVA = "0x10789C8", Offset = "0x10789C8", VA = "0x10789C8")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1078A64", Offset = "0x1078A64", VA = "0x1078A64")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1078B10", Offset = "0x1078B10", VA = "0x1078B10")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1078BBC", Offset = "0x1078BBC", VA = "0x1078BBC")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1078C68", Offset = "0x1078C68", VA = "0x1078C68")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1078D04", Offset = "0x1078D04", VA = "0x1078D04")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1078DA0", Offset = "0x1078DA0", VA = "0x1078DA0")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1078E4C", Offset = "0x1078E4C", VA = "0x1078E4C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1078EF8", Offset = "0x1078EF8", VA = "0x1078EF8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1078FA4", Offset = "0x1078FA4", VA = "0x1078FA4")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1079040", Offset = "0x1079040", VA = "0x1079040")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1079104", Offset = "0x1079104", VA = "0x1079104")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1079188", Offset = "0x1079188", VA = "0x1079188")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1079244", Offset = "0x1079244", VA = "0x1079244")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1079320", Offset = "0x1079320", VA = "0x1079320")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001123")]
		[Address(RVA = "0x107940C", Offset = "0x107940C", VA = "0x107940C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x10794B8", Offset = "0x10794B8", VA = "0x10794B8")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1079564", Offset = "0x1079564", VA = "0x1079564")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1079610", Offset = "0x1079610", VA = "0x1079610")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001127")]
		[Address(RVA = "0x10796BC", Offset = "0x10796BC", VA = "0x10796BC")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1079768", Offset = "0x1079768", VA = "0x1079768")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x1079804", Offset = "0x1079804", VA = "0x1079804")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1079940", Offset = "0x1079940", VA = "0x1079940")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1079894", Offset = "0x1079894", VA = "0x1079894")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1079B44", Offset = "0x1079B44", VA = "0x1079B44")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x1079C7C", Offset = "0x1079C7C", VA = "0x1079C7C")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600112E")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1079D18", Offset = "0x1079D18", VA = "0x1079D18")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1079F88", Offset = "0x1079F88", VA = "0x1079F88")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x107A024", Offset = "0x107A024", VA = "0x107A024")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001132")]
		[Address(RVA = "0x107A15C", Offset = "0x107A15C", VA = "0x107A15C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x107A1F8", Offset = "0x107A1F8", VA = "0x107A1F8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001134")]
		[Address(RVA = "0x107A330", Offset = "0x107A330", VA = "0x107A330")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x107A3CC", Offset = "0x107A3CC", VA = "0x107A3CC")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001136")]
		[Address(RVA = "0x107A504", Offset = "0x107A504", VA = "0x107A504")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x107A5A0", Offset = "0x107A5A0", VA = "0x107A5A0")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001138")]
		[Address(RVA = "0x107A6D8", Offset = "0x107A6D8", VA = "0x107A6D8")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001139")]
		[Address(RVA = "0x107A774", Offset = "0x107A774", VA = "0x107A774")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x600113A")]
		[Address(RVA = "0x107A810", Offset = "0x107A810", VA = "0x107A810")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600113B")]
		[Address(RVA = "0x107A8C4", Offset = "0x107A8C4", VA = "0x107A8C4")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x107A960", Offset = "0x107A960", VA = "0x107A960")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x107AB38", Offset = "0x107AB38", VA = "0x107AB38")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600113E")]
		[Address(RVA = "0x107AC74", Offset = "0x107AC74", VA = "0x107AC74")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600113F")]
		[Address(RVA = "0x107AA9C", Offset = "0x107AA9C", VA = "0x107AA9C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001140")]
		[Address(RVA = "0x107AD10", Offset = "0x107AD10", VA = "0x107AD10")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001141")]
		[Address(RVA = "0x107ADAC", Offset = "0x107ADAC", VA = "0x107ADAC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001142")]
		[Address(RVA = "0x107AE58", Offset = "0x107AE58", VA = "0x107AE58")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001143")]
		[Address(RVA = "0x107AEF4", Offset = "0x107AEF4", VA = "0x107AEF4")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001144")]
		[Address(RVA = "0x107AFA0", Offset = "0x107AFA0", VA = "0x107AFA0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001145")]
		[Address(RVA = "0x107B03C", Offset = "0x107B03C", VA = "0x107B03C")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x107B0D8", Offset = "0x107B0D8", VA = "0x107B0D8")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001147")]
		[Address(RVA = "0x107B320", Offset = "0x107B320", VA = "0x107B320")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x107B3CC", Offset = "0x107B3CC", VA = "0x107B3CC")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001149")]
		[Address(RVA = "0x107B5B8", Offset = "0x107B5B8", VA = "0x107B5B8")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x107B66C", Offset = "0x107B66C", VA = "0x107B66C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x600114B")]
		[Address(RVA = "0x107B798", Offset = "0x107B798", VA = "0x107B798")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600114C")]
		[Address(RVA = "0x107B834", Offset = "0x107B834", VA = "0x107B834")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x107B8D0", Offset = "0x107B8D0", VA = "0x107B8D0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600114E")]
		[Address(RVA = "0x107B9F8", Offset = "0x107B9F8", VA = "0x107B9F8")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x107BA94", Offset = "0x107BA94", VA = "0x107BA94")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001150")]
		[Address(RVA = "0x107BBBC", Offset = "0x107BBBC", VA = "0x107BBBC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001151")]
		[Address(RVA = "0x107BC58", Offset = "0x107BC58", VA = "0x107BC58")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001152")]
		[Address(RVA = "0x107BD04", Offset = "0x107BD04", VA = "0x107BD04")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001153")]
		[Address(RVA = "0x107BDB0", Offset = "0x107BDB0", VA = "0x107BDB0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001154")]
		[Address(RVA = "0x107BE5C", Offset = "0x107BE5C", VA = "0x107BE5C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001155")]
		[Address(RVA = "0x107BEF8", Offset = "0x107BEF8", VA = "0x107BEF8")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001156")]
		[Address(RVA = "0x107BF9C", Offset = "0x107BF9C", VA = "0x107BF9C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001157")]
		[Address(RVA = "0x107C040", Offset = "0x107C040", VA = "0x107C040")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001158")]
		[Address(RVA = "0x107C0DC", Offset = "0x107C0DC", VA = "0x107C0DC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001159")]
		[Address(RVA = "0x107C178", Offset = "0x107C178", VA = "0x107C178")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600115A")]
		[Address(RVA = "0x107C248", Offset = "0x107C248", VA = "0x107C248")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600115B")]
		[Address(RVA = "0x107C2F4", Offset = "0x107C2F4", VA = "0x107C2F4")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600115C")]
		[Address(RVA = "0x107C3A0", Offset = "0x107C3A0", VA = "0x107C3A0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600115D")]
		[Address(RVA = "0x107C43C", Offset = "0x107C43C", VA = "0x107C43C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600115E")]
		[Address(RVA = "0x107C4D8", Offset = "0x107C4D8", VA = "0x107C4D8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600115F")]
		[Address(RVA = "0x107C574", Offset = "0x107C574", VA = "0x107C574")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001160")]
		[Address(RVA = "0x107C628", Offset = "0x107C628", VA = "0x107C628")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001161")]
		[Address(RVA = "0x107C6D4", Offset = "0x107C6D4", VA = "0x107C6D4")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001162")]
		[Address(RVA = "0x107C780", Offset = "0x107C780", VA = "0x107C780")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001163")]
		[Address(RVA = "0x107C82C", Offset = "0x107C82C", VA = "0x107C82C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001164")]
		[Address(RVA = "0x107C8E0", Offset = "0x107C8E0", VA = "0x107C8E0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001165")]
		[Address(RVA = "0x107C994", Offset = "0x107C994", VA = "0x107C994")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001166")]
		[Address(RVA = "0x107CA30", Offset = "0x107CA30", VA = "0x107CA30")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x107CACC", Offset = "0x107CACC", VA = "0x107CACC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001168")]
		[Address(RVA = "0x107CBF4", Offset = "0x107CBF4", VA = "0x107CBF4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x107CC90", Offset = "0x107CC90", VA = "0x107CC90")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600116A")]
		[Address(RVA = "0x107CDB8", Offset = "0x107CDB8", VA = "0x107CDB8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x107CE54", Offset = "0x107CE54", VA = "0x107CE54")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600116C")]
		[Address(RVA = "0x107CF7C", Offset = "0x107CF7C", VA = "0x107CF7C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x107D018", Offset = "0x107D018", VA = "0x107D018")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x107D1DC", Offset = "0x107D1DC", VA = "0x107D1DC")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600116F")]
		[Address(RVA = "0x107D484", Offset = "0x107D484", VA = "0x107D484")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001170")]
		[Address(RVA = "0x107D140", Offset = "0x107D140", VA = "0x107D140")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001171")]
		[Address(RVA = "0x107D530", Offset = "0x107D530", VA = "0x107D530")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001172")]
		[Address(RVA = "0x107D5CC", Offset = "0x107D5CC", VA = "0x107D5CC")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001173")]
		[Address(RVA = "0x107D678", Offset = "0x107D678", VA = "0x107D678")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001174")]
		[Address(RVA = "0x107D724", Offset = "0x107D724", VA = "0x107D724")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001175")]
		[Address(RVA = "0x107D7D0", Offset = "0x107D7D0", VA = "0x107D7D0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001176")]
		[Address(RVA = "0x107D88C", Offset = "0x107D88C", VA = "0x107D88C")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001177")]
		[Address(RVA = "0x107D948", Offset = "0x107D948", VA = "0x107D948")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001178")]
		[Address(RVA = "0x107DA04", Offset = "0x107DA04", VA = "0x107DA04")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001179")]
		[Address(RVA = "0x107DAA0", Offset = "0x107DAA0", VA = "0x107DAA0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600117A")]
		[Address(RVA = "0x107DB3C", Offset = "0x107DB3C", VA = "0x107DB3C")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600117B")]
		[Address(RVA = "0x107DBD8", Offset = "0x107DBD8", VA = "0x107DBD8")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600117C")]
		[Address(RVA = "0x107DC74", Offset = "0x107DC74", VA = "0x107DC74")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600117D")]
		[Address(RVA = "0x107DD10", Offset = "0x107DD10", VA = "0x107DD10")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600117E")]
		[Address(RVA = "0x107DE50", Offset = "0x107DE50", VA = "0x107DE50")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600117F")]
		[Address(RVA = "0x107DF04", Offset = "0x107DF04", VA = "0x107DF04")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x107DFA0", Offset = "0x107DFA0", VA = "0x107DFA0")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x107E004", Offset = "0x107E004", VA = "0x107E004")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001182")]
		[Address(RVA = "0x107E120", Offset = "0x107E120", VA = "0x107E120")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x107E1CC", Offset = "0x107E1CC", VA = "0x107E1CC")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001184")]
		[Address(RVA = "0x107E310", Offset = "0x107E310", VA = "0x107E310")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001185")]
		[Address(RVA = "0x107E3BC", Offset = "0x107E3BC", VA = "0x107E3BC")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x107E480", Offset = "0x107E480", VA = "0x107E480")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001187")]
		[Address(RVA = "0x107E820", Offset = "0x107E820", VA = "0x107E820")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001188")]
		[Address(RVA = "0x107E8BC", Offset = "0x107E8BC", VA = "0x107E8BC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x107E970", Offset = "0x107E970", VA = "0x107E970")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600118A")]
		[Address(RVA = "0x107F140", Offset = "0x107F140", VA = "0x107F140")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600118B")]
		[Address(RVA = "0x107F1DC", Offset = "0x107F1DC", VA = "0x107F1DC")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1077FB4", Offset = "0x1077FB4", VA = "0x1077FB4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9A8C0C", Offset = "0x9A8C0C")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600118D")]
		[Address(RVA = "0x107F290", Offset = "0x107F290", VA = "0x107F290")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600118E")]
		[Address(RVA = "0x107F330", Offset = "0x107F330", VA = "0x107F330")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600118F")]
		[Address(RVA = "0x107F3CC", Offset = "0x107F3CC", VA = "0x107F3CC")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001190")]
		[Address(RVA = "0x107F468", Offset = "0x107F468", VA = "0x107F468")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x107F504", Offset = "0x107F504", VA = "0x107F504")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001192")]
		[Address(RVA = "0x107FEE8", Offset = "0x107FEE8", VA = "0x107FEE8")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x107FF84", Offset = "0x107FF84", VA = "0x107FF84")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001194")]
		[Address(RVA = "0x1080498", Offset = "0x1080498", VA = "0x1080498")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x1080310", Offset = "0x1080310", VA = "0x1080310")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1080524", Offset = "0x1080524", VA = "0x1080524")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200028A")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x99FE1C", Offset = "0x99FE1C")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x1067B6C", Offset = "0x1067B6C", VA = "0x1067B6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x1067B70", Offset = "0x1067B70", VA = "0x1067B70")]
		private void Update()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x1067C38", Offset = "0x1067C38", VA = "0x1067C38")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99FE68", Offset = "0x99FE68")]
		public bool autoRetrigger;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x99FEA0", Offset = "0x99FEA0")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99FEC4", Offset = "0x99FEC4")]
		public Transform[] playPositions;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xF7657C", Offset = "0xF7657C", VA = "0xF7657C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xF76728", Offset = "0xF76728", VA = "0xF76728")]
		private void Update()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xF7690C", Offset = "0xF7690C", VA = "0xF7690C")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xF76788", Offset = "0xF76788", VA = "0xF76788")]
		public void Play()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xF769DC", Offset = "0xF769DC", VA = "0xF769DC")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xF76B60", Offset = "0xF76B60", VA = "0xF76B60")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000F59")]
		Default,
		[Token(Token = "0x4000F5A")]
		Preload,
		[Token(Token = "0x4000F5B")]
		ManualPreload
	}
	[Token(Token = "0x200028D")]
	public enum Fade
	{
		[Token(Token = "0x4000F5D")]
		In,
		[Token(Token = "0x4000F5E")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	public class SoundGroup
	{
		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x99FEFC", Offset = "0x99FEFC")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x10679F4", Offset = "0x10679F4", VA = "0x10679F4")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1067AAC", Offset = "0x1067AAC", VA = "0x1067AAC")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x10654D8", Offset = "0x10654D8", VA = "0x10654D8")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1065868", Offset = "0x1065868", VA = "0x1065868")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1066F48", Offset = "0x1066F48", VA = "0x1066F48")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200028F")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200054A")]
		public enum Fade
		{
			[Token(Token = "0x4002106")]
			In,
			[Token(Token = "0x4002107")]
			Out
		}

		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9999A0", Offset = "0x9999A0")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x1064ECC", Offset = "0x1064ECC", VA = "0x1064ECC")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x1064ED4", Offset = "0x1064ED4", VA = "0x1064ED4")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9999B0", Offset = "0x9999B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x1064E30", Offset = "0x1064E30", VA = "0x1064E30")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x1064E38", Offset = "0x1064E38", VA = "0x1064E38")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99FF28", Offset = "0x99FF28")]
		public bool makePersistent;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99FF60", Offset = "0x99FF60")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99FF98", Offset = "0x99FF98")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x99FFD0", Offset = "0x99FFD0")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0008", Offset = "0x9A0008")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0040", Offset = "0x9A0040")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0078", Offset = "0x9A0078")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A00B0", Offset = "0x9A00B0")]
		public bool verboseLogging;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A00E8", Offset = "0x9A00E8")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0120", Offset = "0x9A0120")]
		public float volumeSoundFX;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0158", Offset = "0x9A0158")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001D1")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0xF76C3C", Offset = "0xF76C3C", VA = "0xF76C3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D2")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xF76D20", Offset = "0xF76D20", VA = "0xF76D20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public static float NearFallOff
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xF76D88", Offset = "0xF76D88", VA = "0xF76D88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D4")]
		public static float FarFallOff
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xF76E00", Offset = "0xF76E00", VA = "0xF76E00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D5")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0xF76E78", Offset = "0xF76E78", VA = "0xF76E78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0xF76EF0", Offset = "0xF76EF0", VA = "0xF76EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0xF76F68", Offset = "0xF76F68", VA = "0xF76F68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xF78E64", Offset = "0xF78E64", VA = "0xF78E64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xF76FE0", Offset = "0xF76FE0", VA = "0xF76FE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xF77214", Offset = "0xF77214", VA = "0xF77214")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xF76FE4", Offset = "0xF76FE4", VA = "0xF76FE4")]
		private void Init()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xF77F5C", Offset = "0xF77F5C", VA = "0xF77F5C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xF7736C", Offset = "0xF7736C", VA = "0xF7736C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xF785E4", Offset = "0xF785E4", VA = "0xF785E4")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xF7876C", Offset = "0xF7876C", VA = "0xF7876C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xF7890C", Offset = "0xF7890C", VA = "0xF7890C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xF78A0C", Offset = "0xF78A0C", VA = "0xF78A0C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xF78AA0", Offset = "0xF78AA0", VA = "0xF78AA0")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xF78ECC", Offset = "0xF78ECC", VA = "0xF78ECC")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xF78F48", Offset = "0xF78F48", VA = "0xF78F48")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xF77824", Offset = "0xF77824", VA = "0xF77824")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xF77F60", Offset = "0xF77F60", VA = "0xF77F60")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xF79094", Offset = "0xF79094", VA = "0xF79094")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xF79190", Offset = "0xF79190", VA = "0xF79190")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xF79290", Offset = "0xF79290", VA = "0xF79290")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xF78FC0", Offset = "0xF78FC0", VA = "0xF78FC0")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xF793D8", Offset = "0xF793D8", VA = "0xF793D8")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xF794A0", Offset = "0xF794A0", VA = "0xF794A0")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xF795CC", Offset = "0xF795CC", VA = "0xF795CC")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xF7691C", Offset = "0xF7691C", VA = "0xF7691C")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xF76AA0", Offset = "0xF76AA0", VA = "0xF76AA0")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xF79694", Offset = "0xF79694", VA = "0xF79694")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xF79764", Offset = "0xF79764", VA = "0xF79764")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xF7980C", Offset = "0xF7980C", VA = "0xF7980C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xF798E0", Offset = "0xF798E0", VA = "0xF798E0")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xF7998C", Offset = "0xF7998C", VA = "0xF7998C")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xF79A54", Offset = "0xF79A54", VA = "0xF79A54")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xF7A5F4", Offset = "0xF7A5F4", VA = "0xF7A5F4")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xF7ACF4", Offset = "0xF7ACF4", VA = "0xF7ACF4")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xF7AED4", Offset = "0xF7AED4", VA = "0xF7AED4")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xF7BABC", Offset = "0xF7BABC", VA = "0xF7BABC")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xF79C5C", Offset = "0xF79C5C", VA = "0xF79C5C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xF7BBE0", Offset = "0xF7BBE0", VA = "0xF7BBE0")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xF7BCD4", Offset = "0xF7BCD4", VA = "0xF7BCD4")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xF7BDD0", Offset = "0xF7BDD0", VA = "0xF7BDD0")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xF7C0CC", Offset = "0xF7C0CC", VA = "0xF7C0CC")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xF7C220", Offset = "0xF7C220", VA = "0xF7C220")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xF7C348", Offset = "0xF7C348", VA = "0xF7C348")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xF7C478", Offset = "0xF7C478", VA = "0xF7C478")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xF7C554", Offset = "0xF7C554", VA = "0xF7C554")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xF7C69C", Offset = "0xF7C69C", VA = "0xF7C69C")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xF7CAA8", Offset = "0xF7CAA8", VA = "0xF7CAA8")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000F86")]
		None = -1,
		[Token(Token = "0x4000F87")]
		Reserved,
		[Token(Token = "0x4000F88")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000291")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x1064FD4", Offset = "0x1064FD4", VA = "0x1064FD4")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x1064F78", Offset = "0x1064F78", VA = "0x1064F78")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		public enum FadeState
		{
			[Token(Token = "0x400210C")]
			Null,
			[Token(Token = "0x400210D")]
			FadingIn,
			[Token(Token = "0x400210E")]
			FadingOut,
			[Token(Token = "0x400210F")]
			Ducking
		}

		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9999C0", Offset = "0x9999C0")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170003DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0x10661D8", Offset = "0x10661D8", VA = "0x10661D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB9")]
				[Address(RVA = "0x1066244", Offset = "0x1066244", VA = "0x1066244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x1065C5C", Offset = "0x1065C5C", VA = "0x1065C5C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x10660E4", Offset = "0x10660E4", VA = "0x10660E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x10660E8", Offset = "0x10660E8", VA = "0x10660E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x10661E0", Offset = "0x10661E0", VA = "0x10661E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9999D0", Offset = "0x9999D0")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170003E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBD")]
				[Address(RVA = "0x10666C8", Offset = "0x10666C8", VA = "0x10666C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBF")]
				[Address(RVA = "0x1066734", Offset = "0x1066734", VA = "0x1066734", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x1066074", Offset = "0x1066074", VA = "0x1066074")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x1066548", Offset = "0x1066548", VA = "0x1066548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x106654C", Offset = "0x106654C", VA = "0x106654C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x10666D0", Offset = "0x10666D0", VA = "0x10666D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9999E0", Offset = "0x9999E0")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170003E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC3")]
				[Address(RVA = "0x10664D4", Offset = "0x10664D4", VA = "0x10664D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC5")]
				[Address(RVA = "0x1066540", Offset = "0x1066540", VA = "0x1066540", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x10660A0", Offset = "0x10660A0", VA = "0x10660A0")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x106624C", Offset = "0x106624C", VA = "0x106624C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x1066250", Offset = "0x1066250", VA = "0x1066250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x10664DC", Offset = "0x10664DC", VA = "0x10664DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001D9")]
		public float volume
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x1065074", Offset = "0x1065074", VA = "0x1065074")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x1065090", Offset = "0x1065090", VA = "0x1065090")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public float pitch
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x10650AC", Offset = "0x10650AC", VA = "0x10650AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x10650C8", Offset = "0x10650C8", VA = "0x10650C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public AudioClip clip
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x10650E4", Offset = "0x10650E4", VA = "0x10650E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x1065100", Offset = "0x1065100", VA = "0x1065100")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float time
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x106511C", Offset = "0x106511C", VA = "0x106511C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x1065138", Offset = "0x1065138", VA = "0x1065138")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public float length
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x1065154", Offset = "0x1065154", VA = "0x1065154")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DE")]
		public bool loop
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x106520C", Offset = "0x106520C", VA = "0x106520C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x1065228", Offset = "0x1065228", VA = "0x1065228")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public bool mute
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x1065248", Offset = "0x1065248", VA = "0x1065248")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x1065264", Offset = "0x1065264", VA = "0x1065264")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x1065284", Offset = "0x1065284", VA = "0x1065284")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x10652A0", Offset = "0x10652A0", VA = "0x10652A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public bool isPlaying
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x10652BC", Offset = "0x10652BC", VA = "0x10652BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x10652D8", Offset = "0x10652D8", VA = "0x10652D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x10654A0", Offset = "0x10654A0", VA = "0x10654A0")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1065568", Offset = "0x1065568", VA = "0x1065568")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x1065570", Offset = "0x1065570", VA = "0x1065570")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x10655A4", Offset = "0x10655A4", VA = "0x10655A4")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x10655AC", Offset = "0x10655AC", VA = "0x10655AC")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x10655B4", Offset = "0x10655B4", VA = "0x10655B4")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x106565C", Offset = "0x106565C", VA = "0x106565C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x10656BC", Offset = "0x10656BC", VA = "0x10656BC")]
		public void Play()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x106571C", Offset = "0x106571C", VA = "0x106571C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x1065754", Offset = "0x1065754", VA = "0x1065754")]
		public void Stop()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x10658F8", Offset = "0x10658F8", VA = "0x10658F8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1065958", Offset = "0x1065958", VA = "0x1065958")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1065A68", Offset = "0x1065A68", VA = "0x1065A68")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1065B38", Offset = "0x1065B38", VA = "0x1065B38")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x1065B80", Offset = "0x1065B80", VA = "0x1065B80")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x1065BAC", Offset = "0x1065BAC", VA = "0x1065BAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8C70", Offset = "0x9A8C70")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x1065C88", Offset = "0x1065C88", VA = "0x1065C88")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x1065D94", Offset = "0x1065D94", VA = "0x1065D94")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1065EC8", Offset = "0x1065EC8", VA = "0x1065EC8")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1065F40", Offset = "0x1065F40", VA = "0x1065F40")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x1065FD8", Offset = "0x1065FD8", VA = "0x1065FD8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x1065D00", Offset = "0x1065D00", VA = "0x1065D00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8CD4", Offset = "0x9A8CD4")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x1065E10", Offset = "0x1065E10", VA = "0x1065E10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8D38", Offset = "0x9A8D38")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x10660CC", Offset = "0x10660CC", VA = "0x10660CC")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000F9F")]
		Random,
		[Token(Token = "0x4000FA0")]
		Sequential
	}
	[Token(Token = "0x2000295")]
	public enum FreqHint
	{
		[Token(Token = "0x4000FA2")]
		None,
		[Token(Token = "0x4000FA3")]
		Wide,
		[Token(Token = "0x4000FA4")]
		Narrow
	}
	[Token(Token = "0x2000296")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000FA6")]
		VeryLow = -2,
		[Token(Token = "0x4000FA7")]
		Low,
		[Token(Token = "0x4000FA8")]
		Default,
		[Token(Token = "0x4000FA9")]
		High,
		[Token(Token = "0x4000FAA")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000297")]
	public class OSPProps
	{
		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0240", Offset = "0x9A0240")]
		public bool enableSpatialization;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0278", Offset = "0x9A0278")]
		public bool useFastOverride;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A02B0", Offset = "0x9A02B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A02B0", Offset = "0x9A02B0")]
		public float gain;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0304", Offset = "0x9A0304")]
		public bool enableInvSquare;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A033C", Offset = "0x9A033C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A033C", Offset = "0x9A033C")]
		public float volumetric;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0394", Offset = "0x9A0394")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9A0394", Offset = "0x9A0394")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x1064FE4", Offset = "0x1064FE4", VA = "0x1064FE4")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000298")]
	public class SoundFX
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A03F4", Offset = "0x9A03F4")]
		public string name;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A042C", Offset = "0x9A042C")]
		public SoundFXNext playback;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0464", Offset = "0x9A0464")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A0464", Offset = "0x9A0464")]
		public float volume;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A04B8", Offset = "0x9A04B8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9A04B8", Offset = "0x9A04B8")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0514", Offset = "0x9A0514")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9A0514", Offset = "0x9A0514")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0574", Offset = "0x9A0574")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A05AC", Offset = "0x9A05AC")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A05E4", Offset = "0x9A05E4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A061C", Offset = "0x9A061C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A061C", Offset = "0x9A061C")]
		public float spread;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0674", Offset = "0x9A0674")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A0674", Offset = "0x9A0674")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A06C8", Offset = "0x9A06C8")]
		public SoundPriority priority;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0700", Offset = "0x9A0700")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9A0700", Offset = "0x9A0700")]
		public Vector2 delay;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A075C", Offset = "0x9A075C")]
		public bool looping;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0794", Offset = "0x9A0794")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170001E2")]
		public int Length
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0x1066CA4", Offset = "0x1066CA4", VA = "0x1066CA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E3")]
		public bool IsValid
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0x1066CC4", Offset = "0x1066CC4", VA = "0x1066CC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		public SoundGroup Group
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x1066D70", Offset = "0x1066D70", VA = "0x1066D70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600120B")]
			[Address(RVA = "0x1066D78", Offset = "0x1066D78", VA = "0x1066D78")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0x1066D80", Offset = "0x1066D80", VA = "0x1066D80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E6")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x600120D")]
			[Address(RVA = "0x1066D8C", Offset = "0x1066D8C", VA = "0x1066D8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x106673C", Offset = "0x106673C", VA = "0x106673C")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1066DA4", Offset = "0x1066DA4", VA = "0x1066DA4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1066E7C", Offset = "0x1066E7C", VA = "0x1066E7C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1066F20", Offset = "0x1066F20", VA = "0x1066F20")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1066F68", Offset = "0x1066F68", VA = "0x1066F68")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x1067070", Offset = "0x1067070", VA = "0x1067070")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x106707C", Offset = "0x106707C", VA = "0x106707C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x106715C", Offset = "0x106715C", VA = "0x106715C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1067274", Offset = "0x1067274", VA = "0x1067274")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1067304", Offset = "0x1067304", VA = "0x1067304")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x106739C", Offset = "0x106739C", VA = "0x106739C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x106742C", Offset = "0x106742C", VA = "0x106742C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x10674BC", Offset = "0x10674BC", VA = "0x10674BC")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001E7")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x1067538", Offset = "0x1067538", VA = "0x1067538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		public string name
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x106765C", Offset = "0x106765C", VA = "0x106765C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600121C")]
			[Address(RVA = "0x1067664", Offset = "0x1067664", VA = "0x1067664")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public int Length
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x106768C", Offset = "0x106768C", VA = "0x106768C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EA")]
		public bool IsValid
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x10676D4", Offset = "0x10676D4", VA = "0x10676D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1067568", Offset = "0x1067568", VA = "0x1067568")]
		private void Init()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x106770C", Offset = "0x106770C", VA = "0x106770C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1067744", Offset = "0x1067744", VA = "0x1067744")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1067784", Offset = "0x1067784", VA = "0x1067784")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x10677CC", Offset = "0x10677CC", VA = "0x10677CC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x106784C", Offset = "0x106784C", VA = "0x106784C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x106788C", Offset = "0x106788C", VA = "0x106788C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x10678DC", Offset = "0x10678DC", VA = "0x10678DC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1067914", Offset = "0x1067914", VA = "0x1067914")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1067954", Offset = "0x1067954", VA = "0x1067954")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x106798C", Offset = "0x106798C", VA = "0x106798C")]
		public SoundFXRef()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x200029A")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9999F0", Offset = "0x9999F0")]
		private sealed class <>c
		{
			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0xBB2AA0", Offset = "0xBB2AA0", VA = "0xBB2AA0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xBB2AA8", Offset = "0xBB2AA8", VA = "0xBB2AA8")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x4000FC7")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float X;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Y;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Z;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Yaw;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Pitch;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float Roll;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float FieldOfVision;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float NearClip;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float FarClip;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float HMDOffset;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float NearOffset;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x170001EB")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xBB1DE4", Offset = "0xBB1DE4", VA = "0xBB1DE4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001EC")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0xBB1E74", Offset = "0xBB1E74", VA = "0xBB1E74")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x14000023")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xBB1C0C", Offset = "0xBB1C0C", VA = "0xBB1C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8D9C", Offset = "0x9A8D9C")]
			add
			{
			}
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xBB1CF8", Offset = "0xBB1CF8", VA = "0xBB1CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8DAC", Offset = "0x9A8DAC")]
			remove
			{
			}
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xBB1F20", Offset = "0xBB1F20", VA = "0xBB1F20")]
		static Calibration()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xBB28E8", Offset = "0xBB28E8", VA = "0xBB28E8")]
		private static void Reset()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xBB216C", Offset = "0xBB216C", VA = "0xBB216C")]
		public static void Read()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xBB29B0", Offset = "0xBB29B0", VA = "0xBB29B0")]
		private static bool TryParseInvariantFloat(string number, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200029B")]
	public static class Extensions
	{
		[Token(Token = "0x6001232")]
		[Address(RVA = "0xBB2B04", Offset = "0xBB2B04", VA = "0xBB2B04")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xBB2BC0", Offset = "0xBB2BC0", VA = "0xBB2BC0")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xBB2D8C", Offset = "0xBB2D8C", VA = "0xBB2D8C")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998680", Offset = "0x998680")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999A00", Offset = "0x999A00")]
		private sealed class <>c
		{
			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrackedDevicePose_t, int, <>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xBB3A28", Offset = "0xBB3A28", VA = "0xBB3A28")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xBB3A30", Offset = "0xBB3A30", VA = "0xBB3A30")]
			internal <>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xBB3ADC", Offset = "0xBB3ADC", VA = "0xBB3ADC")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xBB3B34", Offset = "0xBB3B34", VA = "0xBB3B34")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xBB3C30", Offset = "0xBB3C30", VA = "0xBB3C30")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xBB3C8C", Offset = "0xBB3C8C", VA = "0xBB3C8C")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xBB3DCC", Offset = "0xBB3DCC", VA = "0xBB3DCC")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A07DC", Offset = "0x9A07DC")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x170001ED")]
		public bool IsValid
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xBB2DC8", Offset = "0xBB2DC8", VA = "0xBB2DC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EE")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xBB2DD8", Offset = "0xBB2DD8", VA = "0xBB2DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8DDC", Offset = "0x9A8DDC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xBB2DE0", Offset = "0xBB2DE0", VA = "0xBB2DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8DEC", Offset = "0x9A8DEC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xBB2DE8", Offset = "0xBB2DE8", VA = "0xBB2DE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xBB2E78", Offset = "0xBB2E78", VA = "0xBB2E78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xBB2ECC", Offset = "0xBB2ECC", VA = "0xBB2ECC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xBB2F54", Offset = "0xBB2F54", VA = "0xBB2F54")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xBB2ED0", Offset = "0xBB2ED0", VA = "0xBB2ED0")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xBB2F58", Offset = "0xBB2F58", VA = "0xBB2F58")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xBB3020", Offset = "0xBB3020", VA = "0xBB3020")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xBB2E54", Offset = "0xBB2E54", VA = "0xBB2E54")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xBB3274", Offset = "0xBB3274", VA = "0xBB3274")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xBB37C8", Offset = "0xBB37C8", VA = "0xBB37C8")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xBB3930", Offset = "0xBB3930", VA = "0xBB3930")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9986B8", Offset = "0x9986B8")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string text;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xBB3EC8", Offset = "0xBB3EC8", VA = "0xBB3EC8")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9986F0", Offset = "0x9986F0")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A07EC", Offset = "0x9A07EC")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9A0824", Offset = "0x9A0824")]
		public Camera HMDCamera;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9A0834", Offset = "0x9A0834")]
		public bool DisableStandardAssets;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9A0844", Offset = "0x9A0844")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool WasActive;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x170001EF")]
		public Transform Origin
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xBB3EFC", Offset = "0xBB3EFC", VA = "0xBB3EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xBB3F9C", Offset = "0xBB3F9C", VA = "0xBB3F9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xBB4204", Offset = "0xBB4204", VA = "0xBB4204")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xBB436C", Offset = "0xBB436C", VA = "0xBB436C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xBB43C4", Offset = "0xBB43C4", VA = "0xBB43C4")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xBB4214", Offset = "0xBB4214", VA = "0xBB4214")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xBB4540", Offset = "0xBB4540", VA = "0xBB4540")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xBB49B8", Offset = "0xBB49B8", VA = "0xBB49B8")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xBB45B4", Offset = "0xBB45B4", VA = "0xBB45B4")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xBB4B58", Offset = "0xBB4B58", VA = "0xBB4B58")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xBB4680", Offset = "0xBB4680", VA = "0xBB4680")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xBB4A7C", Offset = "0xBB4A7C", VA = "0xBB4A7C")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xBB4DFC", Offset = "0xBB4DFC", VA = "0xBB4DFC")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998728", Offset = "0x998728")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999A10", Offset = "0x999A10")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x170003E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED4")]
				[Address(RVA = "0xBB60EC", Offset = "0xBB60EC", VA = "0xBB60EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED6")]
				[Address(RVA = "0xBB6158", Offset = "0xBB6158", VA = "0xBB6158", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0xBB5FA4", Offset = "0xBB5FA4", VA = "0xBB5FA4")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xBB5FD8", Offset = "0xBB5FD8", VA = "0xBB5FD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0xBB5FDC", Offset = "0xBB5FDC", VA = "0xBB5FDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xBB60F4", Offset = "0xBB60F4", VA = "0xBB60F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSetup;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LIV _liv;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _mrCamera;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _hmd;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _clipQuad;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _clipMaterial;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blitMaterial;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xBB4C34", Offset = "0xBB4C34", VA = "0xBB4C34")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xBB4E30", Offset = "0xBB4E30", VA = "0xBB4E30")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xBB5054", Offset = "0xBB5054", VA = "0xBB5054")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xBB5204", Offset = "0xBB5204", VA = "0xBB5204")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xBB5540", Offset = "0xBB5540", VA = "0xBB5540")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xBB5804", Offset = "0xBB5804", VA = "0xBB5804")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xBB5A88", Offset = "0xBB5A88", VA = "0xBB5A88")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xBB5D78", Offset = "0xBB5D78", VA = "0xBB5D78")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xBB5DD0", Offset = "0xBB5DD0", VA = "0xBB5DD0")]
		private void Composite()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xBB5EF8", Offset = "0xBB5EF8", VA = "0xBB5EF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xBB5F24", Offset = "0xBB5F24", VA = "0xBB5F24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8DFC", Offset = "0x9A8DFC")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xBB5FD0", Offset = "0xBB5FD0", VA = "0xBB5FD0")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998760", Offset = "0x998760")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x999A20", Offset = "0x999A20")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x170003E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EDA")]
				[Address(RVA = "0xBB6618", Offset = "0xBB6618", VA = "0xBB6618", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EDC")]
				[Address(RVA = "0xBB6684", Offset = "0xBB6684", VA = "0xBB6684", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xBB64CC", Offset = "0xBB64CC", VA = "0xBB64CC")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xBB6540", Offset = "0xBB6540", VA = "0xBB6540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xBB6544", Offset = "0xBB6544", VA = "0xBB6544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xBB6620", Offset = "0xBB6620", VA = "0xBB6620", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public static bool IsActive
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xBB43C0", Offset = "0xBB43C0", VA = "0xBB43C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F1")]
		public static int TextureWidth
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xBB5538", Offset = "0xBB5538", VA = "0xBB5538")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F2")]
		public static int TextureHeight
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xBB553C", Offset = "0xBB553C", VA = "0xBB553C")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600125D")]
		[Address(RVA = "0xBB6160", Offset = "0xBB6160", VA = "0xBB6160")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x600125E")]
		[Address(RVA = "0xBB61E8", Offset = "0xBB61E8", VA = "0xBB61E8")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x600125F")]
		[Address(RVA = "0xBB6278", Offset = "0xBB6278", VA = "0xBB6278")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x6001260")]
		[Address(RVA = "0xBB6300", Offset = "0xBB6300", VA = "0xBB6300")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x6001261")]
		[Address(RVA = "0xBB6388", Offset = "0xBB6388", VA = "0xBB6388")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xBB5EB0", Offset = "0xBB5EB0", VA = "0xBB5EB0")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xBB6420", Offset = "0xBB6420", VA = "0xBB6420")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xBB644C", Offset = "0xBB644C", VA = "0xBB644C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8E60", Offset = "0x9A8E60")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xBB64F8", Offset = "0xBB64F8", VA = "0xBB64F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xBB6538", Offset = "0xBB6538", VA = "0xBB6538")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRCamera;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Type SteamVRFade;

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xBB668C", Offset = "0xBB668C", VA = "0xBB668C")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xBB66E4", Offset = "0xBB66E4", VA = "0xBB66E4")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20002A2")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999A30", Offset = "0x999A30")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999A44", Offset = "0x999A44")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999A58", Offset = "0x999A58")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999A6C", Offset = "0x999A6C")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999A80", Offset = "0x999A80")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999A94", Offset = "0x999A94")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999AA8", Offset = "0x999AA8")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999ABC", Offset = "0x999ABC")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x200055D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999AD0", Offset = "0x999AD0")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999AE4", Offset = "0x999AE4")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999AF8", Offset = "0x999AF8")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999B0C", Offset = "0x999B0C")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999B20", Offset = "0x999B20")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999B34", Offset = "0x999B34")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999B48", Offset = "0x999B48")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999B5C", Offset = "0x999B5C")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999B70", Offset = "0x999B70")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999B84", Offset = "0x999B84")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999B98", Offset = "0x999B98")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999BAC", Offset = "0x999BAC")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999BC0", Offset = "0x999BC0")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999BD4", Offset = "0x999BD4")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999BE8", Offset = "0x999BE8")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999BFC", Offset = "0x999BFC")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999C10", Offset = "0x999C10")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999C24", Offset = "0x999C24")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999C38", Offset = "0x999C38")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999C4C", Offset = "0x999C4C")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999C60", Offset = "0x999C60")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999C74", Offset = "0x999C74")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999C88", Offset = "0x999C88")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999C9C", Offset = "0x999C9C")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999CB0", Offset = "0x999CB0")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999CC4", Offset = "0x999CC4")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999CD8", Offset = "0x999CD8")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999CEC", Offset = "0x999CEC")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999D00", Offset = "0x999D00")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999D14", Offset = "0x999D14")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999D28", Offset = "0x999D28")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999D3C", Offset = "0x999D3C")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999D50", Offset = "0x999D50")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999D64", Offset = "0x999D64")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999D78", Offset = "0x999D78")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999D8C", Offset = "0x999D8C")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999DA0", Offset = "0x999DA0")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999DB4", Offset = "0x999DB4")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999DC8", Offset = "0x999DC8")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x20002A3")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999DDC", Offset = "0x999DDC")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999DF0", Offset = "0x999DF0")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999E04", Offset = "0x999E04")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x20002A4")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999E18", Offset = "0x999E18")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999E2C", Offset = "0x999E2C")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999E40", Offset = "0x999E40")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999E54", Offset = "0x999E54")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999E68", Offset = "0x999E68")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999E7C", Offset = "0x999E7C")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999E90", Offset = "0x999E90")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999EA4", Offset = "0x999EA4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200058F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999EB8", Offset = "0x999EB8")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999ECC", Offset = "0x999ECC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999EE0", Offset = "0x999EE0")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999EF4", Offset = "0x999EF4")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x20002A5")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999F08", Offset = "0x999F08")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999F1C", Offset = "0x999F1C")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999F30", Offset = "0x999F30")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999F44", Offset = "0x999F44")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999F58", Offset = "0x999F58")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999F6C", Offset = "0x999F6C")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999F80", Offset = "0x999F80")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999F94", Offset = "0x999F94")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999FA8", Offset = "0x999FA8")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999FBC", Offset = "0x999FBC")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999FD0", Offset = "0x999FD0")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999FE4", Offset = "0x999FE4")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x999FF8", Offset = "0x999FF8")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A00C", Offset = "0x99A00C")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A020", Offset = "0x99A020")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A034", Offset = "0x99A034")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A048", Offset = "0x99A048")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A05C", Offset = "0x99A05C")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A070", Offset = "0x99A070")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A084", Offset = "0x99A084")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A098", Offset = "0x99A098")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20005A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A0AC", Offset = "0x99A0AC")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A0C0", Offset = "0x99A0C0")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A0D4", Offset = "0x99A0D4")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A0E8", Offset = "0x99A0E8")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A0FC", Offset = "0x99A0FC")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A110", Offset = "0x99A110")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A124", Offset = "0x99A124")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A138", Offset = "0x99A138")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A14C", Offset = "0x99A14C")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A160", Offset = "0x99A160")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x20002A6")]
	public struct IVRChaperone
	{
		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A174", Offset = "0x99A174")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A188", Offset = "0x99A188")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A19C", Offset = "0x99A19C")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A1B0", Offset = "0x99A1B0")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A1C4", Offset = "0x99A1C4")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A1D8", Offset = "0x99A1D8")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A1EC", Offset = "0x99A1EC")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A200", Offset = "0x99A200")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x20002A7")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A214", Offset = "0x99A214")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A228", Offset = "0x99A228")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A23C", Offset = "0x99A23C")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A250", Offset = "0x99A250")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A264", Offset = "0x99A264")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A278", Offset = "0x99A278")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A28C", Offset = "0x99A28C")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A2A0", Offset = "0x99A2A0")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A2B4", Offset = "0x99A2B4")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A2C8", Offset = "0x99A2C8")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A2DC", Offset = "0x99A2DC")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A2F0", Offset = "0x99A2F0")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A304", Offset = "0x99A304")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A318", Offset = "0x99A318")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A32C", Offset = "0x99A32C")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A340", Offset = "0x99A340")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A354", Offset = "0x99A354")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A368", Offset = "0x99A368")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A37C", Offset = "0x99A37C")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A390", Offset = "0x99A390")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x20002A8")]
	public struct IVRCompositor
	{
		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A3A4", Offset = "0x99A3A4")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A3B8", Offset = "0x99A3B8")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A3CC", Offset = "0x99A3CC")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A3E0", Offset = "0x99A3E0")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A3F4", Offset = "0x99A3F4")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A408", Offset = "0x99A408")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A41C", Offset = "0x99A41C")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A430", Offset = "0x99A430")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A444", Offset = "0x99A444")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A458", Offset = "0x99A458")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A46C", Offset = "0x99A46C")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A480", Offset = "0x99A480")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A494", Offset = "0x99A494")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A4A8", Offset = "0x99A4A8")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A4BC", Offset = "0x99A4BC")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A4D0", Offset = "0x99A4D0")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A4E4", Offset = "0x99A4E4")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A4F8", Offset = "0x99A4F8")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A50C", Offset = "0x99A50C")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A520", Offset = "0x99A520")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A534", Offset = "0x99A534")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A548", Offset = "0x99A548")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A55C", Offset = "0x99A55C")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A570", Offset = "0x99A570")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A584", Offset = "0x99A584")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A598", Offset = "0x99A598")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A5AC", Offset = "0x99A5AC")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A5C0", Offset = "0x99A5C0")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A5D4", Offset = "0x99A5D4")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A5E8", Offset = "0x99A5E8")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A5FC", Offset = "0x99A5FC")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A610", Offset = "0x99A610")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A624", Offset = "0x99A624")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A638", Offset = "0x99A638")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A64C", Offset = "0x99A64C")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A660", Offset = "0x99A660")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A674", Offset = "0x99A674")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A688", Offset = "0x99A688")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A69C", Offset = "0x99A69C")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A6B0", Offset = "0x99A6B0")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A6C4", Offset = "0x99A6C4")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A6D8", Offset = "0x99A6D8")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A6EC", Offset = "0x99A6EC")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x20002A9")]
	public struct IVROverlay
	{
		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A700", Offset = "0x99A700")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A714", Offset = "0x99A714")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A728", Offset = "0x99A728")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A73C", Offset = "0x99A73C")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A750", Offset = "0x99A750")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A764", Offset = "0x99A764")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A778", Offset = "0x99A778")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A78C", Offset = "0x99A78C")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A7A0", Offset = "0x99A7A0")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A7B4", Offset = "0x99A7B4")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A7C8", Offset = "0x99A7C8")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A7DC", Offset = "0x99A7DC")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A7F0", Offset = "0x99A7F0")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A804", Offset = "0x99A804")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A818", Offset = "0x99A818")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A82C", Offset = "0x99A82C")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A840", Offset = "0x99A840")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A854", Offset = "0x99A854")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A868", Offset = "0x99A868")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A87C", Offset = "0x99A87C")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A890", Offset = "0x99A890")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A8A4", Offset = "0x99A8A4")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A8B8", Offset = "0x99A8B8")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A8CC", Offset = "0x99A8CC")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A8E0", Offset = "0x99A8E0")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A8F4", Offset = "0x99A8F4")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A908", Offset = "0x99A908")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A91C", Offset = "0x99A91C")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A930", Offset = "0x99A930")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A944", Offset = "0x99A944")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A958", Offset = "0x99A958")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A96C", Offset = "0x99A96C")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A980", Offset = "0x99A980")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A994", Offset = "0x99A994")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A9A8", Offset = "0x99A9A8")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A9BC", Offset = "0x99A9BC")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A9D0", Offset = "0x99A9D0")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A9E4", Offset = "0x99A9E4")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99A9F8", Offset = "0x99A9F8")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AA0C", Offset = "0x99AA0C")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AA20", Offset = "0x99AA20")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AA34", Offset = "0x99AA34")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AA48", Offset = "0x99AA48")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AA5C", Offset = "0x99AA5C")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AA70", Offset = "0x99AA70")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AA84", Offset = "0x99AA84")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AA98", Offset = "0x99AA98")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AAAC", Offset = "0x99AAAC")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AAC0", Offset = "0x99AAC0")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AAD4", Offset = "0x99AAD4")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AAE8", Offset = "0x99AAE8")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AAFC", Offset = "0x99AAFC")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AB10", Offset = "0x99AB10")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AB24", Offset = "0x99AB24")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AB38", Offset = "0x99AB38")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AB4C", Offset = "0x99AB4C")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AB60", Offset = "0x99AB60")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AB74", Offset = "0x99AB74")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AB88", Offset = "0x99AB88")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AB9C", Offset = "0x99AB9C")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ABB0", Offset = "0x99ABB0")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ABC4", Offset = "0x99ABC4")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ABD8", Offset = "0x99ABD8")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ABEC", Offset = "0x99ABEC")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AC00", Offset = "0x99AC00")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AC14", Offset = "0x99AC14")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AC28", Offset = "0x99AC28")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AC3C", Offset = "0x99AC3C")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AC50", Offset = "0x99AC50")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AC64", Offset = "0x99AC64")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AC78", Offset = "0x99AC78")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AC8C", Offset = "0x99AC8C")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ACA0", Offset = "0x99ACA0")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ACB4", Offset = "0x99ACB4")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ACC8", Offset = "0x99ACC8")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ACDC", Offset = "0x99ACDC")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ACF0", Offset = "0x99ACF0")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AD04", Offset = "0x99AD04")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AD18", Offset = "0x99AD18")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AD2C", Offset = "0x99AD2C")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AD40", Offset = "0x99AD40")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AD54", Offset = "0x99AD54")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x20002AA")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AD68", Offset = "0x99AD68")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AD7C", Offset = "0x99AD7C")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AD90", Offset = "0x99AD90")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ADA4", Offset = "0x99ADA4")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ADB8", Offset = "0x99ADB8")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ADCC", Offset = "0x99ADCC")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ADE0", Offset = "0x99ADE0")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99ADF4", Offset = "0x99ADF4")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AE08", Offset = "0x99AE08")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AE1C", Offset = "0x99AE1C")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AE30", Offset = "0x99AE30")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AE44", Offset = "0x99AE44")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AE58", Offset = "0x99AE58")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AE6C", Offset = "0x99AE6C")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AE80", Offset = "0x99AE80")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AE94", Offset = "0x99AE94")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AEA8", Offset = "0x99AEA8")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AEBC", Offset = "0x99AEBC")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x20002AB")]
	public struct IVRNotifications
	{
		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AED0", Offset = "0x99AED0")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AEE4", Offset = "0x99AEE4")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x20002AC")]
	public struct IVRSettings
	{
		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AEF8", Offset = "0x99AEF8")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AF0C", Offset = "0x99AF0C")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AF20", Offset = "0x99AF20")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AF34", Offset = "0x99AF34")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AF48", Offset = "0x99AF48")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AF5C", Offset = "0x99AF5C")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AF70", Offset = "0x99AF70")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AF84", Offset = "0x99AF84")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AF98", Offset = "0x99AF98")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AFAC", Offset = "0x99AFAC")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AFC0", Offset = "0x99AFC0")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AFD4", Offset = "0x99AFD4")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x20002AD")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AFE8", Offset = "0x99AFE8")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99AFFC", Offset = "0x99AFFC")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B010", Offset = "0x99B010")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B024", Offset = "0x99B024")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B038", Offset = "0x99B038")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B04C", Offset = "0x99B04C")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B060", Offset = "0x99B060")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20002AE")]
	public struct IVRResources
	{
		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B074", Offset = "0x99B074")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B088", Offset = "0x99B088")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20002AF")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B09C", Offset = "0x99B09C")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B0B0", Offset = "0x99B0B0")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B0C4", Offset = "0x99B0C4")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x20002B0")]
	public class CVRSystem
	{
		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B0D8", Offset = "0x99B0D8")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000678")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B0EC", Offset = "0x99B0EC")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x200067A")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B100", Offset = "0x99B100")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x200067C")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x17A3EF8", Offset = "0x17A3EF8", VA = "0x17A3EF8")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x17A400C", Offset = "0x17A400C", VA = "0x17A400C")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x17A4030", Offset = "0x17A4030", VA = "0x17A4030")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x17A404C", Offset = "0x17A404C", VA = "0x17A404C")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x17A4078", Offset = "0x17A4078", VA = "0x17A4078")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x17A4094", Offset = "0x17A4094", VA = "0x17A4094")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x17A40B0", Offset = "0x17A40B0", VA = "0x17A40B0")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x17A40D4", Offset = "0x17A40D4", VA = "0x17A40D4")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x17A40F0", Offset = "0x17A40F0", VA = "0x17A40F0")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x17A4110", Offset = "0x17A4110", VA = "0x17A4110")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x17A4130", Offset = "0x17A4130", VA = "0x17A4130")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x17A414C", Offset = "0x17A414C", VA = "0x17A414C")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x17A416C", Offset = "0x17A416C", VA = "0x17A416C")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x17A4198", Offset = "0x17A4198", VA = "0x17A4198")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x17A41B4", Offset = "0x17A41B4", VA = "0x17A41B4")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x17A41D0", Offset = "0x17A41D0", VA = "0x17A41D0")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x17A41EC", Offset = "0x17A41EC", VA = "0x17A41EC")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x17A4220", Offset = "0x17A4220", VA = "0x17A4220")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x17A423C", Offset = "0x17A423C", VA = "0x17A423C")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x17A4258", Offset = "0x17A4258", VA = "0x17A4258")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x17A4274", Offset = "0x17A4274", VA = "0x17A4274")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x17A4290", Offset = "0x17A4290", VA = "0x17A4290")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x17A42AC", Offset = "0x17A42AC", VA = "0x17A42AC")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x17A42C8", Offset = "0x17A42C8", VA = "0x17A42C8")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x17A42E4", Offset = "0x17A42E4", VA = "0x17A42E4")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x17A4300", Offset = "0x17A4300", VA = "0x17A4300")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x17A431C", Offset = "0x17A431C", VA = "0x17A431C")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x17A4338", Offset = "0x17A4338", VA = "0x17A4338")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x17A4354", Offset = "0x17A4354", VA = "0x17A4354")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x17A4370", Offset = "0x17A4370", VA = "0x17A4370")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x17A438C", Offset = "0x17A438C", VA = "0x17A438C")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x17A4420", Offset = "0x17A4420", VA = "0x17A4420")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x17A4824", Offset = "0x17A4824", VA = "0x17A4824")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x17A4840", Offset = "0x17A4840", VA = "0x17A4840")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x17A48D4", Offset = "0x17A48D4", VA = "0x17A48D4")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x17A48F0", Offset = "0x17A48F0", VA = "0x17A48F0")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x17A4D44", Offset = "0x17A4D44", VA = "0x17A4D44")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x17A51E8", Offset = "0x17A51E8", VA = "0x17A51E8")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x17A5204", Offset = "0x17A5204", VA = "0x17A5204")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x17A5298", Offset = "0x17A5298", VA = "0x17A5298")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x17A532C", Offset = "0x17A532C", VA = "0x17A532C")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x17A5348", Offset = "0x17A5348", VA = "0x17A5348")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x17A5364", Offset = "0x17A5364", VA = "0x17A5364")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x17A5380", Offset = "0x17A5380", VA = "0x17A5380")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x17A539C", Offset = "0x17A539C", VA = "0x17A539C")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x17A53B8", Offset = "0x17A53B8", VA = "0x17A53B8")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x17A53D4", Offset = "0x17A53D4", VA = "0x17A53D4")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x17A53F0", Offset = "0x17A53F0", VA = "0x17A53F0")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xC8C44C", Offset = "0xC8C44C", VA = "0xC8C44C")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xC8C55C", Offset = "0xC8C55C", VA = "0xC8C55C")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xC8C588", Offset = "0xC8C588", VA = "0xC8C588")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xC8C5B4", Offset = "0xC8C5B4", VA = "0xC8C5B4")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x17A5778", Offset = "0x17A5778", VA = "0x17A5778")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x17A588C", Offset = "0x17A588C", VA = "0x17A588C")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x17A5920", Offset = "0x17A5920", VA = "0x17A5920")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x17A5940", Offset = "0x17A5940", VA = "0x17A5940")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x17A5968", Offset = "0x17A5968", VA = "0x17A5968")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x17A5984", Offset = "0x17A5984", VA = "0x17A5984")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x17A59A0", Offset = "0x17A59A0", VA = "0x17A59A0")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x17A59C0", Offset = "0x17A59C0", VA = "0x17A59C0")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x17A59DC", Offset = "0x17A59DC", VA = "0x17A59DC")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x17A59F8", Offset = "0x17A59F8", VA = "0x17A59F8")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x17A5A1C", Offset = "0x17A5A1C", VA = "0x17A5A1C")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x17A5A38", Offset = "0x17A5A38", VA = "0x17A5A38")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x17A5A58", Offset = "0x17A5A58", VA = "0x17A5A58")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20002B3")]
	public class CVRApplications
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xC8AF84", Offset = "0xC8AF84", VA = "0xC8AF84")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xC8B098", Offset = "0xC8B098", VA = "0xC8B098")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xC8B0B8", Offset = "0xC8B0B8", VA = "0xC8B0B8")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xC8B0D4", Offset = "0xC8B0D4", VA = "0xC8B0D4")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xC8B0F0", Offset = "0xC8B0F0", VA = "0xC8B0F0")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xC8B10C", Offset = "0xC8B10C", VA = "0xC8B10C")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xC8B128", Offset = "0xC8B128", VA = "0xC8B128")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xC8B144", Offset = "0xC8B144", VA = "0xC8B144")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xC8B160", Offset = "0xC8B160", VA = "0xC8B160")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xC8B18C", Offset = "0xC8B18C", VA = "0xC8B18C")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xC8B1A8", Offset = "0xC8B1A8", VA = "0xC8B1A8")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xC8B1C4", Offset = "0xC8B1C4", VA = "0xC8B1C4")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xC8B1E0", Offset = "0xC8B1E0", VA = "0xC8B1E0")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xC8B1FC", Offset = "0xC8B1FC", VA = "0xC8B1FC")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xC8B218", Offset = "0xC8B218", VA = "0xC8B218")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xC8B2AC", Offset = "0xC8B2AC", VA = "0xC8B2AC")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xC8B2C8", Offset = "0xC8B2C8", VA = "0xC8B2C8")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xC8B2E4", Offset = "0xC8B2E4", VA = "0xC8B2E4")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xC8B300", Offset = "0xC8B300", VA = "0xC8B300")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xC8B320", Offset = "0xC8B320", VA = "0xC8B320")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xC8B33C", Offset = "0xC8B33C", VA = "0xC8B33C")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xC8B358", Offset = "0xC8B358", VA = "0xC8B358")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xC8B374", Offset = "0xC8B374", VA = "0xC8B374")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xC8B390", Offset = "0xC8B390", VA = "0xC8B390")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xC8B3AC", Offset = "0xC8B3AC", VA = "0xC8B3AC")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xC8B3C8", Offset = "0xC8B3C8", VA = "0xC8B3C8")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xC8B3E4", Offset = "0xC8B3E4", VA = "0xC8B3E4")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xC8B400", Offset = "0xC8B400", VA = "0xC8B400")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xC8B41C", Offset = "0xC8B41C", VA = "0xC8B41C")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xC8B4B0", Offset = "0xC8B4B0", VA = "0xC8B4B0")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xC8B4CC", Offset = "0xC8B4CC", VA = "0xC8B4CC")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xC8B4E8", Offset = "0xC8B4E8", VA = "0xC8B4E8")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002B4")]
	public class CVRChaperone
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xC8B504", Offset = "0xC8B504", VA = "0xC8B504")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xC8B618", Offset = "0xC8B618", VA = "0xC8B618")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xC8B634", Offset = "0xC8B634", VA = "0xC8B634")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xC8B658", Offset = "0xC8B658", VA = "0xC8B658")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xC8B674", Offset = "0xC8B674", VA = "0xC8B674")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xC8B690", Offset = "0xC8B690", VA = "0xC8B690")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xC8B6AC", Offset = "0xC8B6AC", VA = "0xC8B6AC")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xC8B6C8", Offset = "0xC8B6C8", VA = "0xC8B6C8")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xC8B6E4", Offset = "0xC8B6E4", VA = "0xC8B6E4")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xC8B704", Offset = "0xC8B704", VA = "0xC8B704")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xC8B818", Offset = "0xC8B818", VA = "0xC8B818")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xC8B834", Offset = "0xC8B834", VA = "0xC8B834")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xC8B850", Offset = "0xC8B850", VA = "0xC8B850")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xC8B874", Offset = "0xC8B874", VA = "0xC8B874")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xC8B890", Offset = "0xC8B890", VA = "0xC8B890")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xC8B940", Offset = "0xC8B940", VA = "0xC8B940")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xC8B9F0", Offset = "0xC8B9F0", VA = "0xC8B9F0")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xC8BA0C", Offset = "0xC8BA0C", VA = "0xC8BA0C")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xC8BA28", Offset = "0xC8BA28", VA = "0xC8BA28")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xC8BA44", Offset = "0xC8BA44", VA = "0xC8BA44")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xC8BA70", Offset = "0xC8BA70", VA = "0xC8BA70")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xC8BA8C", Offset = "0xC8BA8C", VA = "0xC8BA8C")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xC8BAA8", Offset = "0xC8BAA8", VA = "0xC8BAA8")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xC8BAC4", Offset = "0xC8BAC4", VA = "0xC8BAC4")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xC8BAE0", Offset = "0xC8BAE0", VA = "0xC8BAE0")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xC8BB0C", Offset = "0xC8BB0C", VA = "0xC8BB0C")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xC8BBBC", Offset = "0xC8BBBC", VA = "0xC8BBBC")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xC8BBE8", Offset = "0xC8BBE8", VA = "0xC8BBE8")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xC8BC98", Offset = "0xC8BC98", VA = "0xC8BC98")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xC8BCB8", Offset = "0xC8BCB8", VA = "0xC8BCB8")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002B6")]
	public class CVRCompositor
	{
		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xC8BCD4", Offset = "0xC8BCD4", VA = "0xC8BCD4")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xC8BDE8", Offset = "0xC8BDE8", VA = "0xC8BDE8")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xC8A514", Offset = "0xC8A514", VA = "0xC8A514")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xC8BE04", Offset = "0xC8BE04", VA = "0xC8BE04")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xC8BE40", Offset = "0xC8BE40", VA = "0xC8BE40")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xC8BE7C", Offset = "0xC8BE7C", VA = "0xC8BE7C")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xC8BE98", Offset = "0xC8BE98", VA = "0xC8BE98")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xC8BEB4", Offset = "0xC8BEB4", VA = "0xC8BEB4")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xC8BED0", Offset = "0xC8BED0", VA = "0xC8BED0")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xC8BEEC", Offset = "0xC8BEEC", VA = "0xC8BEEC")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xC8BF08", Offset = "0xC8BF08", VA = "0xC8BF08")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xC8BF24", Offset = "0xC8BF24", VA = "0xC8BF24")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xC8BF40", Offset = "0xC8BF40", VA = "0xC8BF40")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xC8BF5C", Offset = "0xC8BF5C", VA = "0xC8BF5C")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xC8BF7C", Offset = "0xC8BF7C", VA = "0xC8BF7C")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xC8BF9C", Offset = "0xC8BF9C", VA = "0xC8BF9C")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xC8BFBC", Offset = "0xC8BFBC", VA = "0xC8BFBC")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xC8BFD8", Offset = "0xC8BFD8", VA = "0xC8BFD8")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xC8C004", Offset = "0xC8C004", VA = "0xC8C004")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xC8C020", Offset = "0xC8C020", VA = "0xC8C020")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xC8C03C", Offset = "0xC8C03C", VA = "0xC8C03C")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xC8C058", Offset = "0xC8C058", VA = "0xC8C058")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xC8C074", Offset = "0xC8C074", VA = "0xC8C074")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xC8C090", Offset = "0xC8C090", VA = "0xC8C090")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xC8C0AC", Offset = "0xC8C0AC", VA = "0xC8C0AC")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xC8C0C8", Offset = "0xC8C0C8", VA = "0xC8C0C8")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xC8C0E4", Offset = "0xC8C0E4", VA = "0xC8C0E4")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xC8C100", Offset = "0xC8C100", VA = "0xC8C100")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xC8C11C", Offset = "0xC8C11C", VA = "0xC8C11C")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xC8C138", Offset = "0xC8C138", VA = "0xC8C138")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xC8C154", Offset = "0xC8C154", VA = "0xC8C154")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xC8C170", Offset = "0xC8C170", VA = "0xC8C170")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xC8C190", Offset = "0xC8C190", VA = "0xC8C190")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xC8C1AC", Offset = "0xC8C1AC", VA = "0xC8C1AC")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xC8C1CC", Offset = "0xC8C1CC", VA = "0xC8C1CC")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xC8C1E8", Offset = "0xC8C1E8", VA = "0xC8C1E8")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xC8C204", Offset = "0xC8C204", VA = "0xC8C204")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xC8C224", Offset = "0xC8C224", VA = "0xC8C224")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xC8C240", Offset = "0xC8C240", VA = "0xC8C240")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xC8C25C", Offset = "0xC8C25C", VA = "0xC8C25C")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xC8C278", Offset = "0xC8C278", VA = "0xC8C278")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xC8C294", Offset = "0xC8C294", VA = "0xC8C294")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xC8C2B0", Offset = "0xC8C2B0", VA = "0xC8C2B0")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xC8C2CC", Offset = "0xC8C2CC", VA = "0xC8C2CC")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x20002B7")]
	public class CVROverlay
	{
		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B114", Offset = "0x99B114")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x200067E")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xC8C724", Offset = "0xC8C724", VA = "0xC8C724")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xC89EA8", Offset = "0xC89EA8", VA = "0xC89EA8")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xC8C838", Offset = "0xC8C838", VA = "0xC8C838")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xC8C858", Offset = "0xC8C858", VA = "0xC8C858")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xC8C874", Offset = "0xC8C874", VA = "0xC8C874")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xC8C890", Offset = "0xC8C890", VA = "0xC8C890")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xC8C8AC", Offset = "0xC8C8AC", VA = "0xC8C8AC")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xC8C8C8", Offset = "0xC8C8C8", VA = "0xC8C8C8")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xC8C8E4", Offset = "0xC8C8E4", VA = "0xC8C8E4")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xC8C900", Offset = "0xC8C900", VA = "0xC8C900")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xC8C924", Offset = "0xC8C924", VA = "0xC8C924")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xC8C9B8", Offset = "0xC8C9B8", VA = "0xC8C9B8")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xC8C9D4", Offset = "0xC8C9D4", VA = "0xC8C9D4")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xC8C9F0", Offset = "0xC8C9F0", VA = "0xC8C9F0")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xC8CA10", Offset = "0xC8CA10", VA = "0xC8CA10")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xC8CA30", Offset = "0xC8CA30", VA = "0xC8CA30")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xC8CA4C", Offset = "0xC8CA4C", VA = "0xC8CA4C")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xC8CA74", Offset = "0xC8CA74", VA = "0xC8CA74")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xC8CA90", Offset = "0xC8CA90", VA = "0xC8CA90")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xC8CAB0", Offset = "0xC8CAB0", VA = "0xC8CAB0")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xC8CACC", Offset = "0xC8CACC", VA = "0xC8CACC")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xC8CAEC", Offset = "0xC8CAEC", VA = "0xC8CAEC")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xC8CB08", Offset = "0xC8CB08", VA = "0xC8CB08")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xC8A3CC", Offset = "0xC8A3CC", VA = "0xC8A3CC")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xC8CB28", Offset = "0xC8CB28", VA = "0xC8CB28")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xC8CB48", Offset = "0xC8CB48", VA = "0xC8CB48")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xC8CB64", Offset = "0xC8CB64", VA = "0xC8CB64")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xC8CB88", Offset = "0xC8CB88", VA = "0xC8CB88")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xC8CBA4", Offset = "0xC8CBA4", VA = "0xC8CBA4")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xC8CBC0", Offset = "0xC8CBC0", VA = "0xC8CBC0")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xC8CBDC", Offset = "0xC8CBDC", VA = "0xC8CBDC")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xC8CBF8", Offset = "0xC8CBF8", VA = "0xC8CBF8")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xC8CC14", Offset = "0xC8CC14", VA = "0xC8CC14")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xC8CC30", Offset = "0xC8CC30", VA = "0xC8CC30")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xC8A530", Offset = "0xC8A530", VA = "0xC8A530")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xC8CC4C", Offset = "0xC8CC4C", VA = "0xC8CC4C")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xC8CC68", Offset = "0xC8CC68", VA = "0xC8CC68")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xC8CC84", Offset = "0xC8CC84", VA = "0xC8CC84")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xC8CCA4", Offset = "0xC8CCA4", VA = "0xC8CCA4")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xC8CCC0", Offset = "0xC8CCC0", VA = "0xC8CCC0")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xC8CCE0", Offset = "0xC8CCE0", VA = "0xC8CCE0")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xC8CD00", Offset = "0xC8CD00", VA = "0xC8CD00")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xC8CD1C", Offset = "0xC8CD1C", VA = "0xC8CD1C")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xC8CD38", Offset = "0xC8CD38", VA = "0xC8CD38")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xC8CD54", Offset = "0xC8CD54", VA = "0xC8CD54")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xC8CD70", Offset = "0xC8CD70", VA = "0xC8CD70")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xC8CD8C", Offset = "0xC8CD8C", VA = "0xC8CD8C")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xC8CF38", Offset = "0xC8CF38", VA = "0xC8CF38")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xC8A3E8", Offset = "0xC8A3E8", VA = "0xC8A3E8")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xC8CF54", Offset = "0xC8CF54", VA = "0xC8CF54")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xC8CF70", Offset = "0xC8CF70", VA = "0xC8CF70")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xC8CF8C", Offset = "0xC8CF8C", VA = "0xC8CF8C")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xC8CFA8", Offset = "0xC8CFA8", VA = "0xC8CFA8")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xC8CFC4", Offset = "0xC8CFC4", VA = "0xC8CFC4")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC8CFE0", Offset = "0xC8CFE0", VA = "0xC8CFE0")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xC8CFFC", Offset = "0xC8CFFC", VA = "0xC8CFFC")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xC8D018", Offset = "0xC8D018", VA = "0xC8D018")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xC8D034", Offset = "0xC8D034", VA = "0xC8D034")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC8D050", Offset = "0xC8D050", VA = "0xC8D050")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xC8D070", Offset = "0xC8D070", VA = "0xC8D070")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC8D08C", Offset = "0xC8D08C", VA = "0xC8D08C")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC8D0A8", Offset = "0xC8D0A8", VA = "0xC8D0A8")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC8D0C4", Offset = "0xC8D0C4", VA = "0xC8D0C4")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xC8D0E0", Offset = "0xC8D0E0", VA = "0xC8D0E0")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC8D114", Offset = "0xC8D114", VA = "0xC8D114")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xC8D130", Offset = "0xC8D130", VA = "0xC8D130")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xC8D154", Offset = "0xC8D154", VA = "0xC8D154")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xC8D178", Offset = "0xC8D178", VA = "0xC8D178")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xC8D194", Offset = "0xC8D194", VA = "0xC8D194")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xC8D1B0", Offset = "0xC8D1B0", VA = "0xC8D1B0")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xC8D1CC", Offset = "0xC8D1CC", VA = "0xC8D1CC")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xC8D1EC", Offset = "0xC8D1EC", VA = "0xC8D1EC")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xC8D208", Offset = "0xC8D208", VA = "0xC8D208")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xC8D224", Offset = "0xC8D224", VA = "0xC8D224")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xC8D248", Offset = "0xC8D248", VA = "0xC8D248")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xC8D270", Offset = "0xC8D270", VA = "0xC8D270")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xC8D28C", Offset = "0xC8D28C", VA = "0xC8D28C")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xC8D2A8", Offset = "0xC8D2A8", VA = "0xC8D2A8")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xC8D2C4", Offset = "0xC8D2C4", VA = "0xC8D2C4")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xC8D2E0", Offset = "0xC8D2E0", VA = "0xC8D2E0")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xC8D2FC", Offset = "0xC8D2FC", VA = "0xC8D2FC")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xC8D31C", Offset = "0xC8D31C", VA = "0xC8D31C")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xC8D338", Offset = "0xC8D338", VA = "0xC8D338")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class CVRRenderModels
	{
		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x99B128", Offset = "0x99B128")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x2000680")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x17A2E84", Offset = "0x17A2E84", VA = "0x17A2E84")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x17A2F98", Offset = "0x17A2F98", VA = "0x17A2F98")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x17A2FB4", Offset = "0x17A2FB4", VA = "0x17A2FB4")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x17A2FD0", Offset = "0x17A2FD0", VA = "0x17A2FD0")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x17A2FEC", Offset = "0x17A2FEC", VA = "0x17A2FEC")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x17A3008", Offset = "0x17A3008", VA = "0x17A3008")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x17A3024", Offset = "0x17A3024", VA = "0x17A3024")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x17A3040", Offset = "0x17A3040", VA = "0x17A3040")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x17A305C", Offset = "0x17A305C", VA = "0x17A305C")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x17A3078", Offset = "0x17A3078", VA = "0x17A3078")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x17A3094", Offset = "0x17A3094", VA = "0x17A3094")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x17A30B0", Offset = "0x17A30B0", VA = "0x17A30B0")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x17A30CC", Offset = "0x17A30CC", VA = "0x17A30CC")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x17A30E8", Offset = "0x17A30E8", VA = "0x17A30E8")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x17A3104", Offset = "0x17A3104", VA = "0x17A3104")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x17A36B0", Offset = "0x17A36B0", VA = "0x17A36B0")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x17A36CC", Offset = "0x17A36CC", VA = "0x17A36CC")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x17A36E8", Offset = "0x17A36E8", VA = "0x17A36E8")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x17A3704", Offset = "0x17A3704", VA = "0x17A3704")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B9")]
	public class CVRNotifications
	{
		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xC8C5D8", Offset = "0xC8C5D8", VA = "0xC8C5D8")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xC8C6E4", Offset = "0xC8C6E4", VA = "0xC8C6E4")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xC8C708", Offset = "0xC8C708", VA = "0xC8C708")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20002BA")]
	public class CVRSettings
	{
		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x17A3C14", Offset = "0x17A3C14", VA = "0x17A3C14")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x17A3D28", Offset = "0x17A3D28", VA = "0x17A3D28")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x17A3DBC", Offset = "0x17A3DBC", VA = "0x17A3DBC")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x17A3DDC", Offset = "0x17A3DDC", VA = "0x17A3DDC")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x17A3DFC", Offset = "0x17A3DFC", VA = "0x17A3DFC")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x17A3E18", Offset = "0x17A3E18", VA = "0x17A3E18")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x17A3E34", Offset = "0x17A3E34", VA = "0x17A3E34")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x17A3E50", Offset = "0x17A3E50", VA = "0x17A3E50")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x17A3E6C", Offset = "0x17A3E6C", VA = "0x17A3E6C")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x17A3E88", Offset = "0x17A3E88", VA = "0x17A3E88")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x17A3EA4", Offset = "0x17A3EA4", VA = "0x17A3EA4")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x17A3EC0", Offset = "0x17A3EC0", VA = "0x17A3EC0")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x17A3EDC", Offset = "0x17A3EDC", VA = "0x17A3EDC")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class CVRScreenshots
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x17A3A1C", Offset = "0x17A3A1C", VA = "0x17A3A1C")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x17A3B38", Offset = "0x17A3B38", VA = "0x17A3B38")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x17A3B58", Offset = "0x17A3B58", VA = "0x17A3B58")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x17A3B84", Offset = "0x17A3B84", VA = "0x17A3B84")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x17A3BA0", Offset = "0x17A3BA0", VA = "0x17A3BA0")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x17A3BBC", Offset = "0x17A3BBC", VA = "0x17A3BBC")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x17A3BD8", Offset = "0x17A3BD8", VA = "0x17A3BD8")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x17A3BF8", Offset = "0x17A3BF8", VA = "0x17A3BF8")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20002BC")]
	public class CVRResources
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x17A38D8", Offset = "0x17A38D8", VA = "0x17A38D8")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x17A39E4", Offset = "0x17A39E4", VA = "0x17A39E4")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x17A3A00", Offset = "0x17A3A00", VA = "0x17A3A00")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002BD")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xC8C2E8", Offset = "0xC8C2E8", VA = "0xC8C2E8")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xC8C3F8", Offset = "0xC8C3F8", VA = "0xC8C3F8")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xC8C414", Offset = "0xC8C414", VA = "0xC8C414")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xC8C430", Offset = "0xC8C430", VA = "0xC8C430")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20002BE")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x600139C")]
		[Address(RVA = "0xB8BCA4", Offset = "0xB8BCA4", VA = "0xB8BCA4")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x600139D")]
		[Address(RVA = "0xB8BD54", Offset = "0xB8BD54", VA = "0xB8BD54")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x600139E")]
		[Address(RVA = "0xB8BDE4", Offset = "0xB8BDE4", VA = "0xB8BDE4")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x600139F")]
		[Address(RVA = "0xB8BE7C", Offset = "0xB8BE7C", VA = "0xB8BE7C")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xB8BF88", Offset = "0xB8BF88", VA = "0xB8BF88")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xB8C028", Offset = "0xB8C028", VA = "0xB8C028")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xB8C0F0", Offset = "0xB8C0F0", VA = "0xB8C0F0")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xB8C1AC", Offset = "0xB8C1AC", VA = "0xB8C1AC")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xB8D440", Offset = "0xB8D440", VA = "0xB8D440")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public enum EVREye
	{
		[Token(Token = "0x4001122")]
		Eye_Left,
		[Token(Token = "0x4001123")]
		Eye_Right
	}
	[Token(Token = "0x20002C0")]
	public enum ETextureType
	{
		[Token(Token = "0x4001125")]
		DirectX,
		[Token(Token = "0x4001126")]
		OpenGL,
		[Token(Token = "0x4001127")]
		Vulkan,
		[Token(Token = "0x4001128")]
		IOSurface,
		[Token(Token = "0x4001129")]
		DirectX12,
		[Token(Token = "0x400112A")]
		DXGISharedHandle
	}
	[Token(Token = "0x20002C1")]
	public enum EColorSpace
	{
		[Token(Token = "0x400112C")]
		Auto,
		[Token(Token = "0x400112D")]
		Gamma,
		[Token(Token = "0x400112E")]
		Linear
	}
	[Token(Token = "0x20002C2")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4001130")]
		Uninitialized = 1,
		[Token(Token = "0x4001131")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4001132")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4001133")]
		Running_OK = 200,
		[Token(Token = "0x4001134")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x20002C3")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4001136")]
		Invalid,
		[Token(Token = "0x4001137")]
		HMD,
		[Token(Token = "0x4001138")]
		Controller,
		[Token(Token = "0x4001139")]
		GenericTracker,
		[Token(Token = "0x400113A")]
		TrackingReference,
		[Token(Token = "0x400113B")]
		DisplayRedirect
	}
	[Token(Token = "0x20002C4")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x400113D")]
		Invalid,
		[Token(Token = "0x400113E")]
		LeftHand,
		[Token(Token = "0x400113F")]
		RightHand,
		[Token(Token = "0x4001140")]
		OptOut
	}
	[Token(Token = "0x20002C5")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4001142")]
		TrackingUniverseSeated,
		[Token(Token = "0x4001143")]
		TrackingUniverseStanding,
		[Token(Token = "0x4001144")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x20002C6")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4001146")]
		Prop_Invalid = 0,
		[Token(Token = "0x4001147")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4001148")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001149")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x400114A")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x400114B")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x400114C")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x400114D")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x400114E")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x400114F")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4001150")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4001151")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4001152")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4001153")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4001154")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4001155")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4001156")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4001157")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4001158")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001159")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x400115A")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x400115B")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x400115C")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x400115D")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x400115E")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x400115F")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001160")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001161")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001162")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x4001163")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4001164")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4001165")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4001166")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4001167")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4001168")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001169")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x400116A")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x400116B")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x400116C")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x400116D")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x400116E")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x400116F")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001170")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001171")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001172")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001173")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4001174")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4001175")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4001176")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x4001177")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x4001178")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4001179")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x400117A")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x400117B")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x400117C")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x400117D")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x400117E")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x400117F")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001180")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001181")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001182")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001183")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4001184")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4001185")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4001186")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x4001187")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x4001188")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4001189")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x400118A")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x400118B")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x400118C")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x400118D")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x400118E")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x400118F")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001190")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001191")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001192")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001193")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4001194")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4001195")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4001196")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x4001197")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x4001198")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4001199")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x400119A")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x400119B")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x400119C")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x400119D")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x400119E")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x400119F")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x40011A0")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x40011A1")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x40011A2")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x40011A3")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x40011A4")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x40011A5")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x40011A6")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x40011A7")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x40011A8")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x40011A9")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x40011AA")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x40011AB")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x40011AC")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x40011AD")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x40011AE")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x40011AF")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x40011B0")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x40011B1")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x40011B2")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x40011B3")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x40011B4")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x40011B5")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x40011B6")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x40011B7")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x40011B8")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x40011B9")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x40011BA")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x40011BB")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x40011BC")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x40011BD")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x40011BE")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x40011BF")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x40011C0")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x40011C1")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x40011C2")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x40011C3")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x40011C4")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x40011C5")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x40011C6")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x40011C7")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x40011C8")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x40011C9")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x40011CA")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x40011CB")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x40011CC")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x40011CD")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x40011CE")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x40011CF")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40011D0")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x40011D1")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x20002C7")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x40011D3")]
		TrackedProp_Success,
		[Token(Token = "0x40011D4")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x40011D5")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x40011D6")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x40011D7")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x40011D8")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x40011D9")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x40011DA")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x40011DB")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x40011DC")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x40011DD")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x40011DE")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x40011DF")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x20002C8")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x40011E1")]
		Submit_Default = 0,
		[Token(Token = "0x40011E2")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x40011E3")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x40011E4")]
		Submit_Reserved = 4,
		[Token(Token = "0x40011E5")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x40011E6")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x20002C9")]
	public enum EVRState
	{
		[Token(Token = "0x40011E8")]
		Undefined = -1,
		[Token(Token = "0x40011E9")]
		Off,
		[Token(Token = "0x40011EA")]
		Searching,
		[Token(Token = "0x40011EB")]
		Searching_Alert,
		[Token(Token = "0x40011EC")]
		Ready,
		[Token(Token = "0x40011ED")]
		Ready_Alert,
		[Token(Token = "0x40011EE")]
		NotReady,
		[Token(Token = "0x40011EF")]
		Standby,
		[Token(Token = "0x40011F0")]
		Ready_Alert_Low
	}
	[Token(Token = "0x20002CA")]
	public enum EVREventType
	{
		[Token(Token = "0x40011F2")]
		VREvent_None = 0,
		[Token(Token = "0x40011F3")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x40011F4")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x40011F5")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x40011F6")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x40011F7")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x40011F8")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x40011F9")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x40011FA")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x40011FB")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x40011FC")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x40011FD")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x40011FE")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x40011FF")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4001200")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4001201")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4001202")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4001203")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4001204")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4001205")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4001206")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001207")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4001208")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4001209")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x400120A")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x400120B")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x400120C")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x400120D")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x400120E")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x400120F")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4001210")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4001211")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4001212")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4001213")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4001214")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4001215")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4001216")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4001217")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4001218")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4001219")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x400121A")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x400121B")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x400121C")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x400121D")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x400121E")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x400121F")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4001220")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4001221")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4001222")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4001223")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4001224")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001225")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001226")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4001227")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001228")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4001229")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x400122A")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x400122B")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x400122C")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x400122D")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x400122E")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x400122F")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4001230")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4001231")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4001232")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4001233")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x4001234")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001235")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001236")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001237")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4001238")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4001239")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x400123A")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x400123B")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x400123C")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x400123D")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x400123E")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x400123F")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4001240")]
		VREvent_Quit = 700,
		[Token(Token = "0x4001241")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4001242")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4001243")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4001244")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4001245")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4001246")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4001247")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4001248")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001249")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x400124A")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x400124B")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x400124C")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x400124D")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x400124E")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x400124F")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001250")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001251")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001252")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001253")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001254")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001255")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001256")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001257")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001258")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4001259")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x400125A")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x400125B")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x400125C")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x400125D")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x400125E")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x400125F")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001260")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001261")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001262")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001263")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001264")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001265")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001266")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001267")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001268")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001269")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x400126A")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x400126B")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x400126C")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x400126D")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x400126E")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x400126F")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001270")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001271")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001272")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001273")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001274")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001275")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001276")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001277")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001278")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001279")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x400127A")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x400127B")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x20002CB")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x400127D")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x400127E")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x400127F")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001280")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001281")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x20002CC")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001283")]
		k_EButton_System = 0,
		[Token(Token = "0x4001284")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001285")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001286")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001287")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001288")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001289")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x400128A")]
		k_EButton_A = 7,
		[Token(Token = "0x400128B")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x400128C")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x400128D")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x400128E")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x400128F")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001290")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001291")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001292")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001293")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001294")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x20002CD")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001296")]
		Left = 1,
		[Token(Token = "0x4001297")]
		Right = 2,
		[Token(Token = "0x4001298")]
		Middle = 4
	}
	[Token(Token = "0x20002CE")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x400129A")]
		k_EDualAnalog_Left,
		[Token(Token = "0x400129B")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x20002CF")]
	public enum EVRInputError
	{
		[Token(Token = "0x400129D")]
		None,
		[Token(Token = "0x400129E")]
		NameNotFound,
		[Token(Token = "0x400129F")]
		WrongType,
		[Token(Token = "0x40012A0")]
		InvalidHandle,
		[Token(Token = "0x40012A1")]
		InvalidParam,
		[Token(Token = "0x40012A2")]
		NoSteam,
		[Token(Token = "0x40012A3")]
		MaxCapacityReached,
		[Token(Token = "0x40012A4")]
		IPCError,
		[Token(Token = "0x40012A5")]
		NoActiveActionSet,
		[Token(Token = "0x40012A6")]
		InvalidDevice
	}
	[Token(Token = "0x20002D0")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x40012A8")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x40012A9")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x40012AA")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x40012AB")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x20002D1")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x40012AD")]
		k_eControllerAxis_None,
		[Token(Token = "0x40012AE")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x40012AF")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x40012B0")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x20002D2")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x40012B2")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x40012B3")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x20002D3")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x40012B5")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x40012B6")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x40012B7")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x40012B8")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x40012B9")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x40012BA")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x20002D4")]
	public enum EVROverlayError
	{
		[Token(Token = "0x40012BC")]
		None = 0,
		[Token(Token = "0x40012BD")]
		UnknownOverlay = 10,
		[Token(Token = "0x40012BE")]
		InvalidHandle = 11,
		[Token(Token = "0x40012BF")]
		PermissionDenied = 12,
		[Token(Token = "0x40012C0")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x40012C1")]
		WrongVisibilityType = 14,
		[Token(Token = "0x40012C2")]
		KeyTooLong = 15,
		[Token(Token = "0x40012C3")]
		NameTooLong = 16,
		[Token(Token = "0x40012C4")]
		KeyInUse = 17,
		[Token(Token = "0x40012C5")]
		WrongTransformType = 18,
		[Token(Token = "0x40012C6")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x40012C7")]
		InvalidParameter = 20,
		[Token(Token = "0x40012C8")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x40012C9")]
		ArrayTooSmall = 22,
		[Token(Token = "0x40012CA")]
		RequestFailed = 23,
		[Token(Token = "0x40012CB")]
		InvalidTexture = 24,
		[Token(Token = "0x40012CC")]
		UnableToLoadFile = 25,
		[Token(Token = "0x40012CD")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x40012CE")]
		NoNeighbor = 27,
		[Token(Token = "0x40012CF")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x40012D0")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x40012D1")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x40012D2")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x40012D3")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x20002D5")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x40012D5")]
		VRApplication_Other,
		[Token(Token = "0x40012D6")]
		VRApplication_Scene,
		[Token(Token = "0x40012D7")]
		VRApplication_Overlay,
		[Token(Token = "0x40012D8")]
		VRApplication_Background,
		[Token(Token = "0x40012D9")]
		VRApplication_Utility,
		[Token(Token = "0x40012DA")]
		VRApplication_VRMonitor,
		[Token(Token = "0x40012DB")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x40012DC")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x40012DD")]
		VRApplication_Max
	}
	[Token(Token = "0x20002D6")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x40012DF")]
		None,
		[Token(Token = "0x40012E0")]
		Success,
		[Token(Token = "0x40012E1")]
		Fail
	}
	[Token(Token = "0x20002D7")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x40012E3")]
		OK = 0,
		[Token(Token = "0x40012E4")]
		InvalidNotificationId = 100,
		[Token(Token = "0x40012E5")]
		NotificationQueueFull = 101,
		[Token(Token = "0x40012E6")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x40012E7")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x20002D8")]
	public enum EVRInitError
	{
		[Token(Token = "0x40012E9")]
		None = 0,
		[Token(Token = "0x40012EA")]
		Unknown = 1,
		[Token(Token = "0x40012EB")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x40012EC")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x40012ED")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x40012EE")]
		Init_FileNotFound = 103,
		[Token(Token = "0x40012EF")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x40012F0")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x40012F1")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x40012F2")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x40012F3")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x40012F4")]
		Init_NotInitialized = 109,
		[Token(Token = "0x40012F5")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x40012F6")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x40012F7")]
		Init_NoLogPath = 112,
		[Token(Token = "0x40012F8")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x40012F9")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x40012FA")]
		Init_Retry = 115,
		[Token(Token = "0x40012FB")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x40012FC")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x40012FD")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x40012FE")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x40012FF")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001300")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001301")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001302")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001303")]
		Init_Internal = 124,
		[Token(Token = "0x4001304")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4001305")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001306")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001307")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001308")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001309")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x400130A")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x400130B")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x400130C")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x400130D")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x400130E")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x400130F")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4001310")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4001311")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4001312")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4001313")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4001314")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x4001315")]
		Driver_Failed = 200,
		[Token(Token = "0x4001316")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001317")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001318")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001319")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x400131A")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x400131B")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x400131C")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x400131D")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x400131E")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x400131F")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4001320")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4001321")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4001322")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4001323")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4001324")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4001325")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4001326")]
		IPC_Failed = 305,
		[Token(Token = "0x4001327")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001328")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001329")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x400132A")]
		Compositor_Failed = 400,
		[Token(Token = "0x400132B")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x400132C")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x400132D")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x400132E")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x400132F")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4001330")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4001331")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4001332")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4001333")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4001334")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001335")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001336")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001337")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001338")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001339")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x400133A")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x400133B")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x400133C")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x400133D")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x400133E")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x400133F")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x20002D9")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001341")]
		None,
		[Token(Token = "0x4001342")]
		Mono,
		[Token(Token = "0x4001343")]
		Stereo,
		[Token(Token = "0x4001344")]
		Cubemap,
		[Token(Token = "0x4001345")]
		MonoPanorama,
		[Token(Token = "0x4001346")]
		StereoPanorama
	}
	[Token(Token = "0x20002DA")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001348")]
		Preview,
		[Token(Token = "0x4001349")]
		VR
	}
	[Token(Token = "0x20002DB")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x400134B")]
		None = 0,
		[Token(Token = "0x400134C")]
		OperationFailed = 100,
		[Token(Token = "0x400134D")]
		InvalidHandle = 101,
		[Token(Token = "0x400134E")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x400134F")]
		OutOfHandles = 103,
		[Token(Token = "0x4001350")]
		IPCFailure = 104,
		[Token(Token = "0x4001351")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001352")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001353")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001354")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001355")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001356")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001357")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001358")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001359")]
		NoFrameAvailable = 113,
		[Token(Token = "0x400135A")]
		InvalidArgument = 114,
		[Token(Token = "0x400135B")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x20002DC")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x400135D")]
		Distorted,
		[Token(Token = "0x400135E")]
		Undistorted,
		[Token(Token = "0x400135F")]
		MaximumUndistorted,
		[Token(Token = "0x4001360")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x20002DD")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001362")]
		None = 0,
		[Token(Token = "0x4001363")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001364")]
		NoManifest = 101,
		[Token(Token = "0x4001365")]
		NoApplication = 102,
		[Token(Token = "0x4001366")]
		InvalidIndex = 103,
		[Token(Token = "0x4001367")]
		UnknownApplication = 104,
		[Token(Token = "0x4001368")]
		IPCFailed = 105,
		[Token(Token = "0x4001369")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x400136A")]
		InvalidManifest = 107,
		[Token(Token = "0x400136B")]
		InvalidApplication = 108,
		[Token(Token = "0x400136C")]
		LaunchFailed = 109,
		[Token(Token = "0x400136D")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x400136E")]
		LaunchInProgress = 111,
		[Token(Token = "0x400136F")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001370")]
		TransitionAborted = 113,
		[Token(Token = "0x4001371")]
		IsTemplate = 114,
		[Token(Token = "0x4001372")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001373")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001374")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001375")]
		UnknownProperty = 202,
		[Token(Token = "0x4001376")]
		InvalidParameter = 203
	}
	[Token(Token = "0x20002DE")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001378")]
		Name_String = 0,
		[Token(Token = "0x4001379")]
		LaunchType_String = 11,
		[Token(Token = "0x400137A")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x400137B")]
		BinaryPath_String = 13,
		[Token(Token = "0x400137C")]
		Arguments_String = 14,
		[Token(Token = "0x400137D")]
		URL_String = 15,
		[Token(Token = "0x400137E")]
		Description_String = 50,
		[Token(Token = "0x400137F")]
		NewsURL_String = 51,
		[Token(Token = "0x4001380")]
		ImagePath_String = 52,
		[Token(Token = "0x4001381")]
		Source_String = 53,
		[Token(Token = "0x4001382")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4001383")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001384")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001385")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001386")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001387")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001388")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20002DF")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x400138A")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x400138B")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x400138C")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x400138D")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20002E0")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x400138F")]
		OK = 1,
		[Token(Token = "0x4001390")]
		Warning = 100,
		[Token(Token = "0x4001391")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001392")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4001393")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001394")]
		Error = 200,
		[Token(Token = "0x4001395")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001396")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001397")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001398")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20002E1")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x400139A")]
		Live = 1,
		[Token(Token = "0x400139B")]
		Temp
	}
	[Token(Token = "0x20002E2")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x400139D")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20002E3")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x400139F")]
		None = 0,
		[Token(Token = "0x40013A0")]
		RequestFailed = 1,
		[Token(Token = "0x40013A1")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40013A2")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x40013A3")]
		InvalidTexture = 102,
		[Token(Token = "0x40013A4")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x40013A5")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x40013A6")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x40013A7")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x40013A8")]
		IndexOutOfRange = 107,
		[Token(Token = "0x40013A9")]
		AlreadySubmitted = 108,
		[Token(Token = "0x40013AA")]
		InvalidBounds = 109
	}
	[Token(Token = "0x20002E4")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x40013AC")]
		Implicit,
		[Token(Token = "0x40013AD")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x40013AE")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x20002E5")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x40013B0")]
		None,
		[Token(Token = "0x40013B1")]
		Mouse,
		[Token(Token = "0x40013B2")]
		DualAnalog
	}
	[Token(Token = "0x20002E6")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x40013B4")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x40013B5")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x40013B6")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x40013B7")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20002E7")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x40013B9")]
		None,
		[Token(Token = "0x40013BA")]
		Curved,
		[Token(Token = "0x40013BB")]
		RGSS4X,
		[Token(Token = "0x40013BC")]
		NoDashboardTab,
		[Token(Token = "0x40013BD")]
		AcceptsGamepadEvents,
		[Token(Token = "0x40013BE")]
		ShowGamepadFocus,
		[Token(Token = "0x40013BF")]
		SendVRScrollEvents,
		[Token(Token = "0x40013C0")]
		SendVRTouchpadEvents,
		[Token(Token = "0x40013C1")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x40013C2")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x40013C3")]
		SideBySide_Parallel,
		[Token(Token = "0x40013C4")]
		SideBySide_Crossed,
		[Token(Token = "0x40013C5")]
		Panorama,
		[Token(Token = "0x40013C6")]
		StereoPanorama,
		[Token(Token = "0x40013C7")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x40013C8")]
		VisibleInDashboard
	}
	[Token(Token = "0x20002E8")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x40013CA")]
		ButtonPress_0,
		[Token(Token = "0x40013CB")]
		ButtonPress_1,
		[Token(Token = "0x40013CC")]
		ButtonPress_2,
		[Token(Token = "0x40013CD")]
		ButtonPress_3,
		[Token(Token = "0x40013CE")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x40013CF")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x40013D0")]
		ApplicationQuit
	}
	[Token(Token = "0x20002E9")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x40013D2")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x40013D3")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x40013D4")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20002EA")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x40013D6")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x40013D7")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20002EB")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x40013D9")]
		Up,
		[Token(Token = "0x40013DA")]
		Down,
		[Token(Token = "0x40013DB")]
		Left,
		[Token(Token = "0x40013DC")]
		Right,
		[Token(Token = "0x40013DD")]
		Count
	}
	[Token(Token = "0x20002EC")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x40013DF")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x40013E0")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20002ED")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x40013E2")]
		None = 0,
		[Token(Token = "0x40013E3")]
		Loading = 100,
		[Token(Token = "0x40013E4")]
		NotSupported = 200,
		[Token(Token = "0x40013E5")]
		InvalidArg = 300,
		[Token(Token = "0x40013E6")]
		InvalidModel = 301,
		[Token(Token = "0x40013E7")]
		NoShapes = 302,
		[Token(Token = "0x40013E8")]
		MultipleShapes = 303,
		[Token(Token = "0x40013E9")]
		TooManyVertices = 304,
		[Token(Token = "0x40013EA")]
		MultipleTextures = 305,
		[Token(Token = "0x40013EB")]
		BufferTooSmall = 306,
		[Token(Token = "0x40013EC")]
		NotEnoughNormals = 307,
		[Token(Token = "0x40013ED")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x40013EE")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20002EE")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x40013F0")]
		IsStatic = 1,
		[Token(Token = "0x40013F1")]
		IsVisible = 2,
		[Token(Token = "0x40013F2")]
		IsTouched = 4,
		[Token(Token = "0x40013F3")]
		IsPressed = 8,
		[Token(Token = "0x40013F4")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20002EF")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x40013F6")]
		Transient,
		[Token(Token = "0x40013F7")]
		Persistent,
		[Token(Token = "0x40013F8")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20002F0")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x40013FA")]
		None = 0,
		[Token(Token = "0x40013FB")]
		Application = 100,
		[Token(Token = "0x40013FC")]
		Contact_Disabled = 200,
		[Token(Token = "0x40013FD")]
		Contact_Enabled = 201,
		[Token(Token = "0x40013FE")]
		Contact_Active = 202
	}
	[Token(Token = "0x20002F1")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4001400")]
		None,
		[Token(Token = "0x4001401")]
		IPCFailed,
		[Token(Token = "0x4001402")]
		WriteFailed,
		[Token(Token = "0x4001403")]
		ReadFailed,
		[Token(Token = "0x4001404")]
		JsonParseFailed,
		[Token(Token = "0x4001405")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20002F2")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001407")]
		None = 0,
		[Token(Token = "0x4001408")]
		RequestFailed = 1,
		[Token(Token = "0x4001409")]
		IncompatibleVersion = 100,
		[Token(Token = "0x400140A")]
		NotFound = 101,
		[Token(Token = "0x400140B")]
		BufferTooSmall = 102,
		[Token(Token = "0x400140C")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x20002F3")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20002F4")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20002F5")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20002F6")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20002F7")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20002F8")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20002F9")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x20002FA")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20002FB")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x20002FC")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x20002FD")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x20002FE")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x20002FF")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x2000300")]
	public struct Texture_t
	{
		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x2000301")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x2000302")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x2000303")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x2000304")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x2000305")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000306")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000307")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x2000308")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x2000309")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x200030A")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x200030B")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x200030C")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x200030D")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x200030E")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x200030F")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000310")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000311")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000312")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000313")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000314")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x2000315")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000316")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000317")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x2000318")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x2000319")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x200031A")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x200031B")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x200031C")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x200031D")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x200031E")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x200031F")]
	public struct VREvent_t
	{
		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000320")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xA4E504", Offset = "0xA4E504", VA = "0xA4E504")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xA4E558", Offset = "0xA4E558", VA = "0xA4E558")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000321")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000322")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000323")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000324")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xA4E4BC", Offset = "0xA4E4BC", VA = "0xA4E4BC")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xA4E4FC", Offset = "0xA4E4FC", VA = "0xA4E4FC")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000325")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000326")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000327")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x2000328")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x2000329")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x200032A")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x200032B")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x200032C")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x200032D")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x200032E")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x200032F")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x2000330")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x2000331")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000332")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000333")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xA4E43C", Offset = "0xA4E43C", VA = "0xA4E43C")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xA4E450", Offset = "0xA4E450", VA = "0xA4E450")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000334")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000335")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xA4E46C", Offset = "0xA4E46C", VA = "0xA4E46C")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xA4E490", Offset = "0xA4E490", VA = "0xA4E490")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000336")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000337")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000338")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x2000339")]
	public class OpenVR
	{
		[Token(Token = "0x2000681")]
		private class COpenVRContext
		{
			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6002379")]
			[Address(RVA = "0xB8C3EC", Offset = "0xB8C3EC", VA = "0xB8C3EC")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x600237A")]
			[Address(RVA = "0xB8D1E8", Offset = "0xB8D1E8", VA = "0xB8D1E8")]
			public void Clear()
			{
			}

			[Token(Token = "0x600237B")]
			[Address(RVA = "0xB8D314", Offset = "0xB8D314", VA = "0xB8D314")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0xB8C47C", Offset = "0xB8C47C", VA = "0xB8C47C")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x600237D")]
			[Address(RVA = "0xB8C5A8", Offset = "0xB8C5A8", VA = "0xB8C5A8")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x600237E")]
			[Address(RVA = "0xB8C6D4", Offset = "0xB8C6D4", VA = "0xB8C6D4")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x600237F")]
			[Address(RVA = "0xB8C800", Offset = "0xB8C800", VA = "0xB8C800")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6002380")]
			[Address(RVA = "0xB8C92C", Offset = "0xB8C92C", VA = "0xB8C92C")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x6002381")]
			[Address(RVA = "0xB8C9F0", Offset = "0xB8C9F0", VA = "0xB8C9F0")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6002382")]
			[Address(RVA = "0xB8CB1C", Offset = "0xB8CB1C", VA = "0xB8CB1C")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6002383")]
			[Address(RVA = "0xB8CC48", Offset = "0xB8CC48", VA = "0xB8CC48")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6002384")]
			[Address(RVA = "0xB8CD74", Offset = "0xB8CD74", VA = "0xB8CD74")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6002385")]
			[Address(RVA = "0xB8CEA0", Offset = "0xB8CEA0", VA = "0xB8CEA0")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6002386")]
			[Address(RVA = "0xB8CFCC", Offset = "0xB8CFCC", VA = "0xB8CFCC")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4001552")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001553")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001554")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001555")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001556")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001557")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001558")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001559")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x400155A")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x400155B")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x400155C")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x400155D")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x400155E")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x400155F")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4001560")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4001561")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4001562")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4001563")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001564")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001565")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001566")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001567")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001568")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001569")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x400156A")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x400156B")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x400156C")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x400156D")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x400156E")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x400156F")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001570")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4001571")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001572")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4001573")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4001574")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001575")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001576")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001577")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001578")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001579")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x400157A")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x400157B")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x400157C")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x400157D")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x400157E")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x400157F")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001580")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001581")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001582")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4001583")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4001584")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4001585")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001586")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001587")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001588")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001589")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x400158A")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x400158B")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x400158C")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x400158D")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x400158E")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x400158F")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001590")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001591")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001592")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4001593")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4001594")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001595")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001596")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001597")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001598")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001599")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x400159A")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x400159B")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x400159C")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x400159D")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x400159E")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x400159F")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x40015A0")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x40015A1")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x40015A2")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x40015A3")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x40015A4")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x40015A5")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x40015A6")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x40015A7")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x40015A8")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x40015A9")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x40015AA")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x40015AB")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x40015AC")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x40015AD")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x40015AE")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x40015AF")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x40015B0")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x40015B1")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x40015B2")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x40015B3")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x40015B4")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x40015B5")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x40015B6")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x40015B7")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x40015B8")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x40015B9")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x40015BA")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x40015BB")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x40015BC")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x40015BD")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x40015BE")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x40015BF")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x40015C0")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x40015C1")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x40015C2")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x40015C3")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x40015C4")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x40015C5")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x40015C6")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x40015C7")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x40015C8")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x40015C9")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x40015CA")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x40015CB")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x40015CC")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x40015CD")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x40015CE")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x40015CF")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x40015D0")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x40015D1")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x40015D2")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x40015D3")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x40015D4")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x40015D5")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x40015D6")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x40015D7")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x40015D8")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x40015D9")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x40015DA")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x40015DB")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x40015DC")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x40015DD")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x40015DE")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x40015DF")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x40015E0")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x40015E1")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x40015E2")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x40015E3")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x40015E4")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x40015E5")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x40015E6")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x40015E7")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x40015E8")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x40015E9")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x40015EA")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x40015EB")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x40015EC")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x40015ED")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x40015EE")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x40015EF")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x40015F0")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x40015F1")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x40015F2")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x40015F3")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x40015F4")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x40015F5")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x40015F6")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x40015F7")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x40015F8")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x40015F9")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x40015FA")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x40015FB")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x40015FC")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x40015FD")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x40015FE")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x40015FF")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001600")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001601")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001602")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001603")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001604")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001605")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4001606")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001607")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001608")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001609")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x400160A")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x400160B")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x400160C")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x400160D")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x400160E")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x400160F")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001610")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A0854", Offset = "0x9A0854")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001612")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170001F3")]
		private static uint VRToken
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0xB8C238", Offset = "0xB8C238", VA = "0xB8C238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8EC4", Offset = "0x9A8EC4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0xB8C2A0", Offset = "0xB8C2A0", VA = "0xB8C2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8ED4", Offset = "0x9A8ED4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0xB8C30C", Offset = "0xB8C30C", VA = "0xB8C30C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public static CVRSystem System
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0xB8C414", Offset = "0xB8C414", VA = "0xB8C414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xB8C540", Offset = "0xB8C540", VA = "0xB8C540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xB8C66C", Offset = "0xB8C66C", VA = "0xB8C66C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xB8C798", Offset = "0xB8C798", VA = "0xB8C798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0xB8C8C4", Offset = "0xB8C8C4", VA = "0xB8C8C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0xB80BE0", Offset = "0xB80BE0", VA = "0xB80BE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0xB8CAB4", Offset = "0xB8CAB4", VA = "0xB8CAB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0xB8CBE0", Offset = "0xB8CBE0", VA = "0xB8CBE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0xB8CD0C", Offset = "0xB8CD0C", VA = "0xB8CD0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0xB8CE38", Offset = "0xB8CE38", VA = "0xB8CE38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xB8CF64", Offset = "0xB8CF64", VA = "0xB8CF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xB8BCA0", Offset = "0xB8BCA0", VA = "0xB8BCA0")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xB8BD50", Offset = "0xB8BD50", VA = "0xB8BD50")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xB8BDE0", Offset = "0xB8BDE0", VA = "0xB8BDE0")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xB8BE78", Offset = "0xB8BE78", VA = "0xB8BE78")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xB8BF10", Offset = "0xB8BF10", VA = "0xB8BF10")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xB8C024", Offset = "0xB8C024", VA = "0xB8C024")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xB8C0EC", Offset = "0xB8C0EC", VA = "0xB8C0EC")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xB8C1A8", Offset = "0xB8C1A8", VA = "0xB8C1A8")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xB8D090", Offset = "0xB8D090", VA = "0xB8D090")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xB8D2AC", Offset = "0xB8D2AC", VA = "0xB8D2AC")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xB8D308", Offset = "0xB8D308", VA = "0xB8D308")]
		public OpenVR()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998798", Offset = "0x998798")]
	public class BodyCollider : MonoBehaviour
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x12D8A44", Offset = "0x12D8A44", VA = "0x12D8A44")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x12D8AA8", Offset = "0x12D8AA8", VA = "0x12D8AA8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x12D8C4C", Offset = "0x12D8C4C", VA = "0x12D8C4C")]
		public BodyCollider()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9987FC", Offset = "0x9987FC")]
	public class CircularDrive : MonoBehaviour
	{
		[Token(Token = "0x2000682")]
		public enum Axis_t
		{
			[Token(Token = "0x400214F")]
			XAxis,
			[Token(Token = "0x4002150")]
			YAxis,
			[Token(Token = "0x4002151")]
			ZAxis
		}

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B13C", Offset = "0x99B13C")]
		private sealed class <HapticPulses>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Controller.Device controller;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float flMagnitude;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int nCount;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <nRangeMax>5__2;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private ushort <i>5__3;

			[Token(Token = "0x170003E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600238A")]
				[Address(RVA = "0x12DB60C", Offset = "0x12DB60C", VA = "0x12DB60C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600238C")]
				[Address(RVA = "0x12DB678", Offset = "0x12DB678", VA = "0x12DB678", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x12D9C0C", Offset = "0x12D9C0C", VA = "0x12D9C0C")]
			[DebuggerHidden]
			public <HapticPulses>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6002388")]
			[Address(RVA = "0x12DB498", Offset = "0x12DB498", VA = "0x12DB498", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002389")]
			[Address(RVA = "0x12DB49C", Offset = "0x12DB49C", VA = "0x12DB49C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600238B")]
			[Address(RVA = "0x12DB614", Offset = "0x12DB614", VA = "0x12DB614", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0864", Offset = "0x9A0864")]
		public Axis_t axisOfRotation;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A089C", Offset = "0x9A089C")]
		public Collider childCollider;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A08D4", Offset = "0x9A08D4")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A090C", Offset = "0x9A090C")]
		public bool hoverLock;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A0944", Offset = "0x9A0944")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0944", Offset = "0x9A0944")]
		public bool limited;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 frozenDistanceMinMaxThreshold;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFrozenDistanceThreshold;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A09A4", Offset = "0x9A09A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A09A4", Offset = "0x9A09A4")]
		public float minAngle;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0A04", Offset = "0x9A0A04")]
		public bool freezeOnMin;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0A3C", Offset = "0x9A0A3C")]
		public UnityEvent onMinAngle;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A0A74", Offset = "0x9A0A74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0A74", Offset = "0x9A0A74")]
		public float maxAngle;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0AD4", Offset = "0x9A0AD4")]
		public bool freezeOnMax;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0B0C", Offset = "0x9A0B0C")]
		public UnityEvent onMaxAngle;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0B44", Offset = "0x9A0B44")]
		public bool forceStart;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0B7C", Offset = "0x9A0B7C")]
		public float startAngle;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0BB4", Offset = "0x9A0BB4")]
		public bool rotateGameObject;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0BEC", Offset = "0x9A0BEC")]
		public bool debugPath;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0C24", Offset = "0x9A0C24")]
		public int dbgPathLimit;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0C5C", Offset = "0x9A0C5C")]
		public TextMesh debugText;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0C94", Offset = "0x9A0C94")]
		public float outAngle;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion start;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 worldPlaneNormal;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 localPlaneNormal;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color red;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color green;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject[] dbgHandObjects;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] dbgProjObjects;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject dbgObjectsParent;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int dbgObjectCount;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int dbgObjectIndex;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool driving;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float minMaxAngularThreshold;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool frozen;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float frozenAngle;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 frozenHandWorldPos;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 frozenSqDistanceMinMaxThreshold;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Hand handHoverLocked;

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x12D9400", Offset = "0x12D9400", VA = "0x12D9400")]
		private void Freeze(Hand hand)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x12D9468", Offset = "0x12D9468", VA = "0x12D9468")]
		private void UnFreeze()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x12D9488", Offset = "0x12D9488", VA = "0x12D9488")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x12D98F0", Offset = "0x12D98F0", VA = "0x12D98F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x12D9B6C", Offset = "0x12D9B6C", VA = "0x12D9B6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8EE4", Offset = "0x9A8EE4")]
		private IEnumerator HapticPulses(SteamVR_Controller.Device controller, float flMagnitude, int nCount)
		{
			return null;
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x12D9C38", Offset = "0x12D9C38", VA = "0x12D9C38")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x12D9D74", Offset = "0x12D9D74", VA = "0x12D9D74")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x12D9EFC", Offset = "0x12D9EFC", VA = "0x12D9EFC")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x12DA194", Offset = "0x12DA194", VA = "0x12DA194")]
		private Vector3 ComputeToTransformProjected(Transform xForm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x12DA92C", Offset = "0x12DA92C", VA = "0x12DA92C")]
		private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x12DB00C", Offset = "0x12DB00C", VA = "0x12DB00C")]
		private void UpdateLinearMapping()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x12DB1D0", Offset = "0x12DB1D0", VA = "0x12DB1D0")]
		private void UpdateGameObject()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x12DB0D0", Offset = "0x12DB0D0", VA = "0x12DB0D0")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x12D98C4", Offset = "0x12D98C4", VA = "0x12D98C4")]
		private void UpdateAll()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x12DA4BC", Offset = "0x12DA4BC", VA = "0x12DA4BC")]
		private void ComputeAngle(Hand hand)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x12DB2F0", Offset = "0x12DB2F0", VA = "0x12DB2F0")]
		public CircularDrive()
		{
		}
	}
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998860", Offset = "0x998860")]
	public class ComplexThrowable : MonoBehaviour
	{
		[Token(Token = "0x2000684")]
		public enum AttachMode
		{
			[Token(Token = "0x400215A")]
			FixedJoint,
			[Token(Token = "0x400215B")]
			Force
		}

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attachForce;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float attachForceDamper;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachMode attachMode;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Hand> holdingHands;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> holdingBodies;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> holdingPoints;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Rigidbody> rigidBodies;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x12DB680", Offset = "0x12DB680", VA = "0x12DB680")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x12DB6D4", Offset = "0x12DB6D4", VA = "0x12DB6D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x12DB974", Offset = "0x12DB974", VA = "0x12DB974")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x12DBA18", Offset = "0x12DBA18", VA = "0x12DBA18")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x12DBABC", Offset = "0x12DBABC", VA = "0x12DBABC")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x12DBB08", Offset = "0x12DBB08", VA = "0x12DBB08")]
		private void PhysicsAttach(Hand hand)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x12DB7A8", Offset = "0x12DB7A8", VA = "0x12DB7A8")]
		private bool PhysicsDetach(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x12DC668", Offset = "0x12DC668", VA = "0x12DC668")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x12DC944", Offset = "0x12DC944", VA = "0x12DC944")]
		public ComplexThrowable()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class ControllerHoverHighlight : MonoBehaviour
	{
		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material highLightMaterial;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fireHapticsOnHightlight;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer bodyMeshRenderer;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer trackingHatMeshRenderer;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool renderModelLoaded;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x12E1B3C", Offset = "0x12E1B3C", VA = "0x12E1B3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x12E1BA0", Offset = "0x12E1BA0", VA = "0x12E1BA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x12E1C50", Offset = "0x12E1C50", VA = "0x12E1C50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x12E1C70", Offset = "0x12E1C70", VA = "0x12E1C70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x12E1C90", Offset = "0x12E1C90", VA = "0x12E1C90")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x12E1D3C", Offset = "0x12E1D3C", VA = "0x12E1D3C")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x12E22CC", Offset = "0x12E22CC", VA = "0x12E22CC")]
		private void OnParentHandHoverBegin(Interactable other)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x12E24D4", Offset = "0x12E24D4", VA = "0x12E24D4")]
		private void OnParentHandHoverEnd(Interactable other)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x12E25F4", Offset = "0x12E25F4", VA = "0x12E25F4")]
		private void OnParentHandInputFocusAcquired()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x12E2718", Offset = "0x12E2718", VA = "0x12E2718")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x12E23B8", Offset = "0x12E23B8", VA = "0x12E23B8")]
		public void ShowHighlight()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x12E24D8", Offset = "0x12E24D8", VA = "0x12E24D8")]
		public void HideHighlight()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x12E271C", Offset = "0x12E271C", VA = "0x12E271C")]
		public ControllerHoverHighlight()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public static class CustomEvents
	{
		[Serializable]
		[Token(Token = "0x2000685")]
		public class UnityEventSingleFloat : UnityEvent<float>
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0x12E277C", Offset = "0x12E277C", VA = "0x12E277C")]
			public UnityEventSingleFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000686")]
		public class UnityEventHand : UnityEvent<Hand>
		{
			[Token(Token = "0x600238E")]
			[Address(RVA = "0x12E272C", Offset = "0x12E272C", VA = "0x12E272C")]
			public UnityEventHand()
			{
			}
		}
	}
	[Token(Token = "0x200033F")]
	public class DebugUI : MonoBehaviour
	{
		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Player player;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugUI _instance;

		[Token(Token = "0x17000200")]
		public static DebugUI instance
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x12E27CC", Offset = "0x12E27CC", VA = "0x12E27CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x12E28A8", Offset = "0x12E28A8", VA = "0x12E28A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x12E28DC", Offset = "0x12E28DC", VA = "0x12E28DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x12E28F8", Offset = "0x12E28F8", VA = "0x12E28F8")]
		public DebugUI()
		{
		}
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9988C4", Offset = "0x9988C4")]
	public class DestroyOnDetachedFromHand : MonoBehaviour
	{
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x12E2900", Offset = "0x12E2900", VA = "0x12E2900")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x12E297C", Offset = "0x12E297C", VA = "0x12E297C")]
		public DestroyOnDetachedFromHand()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998928", Offset = "0x998928")]
	public class DestroyOnParticleSystemDeath : MonoBehaviour
	{
		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particles;

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x12E2984", Offset = "0x12E2984", VA = "0x12E2984")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x12E2A0C", Offset = "0x12E2A0C", VA = "0x12E2A0C")]
		private void CheckParticleSystem()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x12E2AAC", Offset = "0x12E2AAC", VA = "0x12E2AAC")]
		public DestroyOnParticleSystemDeath()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class DestroyOnTriggerEnter : MonoBehaviour
	{
		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tagFilter;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useTag;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x12E2AB4", Offset = "0x12E2AB4", VA = "0x12E2AB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x12E2AE8", Offset = "0x12E2AE8", VA = "0x12E2AE8")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x12E2BE4", Offset = "0x12E2BE4", VA = "0x12E2BE4")]
		public DestroyOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class DistanceHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B14C", Offset = "0x99B14C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DistanceHaptics <>4__this;

			[Token(Token = "0x170003EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002392")]
				[Address(RVA = "0x12E2F14", Offset = "0x12E2F14", VA = "0x12E2F14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002394")]
				[Address(RVA = "0x12E2F80", Offset = "0x12E2F80", VA = "0x12E2F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600238F")]
			[Address(RVA = "0x12E2C6C", Offset = "0x12E2C6C", VA = "0x12E2C6C")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002390")]
			[Address(RVA = "0x12E2D28", Offset = "0x12E2D28", VA = "0x12E2D28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002391")]
			[Address(RVA = "0x12E2D2C", Offset = "0x12E2D2C", VA = "0x12E2D2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002393")]
			[Address(RVA = "0x12E2F1C", Offset = "0x12E2F1C", VA = "0x12E2F1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform firstTransform;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform secondTransform;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve distanceIntensityCurve;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pulseIntervalCurve;

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x12E2BEC", Offset = "0x12E2BEC", VA = "0x12E2BEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8F48", Offset = "0x9A8F48")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x12E2C98", Offset = "0x12E2C98", VA = "0x12E2C98")]
		public DistanceHaptics()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x12E2F88", Offset = "0x12E2F88", VA = "0x12E2F88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x12E2FF0", Offset = "0x12E2FF0", VA = "0x12E2FF0")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class EnumFlags : PropertyAttribute
	{
		[Token(Token = "0x6001400")]
		[Address(RVA = "0x12E2FF8", Offset = "0x12E2FF8", VA = "0x12E2FF8")]
		public EnumFlags()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x99898C", Offset = "0x99898C")]
	public class FallbackCameraController : MonoBehaviour
	{
		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftSpeed;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showInstructions;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startEulerAngles;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 startMousePosition;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float realTime;

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x12E3000", Offset = "0x12E3000", VA = "0x12E3000")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x12E3028", Offset = "0x12E3028", VA = "0x12E3028")]
		private void Update()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x12E339C", Offset = "0x12E339C", VA = "0x12E339C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x12E3450", Offset = "0x12E3450", VA = "0x12E3450")]
		public FallbackCameraController()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x2000688")]
		public enum HandType
		{
			[Token(Token = "0x4002160")]
			Left,
			[Token(Token = "0x4002161")]
			Right,
			[Token(Token = "0x4002162")]
			Any
		}

		[Token(Token = "0x2000689")]
		[Flags]
		public enum AttachmentFlags
		{
			[Token(Token = "0x4002164")]
			SnapOnAttach = 1,
			[Token(Token = "0x4002165")]
			DetachOthers = 2,
			[Token(Token = "0x4002166")]
			DetachFromOtherHand = 4,
			[Token(Token = "0x4002167")]
			ParentToHand = 8
		}

		[Token(Token = "0x200068A")]
		public struct AttachedObject
		{
			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject attachedObject;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject originalParent;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isParentedToHand;
		}

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B16C", Offset = "0x99B16C")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject objectToDetach;

			[Token(Token = "0x6002395")]
			[Address(RVA = "0x12E4218", Offset = "0x12E4218", VA = "0x12E4218")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6002396")]
			[Address(RVA = "0x12E5B10", Offset = "0x12E5B10", VA = "0x12E5B10")]
			internal bool <DetachObject>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B17C", Offset = "0x99B17C")]
		private sealed class <>c
		{
			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AttachedObject> <>9__45_0;

			[Token(Token = "0x6002398")]
			[Address(RVA = "0x12E5A98", Offset = "0x12E5A98", VA = "0x12E5A98")]
			public <>c()
			{
			}

			[Token(Token = "0x6002399")]
			[Address(RVA = "0x12E5AA0", Offset = "0x12E5AA0", VA = "0x12E5AA0")]
			internal bool <CleanUpAttachedObjectStack>b__45_0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B18C", Offset = "0x99B18C")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x170003ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600239D")]
				[Address(RVA = "0x12E5F68", Offset = "0x12E5F68", VA = "0x12E5F68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600239F")]
				[Address(RVA = "0x12E5FD4", Offset = "0x12E5FD4", VA = "0x12E5FD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600239A")]
			[Address(RVA = "0x12E45C4", Offset = "0x12E45C4", VA = "0x12E45C4")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x600239B")]
			[Address(RVA = "0x12E5C28", Offset = "0x12E5C28", VA = "0x12E5C28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600239C")]
			[Address(RVA = "0x12E5C2C", Offset = "0x12E5C2C", VA = "0x12E5C2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600239E")]
			[Address(RVA = "0x12E5F70", Offset = "0x12E5F70", VA = "0x12E5F70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B19C", Offset = "0x99B19C")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactable contacting;

			[Token(Token = "0x60023A0")]
			[Address(RVA = "0x12E45F0", Offset = "0x12E45F0", VA = "0x12E45F0")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x12E5B90", Offset = "0x12E5B90", VA = "0x12E5B90")]
			internal bool <UpdateHovering>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400165B")]
		public const AttachmentFlags defaultAttachmentFlags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand otherHand;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandType startingHandType;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hoverSphereTransform;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hoverSphereRadius;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hoverUpdateInterval;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera noSteamVRFallbackCamera;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float noSteamVRFallbackMaxDistanceNoItem;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float noSteamVRFallbackMaxDistanceWithItem;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float noSteamVRFallbackInteractorDistance;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SteamVR_Controller.Device controller;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject controllerPrefab;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject controllerObject;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showDebugText;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool spewDebugText;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AttachedObject> attachedObjects;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A0CDC", Offset = "0x9A0CDC")]
		private bool <hoverLocked>k__BackingField;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Interactable _hoveringInteractable;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TextMesh debugText;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int prevOverlappingColliders;

		[Token(Token = "0x4001670")]
		private const int ColliderArraySize = 16;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] overlappingColliders;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player playerInstance;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject applicationLostFocusObject;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SteamVR_Events.Action inputFocusAction;

		[Token(Token = "0x17000201")]
		public ReadOnlyCollection<AttachedObject> AttachedObjects
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x12E346C", Offset = "0x12E346C", VA = "0x12E346C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public bool hoverLocked
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x12E34C4", Offset = "0x12E34C4", VA = "0x12E34C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8FAC", Offset = "0x9A8FAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x12E34CC", Offset = "0x12E34CC", VA = "0x12E34CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A8FBC", Offset = "0x9A8FBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public Interactable hoveringInteractable
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x12E34D8", Offset = "0x12E34D8", VA = "0x12E34D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x12E34E0", Offset = "0x12E34E0", VA = "0x12E34E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public GameObject currentAttachedObject
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x12E3818", Offset = "0x12E3818", VA = "0x12E3818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x12E3998", Offset = "0x12E3998", VA = "0x12E3998")]
		public Transform GetAttachmentTransform(string attachmentPoint = "")
		{
			return null;
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x12E3A68", Offset = "0x12E3A68", VA = "0x12E3A68")]
		public HandType GuessCurrentHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x12DBF48", Offset = "0x12DBF48", VA = "0x12DBF48")]
		public void AttachObject(GameObject objectToAttach, AttachmentFlags flags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand, string attachmentPoint = "")
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x12DC2D0", Offset = "0x12DC2D0", VA = "0x12DC2D0")]
		public void DetachObject(GameObject objectToDetach, bool restoreOriginalParent = true)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x12E4220", Offset = "0x12E4220", VA = "0x12E4220")]
		public Vector3 GetTrackedObjectVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x12E42E0", Offset = "0x12E42E0", VA = "0x12E42E0")]
		public Vector3 GetTrackedObjectAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x12E3894", Offset = "0x12E3894", VA = "0x12E3894")]
		private void CleanUpAttachedObjectStack()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x12E43A0", Offset = "0x12E43A0", VA = "0x12E43A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x12E4544", Offset = "0x12E4544", VA = "0x12E4544")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A8FCC", Offset = "0x9A8FCC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x12E3B90", Offset = "0x12E3B90", VA = "0x12E3B90")]
		private void UpdateHovering()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x12E45F8", Offset = "0x12E45F8", VA = "0x12E45F8")]
		private void UpdateNoSteamVRFallback()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x12E4998", Offset = "0x12E4998", VA = "0x12E4998")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x12E4F70", Offset = "0x12E4F70", VA = "0x12E4F70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x12E507C", Offset = "0x12E507C", VA = "0x12E507C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x12E50B8", Offset = "0x12E50B8", VA = "0x12E50B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x12E51D0", Offset = "0x12E51D0", VA = "0x12E51D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x12E5284", Offset = "0x12E5284", VA = "0x12E5284")]
		private void OnInputFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x12E54D0", Offset = "0x12E54D0", VA = "0x12E54D0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x12E54D4", Offset = "0x12E54D4", VA = "0x12E54D4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x12E374C", Offset = "0x12E374C", VA = "0x12E374C")]
		private void HandDebugLog(string msg)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x12E536C", Offset = "0x12E536C", VA = "0x12E536C")]
		private void UpdateHandPoses()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x12DA43C", Offset = "0x12DA43C", VA = "0x12DA43C")]
		public void HoverLock(Interactable interactable)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x12D9AC0", Offset = "0x12D9AC0", VA = "0x12D9AC0")]
		public void HoverUnlock(Interactable interactable)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x12DA0F4", Offset = "0x12DA0F4", VA = "0x12DA0F4")]
		public bool GetStandardInteractionButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x12DA88C", Offset = "0x12DA88C", VA = "0x12DA88C")]
		public bool GetStandardInteractionButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x12D9E5C", Offset = "0x12D9E5C", VA = "0x12D9E5C")]
		public bool GetStandardInteractionButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x12E55B8", Offset = "0x12E55B8", VA = "0x12E55B8")]
		private void InitController(int index)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x12E597C", Offset = "0x12E597C", VA = "0x12E597C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9989F0", Offset = "0x9989F0")]
	public class HapticRack : MonoBehaviour
	{
		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0CEC", Offset = "0x9A0CEC")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0D24", Offset = "0x9A0D24")]
		public int teethCount;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0D5C", Offset = "0x9A0D5C")]
		public int minimumPulseDuration;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0D94", Offset = "0x9A0D94")]
		public int maximumPulseDuration;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0DCC", Offset = "0x9A0DCC")]
		public UnityEvent onPulse;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousToothIndex;

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xB796C8", Offset = "0xB796C8", VA = "0xB796C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xB79780", Offset = "0xB79780", VA = "0xB79780")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xB79788", Offset = "0xB79788", VA = "0xB79788")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xB79794", Offset = "0xB79794", VA = "0xB79794")]
		private void Update()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xB79848", Offset = "0xB79848", VA = "0xB79848")]
		private void Pulse()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xB7992C", Offset = "0xB7992C", VA = "0xB7992C")]
		public HapticRack()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class HideOnHandFocusLost : MonoBehaviour
	{
		[Token(Token = "0x600142D")]
		[Address(RVA = "0xB79950", Offset = "0xB79950", VA = "0xB79950")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xB79978", Offset = "0xB79978", VA = "0xB79978")]
		public HideOnHandFocusLost()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class IgnoreHovering : MonoBehaviour
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0E04", Offset = "0x9A0E04")]
		public Hand onlyIgnoreHand;

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xB79980", Offset = "0xB79980", VA = "0xB79980")]
		public IgnoreHovering()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class InputModule : BaseInputModule
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject submitObject;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputModule _instance;

		[Token(Token = "0x17000205")]
		public static InputModule instance
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0xB79990", Offset = "0xB79990", VA = "0xB79990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xB79A6C", Offset = "0xB79A6C", VA = "0xB79A6C", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xB79AFC", Offset = "0xB79AFC", VA = "0xB79AFC")]
		public void HoverBegin(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xB79BE8", Offset = "0xB79BE8", VA = "0xB79BE8")]
		public void HoverEnd(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xB79CF0", Offset = "0xB79CF0", VA = "0xB79CF0")]
		public void Submit(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xB79CF8", Offset = "0xB79CF8", VA = "0xB79CF8", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xB79E54", Offset = "0xB79E54", VA = "0xB79E54")]
		public InputModule()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class Interactable : MonoBehaviour
	{
		[Token(Token = "0x200068F")]
		public delegate void OnAttachedToHandDelegate(Hand hand);

		[Token(Token = "0x2000690")]
		public delegate void OnDetachedFromHandDelegate(Hand hand);

		[Token(Token = "0x14000024")]
		[HideInInspector]
		public event OnAttachedToHandDelegate onAttachedToHand
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0xB79E5C", Offset = "0xB79E5C", VA = "0xB79E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9030", Offset = "0x9A9030")]
			add
			{
			}
			[Token(Token = "0x6001438")]
			[Address(RVA = "0xB79F00", Offset = "0xB79F00", VA = "0xB79F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9040", Offset = "0x9A9040")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		[HideInInspector]
		public event OnDetachedFromHandDelegate onDetachedFromHand
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0xB79FA4", Offset = "0xB79FA4", VA = "0xB79FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9050", Offset = "0x9A9050")]
			add
			{
			}
			[Token(Token = "0x600143A")]
			[Address(RVA = "0xB7A048", Offset = "0xB7A048", VA = "0xB7A048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9060", Offset = "0x9A9060")]
			remove
			{
			}
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xB7A0EC", Offset = "0xB7A0EC", VA = "0xB7A0EC")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xB7A4B0", Offset = "0xB7A4B0", VA = "0xB7A4B0")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xB7A874", Offset = "0xB7A874", VA = "0xB7A874")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998A54", Offset = "0x998A54")]
	public class InteractableButtonEvents : MonoBehaviour
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onGripDown;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onGripUp;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTouchpadDown;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTouchpadUp;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onTouchpadTouch;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onTouchpadRelease;

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xB7A904", Offset = "0xB7A904", VA = "0xB7A904")]
		private void Update()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xB7ACE8", Offset = "0xB7ACE8", VA = "0xB7ACE8")]
		public InteractableButtonEvents()
		{
		}
	}
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998AB8", Offset = "0x998AB8")]
	public class InteractableHoverEvents : MonoBehaviour
	{
		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onHandHoverBegin;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHandHoverEnd;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onAttachedToHand;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDetachedFromHand;

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xB7B294", Offset = "0xB7B294", VA = "0xB7B294")]
		private void OnHandHoverBegin()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xB7B2B0", Offset = "0xB7B2B0", VA = "0xB7B2B0")]
		private void OnHandHoverEnd()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xB7B2CC", Offset = "0xB7B2CC", VA = "0xB7B2CC")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xB7B2E8", Offset = "0xB7B2E8", VA = "0xB7B2E8")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xB7B304", Offset = "0xB7B304", VA = "0xB7B304")]
		public InteractableHoverEvents()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class ItemPackage : MonoBehaviour
	{
		[Token(Token = "0x2000691")]
		public enum ItemPackageType
		{
			[Token(Token = "0x4002173")]
			Unrestricted,
			[Token(Token = "0x4002174")]
			OneHanded,
			[Token(Token = "0x4002175")]
			TwoHanded
		}

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemPackageType packageType;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemPrefab;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject otherHandItemPrefab;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject previewPrefab;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fadedPreviewPrefab;

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xB7B30C", Offset = "0xB7B30C", VA = "0xB7B30C")]
		public ItemPackage()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class ItemPackageReference : MonoBehaviour
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage itemPackage;

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xB7B314", Offset = "0xB7B314", VA = "0xB7B314")]
		public ItemPackageReference()
		{
		}
	}
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998B1C", Offset = "0x998B1C")]
	public class ItemPackageSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage _itemPackage;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useItemPackagePreview;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool useFadedPreview;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject previewObject;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool requireTriggerPressToTake;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool requireTriggerPressToReturn;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool showTriggerHint;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string attachmentPoint;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool takeBackItem;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool acceptDifferentItems;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject spawnedItem;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool itemIsSpawned;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent pickupEvent;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent dropEvent;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool justPickedUpItem;

		[Token(Token = "0x17000206")]
		public ItemPackage itemPackage
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xB7B31C", Offset = "0xB7B31C", VA = "0xB7B31C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xB7B324", Offset = "0xB7B324", VA = "0xB7B324")]
			set
			{
			}
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xB7B328", Offset = "0xB7B328", VA = "0xB7B328")]
		private void CreatePreviewObject()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xB7B8C0", Offset = "0xB7B8C0", VA = "0xB7B8C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xB7B8C4", Offset = "0xB7B8C4", VA = "0xB7B8C4")]
		private void VerifyItemPackage()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xB7B9A0", Offset = "0xB7B9A0", VA = "0xB7B9A0")]
		private void ItemPackageNotValid()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xB7B5AC", Offset = "0xB7B5AC", VA = "0xB7B5AC")]
		private void ClearPreview()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xB7BA94", Offset = "0xB7BA94", VA = "0xB7BA94")]
		private void Update()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xB7BB40", Offset = "0xB7BB40", VA = "0xB7BB40")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xB7BD48", Offset = "0xB7BD48", VA = "0xB7BD48")]
		private void TakeBackItem(Hand hand)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xB7BC40", Offset = "0xB7BC40", VA = "0xB7BC40")]
		private ItemPackage GetAttachedItemPackage(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xB7C280", Offset = "0xB7C280", VA = "0xB7C280")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xB7C2DC", Offset = "0xB7C2DC", VA = "0xB7C2DC")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xB7C0BC", Offset = "0xB7C0BC", VA = "0xB7C0BC")]
		private void RemoveMatchingItemsFromHandStack(ItemPackage package, Hand hand)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xB7C328", Offset = "0xB7C328", VA = "0xB7C328")]
		private void RemoveMatchingItemTypesFromHand(ItemPackage.ItemPackageType packageType, Hand hand)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xB7BDA8", Offset = "0xB7BDA8", VA = "0xB7BDA8")]
		private void SpawnAndAttachObject(Hand hand)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xB7C4A4", Offset = "0xB7C4A4", VA = "0xB7C4A4")]
		public ItemPackageSpawner()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class LinearAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation animation;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationState animState;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animLength;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastValue;

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xB7C4BC", Offset = "0xB7C4BC", VA = "0xB7C4BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xB7C670", Offset = "0xB7C670", VA = "0xB7C670")]
		private void Update()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xB7C6D0", Offset = "0xB7C6D0", VA = "0xB7C6D0")]
		public LinearAnimation()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class LinearAnimator : MonoBehaviour
	{
		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentLinearMapping;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int framesUnchanged;

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xB7C6D8", Offset = "0xB7C6D8", VA = "0xB7C6D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xB7C804", Offset = "0xB7C804", VA = "0xB7C804")]
		private void Update()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xB7C8AC", Offset = "0xB7C8AC", VA = "0xB7C8AC")]
		public LinearAnimator()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class LinearAudioPitch : MonoBehaviour
	{
		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchCurve;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool applyContinuously;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xB7C8BC", Offset = "0xB7C8BC", VA = "0xB7C8BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xB7C9D0", Offset = "0xB7C9D0", VA = "0xB7C9D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xB7C9E0", Offset = "0xB7C9E0", VA = "0xB7C9E0")]
		private void Apply()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xB7CAA0", Offset = "0xB7CAA0", VA = "0xB7CAA0")]
		public LinearAudioPitch()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class LinearBlendshape : MonoBehaviour
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastValue;

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xB7CAB0", Offset = "0xB7CAB0", VA = "0xB7CAB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xB7CBC4", Offset = "0xB7CBC4", VA = "0xB7CBC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xB7CD10", Offset = "0xB7CD10", VA = "0xB7CD10")]
		public LinearBlendshape()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class LinearDisplacement : MonoBehaviour
	{
		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 displacement;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xB7CD18", Offset = "0xB7CD18", VA = "0xB7CD18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xB7CDF4", Offset = "0xB7CDF4", VA = "0xB7CDF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xB7CF3C", Offset = "0xB7CF3C", VA = "0xB7CF3C")]
		public LinearDisplacement()
		{
		}
	}
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998B80", Offset = "0x998B80")]
	public class LinearDrive : MonoBehaviour
	{
		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPosition;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPosition;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool repositionGameObject;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool maintainMomemntum;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float momemtumDampenRate;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialMappingOffset;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numMappingChangeSamples;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] mappingChangeSamples;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevMapping;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float mappingChangeRate;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleCount;

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xB7CF44", Offset = "0xB7CF44", VA = "0xB7CF44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xB7CFA8", Offset = "0xB7CFA8", VA = "0xB7CFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xB7D308", Offset = "0xB7D308", VA = "0xB7D308")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xB7D5BC", Offset = "0xB7D5BC", VA = "0xB7D5BC")]
		private void CalculateMappingChangeRate()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xB7D100", Offset = "0xB7D100", VA = "0xB7D100")]
		private void UpdateLinearMapping(Transform tr)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xB7D440", Offset = "0xB7D440", VA = "0xB7D440")]
		private float CalculateLinearMapping(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xB7D6B0", Offset = "0xB7D6B0", VA = "0xB7D6B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xB7D86C", Offset = "0xB7D86C", VA = "0xB7D86C")]
		public LinearDrive()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class LinearMapping : MonoBehaviour
	{
		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xB7D88C", Offset = "0xB7D88C", VA = "0xB7D88C")]
		public LinearMapping()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0E6C", Offset = "0x9A0E6C")]
		public Transform trackingOriginTransform;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0EA4", Offset = "0x9A0EA4")]
		public Transform[] hmdTransforms;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0EDC", Offset = "0x9A0EDC")]
		public Hand[] hands;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0F14", Offset = "0x9A0F14")]
		public Collider headCollider;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0F4C", Offset = "0x9A0F4C")]
		public GameObject rigSteamVR;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0F84", Offset = "0x9A0F84")]
		public GameObject rig2DFallback;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0FBC", Offset = "0x9A0FBC")]
		public Transform audioListener;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool allowToggleTo2D;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Player _instance;

		[Token(Token = "0x17000207")]
		public static Player instance
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0xB7AAB0", Offset = "0xB7AAB0", VA = "0xB7AAB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public int handCount
		{
			[Token(Token = "0x6001472")]
			[Address(RVA = "0xB7AC50", Offset = "0xB7AC50", VA = "0xB7AC50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000209")]
		public Hand leftHand
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0xB7DDB0", Offset = "0xB7DDB0", VA = "0xB7DDB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public Hand rightHand
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0xB7DE94", Offset = "0xB7DE94", VA = "0xB7DE94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		public SteamVR_Controller.Device leftController
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0xB7DF7C", Offset = "0xB7DF7C", VA = "0xB7DF7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		public SteamVR_Controller.Device rightController
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0xB7E014", Offset = "0xB7E014", VA = "0xB7E014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public Transform hmdTransform
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0xB7E0AC", Offset = "0xB7E0AC", VA = "0xB7E0AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		public float eyeHeight
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0xB7E164", Offset = "0xB7E164", VA = "0xB7E164")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020F")]
		public Vector3 feetPositionGuess
		{
			[Token(Token = "0x600147A")]
			[Address(RVA = "0xB7E2F8", Offset = "0xB7E2F8", VA = "0xB7E2F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000210")]
		public Vector3 bodyDirectionGuess
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xB7E4B8", Offset = "0xB7E4B8", VA = "0xB7E4B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xB7AB8C", Offset = "0xB7AB8C", VA = "0xB7AB8C")]
		public Hand GetHand(int i)
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xB7E68C", Offset = "0xB7E68C", VA = "0xB7E68C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xB7E73C", Offset = "0xB7E73C", VA = "0xB7E73C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xB7E984", Offset = "0xB7E984", VA = "0xB7E984")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB7EEF0", Offset = "0xB7EEF0", VA = "0xB7EEF0")]
		public void Draw2DDebug()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xB7E7D4", Offset = "0xB7E7D4", VA = "0xB7E7D4")]
		private void ActivateRig(GameObject rig)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xB7F058", Offset = "0xB7F058", VA = "0xB7F058")]
		public void PlayerShotSelf()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xB7F05C", Offset = "0xB7F05C", VA = "0xB7F05C")]
		public Player()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998BE4", Offset = "0x998BE4")]
	public class PlaySound : MonoBehaviour
	{
		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A0FF4", Offset = "0x9A0FF4")]
		public AudioClip[] waveFile;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A102C", Offset = "0x9A102C")]
		public bool stopOnPlay;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1064", Offset = "0x9A1064")]
		public bool disableOnEnd;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A109C", Offset = "0x9A109C")]
		public bool looping;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A10D4", Offset = "0x9A10D4")]
		public bool stopOnEnd;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A110C", Offset = "0x9A110C")]
		public bool playOnAwakeWithDelay;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A1144", Offset = "0x9A1144")]
		public bool useRandomVolume;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A117C", Offset = "0x9A117C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A117C", Offset = "0x9A117C")]
		public float volMin;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A11D0", Offset = "0x9A11D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A11D0", Offset = "0x9A11D0")]
		public float volMax;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A1224", Offset = "0x9A1224")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1224", Offset = "0x9A1224")]
		public bool useRandomPitch;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1284", Offset = "0x9A1284")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1284", Offset = "0x9A1284")]
		public float pitchMin;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A12D8", Offset = "0x9A12D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A12D8", Offset = "0x9A12D8")]
		public float pitchMax;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A132C", Offset = "0x9A132C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A132C", Offset = "0x9A132C")]
		public bool useRetriggerTime;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A138C", Offset = "0x9A138C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A138C", Offset = "0x9A138C")]
		public float timeInitial;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A13E4", Offset = "0x9A13E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A13E4", Offset = "0x9A13E4")]
		public float timeMin;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A143C", Offset = "0x9A143C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A143C", Offset = "0x9A143C")]
		public float timeMax;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A1494", Offset = "0x9A1494")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1494", Offset = "0x9A1494")]
		public bool useRandomSilence;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A14F4", Offset = "0x9A14F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A14F4", Offset = "0x9A14F4")]
		public float percentToNotPlay;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A1548", Offset = "0x9A1548")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1548", Offset = "0x9A1548")]
		public float delayOffsetTime;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip clip;

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xB7D894", Offset = "0xB7D894", VA = "0xB7D894")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xB7D9FC", Offset = "0xB7D9FC", VA = "0xB7D9FC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xB7DA0C", Offset = "0xB7DA0C", VA = "0xB7DA0C")]
		public void PlayWithDelay(float delayTime)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xB7DB48", Offset = "0xB7DB48", VA = "0xB7DB48")]
		public AudioClip PlayOneShotSound()
		{
			return null;
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xB7DA84", Offset = "0xB7DA84", VA = "0xB7DA84")]
		public AudioClip PlayLooping()
		{
			return null;
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xB7DD4C", Offset = "0xB7DD4C", VA = "0xB7DD4C")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xB7DD74", Offset = "0xB7DD74", VA = "0xB7DD74")]
		public void Stop()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xB7DC10", Offset = "0xB7DC10", VA = "0xB7DC10")]
		private void SetAudioSource()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xB7DD90", Offset = "0xB7DD90", VA = "0xB7DD90")]
		public PlaySound()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class SeeThru : MonoBehaviour
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material seeThruMaterial;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject seeThru;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable interactable;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer sourceRenderer;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer destRenderer;

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xB7F06C", Offset = "0xB7F06C", VA = "0xB7F06C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xB7F6C8", Offset = "0xB7F6C8", VA = "0xB7F6C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xB7F7AC", Offset = "0xB7F7AC", VA = "0xB7F7AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xB7F890", Offset = "0xB7F890", VA = "0xB7F890")]
		private void AttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xB7F8B0", Offset = "0xB7F8B0", VA = "0xB7F8B0")]
		private void DetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xB7F8D0", Offset = "0xB7F8D0", VA = "0xB7F8D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xB7FB20", Offset = "0xB7FB20", VA = "0xB7FB20")]
		public SeeThru()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class SleepOnAwake : MonoBehaviour
	{
		[Token(Token = "0x6001493")]
		[Address(RVA = "0xB7FB28", Offset = "0xB7FB28", VA = "0xB7FB28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xB7FBD4", Offset = "0xB7FBD4", VA = "0xB7FBD4")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class SoundDeparent : MonoBehaviour
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroyAfterPlayOnce;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xB7FBDC", Offset = "0xB7FBDC", VA = "0xB7FBDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xB7FC40", Offset = "0xB7FC40", VA = "0xB7FC40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xB7FD34", Offset = "0xB7FD34", VA = "0xB7FD34")]
		public SoundDeparent()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class SoundPlayOneshot : MonoBehaviour
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] waveFiles;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volMin;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volMax;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitchMin;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitchMax;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xB7FD44", Offset = "0xB7FD44", VA = "0xB7FD44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xB7FDC4", Offset = "0xB7FDC4", VA = "0xB7FDC4")]
		public void Play()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xB7FF0C", Offset = "0xB7FF0C", VA = "0xB7FF0C")]
		public void Pause()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xB7FFA0", Offset = "0xB7FFA0", VA = "0xB7FFA0")]
		public void UnPause()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xB80034", Offset = "0xB80034", VA = "0xB80034")]
		public SoundPlayOneshot()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour
	{
		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemPrefab;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xB8003C", Offset = "0xB8003C", VA = "0xB8003C")]
		private void Start()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xB800A0", Offset = "0xB800A0", VA = "0xB800A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xB80230", Offset = "0xB80230", VA = "0xB80230")]
		public SpawnAndAttachAfterControllerIsTracking()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class SpawnAndAttachToHand : MonoBehaviour
	{
		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xB80238", Offset = "0xB80238", VA = "0xB80238")]
		public void SpawnAndAttach(Hand passedInhand)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xB80350", Offset = "0xB80350", VA = "0xB80350")]
		public SpawnAndAttachToHand()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class SpawnRenderModel : MonoBehaviour
	{
		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_RenderModel[] renderModels;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SpawnRenderModel> spawnRenderModels;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastFrameUpdated;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int spawnRenderModelUpdateIndex;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xB80358", Offset = "0xB80358", VA = "0xB80358")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xB80440", Offset = "0xB80440", VA = "0xB80440")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xB807A0", Offset = "0xB807A0", VA = "0xB807A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xB8094C", Offset = "0xB8094C", VA = "0xB8094C")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xB80974", Offset = "0xB80974", VA = "0xB80974")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xB809A0", Offset = "0xB809A0", VA = "0xB809A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xB804E0", Offset = "0xB804E0", VA = "0xB804E0")]
		private void ShowController()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xB80840", Offset = "0xB80840", VA = "0xB80840")]
		private void HideController()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xB80D48", Offset = "0xB80D48", VA = "0xB80D48")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xB81074", Offset = "0xB81074", VA = "0xB81074")]
		public SpawnRenderModel()
		{
		}
	}
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998C48", Offset = "0x998C48")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998C48", Offset = "0x998C48")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998C48", Offset = "0x998C48")]
	public class Throwable : MonoBehaviour
	{
		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B1AC", Offset = "0x99B1AC")]
		private sealed class <LateDetach>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Throwable <>4__this;

			[Token(Token = "0x170003EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023AD")]
				[Address(RVA = "0xB891FC", Offset = "0xB891FC", VA = "0xB891FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023AF")]
				[Address(RVA = "0xB89268", Offset = "0xB89268", VA = "0xB89268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023AA")]
			[Address(RVA = "0xB89014", Offset = "0xB89014", VA = "0xB89014")]
			[DebuggerHidden]
			public <LateDetach>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60023AB")]
			[Address(RVA = "0xB89124", Offset = "0xB89124", VA = "0xB89124", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023AC")]
			[Address(RVA = "0xB89128", Offset = "0xB89128", VA = "0xB89128", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023AE")]
			[Address(RVA = "0xB89204", Offset = "0xB89204", VA = "0xB89204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EnumFlags]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A15A8", Offset = "0x9A15A8")]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A15F4", Offset = "0x9A15F4")]
		public string attachmentPoint;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A162C", Offset = "0x9A162C")]
		public float catchSpeedThreshold;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1664", Offset = "0x9A1664")]
		public bool restoreOriginalParent;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool attachEaseIn;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve snapAttachEaseInCurve;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float snapAttachEaseInTime;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] attachEaseInAttachmentNames;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VelocityEstimator velocityEstimator;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool attached;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float attachTime;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 attachPosition;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion attachRotation;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform attachEaseInTransform;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onPickUp;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onDetachFromHand;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool snapAttachEaseInCompleted;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xB87EBC", Offset = "0xB87EBC", VA = "0xB87EBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xB87F60", Offset = "0xB87F60", VA = "0xB87F60")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xB88044", Offset = "0xB88044", VA = "0xB88044")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xB880D0", Offset = "0xB880D0", VA = "0xB880D0")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xB881B4", Offset = "0xB881B4", VA = "0xB881B4")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xB88484", Offset = "0xB88484", VA = "0xB88484")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xB88CFC", Offset = "0xB88CFC", VA = "0xB88CFC")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xB88F78", Offset = "0xB88F78", VA = "0xB88F78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9070", Offset = "0x9A9070")]
		private IEnumerator LateDetach(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xB89040", Offset = "0xB89040", VA = "0xB89040")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xB89080", Offset = "0xB89080", VA = "0xB89080")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xB890C0", Offset = "0xB890C0", VA = "0xB890C0")]
		public Throwable()
		{
		}
	}
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998CFC", Offset = "0x998CFC")]
	public class UIElement : MonoBehaviour
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEvents.UnityEventHand onHandClick;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand currentHand;

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xB89270", Offset = "0xB89270", VA = "0xB89270")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xB89360", Offset = "0xB89360", VA = "0xB89360")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xB89430", Offset = "0xB89430", VA = "0xB89430")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xB89500", Offset = "0xB89500", VA = "0xB89500")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xB895EC", Offset = "0xB895EC", VA = "0xB895EC")]
		private void OnButtonClick()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xB89648", Offset = "0xB89648", VA = "0xB89648")]
		public UIElement()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class Unparent : MonoBehaviour
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform oldParent;

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xB89650", Offset = "0xB89650", VA = "0xB89650")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xB89764", Offset = "0xB89764", VA = "0xB89764")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xB89828", Offset = "0xB89828", VA = "0xB89828")]
		public Transform GetOldParent()
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xB89830", Offset = "0xB89830", VA = "0xB89830")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public static class Util
	{
		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B1BC", Offset = "0x99B1BC")]
		private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator coroutine;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCoroutineFinished;

			[Token(Token = "0x170003F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B3")]
				[Address(RVA = "0xB8B458", Offset = "0xB8B458", VA = "0xB8B458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B5")]
				[Address(RVA = "0xB8B4C4", Offset = "0xB8B4C4", VA = "0xB8B4C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B0")]
			[Address(RVA = "0xB8AB80", Offset = "0xB8AB80", VA = "0xB8AB80")]
			[DebuggerHidden]
			public <WrapCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60023B1")]
			[Address(RVA = "0xB8B2DC", Offset = "0xB8B2DC", VA = "0xB8B2DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B2")]
			[Address(RVA = "0xB8B2E0", Offset = "0xB8B2E0", VA = "0xB8B2E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xB8B460", Offset = "0xB8B460", VA = "0xB8B460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B1CC", Offset = "0x99B1CC")]
		private sealed class <>c__47<T>
		{
			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__47<T> <>9;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, T> <>9__47_0;

			[Token(Token = "0x60023B7")]
			public <>c__47()
			{
			}

			[Token(Token = "0x60023B8")]
			internal T <Median>b__47_0(T x)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4001712")]
		public const float FeetToMeters = 0.3048f;

		[Token(Token = "0x4001713")]
		public const float FeetToCentimeters = 30.48f;

		[Token(Token = "0x4001714")]
		public const float InchesToMeters = 0.0254f;

		[Token(Token = "0x4001715")]
		public const float InchesToCentimeters = 2.54f;

		[Token(Token = "0x4001716")]
		public const float MetersToFeet = 3.28084f;

		[Token(Token = "0x4001717")]
		public const float MetersToInches = 39.3701f;

		[Token(Token = "0x4001718")]
		public const float CentimetersToFeet = 0.0328084f;

		[Token(Token = "0x4001719")]
		public const float CentimetersToInches = 0.393701f;

		[Token(Token = "0x400171A")]
		public const float KilometersToMiles = 0.621371f;

		[Token(Token = "0x400171B")]
		public const float MilesToKilometers = 1.60934f;

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xB89838", Offset = "0xB89838", VA = "0xB89838")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xB7CC3C", Offset = "0xB7CC3C", VA = "0xB7CC3C")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xB89854", Offset = "0xB89854", VA = "0xB89854")]
		public static float Approach(float target, float value, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xB8987C", Offset = "0xB8987C", VA = "0xB8987C")]
		public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xB89994", Offset = "0xB89994", VA = "0xB89994")]
		public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xB89B6C", Offset = "0xB89B6C", VA = "0xB89B6C")]
		public static Vector3 Vector3FromString(string szString)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xB89CB4", Offset = "0xB89CB4", VA = "0xB89CB4")]
		public static Vector2 Vector2FromString(string szString)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xB89DFC", Offset = "0xB89DFC", VA = "0xB89DFC")]
		public static float Normalize(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xB89E0C", Offset = "0xB89E0C", VA = "0xB89E0C")]
		public static Vector3 Vector2AsVector3(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xB89E48", Offset = "0xB89E48", VA = "0xB89E48")]
		public static Vector2 Vector3AsVector2(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xB89E78", Offset = "0xB89E78", VA = "0xB89E78")]
		public static float AngleOf(Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xB89F30", Offset = "0xB89F30", VA = "0xB89F30")]
		public static float YawOf(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x60014CE")]
		public static void Swap<T>(ref T lhs, ref T rhs)
		{
		}

		[Token(Token = "0x60014CF")]
		public static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x60014D0")]
		public static void Shuffle<T>(List<T> list)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xB89FF8", Offset = "0xB89FF8", VA = "0xB89FF8")]
		public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
		{
			return default(int);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xB8A0FC", Offset = "0xB8A0FC", VA = "0xB8A0FC")]
		public static Transform FindChild(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x60014D3")]
		public static bool IsNullOrEmpty<T>(T[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D4")]
		public static bool IsValidIndex<T>(T[] array, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D5")]
		public static bool IsValidIndex<T>(List<T> list, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D6")]
		public static int FindOrAdd<T>(List<T> list, T item)
		{
			return default(int);
		}

		[Token(Token = "0x60014D7")]
		public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		public static void FastRemove<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x60014DA")]
		public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xB8A410", Offset = "0xB8A410", VA = "0xB8A410")]
		public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xB86808", Offset = "0xB86808", VA = "0xB86808")]
		public static void DrawCross(Vector3 origin, Color crossColor, float size)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xB80C48", Offset = "0xB80C48", VA = "0xB80C48")]
		public static void ResetTransform(Transform t, bool resetScale = true)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xB8A4CC", Offset = "0xB8A4CC", VA = "0xB8A4CC")]
		public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xB8A6B8", Offset = "0xB8A6B8", VA = "0xB8A6B8")]
		public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xB8A748", Offset = "0xB8A748", VA = "0xB8A748")]
		public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xB8A868", Offset = "0xB8A868", VA = "0xB8A868")]
		public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xB8A99C", Offset = "0xB8A99C", VA = "0xB8A99C")]
		public static void IgnoreCollisions(GameObject goA, GameObject goB)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xB8AAE4", Offset = "0xB8AAE4", VA = "0xB8AAE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A90D4", Offset = "0x9A90D4")]
		public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xB8ABAC", Offset = "0xB8ABAC", VA = "0xB8ABAC")]
		public static Color ColorWithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xB8ABB4", Offset = "0xB8ABB4", VA = "0xB8ABB4")]
		public static void Quit()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xB8ABD8", Offset = "0xB8ABD8", VA = "0xB8ABD8")]
		public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
		{
			return default(decimal);
		}

		[Token(Token = "0x60014E7")]
		public static T Median<T>(this IEnumerable<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x60014E8")]
		public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xB8AC90", Offset = "0xB8AC90", VA = "0xB8AC90")]
		public static string FixupNewlines(string text)
		{
			return null;
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xB8AD48", Offset = "0xB8AD48", VA = "0xB8AD48")]
		public static float PathLength(NavMeshPath path)
		{
			return default(float);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xB8AECC", Offset = "0xB8AECC", VA = "0xB8AECC")]
		public static bool HasCommandLineArgument(string argumentName)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xB8AF64", Offset = "0xB8AF64", VA = "0xB8AF64")]
		public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xB8B030", Offset = "0xB8B030", VA = "0xB8B030")]
		public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xB8B144", Offset = "0xB8B144", VA = "0xB8B144")]
		public static void SetActive(GameObject gameObject, bool active)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xB8B1EC", Offset = "0xB8B1EC", VA = "0xB8B1EC")]
		public static string CombinePaths(params string[] paths)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000366")]
	public class AfterTimer_Component : MonoBehaviour
	{
		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B1DC", Offset = "0x99B1DC")]
		private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AfterTimer_Component <>4__this;

			[Token(Token = "0x170003F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023BC")]
				[Address(RVA = "0x12D89C0", Offset = "0x12D89C0", VA = "0x12D89C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023BE")]
				[Address(RVA = "0x12D8A2C", Offset = "0x12D8A2C", VA = "0x12D8A2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B9")]
			[Address(RVA = "0x12D8824", Offset = "0x12D8824", VA = "0x12D8824")]
			[DebuggerHidden]
			public <Wait>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60023BA")]
			[Address(RVA = "0x12D88BC", Offset = "0x12D88BC", VA = "0x12D88BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x12D88C0", Offset = "0x12D88C0", VA = "0x12D88C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x12D89C8", Offset = "0x12D89C8", VA = "0x12D89C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action callback;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float triggerTime;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool timerActive;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool triggerOnEarlyDestroy;

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x12D8754", Offset = "0x12D8754", VA = "0x12D8754")]
		public void Init(float _time, Action _callback, bool earlydestroy)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x12D87A4", Offset = "0x12D87A4", VA = "0x12D87A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9168", Offset = "0x9A9168")]
		private IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x12D8850", Offset = "0x12D8850", VA = "0x12D8850")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x12D88B4", Offset = "0x12D88B4", VA = "0x12D88B4")]
		public AfterTimer_Component()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B1EC", Offset = "0x99B1EC")]
		private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x170003F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023C2")]
				[Address(RVA = "0xB8BC2C", Offset = "0xB8BC2C", VA = "0xB8BC2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C4")]
				[Address(RVA = "0xB8BC98", Offset = "0xB8BC98", VA = "0xB8BC98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0xB8B7E4", Offset = "0xB8B7E4", VA = "0xB8B7E4")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0xB8B824", Offset = "0xB8B824", VA = "0xB8B824", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0xB8B828", Offset = "0xB8B828", VA = "0xB8B828", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xB8BC34", Offset = "0xB8BC34", VA = "0xB8BC34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A169C", Offset = "0x9A169C")]
		public int velocityAverageFrames;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A16D4", Offset = "0x9A16D4")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xB8843C", Offset = "0xB8843C", VA = "0xB8843C")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xB88910", Offset = "0xB88910", VA = "0xB88910")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xB8895C", Offset = "0xB8895C", VA = "0xB8895C")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xB88B2C", Offset = "0xB88B2C", VA = "0xB88B2C")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xB8B54C", Offset = "0xB8B54C", VA = "0xB8B54C")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xB8B744", Offset = "0xB8B744", VA = "0xB8B744")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xB8B4CC", Offset = "0xB8B4CC", VA = "0xB8B4CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A91CC", Offset = "0x9A91CC")]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xB8B810", Offset = "0xB8B810", VA = "0xB8B810")]
		public VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class ControllerButtonHints : MonoBehaviour
	{
		[Token(Token = "0x2000697")]
		private enum OffsetType
		{
			[Token(Token = "0x4002189")]
			Up,
			[Token(Token = "0x400218A")]
			Right,
			[Token(Token = "0x400218B")]
			Forward,
			[Token(Token = "0x400218C")]
			Back
		}

		[Token(Token = "0x2000698")]
		private class ButtonHintInfo
		{
			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string componentName;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshRenderer> renderers;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform localTransform;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject textHintObject;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform textStartAnchor;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform textEndAnchor;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 textEndOffsetDir;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform canvasOffset;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Text text;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextMesh textMesh;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Canvas textCanvas;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LineRenderer line;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float distanceFromCenter;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool textHintActive;

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0x12DF190", Offset = "0x12DF190", VA = "0x12DF190")]
			public ButtonHintInfo()
			{
			}
		}

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B1FC", Offset = "0x99B1FC")]
		private sealed class <TestButtonHints>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x170003F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023C9")]
				[Address(RVA = "0x12E0DDC", Offset = "0x12E0DDC", VA = "0x12E0DDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023CB")]
				[Address(RVA = "0x12E0E48", Offset = "0x12E0E48", VA = "0x12E0E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x12DF9D8", Offset = "0x12DF9D8", VA = "0x12DF9D8")]
			[DebuggerHidden]
			public <TestButtonHints>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x12E0AF8", Offset = "0x12E0AF8", VA = "0x12E0AF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x12E0AFC", Offset = "0x12E0AFC", VA = "0x12E0AFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x12E0DE4", Offset = "0x12E0DE4", VA = "0x12E0DE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B20C", Offset = "0x99B20C")]
		private sealed class <TestTextHints>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x170003F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023CF")]
				[Address(RVA = "0x12E10E4", Offset = "0x12E10E4", VA = "0x12E10E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D1")]
				[Address(RVA = "0x12E1150", Offset = "0x12E1150", VA = "0x12E1150", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x12DFA84", Offset = "0x12DFA84", VA = "0x12DFA84")]
			[DebuggerHidden]
			public <TestTextHints>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x12E0E50", Offset = "0x12E0E50", VA = "0x12E0E50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x12E0E54", Offset = "0x12E0E54", VA = "0x12E0E54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x12E10EC", Offset = "0x12E10EC", VA = "0x12E10EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material controllerMaterial;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color flashColor;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textHintPrefab;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A170C", Offset = "0x9A170C")]
		public bool debugHints;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Player player;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MeshRenderer> flashingRenderers;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float tickCount;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<EVRButtonId, ButtonHintInfo> buttonHintInfos;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform textHintParent;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<string, ulong>> componentButtonMasks;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int colorID;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A1744", Offset = "0x9A1744")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 centerPosition;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x17000211")]
		public bool initialized
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x12DCA60", Offset = "0x12DCA60", VA = "0x12DCA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9230", Offset = "0x9A9230")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x12DCA68", Offset = "0x12DCA68", VA = "0x12DCA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9240", Offset = "0x9A9240")]
			private set
			{
			}
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x12DCA74", Offset = "0x12DCA74", VA = "0x12DCA74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x12DCB40", Offset = "0x12DCB40", VA = "0x12DCB40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x12DCB74", Offset = "0x12DCB74", VA = "0x12DCB74")]
		private void HintDebugLog(string msg)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x12DCC20", Offset = "0x12DCC20", VA = "0x12DCC20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x12DCC40", Offset = "0x12DCC40", VA = "0x12DCC40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x12DCCE0", Offset = "0x12DCCE0", VA = "0x12DCCE0")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x12DCE78", Offset = "0x12DCE78", VA = "0x12DCE78")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x12DD06C", Offset = "0x12DD06C", VA = "0x12DD06C")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool succeess)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x12DD9B8", Offset = "0x12DD9B8", VA = "0x12DD9B8")]
		private void CreateAndAddButtonInfo(EVRButtonId buttonID)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x12DEC1C", Offset = "0x12DEC1C", VA = "0x12DEC1C")]
		private void ComputeTextEndTransforms()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x12DF198", Offset = "0x12DF198", VA = "0x12DF198")]
		private void ShowButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x12DCD04", Offset = "0x12DCD04", VA = "0x12DCD04")]
		private void HideAllButtonHints()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x12DF548", Offset = "0x12DF548", VA = "0x12DF548")]
		private void HideButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x12DF7E8", Offset = "0x12DF7E8", VA = "0x12DF7E8")]
		private bool IsButtonHintActive(EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x12DF958", Offset = "0x12DF958", VA = "0x12DF958")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9250", Offset = "0x9A9250")]
		private IEnumerator TestButtonHints()
		{
			return null;
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x12DFA04", Offset = "0x12DFA04", VA = "0x12DFA04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A92B4", Offset = "0x9A92B4")]
		private IEnumerator TestTextHints()
		{
			return null;
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x12DFAB0", Offset = "0x12DFAB0", VA = "0x12DFAB0")]
		private void Update()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x12DFDC8", Offset = "0x12DFDC8", VA = "0x12DFDC8")]
		private void UpdateTextHint(ButtonHintInfo hintInfo)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x12DCC78", Offset = "0x12DCC78", VA = "0x12DCC78")]
		private void Clear()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x12E00D4", Offset = "0x12E00D4", VA = "0x12E00D4")]
		private void ShowText(EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x12E02BC", Offset = "0x12E02BC", VA = "0x12E02BC")]
		private void HideText(EVRButtonId button)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x12DCD44", Offset = "0x12DCD44", VA = "0x12DCD44")]
		private void HideAllText()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x12E03B8", Offset = "0x12E03B8", VA = "0x12E03B8")]
		private string GetActiveHintText(EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x12E0488", Offset = "0x12E0488", VA = "0x12E0488")]
		private static ControllerButtonHints GetControllerButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x12D9CC0", Offset = "0x12D9CC0", VA = "0x12D9CC0")]
		public static void ShowButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x12D9A0C", Offset = "0x12D9A0C", VA = "0x12D9A0C")]
		public static void HideButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x12E0564", Offset = "0x12E0564", VA = "0x12E0564")]
		public static void HideAllButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x12E0604", Offset = "0x12E0604", VA = "0x12E0604")]
		public static bool IsButtonHintActive(Hand hand, EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x12E06BC", Offset = "0x12E06BC", VA = "0x12E06BC")]
		public static void ShowTextHint(Hand hand, EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x12E078C", Offset = "0x12E078C", VA = "0x12E078C")]
		public static void HideTextHint(Hand hand, EVRButtonId button)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x12E0840", Offset = "0x12E0840", VA = "0x12E0840")]
		public static void HideAllTextHints(Hand hand)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x12E08E0", Offset = "0x12E08E0", VA = "0x12E08E0")]
		public static string GetActiveHintText(Hand hand, EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x12E09A8", Offset = "0x12E09A8", VA = "0x12E09A8")]
		public ControllerButtonHints()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class ControllerHintsExample : MonoBehaviour
	{
		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B21C", Offset = "0x99B21C")]
		private sealed class <TestButtonHints>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x170003FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023D5")]
				[Address(RVA = "0x12E17B4", Offset = "0x12E17B4", VA = "0x12E17B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D7")]
				[Address(RVA = "0x12E1820", Offset = "0x12E1820", VA = "0x12E1820", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x12E1414", Offset = "0x12E1414", VA = "0x12E1414")]
			[DebuggerHidden]
			public <TestButtonHints>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x12E1474", Offset = "0x12E1474", VA = "0x12E1474", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x12E1478", Offset = "0x12E1478", VA = "0x12E1478", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x12E17BC", Offset = "0x12E17BC", VA = "0x12E17BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B22C", Offset = "0x99B22C")]
		private sealed class <TestTextHints>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x170003FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023DB")]
				[Address(RVA = "0x12E1AC8", Offset = "0x12E1AC8", VA = "0x12E1AC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023DD")]
				[Address(RVA = "0x12E1B34", Offset = "0x12E1B34", VA = "0x12E1B34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x12E1440", Offset = "0x12E1440", VA = "0x12E1440")]
			[DebuggerHidden]
			public <TestTextHints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x12E1828", Offset = "0x12E1828", VA = "0x12E1828", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x12E182C", Offset = "0x12E182C", VA = "0x12E182C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x12E1AD0", Offset = "0x12E1AD0", VA = "0x12E1AD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine buttonHintCoroutine;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine textHintCoroutine;

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x12E1158", Offset = "0x12E1158", VA = "0x12E1158")]
		public void ShowButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x12E1244", Offset = "0x12E1244", VA = "0x12E1244")]
		public void ShowTextHints(Hand hand)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x12E1330", Offset = "0x12E1330", VA = "0x12E1330")]
		public void DisableHints()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x12E11C4", Offset = "0x12E11C4", VA = "0x12E11C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9318", Offset = "0x9A9318")]
		private IEnumerator TestButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x12E12B0", Offset = "0x12E12B0", VA = "0x12E12B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A937C", Offset = "0x9A937C")]
		private IEnumerator TestTextHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x12E146C", Offset = "0x12E146C", VA = "0x12E146C")]
		public ControllerHintsExample()
		{
		}
	}
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x998D70", Offset = "0x998D70")]
	public class InteractableExample : MonoBehaviour
	{
		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh textMesh;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPosition;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion oldRotation;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float attachTime;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xB7ACF0", Offset = "0xB7ACF0", VA = "0xB7ACF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xB7AD74", Offset = "0xB7AD74", VA = "0xB7AD74")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xB7AE08", Offset = "0xB7AE08", VA = "0xB7AE08")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xB7AE64", Offset = "0xB7AE64", VA = "0xB7AE64")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xB7B068", Offset = "0xB7B068", VA = "0xB7B068")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xB7B10C", Offset = "0xB7B10C", VA = "0xB7B10C")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xB7B1A0", Offset = "0xB7B1A0", VA = "0xB7B1A0")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xB7B27C", Offset = "0xB7B27C", VA = "0xB7B27C")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xB7B280", Offset = "0xB7B280", VA = "0xB7B280")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xB7B284", Offset = "0xB7B284", VA = "0xB7B284")]
		public InteractableExample()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class AllowTeleportWhileAttachedToHand : MonoBehaviour
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool teleportAllowed;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideHoverLock;

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x12D8A34", Offset = "0x12D8A34", VA = "0x12D8A34")]
		public AllowTeleportWhileAttachedToHand()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class ChaperoneInfo : MonoBehaviour
	{
		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B23C", Offset = "0x99B23C")]
		private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChaperoneInfo <>4__this;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRChaperone <chaperone>5__2;

			[Token(Token = "0x170003FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023E1")]
				[Address(RVA = "0x12D938C", Offset = "0x12D938C", VA = "0x12D938C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000400")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023E3")]
				[Address(RVA = "0x12D93F8", Offset = "0x12D93F8", VA = "0x12D93F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x12D8F88", Offset = "0x12D8F88", VA = "0x12D8F88")]
			[DebuggerHidden]
			public <Start>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x12D902C", Offset = "0x12D902C", VA = "0x12D902C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x12D9030", Offset = "0x12D9030", VA = "0x12D9030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E2")]
			[Address(RVA = "0x12D9394", Offset = "0x12D9394", VA = "0x12D9394", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A1754", Offset = "0x9A1754")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A1764", Offset = "0x9A1764")]
		private float <playAreaSizeX>k__BackingField;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A1774", Offset = "0x9A1774")]
		private float <playAreaSizeZ>k__BackingField;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A1784", Offset = "0x9A1784")]
		private bool <roomscale>k__BackingField;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event Initialized;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ChaperoneInfo _instance;

		[Token(Token = "0x17000212")]
		public bool initialized
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x12D8C54", Offset = "0x12D8C54", VA = "0x12D8C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A93E0", Offset = "0x9A93E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x12D8C5C", Offset = "0x12D8C5C", VA = "0x12D8C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A93F0", Offset = "0x9A93F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public float playAreaSizeX
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x12D8C68", Offset = "0x12D8C68", VA = "0x12D8C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9400", Offset = "0x9A9400")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x12D8C70", Offset = "0x12D8C70", VA = "0x12D8C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9410", Offset = "0x9A9410")]
			private set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public float playAreaSizeZ
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x12D8C78", Offset = "0x12D8C78", VA = "0x12D8C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9420", Offset = "0x9A9420")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x12D8C80", Offset = "0x12D8C80", VA = "0x12D8C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9430", Offset = "0x9A9430")]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public bool roomscale
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x12D8C88", Offset = "0x12D8C88", VA = "0x12D8C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9440", Offset = "0x9A9440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x12D8C90", Offset = "0x12D8C90", VA = "0x12D8C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9450", Offset = "0x9A9450")]
			private set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public static ChaperoneInfo instance
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x12D8D38", Offset = "0x12D8D38", VA = "0x12D8D38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x12D8C9C", Offset = "0x12D8C9C", VA = "0x12D8C9C")]
		public static SteamVR_Events.Action InitializedAction(UnityAction action)
		{
			return null;
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x12D8F08", Offset = "0x12D8F08", VA = "0x12D8F08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9460", Offset = "0x9A9460")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x12D8FB4", Offset = "0x12D8FB4", VA = "0x12D8FB4")]
		public ChaperoneInfo()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class IgnoreTeleportTrace : MonoBehaviour
	{
		[Token(Token = "0x600153D")]
		[Address(RVA = "0xB79988", Offset = "0xB79988", VA = "0xB79988")]
		public IgnoreTeleportTrace()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class Teleport : MonoBehaviour
	{
		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B24C", Offset = "0x99B24C")]
		private sealed class <TeleportHintCoroutine>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Teleport <>4__this;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <prevBreakTime>5__2;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <prevHapticPulseTime>5__3;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <pulsed>5__4;

			[Token(Token = "0x17000401")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023E7")]
				[Address(RVA = "0xB85F48", Offset = "0xB85F48", VA = "0xB85F48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000402")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023E9")]
				[Address(RVA = "0xB85FB4", Offset = "0xB85FB4", VA = "0xB85FB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xB85900", Offset = "0xB85900", VA = "0xB85900")]
			[DebuggerHidden]
			public <TeleportHintCoroutine>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x60023E5")]
			[Address(RVA = "0xB85CD0", Offset = "0xB85CD0", VA = "0xB85CD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xB85CD4", Offset = "0xB85CD4", VA = "0xB85CD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xB85F50", Offset = "0xB85F50", VA = "0xB85F50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask traceLayerMask;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask floorFixupTraceLayerMask;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floorFixupMaximumTraceDistance;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material areaVisibleMaterial;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material areaLockedMaterial;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material areaHighlightedMaterial;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material pointVisibleMaterial;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material pointLockedMaterial;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material pointHighlightedMaterial;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform destinationReticleTransform;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform invalidReticleTransform;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject playAreaPreviewCorner;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject playAreaPreviewSide;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color pointerValidColor;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color pointerInvalidColor;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color pointerLockedColor;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool showPlayAreaMarker;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float teleportFadeTime;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float meshFadeTime;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float arcDistance;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A1794", Offset = "0x9A1794")]
		public Transform onActivateObjectTransform;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform onDeactivateObjectTransform;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float activateObjectTime;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float deactivateObjectTime;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A17CC", Offset = "0x9A17CC")]
		public AudioSource pointerAudioSource;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioSource loopingAudioSource;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioSource headAudioSource;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioSource reticleAudioSource;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A1804", Offset = "0x9A1804")]
		public AudioClip teleportSound;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip pointerStartSound;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip pointerLoopSound;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip pointerStopSound;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip goodHighlightSound;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip badHighlightSound;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9A183C", Offset = "0x9A183C")]
		public bool debugFloor;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool showOffsetReticle;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform offsetReticleTransform;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MeshRenderer floorDebugSphere;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public LineRenderer floorDebugLine;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private LineRenderer pointerLineRenderer;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject teleportPointerObject;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform pointerStartTransform;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Hand pointerHand;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Player player;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TeleportArc teleportArc;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool visible;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private TeleportMarkerBase[] teleportMarkers;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private TeleportMarkerBase pointedAtTeleportMarker;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private TeleportMarkerBase teleportingToMarker;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 pointedAtPosition;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 prevPointedAtPosition;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool teleporting;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float currentFadeTime;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float meshAlphaPercent;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float pointerShowStartTime;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float pointerHideStartTime;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool meshFading;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fullTintAlpha;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float invalidReticleMinScale;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float invalidReticleMaxScale;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float invalidReticleMinScaleDistance;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float invalidReticleMaxScaleDistance;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 invalidReticleScale;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion invalidReticleTargetRotation;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Transform playAreaPreviewTransform;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Transform[] playAreaPreviewCorners;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform[] playAreaPreviewSides;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float loopingAudioMaxVolume;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine hintCoroutine;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool originalHoverLockState;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Interactable originalHoveringInteractable;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private AllowTeleportWhileAttachedToHand allowTeleportWhileAttached;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 startingFeetOffset;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private bool movedFeetFarEnough;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private SteamVR_Events.Action chaperoneInfoInitializedAction;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event<float> ChangeScene;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SteamVR_Events.Event<TeleportMarkerBase> Player;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SteamVR_Events.Event<TeleportMarkerBase> PlayerPre;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Teleport _instance;

		[Token(Token = "0x17000217")]
		public static Teleport instance
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0xB81354", Offset = "0xB81354", VA = "0xB81354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xB81168", Offset = "0xB81168", VA = "0xB81168")]
		public static SteamVR_Events.Action<float> ChangeSceneAction(UnityAction<float> action)
		{
			return null;
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xB8120C", Offset = "0xB8120C", VA = "0xB8120C")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xB812B0", Offset = "0xB812B0", VA = "0xB812B0")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerPreAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xB8147C", Offset = "0xB8147C", VA = "0xB8147C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xB81688", Offset = "0xB81688", VA = "0xB81688")]
		private void Start()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xB81C58", Offset = "0xB81C58", VA = "0xB81C58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xB82918", Offset = "0xB82918", VA = "0xB82918")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xB81B08", Offset = "0xB81B08", VA = "0xB81B08")]
		private void CheckForSpawnPoint()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xB82DE8", Offset = "0xB82DE8", VA = "0xB82DE8")]
		public void HideTeleportPointer()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xB82E70", Offset = "0xB82E70", VA = "0xB82E70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xB839FC", Offset = "0xB839FC", VA = "0xB839FC")]
		private void UpdatePointer()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xB84DAC", Offset = "0xB84DAC", VA = "0xB84DAC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xB81C90", Offset = "0xB81C90", VA = "0xB81C90")]
		private void OnChaperoneInfoInitialized()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xB817D4", Offset = "0xB817D4", VA = "0xB817D4")]
		private void HidePointer()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xB833D4", Offset = "0xB833D4", VA = "0xB833D4")]
		private void ShowPointer(Hand newPointerHand, Hand oldPointerHand)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xB84510", Offset = "0xB84510", VA = "0xB84510")]
		private void UpdateTeleportColors()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xB85270", Offset = "0xB85270", VA = "0xB85270")]
		private void PlayAudioClip(AudioSource source, AudioClip clip)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xB853C4", Offset = "0xB853C4", VA = "0xB853C4")]
		private void PlayPointerHaptic(bool validLocation)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xB83248", Offset = "0xB83248", VA = "0xB83248")]
		private void TryTeleportPlayer()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xB85404", Offset = "0xB85404", VA = "0xB85404")]
		private void InitiateTeleportFade()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xB82950", Offset = "0xB82950", VA = "0xB82950")]
		private void TeleportPlayer()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xB848AC", Offset = "0xB848AC", VA = "0xB848AC")]
		private void HighlightSelected(TeleportMarkerBase hitTeleportMarker)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xB85838", Offset = "0xB85838", VA = "0xB85838")]
		public void ShowTeleportHint()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xB85664", Offset = "0xB85664", VA = "0xB85664")]
		public void CancelTeleportHint()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xB85880", Offset = "0xB85880", VA = "0xB85880")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A94C4", Offset = "0x9A94C4")]
		private IEnumerator TeleportHintCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xB8592C", Offset = "0xB8592C", VA = "0xB8592C")]
		public bool IsEligibleForTeleport(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xB851E0", Offset = "0xB851E0", VA = "0xB851E0")]
		private bool ShouldOverrideHoverLock()
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xB83180", Offset = "0xB83180", VA = "0xB83180")]
		private bool WasTeleportButtonReleased(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xB83934", Offset = "0xB83934", VA = "0xB83934")]
		private bool IsTeleportButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xB8330C", Offset = "0xB8330C", VA = "0xB8330C")]
		private bool WasTeleportButtonPressed(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xB85300", Offset = "0xB85300", VA = "0xB85300")]
		private Transform GetPointerStartTransform(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xB85AE4", Offset = "0xB85AE4", VA = "0xB85AE4")]
		public Teleport()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class TeleportArc : MonoBehaviour
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1874", Offset = "0x9A1874")]
		public float arcDuration;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A18AC", Offset = "0x9A18AC")]
		public float segmentBreak;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A18E4", Offset = "0x9A18E4")]
		public float arcSpeed;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float arcTimeOffset;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prevThickness;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int prevSegmentCount;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showArc;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 startPos;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useGravity;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool arcInvalid;

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xB85FBC", Offset = "0xB85FBC", VA = "0xB85FBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xB85FE4", Offset = "0xB85FE4", VA = "0xB85FE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xB86030", Offset = "0xB86030", VA = "0xB86030")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xB84634", Offset = "0xB84634", VA = "0xB84634")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xB852E8", Offset = "0xB852E8", VA = "0xB852E8")]
		public void Show()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xB852B0", Offset = "0xB852B0", VA = "0xB852B0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xB84688", Offset = "0xB84688", VA = "0xB84688")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xB86710", Offset = "0xB86710", VA = "0xB86710")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xB84B60", Offset = "0xB84B60", VA = "0xB84B60")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xB864B8", Offset = "0xB864B8", VA = "0xB864B8")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xB84C54", Offset = "0xB84C54", VA = "0xB84C54")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xB86424", Offset = "0xB86424", VA = "0xB86424")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xB86AFC", Offset = "0xB86AFC", VA = "0xB86AFC")]
		public TeleportArc()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class TeleportArea : TeleportMarkerBase
	{
		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A192C", Offset = "0x9A192C")]
		private Bounds <meshBounds>k__BackingField;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer areaMesh;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int tintColorId;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color visibleTintColor;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color highlightedTintColor;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color lockedTintColor;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool highlighted;

		[Token(Token = "0x17000218")]
		public Bounds meshBounds
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0xB86B24", Offset = "0xB86B24", VA = "0xB86B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9528", Offset = "0x9A9528")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x600156E")]
			[Address(RVA = "0xB86B38", Offset = "0xB86B38", VA = "0xB86B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9538", Offset = "0x9A9538")]
			private set
			{
			}
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xB86B4C", Offset = "0xB86B4C", VA = "0xB86B4C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xB86CEC", Offset = "0xB86CEC", VA = "0xB86CEC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xB86DBC", Offset = "0xB86DBC", VA = "0xB86DBC", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xB86DC4", Offset = "0xB86DC4", VA = "0xB86DC4", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xB86DCC", Offset = "0xB86DCC", VA = "0xB86DCC", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xB86EA8", Offset = "0xB86EA8", VA = "0xB86EA8", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xB86FC4", Offset = "0xB86FC4", VA = "0xB86FC4", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xB87078", Offset = "0xB87078", VA = "0xB87078")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xB86BD0", Offset = "0xB86BD0", VA = "0xB86BD0")]
		private bool CalculateBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xB86F68", Offset = "0xB86F68", VA = "0xB86F68")]
		private Color GetTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xB87154", Offset = "0xB87154", VA = "0xB87154")]
		public TeleportArea()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public abstract class TeleportMarkerBase : MonoBehaviour
	{
		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool locked;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool markerActive;

		[Token(Token = "0x17000219")]
		public virtual bool showReticle
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0xB871C0", Offset = "0xB871C0", VA = "0xB871C0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xB871C8", Offset = "0xB871C8", VA = "0xB871C8")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xB871DC", Offset = "0xB871DC", VA = "0xB871DC", Slot = "5")]
		public virtual void TeleportPlayer(Vector3 pointedAtPosition)
		{
		}

		[Token(Token = "0x600157D")]
		public abstract void UpdateVisuals();

		[Token(Token = "0x600157E")]
		public abstract void Highlight(bool highlight);

		[Token(Token = "0x600157F")]
		public abstract void SetAlpha(float tintAlpha, float alphaPercent);

		[Token(Token = "0x6001580")]
		public abstract bool ShouldActivate(Vector3 playerPosition);

		[Token(Token = "0x6001581")]
		public abstract bool ShouldMovePlayer();

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xB871B0", Offset = "0xB871B0", VA = "0xB871B0")]
		protected TeleportMarkerBase()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class TeleportPoint : TeleportMarkerBase
	{
		[Token(Token = "0x200069F")]
		public enum TeleportPointType
		{
			[Token(Token = "0x40021B2")]
			MoveToLocation,
			[Token(Token = "0x40021B3")]
			SwitchToNewScene
		}

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TeleportPointType teleportType;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string switchToScene;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color titleVisibleColor;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color titleHighlightedColor;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color titleLockedColor;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool playerSpawnPoint;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool gotReleventComponents;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer markerMesh;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshRenderer switchSceneIcon;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer moveLocationIcon;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer lockedIcon;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer pointIcon;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform lookAtJointTransform;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animation animation;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Text titleText;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player player;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lookAtPosition;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int tintColorID;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color tintColor;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color titleColor;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float fullTitleAlpha;

		[Token(Token = "0x40017C6")]
		private const string switchSceneAnimation = "switch_scenes_idle";

		[Token(Token = "0x40017C7")]
		private const string moveLocationAnimation = "move_location_idle";

		[Token(Token = "0x40017C8")]
		private const string lockedAnimation = "locked_idle";

		[Token(Token = "0x1700021A")]
		public override bool showReticle
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0xB871E0", Offset = "0xB871E0", VA = "0xB871E0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xB871E8", Offset = "0xB871E8", VA = "0xB871E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xB874D0", Offset = "0xB874D0", VA = "0xB874D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xB87500", Offset = "0xB87500", VA = "0xB87500")]
		private void Update()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xB87594", Offset = "0xB87594", VA = "0xB87594", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xB8766C", Offset = "0xB8766C", VA = "0xB8766C", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xB87674", Offset = "0xB87674", VA = "0xB87674", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xB87850", Offset = "0xB87850", VA = "0xB87850", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xB879D0", Offset = "0xB879D0", VA = "0xB879D0", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xB8778C", Offset = "0xB8778C", VA = "0xB8778C")]
		public void SetMeshMaterials(Material material, Color textColor)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xB85750", Offset = "0xB85750", VA = "0xB85750")]
		public void TeleportToScene()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xB872E8", Offset = "0xB872E8", VA = "0xB872E8")]
		public void GetRelevantComponents()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xB87AF0", Offset = "0xB87AF0", VA = "0xB87AF0")]
		public void ReleaseRelevantComponents()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xB87B64", Offset = "0xB87B64", VA = "0xB87B64")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xB87E1C", Offset = "0xB87E1C", VA = "0xB87E1C")]
		public TeleportPoint()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x2000373")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x6001592")]
		[Address(RVA = "0xD742B0", Offset = "0xD742B0", VA = "0xD742B0")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xD743B0", Offset = "0xD743B0", VA = "0xD743B0")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001594")]
		[Address(RVA = "0xD7490C", Offset = "0xD7490C", VA = "0xD7490C")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xD749FC", Offset = "0xD749FC", VA = "0xD749FC")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xD74A44", Offset = "0xD74A44", VA = "0xD74A44")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xD74954", Offset = "0xD74954", VA = "0xD74954")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xD74A8C", Offset = "0xD74A8C", VA = "0xD74A8C")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TermsPopup", RVA = "0x9A193C", Offset = "0x9A193C")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xD74A94", Offset = "0xD74A94", VA = "0xD74A94")]
		public void Start()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xD74D80", Offset = "0xD74D80", VA = "0xD74D80")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x600159B")]
		[Address(RVA = "0xD74D88", Offset = "0xD74D88", VA = "0xD74D88", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xD74E38", Offset = "0xD74E38", VA = "0xD74E38")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xCD7920", Offset = "0xCD7920", VA = "0xCD7920")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xCD7F7C", Offset = "0xCD7F7C", VA = "0xCD7F7C")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xCD8190", Offset = "0xCD8190", VA = "0xCD8190")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xCD822C", Offset = "0xCD822C", VA = "0xCD822C")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xCD8040", Offset = "0xCD8040", VA = "0xCD8040")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xCD844C", Offset = "0xCD844C", VA = "0xCD844C")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xCD8694", Offset = "0xCD8694", VA = "0xCD8694")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xCD869C", Offset = "0xCD869C", VA = "0xCD869C")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xCD86A4", Offset = "0xCD86A4", VA = "0xCD86A4")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xCD86AC", Offset = "0xCD86AC", VA = "0xCD86AC")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xCD872C", Offset = "0xCD872C", VA = "0xCD872C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xCD87C4", Offset = "0xCD87C4", VA = "0xCD87C4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xCD8828", Offset = "0xCD8828", VA = "0xCD8828", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xCD8830", Offset = "0xCD8830", VA = "0xCD8830")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xBADB8C", Offset = "0xBADB8C", VA = "0xBADB8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xBADBE4", Offset = "0xBADBE4", VA = "0xBADBE4")]
		private void test()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xBADC98", Offset = "0xBADC98", VA = "0xBADC98")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20006A0")]
		public enum eFileType
		{
			[Token(Token = "0x40021B5")]
			Raw,
			[Token(Token = "0x40021B6")]
			Persistent,
			[Token(Token = "0x40021B7")]
			Temporal,
			[Token(Token = "0x40021B8")]
			Streaming
		}

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xCC7994", Offset = "0xCC7994", VA = "0xCC7994")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xCC7E1C", Offset = "0xCC7E1C", VA = "0xCC7E1C")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xCD5250", Offset = "0xCD5250", VA = "0xCD5250")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xCD5300", Offset = "0xCD5300", VA = "0xCD5300")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xCD53B0", Offset = "0xCD53B0", VA = "0xCD53B0")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xCD5450", Offset = "0xCD5450", VA = "0xCD5450")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xCD54F0", Offset = "0xCD54F0", VA = "0xCD54F0")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xCD55C0", Offset = "0xCD55C0", VA = "0xCD55C0")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xCD5688", Offset = "0xCD5688", VA = "0xCD5688")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xCD5750", Offset = "0xCD5750", VA = "0xCD5750")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037B")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xD807DC", Offset = "0xD807DC", VA = "0xD807DC", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xD80A88", Offset = "0xD80A88", VA = "0xD80A88", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xD80CC4", Offset = "0xD80CC4", VA = "0xD80CC4", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xD80ECC", Offset = "0xD80ECC", VA = "0xD80ECC", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xD80ED4", Offset = "0xD80ED4", VA = "0xD80ED4", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xD80EE0", Offset = "0xD80EE0", VA = "0xD80EE0", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xD80EE8", Offset = "0xD80EE8", VA = "0xD80EE8")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xD80F94", Offset = "0xD80F94", VA = "0xD80F94", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xD81234", Offset = "0xD81234", VA = "0xD81234", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xD814C0", Offset = "0xD814C0", VA = "0xD814C0", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xD81740", Offset = "0xD81740", VA = "0xD81740", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xD819C0", Offset = "0xD819C0", VA = "0xD819C0")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xD819C8", Offset = "0xD819C8", VA = "0xD819C8")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xD73CEC", Offset = "0xD73CEC", VA = "0xD73CEC", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xD741A0", Offset = "0xD741A0", VA = "0xD741A0", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xD74204", Offset = "0xD74204", VA = "0xD74204", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xD742A8", Offset = "0xD742A8", VA = "0xD742A8")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xBAC128", Offset = "0xBAC128", VA = "0xBAC128")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xBAC158", Offset = "0xBAC158", VA = "0xBAC158")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xBAC344", Offset = "0xBAC344", VA = "0xBAC344")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xBAC630", Offset = "0xBAC630", VA = "0xBAC630")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xBAC454", Offset = "0xBAC454", VA = "0xBAC454")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xBAC9E8", Offset = "0xBAC9E8", VA = "0xBAC9E8")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037F")]
	public class EventCallback
	{
		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xD747A8", Offset = "0xD747A8", VA = "0xD747A8")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xD74810", Offset = "0xD74810", VA = "0xD74810")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xD748A4", Offset = "0xD748A4", VA = "0xD748A4")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public enum ePluralType
	{
		[Token(Token = "0x40017D6")]
		Zero,
		[Token(Token = "0x40017D7")]
		One,
		[Token(Token = "0x40017D8")]
		Two,
		[Token(Token = "0x40017D9")]
		Few,
		[Token(Token = "0x40017DA")]
		Many,
		[Token(Token = "0x40017DB")]
		Plural
	}
	[Token(Token = "0x2000381")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20006A1")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xD74E40", Offset = "0xD74E40", VA = "0xD74E40")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xD751E4", Offset = "0xD751E4", VA = "0xD751E4")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xD75084", Offset = "0xD75084", VA = "0xD75084")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xD756B0", Offset = "0xD756B0", VA = "0xD756B0")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xD757E8", Offset = "0xD757E8", VA = "0xD757E8")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xD758B0", Offset = "0xD758B0", VA = "0xD758B0")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xD75A30", Offset = "0xD75A30", VA = "0xD75A30")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xD75BA8", Offset = "0xD75BA8", VA = "0xD75BA8")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xD75E3C", Offset = "0xD75E3C", VA = "0xD75E3C")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xD75FD4", Offset = "0xD75FD4", VA = "0xD75FD4")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xD76144", Offset = "0xD76144", VA = "0xD76144")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xD762D0", Offset = "0xD762D0", VA = "0xD762D0")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xD76454", Offset = "0xD76454", VA = "0xD76454")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xD76B64", Offset = "0xD76B64", VA = "0xD76B64")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xD76B4C", Offset = "0xD76B4C", VA = "0xD76B4C")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000382")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20006A2")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x20006A3")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B25C", Offset = "0x99B25C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0xD7CBF8", Offset = "0xD7CBF8", VA = "0xD7CBF8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60023F3")]
			[Address(RVA = "0xD7FAF0", Offset = "0xD7FAF0", VA = "0xD7FAF0")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B26C", Offset = "0x99B26C")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000403")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023F7")]
				[Address(RVA = "0xD7FD78", Offset = "0xD7FD78", VA = "0xD7FD78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000404")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023F9")]
				[Address(RVA = "0xD7FDE4", Offset = "0xD7FDE4", VA = "0xD7FDE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0xD7DE60", Offset = "0xD7DE60", VA = "0xD7DE60")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60023F5")]
			[Address(RVA = "0xD7FBD4", Offset = "0xD7FBD4", VA = "0xD7FBD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0xD7FBD8", Offset = "0xD7FBD8", VA = "0xD7FBD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0xD7FD80", Offset = "0xD7FD80", VA = "0xD7FD80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xD7C8E8", Offset = "0xD7C8E8", VA = "0xD7C8E8")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xD7C9A0", Offset = "0xD7C9A0", VA = "0xD7C9A0")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xD7D254", Offset = "0xD7D254", VA = "0xD7D254")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xD7D1C0", Offset = "0xD7D1C0", VA = "0xD7D1C0")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xD7D85C", Offset = "0xD7D85C", VA = "0xD7D85C")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xD7D8E8", Offset = "0xD7D8E8", VA = "0xD7D8E8")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xD7D78C", Offset = "0xD7D78C", VA = "0xD7D78C")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xD7DE00", Offset = "0xD7DE00", VA = "0xD7DE00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9548", Offset = "0x9A9548")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xD7DE8C", Offset = "0xD7DE8C", VA = "0xD7DE8C")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xD7E52C", Offset = "0xD7E52C", VA = "0xD7E52C")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xD7E5E4", Offset = "0xD7E5E4", VA = "0xD7E5E4")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xD7CFE0", Offset = "0xD7CFE0", VA = "0xD7CFE0")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xD7E764", Offset = "0xD7E764", VA = "0xD7E764")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xD7D394", Offset = "0xD7D394", VA = "0xD7D394")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xD7F130", Offset = "0xD7F130", VA = "0xD7F130")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xD7E2F4", Offset = "0xD7E2F4", VA = "0xD7E2F4")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xD7E9D8", Offset = "0xD7E9D8", VA = "0xD7E9D8")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xD7EB9C", Offset = "0xD7EB9C", VA = "0xD7EB9C")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xD7EA70", Offset = "0xD7EA70", VA = "0xD7EA70")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xD7F224", Offset = "0xD7F224", VA = "0xD7F224")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xD7E48C", Offset = "0xD7E48C", VA = "0xD7E48C")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xD7EC84", Offset = "0xD7EC84", VA = "0xD7EC84")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xD7D674", Offset = "0xD7D674", VA = "0xD7D674")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xD7F3A4", Offset = "0xD7F3A4", VA = "0xD7F3A4")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xD7F5F8", Offset = "0xD7F5F8", VA = "0xD7F5F8")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xD7F944", Offset = "0xD7F944", VA = "0xD7F944")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xD7DD48", Offset = "0xD7DD48", VA = "0xD7DD48")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000383")]
	public struct TranslationQuery
	{
		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x2000384")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x20006A6")]
		public enum eJobState
		{
			[Token(Token = "0x40021C4")]
			Running,
			[Token(Token = "0x40021C5")]
			Succeeded,
			[Token(Token = "0x40021C6")]
			Failed
		}

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xBADCA0", Offset = "0xBADCA0", VA = "0xBADCA0", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xBADCA8", Offset = "0xBADCA8", VA = "0xBADCA8", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xBADCAC", Offset = "0xBADCAC", VA = "0xBADCAC")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xBAF66C", Offset = "0xBAF66C", VA = "0xBAF66C", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xBADD80", Offset = "0xBADD80", VA = "0xBADD80")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xBADCB4", Offset = "0xBADCB4", VA = "0xBADCB4")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xBADD88", Offset = "0xBADD88", VA = "0xBADD88")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xBADE80", Offset = "0xBADE80", VA = "0xBADE80", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xBADF40", Offset = "0xBADF40", VA = "0xBADF40")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xBAE068", Offset = "0xBAE068", VA = "0xBAE068")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xBAE298", Offset = "0xBAE298", VA = "0xBAE298", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xBAE4A0", Offset = "0xBAE4A0", VA = "0xBAE4A0", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xBAE110", Offset = "0xBAE110", VA = "0xBAE110")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xBAE504", Offset = "0xBAE504", VA = "0xBAE504", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xBAE5B4", Offset = "0xBAE5B4", VA = "0xBAE5B4")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B27C", Offset = "0x99B27C")]
		private sealed class <>c
		{
			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x60023FB")]
			[Address(RVA = "0xBAF49C", Offset = "0xBAF49C", VA = "0xBAF49C")]
			public <>c()
			{
			}

			[Token(Token = "0x60023FC")]
			[Address(RVA = "0xBAF4A4", Offset = "0xBAF4A4", VA = "0xBAF4A4")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x60023FD")]
			[Address(RVA = "0xBAF508", Offset = "0xBAF508", VA = "0xBAF508")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x60023FE")]
			[Address(RVA = "0xBAF5BC", Offset = "0xBAF5BC", VA = "0xBAF5BC")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xBAE6B0", Offset = "0xBAE6B0", VA = "0xBAE6B0")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xBAE710", Offset = "0xBAE710", VA = "0xBAE710")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xBAE9F4", Offset = "0xBAE9F4", VA = "0xBAE9F4")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xBAED74", Offset = "0xBAED74", VA = "0xBAED74", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xBAEE34", Offset = "0xBAEE34", VA = "0xBAEE34")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xBAEF68", Offset = "0xBAEF68", VA = "0xBAEF68")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x200038A")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x40017FB")]
		DISABLED = 1,
		[Token(Token = "0x40017FC")]
		KEEP_LOADED = 2,
		[Token(Token = "0x40017FD")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x200038B")]
	public class LanguageData
	{
		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xD828CC", Offset = "0xD828CC", VA = "0xD828CC")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xD828DC", Offset = "0xD828DC", VA = "0xD828DC")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xD828F8", Offset = "0xD828F8", VA = "0xD828F8")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xD82908", Offset = "0xD82908", VA = "0xD82908")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xD82918", Offset = "0xD82918", VA = "0xD82918")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xD82938", Offset = "0xD82938", VA = "0xD82938")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xD82958", Offset = "0xD82958", VA = "0xD82958")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998DD4", Offset = "0x998DD4")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x20006A8")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x1700021B")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0xD82960", Offset = "0xD82960", VA = "0xD82960", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x600161C")]
			[Address(RVA = "0xD82968", Offset = "0xD82968", VA = "0xD82968", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0xD82970", Offset = "0xD82970", VA = "0xD82970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A95AC", Offset = "0x9A95AC")]
			add
			{
			}
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xD82A14", Offset = "0xD82A14", VA = "0xD82A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A95BC", Offset = "0x9A95BC")]
			remove
			{
			}
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xD82AB8", Offset = "0xD82AB8", VA = "0xD82AB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xD82B7C", Offset = "0xD82B7C", VA = "0xD82B7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xD82C04", Offset = "0xD82C04", VA = "0xD82C04")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xD82D00", Offset = "0xD82D00", VA = "0xD82D00", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xD82D0C", Offset = "0xD82D0C", VA = "0xD82D0C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xD83338", Offset = "0xD83338", VA = "0xD83338")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x998E20", Offset = "0x998E20")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x1700021C")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xD83930", Offset = "0xD83930", VA = "0xD83930", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xD83938", Offset = "0xD83938", VA = "0xD83938", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xD83940", Offset = "0xD83940", VA = "0xD83940")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public interface ILanguageSource
	{
		[Token(Token = "0x1700021D")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6001628")]
			get;
			[Token(Token = "0x6001629")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x200038F")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x20006A9")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x40021CC")]
			Empty,
			[Token(Token = "0x40021CD")]
			Fallback,
			[Token(Token = "0x40021CE")]
			ShowWarning,
			[Token(Token = "0x40021CF")]
			ShowTerm
		}

		[Token(Token = "0x20006AA")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x40021D1")]
			Never,
			[Token(Token = "0x40021D2")]
			OnlyInDevice,
			[Token(Token = "0x40021D3")]
			EditorAndDevice
		}

		[Token(Token = "0x20006AB")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x40021D5")]
			Always,
			[Token(Token = "0x40021D6")]
			Never,
			[Token(Token = "0x40021D7")]
			Daily,
			[Token(Token = "0x40021D8")]
			Weekly,
			[Token(Token = "0x40021D9")]
			Monthly,
			[Token(Token = "0x40021DA")]
			OnlyOnce,
			[Token(Token = "0x40021DB")]
			EveryOtherDay
		}

		[Token(Token = "0x20006AC")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x40021DD")]
			Manual,
			[Token(Token = "0x40021DE")]
			OnSceneLoaded,
			[Token(Token = "0x40021DF")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B28C", Offset = "0x99B28C")]
		private sealed class <>c
		{
			[Token(Token = "0x40021E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x40021E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x40021E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x40021E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x40021E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x6002404")]
			[Address(RVA = "0xCC5810", Offset = "0xCC5810", VA = "0xCC5810")]
			public <>c()
			{
			}

			[Token(Token = "0x6002405")]
			[Address(RVA = "0xCC5818", Offset = "0xCC5818", VA = "0xCC5818")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002406")]
			[Address(RVA = "0xCC5884", Offset = "0xCC5884", VA = "0xCC5884")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6002407")]
			[Address(RVA = "0xCC58A4", Offset = "0xCC58A4", VA = "0xCC58A4")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6002408")]
			[Address(RVA = "0xCC5954", Offset = "0xCC5954", VA = "0xCC5954")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6002409")]
			[Address(RVA = "0xCC59A4", Offset = "0xCC59A4", VA = "0xCC59A4")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x600240A")]
			[Address(RVA = "0xCC59D0", Offset = "0xCC59D0", VA = "0xCC59D0")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B29C", Offset = "0x99B29C")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000405")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600240E")]
				[Address(RVA = "0xCC5CE8", Offset = "0xCC5CE8", VA = "0xCC5CE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000406")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002410")]
				[Address(RVA = "0xCC5D54", Offset = "0xCC5D54", VA = "0xCC5D54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600240B")]
			[Address(RVA = "0xCC59FC", Offset = "0xCC59FC", VA = "0xCC59FC")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x600240C")]
			[Address(RVA = "0xCC5A28", Offset = "0xCC5A28", VA = "0xCC5A28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600240D")]
			[Address(RVA = "0xCC5A2C", Offset = "0xCC5A2C", VA = "0xCC5A2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600240F")]
			[Address(RVA = "0xCC5CF0", Offset = "0xCC5CF0", VA = "0xCC5CF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x1700021E")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xD839B0", Offset = "0xD839B0", VA = "0xD839B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000027")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0xD83294", Offset = "0xD83294", VA = "0xD83294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A95CC", Offset = "0x9A95CC")]
			add
			{
			}
			[Token(Token = "0x600162C")]
			[Address(RVA = "0xD83A34", Offset = "0xD83A34", VA = "0xD83A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A95DC", Offset = "0x9A95DC")]
			remove
			{
			}
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xD82AF4", Offset = "0xD82AF4", VA = "0xD82AF4")]
		public void Awake()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xD82B9C", Offset = "0xD82B9C", VA = "0xD82B9C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xD8410C", Offset = "0xD8410C", VA = "0xD8410C")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xD84648", Offset = "0xD84648", VA = "0xD84648")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xD84760", Offset = "0xD84760", VA = "0xD84760")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xD84800", Offset = "0xD84800", VA = "0xD84800")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xD84808", Offset = "0xD84808", VA = "0xD84808")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xD83DD4", Offset = "0xD83DD4", VA = "0xD83DD4")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xD8480C", Offset = "0xD8480C", VA = "0xD8480C")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xD848D4", Offset = "0xD848D4", VA = "0xD848D4")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xD8493C", Offset = "0xD8493C", VA = "0xD8493C")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xD849DC", Offset = "0xD849DC", VA = "0xD849DC")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xD85004", Offset = "0xD85004", VA = "0xD85004")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xD85288", Offset = "0xD85288", VA = "0xD85288")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xD85360", Offset = "0xD85360", VA = "0xD85360")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xD858E4", Offset = "0xD858E4", VA = "0xD858E4")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xD86128", Offset = "0xD86128", VA = "0xD86128")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xD85FF4", Offset = "0xD85FF4", VA = "0xD85FF4")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xD863C0", Offset = "0xD863C0", VA = "0xD863C0")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xD86514", Offset = "0xD86514", VA = "0xD86514")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xD866A8", Offset = "0xD866A8", VA = "0xD866A8")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xD86A80", Offset = "0xD86A80", VA = "0xD86A80")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xD8759C", Offset = "0xD8759C", VA = "0xD8759C")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xD86ACC", Offset = "0xD86ACC", VA = "0xD86ACC")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xD875E4", Offset = "0xD875E4", VA = "0xD875E4")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xD87A3C", Offset = "0xD87A3C", VA = "0xD87A3C")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xD87CDC", Offset = "0xD87CDC", VA = "0xD87CDC")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xD87F10", Offset = "0xD87F10", VA = "0xD87F10")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xD8806C", Offset = "0xD8806C", VA = "0xD8806C")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xD8844C", Offset = "0xD8844C", VA = "0xD8844C")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xD88A80", Offset = "0xD88A80", VA = "0xD88A80")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xD882B8", Offset = "0xD882B8", VA = "0xD882B8")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xD88CF8", Offset = "0xD88CF8", VA = "0xD88CF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A95EC", Offset = "0x9A95EC")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xD88D8C", Offset = "0xD88D8C", VA = "0xD88D8C")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xD88E10", Offset = "0xD88E10", VA = "0xD88E10")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xD88F58", Offset = "0xD88F58", VA = "0xD88F58")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xD890B8", Offset = "0xD890B8", VA = "0xD890B8")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xD884DC", Offset = "0xD884DC", VA = "0xD884DC")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xD84270", Offset = "0xD84270", VA = "0xD84270")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xD89330", Offset = "0xD89330", VA = "0xD89330")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xD893D4", Offset = "0xD893D4", VA = "0xD893D4")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xD87690", Offset = "0xD87690", VA = "0xD87690")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xD8915C", Offset = "0xD8915C", VA = "0xD8915C")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xD8948C", Offset = "0xD8948C", VA = "0xD8948C")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xD89528", Offset = "0xD89528", VA = "0xD89528")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xD895D4", Offset = "0xD895D4", VA = "0xD895D4")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xD89658", Offset = "0xD89658", VA = "0xD89658")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xD897EC", Offset = "0xD897EC", VA = "0xD897EC")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xD89AD4", Offset = "0xD89AD4", VA = "0xD89AD4")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xD89C04", Offset = "0xD89C04", VA = "0xD89C04")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xD89D9C", Offset = "0xD89D9C", VA = "0xD89D9C")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xD89E4C", Offset = "0xD89E4C", VA = "0xD89E4C")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xD89F04", Offset = "0xD89F04", VA = "0xD89F04")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xD89F14", Offset = "0xD89F14", VA = "0xD89F14")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xD8A12C", Offset = "0xD8A12C", VA = "0xD8A12C")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xD8A508", Offset = "0xD8A508", VA = "0xD8A508")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xD8A2C4", Offset = "0xD8A2C4", VA = "0xD8A2C4")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xD87BB8", Offset = "0xD87BB8", VA = "0xD87BB8")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xD87B10", Offset = "0xD87B10", VA = "0xD87B10")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xD86890", Offset = "0xD86890", VA = "0xD86890")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xD8A6B0", Offset = "0xD8A6B0", VA = "0xD8A6B0")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xD8A5A0", Offset = "0xD8A5A0", VA = "0xD8A5A0")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xD8A798", Offset = "0xD8A798", VA = "0xD8A798")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xD83AD8", Offset = "0xD83AD8", VA = "0xD83AD8")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xD8A8FC", Offset = "0xD8A8FC", VA = "0xD8A8FC")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xD8A9A8", Offset = "0xD8A9A8", VA = "0xD8A9A8")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xD855F8", Offset = "0xD855F8", VA = "0xD855F8")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xD8AC00", Offset = "0xD8AC00", VA = "0xD8AC00")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xD84460", Offset = "0xD84460", VA = "0xD84460")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xD8ADD4", Offset = "0xD8ADD4", VA = "0xD8ADD4")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xD8ADF4", Offset = "0xD8ADF4", VA = "0xD8ADF4")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xD8AC0C", Offset = "0xD8AC0C", VA = "0xD8AC0C")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xD8AFB8", Offset = "0xD8AFB8", VA = "0xD8AFB8")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xD87854", Offset = "0xD87854", VA = "0xD87854")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xD83064", Offset = "0xD83064", VA = "0xD83064")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4001834")]
		None,
		[Token(Token = "0x4001835")]
		Replace,
		[Token(Token = "0x4001836")]
		Merge,
		[Token(Token = "0x4001837")]
		AddNewTerms
	}
	[Token(Token = "0x2000391")]
	public class LocalizationReader
	{
		[Token(Token = "0x6001679")]
		[Address(RVA = "0xCCE618", Offset = "0xCCE618", VA = "0xCCE618")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xCCE85C", Offset = "0xCCE85C", VA = "0xCCE85C")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xCCECE0", Offset = "0xCCECE0", VA = "0xCCECE0")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xCCEE7C", Offset = "0xCCEE7C", VA = "0xCCEE7C")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xCCEF58", Offset = "0xCCEF58", VA = "0xCCEF58")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xCCF140", Offset = "0xCCF140", VA = "0xCCF140")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xCCF268", Offset = "0xCCF268", VA = "0xCCF268")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xCCEC20", Offset = "0xCCEC20", VA = "0xCCEC20")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xCCF434", Offset = "0xCCF434", VA = "0xCCF434")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xCCEB84", Offset = "0xCCEB84", VA = "0xCCEB84")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xCCF508", Offset = "0xCCF508", VA = "0xCCF508")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998EA4", Offset = "0x998EA4")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x20006AF")]
		public enum TermModification
		{
			[Token(Token = "0x40021ED")]
			DontModify,
			[Token(Token = "0x40021EE")]
			ToUpper,
			[Token(Token = "0x40021EF")]
			ToLower,
			[Token(Token = "0x40021F0")]
			ToUpperFirst,
			[Token(Token = "0x40021F1")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B2AC", Offset = "0x99B2AC")]
		private sealed class <>c
		{
			[Token(Token = "0x40021F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__49_0;

			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__49_1;

			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__49_2;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__49_3;

			[Token(Token = "0x6002412")]
			[Address(RVA = "0xCD0778", Offset = "0xCD0778", VA = "0xCD0778")]
			public <>c()
			{
			}

			[Token(Token = "0x6002413")]
			[Address(RVA = "0xCD0780", Offset = "0xCD0780", VA = "0xCD0780")]
			internal bool <UpdateAssetDictionary>b__49_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0xCD07EC", Offset = "0xCD07EC", VA = "0xCD07EC")]
			internal string <UpdateAssetDictionary>b__49_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6002415")]
			[Address(RVA = "0xCD080C", Offset = "0xCD080C", VA = "0xCD080C")]
			internal string <UpdateAssetDictionary>b__49_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6002416")]
			[Address(RVA = "0xCD08BC", Offset = "0xCD08BC", VA = "0xCD08BC")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__49_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x1700021F")]
		public string Term
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xCCF510", Offset = "0xCCF510", VA = "0xCCF510")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xCCF518", Offset = "0xCCF518", VA = "0xCCF518")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xCCF574", Offset = "0xCCF574", VA = "0xCCF574")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xCCF57C", Offset = "0xCCF57C", VA = "0xCCF57C")]
			set
			{
			}
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xCCF610", Offset = "0xCCF610", VA = "0xCCF610")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xCCFEC8", Offset = "0xCCFEC8", VA = "0xCCFEC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xCCFED0", Offset = "0xCCFED0", VA = "0xCCFED0")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xCCC38C", Offset = "0xCCC38C", VA = "0xCCC38C")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xCCF98C", Offset = "0xCCF98C", VA = "0xCCF98C")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xCCFF24", Offset = "0xCCFF24", VA = "0xCCFF24")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xCD00E0", Offset = "0xCD00E0", VA = "0xCD00E0")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xCD01B8", Offset = "0xCD01B8", VA = "0xCD01B8")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xCCF51C", Offset = "0xCCF51C", VA = "0xCCF51C")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xCCF58C", Offset = "0xCCF58C", VA = "0xCCF58C")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6001692")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xCCF654", Offset = "0xCCF654", VA = "0xCCF654")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001694")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001695")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xCD0214", Offset = "0xCD0214", VA = "0xCD0214")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6001697")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xCD0338", Offset = "0xCD0338", VA = "0xCD0338")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xCD0438", Offset = "0xCD0438", VA = "0xCD0438")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xCD04D8", Offset = "0xCD04D8", VA = "0xCD04D8")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xCD053C", Offset = "0xCD053C", VA = "0xCD053C")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998EDC", Offset = "0x998EDC")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xCD090C", Offset = "0xCD090C", VA = "0xCD090C")]
		public void Start()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xCD0AA8", Offset = "0xCD0AA8", VA = "0xCD0AA8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xCD0B44", Offset = "0xCD0B44", VA = "0xCD0B44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xCD09B0", Offset = "0xCD09B0", VA = "0xCD09B0")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xCD0BA8", Offset = "0xCD0BA8", VA = "0xCD0BA8")]
		private void FillValues()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xCD0D48", Offset = "0xCD0D48", VA = "0xCD0D48")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xCD1110", Offset = "0xCD1110", VA = "0xCD1110")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xCD0F88", Offset = "0xCD0F88", VA = "0xCD0F88")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xCD1344", Offset = "0xCD1344", VA = "0xCD1344")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public static class LocalizationManager
	{
		[Token(Token = "0x20006B1")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x20006B2")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B2BC", Offset = "0x99B2BC")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x600241F")]
			[Address(RVA = "0xCC8420", Offset = "0xCC8420", VA = "0xCC8420")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002420")]
			[Address(RVA = "0xCCDBD0", Offset = "0xCCDBD0", VA = "0xCCDBD0")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B2CC", Offset = "0x99B2CC")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6002421")]
			[Address(RVA = "0xCC864C", Offset = "0xCC864C", VA = "0xCC864C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002422")]
			[Address(RVA = "0xCCDC44", Offset = "0xCCDC44", VA = "0xCCDC44")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B2DC", Offset = "0x99B2DC")]
		private sealed class <>c
		{
			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x6002424")]
			[Address(RVA = "0xCCDB60", Offset = "0xCCDB60", VA = "0xCCDB60")]
			public <>c()
			{
			}

			[Token(Token = "0x6002425")]
			[Address(RVA = "0xCCDB68", Offset = "0xCCDB68", VA = "0xCCDB68")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B2EC", Offset = "0x99B2EC")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x6002426")]
			[Address(RVA = "0xCC8FEC", Offset = "0xCC8FEC", VA = "0xCC8FEC")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6002427")]
			[Address(RVA = "0xCCDCB8", Offset = "0xCCDCB8", VA = "0xCCDCB8")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B2FC", Offset = "0x99B2FC")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x6002428")]
			[Address(RVA = "0xCC90E0", Offset = "0xCC90E0", VA = "0xCC90E0")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6002429")]
			[Address(RVA = "0xCCDD30", Offset = "0xCCDD30", VA = "0xCCDD30")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B30C", Offset = "0x99B30C")]
		private sealed class <Delayed_Import_Google>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x17000407")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600242D")]
				[Address(RVA = "0xCCE00C", Offset = "0xCCE00C", VA = "0xCCE00C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000408")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600242F")]
				[Address(RVA = "0xCCE078", Offset = "0xCCE078", VA = "0xCCE078", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0xCCAD9C", Offset = "0xCCAD9C", VA = "0xCCAD9C")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x600242B")]
			[Address(RVA = "0xCCDF44", Offset = "0xCCDF44", VA = "0xCCDF44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600242C")]
			[Address(RVA = "0xCCDF48", Offset = "0xCCDF48", VA = "0xCCDF48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600242E")]
			[Address(RVA = "0xCCE014", Offset = "0xCCE014", VA = "0xCCE014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B31C", Offset = "0x99B31C")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x6002430")]
			[Address(RVA = "0xCCB9A8", Offset = "0xCCB9A8", VA = "0xCCB9A8")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6002431")]
			[Address(RVA = "0xCCDDB0", Offset = "0xCCDDB0", VA = "0xCCDDB0")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B32C", Offset = "0x99B32C")]
		private sealed class <Coroutine_LocalizeAll>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000409")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002435")]
				[Address(RVA = "0xCCDED0", Offset = "0xCCDED0", VA = "0xCCDED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002437")]
				[Address(RVA = "0xCCDF3C", Offset = "0xCCDF3C", VA = "0xCCDF3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002432")]
			[Address(RVA = "0xCCC360", Offset = "0xCCC360", VA = "0xCCC360")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6002433")]
			[Address(RVA = "0xCCDDE0", Offset = "0xCCDDE0", VA = "0xCCDDE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002434")]
			[Address(RVA = "0xCCDDE4", Offset = "0xCCDDE4", VA = "0xCCDDE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0xCCDED8", Offset = "0xCCDED8", VA = "0xCCDED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x17000221")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xCC670C", Offset = "0xCC670C", VA = "0xCC670C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0xCC6778", Offset = "0xCC6778", VA = "0xCC6778")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0xCC7104", Offset = "0xCC7104", VA = "0xCC7104")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xCC7170", Offset = "0xCC7170", VA = "0xCC7170")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public static string CurrentRegion
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xCC7460", Offset = "0xCC7460", VA = "0xCC7460")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xCC75BC", Offset = "0xCC75BC", VA = "0xCC75BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xCC7754", Offset = "0xCC7754", VA = "0xCC7754")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xCC7820", Offset = "0xCC7820", VA = "0xCC7820")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xCC792C", Offset = "0xCC792C", VA = "0xCC792C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000028")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xCCB9B0", Offset = "0xCCB9B0", VA = "0xCCB9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A96B4", Offset = "0x9A96B4")]
			add
			{
			}
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xCCBAA0", Offset = "0xCCBAA0", VA = "0xCCBAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A96C4", Offset = "0x9A96C4")]
			remove
			{
			}
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xCC5D5C", Offset = "0xCC5D5C", VA = "0xCC5D5C")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xCC64E4", Offset = "0xCC64E4", VA = "0xCC64E4")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xCC652C", Offset = "0xCC652C", VA = "0xCC652C")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xCC6534", Offset = "0xCC6534", VA = "0xCC6534")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xCC6EEC", Offset = "0xCC6EEC", VA = "0xCC6EEC")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xCC7A4C", Offset = "0xCC7A4C", VA = "0xCC7A4C")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xCC7D68", Offset = "0xCC7D68", VA = "0xCC7D68")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xCC7B4C", Offset = "0xCC7B4C", VA = "0xCC7B4C")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xCC6054", Offset = "0xCC6054", VA = "0xCC6054")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xCC7FA0", Offset = "0xCC7FA0", VA = "0xCC7FA0")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xCC6868", Offset = "0xCC6868", VA = "0xCC6868")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xCC6D00", Offset = "0xCC6D00", VA = "0xCC6D00")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xCC7264", Offset = "0xCC7264", VA = "0xCC7264")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xCC81B0", Offset = "0xCC81B0", VA = "0xCC81B0")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xCC8428", Offset = "0xCC8428", VA = "0xCC8428")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xCC8654", Offset = "0xCC8654", VA = "0xCC8654")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xCC8764", Offset = "0xCC8764", VA = "0xCC8764")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xCC88BC", Offset = "0xCC88BC", VA = "0xCC88BC")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xCC5E38", Offset = "0xCC5E38", VA = "0xCC5E38")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xCC89C0", Offset = "0xCC89C0", VA = "0xCC89C0")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xCC8F00", Offset = "0xCC8F00", VA = "0xCC8F00")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xCC8FF4", Offset = "0xCC8FF4", VA = "0xCC8FF4")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xCC8AF0", Offset = "0xCC8AF0", VA = "0xCC8AF0")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xCC9630", Offset = "0xCC9630", VA = "0xCC9630")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xCC98E4", Offset = "0xCC98E4", VA = "0xCC98E4")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xCC9ABC", Offset = "0xCC9ABC", VA = "0xCC9ABC")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xCC9B28", Offset = "0xCC9B28", VA = "0xCC9B28")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xCCA1B8", Offset = "0xCCA1B8", VA = "0xCCA1B8")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xCC7BD8", Offset = "0xCC7BD8", VA = "0xCC7BD8")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xCC5FC8", Offset = "0xCC5FC8", VA = "0xCC5FC8")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xCCA26C", Offset = "0xCCA26C", VA = "0xCCA26C")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xCCA564", Offset = "0xCCA564", VA = "0xCCA564")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xCCA3AC", Offset = "0xCCA3AC", VA = "0xCCA3AC")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xCCA780", Offset = "0xCCA780", VA = "0xCCA780")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xCCACF8", Offset = "0xCCACF8", VA = "0xCCACF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9650", Offset = "0x9A9650")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xCCA6FC", Offset = "0xCCA6FC", VA = "0xCCA6FC")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xCCADC8", Offset = "0xCCADC8", VA = "0xCCADC8")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xCCAE50", Offset = "0xCCAE50", VA = "0xCCAE50")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xCCB044", Offset = "0xCCB044", VA = "0xCCB044")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xCCB188", Offset = "0xCCB188", VA = "0xCCB188")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xCC7ED4", Offset = "0xCC7ED4", VA = "0xCC7ED4")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xCCB278", Offset = "0xCCB278", VA = "0xCCB278")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xCCB760", Offset = "0xCCB760", VA = "0xCCB760")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xCCBB90", Offset = "0xCCBB90", VA = "0xCCBB90")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xCCBE74", Offset = "0xCCBE74", VA = "0xCCBE74")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xCCBC54", Offset = "0xCCBC54", VA = "0xCCBC54")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DE")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60016DF")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xCCBF20", Offset = "0xCCBF20", VA = "0xCCBF20")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xCC7C60", Offset = "0xCC7C60", VA = "0xCC7C60")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xCCC300", Offset = "0xCCC300", VA = "0xCCC300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A96D4", Offset = "0x9A96D4")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xCCC17C", Offset = "0xCCC17C", VA = "0xCCC17C")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xCCCEFC", Offset = "0xCCCEFC", VA = "0xCCCEFC")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xCCD024", Offset = "0xCCD024", VA = "0xCCD024")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xCCD274", Offset = "0xCCD274", VA = "0xCCD274")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xCC94A4", Offset = "0xCC94A4", VA = "0xCC94A4")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000395")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x60016E9")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x60016EA")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x60016EB")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x60016EC")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x60016ED")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x60016EE")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x60016EF")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x60016F0")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xD828BC", Offset = "0xD828BC", VA = "0xD828BC")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x60016F2")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F3")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x60016F4")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x60016F5")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x60016F6")]
		public abstract Type GetTargetType();

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xD828C4", Offset = "0xD828C4", VA = "0xD828C4")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x60016F8")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x60016FA")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x60016FB")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FC")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xCD14A4", Offset = "0xCD14A4", VA = "0xCD14A4")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xCD14A8", Offset = "0xCD14A8", VA = "0xCD14A8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A9738", Offset = "0x9A9738")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xCD155C", Offset = "0xCD155C", VA = "0xCD155C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xCD1564", Offset = "0xCD1564", VA = "0xCD1564", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xCD156C", Offset = "0xCD156C", VA = "0xCD156C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xCD1574", Offset = "0xCD1574", VA = "0xCD1574", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xCD157C", Offset = "0xCD157C", VA = "0xCD157C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xCD1584", Offset = "0xCD1584", VA = "0xCD1584", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xCD16AC", Offset = "0xCD16AC", VA = "0xCD16AC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xCD1CCC", Offset = "0xCD1CCC", VA = "0xCD1CCC")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xCD1F64", Offset = "0xCD1F64", VA = "0xCD1F64")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xCD1BC0", Offset = "0xCD1BC0", VA = "0xCD1BC0")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xCD1E38", Offset = "0xCD1E38", VA = "0xCD1E38")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xCD2178", Offset = "0xCD2178", VA = "0xCD2178")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xCD21DC", Offset = "0xCD21DC", VA = "0xCD21DC")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xCD21E0", Offset = "0xCD21E0", VA = "0xCD21E0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A974C", Offset = "0x9A974C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xCD2294", Offset = "0xCD2294", VA = "0xCD2294", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xCD229C", Offset = "0xCD229C", VA = "0xCD229C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xCD22A4", Offset = "0xCD22A4", VA = "0xCD22A4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xCD22AC", Offset = "0xCD22AC", VA = "0xCD22AC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xCD22B4", Offset = "0xCD22B4", VA = "0xCD22B4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xCD22BC", Offset = "0xCD22BC", VA = "0xCD22BC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xCD23E4", Offset = "0xCD23E4", VA = "0xCD23E4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xCD28F8", Offset = "0xCD28F8", VA = "0xCD28F8")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6001716")]
		[Address(RVA = "0xCD295C", Offset = "0xCD295C", VA = "0xCD295C")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xCD2960", Offset = "0xCD2960", VA = "0xCD2960")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A9760", Offset = "0x9A9760")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xCD2A14", Offset = "0xCD2A14", VA = "0xCD2A14", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xCD2A1C", Offset = "0xCD2A1C", VA = "0xCD2A1C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xCD2A24", Offset = "0xCD2A24", VA = "0xCD2A24", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xCD2A2C", Offset = "0xCD2A2C", VA = "0xCD2A2C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xCD2A34", Offset = "0xCD2A34", VA = "0xCD2A34", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xCD2A3C", Offset = "0xCD2A3C", VA = "0xCD2A3C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xCD2B28", Offset = "0xCD2B28", VA = "0xCD2B28", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xCD2CAC", Offset = "0xCD2CAC", VA = "0xCD2CAC")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6001720")]
		[Address(RVA = "0xCD13C0", Offset = "0xCD13C0", VA = "0xCD13C0", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xCD13FC", Offset = "0xCD13FC", VA = "0xCD13FC")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001722")]
		[Address(RVA = "0xCD2CFC", Offset = "0xCD2CFC", VA = "0xCD2CFC")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xCD2D00", Offset = "0xCD2D00", VA = "0xCD2D00")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A9774", Offset = "0x9A9774")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xCD2DA8", Offset = "0xCD2DA8", VA = "0xCD2DA8", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xCD2DE4", Offset = "0xCD2DE4", VA = "0xCD2DE4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xCD2DEC", Offset = "0xCD2DEC", VA = "0xCD2DEC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xCD2DF4", Offset = "0xCD2DF4", VA = "0xCD2DF4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xCD2DFC", Offset = "0xCD2DFC", VA = "0xCD2DFC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xCD2E04", Offset = "0xCD2E04", VA = "0xCD2E04", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xCD2E0C", Offset = "0xCD2E0C", VA = "0xCD2E0C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xCD2E64", Offset = "0xCD2E64", VA = "0xCD2E64", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xCD2FC4", Offset = "0xCD2FC4", VA = "0xCD2FC4")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x600172D")]
		[Address(RVA = "0xCD3014", Offset = "0xCD3014", VA = "0xCD3014")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xCD3018", Offset = "0xCD3018", VA = "0xCD3018")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A9788", Offset = "0x9A9788")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xCD30CC", Offset = "0xCD30CC", VA = "0xCD30CC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xCD30D4", Offset = "0xCD30D4", VA = "0xCD30D4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xCD30DC", Offset = "0xCD30DC", VA = "0xCD30DC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xCD30E4", Offset = "0xCD30E4", VA = "0xCD30E4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xCD30EC", Offset = "0xCD30EC", VA = "0xCD30EC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xCD30F4", Offset = "0xCD30F4", VA = "0xCD30F4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xCD3320", Offset = "0xCD3320", VA = "0xCD3320", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xCD34FC", Offset = "0xCD34FC", VA = "0xCD34FC")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6001737")]
		[Address(RVA = "0xCD144C", Offset = "0xCD144C", VA = "0xCD144C", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xCD1454", Offset = "0xCD1454", VA = "0xCD1454")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001739")]
		[Address(RVA = "0xCD354C", Offset = "0xCD354C", VA = "0xCD354C")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xCD3550", Offset = "0xCD3550", VA = "0xCD3550")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A979C", Offset = "0x9A979C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xCD35F8", Offset = "0xCD35F8", VA = "0xCD35F8", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xCD3600", Offset = "0xCD3600", VA = "0xCD3600", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xCD3608", Offset = "0xCD3608", VA = "0xCD3608", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xCD3610", Offset = "0xCD3610", VA = "0xCD3610", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xCD3618", Offset = "0xCD3618", VA = "0xCD3618", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xCD3620", Offset = "0xCD3620", VA = "0xCD3620", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xCD3628", Offset = "0xCD3628", VA = "0xCD3628", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xCD3680", Offset = "0xCD3680", VA = "0xCD3680", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xCD38B0", Offset = "0xCD38B0", VA = "0xCD38B0")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xCD3A78", Offset = "0xCD3A78", VA = "0xCD3A78")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6001745")]
		[Address(RVA = "0xCD3AC8", Offset = "0xCD3AC8", VA = "0xCD3AC8")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xCD3ACC", Offset = "0xCD3ACC", VA = "0xCD3ACC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A97B0", Offset = "0x9A97B0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xCD3B80", Offset = "0xCD3B80", VA = "0xCD3B80", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xCD3B88", Offset = "0xCD3B88", VA = "0xCD3B88", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xCD3B90", Offset = "0xCD3B90", VA = "0xCD3B90", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xCD3B98", Offset = "0xCD3B98", VA = "0xCD3B98", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xCD3BA0", Offset = "0xCD3BA0", VA = "0xCD3BA0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xCD3BA8", Offset = "0xCD3BA8", VA = "0xCD3BA8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xCD3C98", Offset = "0xCD3C98", VA = "0xCD3C98", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xCD3DA0", Offset = "0xCD3DA0", VA = "0xCD3DA0")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xCD3DF0", Offset = "0xCD3DF0", VA = "0xCD3DF0")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xCD3DF4", Offset = "0xCD3DF4", VA = "0xCD3DF4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A97C4", Offset = "0x9A97C4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xCD3EA8", Offset = "0xCD3EA8", VA = "0xCD3EA8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xCD3EB0", Offset = "0xCD3EB0", VA = "0xCD3EB0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xCD3EB8", Offset = "0xCD3EB8", VA = "0xCD3EB8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xCD3EC0", Offset = "0xCD3EC0", VA = "0xCD3EC0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xCD3EC8", Offset = "0xCD3EC8", VA = "0xCD3EC8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xCD3ED0", Offset = "0xCD3ED0", VA = "0xCD3ED0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xCD400C", Offset = "0xCD400C", VA = "0xCD400C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xCD4284", Offset = "0xCD4284", VA = "0xCD4284")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6001759")]
		[Address(RVA = "0xCD42E4", Offset = "0xCD42E4", VA = "0xCD42E4")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xCD42E8", Offset = "0xCD42E8", VA = "0xCD42E8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A97D8", Offset = "0x9A97D8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xCD439C", Offset = "0xCD439C", VA = "0xCD439C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xCD43A4", Offset = "0xCD43A4", VA = "0xCD43A4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xCD43AC", Offset = "0xCD43AC", VA = "0xCD43AC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xCD43B4", Offset = "0xCD43B4", VA = "0xCD43B4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xCD4448", Offset = "0xCD4448", VA = "0xCD4448", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xCD4450", Offset = "0xCD4450", VA = "0xCD4450", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xCD4600", Offset = "0xCD4600", VA = "0xCD4600", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xCD46F8", Offset = "0xCD46F8", VA = "0xCD46F8")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6001763")]
		[Address(RVA = "0xCD4748", Offset = "0xCD4748", VA = "0xCD4748")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xCD474C", Offset = "0xCD474C", VA = "0xCD474C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A97EC", Offset = "0x9A97EC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xCD4800", Offset = "0xCD4800", VA = "0xCD4800", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xCD4808", Offset = "0xCD4808", VA = "0xCD4808", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xCD4810", Offset = "0xCD4810", VA = "0xCD4810", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xCD4818", Offset = "0xCD4818", VA = "0xCD4818", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xCD4820", Offset = "0xCD4820", VA = "0xCD4820", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xCD4828", Offset = "0xCD4828", VA = "0xCD4828", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xCD491C", Offset = "0xCD491C", VA = "0xCD491C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xCD4A14", Offset = "0xCD4A14", VA = "0xCD4A14")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xCD4A64", Offset = "0xCD4A64", VA = "0xCD4A64")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xCD4A68", Offset = "0xCD4A68", VA = "0xCD4A68")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9A9800", Offset = "0x9A9800")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xCD4B1C", Offset = "0xCD4B1C", VA = "0xCD4B1C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xCD4B24", Offset = "0xCD4B24", VA = "0xCD4B24", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xCD4B2C", Offset = "0xCD4B2C", VA = "0xCD4B2C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xCD4B34", Offset = "0xCD4B34", VA = "0xCD4B34", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xCD4B3C", Offset = "0xCD4B3C", VA = "0xCD4B3C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xCD4B44", Offset = "0xCD4B44", VA = "0xCD4B44", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xCD4C84", Offset = "0xCD4C84", VA = "0xCD4C84", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xCD4FB8", Offset = "0xCD4FB8", VA = "0xCD4FB8")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xCD5078", Offset = "0xCD5078", VA = "0xCD5078")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public enum eTermType
	{
		[Token(Token = "0x400187C")]
		Text,
		[Token(Token = "0x400187D")]
		Font,
		[Token(Token = "0x400187E")]
		Texture,
		[Token(Token = "0x400187F")]
		AudioClip,
		[Token(Token = "0x4001880")]
		GameObject,
		[Token(Token = "0x4001881")]
		Sprite,
		[Token(Token = "0x4001882")]
		Material,
		[Token(Token = "0x4001883")]
		Child,
		[Token(Token = "0x4001884")]
		Mesh,
		[Token(Token = "0x4001885")]
		TextMeshPFont,
		[Token(Token = "0x4001886")]
		Object
	}
	[Token(Token = "0x20003A8")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4001888")]
		Normal = 1,
		[Token(Token = "0x4001889")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x20003A9")]
	public class TermData
	{
		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xBAD174", Offset = "0xBAD174", VA = "0xBAD174")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xBAD290", Offset = "0xBAD290", VA = "0xBAD290")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xBAD38C", Offset = "0xBAD38C", VA = "0xBAD38C")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xBAD3F0", Offset = "0xBAD3F0", VA = "0xBAD3F0")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xBAD584", Offset = "0xBAD584", VA = "0xBAD584")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xBAD5CC", Offset = "0xBAD5CC", VA = "0xBAD5CC")]
		public void Validate()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xBAD824", Offset = "0xBAD824", VA = "0xBAD824")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xBAD8BC", Offset = "0xBAD8BC", VA = "0xBAD8BC")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xBAD9A4", Offset = "0xBAD9A4", VA = "0xBAD9A4")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xBADA90", Offset = "0xBADA90", VA = "0xBADA90")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A19C4", Offset = "0x9A19C4")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x17000226")]
		public string Filter
		{
			[Token(Token = "0x6001783")]
			[Address(RVA = "0xBADB7C", Offset = "0xBADB7C", VA = "0xBADB7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9814", Offset = "0x9A9814")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001784")]
			[Address(RVA = "0xBADB84", Offset = "0xBADB84", VA = "0xBADB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9824", Offset = "0x9A9824")]
			private set
			{
			}
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xBADB48", Offset = "0xBADB48", VA = "0xBADB48")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6001785")]
		[Address(RVA = "0xD73C80", Offset = "0xD73C80", VA = "0xD73C80")]
		public void Start()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xD73CE4", Offset = "0xD73CE4", VA = "0xD73CE4")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x17000227")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0xD743B8", Offset = "0xD743B8", VA = "0xD743B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD744F4", Offset = "0xD744F4", VA = "0xD744F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD74588", Offset = "0xD74588", VA = "0xD74588")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xD745B8", Offset = "0xD745B8", VA = "0xD745B8")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998F14", Offset = "0x998F14")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xD745C0", Offset = "0xD745C0", VA = "0xD745C0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xD74684", Offset = "0xD74684", VA = "0xD74684")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xD74718", Offset = "0xD74718", VA = "0xD74718")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xD74734", Offset = "0xD74734", VA = "0xD74734")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B33C", Offset = "0x99B33C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x6002439")]
			[Address(RVA = "0xD807C8", Offset = "0xD807C8", VA = "0xD807C8")]
			public <>c()
			{
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0xD807D0", Offset = "0xD807D0", VA = "0xD807D0")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xD80258", Offset = "0xD80258", VA = "0xD80258")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xD80758", Offset = "0xD80758", VA = "0xD80758")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B34C", Offset = "0x99B34C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x600243C")]
			[Address(RVA = "0xD828A8", Offset = "0xD828A8", VA = "0xD828A8")]
			public <>c()
			{
			}

			[Token(Token = "0x600243D")]
			[Address(RVA = "0xD828B0", Offset = "0xD828B0", VA = "0xD828B0")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001893")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x4001894")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x4001895")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xD819D0", Offset = "0xD819D0", VA = "0xD819D0")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xD81AB0", Offset = "0xD81AB0", VA = "0xD81AB0")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xD81CE4", Offset = "0xD81CE4", VA = "0xD81CE4")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xD81D98", Offset = "0xD81D98", VA = "0xD81D98")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xD82054", Offset = "0xD82054", VA = "0xD82054")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xD81D18", Offset = "0xD81D18", VA = "0xD81D18")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xD821DC", Offset = "0xD821DC", VA = "0xD821DC")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xD82478", Offset = "0xD82478", VA = "0xD82478")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD82480", Offset = "0xD82480", VA = "0xD82480")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD82558", Offset = "0xD82558", VA = "0xD82558")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD82584", Offset = "0xD82584", VA = "0xD82584")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xD826E0", Offset = "0xD826E0", VA = "0xD826E0")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x600179D")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xD7F2F4", Offset = "0xD7F2F4", VA = "0xD7F2F4")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xD82828", Offset = "0xD82828", VA = "0xD82828")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x60017A0")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x20003B1")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x20006BD")]
		public struct ParamValue
		{
			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xCCE104", Offset = "0xCCE104", VA = "0xCCE104", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xCCE1F4", Offset = "0xCCE1F4", VA = "0xCCE1F4")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xCCE380", Offset = "0xCCE380", VA = "0xCCE380")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xCCE430", Offset = "0xCCE430", VA = "0xCCE430", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xCCE440", Offset = "0xCCE440", VA = "0xCCE440")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xCCE518", Offset = "0xCCE518", VA = "0xCCE518")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xCCE59C", Offset = "0xCCE59C", VA = "0xCCE59C")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B2")]
	public struct LocalizedString
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xCD50D8", Offset = "0xCD50D8", VA = "0xCD50D8")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xCD51A4", Offset = "0xCD51A4", VA = "0xCD51A4")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xA50024", Offset = "0xA50024", VA = "0xA50024")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xA5009C", Offset = "0xA5009C", VA = "0xA5009C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B3")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xCD8838", Offset = "0xCD8838", VA = "0xCD8838", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xCD8910", Offset = "0xCD8910", VA = "0xCD8910", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xCD8994", Offset = "0xCD8994", VA = "0xCD8994", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xCD899C", Offset = "0xCD899C", VA = "0xCD899C")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x60017B0")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x20003B5")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x17000228")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0xCCA98C", Offset = "0xCCA98C", VA = "0xCCA98C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xCD89A4", Offset = "0xCD89A4", VA = "0xCD89A4")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60017B3")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xCD8A7C", Offset = "0xCD8A7C", VA = "0xCD8A7C")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xCD03C8", Offset = "0xCD03C8", VA = "0xCD03C8")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B6")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60017B7")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xCD8A10", Offset = "0xCD8A10", VA = "0xCD8A10")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xCD8BC8", Offset = "0xCD8BC8", VA = "0xCD8BC8")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class RTLFixer
	{
		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xCD581C", Offset = "0xCD581C", VA = "0xCD581C")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xCD5828", Offset = "0xCD5828", VA = "0xCD5828")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xCC9F18", Offset = "0xCC9F18", VA = "0xCC9F18")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xCD67A4", Offset = "0xCD67A4", VA = "0xCD67A4")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x40018A2")]
		Hamza = 65152,
		[Token(Token = "0x40018A3")]
		Alef = 65165,
		[Token(Token = "0x40018A4")]
		AlefHamza = 65155,
		[Token(Token = "0x40018A5")]
		WawHamza = 65157,
		[Token(Token = "0x40018A6")]
		AlefMaksoor = 65159,
		[Token(Token = "0x40018A7")]
		AlefMaksora = 64508,
		[Token(Token = "0x40018A8")]
		HamzaNabera = 65161,
		[Token(Token = "0x40018A9")]
		Ba = 65167,
		[Token(Token = "0x40018AA")]
		Ta = 65173,
		[Token(Token = "0x40018AB")]
		Tha2 = 65177,
		[Token(Token = "0x40018AC")]
		Jeem = 65181,
		[Token(Token = "0x40018AD")]
		H7aa = 65185,
		[Token(Token = "0x40018AE")]
		Khaa2 = 65189,
		[Token(Token = "0x40018AF")]
		Dal = 65193,
		[Token(Token = "0x40018B0")]
		Thal = 65195,
		[Token(Token = "0x40018B1")]
		Ra2 = 65197,
		[Token(Token = "0x40018B2")]
		Zeen = 65199,
		[Token(Token = "0x40018B3")]
		Seen = 65201,
		[Token(Token = "0x40018B4")]
		Sheen = 65205,
		[Token(Token = "0x40018B5")]
		S9a = 65209,
		[Token(Token = "0x40018B6")]
		Dha = 65213,
		[Token(Token = "0x40018B7")]
		T6a = 65217,
		[Token(Token = "0x40018B8")]
		T6ha = 65221,
		[Token(Token = "0x40018B9")]
		Ain = 65225,
		[Token(Token = "0x40018BA")]
		Gain = 65229,
		[Token(Token = "0x40018BB")]
		Fa = 65233,
		[Token(Token = "0x40018BC")]
		Gaf = 65237,
		[Token(Token = "0x40018BD")]
		Kaf = 65241,
		[Token(Token = "0x40018BE")]
		Lam = 65245,
		[Token(Token = "0x40018BF")]
		Meem = 65249,
		[Token(Token = "0x40018C0")]
		Noon = 65253,
		[Token(Token = "0x40018C1")]
		Ha = 65257,
		[Token(Token = "0x40018C2")]
		Waw = 65261,
		[Token(Token = "0x40018C3")]
		Ya = 65265,
		[Token(Token = "0x40018C4")]
		AlefMad = 65153,
		[Token(Token = "0x40018C5")]
		TaMarboota = 65171,
		[Token(Token = "0x40018C6")]
		PersianPe = 64342,
		[Token(Token = "0x40018C7")]
		PersianChe = 64378,
		[Token(Token = "0x40018C8")]
		PersianZe = 64394,
		[Token(Token = "0x40018C9")]
		PersianGaf = 64402,
		[Token(Token = "0x40018CA")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x20003B8")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x40018CC")]
		Hamza = 1569,
		[Token(Token = "0x40018CD")]
		Alef = 1575,
		[Token(Token = "0x40018CE")]
		AlefHamza = 1571,
		[Token(Token = "0x40018CF")]
		WawHamza = 1572,
		[Token(Token = "0x40018D0")]
		AlefMaksoor = 1573,
		[Token(Token = "0x40018D1")]
		AlefMagsora = 1609,
		[Token(Token = "0x40018D2")]
		HamzaNabera = 1574,
		[Token(Token = "0x40018D3")]
		Ba = 1576,
		[Token(Token = "0x40018D4")]
		Ta = 1578,
		[Token(Token = "0x40018D5")]
		Tha2 = 1579,
		[Token(Token = "0x40018D6")]
		Jeem = 1580,
		[Token(Token = "0x40018D7")]
		H7aa = 1581,
		[Token(Token = "0x40018D8")]
		Khaa2 = 1582,
		[Token(Token = "0x40018D9")]
		Dal = 1583,
		[Token(Token = "0x40018DA")]
		Thal = 1584,
		[Token(Token = "0x40018DB")]
		Ra2 = 1585,
		[Token(Token = "0x40018DC")]
		Zeen = 1586,
		[Token(Token = "0x40018DD")]
		Seen = 1587,
		[Token(Token = "0x40018DE")]
		Sheen = 1588,
		[Token(Token = "0x40018DF")]
		S9a = 1589,
		[Token(Token = "0x40018E0")]
		Dha = 1590,
		[Token(Token = "0x40018E1")]
		T6a = 1591,
		[Token(Token = "0x40018E2")]
		T6ha = 1592,
		[Token(Token = "0x40018E3")]
		Ain = 1593,
		[Token(Token = "0x40018E4")]
		Gain = 1594,
		[Token(Token = "0x40018E5")]
		Fa = 1601,
		[Token(Token = "0x40018E6")]
		Gaf = 1602,
		[Token(Token = "0x40018E7")]
		Kaf = 1603,
		[Token(Token = "0x40018E8")]
		Lam = 1604,
		[Token(Token = "0x40018E9")]
		Meem = 1605,
		[Token(Token = "0x40018EA")]
		Noon = 1606,
		[Token(Token = "0x40018EB")]
		Ha = 1607,
		[Token(Token = "0x40018EC")]
		Waw = 1608,
		[Token(Token = "0x40018ED")]
		Ya = 1610,
		[Token(Token = "0x40018EE")]
		AlefMad = 1570,
		[Token(Token = "0x40018EF")]
		TaMarboota = 1577,
		[Token(Token = "0x40018F0")]
		PersianPe = 1662,
		[Token(Token = "0x40018F1")]
		PersianChe = 1670,
		[Token(Token = "0x40018F2")]
		PersianZe = 1688,
		[Token(Token = "0x40018F3")]
		PersianGaf = 1711,
		[Token(Token = "0x40018F4")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x20003B9")]
	internal class ArabicMapping
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xD72FBC", Offset = "0xD72FBC", VA = "0xD72FBC")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x20003BA")]
	internal class ArabicTable
	{
		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x17000229")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xD73AE4", Offset = "0xD73AE4", VA = "0xD73AE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xD72FF4", Offset = "0xD72FF4", VA = "0xD72FF4")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xD73B68", Offset = "0xD73B68", VA = "0xD73B68")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003BB")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xBAD138", Offset = "0xBAD138", VA = "0xBAD138")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x20003BC")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xCD67AC", Offset = "0xCD67AC", VA = "0xCD67AC")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xCD6CFC", Offset = "0xCD6CFC", VA = "0xCD6CFC")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xCD5A6C", Offset = "0xCD5A6C", VA = "0xCD5A6C")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xCD6F00", Offset = "0xCD6F00", VA = "0xCD6F00")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xCD7574", Offset = "0xCD7574", VA = "0xCD7574")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xCD7408", Offset = "0xCD7408", VA = "0xCD7408")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xCD707C", Offset = "0xCD707C", VA = "0xCD707C")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xCD78B8", Offset = "0xCD78B8", VA = "0xCD78B8")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998F5C", Offset = "0x998F5C")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xCD8CEC", Offset = "0xCD8CEC", VA = "0xCD8CEC")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xCD8CF0", Offset = "0xCD8CF0", VA = "0xCD8CF0")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xCD8DA4", Offset = "0xCD8DA4", VA = "0xCD8DA4")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x998F94", Offset = "0x998F94")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xCD8DAC", Offset = "0xCD8DAC", VA = "0xCD8DAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xCD8FD0", Offset = "0xCD8FD0", VA = "0xCD8FD0")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xCD90C0", Offset = "0xCD90C0", VA = "0xCD90C0")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class StringObfucator
	{
		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xBACBE0", Offset = "0xBACBE0", VA = "0xBACBE0")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xBACF34", Offset = "0xBACF34", VA = "0xBACF34")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xBACEA0", Offset = "0xBACEA0", VA = "0xBACEA0")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xBAD018", Offset = "0xBAD018", VA = "0xBAD018")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xBACCC4", Offset = "0xBACCC4", VA = "0xBACCC4")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xBAD0B8", Offset = "0xBAD0B8", VA = "0xBAD0B8")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x20003C0")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4001900")]
		Array = 1,
		[Token(Token = "0x4001901")]
		Class,
		[Token(Token = "0x4001902")]
		Value,
		[Token(Token = "0x4001903")]
		IntValue,
		[Token(Token = "0x4001904")]
		DoubleValue,
		[Token(Token = "0x4001905")]
		BoolValue,
		[Token(Token = "0x4001906")]
		FloatValue
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x998FCC", Offset = "0x998FCC")]
	public class JSONNode
	{
		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B35C", Offset = "0x99B35C")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x1700040B")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002441")]
				[Address(RVA = "0xBAB84C", Offset = "0xBAB84C", VA = "0xBAB84C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002443")]
				[Address(RVA = "0xBAB8B8", Offset = "0xBAB8B8", VA = "0xBAB8B8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600243E")]
			[Address(RVA = "0xBAB7F8", Offset = "0xBAB7F8", VA = "0xBAB7F8")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600243F")]
			[Address(RVA = "0xBAB830", Offset = "0xBAB830", VA = "0xBAB830", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002440")]
			[Address(RVA = "0xBAB834", Offset = "0xBAB834", VA = "0xBAB834", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002442")]
			[Address(RVA = "0xBAB854", Offset = "0xBAB854", VA = "0xBAB854", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002444")]
			[Address(RVA = "0xBAB8C0", Offset = "0xBAB8C0", VA = "0xBAB8C0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0xBAB958", Offset = "0xBAB958", VA = "0xBAB958", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B36C", Offset = "0x99B36C")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x1700040D")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600244B")]
				[Address(RVA = "0xBABFF8", Offset = "0xBABFF8", VA = "0xBABFF8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600244D")]
				[Address(RVA = "0xBAC064", Offset = "0xBAC064", VA = "0xBAC064", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0xBAB95C", Offset = "0xBAB95C", VA = "0xBAB95C")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002447")]
			[Address(RVA = "0xBAB994", Offset = "0xBAB994", VA = "0xBAB994", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002448")]
			[Address(RVA = "0xBABB8C", Offset = "0xBABB8C", VA = "0xBABB8C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002449")]
			[Address(RVA = "0xBABACC", Offset = "0xBABACC", VA = "0xBABACC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600244A")]
			[Address(RVA = "0xBABA0C", Offset = "0xBABA0C", VA = "0xBABA0C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600244C")]
			[Address(RVA = "0xBAC000", Offset = "0xBAC000", VA = "0xBAC000", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600244E")]
			[Address(RVA = "0xBAC06C", Offset = "0xBAC06C", VA = "0xBAC06C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600244F")]
			[Address(RVA = "0xBAC124", Offset = "0xBAC124", VA = "0xBAC124", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0xCDD20C", Offset = "0xCDD20C", VA = "0xCDD20C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xCDD214", Offset = "0xCDD214", VA = "0xCDD214", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0xCDD218", Offset = "0xCDD218", VA = "0xCDD218", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xCDD220", Offset = "0xCDD220", VA = "0xCDD220", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public virtual string Value
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xCDD224", Offset = "0xCDD224", VA = "0xCDD224", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xCDD26C", Offset = "0xCDD26C", VA = "0xCDD26C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public virtual int Count
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xCDD270", Offset = "0xCDD270", VA = "0xCDD270", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022E")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xCDD2F8", Offset = "0xCDD2F8", VA = "0xCDD2F8", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9844", Offset = "0x9A9844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xCDD358", Offset = "0xCDD358", VA = "0xCDD358")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A98A8", Offset = "0x9A98A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		public virtual int AsInt
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xCDD468", Offset = "0xCDD468", VA = "0xCDD468", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0xCDD4A8", Offset = "0xCDD4A8", VA = "0xCDD4A8", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xCDD4E8", Offset = "0xCDD4E8", VA = "0xCDD4E8", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xCDD52C", Offset = "0xCDD52C", VA = "0xCDD52C", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xCDD56C", Offset = "0xCDD56C", VA = "0xCDD56C", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xCDD610", Offset = "0xCDD610", VA = "0xCDD610", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xCDD650", Offset = "0xCDD650", VA = "0xCDD650", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xCDD718", Offset = "0xCDD718", VA = "0xCDD718", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xCDD798", Offset = "0xCDD798", VA = "0xCDD798", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xCDD818", Offset = "0xCDD818", VA = "0xCDD818", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xCDD208", Offset = "0xCDD208", VA = "0xCDD208", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xCDD278", Offset = "0xCDD278", VA = "0xCDD278", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xCDD2E0", Offset = "0xCDD2E0", VA = "0xCDD2E0", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xCDD2E8", Offset = "0xCDD2E8", VA = "0xCDD2E8", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xCDD2F0", Offset = "0xCDD2F0", VA = "0xCDD2F0", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xCDD3D8", Offset = "0xCDD3D8", VA = "0xCDD3D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xCDD420", Offset = "0xCDD420", VA = "0xCDD420", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xCDD898", Offset = "0xCDD898", VA = "0xCDD898")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xCDD908", Offset = "0xCDD908", VA = "0xCDD908")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xCDBD8C", Offset = "0xCDBD8C", VA = "0xCDBD8C")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xCDD958", Offset = "0xCDD958", VA = "0xCDD958")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xCDD974", Offset = "0xCDD974", VA = "0xCDD974", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xCDCC70", Offset = "0xCDCC70", VA = "0xCDCC70", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xCDB4B8", Offset = "0xCDB4B8", VA = "0xCDB4B8")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xCD90CC", Offset = "0xCD90CC", VA = "0xCD90CC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xCDD980", Offset = "0xCDD980", VA = "0xCDD980", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xCDD984", Offset = "0xCDD984", VA = "0xCDD984")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xCDDA04", Offset = "0xCDDA04", VA = "0xCDDA04")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xCDDA74", Offset = "0xCDDA74", VA = "0xCDDA74")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xCDDAE4", Offset = "0xCDDAE4", VA = "0xCDDAE4")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xCDDB54", Offset = "0xCDDB54", VA = "0xCDDB54")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xCDDCC0", Offset = "0xCDDCC0", VA = "0xCDDCC0")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xCDDE5C", Offset = "0xCDDE5C", VA = "0xCDDE5C")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xCDE1FC", Offset = "0xCDE1FC", VA = "0xCDE1FC")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xCDE26C", Offset = "0xCDE26C", VA = "0xCDE26C")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xCDE2DC", Offset = "0xCDE2DC", VA = "0xCDE2DC")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xCDE34C", Offset = "0xCDE34C", VA = "0xCDE34C")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xCDE47C", Offset = "0xCDE47C", VA = "0xCDE47C")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xCDE598", Offset = "0xCDE598", VA = "0xCDE598")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xCDA20C", Offset = "0xCDA20C", VA = "0xCDA20C")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x999004", Offset = "0x999004")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B37C", Offset = "0x99B37C")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700040F")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002454")]
				[Address(RVA = "0xCDA650", Offset = "0xCDA650", VA = "0xCDA650", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000410")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002456")]
				[Address(RVA = "0xCDA6BC", Offset = "0xCDA6BC", VA = "0xCDA6BC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002450")]
			[Address(RVA = "0xCD9C24", Offset = "0xCD9C24", VA = "0xCD9C24")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002451")]
			[Address(RVA = "0xCDA46C", Offset = "0xCDA46C", VA = "0xCDA46C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002452")]
			[Address(RVA = "0xCDA4E0", Offset = "0xCDA4E0", VA = "0xCDA4E0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002453")]
			[Address(RVA = "0xCDA488", Offset = "0xCDA488", VA = "0xCDA488")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002455")]
			[Address(RVA = "0xCDA658", Offset = "0xCDA658", VA = "0xCDA658", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002457")]
			[Address(RVA = "0xCDA6C4", Offset = "0xCDA6C4", VA = "0xCDA6C4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002458")]
			[Address(RVA = "0xCDA77C", Offset = "0xCDA77C", VA = "0xCDA77C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B38C", Offset = "0x99B38C")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400221B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000411")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600245D")]
				[Address(RVA = "0xCDA3F8", Offset = "0xCDA3F8", VA = "0xCDA3F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000412")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600245F")]
				[Address(RVA = "0xCDA464", Offset = "0xCDA464", VA = "0xCDA464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002459")]
			[Address(RVA = "0xCD9CDC", Offset = "0xCD9CDC", VA = "0xCD9CDC")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600245A")]
			[Address(RVA = "0xCDA214", Offset = "0xCDA214", VA = "0xCDA214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600245B")]
			[Address(RVA = "0xCDA288", Offset = "0xCDA288", VA = "0xCDA288", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600245C")]
			[Address(RVA = "0xCDA230", Offset = "0xCDA230", VA = "0xCDA230")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600245E")]
			[Address(RVA = "0xCDA400", Offset = "0xCDA400", VA = "0xCDA400", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x17000236")]
		public override JSONNode Item
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xCD9760", Offset = "0xCD9760", VA = "0xCD9760", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xCD984C", Offset = "0xCD984C", VA = "0xCD984C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public override JSONNode Item
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xCD98F0", Offset = "0xCD98F0", VA = "0xCD98F0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xCD9950", Offset = "0xCD9950", VA = "0xCD9950", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public override int Count
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xCD99B8", Offset = "0xCD99B8", VA = "0xCD99B8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000239")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0xCD9B94", Offset = "0xCD9B94", VA = "0xCD9B94", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A990C", Offset = "0x9A990C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xCD9A0C", Offset = "0xCD9A0C", VA = "0xCD9A0C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xCD9A74", Offset = "0xCD9A74", VA = "0xCD9A74", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xCD9B24", Offset = "0xCD9B24", VA = "0xCD9B24", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xCD9C5C", Offset = "0xCD9C5C", VA = "0xCD9C5C", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9970", Offset = "0x9A9970")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xCD9D08", Offset = "0xCD9D08", VA = "0xCD9D08", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xCD9EB0", Offset = "0xCD9EB0", VA = "0xCD9EB0", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xCDA0AC", Offset = "0xCDA0AC", VA = "0xCDA0AC", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xCDA190", Offset = "0xCDA190", VA = "0xCDA190")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x99903C", Offset = "0x99903C")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B39C", Offset = "0x99B39C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6002460")]
			[Address(RVA = "0xCDAF50", Offset = "0xCDAF50", VA = "0xCDAF50")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002461")]
			[Address(RVA = "0xCDBD38", Offset = "0xCDBD38", VA = "0xCDBD38")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B3AC", Offset = "0x99B3AC")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000413")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002466")]
				[Address(RVA = "0xCDC29C", Offset = "0xCDC29C", VA = "0xCDC29C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000414")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002468")]
				[Address(RVA = "0xCDC308", Offset = "0xCDC308", VA = "0xCDC308", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002462")]
			[Address(RVA = "0xCDAFE8", Offset = "0xCDAFE8", VA = "0xCDAFE8")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002463")]
			[Address(RVA = "0xCDC0AC", Offset = "0xCDC0AC", VA = "0xCDC0AC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002464")]
			[Address(RVA = "0xCDC120", Offset = "0xCDC120", VA = "0xCDC120", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002465")]
			[Address(RVA = "0xCDC0C8", Offset = "0xCDC0C8", VA = "0xCDC0C8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002467")]
			[Address(RVA = "0xCDC2A4", Offset = "0xCDC2A4", VA = "0xCDC2A4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002469")]
			[Address(RVA = "0xCDC310", Offset = "0xCDC310", VA = "0xCDC310", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600246A")]
			[Address(RVA = "0xCDC3C8", Offset = "0xCDC3C8", VA = "0xCDC3C8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B3BC", Offset = "0x99B3BC")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000415")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600246F")]
				[Address(RVA = "0xCDC038", Offset = "0xCDC038", VA = "0xCDC038", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000416")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002471")]
				[Address(RVA = "0xCDC0A4", Offset = "0xCDC0A4", VA = "0xCDC0A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600246B")]
			[Address(RVA = "0xCDB0A0", Offset = "0xCDB0A0", VA = "0xCDB0A0")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600246C")]
			[Address(RVA = "0xCDBE24", Offset = "0xCDBE24", VA = "0xCDBE24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600246D")]
			[Address(RVA = "0xCDBE98", Offset = "0xCDBE98", VA = "0xCDBE98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600246E")]
			[Address(RVA = "0xCDBE40", Offset = "0xCDBE40", VA = "0xCDBE40")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002470")]
			[Address(RVA = "0xCDC040", Offset = "0xCDC040", VA = "0xCDC040", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x1700023A")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xCDA780", Offset = "0xCDA780", VA = "0xCDA780", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xCDA88C", Offset = "0xCDA88C", VA = "0xCDA88C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public override JSONNode Item
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xCDA950", Offset = "0xCDA950", VA = "0xCDA950", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xCDA9E8", Offset = "0xCDA9E8", VA = "0xCDA9E8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public override int Count
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0xCDAAB0", Offset = "0xCDAAB0", VA = "0xCDAAB0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023D")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0xCDAF58", Offset = "0xCDAF58", VA = "0xCDAF58", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A99D4", Offset = "0x9A99D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xCDAB08", Offset = "0xCDAB08", VA = "0xCDAB08", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xCDAC38", Offset = "0xCDAC38", VA = "0xCDAC38", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xCDACFC", Offset = "0xCDACFC", VA = "0xCDACFC", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xCDADB8", Offset = "0xCDADB8", VA = "0xCDADB8", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xCDB020", Offset = "0xCDB020", VA = "0xCDB020", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9A38", Offset = "0x9A9A38")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xCDB0CC", Offset = "0xCDB0CC", VA = "0xCDB0CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xCDB638", Offset = "0xCDB638", VA = "0xCDB638", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xCDBA84", Offset = "0xCDBA84", VA = "0xCDBA84", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xCDBC48", Offset = "0xCDBC48", VA = "0xCDBC48")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x1700023E")]
		public override string Value
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0xCDC3CC", Offset = "0xCDC3CC", VA = "0xCDC3CC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001828")]
			[Address(RVA = "0xCDC3D4", Offset = "0xCDC3D4", VA = "0xCDC3D4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xCDC3DC", Offset = "0xCDC3DC", VA = "0xCDC3DC")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xCDC410", Offset = "0xCDC410", VA = "0xCDC410")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xCDC454", Offset = "0xCDC454", VA = "0xCDC454")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xCDC498", Offset = "0xCDC498", VA = "0xCDC498")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xCDC4D4", Offset = "0xCDC4D4", VA = "0xCDC4D4")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xCDC510", Offset = "0xCDC510", VA = "0xCDC510", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xCDC574", Offset = "0xCDC574", VA = "0xCDC574", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xCDC5D8", Offset = "0xCDC5D8", VA = "0xCDC5D8", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x999074", Offset = "0x999074")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x1700023F")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0xCDC910", Offset = "0xCDC910", VA = "0xCDC910", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xCDC970", Offset = "0xCDC970", VA = "0xCDC970", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0xCDC9FC", Offset = "0xCDC9FC", VA = "0xCDC9FC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001837")]
			[Address(RVA = "0xCDCA6C", Offset = "0xCDCA6C", VA = "0xCDCA6C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public override int AsInt
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xCDCD08", Offset = "0xCDCD08", VA = "0xCDCD08", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xCDCD8C", Offset = "0xCDCD8C", VA = "0xCDCD8C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public override float AsFloat
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xCDCE14", Offset = "0xCDCE14", VA = "0xCDCE14", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xCDCE98", Offset = "0xCDCE98", VA = "0xCDCE98", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public override double AsDouble
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xCDCF20", Offset = "0xCDCF20", VA = "0xCDCF20", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xCDCFA4", Offset = "0xCDCFA4", VA = "0xCDCFA4", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public override bool AsBool
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xCDD02C", Offset = "0xCDD02C", VA = "0xCDD02C", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xCDD0B0", Offset = "0xCDD0B0", VA = "0xCDD0B0", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xCDD138", Offset = "0xCDD138", VA = "0xCDD138", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xCDD1A0", Offset = "0xCDD1A0", VA = "0xCDD1A0", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xCD9808", Offset = "0xCD9808", VA = "0xCD9808")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xCDA83C", Offset = "0xCDA83C", VA = "0xCDA83C")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xCDC8A4", Offset = "0xCDC8A4", VA = "0xCDC8A4")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xCDCB00", Offset = "0xCDCB00", VA = "0xCDCB00", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xCDCB8C", Offset = "0xCDCB8C", VA = "0xCDCB8C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xCDCC20", Offset = "0xCDCC20", VA = "0xCDCC20")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xCDCC38", Offset = "0xCDCC38", VA = "0xCDCC38")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xCDCC50", Offset = "0xCDCC50", VA = "0xCDCC50", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xCDCC68", Offset = "0xCDCC68", VA = "0xCDCC68", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xCDCC78", Offset = "0xCDCC78", VA = "0xCDCC78", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xCDCCC0", Offset = "0xCDCCC0", VA = "0xCDCCC0", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C6")]
	public static class JSON
	{
		[Token(Token = "0x600184A")]
		[Address(RVA = "0xCD90C8", Offset = "0xCD90C8", VA = "0xCD90C8")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace HTC.UnityPlugin.StereoRendering
{
	[Token(Token = "0x20003C7")]
	public interface IDeviceParamFactory
	{
		[Token(Token = "0x600184B")]
		int GetRenderWidth();

		[Token(Token = "0x600184C")]
		int GetRenderHeight();

		[Token(Token = "0x600184D")]
		Vector3 GetEyeSeperation(int eye);

		[Token(Token = "0x600184E")]
		Quaternion GetEyeLocalRotation(int eye);

		[Token(Token = "0x600184F")]
		Matrix4x4 GetProjectionMatrix(int eye, float nearPlane, float farPlane);
	}
	[Token(Token = "0x20003C8")]
	public enum HmdType
	{
		[Token(Token = "0x400190D")]
		Unsupported,
		[Token(Token = "0x400190E")]
		SteamVR,
		[Token(Token = "0x400190F")]
		OVR,
		[Token(Token = "0x4001910")]
		WaveVR
	}
	[Token(Token = "0x20003C9")]
	public class StereoRenderDevice
	{
		[Token(Token = "0x6001850")]
		[Address(RVA = "0xD6DB38", Offset = "0xD6DB38", VA = "0xD6DB38")]
		public static HmdType GetHmdType()
		{
			return default(HmdType);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xD6DBC4", Offset = "0xD6DBC4", VA = "0xD6DBC4")]
		public static IDeviceParamFactory InitParamFactory(HmdType hmdType)
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xD6DC38", Offset = "0xD6DC38", VA = "0xD6DC38")]
		public static bool IsNotUnityNativeSupport(HmdType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xD6DC44", Offset = "0xD6DC44", VA = "0xD6DC44")]
		public StereoRenderDevice()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9990AC", Offset = "0x9990AC")]
	public class StereoRenderer : MonoBehaviour
	{
		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform canvasOrigin;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_canvasOriginWorldPosition;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 m_canvasOriginWorldRotation;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform anchorTransform;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 m_anchorWorldPosition;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector3 m_anchorWorldRotation;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 leftProjMatrix;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Matrix4x4 rightProjMatrix;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool canvasVisible;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool shouldRender;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool useObliqueClip;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		public bool useScissor;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool isUnlit;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject stereoCameraHead;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Camera stereoCameraEye;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture leftEyeTexture;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture rightEyeTexture;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float textureResolutionScale;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material stereoMaterial;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private List<GameObject> ignoreWhenRender;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<int> ignoreObjOriginalLayer;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string ignoreLayerName;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int ignoreLayerNumber;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float reflectionOffset;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Rect fullViewport;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool isMirror;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Matrix4x4 reflectionMat;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Action preRenderListeners;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Action postRenderListeners;

		[Token(Token = "0x17000247")]
		public Vector3 canvasOriginPos
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0xD6E844", Offset = "0xD6E844", VA = "0xD6E844")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001855")]
			[Address(RVA = "0xD6E8E0", Offset = "0xD6E8E0", VA = "0xD6E8E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public Vector3 canvasOriginEuler
		{
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xD6E8EC", Offset = "0xD6E8EC", VA = "0xD6E8EC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xD6E988", Offset = "0xD6E988", VA = "0xD6E988")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public Quaternion canvasOriginRot
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xD6E994", Offset = "0xD6E994", VA = "0xD6E994")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xD6EA28", Offset = "0xD6EA28", VA = "0xD6EA28")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public Vector3 canvasOriginForward
		{
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xD6EA68", Offset = "0xD6EA68", VA = "0xD6EA68")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700024B")]
		public Vector3 canvasOriginUp
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xD6EB54", Offset = "0xD6EB54", VA = "0xD6EB54")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700024C")]
		public Vector3 canvasOriginRight
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xD6EC40", Offset = "0xD6EC40", VA = "0xD6EC40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700024D")]
		public Vector3 localCanvasOriginPos
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xD6ED2C", Offset = "0xD6ED2C", VA = "0xD6ED2C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xD6ED70", Offset = "0xD6ED70", VA = "0xD6ED70")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public Vector3 localCanvasOriginEuler
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xD6EDD4", Offset = "0xD6EDD4", VA = "0xD6EDD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xD6EEF0", Offset = "0xD6EEF0", VA = "0xD6EEF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public Quaternion localCanvasOriginRot
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xD6F00C", Offset = "0xD6F00C", VA = "0xD6F00C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001862")]
			[Address(RVA = "0xD6F0FC", Offset = "0xD6F0FC", VA = "0xD6F0FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public Vector3 anchorPos
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0xD6F204", Offset = "0xD6F204", VA = "0xD6F204")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001864")]
			[Address(RVA = "0xD6F2A0", Offset = "0xD6F2A0", VA = "0xD6F2A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public Vector3 anchorEuler
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xD6F2AC", Offset = "0xD6F2AC", VA = "0xD6F2AC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001866")]
			[Address(RVA = "0xD6F348", Offset = "0xD6F348", VA = "0xD6F348")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public Quaternion anchorRot
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0xD6F354", Offset = "0xD6F354", VA = "0xD6F354")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001868")]
			[Address(RVA = "0xD6F3E8", Offset = "0xD6F3E8", VA = "0xD6F3E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public Vector3 anchorForward
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0xD6F428", Offset = "0xD6F428", VA = "0xD6F428")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000254")]
		public Vector3 anchorUp
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0xD6F514", Offset = "0xD6F514", VA = "0xD6F514")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xD6F600", Offset = "0xD6F600", VA = "0xD6F600")]
		private void Start()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xD70018", Offset = "0xD70018", VA = "0xD70018")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xD6F9C0", Offset = "0xD6F9C0", VA = "0xD6F9C0")]
		private void CreateStereoCameraRig()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xD6FB98", Offset = "0xD6FB98", VA = "0xD6FB98")]
		private void SwapStereoShader()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xD6FF10", Offset = "0xD6FF10", VA = "0xD6FF10")]
		private void CreateRenderTextures(int sceneWidth, int sceneHeight, int aaLevel = 1)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xD700F0", Offset = "0xD700F0", VA = "0xD700F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xD70150", Offset = "0xD70150", VA = "0xD70150")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xD6E490", Offset = "0xD6E490", VA = "0xD6E490")]
		public void Render(VRRenderEventDetector detector)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xD701F4", Offset = "0xD701F4", VA = "0xD701F4")]
		public void MoveStereoCameraBasedOnHmdPose(VRRenderEventDetector detector)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xD709DC", Offset = "0xD709DC", VA = "0xD709DC")]
		private void RenderToTwoStereoTextures(VRRenderEventDetector detector)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xD705EC", Offset = "0xD705EC", VA = "0xD705EC")]
		private void RenderToOneStereoTexture(VRRenderEventDetector detector)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xD71100", Offset = "0xD71100", VA = "0xD71100")]
		private void RenderEye(Vector3 eyeOffset, Quaternion eyeRotation, Matrix4x4 projMat, Matrix4x4 worldToCameraMat, RenderTexture targetTexture, string textureName)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xD70E5C", Offset = "0xD70E5C", VA = "0xD70E5C")]
		public void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 normal)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xD7204C", Offset = "0xD7204C", VA = "0xD7204C")]
		private Vector4 GetCameraSpacePlane(Camera cam, Vector3 pt, Vector3 normal)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xD71E68", Offset = "0xD71E68", VA = "0xD71E68")]
		private Vector4 GetObliqueNearClipPlane()
		{
			return default(Vector4);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xD7153C", Offset = "0xD7153C", VA = "0xD7153C")]
		private Rect GetScissorRect(Matrix4x4 mat)
		{
			return default(Rect);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xD71BAC", Offset = "0xD71BAC", VA = "0xD71BAC")]
		private Matrix4x4 GetScissorMatrix(Rect rect)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xD721C8", Offset = "0xD721C8", VA = "0xD721C8")]
		private Vector3 WorldPointToViewport(Matrix4x4 mat, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xD72258", Offset = "0xD72258", VA = "0xD72258")]
		public void SetProjetionMatrices(Matrix4x4 leftMat, Matrix4x4 rightMat)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xD7228C", Offset = "0xD7228C", VA = "0xD7228C")]
		public void AddPreRenderListener(Action listener)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xD72330", Offset = "0xD72330", VA = "0xD72330")]
		public void AddPostRenderListener(Action listener)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xD723D4", Offset = "0xD723D4", VA = "0xD723D4")]
		public void RemovePreRenderListener(Action listener)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xD72478", Offset = "0xD72478", VA = "0xD72478")]
		public void RemovePostRenderListener(Action listener)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xD6F98C", Offset = "0xD6F98C", VA = "0xD6F98C")]
		public bool IsEditing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xD7251C", Offset = "0xD7251C", VA = "0xD7251C")]
		public void SetUnlit(bool value)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xD72528", Offset = "0xD72528", VA = "0xD72528")]
		public StereoRenderer()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	[DisallowMultipleComponent]
	public class StereoRenderManager : MonoBehaviour
	{
		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StereoRenderManager instance;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool isApplicationQuitting;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdType hmdType;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IDeviceParamFactory paramFactory;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static GameObject mainCameraParent;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Camera mainCamera;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<StereoRenderer> stereoRendererList;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera steamCam;

		[Token(Token = "0x17000255")]
		public static bool Active
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0xD6DC4C", Offset = "0xD6DC4C", VA = "0xD6DC4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000256")]
		public static StereoRenderManager Instance
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xD6DCE4", Offset = "0xD6DCE4", VA = "0xD6DCE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xD6DD50", Offset = "0xD6DD50", VA = "0xD6DD50")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xD6E0EC", Offset = "0xD6E0EC", VA = "0xD6E0EC")]
		private static Camera GetHmdRig()
		{
			return null;
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xD6E2CC", Offset = "0xD6E2CC", VA = "0xD6E2CC")]
		public void InitParamFactory()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xD6E378", Offset = "0xD6E378", VA = "0xD6E378")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xD6E3E4", Offset = "0xD6E3E4", VA = "0xD6E3E4")]
		public void InvokeStereoRenderers(VRRenderEventDetector detector)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xD6E6F4", Offset = "0xD6E6F4", VA = "0xD6E6F4")]
		public void AddToManager(StereoRenderer stereoRenderer)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xD6E75C", Offset = "0xD6E75C", VA = "0xD6E75C")]
		public void RemoveFromManager(StereoRenderer stereoRenderer)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xD6E7C4", Offset = "0xD6E7C4", VA = "0xD6E7C4")]
		public StereoRenderManager()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x999140", Offset = "0x999140")]
	[DisallowMultipleComponent]
	public class VRRenderEventDetector : MonoBehaviour
	{
		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera unityCamera;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int eye;

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xD6E254", Offset = "0xD6E254", VA = "0xD6E254")]
		public void Initialize(int e)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xD7271C", Offset = "0xD7271C", VA = "0xD7271C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xD7278C", Offset = "0xD7278C", VA = "0xD7278C")]
		public VRRenderEventDetector()
		{
		}
	}
}
namespace LegacySystem.IO
{
	[Token(Token = "0x20003CD")]
	public class File
	{
		[Token(Token = "0x6001893")]
		[Address(RVA = "0xBB8C74", Offset = "0xBB8C74", VA = "0xBB8C74")]
		public static void Delete(string path)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xBB8CD8", Offset = "0xBB8CD8", VA = "0xBB8CD8")]
		public static StreamWriter AppendText(string path)
		{
			return null;
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xBB8D3C", Offset = "0xBB8D3C", VA = "0xBB8D3C")]
		public static StreamReader OpenText(string path)
		{
			return null;
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xBB8DA0", Offset = "0xBB8DA0", VA = "0xBB8DA0")]
		public File()
		{
		}
	}
}
namespace Strobotnik.GUA
{
	[Token(Token = "0x20003CE")]
	public class Analytics : MonoBehaviour
	{
		[Token(Token = "0x20006C5")]
		public enum AutoSceneLoadHitOption
		{
			[Token(Token = "0x400222A")]
			Disabled,
			[Token(Token = "0x400222B")]
			OnlySingle,
			[Token(Token = "0x400222C")]
			OnlyAdditive,
			[Token(Token = "0x400222D")]
			Always
		}

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1A44", Offset = "0x9A1A44")]
		public string trackingID;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1A7C", Offset = "0x9A1A7C")]
		public string debugTrackingID;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1AB4", Offset = "0x9A1AB4")]
		public string appName;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1AEC", Offset = "0x9A1AEC")]
		public string appVersion;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1B24", Offset = "0x9A1B24")]
		public string newLevelAnalyticsEventPrefix;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1B5C", Offset = "0x9A1B5C")]
		public bool useHTTPS;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1B94", Offset = "0x9A1B94")]
		public bool useOfflineCache;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1BCC", Offset = "0x9A1BCC")]
		public bool sendSystemInfo;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1C04", Offset = "0x9A1C04")]
		public bool sendExceptions;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1C3C", Offset = "0x9A1C3C")]
		public bool sendExceptionsAlsoFromEditor;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9A1C74", Offset = "0x9A1C74")]
		public AutoSceneLoadHitOption autoSendHitOnSceneLoad;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GoogleUniversalAnalytics gua;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Analytics instance;

		[Token(Token = "0x4001945")]
		private const string disableAnalyticsByUserOptOutPrefKey = "GoogleUniversalAnalytics_optOut";

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string offlineCacheFileName;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string prevExceptionLogString;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string prevExceptionStrackTrace;

		[Token(Token = "0x17000257")]
		public static Analytics Instance
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0xCBA26C", Offset = "0xCBA26C", VA = "0xCBA26C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xCBA2D4", Offset = "0xCBA2D4", VA = "0xCBA2D4")]
		private int getPOSIXTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xCBA388", Offset = "0xCBA388", VA = "0xCBA388")]
		public static void setPlayerPref_disableAnalyticsByUserOptOut(bool analyticsDisabled)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xCBA468", Offset = "0xCBA468", VA = "0xCBA468")]
		public static string getActiveSceneName()
		{
			return null;
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xCBA498", Offset = "0xCBA498", VA = "0xCBA498")]
		private void Awake()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xCBCF10", Offset = "0xCBCF10", VA = "0xCBCF10")]
		private void Callback_HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xCBD320", Offset = "0xCBD320", VA = "0xCBD320")]
		private void Callback_SceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xCBD4B8", Offset = "0xCBD4B8", VA = "0xCBD4B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xCBD5B8", Offset = "0xCBD5B8", VA = "0xCBD5B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xCBD5BC", Offset = "0xCBD5BC", VA = "0xCBD5BC")]
		public static void changeScreen(string newScreenName)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xCBCD5C", Offset = "0xCBCD5C", VA = "0xCBCD5C")]
		public void sendSystemInfoEvent(string eventCategory, string eventAction, [Optional] string eventLabel, int eventValue = -1)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xCBD960", Offset = "0xCBD960", VA = "0xCBD960")]
		public Analytics()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public sealed class GoogleUniversalAnalytics
	{
		[Token(Token = "0x20006C6")]
		public enum HitType
		{
			[Token(Token = "0x400222F")]
			Pageview,
			[Token(Token = "0x4002230")]
			Screenview,
			[Token(Token = "0x4002231")]
			Event,
			[Token(Token = "0x4002232")]
			Transaction,
			[Token(Token = "0x4002233")]
			Item,
			[Token(Token = "0x4002234")]
			Social,
			[Token(Token = "0x4002235")]
			Exception,
			[Token(Token = "0x4002236")]
			Timing,
			[Token(Token = "0x4002237")]
			None
		}

		[Token(Token = "0x20006C7")]
		public enum ProductAction
		{
			[Token(Token = "0x4002239")]
			Detail,
			[Token(Token = "0x400223A")]
			Click,
			[Token(Token = "0x400223B")]
			Add,
			[Token(Token = "0x400223C")]
			Remove,
			[Token(Token = "0x400223D")]
			Checkout,
			[Token(Token = "0x400223E")]
			CheckoutOption,
			[Token(Token = "0x400223F")]
			Purchase,
			[Token(Token = "0x4002240")]
			Refund
		}

		[Token(Token = "0x20006C8")]
		private delegate string Delegate_escapeString(string s);

		[Token(Token = "0x20006C9")]
		private enum NetAccessStatus
		{
			[Token(Token = "0x4002242")]
			Offline,
			[Token(Token = "0x4002243")]
			PendingVerification,
			[Token(Token = "0x4002244")]
			Error,
			[Token(Token = "0x4002245")]
			Mismatch,
			[Token(Token = "0x4002246")]
			Functional
		}

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B3CC", Offset = "0x99B3CC")]
		private sealed class <netActivity>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleUniversalAnalytics <>4__this;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private NetworkReachability <prevReachability>5__2;

			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <gwr>5__3;

			[Token(Token = "0x17000417")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002479")]
				[Address(RVA = "0xECC61C", Offset = "0xECC61C", VA = "0xECC61C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000418")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600247B")]
				[Address(RVA = "0xECC688", Offset = "0xECC688", VA = "0xECC688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002476")]
			[Address(RVA = "0xECC2F0", Offset = "0xECC2F0", VA = "0xECC2F0")]
			[DebuggerHidden]
			public <netActivity>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6002477")]
			[Address(RVA = "0xECC31C", Offset = "0xECC31C", VA = "0xECC31C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002478")]
			[Address(RVA = "0xECC320", Offset = "0xECC320", VA = "0xECC320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600247A")]
			[Address(RVA = "0xECC624", Offset = "0xECC624", VA = "0xECC624", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x99B3DC", Offset = "0x99B3DC")]
		private sealed class <doWWWRequestAndCheckResult>d__197 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleUniversalAnalytics <>4__this;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string postDataString;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <gwr>5__2;

			[Token(Token = "0x17000419")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600247F")]
				[Address(RVA = "0xECC27C", Offset = "0xECC27C", VA = "0xECC27C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002481")]
				[Address(RVA = "0xECC2E8", Offset = "0xECC2E8", VA = "0xECC2E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600247C")]
			[Address(RVA = "0xECC12C", Offset = "0xECC12C", VA = "0xECC12C")]
			[DebuggerHidden]
			public <doWWWRequestAndCheckResult>d__197(int <>1__state)
			{
			}

			[Token(Token = "0x600247D")]
			[Address(RVA = "0xECC158", Offset = "0xECC158", VA = "0xECC158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600247E")]
			[Address(RVA = "0xECC15C", Offset = "0xECC15C", VA = "0xECC15C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002480")]
			[Address(RVA = "0xECC284", Offset = "0xECC284", VA = "0xECC284", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] hitTypeNames;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] productActionNames;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string httpCollectUrl;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string httpsCollectUrl;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string guaVersionData;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string defaultHitData;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StringBuilder sb;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HitType hitType;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Delegate_escapeString escapeString;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly GoogleUniversalAnalytics instance;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useHTTPS;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MonoBehaviour helperBehaviour;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string trackingID;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string clientID;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string userID;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string userIP;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string userAgent;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string geoID;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string appName;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string appVersion;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string appID;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool anonymizeIP;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string dataSource;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string userLanguage;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool analyticsDisabled_;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool useOfflineCache;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string offlineCacheFilePath;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private StreamReader offlineCacheReader;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private StreamWriter offlineCacheWriter;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int offlineQueueLength;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int offlineQueueSentHits;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private NetAccessStatus netAccessStatus;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private WaitForSeconds defaultReachabilityCheckPeriod;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private WaitForSeconds hitBeingBuiltRetryTime;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WaitForSeconds netVerificationErrorRetryTime;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private WaitForSeconds netVerificationMismatchRetryTime;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private WaitForSeconds cachedHitSendThrottleTime;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Dictionary<string, string> customHeaders;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private DateTime? epoch;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string offlineQueueLengthPrefKey;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string offlineQueueSentHitsPrefKey;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static char[] tabRowSplitter;

		[Token(Token = "0x17000258")]
		public static GoogleUniversalAnalytics Instance
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xCBDA6C", Offset = "0xCBDA6C", VA = "0xCBDA6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public bool analyticsDisabled
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xCBDAD4", Offset = "0xCBDAD4", VA = "0xCBDAD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xCBA454", Offset = "0xCBA454", VA = "0xCBA454")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public int remainingEntriesInOfflineCache
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xCBDD88", Offset = "0xCBDD88", VA = "0xCBDD88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025B")]
		private bool isHitBeingBuilt
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xCBE01C", Offset = "0xCBE01C", VA = "0xCBE01C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025C")]
		public bool internetReachable
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0xCBCD20", Offset = "0xCBCD20", VA = "0xCBCD20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xCBDC48", Offset = "0xCBDC48", VA = "0xCBDC48")]
		public void setOfflineQueueNetActivityTimes(float defaultReachabilityCheckPeriodSeconds, float hitBeingBuiltRetryTimeSeconds, float netVerificationErrorRetryTimeSeconds, float netVerificationMismatchRetryTimeSeconds, float cachedHitSendThrottleTimeSeconds)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xCBDE64", Offset = "0xCBDE64", VA = "0xCBDE64")]
		public GoogleUniversalAnalytics()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xCBE018", Offset = "0xCBE018", VA = "0xCBE018")]
		private static string returnStringAsIs(string s)
		{
			return null;
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xCBE05C", Offset = "0xCBE05C", VA = "0xCBE05C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9A9C", Offset = "0x9A9A9C")]
		private IEnumerator netActivity()
		{
			return null;
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xCBE0DC", Offset = "0xCBE0DC", VA = "0xCBE0DC")]
		private void addCustomHeader(string key, string value)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xCBC864", Offset = "0xCBC864", VA = "0xCBC864")]
		public bool shouldWarnAboutUsingExampleTrackingProperty()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xCBB65C", Offset = "0xCBB65C", VA = "0xCBB65C")]
		public void initialize(MonoBehaviour analyticsHelperBehaviour, string trackingID, string anonymousClientID, string appName = "", string appVersion = "", bool useHTTPS = true, string offlineCacheFilePath = "")
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xCBE22C", Offset = "0xCBE22C", VA = "0xCBE22C")]
		public void setStringEscaping(bool useStringEscaping)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xCBC8FC", Offset = "0xCBC8FC", VA = "0xCBC8FC")]
		public bool beginHit(HitType hitType)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xCBD268", Offset = "0xCBD268", VA = "0xCBD268")]
		public void cancelHit()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xCBE2C4", Offset = "0xCBE2C4", VA = "0xCBE2C4")]
		public void setAnonymizeIP(bool enabled = true)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xCBE2D0", Offset = "0xCBE2D0", VA = "0xCBE2D0")]
		public void setDataSource(string text)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xCBE368", Offset = "0xCBE368", VA = "0xCBE368")]
		public void addQueueTime(int ms)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xCBE3F8", Offset = "0xCBE3F8", VA = "0xCBE3F8")]
		public void setUserID(string userID)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xCBE490", Offset = "0xCBE490", VA = "0xCBE490")]
		public void addSessionControl(bool type)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xCBE508", Offset = "0xCBE508", VA = "0xCBE508")]
		public void setIPOverride(string ip)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xCBE188", Offset = "0xCBE188", VA = "0xCBE188")]
		public void setUserAgentOverride(string userAgent, bool allowNonEscaped = false)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xCBE5A0", Offset = "0xCBE5A0", VA = "0xCBE5A0")]
		public void setGeographicalOverride(string location)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xCBE638", Offset = "0xCBE638", VA = "0xCBE638")]
		public void addDocumentReferrer(string url, bool allowNonEscaped = false)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xCBE6E4", Offset = "0xCBE6E4", VA = "0xCBE6E4")]
		public void addCampaignName(string text)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xCBE784", Offset = "0xCBE784", VA = "0xCBE784")]
		public void addCampaignSource(string text)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xCBE824", Offset = "0xCBE824", VA = "0xCBE824")]
		public void addCampaignMedium(string text)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xCBE8C4", Offset = "0xCBE8C4", VA = "0xCBE8C4")]
		public void addCampaignKeyword(string text, bool allowNonEscaped = false)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xCBE970", Offset = "0xCBE970", VA = "0xCBE970")]
		public void addCampaignContent(string text, bool allowNonEscaped = false)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xCBEA1C", Offset = "0xCBEA1C", VA = "0xCBEA1C")]
		public void addCampaignID(string text)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xCBEABC", Offset = "0xCBEABC", VA = "0xCBEABC")]
		public void addGoogleAdWordsID(string text)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xCBEB5C", Offset = "0xCBEB5C", VA = "0xCBEB5C")]
		public void addGoogleDisplayAdsID(string text)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xCBCA38", Offset = "0xCBCA38", VA = "0xCBCA38")]
		public void addScreenResolution(int width, int height)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xCBCAE0", Offset = "0xCBCAE0", VA = "0xCBCAE0")]
		public void addViewportSize(int width, int height)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xCBEBFC", Offset = "0xCBEBFC", VA = "0xCBEBFC")]
		public void addDocumentEncoding(string text)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xCBEC9C", Offset = "0xCBEC9C", VA = "0xCBEC9C")]
		public void addScreenColors(int depthBits)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xCBED34", Offset = "0xCBED34", VA = "0xCBED34")]
		public void setUserLanguage(string text)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xCBEDCC", Offset = "0xCBEDCC", VA = "0xCBEDCC")]
		public void addJavaEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xCBEE44", Offset = "0xCBEE44", VA = "0xCBEE44")]
		public void addFlashVersion(int major, int minor, int revision)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xCBD904", Offset = "0xCBD904", VA = "0xCBD904")]
		public void addNonInteractionHit()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xCBEF30", Offset = "0xCBEF30", VA = "0xCBEF30")]
		public void addDocumentLocationURL(string url, bool allowNonEscaped = false)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xCBEFDC", Offset = "0xCBEFDC", VA = "0xCBEFDC")]
		public void addDocumentHostName(string text)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xCBF07C", Offset = "0xCBF07C", VA = "0xCBF07C")]
		public void addDocumentPath(string text, bool allowNonEscaped = false)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xCBF128", Offset = "0xCBF128", VA = "0xCBF128")]
		public void addDocumentTitle(string text)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xCBCB88", Offset = "0xCBCB88", VA = "0xCBCB88")]
		public void addScreenName(string text)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xCBF1C8", Offset = "0xCBF1C8", VA = "0xCBF1C8")]
		public void addContentGroup(int index, string text)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xCBF2B0", Offset = "0xCBF2B0", VA = "0xCBF2B0")]
		public void addLinkID(string text)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xCBF350", Offset = "0xCBF350", VA = "0xCBF350")]
		public void setApplicationName(string text)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xCBF3E8", Offset = "0xCBF3E8", VA = "0xCBF3E8")]
		public void setApplicationID(string text)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xCBF480", Offset = "0xCBF480", VA = "0xCBF480")]
		public void setApplicationVersion(string text)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xCBF518", Offset = "0xCBF518", VA = "0xCBF518")]
		public void addApplicationInstallerID(string text)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xCBD634", Offset = "0xCBD634", VA = "0xCBD634")]
		public void addEventCategory(string text)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xCBD6F0", Offset = "0xCBD6F0", VA = "0xCBD6F0")]
		public void addEventAction(string text)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xCBD7AC", Offset = "0xCBD7AC", VA = "0xCBD7AC")]
		public void addEventLabel(string text)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xCBD868", Offset = "0xCBD868", VA = "0xCBD868")]
		public void addEventValue(int value)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xCBF5B8", Offset = "0xCBF5B8", VA = "0xCBF5B8")]
		public void addTransactionID(string text)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xCBF658", Offset = "0xCBF658", VA = "0xCBF658")]
		public void addTransactionAffiliation(string text)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xCBF6F8", Offset = "0xCBF6F8", VA = "0xCBF6F8")]
		public void addTransactionRevenue(double currency)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xCBF7A8", Offset = "0xCBF7A8", VA = "0xCBF7A8")]
		public void addTransactionShipping(double currency)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xCBF858", Offset = "0xCBF858", VA = "0xCBF858")]
		public void addTransactionTax(double currency)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xCBF908", Offset = "0xCBF908", VA = "0xCBF908")]
		public void addItemName(string text)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xCBF9C4", Offset = "0xCBF9C4", VA = "0xCBF9C4")]
		public void addItemPrice(double currency)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xCBFA80", Offset = "0xCBFA80", VA = "0xCBFA80")]
		public void addItemQuantity(int value)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xCBFB18", Offset = "0xCBFB18", VA = "0xCBFB18")]
		public void addItemCode(string text)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xCBFBD4", Offset = "0xCBFBD4", VA = "0xCBFBD4")]
		public void addItemCategory(string text)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xCBFC90", Offset = "0xCBFC90", VA = "0xCBFC90")]
		public void addCurrencyCode(string text)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xCBFD50", Offset = "0xCBFD50", VA = "0xCBFD50")]
		private int clampEnhancedECommerceIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xCBFDC0", Offset = "0xCBFDC0", VA = "0xCBFDC0")]
		public void addProductAction(ProductAction action)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xCBFE98", Offset = "0xCBFE98", VA = "0xCBFE98")]
		public void addProductSKU(int productIndex, string text)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xCBFF78", Offset = "0xCBFF78", VA = "0xCBFF78")]
		public void addProductName(int productIndex, string text)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xCC0058", Offset = "0xCC0058", VA = "0xCC0058")]
		public void addProductBrand(int productIndex, string text)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xCC0138", Offset = "0xCC0138", VA = "0xCC0138")]
		public void addProductCategory(int productIndex, string text)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xCC0218", Offset = "0xCC0218", VA = "0xCC0218")]
		public void addProductVariant(int productIndex, string text)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xCC02F8", Offset = "0xCC02F8", VA = "0xCC02F8")]
		public void addProductPrice(int productIndex, double currency)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xCC03F8", Offset = "0xCC03F8", VA = "0xCC03F8")]
		public void addProductQuantity(int productIndex, int value)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xCC04BC", Offset = "0xCC04BC", VA = "0xCC04BC")]
		public void addProductCouponCode(int productIndex, string text)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xCC059C", Offset = "0xCC059C", VA = "0xCC059C")]
		public void addProductPosition(int productIndex, int value)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xCC0660", Offset = "0xCC0660", VA = "0xCC0660")]
		public void addProductCustomDimension(int productIndex, int dimensionIndex, string text)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xCC0780", Offset = "0xCC0780", VA = "0xCC0780")]
		public void addProductCustomMetric(int productIndex, int dimensionIndex, long value)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xCC0884", Offset = "0xCC0884", VA = "0xCC0884")]
		public void addTransactionCouponCode(string text)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xCC0924", Offset = "0xCC0924", VA = "0xCC0924")]
		public void addProductActionList(string text)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xCC09C4", Offset = "0xCC09C4", VA = "0xCC09C4")]
		public void addCheckoutStep(int value)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xCC0A40", Offset = "0xCC0A40", VA = "0xCC0A40")]
		public void addCheckoutStepOption(string text)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xCC0AE0", Offset = "0xCC0AE0", VA = "0xCC0AE0")]
		public void addProductImpressionListName(int listIndex, string text)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xCC0BC0", Offset = "0xCC0BC0", VA = "0xCC0BC0")]
		public void addProductImpressionSKU(int listIndex, int productIndex, string text)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xCC0CE8", Offset = "0xCC0CE8", VA = "0xCC0CE8")]
		public void addProductImpressionName(int listIndex, int productIndex, string text)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xCC0E10", Offset = "0xCC0E10", VA = "0xCC0E10")]
		public void addProductImpressionBrand(int listIndex, int productIndex, string text)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xCC0F38", Offset = "0xCC0F38", VA = "0xCC0F38")]
		public void addProductImpressionCategory(int listIndex, int productIndex, string text)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xCC1060", Offset = "0xCC1060", VA = "0xCC1060")]
		public void addProductImpressionVariant(int listIndex, int productIndex, string text)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xCC1188", Offset = "0xCC1188", VA = "0xCC1188")]
		public void addProductImpressionPosition(int listIndex, int productIndex, int value)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xCC1294", Offset = "0xCC1294", VA = "0xCC1294")]
		public void addProductImpressionPrice(int listIndex, int productIndex, double currency)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xCC13CC", Offset = "0xCC13CC", VA = "0xCC13CC")]
		public void addProductImpressionCustomDimension(int listIndex, int productIndex, int dimensionIndex, string text)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xCC152C", Offset = "0xCC152C", VA = "0xCC152C")]
		public void addProductImpressionCustomMetric(int listIndex, int productIndex, int dimensionIndex, long value)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xCC1670", Offset = "0xCC1670", VA = "0xCC1670")]
		public void addPromotionAction(string text)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xCC1710", Offset = "0xCC1710", VA = "0xCC1710")]
		public void addPromotionID(int promotionIndex, string text)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xCC17F0", Offset = "0xCC17F0", VA = "0xCC17F0")]
		public void addPromotionName(int promotionIndex, string text)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xCC18D0", Offset = "0xCC18D0", VA = "0xCC18D0")]
		public void addPromotionCreative(int promotionIndex, string text)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xCC19B0", Offset = "0xCC19B0", VA = "0xCC19B0")]
		public void addPromotionPosition(int promotionIndex, string text)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xCC1A90", Offset = "0xCC1A90", VA = "0xCC1A90")]
		public void addSocialNetwork(string text)
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xCC1B4C", Offset = "0xCC1B4C", VA = "0xCC1B4C")]
		public void addSocialAction(string text)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xCC1C08", Offset = "0xCC1C08", VA = "0xCC1C08")]
		public void addSocialActionTarget(string text, bool allowNonEscaped = false)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xCC1CD0", Offset = "0xCC1CD0", VA = "0xCC1CD0")]
		public void addUserTimingCategory(string text)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xCC1D8C", Offset = "0xCC1D8C", VA = "0xCC1D8C")]
		public void addUserTimingVariableName(string text)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xCC1E48", Offset = "0xCC1E48", VA = "0xCC1E48")]
		public void addUserTimingTime(long value)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xCC1EE0", Offset = "0xCC1EE0", VA = "0xCC1EE0")]
		public void addUserTimingLabel(string text)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xCC1F9C", Offset = "0xCC1F9C", VA = "0xCC1F9C")]
		public void addPageLoadTime(int value)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xCC2034", Offset = "0xCC2034", VA = "0xCC2034")]
		public void addDNSTime(int value)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xCC20CC", Offset = "0xCC20CC", VA = "0xCC20CC")]
		public void addPageDownloadTime(int value)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xCC2164", Offset = "0xCC2164", VA = "0xCC2164")]
		public void addRedirectResponseTime(int value)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xCC21FC", Offset = "0xCC21FC", VA = "0xCC21FC")]
		public void addTCPConnectTime(int value)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xCC2294", Offset = "0xCC2294", VA = "0xCC2294")]
		public void addServerResponseTime(int value)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xCC232C", Offset = "0xCC232C", VA = "0xCC232C")]
		public void addDOMInteractiveTime(int value)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xCC23C4", Offset = "0xCC23C4", VA = "0xCC23C4")]
		public void addContentLoadTime(int value)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xCC245C", Offset = "0xCC245C", VA = "0xCC245C")]
		public void addExceptionDescription(string text)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xCC2518", Offset = "0xCC2518", VA = "0xCC2518")]
		public void addExceptionIsFatal(bool value)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xCC25AC", Offset = "0xCC25AC", VA = "0xCC25AC")]
		public void addCustomDimension(int index, string text)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xCC2694", Offset = "0xCC2694", VA = "0xCC2694")]
		public void addCustomMetric(int index, long value)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xCC2758", Offset = "0xCC2758", VA = "0xCC2758")]
		public void addExperimentID(string text)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xCC27F8", Offset = "0xCC27F8", VA = "0xCC27F8")]
		public void addExperimentVariant(string text)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xCC2898", Offset = "0xCC2898", VA = "0xCC2898")]
		public void sendPageViewHit(string documentHostName, string documentPath, [Optional] string documentTitle)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xCC2928", Offset = "0xCC2928", VA = "0xCC2928")]
		public void sendEventHit(string eventCategory, string eventAction, [Optional] string eventLabel, int eventValue = -1)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xCC29C8", Offset = "0xCC29C8", VA = "0xCC29C8")]
		public void sendTransactionHit(string transactionID, string affiliation, double revenue, double shipping, double tax, string currencyCode)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xCC2AC4", Offset = "0xCC2AC4", VA = "0xCC2AC4")]
		public void sendItemHit(string transactionID, string itemName, double price, int quantity, string itemCode, string itemCategory, string currencyCode)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xCC2BE0", Offset = "0xCC2BE0", VA = "0xCC2BE0")]
		public void sendSocialHit(string network, string action, string target)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xCBD2A4", Offset = "0xCBD2A4", VA = "0xCBD2A4")]
		public void sendExceptionHit(string description, bool isFatal)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xCC2C60", Offset = "0xCC2C60", VA = "0xCC2C60")]
		public void sendUserTimingHit(string category, string variable, long time, string label)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xCC2D08", Offset = "0xCC2D08", VA = "0xCC2D08")]
		public void sendBrowserTimingHit(int dnsTime, int pageDownloadTime, int redirectTime, int tcpConnectTime, int serverResponseTime)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xCBD468", Offset = "0xCBD468", VA = "0xCBD468")]
		public void sendAppScreenHit(string screenName)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xCC2DC4", Offset = "0xCC2DC4", VA = "0xCC2DC4")]
		private long getPOSIXTimeMilliseconds()
		{
			return default(long);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xCC2EC0", Offset = "0xCC2EC0", VA = "0xCC2EC0")]
		private void stopOfflineCacheReader()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xCC2F1C", Offset = "0xCC2F1C", VA = "0xCC2F1C")]
		private void stopOfflineCacheWriter()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xCBD58C", Offset = "0xCBD58C", VA = "0xCBD58C")]
		public void closeOfflineCacheFile()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xCC300C", Offset = "0xCC300C", VA = "0xCC300C")]
		private void increasePlayerPrefOfflineQueueLength()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xCC30D0", Offset = "0xCC30D0", VA = "0xCC30D0")]
		private void increasePlayerPrefOfflineQueueSentHits()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xCBDADC", Offset = "0xCBDADC", VA = "0xCBDADC")]
		private void clearOfflineQueue()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xCC3194", Offset = "0xCC3194", VA = "0xCC3194")]
		private bool saveHitToOfflineQueue(string hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xCC3424", Offset = "0xCC3424", VA = "0xCC3424")]
		public bool pendingQueuedOfflineHits()
		{
			return default(bool);
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xCC3534", Offset = "0xCC3534", VA = "0xCC3534")]
		public bool sendOnePendingOfflineHit()
		{
			return default(bool);
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xCC3A24", Offset = "0xCC3A24", VA = "0xCC3A24")]
		private void addCommonOptionalHitParams()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xCBCC28", Offset = "0xCBCC28", VA = "0xCBCC28")]
		public bool sendHit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xCC3CB4", Offset = "0xCC3CB4", VA = "0xCC3CB4")]
		private byte[] gwrGet_bytes(UnityWebRequest gwr)
		{
			return null;
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xCC3D50", Offset = "0xCC3D50", VA = "0xCC3D50")]
		private bool gwrGet_isError(UnityWebRequest gwr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xCC3DA4", Offset = "0xCC3DA4", VA = "0xCC3DA4")]
		private string gwrGet_errorString(UnityWebRequest gwr)
		{
			return null;
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xCC3E24", Offset = "0xCC3E24", VA = "0xCC3E24")]
		private UnityWebRequest gwrSetupPost(string uri, byte[] postData, Dictionary<string, string> customHeaders)
		{
			return null;
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xCC4008", Offset = "0xCC4008", VA = "0xCC4008")]
		private UnityWebRequest beginWWWRequest(string postDataString)
		{
			return null;
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xCC40E4", Offset = "0xCC40E4", VA = "0xCC40E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9A9B00", Offset = "0x9A9B00")]
		private IEnumerator doWWWRequestAndCheckResult(string postDataString)
		{
			return null;
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xCC38FC", Offset = "0xCC38FC", VA = "0xCC38FC")]
		private UnityWebRequest finalizeAndSendHit(bool needReturnGWR = false)
		{
			return null;
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x20003D0")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xECD034", Offset = "0xECD034", VA = "0xECD034")]
		private void Start()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xECD0A8", Offset = "0xECD0A8", VA = "0xECD0A8")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xECD128", Offset = "0xECD128", VA = "0xECD128")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xECD0B0", Offset = "0xECD0B0", VA = "0xECD0B0")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xECD130", Offset = "0xECD130", VA = "0xECD130")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x20003D1")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xECCA90", Offset = "0xECCA90", VA = "0xECCA90")]
		private void Start()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xECCB1C", Offset = "0xECCB1C", VA = "0xECCB1C")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xECCB2C", Offset = "0xECCB2C", VA = "0xECCB2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xECCBA0", Offset = "0xECCBA0", VA = "0xECCBA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xECCC44", Offset = "0xECCC44", VA = "0xECCC44")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xECCDFC", Offset = "0xECCDFC", VA = "0xECCDFC")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xECCE04", Offset = "0xECCE04", VA = "0xECCE04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xECD020", Offset = "0xECD020", VA = "0xECD020")]
		public ForceShieldShootBall()
		{
		}
	}
}
namespace MK.Glow
{
	[Token(Token = "0x20003D4")]
	public enum Workflow
	{
		[Token(Token = "0x400197C")]
		Threshold,
		[Token(Token = "0x400197D")]
		Selective,
		[Token(Token = "0x400197E")]
		Natural
	}
	[Token(Token = "0x20003D5")]
	public enum Quality
	{
		[Token(Token = "0x4001980")]
		Ultra = 1,
		[Token(Token = "0x4001981")]
		High = 2,
		[Token(Token = "0x4001982")]
		Medium = 4,
		[Token(Token = "0x4001983")]
		Low = 8,
		[Token(Token = "0x4001984")]
		VeryLow = 12
	}
	[Token(Token = "0x20003D6")]
	public enum DebugView
	{
		[Token(Token = "0x4001986")]
		None,
		[Token(Token = "0x4001987")]
		RawBloom,
		[Token(Token = "0x4001988")]
		RawLensFlare,
		[Token(Token = "0x4001989")]
		RawGlare,
		[Token(Token = "0x400198A")]
		Bloom,
		[Token(Token = "0x400198B")]
		LensFlare,
		[Token(Token = "0x400198C")]
		Glare,
		[Token(Token = "0x400198D")]
		Composite
	}
	[Token(Token = "0x20003D7")]
	public enum RenderPriority
	{
		[Token(Token = "0x400198F")]
		Quality,
		[Token(Token = "0x4001990")]
		Balanced,
		[Token(Token = "0x4001991")]
		Performance
	}
	[Token(Token = "0x20003D8")]
	public enum GlareStyle
	{
		[Token(Token = "0x4001993")]
		Custom,
		[Token(Token = "0x4001994")]
		Line,
		[Token(Token = "0x4001995")]
		Tri,
		[Token(Token = "0x4001996")]
		Cross,
		[Token(Token = "0x4001997")]
		DistortedCross,
		[Token(Token = "0x4001998")]
		Star,
		[Token(Token = "0x4001999")]
		Flake
	}
	[Token(Token = "0x20003D9")]
	internal struct RenderDimension : IDimension
	{
		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A1CAC", Offset = "0x9A1CAC")]
		private int <width>k__BackingField;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A1CBC", Offset = "0x9A1CBC")]
		private int <height>k__BackingField;

		[Token(Token = "0x1700025D")]
		public int width
		{
			[Token(Token = "0x6001947")]
			[Address(RVA = "0xA54588", Offset = "0xA54588", VA = "0xA54588", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9B64", Offset = "0x9A9B64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001948")]
			[Address(RVA = "0xA54590", Offset = "0xA54590", VA = "0xA54590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9B74", Offset = "0x9A9B74")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public int height
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xA54598", Offset = "0xA54598", VA = "0xA54598", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9B84", Offset = "0x9A9B84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xA545A0", Offset = "0xA545A0", VA = "0xA545A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9A9B94", Offset = "0x9A9B94")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xA545A8", Offset = "0xA545A8", VA = "0xA545A8", Slot = "6")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xA54580", Offset = "0xA54580", VA = "0xA54580")]
		public RenderDimension(int width, int height)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	internal enum RenderPipeline
	{
		[Token(Token = "0x400199D")]
		Legacy,
		[Token(Token = "0x400199E")]
		SRP
	}
	[Token(Token = "0x20003DB")]
	public static class Compatibility
	{
		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool _defaultHDRFormatSupported;

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xBBD4BC", Offset = "0xBBD4BC", VA = "0xBBD4BC")]
		public static bool CheckGeometryShaderSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xBBD518", Offset = "0xBBD518", VA = "0xBBD518")]
		public static bool CheckComputeShaderSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xBBD5C8", Offset = "0xBBD5C8", VA = "0xBBD5C8")]
		public static bool CheckLensFlareFeatureSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xBBD68C", Offset = "0xBBD68C", VA = "0xBBD68C")]
		public static bool CheckGlareFeatureSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xBBD750", Offset = "0xBBD750", VA = "0xBBD750")]
		internal static RenderTextureFormat CheckSupportedRenderTextureFormat()
		{
			return default(RenderTextureFormat);
		}
	}
	[Token(Token = "0x20003DC")]
	internal sealed class ComputeShaderVariants
	{
		[Token(Token = "0x20006CC")]
		internal static class KeywordValues
		{
			[Token(Token = "0x4002251")]
			internal const int BLOOM = 1;

			[Token(Token = "0x4002252")]
			internal const int LENS_SURFACE = 1;

			[Token(Token = "0x4002253")]
			internal const int LENS_FLARE = 1;

			[Token(Token = "0x4002254")]
			internal const int GLARE = 4;

			[Token(Token = "0x4002255")]
			internal const int MK_NATURAL = 1;

			[Token(Token = "0x4002256")]
			internal const int RENDER_PRIORITY = 2;
		}

		[Token(Token = "0x20006CD")]
		internal struct KeywordState
		{
			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int bloom;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int lensSurface;

			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lensFlare;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int glare;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int natural;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int renderPriority;

			[Token(Token = "0x6002482")]
			[Address(RVA = "0xA4E5C4", Offset = "0xA4E5C4", VA = "0xA4E5C4")]
			public KeywordState(int bloom, int lensSurface, int lensFlare, int glare, int natural, int renderPriority)
			{
			}
		}

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<KeywordState, int> variants;

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xBBD828", Offset = "0xBBD828", VA = "0xBBD828")]
		internal void GetVariantNumber(KeywordState features, out int index)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xBBD8C4", Offset = "0xBBD8C4", VA = "0xBBD8C4")]
		public ComputeShaderVariants(int offset)
		{
		}
	}
	[Token(Token = "0x20003DD")]
	internal sealed class Effect
	{
		[Token(Token = "0x20006CE")]
		internal enum ShaderRenderPass
		{
			[Token(Token = "0x400225E")]
			Copy,
			[Token(Token = "0x400225F")]
			Presample,
			[Token(Token = "0x4002260")]
			Downsample,
			[Token(Token = "0x4002261")]
			Upsample,
			[Token(Token = "0x4002262")]
			Composite,
			[Token(Token = "0x4002263")]
			Debug
		}

		[Token(Token = "0x20006CF")]
		internal enum MaterialKeywords
		{
			[Token(Token = "0x4002265")]
			Bloom,
			[Token(Token = "0x4002266")]
			LensSurface,
			[Token(Token = "0x4002267")]
			LensFlare,
			[Token(Token = "0x4002268")]
			Glare1,
			[Token(Token = "0x4002269")]
			DebugRawBloom,
			[Token(Token = "0x400226A")]
			DebugRawLensFlare,
			[Token(Token = "0x400226B")]
			DebugRawGlare,
			[Token(Token = "0x400226C")]
			DebugBloom,
			[Token(Token = "0x400226D")]
			DebugLensFlare,
			[Token(Token = "0x400226E")]
			DebugGlare,
			[Token(Token = "0x400226F")]
			DebugComposite,
			[Token(Token = "0x4002270")]
			LegacyBlit,
			[Token(Token = "0x4002271")]
			RenderPriorityQuality,
			[Token(Token = "0x4002272")]
			Natural,
			[Token(Token = "0x4002273")]
			Glare2,
			[Token(Token = "0x4002274")]
			Glare3,
			[Token(Token = "0x4002275")]
			Glare4,
			[Token(Token = "0x4002276")]
			Null,
			[Token(Token = "0x4002277")]
			RenderPriorityBalanced
		}

		[Token(Token = "0x20006D0")]
		internal struct Keyword
		{
			[Token(Token = "0x4002278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal string name;

			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal bool enabled;

			[Token(Token = "0x6002483")]
			[Address(RVA = "0xA54544", Offset = "0xA54544", VA = "0xA54544")]
			internal Keyword(string name, bool enabled)
			{
			}
		}

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Resources _resources;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2 _referenceResolution;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly float _referenceAspectRatio;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly Vector2 _selectiveWorkflowThreshold;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int _cArgBufferSize;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int _glareIterationsBase;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly RenderDimension _directComputeSize;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly float naturalIntensityMult;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string _selectiveReplacementTag;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly string _selectiveGlowCameraObjectName;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _selectiveGlowCameraObject;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera _selectiveGlowCamera;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShaderVariants _presampleComputeVariants;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeShaderVariants _downsampleComputeVariants;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ComputeShaderVariants _upsampleComputeVariants;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CommandBuffer _commandBuffer;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTarget _selectiveRenderTarget;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MipBuffer _bloomDownsampleBuffer;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MipBuffer _bloomUpsampleBuffer;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MipBuffer _lensFlareDownsampleBuffer;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MipBuffer _lensFlareUpsampleBuffer;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MipBuffer _glareDownsampleBuffer;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MipBuffer _glareUpsampleBuffer0;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MipBuffer _glareUpsampleBuffer1;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MipBuffer _glareUpsampleBuffer2;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MipBuffer _glareUpsampleBuffer3;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RenderTarget _sourceFrameBuffer;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTarget _destinationFrameBuffer;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Keyword[] _shaderKeywords;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool _useGeometryShaders;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool _useComputeShaders;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		private bool _useLensSurface;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		private bool _useLensFlare;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool _useGlare;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<RenderTarget> _renderTargetsBundle;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<MaterialKeywords> _renderKeywordsBundle;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int _bloomIterations;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int _lensFlareIterations;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int _minIterations;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int _glareIterations;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int _currentRenderIndex;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float bloomUpsampleSpread;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float _lensFlareUpsampleSpread;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float _glareScatteringMult;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector2 _resolutionScale;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Vector2[] glareAngles;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private RenderTextureFormat _renderTextureFormat;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private ComputeShaderVariants.KeywordState computeShaderFeatures;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private RenderContext[] _sourceContext;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private RenderContext[] _renderContext;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private RenderContext _selectiveRenderContext;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Camera _renderingCamera;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private RenderPipeline _renderPipeline;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Material _renderMaterialNoGeometry;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material _renderMaterialGeometry;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float[] _cArgArray;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private ComputeBuffer _cArgsComputeBuffer;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private RenderDimension _computeThreadGroups;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Settings _settings;

		[Token(Token = "0x17000260")]
		private RenderTarget sourceFrameBuffer
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0xBBE0FC", Offset = "0xBBE0FC", VA = "0xBBE0FC")]
			get
			{
				return default(RenderTarget);
			}
		}

		[Token(Token = "0x17000261")]
		internal int currentRenderIndex
		{
			[Token(Token = "0x6001956")]
			[Address(RVA = "0xBBE158", Offset = "0xBBE158", VA = "0xBBE158")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000262")]
		internal RenderTextureFormat renderTextureFormat
		{
			[Token(Token = "0x6001957")]
			[Address(RVA = "0xBBE160", Offset = "0xBBE160", VA = "0xBBE160")]
			get
			{
				return default(RenderTextureFormat);
			}
		}

		[Token(Token = "0x17000263")]
		internal Material renderMaterialNoGeometry
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xBBE168", Offset = "0xBBE168", VA = "0xBBE168")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		private GameObject selectiveGlowCameraObject
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xBBECF0", Offset = "0xBBECF0", VA = "0xBBECF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private Camera selectiveGlowCamera
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xBBEDFC", Offset = "0xBBEDFC", VA = "0xBBEDFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xBBDA34", Offset = "0xBBDA34", VA = "0xBBDA34")]
		internal Effect()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xBBE170", Offset = "0xBBE170", VA = "0xBBE170")]
		internal void Enable(RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xBBE7C4", Offset = "0xBBE7C4", VA = "0xBBE7C4")]
		internal void Disable()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xBBE89C", Offset = "0xBBE89C", VA = "0xBBE89C")]
		private void PrepareScattering(float Scattering, float scale, ref int iterations, ref float spread)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xBBE97C", Offset = "0xBBE97C", VA = "0xBBE97C")]
		private void UpdateRenderBuffers()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xBBEEE0", Offset = "0xBBEEE0", VA = "0xBBEEE0")]
		private void SetupSelectiveGlowCamera()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xBBF024", Offset = "0xBBF024", VA = "0xBBF024")]
		private void CheckFeatureSupport()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xBBF1C8", Offset = "0xBBF1C8", VA = "0xBBF1C8")]
		private void BeginProfileSample(string text)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xBBF1F4", Offset = "0xBBF1F4", VA = "0xBBF1F4")]
		private void EndProfileSample(string text)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xBBF220", Offset = "0xBBF220", VA = "0xBBF220")]
		internal void Build(RenderTarget source, RenderTarget destination, Settings settings, CommandBuffer cmd, Camera renderingCamera)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xBBF66C", Offset = "0xBBF66C", VA = "0xBBF66C")]
		private void UpdateConstantBuffers()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xBC31F0", Offset = "0xBC31F0", VA = "0xBC31F0")]
		private void SetKeyword(MaterialKeywords keyword, bool enable)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xBC314C", Offset = "0xBC314C", VA = "0xBC314C")]
		private Vector2 AngleToDirection(float angleDegree)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xBC2E6C", Offset = "0xBC2E6C", VA = "0xBC2E6C")]
		private float ConvertGammaValue(float gammaSpacedValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xBC30CC", Offset = "0xBC30CC", VA = "0xBC30CC")]
		private Vector4 ConvertGammaValue(Vector4 gammaSpacedVector)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xBC32C4", Offset = "0xBC32C4", VA = "0xBC32C4")]
		private void UpdateComputeShaderThreadGroups(RenderDimension renderDimension)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xBC33C8", Offset = "0xBC33C8", VA = "0xBC33C8")]
		private void UpdateRenderIndex(int v)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xBC33D0", Offset = "0xBC33D0", VA = "0xBC33D0")]
		private void UpdateRenderIndex(ComputeShaderVariants variants, ComputeShaderVariants.KeywordState features)
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xBC3428", Offset = "0xBC3428", VA = "0xBC3428")]
		private void AttachCArgBufferToComputeKernel()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xBC2B48", Offset = "0xBC2B48", VA = "0xBC2B48")]
		private void SetFloat(PipelineProperties.ShaderProperties.CBufferProperty property, float value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xBC2D68", Offset = "0xBC2D68", VA = "0xBC2D68")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector4 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xBC2F00", Offset = "0xBC2F00", VA = "0xBC2F00")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector3 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xBC2BDC", Offset = "0xBC2BDC", VA = "0xBC2BDC")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector2 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xBC35C4", Offset = "0xBC35C4", VA = "0xBC35C4")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, RenderTarget rt, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xBC3800", Offset = "0xBC3800", VA = "0xBC3800")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, Texture tex, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xBC39FC", Offset = "0xBC39FC", VA = "0xBC39FC")]
		private void PrepareDraw(int variant, RenderDimension renderDimension, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xBC3CA8", Offset = "0xBC3CA8", VA = "0xBC3CA8")]
		private void PrepareDraw(int materialPass, ComputeShaderVariants variants, bool enableBloom, bool enableLensflare, bool enableGlare, RenderDimension renderDimension)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xBC3E94", Offset = "0xBC3E94", VA = "0xBC3E94")]
		private void Draw(bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xBC403C", Offset = "0xBC403C", VA = "0xBC403C")]
		private MaterialKeywords GetGlareKeyword(int streaks)
		{
			return default(MaterialKeywords);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xBC3BF4", Offset = "0xBC3BF4", VA = "0xBC3BF4")]
		private void DisableRenderKeywords()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xBC4060", Offset = "0xBC4060", VA = "0xBC4060")]
		private void DisableDebugKeywords()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xBC3B64", Offset = "0xBC3B64", VA = "0xBC3B64")]
		private void SetRenderPriority()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xBC03B0", Offset = "0xBC03B0", VA = "0xBC03B0")]
		private void PreSample()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xBC0A4C", Offset = "0xBC0A4C", VA = "0xBC0A4C")]
		private void Downsample()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xBC1154", Offset = "0xBC1154", VA = "0xBC1154")]
		private void Upsample()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xBC2184", Offset = "0xBC2184", VA = "0xBC2184")]
		private void Composite()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xBC40E4", Offset = "0xBC40E4", VA = "0xBC40E4")]
		internal void AfterCompositeCleanup()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	internal interface IDimension
	{
		[Token(Token = "0x17000266")]
		int width
		{
			[Token(Token = "0x6001980")]
			get;
		}

		[Token(Token = "0x17000267")]
		int height
		{
			[Token(Token = "0x6001981")]
			get;
		}

		[Token(Token = "0x17000268")]
		RenderDimension renderDimension
		{
			[Token(Token = "0x6001982")]
			get;
		}
	}
	[Token(Token = "0x20003DF")]
	public sealed class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minLimit;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxLimit;

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xDF4C7C", Offset = "0xDF4C7C", VA = "0xDF4C7C")]
		public MinMaxRangeAttribute(float minLimit, float maxLimit)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E0")]
	public struct MinMaxRange
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minValue;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float maxValue;

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xA54578", Offset = "0xA54578", VA = "0xA54578")]
		public MinMaxRange(float minValue, float maxValue)
		{
		}
	}
	[Token(Token = "0x20003E1")]
	internal sealed class MipBuffer
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTarget[] _renderTargets;

		[Token(Token = "0x17000269")]
		internal RenderTarget[] renderTargets
		{
			[Token(Token = "0x6001985")]
			[Address(RVA = "0xDF4CB4", Offset = "0xDF4CB4", VA = "0xDF4CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xDF4CBC", Offset = "0xDF4CBC", VA = "0xDF4CBC")]
		public MipBuffer(string name, RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xDF4F24", Offset = "0xDF4F24", VA = "0xDF4F24")]
		internal void CreateTemporary(RenderContext[] renderContext, int level, CommandBuffer cmd, RenderTextureFormat format, bool useComputeShaders, RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xDF508C", Offset = "0xDF508C", VA = "0xDF508C")]
		internal void ClearTemporary(CommandBuffer cmd, int level, RenderPipeline renderPipeline)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "PostProcessAttribute", RVA = "0x9991B4", Offset = "0x9991B4")]
	public sealed class MKGlow : PostProcessEffectSettings
	{
		[Serializable]
		[Token(Token = "0x20006D1")]
		public sealed class RenderPriorityParameter : ParameterOverride<RenderPriority>
		{
			[Token(Token = "0x6002484")]
			[Address(RVA = "0xDF4548", Offset = "0xDF4548", VA = "0xDF4548", Slot = "9")]
			public override void Interp(RenderPriority from, RenderPriority to, float t)
			{
			}

			[Token(Token = "0x6002485")]
			[Address(RVA = "0xDF418C", Offset = "0xDF418C", VA = "0xDF418C")]
			public RenderPriorityParameter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D2")]
		public sealed class Texture2DParameter : ParameterOverride<Texture2D>
		{
			[Token(Token = "0x6002486")]
			[Address(RVA = "0xDF4568", Offset = "0xDF4568", VA = "0xDF4568", Slot = "9")]
			public override void Interp(Texture2D from, Texture2D to, float t)
			{
			}

			[Token(Token = "0x6002487")]
			[Address(RVA = "0xDF436C", Offset = "0xDF436C", VA = "0xDF436C")]
			public Texture2DParameter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D3")]
		public sealed class DebugViewParameter : ParameterOverride<DebugView>
		{
			[Token(Token = "0x6002488")]
			[Address(RVA = "0xDF440C", Offset = "0xDF440C", VA = "0xDF440C", Slot = "9")]
			public override void Interp(DebugView from, DebugView to, float t)
			{
			}

			[Token(Token = "0x6002489")]
			[Address(RVA = "0xDF41DC", Offset = "0xDF41DC", VA = "0xDF41DC")]
			public DebugViewParameter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D4")]
		public sealed class QualityParameter : ParameterOverride<Quality>
		{
			[Token(Token = "0x600248A")]
			[Address(RVA = "0xDF4528", Offset = "0xDF4528", VA = "0xDF4528", Slot = "9")]
			public override void Interp(Quality from, Quality to, float t)
			{
			}

			[Token(Token = "0x600248B")]
			[Address(RVA = "0xDF422C", Offset = "0xDF422C", VA = "0xDF422C")]
			public QualityParameter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D5")]
		public sealed class WorkflowParameter : ParameterOverride<Workflow>
		{
			[Token(Token = "0x600248C")]
			[Address(RVA = "0xDF4588", Offset = "0xDF4588", VA = "0xDF4588", Slot = "9")]
			public override void Interp(Workflow from, Workflow to, float t)
			{
			}

			[Token(Token = "0x600248D")]
			[Address(RVA = "0xDF427C", Offset = "0xDF427C", VA = "0xDF427C")]
			public WorkflowParameter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D6")]
		public sealed class LayerMaskParameter : ParameterOverride<LayerMask>
		{
			[Token(Token = "0x600248E")]
			[Address(RVA = "0xDF444C", Offset = "0xDF444C", VA = "0xDF444C", Slot = "9")]
			public override void Interp(LayerMask from, LayerMask to, float t)
			{
			}

			[Token(Token = "0x600248F")]
			[Address(RVA = "0xDF42CC", Offset = "0xDF42CC", VA = "0xDF42CC")]
			public LayerMaskParameter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D7")]
		public sealed class MinMaxRangeParameter : ParameterOverride<MinMaxRange>
		{
			[Token(Token = "0x6002490")]
			[Address(RVA = "0xDF446C", Offset = "0xDF446C", VA = "0xDF446C", Slot = "9")]
			public override void Interp(MinMaxRange from, MinMaxRange to, float t)
			{
			}

			[Token(Token = "0x6002491")]
			[Address(RVA = "0xDF431C", Offset = "0xDF431C", VA = "0xDF431C")]
			public MinMaxRangeParameter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D8")]
		public sealed class GlareStyleParameter : ParameterOverride<GlareStyle>
		{
			[Token(Token = "0x6002492")]
			[Address(RVA = "0xDF442C", Offset = "0xDF442C", VA = "0xDF442C", Slot = "9")]
			public override void Interp(GlareStyle from, GlareStyle to, float t)
			{
			}

			[Token(Token = "0x6002493")]
			[Address(RVA = "0xDF43BC", Offset = "0xDF43BC", VA = "0xDF43BC")]
			public GlareStyleParameter()
			{
			}
		}

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoolParameter allowGeometryShaders;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoolParameter allowComputeShaders;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RenderPriorityParameter renderPriority;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DebugViewParameter debugView;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public QualityParameter quality;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public WorkflowParameter workflow;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LayerMaskParameter selectiveRenderLayerMask;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1CCC", Offset = "0x9A1CCC")]
		public FloatParameter anamorphicRatio;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1CE4", Offset = "0x9A1CE4")]
		public FloatParameter lumaScale;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1CFC", Offset = "0x9A1CFC")]
		public FloatParameter blooming;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x9A1D14", Offset = "0x9A1D14")]
		public MinMaxRangeParameter bloomThreshold;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1D2C", Offset = "0x9A1D2C")]
		public FloatParameter bloomScattering;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FloatParameter bloomIntensity;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BoolParameter allowLensSurface;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture2DParameter lensSurfaceDirtTexture;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public FloatParameter lensSurfaceDirtIntensity;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2DParameter lensSurfaceDiffractionTexture;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public FloatParameter lensSurfaceDiffractionIntensity;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BoolParameter allowLensFlare;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1D44", Offset = "0x9A1D44")]
		public FloatParameter lensFlareGhostFade;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public FloatParameter lensFlareGhostIntensity;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x9A1D5C", Offset = "0x9A1D5C")]
		public MinMaxRangeParameter lensFlareThreshold;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1D74", Offset = "0x9A1D74")]
		public FloatParameter lensFlareScattering;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Texture2DParameter lensFlareColorRamp;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1D8C", Offset = "0x9A1D8C")]
		public FloatParameter lensFlareChromaticAberration;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1DAC", Offset = "0x9A1DAC")]
		public IntParameter lensFlareGhostCount;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1DC4", Offset = "0x9A1DC4")]
		public FloatParameter lensFlareGhostDispersal;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1DDC", Offset = "0x9A1DDC")]
		public FloatParameter lensFlareHaloFade;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FloatParameter lensFlareHaloIntensity;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1DF4", Offset = "0x9A1DF4")]
		public FloatParameter lensFlareHaloSize;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public BoolParameter allowGlare;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1E0C", Offset = "0x9A1E0C")]
		public FloatParameter glareBlend;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public FloatParameter glareIntensity;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1E24", Offset = "0x9A1E24")]
		public FloatParameter glareAngle;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x9A1E40", Offset = "0x9A1E40")]
		public MinMaxRangeParameter glareThreshold;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1E58", Offset = "0x9A1E58")]
		public IntParameter glareStreaks;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1E70", Offset = "0x9A1E70")]
		public FloatParameter glareScattering;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GlareStyleParameter glareStyle;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1E88", Offset = "0x9A1E88")]
		public FloatParameter glareSample0Scattering;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1EA0", Offset = "0x9A1EA0")]
		public FloatParameter glareSample0Angle;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public FloatParameter glareSample0Intensity;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1EBC", Offset = "0x9A1EBC")]
		public FloatParameter glareSample0Offset;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1ED4", Offset = "0x9A1ED4")]
		public FloatParameter glareSample1Scattering;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1EEC", Offset = "0x9A1EEC")]
		public FloatParameter glareSample1Angle;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public FloatParameter glareSample1Intensity;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1F08", Offset = "0x9A1F08")]
		public FloatParameter glareSample1Offset;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1F20", Offset = "0x9A1F20")]
		public FloatParameter glareSample2Scattering;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1F38", Offset = "0x9A1F38")]
		public FloatParameter glareSample2Angle;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public FloatParameter glareSample2Intensity;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1F54", Offset = "0x9A1F54")]
		public FloatParameter glareSample2Offset;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1F6C", Offset = "0x9A1F6C")]
		public FloatParameter glareSample3Scattering;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1F84", Offset = "0x9A1F84")]
		public FloatParameter glareSample3Angle;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public FloatParameter glareSample3Intensity;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A1FA0", Offset = "0x9A1FA0")]
		public FloatParameter glareSample3Offset;

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xDF3680", Offset = "0xDF3680", VA = "0xDF3680", Slot = "4")]
		public override bool IsEnabledAndSupported(PostProcessRenderContext context)
		{
			return default(bool);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xDF3724", Offset = "0xDF3724", VA = "0xDF3724")]
		public MKGlow()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public sealed class MKGlowRenderer : PostProcessEffectRenderer<MKGlow>
	{
		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Effect effect;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTarget _source;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTarget _destination;

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xDF45A8", Offset = "0xDF45A8", VA = "0xDF45A8", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xDF45C8", Offset = "0xDF45C8", VA = "0xDF45C8", Slot = "7")]
		public override void Release()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xDF45E4", Offset = "0xDF45E4", VA = "0xDF45E4", Slot = "8")]
		public override void Render(PostProcessRenderContext context)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xDF4C00", Offset = "0xDF4C00", VA = "0xDF4C00")]
		public MKGlowRenderer()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	internal static class PipelineExtensions
	{
		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh _screenMesh;

		[Token(Token = "0x1700026A")]
		private static Mesh screenMesh
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0xDF5108", Offset = "0xDF5108", VA = "0xDF5108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xDF5390", Offset = "0xDF5390", VA = "0xDF5390")]
		internal static void SetKeyword(this CommandBuffer cmd, string keyword, bool enable)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xDF53B4", Offset = "0xDF53B4", VA = "0xDF53B4")]
		internal static void SetKeyword(string keyword, bool enable)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xDF53C8", Offset = "0xDF53C8", VA = "0xDF53C8")]
		internal static void Draw(this CommandBuffer cmd, List<RenderTarget> destinations, Material material, bool useGeometryShader, int pass)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xDF581C", Offset = "0xDF581C", VA = "0xDF581C")]
		internal static void Draw(List<RenderTarget> destinations, Material material, bool useGeometryShader, int pass)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xDF5C50", Offset = "0xDF5C50", VA = "0xDF5C50")]
		internal static void Draw(this CommandBuffer cmd, List<RenderTarget> destinations, ComputeShader computeShader, int kernelIndex, RenderDimension computeThreadGroups)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xDF5D04", Offset = "0xDF5D04", VA = "0xDF5D04")]
		internal static void Draw(List<RenderTarget> destinations, ComputeShader computeShader, int kernelIndex, RenderDimension computeThreadGroups)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xDF5DAC", Offset = "0xDF5DAC", VA = "0xDF5DAC")]
		private static int SinglePassStereoDownscale(bool cameraIsStereo, int size, int scale)
		{
			return default(int);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xDF5EA4", Offset = "0xDF5EA4", VA = "0xDF5EA4")]
		internal static void UpdateMipRenderContext(this Camera camera, RenderContext[] renderContexts, RenderDimension rawDimension, int levels, RenderTextureFormat format, int depthBufferBits, bool enableRandomWrite)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xDF5048", Offset = "0xDF5048", VA = "0xDF5048")]
		internal static RenderTexture GetTemporary(RenderContext renderContext, RenderTextureFormat format)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E5")]
	internal static class PipelineProperties
	{
		[Token(Token = "0x20006D9")]
		internal static class ShaderProperties
		{
			[Token(Token = "0x20006E6")]
			internal class DefaultProperty
			{
				[Token(Token = "0x40022C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				protected string _name;

				[Token(Token = "0x40022C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				protected int _id;

				[Token(Token = "0x1700041B")]
				internal string name
				{
					[Token(Token = "0x600249E")]
					[Address(RVA = "0xDF6FBC", Offset = "0xDF6FBC", VA = "0xDF6FBC")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700041C")]
				internal int id
				{
					[Token(Token = "0x600249F")]
					[Address(RVA = "0xDF6FC4", Offset = "0xDF6FC4", VA = "0xDF6FC4")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60024A0")]
				[Address(RVA = "0xDF6F64", Offset = "0xDF6F64", VA = "0xDF6F64")]
				internal DefaultProperty(string name)
				{
				}
			}

			[Token(Token = "0x20006E7")]
			internal sealed class CBufferProperty : DefaultProperty
			{
				[Token(Token = "0x40022C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private int _index;

				[Token(Token = "0x40022C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int _size;

				[Token(Token = "0x1700041D")]
				internal int index
				{
					[Token(Token = "0x60024A1")]
					[Address(RVA = "0xDF6FAC", Offset = "0xDF6FAC", VA = "0xDF6FAC")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x1700041E")]
				internal int size
				{
					[Token(Token = "0x60024A2")]
					[Address(RVA = "0xDF6FB4", Offset = "0xDF6FB4", VA = "0xDF6FB4")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60024A3")]
				[Address(RVA = "0xDF6ED0", Offset = "0xDF6ED0", VA = "0xDF6ED0")]
				internal CBufferProperty(string name, int index, int size)
				{
				}
			}

			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty viewMatrix;

			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly DefaultProperty cArgBuffer;

			[Token(Token = "0x400227C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly DefaultProperty sourceTex;

			[Token(Token = "0x400227D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly DefaultProperty targetTex;

			[Token(Token = "0x400227E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly DefaultProperty copyTargetTex;

			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly DefaultProperty bloomTex;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly DefaultProperty bloomTargetTex;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly CBufferProperty bloomSpread;

			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly CBufferProperty bloomThreshold;

			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly CBufferProperty lumaScale;

			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly CBufferProperty bloomIntensity;

			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly CBufferProperty blooming;

			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly DefaultProperty higherMipBloomTex;

			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly CBufferProperty resolutionScale;

			[Token(Token = "0x4002288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly DefaultProperty lensSurfaceDirtTex;

			[Token(Token = "0x4002289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly DefaultProperty lensSurfaceDiffractionTex;

			[Token(Token = "0x400228A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly CBufferProperty lensSurfaceDirtIntensity;

			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly CBufferProperty lensSurfaceDiffractionIntensity;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal static readonly CBufferProperty lensSurfaceDirtTexST;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal static readonly CBufferProperty lensFlareThreshold;

			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			internal static readonly CBufferProperty lensFlareGhostParams;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			internal static readonly CBufferProperty lensFlareHaloParams;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			internal static readonly DefaultProperty lensFlareTex;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			internal static readonly DefaultProperty lensFlareTargetTex;

			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			internal static readonly CBufferProperty lensFlareSpread;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			internal static readonly CBufferProperty lensFlareChromaticAberration;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			internal static readonly DefaultProperty lensFlareColorRamp;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			internal static readonly CBufferProperty glareThreshold;

			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			internal static readonly CBufferProperty glareBlend;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			internal static readonly CBufferProperty glareGlobalIntensity;

			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			internal static readonly CBufferProperty glareIntensity;

			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			internal static readonly CBufferProperty glareScattering;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			internal static readonly CBufferProperty glareDirection01;

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			internal static readonly CBufferProperty glareDirection23;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			internal static readonly CBufferProperty glareOffset;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			internal static readonly DefaultProperty glare0Tex;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			internal static readonly DefaultProperty glare0TargetTex;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			internal static readonly DefaultProperty glare1Tex;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			internal static readonly DefaultProperty glare1TargetTex;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			internal static readonly DefaultProperty glare2Tex;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			internal static readonly DefaultProperty glare2TargetTex;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			internal static readonly DefaultProperty glare3Tex;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			internal static readonly DefaultProperty glare3TargetTex;
		}

		[Token(Token = "0x20006DA")]
		internal static class CommandBufferProperties
		{
			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string commandBufferName;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly string selectiveRenderBuffer;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly string bloomDownsampleBuffer;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly string bloomUpsampleBuffer;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly string sourceBuffer;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly string glareDownsampleBuffer;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly string glareUpsampleBuffer0;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly string glareUpsampleBuffer1;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly string glareUpsampleBuffer2;

			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly string glareUpsampleBuffer3;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly string lensFlareDownsampleBuffer;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly string lensFlareUpsampleBuffer;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly string sampleDownsample;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly string samplePreSample;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly string sampleUpsample;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly string sampleComposite;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly string sampleCreateBuffers;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly string sampleClearBuffers;

			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal static readonly string sampleSetup;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal static readonly string sampleCopySource;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			internal static readonly string sampleReplacement;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			internal static readonly string samplePrepare;
		}

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int renderBufferSize;

		[Token(Token = "0x1700026B")]
		internal static bool scriptableRenderPipelineActive
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0xDF61C4", Offset = "0xDF61C4", VA = "0xDF61C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026C")]
		internal static bool xrEnabled
		{
			[Token(Token = "0x600199A")]
			[Address(RVA = "0xDF32F0", Offset = "0xDF32F0", VA = "0xDF32F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026D")]
		internal static bool singlePassStereoDoubleWideEnabled
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0xDF5E70", Offset = "0xDF5E70", VA = "0xDF5E70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026E")]
		internal static bool singlePassStereoInstancedEnabled
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0xDF623C", Offset = "0xDF623C", VA = "0xDF623C")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x20003E6")]
	internal sealed class RenderContext : IDimension
	{
		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTextureDescriptor _descriptor;

		[Token(Token = "0x1700026F")]
		public RenderTextureDescriptor descriptor
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0xDF6FCC", Offset = "0xDF6FCC", VA = "0xDF6FCC")]
			get
			{
				return default(RenderTextureDescriptor);
			}
		}

		[Token(Token = "0x17000270")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0xDF6FE8", Offset = "0xDF6FE8", VA = "0xDF6FE8", Slot = "6")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x17000271")]
		public bool enableRandomWrite
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xDF7034", Offset = "0xDF7034", VA = "0xDF7034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		public int width
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0xDF7040", Offset = "0xDF7040", VA = "0xDF7040", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000273")]
		public int height
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xDF704C", Offset = "0xDF704C", VA = "0xDF704C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xDF7058", Offset = "0xDF7058", VA = "0xDF7058")]
		internal RenderContext()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xDF70F8", Offset = "0xDF70F8", VA = "0xDF70F8")]
		internal void SinglePassStereoAdjustWidth(bool stereoEnabled)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xDF6018", Offset = "0xDF6018", VA = "0xDF6018")]
		internal void UpdateRenderContext(Camera camera, RenderTextureFormat format, int depthBufferBits, bool enableRandomWrite, RenderDimension dimension)
		{
		}
	}
	[Token(Token = "0x20003E7")]
	internal struct RenderTarget
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal RenderTexture renderTexture;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RenderTargetIdentifier renderTargetIdentifier;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int identifier;
	}
	[Token(Token = "0x20003E8")]
	internal static class RenderTargetContext
	{
		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _renderTargetCount;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RenderTargetSetup[] _mrtBindingsLegacy;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static RenderTargetBinding[] _mrtBindingsSRP;

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xDF5540", Offset = "0xDF5540", VA = "0xDF5540")]
		internal static void SetRenderTargetContext(this CommandBuffer cmd, List<RenderTarget> renderTargets)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xDF59F0", Offset = "0xDF59F0", VA = "0xDF59F0")]
		internal static void SetRenderTargetContext(List<RenderTarget> renderTargets)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public sealed class Resources : ScriptableObject
	{
		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D _lensSurfaceDirtTextureDefault;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D _lensSurfaceDiffractionTextureDefault;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D _lensFlareColorRampDefault;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader _selectiveRenderShader;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader _sm20Shader;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Shader _sm25Shader;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Shader _sm30Shader;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Shader _sm35Shader;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Shader _sm40Shader;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Shader _sm40GeometryShader;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ComputeShader _computeShader;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ComputeShader _computeShaderGles;

		[Token(Token = "0x17000274")]
		internal Texture2D lensSurfaceDirtTextureDefault
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xDF7DF8", Offset = "0xDF7DF8", VA = "0xDF7DF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		internal Texture2D lensSurfaceDiffractionTextureDefault
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xDF7E00", Offset = "0xDF7E00", VA = "0xDF7E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		internal Texture2D lensFlareColorRampDefault
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xDF7E08", Offset = "0xDF7E08", VA = "0xDF7E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		internal Shader selectiveRenderShader
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xDF7E10", Offset = "0xDF7E10", VA = "0xDF7E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		internal Shader sm20Shader
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xDF7E18", Offset = "0xDF7E18", VA = "0xDF7E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		internal Shader sm25Shader
		{
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xDF7E20", Offset = "0xDF7E20", VA = "0xDF7E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		internal Shader sm30Shader
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xDF7E28", Offset = "0xDF7E28", VA = "0xDF7E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		internal Shader sm35Shader
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0xDF7E30", Offset = "0xDF7E30", VA = "0xDF7E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		internal Shader sm40Shader
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xDF7E38", Offset = "0xDF7E38", VA = "0xDF7E38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		internal Shader sm40GeometryShader
		{
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0xDF7E40", Offset = "0xDF7E40", VA = "0xDF7E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		internal ComputeShader computeShader
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xDF7E48", Offset = "0xDF7E48", VA = "0xDF7E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xDF7D38", Offset = "0xDF7D38", VA = "0xDF7D38")]
		internal static void ResourcesNotAvailableWarning()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xDF7DA4", Offset = "0xDF7DA4", VA = "0xDF7DA4")]
		internal static Resources LoadResourcesAsset()
		{
			return null;
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xDF7E80", Offset = "0xDF7E80", VA = "0xDF7E80")]
		public Resources()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	internal struct Settings
	{
		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _allowGeometryShaders;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private bool _allowComputeShaders;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private RenderPriority _renderPriority;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private DebugView _debugView;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Quality _quality;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Workflow _workflow;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private LayerMask _selectiveRenderLayerMask;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _anamorphicRatio;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _lumaScale;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _blooming;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private MinMaxRange _bloomThreshold;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _bloomScattering;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _bloomIntensity;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _allowLensSurface;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D _lensSurfaceDirtTexture;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _lensSurfaceDirtIntensity;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture2D _lensSurfaceDirtDistortionTexture;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _lensSurfaceDirtDistortion;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D _lensSurfaceDiffractionTexture;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _lensSurfaceDiffractionIntensity;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _allowLensFlare;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _lensFlareGhostFade;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _lensFlareGhostIntensity;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MinMaxRange _lensFlareThreshold;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _lensFlareScattering;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D _lensFlareColorRamp;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _lensFlareChromaticAberration;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _lensFlareGhostCount;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _lensFlareGhostDispersal;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _lensFlareHaloFade;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _lensFlareHaloIntensity;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _lensFlareHaloSize;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _allowGlare;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _glareBlend;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _glareIntensity;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _glareAngle;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MinMaxRange _glareThreshold;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int _glareStreaks;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _glareScattering;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GlareStyle _glareStyle;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _glareSample0Scattering;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _glareSample0Angle;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _glareSample0Intensity;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _glareSample0Offset;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _glareSample1Scattering;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _glareSample1Angle;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float _glareSample1Intensity;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float _glareSample1Offset;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _glareSample2Scattering;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _glareSample2Angle;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _glareSample2Intensity;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float _glareSample2Offset;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float _glareSample3Scattering;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _glareSample3Angle;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float _glareSample3Intensity;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float _glareSample3Offset;

		[Token(Token = "0x1700027F")]
		internal bool allowGeometryShaders
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0xA54638", Offset = "0xA54638", VA = "0xA54638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xA54640", Offset = "0xA54640", VA = "0xA54640")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		internal bool allowComputeShaders
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xA5464C", Offset = "0xA5464C", VA = "0xA5464C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xA54654", Offset = "0xA54654", VA = "0xA54654")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		internal RenderPriority renderPriority
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xA54660", Offset = "0xA54660", VA = "0xA54660")]
			get
			{
				return default(RenderPriority);
			}
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0xA54668", Offset = "0xA54668", VA = "0xA54668")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		internal DebugView debugView
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xA54670", Offset = "0xA54670", VA = "0xA54670")]
			get
			{
				return default(DebugView);
			}
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xA54678", Offset = "0xA54678", VA = "0xA54678")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		internal Quality quality
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0xA54680", Offset = "0xA54680", VA = "0xA54680")]
			get
			{
				return default(Quality);
			}
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0xA54688", Offset = "0xA54688", VA = "0xA54688")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		internal Workflow workflow
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xA54690", Offset = "0xA54690", VA = "0xA54690")]
			get
			{
				return default(Workflow);
			}
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0xA54698", Offset = "0xA54698", VA = "0xA54698")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		internal LayerMask selectiveRenderLayerMask
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0xA546A0", Offset = "0xA546A0", VA = "0xA546A0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xA546A8", Offset = "0xA546A8", VA = "0xA546A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		internal float anamorphicRatio
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xA546B0", Offset = "0xA546B0", VA = "0xA546B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0xA546B8", Offset = "0xA546B8", VA = "0xA546B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		internal float lumaScale
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xA546C0", Offset = "0xA546C0", VA = "0xA546C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xA546C8", Offset = "0xA546C8", VA = "0xA546C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		internal float blooming
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xA546D0", Offset = "0xA546D0", VA = "0xA546D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xA546D8", Offset = "0xA546D8", VA = "0xA546D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		internal MinMaxRange bloomThreshold
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xA546E0", Offset = "0xA546E0", VA = "0xA546E0")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0xA546E8", Offset = "0xA546E8", VA = "0xA546E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		internal float bloomScattering
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0xA546F0", Offset = "0xA546F0", VA = "0xA546F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0xA546F8", Offset = "0xA546F8", VA = "0xA546F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		internal float bloomIntensity
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xA54700", Offset = "0xA54700", VA = "0xA54700")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0xA54708", Offset = "0xA54708", VA = "0xA54708")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		internal bool allowLensSurface
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0xA54710", Offset = "0xA54710", VA = "0xA54710")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0xA54718", Offset = "0xA54718", VA = "0xA54718")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		internal Texture2D lensSurfaceDirtTexture
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0xA54724", Offset = "0xA54724", VA = "0xA54724")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xA5472C", Offset = "0xA5472C", VA = "0xA5472C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		internal float lensSurfaceDirtIntensity
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0xA54734", Offset = "0xA54734", VA = "0xA54734")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0xA5473C", Offset = "0xA5473C", VA = "0xA5473C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		internal Texture2D lensSurfaceDirtDistortionTexture
		{
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0xA54744", Offset = "0xA54744", VA = "0xA54744")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0xA5474C", Offset = "0xA5474C", VA = "0xA5474C")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		internal float lensSurfaceDirtDistortion
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0xA54754", Offset = "0xA54754", VA = "0xA54754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0xA5475C", Offset = "0xA5475C", VA = "0xA5475C")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		internal Texture2D lensSurfaceDiffractionTexture
		{
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0xA54764", Offset = "0xA54764", VA = "0xA54764")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0xA5476C", Offset = "0xA5476C", VA = "0xA5476C")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		internal float lensSurfaceDiffractionIntensity
		{
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0xA54774", Offset = "0xA54774", VA = "0xA54774")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0xA5477C", Offset = "0xA5477C", VA = "0xA5477C")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		internal bool allowLensFlare
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xA54784", Offset = "0xA54784", VA = "0xA54784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0xA5478C", Offset = "0xA5478C", VA = "0xA5478C")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		internal float lensFlareGhostFade
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xA54798", Offset = "0xA54798", VA = "0xA54798")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xA547A0", Offset = "0xA547A0", VA = "0xA547A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		internal float lensFlareGhostIntensity
		{
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xA547A8", Offset = "0xA547A8", VA = "0xA547A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xA547B0", Offset = "0xA547B0", VA = "0xA547B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		internal MinMaxRange lensFlareThreshold
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xA547B8", Offset = "0xA547B8", VA = "0xA547B8")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0xA547C0", Offset = "0xA547C0", VA = "0xA547C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		internal float lensFlareScattering
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xA547C8", Offset = "0xA547C8", VA = "0xA547C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0xA547D0", Offset = "0xA547D0", VA = "0xA547D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		internal Texture2D lensFlareColorRamp
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xA547D8", Offset = "0xA547D8", VA = "0xA547D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0xA547E0", Offset = "0xA547E0", VA = "0xA547E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		internal float lensFlareChromaticAberration
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xA547E8", Offset = "0xA547E8", VA = "0xA547E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xA547F0", Offset = "0xA547F0", VA = "0xA547F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		internal int lensFlareGhostCount
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0xA547F8", Offset = "0xA547F8", VA = "0xA547F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0xA54800", Offset = "0xA54800", VA = "0xA54800")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		internal float lensFlareGhostDispersal
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0xA54808", Offset = "0xA54808", VA = "0xA54808")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xA54810", Offset = "0xA54810", VA = "0xA54810")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		internal float lensFlareHaloFade
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xA54818", Offset = "0xA54818", VA = "0xA54818")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0xA54820", Offset = "0xA54820", VA = "0xA54820")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		internal float lensFlareHaloIntensity
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0xA54828", Offset = "0xA54828", VA = "0xA54828")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0xA54830", Offset = "0xA54830", VA = "0xA54830")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		internal float lensFlareHaloSize
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0xA54838", Offset = "0xA54838", VA = "0xA54838")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0xA54840", Offset = "0xA54840", VA = "0xA54840")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		internal bool allowGlare
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0xA54848", Offset = "0xA54848", VA = "0xA54848")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0xA54850", Offset = "0xA54850", VA = "0xA54850")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		internal float glareBlend
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0xA5485C", Offset = "0xA5485C", VA = "0xA5485C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0xA54864", Offset = "0xA54864", VA = "0xA54864")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		internal float glareIntensity
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0xA5486C", Offset = "0xA5486C", VA = "0xA5486C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0xA54874", Offset = "0xA54874", VA = "0xA54874")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		internal float glareAngle
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0xA5487C", Offset = "0xA5487C", VA = "0xA5487C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xA54884", Offset = "0xA54884", VA = "0xA54884")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		internal MinMaxRange glareThreshold
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xA5488C", Offset = "0xA5488C", VA = "0xA5488C")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0xA54894", Offset = "0xA54894", VA = "0xA54894")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		internal int glareStreaks
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xA5489C", Offset = "0xA5489C", VA = "0xA5489C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xA548A4", Offset = "0xA548A4", VA = "0xA548A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		internal float glareScattering
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xA548AC", Offset = "0xA548AC", VA = "0xA548AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0xA548B4", Offset = "0xA548B4", VA = "0xA548B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		internal GlareStyle glareStyle
		{
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0xA548BC", Offset = "0xA548BC", VA = "0xA548BC")]
			get
			{
				return default(GlareStyle);
			}
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0xA548C4", Offset = "0xA548C4", VA = "0xA548C4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		internal float glareSample0Scattering
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xA548CC", Offset = "0xA548CC", VA = "0xA548CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xA548D4", Offset = "0xA548D4", VA = "0xA548D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		internal float glareSample0Angle
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xA548DC", Offset = "0xA548DC", VA = "0xA548DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xA548E4", Offset = "0xA548E4", VA = "0xA548E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		internal float glareSample0Intensity
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xA548EC", Offset = "0xA548EC", VA = "0xA548EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xA548F4", Offset = "0xA548F4", VA = "0xA548F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		internal float glareSample0Offset
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0xA548FC", Offset = "0xA548FC", VA = "0xA548FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0xA54904", Offset = "0xA54904", VA = "0xA54904")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		internal float glareSample1Scattering
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0xA5490C", Offset = "0xA5490C", VA = "0xA5490C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xA54914", Offset = "0xA54914", VA = "0xA54914")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		internal float glareSample1Angle
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xA5491C", Offset = "0xA5491C", VA = "0xA5491C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xA54924", Offset = "0xA54924", VA = "0xA54924")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		internal float glareSample1Intensity
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xA5492C", Offset = "0xA5492C", VA = "0xA5492C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xA54934", Offset = "0xA54934", VA = "0xA54934")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		internal float glareSample1Offset
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xA5493C", Offset = "0xA5493C", VA = "0xA5493C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0xA54944", Offset = "0xA54944", VA = "0xA54944")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		internal float glareSample2Scattering
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xA5494C", Offset = "0xA5494C", VA = "0xA5494C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xA54954", Offset = "0xA54954", VA = "0xA54954")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		internal float glareSample2Angle
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xA5495C", Offset = "0xA5495C", VA = "0xA5495C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xA54964", Offset = "0xA54964", VA = "0xA54964")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		internal float glareSample2Intensity
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xA5496C", Offset = "0xA5496C", VA = "0xA5496C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xA54974", Offset = "0xA54974", VA = "0xA54974")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		internal float glareSample2Offset
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xA5497C", Offset = "0xA5497C", VA = "0xA5497C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xA54984", Offset = "0xA54984", VA = "0xA54984")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		internal float glareSample3Scattering
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xA5498C", Offset = "0xA5498C", VA = "0xA5498C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0xA54994", Offset = "0xA54994", VA = "0xA54994")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		internal float glareSample3Angle
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xA5499C", Offset = "0xA5499C", VA = "0xA5499C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0xA549A4", Offset = "0xA549A4", VA = "0xA549A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		internal float glareSample3Intensity
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xA549AC", Offset = "0xA549AC", VA = "0xA549AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xA549B4", Offset = "0xA549B4", VA = "0xA549B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		internal float glareSample3Offset
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xA549BC", Offset = "0xA549BC", VA = "0xA549BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xA549C4", Offset = "0xA549C4", VA = "0xA549C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xA549CC", Offset = "0xA549CC", VA = "0xA549CC")]
		internal void SetGlarePreset(GlareStyle glareStyle)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xDF4790", Offset = "0xDF4790", VA = "0xDF4790")]
		public static implicit operator Settings(MKGlow input)
		{
			return default(Settings);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xDF32F8", Offset = "0xDF32F8", VA = "0xDF32F8")]
		public static implicit operator Settings(MK.Glow.Legacy.MKGlow input)
		{
			return default(Settings);
		}
	}
}
namespace MK.Glow.Legacy
{
	[Token(Token = "0x20003EB")]
	[ExecuteAlways]
	[DisallowMultipleComponent]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x999254", Offset = "0x999254")]
	public class MKGlow : MonoBehaviour
	{
		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowGeometryShaders;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool allowComputeShaders;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public RenderPriority renderPriority;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugView debugView;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quality quality;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Workflow workflow;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask selectiveRenderLayerMask;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2078", Offset = "0x9A2078")]
		public float anamorphicRatio;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2090", Offset = "0x9A2090")]
		public float lumaScale;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A20A8", Offset = "0x9A20A8")]
		public float blooming;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x9A20C0", Offset = "0x9A20C0")]
		public MinMaxRange bloomThreshold;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A20D8", Offset = "0x9A20D8")]
		public float bloomScattering;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float bloomIntensity;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool allowLensSurface;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D lensSurfaceDirtTexture;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float lensSurfaceDirtIntensity;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D lensSurfaceDiffractionTexture;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lensSurfaceDiffractionIntensity;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool allowLensFlare;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A20F0", Offset = "0x9A20F0")]
		public float lensFlareGhostFade;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lensFlareGhostIntensity;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x9A2108", Offset = "0x9A2108")]
		public MinMaxRange lensFlareThreshold;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2120", Offset = "0x9A2120")]
		public float lensFlareScattering;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Texture2D lensFlareColorRamp;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2138", Offset = "0x9A2138")]
		public float lensFlareChromaticAberration;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2158", Offset = "0x9A2158")]
		public int lensFlareGhostCount;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2170", Offset = "0x9A2170")]
		public float lensFlareGhostDispersal;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2188", Offset = "0x9A2188")]
		public float lensFlareHaloFade;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float lensFlareHaloIntensity;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A21A0", Offset = "0x9A21A0")]
		public float lensFlareHaloSize;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool allowGlare;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A21B8", Offset = "0x9A21B8")]
		public float glareBlend;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float glareIntensity;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A21D0", Offset = "0x9A21D0")]
		public float glareAngle;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x9A21EC", Offset = "0x9A21EC")]
		public MinMaxRange glareThreshold;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2204", Offset = "0x9A2204")]
		public int glareStreaks;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public GlareStyle glareStyle;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A221C", Offset = "0x9A221C")]
		public float glareScattering;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2234", Offset = "0x9A2234")]
		public float glareSample0Scattering;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A224C", Offset = "0x9A224C")]
		public float glareSample0Angle;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float glareSample0Intensity;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2268", Offset = "0x9A2268")]
		public float glareSample0Offset;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2280", Offset = "0x9A2280")]
		public float glareSample1Scattering;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2298", Offset = "0x9A2298")]
		public float glareSample1Angle;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float glareSample1Intensity;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A22B4", Offset = "0x9A22B4")]
		public float glareSample1Offset;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A22CC", Offset = "0x9A22CC")]
		public float glareSample2Scattering;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A22E4", Offset = "0x9A22E4")]
		public float glareSample2Angle;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float glareSample2Intensity;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2300", Offset = "0x9A2300")]
		public float glareSample2Offset;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2318", Offset = "0x9A2318")]
		public float glareSample3Scattering;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A2330", Offset = "0x9A2330")]
		public float glareSample3Angle;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float glareSample3Intensity;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9A234C", Offset = "0x9A234C")]
		public float glareSample3Offset;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Effect _effect;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RenderTarget _source;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private RenderTarget _destination;

		[Token(Token = "0x170002B7")]
		private Camera renderingCamera
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xDF2F74", Offset = "0xDF2F74", VA = "0xDF2F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xDF2FC4", Offset = "0xDF2FC4", VA = "0xDF2FC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A9BF4", Offset = "0x9A9BF4")]
		private void LoadMobilePreset()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xDF2FF0", Offset = "0xDF2FF0", VA = "0xDF2FF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9A9C2C", Offset = "0x9A9C2C")]
		private void LoadQualityPreset()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xDF301C", Offset = "0xDF301C", VA = "0xDF301C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xDF309C", Offset = "0xDF309C", VA = "0xDF309C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xDF30B8", Offset = "0xDF30B8", VA = "0xDF30B8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xDF3588", Offset = "0xDF3588", VA = "0xDF3588")]
		public MKGlow()
		{
		}
	}
}
namespace MK.Glow.Example
{
	[Token(Token = "0x20003EC")]
	public class Asteroid : MonoBehaviour
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D[] _emissionTextures;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly MinMaxRange _minMaxVelocity;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MinMaxRange _minMaxScale;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _nextColorChangeTime;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _nextColorIndex;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _nextColorIntensity;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _currentColor;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentColorIntensity;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Material _baseMaterial;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _usedMaterial;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody _rigidBody;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _emissionColorId;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _emissionTextureId;

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xDF0B08", Offset = "0xDF0B08", VA = "0xDF0B08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xDF0DD4", Offset = "0xDF0DD4", VA = "0xDF0DD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xDF0FD0", Offset = "0xDF0FD0", VA = "0xDF0FD0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xDF112C", Offset = "0xDF112C", VA = "0xDF112C")]
		public Asteroid()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class AsteroidSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float _spawnTime;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _asteroidObject;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _maxObjects;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _spawnedObjects;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _time;

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xDF11F4", Offset = "0xDF11F4", VA = "0xDF11F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xDF1374", Offset = "0xDF1374", VA = "0xDF1374")]
		public AsteroidSpawner()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class ChangeSettingsLegacy : MonoBehaviour
	{
		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MK.Glow.Legacy.MKGlow _mkGlow;

		[Token(Token = "0x170002B8")]
		public int debugView
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xDF1434", Offset = "0xDF1434", VA = "0xDF1434")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xDF1454", Offset = "0xDF1454", VA = "0xDF1454")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public float anamorphicRatio
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xDF1474", Offset = "0xDF1474", VA = "0xDF1474")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0xDF1494", Offset = "0xDF1494", VA = "0xDF1494")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public float lumaScale
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xDF14B4", Offset = "0xDF14B4", VA = "0xDF14B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0xDF14D4", Offset = "0xDF14D4", VA = "0xDF14D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public float blooming
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xDF14F4", Offset = "0xDF14F4", VA = "0xDF14F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xDF1514", Offset = "0xDF1514", VA = "0xDF1514")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public float bloomThreshold
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xDF1534", Offset = "0xDF1534", VA = "0xDF1534")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0xDF1554", Offset = "0xDF1554", VA = "0xDF1554")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public float bloomClamp
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xDF1574", Offset = "0xDF1574", VA = "0xDF1574")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xDF1594", Offset = "0xDF1594", VA = "0xDF1594")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float bloomScattering
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xDF15B4", Offset = "0xDF15B4", VA = "0xDF15B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xDF15D4", Offset = "0xDF15D4", VA = "0xDF15D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public float bloomIntensity
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xDF15F4", Offset = "0xDF15F4", VA = "0xDF15F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xDF1614", Offset = "0xDF1614", VA = "0xDF1614")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public bool allowLensSurface
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xDF1634", Offset = "0xDF1634", VA = "0xDF1634")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xDF1654", Offset = "0xDF1654", VA = "0xDF1654")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public float lensSurfaceDirtIntensity
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xDF1678", Offset = "0xDF1678", VA = "0xDF1678")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0xDF1698", Offset = "0xDF1698", VA = "0xDF1698")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public float lensSurfaceDiffractionIntensity
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xDF16B8", Offset = "0xDF16B8", VA = "0xDF16B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xDF16D8", Offset = "0xDF16D8", VA = "0xDF16D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public bool allowLensFlare
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xDF16F8", Offset = "0xDF16F8", VA = "0xDF16F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xDF1718", Offset = "0xDF1718", VA = "0xDF1718")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public float lensFlareThreshold
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xDF173C", Offset = "0xDF173C", VA = "0xDF173C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xDF175C", Offset = "0xDF175C", VA = "0xDF175C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public float lensFlareClamp
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xDF177C", Offset = "0xDF177C", VA = "0xDF177C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xDF179C", Offset = "0xDF179C", VA = "0xDF179C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public float lensFlareChromaticAberration
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xDF17BC", Offset = "0xDF17BC", VA = "0xDF17BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xDF17DC", Offset = "0xDF17DC", VA = "0xDF17DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public float lensFlareScattering
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xDF17FC", Offset = "0xDF17FC", VA = "0xDF17FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xDF181C", Offset = "0xDF181C", VA = "0xDF181C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public float lensFlareGhostFade
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xDF183C", Offset = "0xDF183C", VA = "0xDF183C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xDF185C", Offset = "0xDF185C", VA = "0xDF185C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public float lensFlareGhostCount
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xDF187C", Offset = "0xDF187C", VA = "0xDF187C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xDF18A0", Offset = "0xDF18A0", VA = "0xDF18A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public float lensFlareGhostDispersal
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xDF18C4", Offset = "0xDF18C4", VA = "0xDF18C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xDF18E4", Offset = "0xDF18E4", VA = "0xDF18E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public float lensFlareGhostIntensity
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xDF1904", Offset = "0xDF1904", VA = "0xDF1904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xDF1924", Offset = "0xDF1924", VA = "0xDF1924")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public float lensFlareHaloFade
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xDF1944", Offset = "0xDF1944", VA = "0xDF1944")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xDF1964", Offset = "0xDF1964", VA = "0xDF1964")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public float lensFlareHaloSize
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xDF1984", Offset = "0xDF1984", VA = "0xDF1984")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xDF19A4", Offset = "0xDF19A4", VA = "0xDF19A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public float lensFlareHaloIntensity
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xDF19C4", Offset = "0xDF19C4", VA = "0xDF19C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xDF19E4", Offset = "0xDF19E4", VA = "0xDF19E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public bool allowGlare
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0xDF1A04", Offset = "0xDF1A04", VA = "0xDF1A04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0xDF1A24", Offset = "0xDF1A24", VA = "0xDF1A24")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public float glareThreshold
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xDF1A48", Offset = "0xDF1A48", VA = "0xDF1A48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xDF1A68", Offset = "0xDF1A68", VA = "0xDF1A68")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public float glareClamp
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0xDF1A88", Offset = "0xDF1A88", VA = "0xDF1A88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0xDF1AA8", Offset = "0xDF1AA8", VA = "0xDF1AA8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public float glareBlend
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xDF1AC8", Offset = "0xDF1AC8", VA = "0xDF1AC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0xDF1AE8", Offset = "0xDF1AE8", VA = "0xDF1AE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public float glareSample0Scattering
		{
			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0xDF1B08", Offset = "0xDF1B08", VA = "0xDF1B08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A70")]
			[Address(RVA = "0xDF1B28", Offset = "0xDF1B28", VA = "0xDF1B28")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public float glareSample0Angle
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0xDF1B48", Offset = "0xDF1B48", VA = "0xDF1B48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xDF1B68", Offset = "0xDF1B68", VA = "0xDF1B68")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public float glareSample0Offset
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xDF1B88", Offset = "0xDF1B88", VA = "0xDF1B88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0xDF1BA8", Offset = "0xDF1BA8", VA = "0xDF1BA8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public float glareSample0Intensity
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xDF1BC8", Offset = "0xDF1BC8", VA = "0xDF1BC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0xDF1BE8", Offset = "0xDF1BE8", VA = "0xDF1BE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public float glareSample1Scattering
		{
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xDF1C08", Offset = "0xDF1C08", VA = "0xDF1C08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0xDF1C28", Offset = "0xDF1C28", VA = "0xDF1C28")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public float glareSample1Angle
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xDF1C48", Offset = "0xDF1C48", VA = "0xDF1C48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0xDF1C68", Offset = "0xDF1C68", VA = "0xDF1C68")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public float glareSample1Offset
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xDF1C88", Offset = "0xDF1C88", VA = "0xDF1C88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xDF1CA8", Offset = "0xDF1CA8", VA = "0xDF1CA8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public float glareSample1Intensity
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0xDF1CC8", Offset = "0xDF1CC8", VA = "0xDF1CC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0xDF1CE8", Offset = "0xDF1CE8", VA = "0xDF1CE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public float glareSample2Scattering
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0xDF1D08", Offset = "0xDF1D08", VA = "0xDF1D08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0xDF1D28", Offset = "0xDF1D28", VA = "0xDF1D28")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public float glareSample2Angle
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0xDF1D48", Offset = "0xDF1D48", VA = "0xDF1D48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0xDF1D68", Offset = "0xDF1D68", VA = "0xDF1D68")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public float glareSample2Offset
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0xDF1D88", Offset = "0xDF1D88", VA = "0xDF1D88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0xDF1DA8", Offset = "0xDF1DA8", VA = "0xDF1DA8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public float glareSample2Intensity
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0xDF1DC8", Offset = "0xDF1DC8", VA = "0xDF1DC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0xDF1DE8", Offset = "0xDF1DE8", VA = "0xDF1DE8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public float glareSample3Scattering
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xDF1E08", Offset = "0xDF1E08", VA = "0xDF1E08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0xDF1E28", Offset = "0xDF1E28", VA = "0xDF1E28")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public float glareSample3Angle
		{
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0xDF1E48", Offset = "0xDF1E48", VA = "0xDF1E48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xDF1E68", Offset = "0xDF1E68", VA = "0xDF1E68")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public float glareSample3Offset
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0xDF1E88", Offset = "0xDF1E88", VA = "0xDF1E88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0xDF1EA8", Offset = "0xDF1EA8", VA = "0xDF1EA8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public float glareSample3Intensity
		{
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0xDF1EC8", Offset = "0xDF1EC8", VA = "0xDF1EC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0xDF1EE8", Offset = "0xDF1EE8", VA = "0xDF1EE8")]
			set
			{
			}
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xDF13D0", Offset = "0xDF13D0", VA = "0xDF13D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xDF1F08", Offset = "0xDF1F08", VA = "0xDF1F08")]
		public ChangeSettingsLegacy()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class Cube : MonoBehaviour
	{
		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MinMaxRange _minMaxSpeed;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MinMaxRange _directionSwitchTime;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _nextColorChangeTime;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _nextColorIndex;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _nextColorIntensity;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _nextDirectionChangeTime;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentSpeed;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _currentColor;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentColorIntensity;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _baseMaterial;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _usedMaterial;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _emissionColorId;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _colorId;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _startPos;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Vector3 _endPos;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _forward;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _forwardDirection;

		[Token(Token = "0x170002E3")]
		private Vector3 _targetPosition
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0xDF1F10", Offset = "0xDF1F10", VA = "0xDF1F10")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xDF1F4C", Offset = "0xDF1F4C", VA = "0xDF1F4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xDF2224", Offset = "0xDF2224", VA = "0xDF2224")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xDF26F0", Offset = "0xDF26F0", VA = "0xDF26F0")]
		public Cube()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class DestroyOpenMenuText : MonoBehaviour
	{
		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Outline _outline;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _blinkSpeed;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _alpha;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _textColor;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _outlineColor;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _forward;

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xDF27C4", Offset = "0xDF27C4", VA = "0xDF27C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xDF2918", Offset = "0xDF2918", VA = "0xDF2918")]
		public DestroyOpenMenuText()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class HandleMenu : MonoBehaviour
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _canvas;

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xDF299C", Offset = "0xDF299C", VA = "0xDF299C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xDF2A0C", Offset = "0xDF2A0C", VA = "0xDF2A0C")]
		public HandleMenu()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class MoveCamera : MonoBehaviour
	{
		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _horizontalSpeed;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _verticalSpeed;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _centerTransform;

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xDF2A14", Offset = "0xDF2A14", VA = "0xDF2A14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xDF2BEC", Offset = "0xDF2BEC", VA = "0xDF2BEC")]
		public MoveCamera()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class RotateObject : MonoBehaviour
	{
		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _rotation;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly float _heightMovement;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float _heightMovementSpeed;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _startPosition;

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xDF2C08", Offset = "0xDF2C08", VA = "0xDF2C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xDF2C44", Offset = "0xDF2C44", VA = "0xDF2C44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xDF2DCC", Offset = "0xDF2DCC", VA = "0xDF2DCC")]
		public RotateObject()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class SpectateObjects : MonoBehaviour
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _gameObjects;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentObject;

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xDF2E50", Offset = "0xDF2E50", VA = "0xDF2E50")]
		public void SwitchObject()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xDF2F04", Offset = "0xDF2F04", VA = "0xDF2F04")]
		public SpectateObjects()
		{
		}
	}
}
