using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using DigitalOpus.MB.Core;
using ES3Internal;
using ES3Types;
using HurricaneVR.Framework.Components;
using HurricaneVR.Framework.ControllerInput;
using HurricaneVR.Framework.Core;
using HurricaneVR.Framework.Core.Grabbers;
using HurricaneVR.Framework.Core.Player;
using HurricaneVR.Framework.Core.Sockets;
using HurricaneVR.Framework.Weapons;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840890", Offset = "0x840890")]
internal sealed class <>f__AnonymousType0<<assembly>j__TPar, <type>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x846880", Offset = "0x846880")]
	private readonly <assembly>j__TPar <assembly>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x846894", Offset = "0x846894")]
	private readonly <type>j__TPar <type>i__Field;

	[Token(Token = "0x17000001")]
	public <assembly>j__TPar assembly
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<assembly>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <type>j__TPar type
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<type>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<assembly>j__TPar assembly, <type>j__TPar type)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class FrameRateLimiter : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxFrames;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x134F1E4", Offset = "0x134F1E4", VA = "0x134F1E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x134F1E8", Offset = "0x134F1E8", VA = "0x134F1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x134F28C", Offset = "0x134F28C", VA = "0x134F28C")]
	public FrameRateLimiter()
	{
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8408A0", Offset = "0x8408A0")]
public class ES3Serializable : Attribute
{
	[Token(Token = "0x600000A")]
	[Address(RVA = "0x192FC54", Offset = "0x192FC54", VA = "0x192FC54")]
	public ES3Serializable()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8408B4", Offset = "0x8408B4")]
public class ES3NonSerializable : Attribute
{
	[Token(Token = "0x600000B")]
	[Address(RVA = "0x192481C", Offset = "0x192481C", VA = "0x192481C")]
	public ES3NonSerializable()
	{
	}
}
[Token(Token = "0x2000006")]
public class ES3AutoSave : MonoBehaviour, ISerializationCallbackReceiver
{
	[Serializable]
	[Token(Token = "0x2000007")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8408C8", Offset = "0x8408C8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Component> <>9__7_0;

		[Token(Token = "0x6000013")]
		[Address(RVA = "0xC5CE7C", Offset = "0xC5CE7C", VA = "0xC5CE7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000014")]
		[Address(RVA = "0xC5CE84", Offset = "0xC5CE84", VA = "0xC5CE84")]
		internal bool <OnAfterDeserialize>b__7_0(Component c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool saveChildren;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isQuitting;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Component> componentsToSave;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xCCA028", Offset = "0xCCA028", VA = "0xCCA028")]
	public void Awake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xCCA4CC", Offset = "0xCCA4CC", VA = "0xCCA4CC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xCCA4D8", Offset = "0xCCA4D8", VA = "0xCCA4D8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xCCA654", Offset = "0xCCA654", VA = "0xCCA654", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xCCA658", Offset = "0xCCA658", VA = "0xCCA658", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xCCA77C", Offset = "0xCCA77C", VA = "0xCCA77C")]
	public ES3AutoSave()
	{
	}
}
[Token(Token = "0x2000008")]
public class ES3AutoSaveMgr : MonoBehaviour
{
	[Token(Token = "0x2000009")]
	public enum LoadEvent
	{
		[Token(Token = "0x4000010")]
		None,
		[Token(Token = "0x4000011")]
		Awake,
		[Token(Token = "0x4000012")]
		Start
	}

	[Token(Token = "0x200000A")]
	public enum SaveEvent
	{
		[Token(Token = "0x4000014")]
		None,
		[Token(Token = "0x4000015")]
		OnApplicationQuit,
		[Token(Token = "0x4000016")]
		OnApplicationPause
	}

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ES3AutoSaveMgr _current;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveEvent saveEvent;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LoadEvent loadEvent;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ES3SerializableSettings settings;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HashSet<ES3AutoSave> autoSaves;

	[Token(Token = "0x17000003")]
	public static ES3AutoSaveMgr Current
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0xCCA124", Offset = "0xCCA124", VA = "0xCCA124")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	public static ES3AutoSaveMgr Instance
	{
		[Token(Token = "0x6000016")]
		[Address(RVA = "0xCCA7F4", Offset = "0xCCA7F4", VA = "0xCCA7F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xCCA84C", Offset = "0xCCA84C", VA = "0xCCA84C")]
	public void Save()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xCCAAEC", Offset = "0xCCAAEC", VA = "0xCCAAEC")]
	public void Load()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xCCAC10", Offset = "0xCCAC10", VA = "0xCCAC10")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xCCAC24", Offset = "0xCCAC24", VA = "0xCCAC24")]
	public void Awake()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xCCADBC", Offset = "0xCCADBC", VA = "0xCCADBC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xCCADD0", Offset = "0xCCADD0", VA = "0xCCADD0")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xCCA3C4", Offset = "0xCCA3C4", VA = "0xCCA3C4")]
	public static void AddAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xCCA54C", Offset = "0xCCA54C", VA = "0xCCA54C")]
	public static void RemoveAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xCCAE3C", Offset = "0xCCAE3C", VA = "0xCCAE3C")]
	public ES3AutoSaveMgr()
	{
	}
}
[Token(Token = "0x200000B")]
public static class ES3
{
	[Token(Token = "0x200000C")]
	public enum Location
	{
		[Token(Token = "0x4000018")]
		File,
		[Token(Token = "0x4000019")]
		PlayerPrefs,
		[Token(Token = "0x400001A")]
		InternalMS,
		[Token(Token = "0x400001B")]
		Resources,
		[Token(Token = "0x400001C")]
		Cache
	}

	[Token(Token = "0x200000D")]
	public enum Directory
	{
		[Token(Token = "0x400001E")]
		PersistentDataPath,
		[Token(Token = "0x400001F")]
		DataPath
	}

	[Token(Token = "0x200000E")]
	public enum EncryptionType
	{
		[Token(Token = "0x4000021")]
		None,
		[Token(Token = "0x4000022")]
		AES
	}

	[Token(Token = "0x200000F")]
	public enum CompressionType
	{
		[Token(Token = "0x4000024")]
		None,
		[Token(Token = "0x4000025")]
		Gzip
	}

	[Token(Token = "0x2000010")]
	public enum Format
	{
		[Token(Token = "0x4000027")]
		JSON
	}

	[Token(Token = "0x2000011")]
	public enum ReferenceMode
	{
		[Token(Token = "0x4000029")]
		ByRef,
		[Token(Token = "0x400002A")]
		ByValue,
		[Token(Token = "0x400002B")]
		ByRefAndValue
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xCC039C", Offset = "0xCC039C", VA = "0xCC039C")]
	public static void Save(string key, object value)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xCC042C", Offset = "0xCC042C", VA = "0xCC042C")]
	public static void Save(string key, object value, string filePath)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xCC04C0", Offset = "0xCC04C0", VA = "0xCC04C0")]
	public static void Save(string key, object value, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xCC0560", Offset = "0xCC0560", VA = "0xCC0560")]
	public static void Save(string key, object value, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000025")]
	public static void Save<T>(string key, T value)
	{
	}

	[Token(Token = "0x6000026")]
	public static void Save<T>(string key, T value, string filePath)
	{
	}

	[Token(Token = "0x6000027")]
	public static void Save<T>(string key, T value, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000028")]
	public static void Save<T>(string key, T value, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xCC06F8", Offset = "0xCC06F8", VA = "0xCC06F8")]
	public static void SaveRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xCC095C", Offset = "0xCC095C", VA = "0xCC095C")]
	public static void SaveRaw(byte[] bytes, string filePath)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xCC09D0", Offset = "0xCC09D0", VA = "0xCC09D0")]
	public static void SaveRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xCC0760", Offset = "0xCC0760", VA = "0xCC0760")]
	public static void SaveRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xCC1408", Offset = "0xCC1408", VA = "0xCC1408")]
	public static void SaveRaw(string str)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xCC14B4", Offset = "0xCC14B4", VA = "0xCC14B4")]
	public static void SaveRaw(string str, string filePath)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xCC1528", Offset = "0xCC1528", VA = "0xCC1528")]
	public static void SaveRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xCC1470", Offset = "0xCC1470", VA = "0xCC1470")]
	public static void SaveRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xCC15A0", Offset = "0xCC15A0", VA = "0xCC15A0")]
	public static void AppendRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xCC180C", Offset = "0xCC180C", VA = "0xCC180C")]
	public static void AppendRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCC1608", Offset = "0xCC1608", VA = "0xCC1608")]
	public static void AppendRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCC1904", Offset = "0xCC1904", VA = "0xCC1904")]
	public static void AppendRaw(string str)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCC1B94", Offset = "0xCC1B94", VA = "0xCC1B94")]
	public static void AppendRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCC196C", Offset = "0xCC196C", VA = "0xCC196C")]
	public static void AppendRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xCC1C0C", Offset = "0xCC1C0C", VA = "0xCC1C0C")]
	public static void SaveImage(Texture2D texture, string imagePath)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xCC1C90", Offset = "0xCC1C90", VA = "0xCC1C90")]
	public static void SaveImage(Texture2D texture, string imagePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xCC1C84", Offset = "0xCC1C84", VA = "0xCC1C84")]
	public static void SaveImage(Texture2D texture, ES3Settings settings)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xCC1EAC", Offset = "0xCC1EAC", VA = "0xCC1EAC")]
	public static void SaveImage(Texture2D texture, int quality, string imagePath)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xCC1F24", Offset = "0xCC1F24", VA = "0xCC1F24")]
	public static void SaveImage(Texture2D texture, int quality, string imagePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xCC1D0C", Offset = "0xCC1D0C", VA = "0xCC1D0C")]
	public static void SaveImage(Texture2D texture, int quality, ES3Settings settings)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xCC2010", Offset = "0xCC2010", VA = "0xCC2010")]
	public static object Load(string key)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xCC2090", Offset = "0xCC2090", VA = "0xCC2090")]
	public static object Load(string key, string filePath)
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xCC211C", Offset = "0xCC211C", VA = "0xCC211C")]
	public static object Load(string key, string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xCC21AC", Offset = "0xCC21AC", VA = "0xCC21AC")]
	public static object Load(string key, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000041")]
	public static T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000042")]
	public static T Load<T>(string key, string filePath)
	{
		return (T)null;
	}

	[Token(Token = "0x6000043")]
	public static T Load<T>(string key, string filePath, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000044")]
	public static T Load<T>(string key, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000045")]
	public static T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000046")]
	public static T Load<T>(string key, string filePath, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000047")]
	public static T Load<T>(string key, string filePath, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000048")]
	public static T Load<T>(string key, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000049")]
	public static void LoadInto<T>(string key, object obj) where T : class
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xCC2208", Offset = "0xCC2208", VA = "0xCC2208")]
	public static void LoadInto(string key, string filePath, object obj)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xCC229C", Offset = "0xCC229C", VA = "0xCC229C")]
	public static void LoadInto(string key, string filePath, object obj, ES3Settings settings)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xCC233C", Offset = "0xCC233C", VA = "0xCC233C")]
	public static void LoadInto(string key, object obj, ES3Settings settings)
	{
	}

	[Token(Token = "0x600004D")]
	public static void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x600004E")]
	public static void LoadInto<T>(string key, string filePath, T obj) where T : class
	{
	}

	[Token(Token = "0x600004F")]
	public static void LoadInto<T>(string key, string filePath, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000050")]
	public static void LoadInto<T>(string key, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xCC23A0", Offset = "0xCC23A0", VA = "0xCC23A0")]
	public static string LoadString(string key, string defaultValue, [Optional] string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xCC2438", Offset = "0xCC2438", VA = "0xCC2438")]
	public static byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xCC295C", Offset = "0xCC295C", VA = "0xCC295C")]
	public static byte[] LoadRawBytes(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xCC29C0", Offset = "0xCC29C0", VA = "0xCC29C0")]
	public static byte[] LoadRawBytes(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xCC2498", Offset = "0xCC2498", VA = "0xCC2498")]
	public static byte[] LoadRawBytes(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xCC2AD0", Offset = "0xCC2AD0", VA = "0xCC2AD0")]
	public static string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xCC2B7C", Offset = "0xCC2B7C", VA = "0xCC2B7C")]
	public static string LoadRawString(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xCC2BE0", Offset = "0xCC2BE0", VA = "0xCC2BE0")]
	public static string LoadRawString(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xCC2B30", Offset = "0xCC2B30", VA = "0xCC2B30")]
	public static string LoadRawString(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xCC2C50", Offset = "0xCC2C50", VA = "0xCC2C50")]
	public static Texture2D LoadImage(string imagePath)
	{
		return null;
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xCC2CCC", Offset = "0xCC2CCC", VA = "0xCC2CCC")]
	public static Texture2D LoadImage(string imagePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xCC2CB8", Offset = "0xCC2CB8", VA = "0xCC2CB8")]
	public static Texture2D LoadImage(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xCC2D40", Offset = "0xCC2D40", VA = "0xCC2D40")]
	public static Texture2D LoadImage(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xCC2DB4", Offset = "0xCC2DB4", VA = "0xCC2DB4")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType)
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xCC2E2C", Offset = "0xCC2E2C", VA = "0xCC2E2C")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	public static byte[] Serialize<T>(T value, [Optional] ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000061")]
	public static T Deserialize<T>(byte[] bytes, [Optional] ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xCC3228", Offset = "0xCC3228", VA = "0xCC3228")]
	internal static object Deserialize(ES3Type type, byte[] bytes, [Optional] ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	public static void DeserializeInto<T>(byte[] bytes, T obj, [Optional] ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000064")]
	public static void DeserializeInto<T>(ES3Type type, byte[] bytes, T obj, [Optional] ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xCC3598", Offset = "0xCC3598", VA = "0xCC3598")]
	public static byte[] EncryptBytes(byte[] bytes, [Optional] string password)
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xCC3694", Offset = "0xCC3694", VA = "0xCC3694")]
	public static byte[] DecryptBytes(byte[] bytes, [Optional] string password)
	{
		return null;
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xCC3790", Offset = "0xCC3790", VA = "0xCC3790")]
	public static string EncryptString(string str, [Optional] string password)
	{
		return null;
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xCC3854", Offset = "0xCC3854", VA = "0xCC3854")]
	public static string DecryptString(string str, [Optional] string password)
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xCC3918", Offset = "0xCC3918", VA = "0xCC3918")]
	public static void DeleteFile()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xCC3AEC", Offset = "0xCC3AEC", VA = "0xCC3AEC")]
	public static void DeleteFile(string filePath)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xCC3B50", Offset = "0xCC3B50", VA = "0xCC3B50")]
	public static void DeleteFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xCC3978", Offset = "0xCC3978", VA = "0xCC3978")]
	public static void DeleteFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xCC3CD0", Offset = "0xCC3CD0", VA = "0xCC3CD0")]
	public static void CopyFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xCC419C", Offset = "0xCC419C", VA = "0xCC419C")]
	public static void CopyFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xCC3D60", Offset = "0xCC3D60", VA = "0xCC3D60")]
	public static void CopyFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xCC4634", Offset = "0xCC4634", VA = "0xCC4634")]
	public static void RenameFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xCC4B1C", Offset = "0xCC4B1C", VA = "0xCC4B1C")]
	public static void RenameFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xCC46C4", Offset = "0xCC46C4", VA = "0xCC46C4")]
	public static void RenameFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xCC4BC4", Offset = "0xCC4BC4", VA = "0xCC4BC4")]
	public static void CopyDirectory(string oldDirectoryPath, string newDirectoryPath)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xCC4F20", Offset = "0xCC4F20", VA = "0xCC4F20")]
	public static void CopyDirectory(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xCC4C54", Offset = "0xCC4C54", VA = "0xCC4C54")]
	public static void CopyDirectory(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xCC53C0", Offset = "0xCC53C0", VA = "0xCC53C0")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xCC5608", Offset = "0xCC5608", VA = "0xCC5608")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xCC5450", Offset = "0xCC5450", VA = "0xCC5450")]
	public static void RenameDirectory(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xCC573C", Offset = "0xCC573C", VA = "0xCC573C")]
	public static void DeleteDirectory(string directoryPath)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xCC58DC", Offset = "0xCC58DC", VA = "0xCC58DC")]
	public static void DeleteDirectory(string directoryPath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xCC57A0", Offset = "0xCC57A0", VA = "0xCC57A0")]
	public static void DeleteDirectory(ES3Settings settings)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xCC594C", Offset = "0xCC594C", VA = "0xCC594C")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xCC5BD4", Offset = "0xCC5BD4", VA = "0xCC5BD4")]
	public static void DeleteKey(string key, string filePath)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xCC5C48", Offset = "0xCC5C48", VA = "0xCC5C48")]
	public static void DeleteKey(string key, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xCC59B4", Offset = "0xCC59B4", VA = "0xCC59B4")]
	public static void DeleteKey(string key, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xCC5F10", Offset = "0xCC5F10", VA = "0xCC5F10")]
	public static bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xCC613C", Offset = "0xCC613C", VA = "0xCC613C")]
	public static bool KeyExists(string key, string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xCC61B0", Offset = "0xCC61B0", VA = "0xCC61B0")]
	public static bool KeyExists(string key, string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xCC5F78", Offset = "0xCC5F78", VA = "0xCC5F78")]
	public static bool KeyExists(string key, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xCC62F0", Offset = "0xCC62F0", VA = "0xCC62F0")]
	public static bool FileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xCC6350", Offset = "0xCC6350", VA = "0xCC6350")]
	public static bool FileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xCC63B4", Offset = "0xCC63B4", VA = "0xCC63B4")]
	public static bool FileExists(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xCC5D7C", Offset = "0xCC5D7C", VA = "0xCC5D7C")]
	public static bool FileExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xCC64B4", Offset = "0xCC64B4", VA = "0xCC64B4")]
	public static bool DirectoryExists(string folderPath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xCC6518", Offset = "0xCC6518", VA = "0xCC6518")]
	public static bool DirectoryExists(string folderPath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xCC4FC0", Offset = "0xCC4FC0", VA = "0xCC4FC0")]
	public static bool DirectoryExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xCC6588", Offset = "0xCC6588", VA = "0xCC6588")]
	public static string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xCC6A3C", Offset = "0xCC6A3C", VA = "0xCC6A3C")]
	public static string[] GetKeys(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xCC6AA0", Offset = "0xCC6AA0", VA = "0xCC6AA0")]
	public static string[] GetKeys(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xCC65E8", Offset = "0xCC65E8", VA = "0xCC65E8")]
	public static string[] GetKeys(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xCC6C78", Offset = "0xCC6C78", VA = "0xCC6C78")]
	public static string[] GetFiles()
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xCC6D10", Offset = "0xCC6D10", VA = "0xCC6D10")]
	public static string[] GetFiles(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xCC6D74", Offset = "0xCC6D74", VA = "0xCC6D74")]
	public static string[] GetFiles(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xCC510C", Offset = "0xCC510C", VA = "0xCC510C")]
	public static string[] GetFiles(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xCC6F94", Offset = "0xCC6F94", VA = "0xCC6F94")]
	public static string[] GetDirectories()
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xCC6FF4", Offset = "0xCC6FF4", VA = "0xCC6FF4")]
	public static string[] GetDirectories(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xCC7058", Offset = "0xCC7058", VA = "0xCC7058")]
	public static string[] GetDirectories(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xCC52E8", Offset = "0xCC52E8", VA = "0xCC52E8")]
	public static string[] GetDirectories(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xCC7230", Offset = "0xCC7230", VA = "0xCC7230")]
	public static void CreateBackup()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xCC7334", Offset = "0xCC7334", VA = "0xCC7334")]
	public static void CreateBackup(string filePath)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xCC7398", Offset = "0xCC7398", VA = "0xCC7398")]
	public static void CreateBackup(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xCC7290", Offset = "0xCC7290", VA = "0xCC7290")]
	public static void CreateBackup(ES3Settings settings)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xCC7408", Offset = "0xCC7408", VA = "0xCC7408")]
	public static bool RestoreBackup(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xCC752C", Offset = "0xCC752C", VA = "0xCC752C")]
	public static bool RestoreBackup(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xCC746C", Offset = "0xCC746C", VA = "0xCC746C")]
	public static bool RestoreBackup(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xCC759C", Offset = "0xCC759C", VA = "0xCC759C")]
	public static DateTime GetTimestamp()
	{
		return default(DateTime);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xCC77AC", Offset = "0xCC77AC", VA = "0xCC77AC")]
	public static DateTime GetTimestamp(string filePath)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xCC7810", Offset = "0xCC7810", VA = "0xCC7810")]
	public static DateTime GetTimestamp(string filePath, ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xCC75FC", Offset = "0xCC75FC", VA = "0xCC75FC")]
	public static DateTime GetTimestamp(ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xCC7A80", Offset = "0xCC7A80", VA = "0xCC7A80")]
	public static void StoreCachedFile()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xCC7D34", Offset = "0xCC7D34", VA = "0xCC7D34")]
	public static void StoreCachedFile(string filePath)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xCC7DF8", Offset = "0xCC7DF8", VA = "0xCC7DF8")]
	public static void StoreCachedFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xCC7D98", Offset = "0xCC7D98", VA = "0xCC7D98")]
	public static void StoreCachedFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xCC7E68", Offset = "0xCC7E68", VA = "0xCC7E68")]
	public static void CacheFile()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xCC7F28", Offset = "0xCC7F28", VA = "0xCC7F28")]
	public static void CacheFile(string filePath)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xCC7F8C", Offset = "0xCC7F8C", VA = "0xCC7F8C")]
	public static void CacheFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xCC7EC8", Offset = "0xCC7EC8", VA = "0xCC7EC8")]
	public static void CacheFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xCC81BC", Offset = "0xCC81BC", VA = "0xCC81BC")]
	public static void Init()
	{
	}
}
[Token(Token = "0x2000012")]
public class ES3File
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x8468A8", Offset = "0x8468A8")]
	internal static Dictionary<string, ES3File> cachedFiles;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, ES3Data> cache;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool syncWithFile;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DateTime timestamp;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xCCFFE0", Offset = "0xCCFFE0", VA = "0xCCFFE0")]
	public ES3File()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xCD04F0", Offset = "0xCD04F0", VA = "0xCD04F0")]
	public ES3File(string filePath)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xCD0568", Offset = "0xCD0568", VA = "0xCD0568")]
	public ES3File(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xCCB8A0", Offset = "0xCCB8A0", VA = "0xCCB8A0")]
	public ES3File(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xCD05E4", Offset = "0xCD05E4", VA = "0xCD05E4")]
	public ES3File(bool syncWithFile)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xCD065C", Offset = "0xCD065C", VA = "0xCD065C")]
	public ES3File(string filePath, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xCD06D8", Offset = "0xCD06D8", VA = "0xCD06D8")]
	public ES3File(string filePath, ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xCD004C", Offset = "0xCD004C", VA = "0xCD004C")]
	public ES3File(ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xCD0760", Offset = "0xCD0760", VA = "0xCD0760")]
	public ES3File(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xCD0870", Offset = "0xCD0870", VA = "0xCD0870")]
	public void Sync()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xCD0C40", Offset = "0xCD0C40", VA = "0xCD0C40")]
	public void Sync(string filePath, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xCD0878", Offset = "0xCD0878", VA = "0xCD0878")]
	public void Sync([Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xCD0CB8", Offset = "0xCD0CB8", VA = "0xCD0CB8")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xCD0D0C", Offset = "0xCD0D0C", VA = "0xCD0D0C")]
	public string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	public void Save<T>(string key, T value)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xCC0B64", Offset = "0xCC0B64", VA = "0xCC0B64")]
	public void SaveRaw(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xCC1884", Offset = "0xCC1884", VA = "0xCC1884")]
	public void AppendRaw(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xCD0DDC", Offset = "0xCD0DDC", VA = "0xCD0DDC")]
	public object Load(string key)
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xCD0E38", Offset = "0xCD0E38", VA = "0xCD0E38")]
	public object Load(string key, object defaultValue)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	public T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x60000BF")]
	public T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x60000C0")]
	public void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xCC2A30", Offset = "0xCC2A30", VA = "0xCC2A30")]
	public byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xCD0E9C", Offset = "0xCD0E9C", VA = "0xCD0E9C")]
	public string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xCCC910", Offset = "0xCCC910", VA = "0xCCC910")]
	internal byte[] GetBytes([Optional] ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xCD0F48", Offset = "0xCD0F48", VA = "0xCD0F48")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xCD0FAC", Offset = "0xCD0FAC", VA = "0xCD0FAC")]
	public bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xCD1010", Offset = "0xCD1010", VA = "0xCD1010")]
	public int Size()
	{
		return default(int);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xCD113C", Offset = "0xCD113C", VA = "0xCD113C")]
	public Type GetKeyType(string key)
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xCC0A48", Offset = "0xCC0A48", VA = "0xCC0A48")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A0FC", Offset = "0x84A0FC")]
	internal static ES3File GetOrCreateCachedFile(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xCC7FFC", Offset = "0xCC7FFC", VA = "0xCC7FFC")]
	internal static void CacheFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xCC7ADC", Offset = "0xCC7ADC", VA = "0xCC7ADC")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A110", Offset = "0x84A110")]
	internal static void Store([Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xCC3C40", Offset = "0xCC3C40", VA = "0xCC3C40")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A124", Offset = "0x84A124")]
	internal static void RemoveCachedFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xCC424C", Offset = "0xCC424C", VA = "0xCC424C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A138", Offset = "0x84A138")]
	internal static void CopyCachedFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xCC5CC0", Offset = "0xCC5CC0", VA = "0xCC5CC0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A14C", Offset = "0x84A14C")]
	internal static void DeleteKey(string key, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xCC6228", Offset = "0xCC6228", VA = "0xCC6228")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A160", Offset = "0x84A160")]
	internal static bool KeyExists(string key, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xCC6424", Offset = "0xCC6424", VA = "0xCC6424")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A174", Offset = "0x84A174")]
	internal static bool FileExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xCC6B10", Offset = "0xCC6B10", VA = "0xCC6B10")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A188", Offset = "0x84A188")]
	internal static string[] GetKeys(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xCC6DE4", Offset = "0xCC6DE4", VA = "0xCC6DE4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A19C", Offset = "0x84A19C")]
	internal static string[] GetFiles()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xCC7954", Offset = "0xCC7954", VA = "0xCC7954")]
	internal static DateTime GetTimestamp(ES3Settings settings)
	{
		return default(DateTime);
	}
}
[Token(Token = "0x2000013")]
public class ES3InspectorInfo : MonoBehaviour
{
	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xCD228C", Offset = "0xCD228C", VA = "0xCD228C")]
	public ES3InspectorInfo()
	{
	}
}
[Token(Token = "0x2000014")]
public class ES3ReferenceMgr : ES3ReferenceMgrBase
{
	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x19291C8", Offset = "0x19291C8", VA = "0x19291C8")]
	public ES3ReferenceMgr()
	{
	}
}
[Token(Token = "0x2000015")]
public class ES3Spreadsheet
{
	[Token(Token = "0x2000016")]
	protected struct Index
	{
		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int col;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int row;

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xC5FBA0", Offset = "0xC5FBA0", VA = "0xC5FBA0")]
		public Index(int col, int row)
		{
		}
	}

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int cols;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int rows;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Index, string> cells;

	[Token(Token = "0x4000034")]
	private const string QUOTE = "\"";

	[Token(Token = "0x4000035")]
	private const char QUOTE_CHAR = '"';

	[Token(Token = "0x4000036")]
	private const char COMMA_CHAR = ',';

	[Token(Token = "0x4000037")]
	private const char NEWLINE_CHAR = '\n';

	[Token(Token = "0x4000038")]
	private const string ESCAPED_QUOTE = "\"\"";

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] CHARS_TO_ESCAPE;

	[Token(Token = "0x17000005")]
	public int ColumnCount
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x1930EF0", Offset = "0x1930EF0", VA = "0x1930EF0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000006")]
	public int RowCount
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x1930EF8", Offset = "0x1930EF8", VA = "0x1930EF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000D8")]
	public void SetCell<T>(int col, int row, T value)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1930F00", Offset = "0x1930F00", VA = "0x1930F00")]
	private void SetCellString(int col, int row, string value)
	{
	}

	[Token(Token = "0x60000DA")]
	public T GetCell<T>(int col, int row)
	{
		return (T)null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1930FC0", Offset = "0x1930FC0", VA = "0x1930FC0")]
	internal object GetCell(Type type, int col, int row)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x193163C", Offset = "0x193163C", VA = "0x193163C")]
	public void Load(string filePath)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x19316EC", Offset = "0x19316EC", VA = "0x19316EC")]
	public void Load(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x19316BC", Offset = "0x19316BC", VA = "0x19316BC")]
	public void Load(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x1931A40", Offset = "0x1931A40", VA = "0x1931A40")]
	public void LoadRaw(string str)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1931B14", Offset = "0x1931B14", VA = "0x1931B14")]
	public void LoadRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x193176C", Offset = "0x193176C", VA = "0x193176C")]
	private void Load(Stream stream, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1931BB4", Offset = "0x1931BB4", VA = "0x1931BB4")]
	public void Save(string filePath)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1931F80", Offset = "0x1931F80", VA = "0x1931F80")]
	public void Save(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1931FF8", Offset = "0x1931FF8", VA = "0x1931FF8")]
	public void Save(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1932000", Offset = "0x1932000", VA = "0x1932000")]
	public void Save(string filePath, bool append)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x193207C", Offset = "0x193207C", VA = "0x193207C")]
	public void Save(string filePath, ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1931C2C", Offset = "0x1931C2C", VA = "0x1931C2C")]
	public void Save(ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x19322B4", Offset = "0x19322B4", VA = "0x19322B4")]
	private static string Escape(string str, bool isAlreadyWrappedInQuotes = false)
	{
		return null;
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x19323D0", Offset = "0x19323D0", VA = "0x19323D0")]
	private static string Unescape(string str)
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1932100", Offset = "0x1932100", VA = "0x1932100")]
	private string[,] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x19324B4", Offset = "0x19324B4", VA = "0x19324B4")]
	public ES3Spreadsheet()
	{
	}
}
[Token(Token = "0x2000017")]
public abstract class ES3Reader : IDisposable
{
	[Token(Token = "0x2000018")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x8408D8", Offset = "0x8408D8")]
	public class ES3ReaderPropertyEnumerator
	{
		[Token(Token = "0x2000019")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8408EC", Offset = "0x8408EC")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3ReaderPropertyEnumerator <>4__this;

			[Token(Token = "0x17000009")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000131")]
				[Address(RVA = "0x1C55348", Offset = "0x1C55348", VA = "0x1C55348", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700000A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000133")]
				[Address(RVA = "0x1C55390", Offset = "0x1C55390", VA = "0x1C55390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600012E")]
			[Address(RVA = "0x1C5528C", Offset = "0x1C5528C", VA = "0x1C5528C")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600012F")]
			[Address(RVA = "0x1C552B8", Offset = "0x1C552B8", VA = "0x1C552B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000130")]
			[Address(RVA = "0x1C552BC", Offset = "0x1C552BC", VA = "0x1C552BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000132")]
			[Address(RVA = "0x1C55350", Offset = "0x1C55350", VA = "0x1C55350", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Reader reader;

		[Token(Token = "0x600012C")]
		[Address(RVA = "0xC5F084", Offset = "0xC5F084", VA = "0xC5F084")]
		public ES3ReaderPropertyEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0xC5F0B0", Offset = "0xC5F0B0", VA = "0xC5F0B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A250", Offset = "0x84A250")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x8408FC", Offset = "0x8408FC")]
	public class ES3ReaderRawEnumerator
	{
		[Token(Token = "0x200001B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840910", Offset = "0x840910")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3ReaderRawEnumerator <>4__this;

			[Token(Token = "0x1700000B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000139")]
				[Address(RVA = "0x1C5553C", Offset = "0x1C5553C", VA = "0x1C5553C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700000C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600013B")]
				[Address(RVA = "0x1C55584", Offset = "0x1C55584", VA = "0x1C55584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000136")]
			[Address(RVA = "0x1C55398", Offset = "0x1C55398", VA = "0x1C55398")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000137")]
			[Address(RVA = "0x1C553C4", Offset = "0x1C553C4", VA = "0x1C553C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000138")]
			[Address(RVA = "0x1C553C8", Offset = "0x1C553C8", VA = "0x1C553C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600013A")]
			[Address(RVA = "0x1C55544", Offset = "0x1C55544", VA = "0x1C55544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Reader reader;

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xC5F11C", Offset = "0xC5F11C", VA = "0xC5F11C")]
		public ES3ReaderRawEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xC5F148", Offset = "0xC5F148", VA = "0xC5F148")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A300", Offset = "0x84A300")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int serializationDepth;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal string overridePropertiesName;

	[Token(Token = "0x17000007")]
	public virtual ES3ReaderPropertyEnumerator Properties
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x19273A4", Offset = "0x19273A4", VA = "0x19273A4", Slot = "39")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	internal virtual ES3ReaderRawEnumerator RawEnumerator
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0x1927404", Offset = "0x1927404", VA = "0x1927404", Slot = "40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EE")]
	internal abstract int Read_int();

	[Token(Token = "0x60000EF")]
	internal abstract float Read_float();

	[Token(Token = "0x60000F0")]
	internal abstract bool Read_bool();

	[Token(Token = "0x60000F1")]
	internal abstract char Read_char();

	[Token(Token = "0x60000F2")]
	internal abstract decimal Read_decimal();

	[Token(Token = "0x60000F3")]
	internal abstract double Read_double();

	[Token(Token = "0x60000F4")]
	internal abstract long Read_long();

	[Token(Token = "0x60000F5")]
	internal abstract ulong Read_ulong();

	[Token(Token = "0x60000F6")]
	internal abstract byte Read_byte();

	[Token(Token = "0x60000F7")]
	internal abstract sbyte Read_sbyte();

	[Token(Token = "0x60000F8")]
	internal abstract short Read_short();

	[Token(Token = "0x60000F9")]
	internal abstract ushort Read_ushort();

	[Token(Token = "0x60000FA")]
	internal abstract uint Read_uint();

	[Token(Token = "0x60000FB")]
	internal abstract string Read_string();

	[Token(Token = "0x60000FC")]
	internal abstract byte[] Read_byteArray();

	[Token(Token = "0x60000FD")]
	internal abstract long Read_ref();

	[Token(Token = "0x60000FE")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A1B0", Offset = "0x84A1B0")]
	public abstract string ReadPropertyName();

	[Token(Token = "0x60000FF")]
	protected abstract Type ReadKeyPrefix(bool ignore = false);

	[Token(Token = "0x6000100")]
	protected abstract void ReadKeySuffix();

	[Token(Token = "0x6000101")]
	internal abstract byte[] ReadElement(bool skip = false);

	[Token(Token = "0x6000102")]
	public abstract void Dispose();

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1927290", Offset = "0x1927290", VA = "0x1927290", Slot = "26")]
	internal virtual bool Goto(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1927354", Offset = "0x1927354", VA = "0x1927354", Slot = "27")]
	internal virtual bool StartReadObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1927368", Offset = "0x1927368", VA = "0x1927368", Slot = "28")]
	internal virtual void EndReadObject()
	{
	}

	[Token(Token = "0x6000106")]
	internal abstract bool StartReadDictionary();

	[Token(Token = "0x6000107")]
	internal abstract void EndReadDictionary();

	[Token(Token = "0x6000108")]
	internal abstract bool StartReadDictionaryKey();

	[Token(Token = "0x6000109")]
	internal abstract void EndReadDictionaryKey();

	[Token(Token = "0x600010A")]
	internal abstract void StartReadDictionaryValue();

	[Token(Token = "0x600010B")]
	internal abstract bool EndReadDictionaryValue();

	[Token(Token = "0x600010C")]
	internal abstract bool StartReadCollection();

	[Token(Token = "0x600010D")]
	internal abstract void EndReadCollection();

	[Token(Token = "0x600010E")]
	internal abstract bool StartReadCollectionItem();

	[Token(Token = "0x600010F")]
	internal abstract bool EndReadCollectionItem();

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1927378", Offset = "0x1927378", VA = "0x1927378")]
	internal ES3Reader(ES3Settings settings, bool readHeaderAndFooter = true)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1927464", Offset = "0x1927464", VA = "0x1927464", Slot = "41")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A1C4", Offset = "0x84A1C4")]
	public virtual void Skip()
	{
	}

	[Token(Token = "0x6000114")]
	public virtual T Read<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x6000115")]
	public virtual void ReadInto<T>(object obj)
	{
	}

	[Token(Token = "0x6000116")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A1D8", Offset = "0x84A1D8")]
	public T ReadProperty<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x6000117")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A1EC", Offset = "0x84A1EC")]
	public T ReadProperty<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1927478", Offset = "0x1927478", VA = "0x1927478")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A200", Offset = "0x84A200")]
	public long ReadRefProperty()
	{
		return default(long);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x19274B4", Offset = "0x19274B4", VA = "0x19274B4")]
	internal Type ReadType()
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1928038", Offset = "0x1928038", VA = "0x1928038")]
	public void SetPrivateProperty(string name, object value, object objectContainingProperty)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1928260", Offset = "0x1928260", VA = "0x1928260")]
	public void SetPrivateField(string name, object value, object objectContainingField)
	{
	}

	[Token(Token = "0x600011C")]
	public virtual T Read<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x600011D")]
	public virtual T Read<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x600011E")]
	public virtual void ReadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x600011F")]
	protected virtual void ReadObject<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x6000120")]
	protected virtual T ReadObject<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000121")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A214", Offset = "0x84A214")]
	public virtual T Read<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000122")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A228", Offset = "0x84A228")]
	public virtual void ReadInto<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x6000123")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A23C", Offset = "0x84A23C")]
	internal Type ReadTypeFromHeader<T>()
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1928488", Offset = "0x1928488", VA = "0x1928488")]
	public static ES3Reader Create()
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x19285C8", Offset = "0x19285C8", VA = "0x19285C8")]
	public static ES3Reader Create(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x192862C", Offset = "0x192862C", VA = "0x192862C")]
	public static ES3Reader Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x192852C", Offset = "0x192852C", VA = "0x192852C")]
	public static ES3Reader Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1928ADC", Offset = "0x1928ADC", VA = "0x1928ADC")]
	public static ES3Reader Create(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1928B3C", Offset = "0x1928B3C", VA = "0x1928B3C")]
	public static ES3Reader Create(byte[] bytes, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1928FEC", Offset = "0x1928FEC", VA = "0x1928FEC")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x192908C", Offset = "0x192908C", VA = "0x192908C")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings, bool readHeaderAndFooter)
	{
		return null;
	}
}
[Token(Token = "0x200001C")]
public class ES3XMLReader
{
	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1348998", Offset = "0x1348998", VA = "0x1348998")]
	public ES3XMLReader()
	{
	}
}
[Token(Token = "0x200001D")]
public class ES3Defaults : ScriptableObject
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public ES3SerializableSettings settings;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool addMgrToSceneAutomatically;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool autoUpdateReferences;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool addAllPrefabsToManager;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool logDebugInfo;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool logWarnings;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool logErrors;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xCCF400", Offset = "0xCCF400", VA = "0xCCF400")]
	public ES3Defaults()
	{
	}
}
[Token(Token = "0x200001E")]
public class ES3Settings : ICloneable
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ES3Settings _defaults;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ES3Defaults _defaultSettingsScriptableObject;

	[Token(Token = "0x4000050")]
	private const string defaultSettingsPath = "ES3/ES3Defaults";

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ES3Settings _unencryptedUncompressedSettings;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string[] resourcesExtensions;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ES3.Location _location;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string path;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ES3.EncryptionType encryptionType;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ES3.CompressionType compressionType;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string encryptionPassword;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ES3.Directory directory;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ES3.Format format;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool prettyPrint;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bufferSize;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Encoding encoding;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool saveChildren;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x8468DC", Offset = "0x8468DC")]
	public bool typeChecking;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x8468F0", Offset = "0x8468F0")]
	public bool safeReflection;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x846904", Offset = "0x846904")]
	public ES3.ReferenceMode memberReferenceMode;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x846918", Offset = "0x846918")]
	public ES3.ReferenceMode referenceMode;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84692C", Offset = "0x84692C")]
	public int serializationDepthLimit;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x846940", Offset = "0x846940")]
	public string[] assemblyNames;

	[Token(Token = "0x1700000D")]
	public static ES3Defaults defaultSettingsScriptableObject
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x193000C", Offset = "0x193000C", VA = "0x193000C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public static ES3Settings defaultSettings
	{
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x1930140", Offset = "0x1930140", VA = "0x1930140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	internal static ES3Settings unencryptedUncompressedSettings
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x1930260", Offset = "0x1930260", VA = "0x1930260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	public ES3.Location location
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x19305D4", Offset = "0x19305D4", VA = "0x19305D4")]
		get
		{
			return default(ES3.Location);
		}
		[Token(Token = "0x6000142")]
		[Address(RVA = "0x1930624", Offset = "0x1930624", VA = "0x1930624")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public string FullPath
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x193062C", Offset = "0x193062C", VA = "0x193062C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x19284E0", Offset = "0x19284E0", VA = "0x19284E0")]
	public ES3Settings([Optional] string path, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1930AF4", Offset = "0x1930AF4", VA = "0x1930AF4")]
	public ES3Settings(string path, params Enum[] enums)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1930408", Offset = "0x1930408", VA = "0x1930408")]
	public ES3Settings(params Enum[] enums)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1930B24", Offset = "0x1930B24", VA = "0x1930B24")]
	public ES3Settings(ES3.EncryptionType encryptionType, string encryptionPassword)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1930B60", Offset = "0x1930B60", VA = "0x1930B60")]
	public ES3Settings(string path, ES3.EncryptionType encryptionType, string encryptionPassword, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x192FCC0", Offset = "0x192FCC0", VA = "0x192FCC0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A3B0", Offset = "0x84A3B0")]
	public ES3Settings(bool applyDefaults)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x19309BC", Offset = "0x19309BC", VA = "0x19309BC")]
	private static bool IsAbsolute(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1930B9C", Offset = "0x1930B9C", VA = "0x1930B9C", Slot = "4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A3C4", Offset = "0x84A3C4")]
	public object Clone()
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1930A60", Offset = "0x1930A60", VA = "0x1930A60")]
	private void CopyInto(ES3Settings newSettings)
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x840920", Offset = "0x840920")]
public class ES3SerializableSettings : ES3Settings
{
	[Token(Token = "0x600014E")]
	[Address(RVA = "0x192FC5C", Offset = "0x192FC5C", VA = "0x192FC5C")]
	public ES3SerializableSettings()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x192FEAC", Offset = "0x192FEAC", VA = "0x192FEAC")]
	public ES3SerializableSettings(bool applyDefaults)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x192FF1C", Offset = "0x192FF1C", VA = "0x192FF1C")]
	public ES3SerializableSettings(string path)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x192FF94", Offset = "0x192FF94", VA = "0x192FF94")]
	public ES3SerializableSettings(string path, ES3.Location location)
	{
	}
}
[Token(Token = "0x2000020")]
public class ES3Ref
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long id;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x192911C", Offset = "0x192911C", VA = "0x192911C")]
	public ES3Ref(long id)
	{
	}
}
[Token(Token = "0x2000021")]
public class ES3Cloud : ES3WebClass
{
	[Token(Token = "0x2000022")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840934", Offset = "0x840934")]
	private sealed class <Sync>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000199")]
			[Address(RVA = "0xC5EC34", Offset = "0xC5EC34", VA = "0xC5EC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600019B")]
			[Address(RVA = "0xC5EC7C", Offset = "0xC5EC7C", VA = "0xC5EC7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xC5EAD8", Offset = "0xC5EAD8", VA = "0xC5EAD8")]
		[DebuggerHidden]
		public <Sync>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xC5EB04", Offset = "0xC5EB04", VA = "0xC5EB04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xC5EB08", Offset = "0xC5EB08", VA = "0xC5EB08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xC5EC3C", Offset = "0xC5EC3C", VA = "0xC5EC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840944", Offset = "0x840944")]
	private sealed class <UploadFile>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long fileTimestamp;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string user;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string password;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte[] bytes;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A0")]
			[Address(RVA = "0xC5F034", Offset = "0xC5F034", VA = "0xC5F034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A2")]
			[Address(RVA = "0xC5F07C", Offset = "0xC5F07C", VA = "0xC5F07C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xC5EC84", Offset = "0xC5EC84", VA = "0xC5EC84")]
		[DebuggerHidden]
		public <UploadFile>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xC5ECB0", Offset = "0xC5ECB0", VA = "0xC5ECB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xC5ED88", Offset = "0xC5ED88", VA = "0xC5ED88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xC5ECCC", Offset = "0xC5ECCC", VA = "0xC5ECCC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xC5F03C", Offset = "0xC5F03C", VA = "0xC5F03C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000024")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840954", Offset = "0x840954")]
	private sealed class <DownloadFile>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3File es3File;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long timestamp;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0xC5D740", Offset = "0xC5D740", VA = "0xC5D740", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A9")]
			[Address(RVA = "0xC5D788", Offset = "0xC5D788", VA = "0xC5D788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xC5D2E8", Offset = "0xC5D2E8", VA = "0xC5D2E8")]
		[DebuggerHidden]
		public <DownloadFile>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xC5D314", Offset = "0xC5D314", VA = "0xC5D314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xC5D3EC", Offset = "0xC5D3EC", VA = "0xC5D3EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xC5D330", Offset = "0xC5D330", VA = "0xC5D330")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xC5D748", Offset = "0xC5D748", VA = "0xC5D748", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000025")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840964", Offset = "0x840964")]
	private sealed class <DownloadFile>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long timestamp;

		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AE")]
			[Address(RVA = "0xC5DBA0", Offset = "0xC5DBA0", VA = "0xC5DBA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B0")]
			[Address(RVA = "0xC5DBE8", Offset = "0xC5DBE8", VA = "0xC5DBE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xC5D790", Offset = "0xC5D790", VA = "0xC5D790")]
		[DebuggerHidden]
		public <DownloadFile>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xC5D7BC", Offset = "0xC5D7BC", VA = "0xC5D7BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xC5D894", Offset = "0xC5D894", VA = "0xC5D894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xC5D7D8", Offset = "0xC5D7D8", VA = "0xC5D7D8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xC5DBA8", Offset = "0xC5DBA8", VA = "0xC5DBA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840974", Offset = "0x840974")]
	private sealed class <DeleteFile>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B5")]
			[Address(RVA = "0xC5D298", Offset = "0xC5D298", VA = "0xC5D298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B7")]
			[Address(RVA = "0xC5D2E0", Offset = "0xC5D2E0", VA = "0xC5D2E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xC5CF7C", Offset = "0xC5CF7C", VA = "0xC5CF7C")]
		[DebuggerHidden]
		public <DeleteFile>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xC5CFA8", Offset = "0xC5CFA8", VA = "0xC5CFA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xC5D080", Offset = "0xC5D080", VA = "0xC5D080", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xC5CFC4", Offset = "0xC5CFC4", VA = "0xC5CFC4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xC5D2A0", Offset = "0xC5D2A0", VA = "0xC5D2A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000027")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840984", Offset = "0x840984")]
	private sealed class <RenameFile>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Settings newSettings;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string user;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string password;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001BC")]
			[Address(RVA = "0xC5E69C", Offset = "0xC5E69C", VA = "0xC5E69C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BE")]
			[Address(RVA = "0xC5E6E4", Offset = "0xC5E6E4", VA = "0xC5E6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xC5E344", Offset = "0xC5E344", VA = "0xC5E344")]
		[DebuggerHidden]
		public <RenameFile>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xC5E370", Offset = "0xC5E370", VA = "0xC5E370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xC5E448", Offset = "0xC5E448", VA = "0xC5E448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xC5E38C", Offset = "0xC5E38C", VA = "0xC5E38C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xC5E6A4", Offset = "0xC5E6A4", VA = "0xC5E6A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840994", Offset = "0x840994")]
	private sealed class <DownloadFilenames>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string user;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string password;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C3")]
			[Address(RVA = "0xC5DF4C", Offset = "0xC5DF4C", VA = "0xC5DF4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C5")]
			[Address(RVA = "0xC5DF94", Offset = "0xC5DF94", VA = "0xC5DF94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xC5DBF0", Offset = "0xC5DBF0", VA = "0xC5DBF0")]
		[DebuggerHidden]
		public <DownloadFilenames>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xC5DC1C", Offset = "0xC5DC1C", VA = "0xC5DC1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xC5DCF4", Offset = "0xC5DCF4", VA = "0xC5DCF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xC5DC38", Offset = "0xC5DC38", VA = "0xC5DC38")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xC5DF54", Offset = "0xC5DF54", VA = "0xC5DF54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8409A4", Offset = "0x8409A4")]
	private sealed class <SearchFilenames>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string user;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string password;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string searchPattern;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001CA")]
			[Address(RVA = "0xC5EA88", Offset = "0xC5EA88", VA = "0xC5EA88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0xC5EAD0", Offset = "0xC5EAD0", VA = "0xC5EAD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xC5E6EC", Offset = "0xC5E6EC", VA = "0xC5E6EC")]
		[DebuggerHidden]
		public <SearchFilenames>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xC5E718", Offset = "0xC5E718", VA = "0xC5E718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xC5E7F0", Offset = "0xC5E7F0", VA = "0xC5E7F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xC5E734", Offset = "0xC5E734", VA = "0xC5E734")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xC5EA90", Offset = "0xC5EA90", VA = "0xC5EA90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8409B4", Offset = "0x8409B4")]
	private sealed class <DownloadTimestamp>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0xC5E2F4", Offset = "0xC5E2F4", VA = "0xC5E2F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0xC5E33C", Offset = "0xC5E33C", VA = "0xC5E33C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xC5DF9C", Offset = "0xC5DF9C", VA = "0xC5DF9C")]
		[DebuggerHidden]
		public <DownloadTimestamp>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xC5DFC8", Offset = "0xC5DFC8", VA = "0xC5DFC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xC5E0A0", Offset = "0xC5E0A0", VA = "0xC5E0A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xC5DFE4", Offset = "0xC5DFE4", VA = "0xC5DFE4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xC5E2FC", Offset = "0xC5E2FC", VA = "0xC5E2FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int timeout;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Encoding encoding;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private byte[] _data;

	[Token(Token = "0x17000012")]
	public byte[] data
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0xCCBC88", Offset = "0xCCBC88", VA = "0xCCBC88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000013")]
	public string text
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0xCCBC90", Offset = "0xCCBC90", VA = "0xCCBC90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000014")]
	public string[] filenames
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0xCCBCC4", Offset = "0xCCBCC4", VA = "0xCCBCC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	public DateTime timestamp
	{
		[Token(Token = "0x6000158")]
		[Address(RVA = "0xCCBD90", Offset = "0xCCBD90", VA = "0xCCBD90")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xCCBBDC", Offset = "0xCCBBDC", VA = "0xCCBBDC")]
	public ES3Cloud(string url, string apiKey)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xCCBC2C", Offset = "0xCCBC2C", VA = "0xCCBC2C")]
	public ES3Cloud(string url, string apiKey, int timeout)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xCCBF14", Offset = "0xCCBF14", VA = "0xCCBF14")]
	public IEnumerator Sync()
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xCCC024", Offset = "0xCCC024", VA = "0xCCC024")]
	public IEnumerator Sync(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xCCC0B4", Offset = "0xCCC0B4", VA = "0xCCC0B4")]
	public IEnumerator Sync(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xCCC148", Offset = "0xCCC148", VA = "0xCCC148")]
	public IEnumerator Sync(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xCCC1D4", Offset = "0xCCC1D4", VA = "0xCCC1D4")]
	public IEnumerator Sync(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xCCC268", Offset = "0xCCC268", VA = "0xCCC268")]
	public IEnumerator Sync(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xCCC308", Offset = "0xCCC308", VA = "0xCCC308")]
	public IEnumerator Sync(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xCCBF98", Offset = "0xCCBF98", VA = "0xCCBF98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A3D8", Offset = "0x84A3D8")]
	private IEnumerator Sync(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xCCC398", Offset = "0xCCC398", VA = "0xCCC398")]
	public IEnumerator UploadFile()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xCCC480", Offset = "0xCCC480", VA = "0xCCC480")]
	public IEnumerator UploadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xCCC520", Offset = "0xCCC520", VA = "0xCCC520")]
	public IEnumerator UploadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xCCC5C4", Offset = "0xCCC5C4", VA = "0xCCC5C4")]
	public IEnumerator UploadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xCCC65C", Offset = "0xCCC65C", VA = "0xCCC65C")]
	public IEnumerator UploadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xCCC700", Offset = "0xCCC700", VA = "0xCCC700")]
	public IEnumerator UploadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xCCC7B0", Offset = "0xCCC7B0", VA = "0xCCC7B0")]
	public IEnumerator UploadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xCCC84C", Offset = "0xCCC84C", VA = "0xCCC84C")]
	public IEnumerator UploadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xCCCFC0", Offset = "0xCCCFC0", VA = "0xCCCFC0")]
	public IEnumerator UploadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xCCD088", Offset = "0xCCD088", VA = "0xCCD088")]
	public IEnumerator UploadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xCCC434", Offset = "0xCCC434", VA = "0xCCC434")]
	public IEnumerator UploadFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xCCD148", Offset = "0xCCD148", VA = "0xCCD148")]
	public IEnumerator UploadFile(byte[] bytes, ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xCCCF20", Offset = "0xCCCF20", VA = "0xCCCF20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A438", Offset = "0x84A438")]
	private IEnumerator UploadFile(byte[] bytes, ES3Settings settings, string user, string password, long fileTimestamp)
	{
		return null;
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xCCD1AC", Offset = "0xCCD1AC", VA = "0xCCD1AC")]
	public IEnumerator DownloadFile()
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xCCD2C8", Offset = "0xCCD2C8", VA = "0xCCD2C8")]
	public IEnumerator DownloadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xCCD35C", Offset = "0xCCD35C", VA = "0xCCD35C")]
	public IEnumerator DownloadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xCCD3F4", Offset = "0xCCD3F4", VA = "0xCCD3F4")]
	public IEnumerator DownloadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xCCD484", Offset = "0xCCD484", VA = "0xCCD484")]
	public IEnumerator DownloadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xCCD51C", Offset = "0xCCD51C", VA = "0xCCD51C")]
	public IEnumerator DownloadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xCCD5C0", Offset = "0xCCD5C0", VA = "0xCCD5C0")]
	public IEnumerator DownloadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xCCD654", Offset = "0xCCD654", VA = "0xCCD654")]
	public IEnumerator DownloadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xCCD74C", Offset = "0xCCD74C", VA = "0xCCD74C")]
	public IEnumerator DownloadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xCCD7B4", Offset = "0xCCD7B4", VA = "0xCCD7B4")]
	public IEnumerator DownloadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xCCD6B8", Offset = "0xCCD6B8", VA = "0xCCD6B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A498", Offset = "0x84A498")]
	private IEnumerator DownloadFile(ES3File es3File, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xCCD234", Offset = "0xCCD234", VA = "0xCCD234")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A4F8", Offset = "0x84A4F8")]
	private IEnumerator DownloadFile(ES3Settings settings, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xCCD7BC", Offset = "0xCCD7BC", VA = "0xCCD7BC")]
	public IEnumerator DeleteFile()
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xCCD8CC", Offset = "0xCCD8CC", VA = "0xCCD8CC")]
	public IEnumerator DeleteFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xCCD95C", Offset = "0xCCD95C", VA = "0xCCD95C")]
	public IEnumerator DeleteFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xCCD9F0", Offset = "0xCCD9F0", VA = "0xCCD9F0")]
	public IEnumerator DeleteFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xCCDA7C", Offset = "0xCCDA7C", VA = "0xCCDA7C")]
	public IEnumerator DeleteFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xCCDB10", Offset = "0xCCDB10", VA = "0xCCDB10")]
	public IEnumerator DeleteFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xCCDBB0", Offset = "0xCCDBB0", VA = "0xCCDBB0")]
	public IEnumerator DeleteFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xCCD840", Offset = "0xCCD840", VA = "0xCCD840")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A558", Offset = "0x84A558")]
	private IEnumerator DeleteFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xCCDC40", Offset = "0xCCDC40", VA = "0xCCDC40")]
	public IEnumerator RenameFile(string filePath, string newFilePath)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xCCDD90", Offset = "0xCCDD90", VA = "0xCCDD90")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xCCDE50", Offset = "0xCCDE50", VA = "0xCCDE50")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xCCDF08", Offset = "0xCCDF08", VA = "0xCCDF08")]
	public IEnumerator RenameFile(string filePath, string newFilePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xCCDFC8", Offset = "0xCCDFC8", VA = "0xCCDFC8")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xCCE094", Offset = "0xCCE094", VA = "0xCCE094")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xCCDCFC", Offset = "0xCCDCFC", VA = "0xCCDCFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A5B8", Offset = "0x84A5B8")]
	private IEnumerator RenameFile(ES3Settings settings, ES3Settings newSettings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xCCE150", Offset = "0xCCE150", VA = "0xCCE150")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A618", Offset = "0x84A618")]
	public IEnumerator DownloadFilenames(string user = "", string password = "")
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xCCE1D0", Offset = "0xCCE1D0", VA = "0xCCE1D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A678", Offset = "0x84A678")]
	public IEnumerator SearchFilenames(string searchPattern, string user = "", string password = "")
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xCCE25C", Offset = "0xCCE25C", VA = "0xCCE25C")]
	public IEnumerator DownloadTimestamp()
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xCCE36C", Offset = "0xCCE36C", VA = "0xCCE36C")]
	public IEnumerator DownloadTimestamp(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xCCE3FC", Offset = "0xCCE3FC", VA = "0xCCE3FC")]
	public IEnumerator DownloadTimestamp(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xCCE490", Offset = "0xCCE490", VA = "0xCCE490")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xCCE51C", Offset = "0xCCE51C", VA = "0xCCE51C")]
	public IEnumerator DownloadTimestamp(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xCCE5B0", Offset = "0xCCE5B0", VA = "0xCCE5B0")]
	public IEnumerator DownloadTimestamp(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xCCE650", Offset = "0xCCE650", VA = "0xCCE650")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xCCE2E0", Offset = "0xCCE2E0", VA = "0xCCE2E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84A6D8", Offset = "0x84A6D8")]
	private IEnumerator DownloadTimestamp(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xCCCE10", Offset = "0xCCCE10", VA = "0xCCCE10")]
	private long DateTimeToUnixTimestamp(DateTime dt)
	{
		return default(long);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xCCE6E0", Offset = "0xCCE6E0", VA = "0xCCE6E0")]
	private long GetFileTimestamp(ES3Settings settings)
	{
		return default(long);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xCCE6FC", Offset = "0xCCE6FC", VA = "0xCCE6FC", Slot = "4")]
	protected override void Reset()
	{
	}
}
[Token(Token = "0x200002B")]
public abstract class ES3Writer : IDisposable
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected HashSet<string> keysToDelete;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal bool writeHeaderAndFooter;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	internal bool overwriteKeys;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int serializationDepth;

	[Token(Token = "0x60001D4")]
	internal abstract void WriteNull();

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x13466EC", Offset = "0x13466EC", VA = "0x13466EC", Slot = "6")]
	internal virtual void StartWriteFile()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x13466FC", Offset = "0x13466FC", VA = "0x13466FC", Slot = "7")]
	internal virtual void EndWriteFile()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x134670C", Offset = "0x134670C", VA = "0x134670C", Slot = "8")]
	internal virtual void StartWriteObject(string name)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x134671C", Offset = "0x134671C", VA = "0x134671C", Slot = "9")]
	internal virtual void EndWriteObject(string name)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x134672C", Offset = "0x134672C", VA = "0x134672C", Slot = "10")]
	internal virtual void StartWriteProperty(string name)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x13467FC", Offset = "0x13467FC", VA = "0x13467FC", Slot = "11")]
	internal virtual void EndWriteProperty(string name)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1346800", Offset = "0x1346800", VA = "0x1346800", Slot = "12")]
	internal virtual void StartWriteCollection()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1346810", Offset = "0x1346810", VA = "0x1346810", Slot = "13")]
	internal virtual void EndWriteCollection()
	{
	}

	[Token(Token = "0x60001DD")]
	internal abstract void StartWriteCollectionItem(int index);

	[Token(Token = "0x60001DE")]
	internal abstract void EndWriteCollectionItem(int index);

	[Token(Token = "0x60001DF")]
	internal abstract void StartWriteDictionary();

	[Token(Token = "0x60001E0")]
	internal abstract void EndWriteDictionary();

	[Token(Token = "0x60001E1")]
	internal abstract void StartWriteDictionaryKey(int index);

	[Token(Token = "0x60001E2")]
	internal abstract void EndWriteDictionaryKey(int index);

	[Token(Token = "0x60001E3")]
	internal abstract void StartWriteDictionaryValue(int index);

	[Token(Token = "0x60001E4")]
	internal abstract void EndWriteDictionaryValue(int index);

	[Token(Token = "0x60001E5")]
	public abstract void Dispose();

	[Token(Token = "0x60001E6")]
	internal abstract void WriteRawProperty(string name, byte[] bytes);

	[Token(Token = "0x60001E7")]
	internal abstract void WritePrimitive(int value);

	[Token(Token = "0x60001E8")]
	internal abstract void WritePrimitive(float value);

	[Token(Token = "0x60001E9")]
	internal abstract void WritePrimitive(bool value);

	[Token(Token = "0x60001EA")]
	internal abstract void WritePrimitive(decimal value);

	[Token(Token = "0x60001EB")]
	internal abstract void WritePrimitive(double value);

	[Token(Token = "0x60001EC")]
	internal abstract void WritePrimitive(long value);

	[Token(Token = "0x60001ED")]
	internal abstract void WritePrimitive(ulong value);

	[Token(Token = "0x60001EE")]
	internal abstract void WritePrimitive(uint value);

	[Token(Token = "0x60001EF")]
	internal abstract void WritePrimitive(byte value);

	[Token(Token = "0x60001F0")]
	internal abstract void WritePrimitive(sbyte value);

	[Token(Token = "0x60001F1")]
	internal abstract void WritePrimitive(short value);

	[Token(Token = "0x60001F2")]
	internal abstract void WritePrimitive(ushort value);

	[Token(Token = "0x60001F3")]
	internal abstract void WritePrimitive(char value);

	[Token(Token = "0x60001F4")]
	internal abstract void WritePrimitive(string value);

	[Token(Token = "0x60001F5")]
	internal abstract void WritePrimitive(byte[] value);

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1346820", Offset = "0x1346820", VA = "0x1346820")]
	protected ES3Writer(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x13468D4", Offset = "0x13468D4", VA = "0x13468D4", Slot = "39")]
	internal virtual void Write(string key, Type type, byte[] value)
	{
	}

	[Token(Token = "0x60001F8")]
	public virtual void Write<T>(string key, object value)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x13469C0", Offset = "0x13469C0", VA = "0x13469C0", Slot = "41")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AA08", Offset = "0x84AA08")]
	public virtual void Write(Type type, string key, object value)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1346AFC", Offset = "0x1346AFC", VA = "0x1346AFC", Slot = "42")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AA1C", Offset = "0x84AA1C")]
	public virtual void Write(object value, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1346BC8", Offset = "0x1346BC8", VA = "0x1346BC8", Slot = "43")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AA30", Offset = "0x84AA30")]
	public virtual void Write(object value, ES3Type type, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x13470EC", Offset = "0x13470EC", VA = "0x13470EC", Slot = "44")]
	internal virtual void WriteRef(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1347264", Offset = "0x1347264", VA = "0x1347264", Slot = "45")]
	public virtual void WriteProperty(string name, object value)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x134728C", Offset = "0x134728C", VA = "0x134728C", Slot = "46")]
	public virtual void WriteProperty(string name, object value, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x60001FF")]
	public virtual void WriteProperty<T>(string name, object value)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x13473C4", Offset = "0x13473C4", VA = "0x13473C4", Slot = "48")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AA44", Offset = "0x84AA44")]
	public virtual void WriteProperty(string name, object value, ES3Type type)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x13473EC", Offset = "0x13473EC", VA = "0x13473EC", Slot = "49")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AA58", Offset = "0x84AA58")]
	public virtual void WriteProperty(string name, object value, ES3Type type, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1347488", Offset = "0x1347488", VA = "0x1347488", Slot = "50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AA6C", Offset = "0x84AA6C")]
	public virtual void WritePropertyByRef(string name, UnityEngine.Object value)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x13475A0", Offset = "0x13475A0", VA = "0x13475A0")]
	public void WritePrivateProperty(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x13477B0", Offset = "0x13477B0", VA = "0x13477B0")]
	public void WritePrivateField(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x13479C0", Offset = "0x13479C0", VA = "0x13479C0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AA80", Offset = "0x84AA80")]
	public void WritePrivateProperty(string name, object objectContainingProperty, ES3Type type)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1347B88", Offset = "0x1347B88", VA = "0x1347B88")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AA94", Offset = "0x84AA94")]
	public void WritePrivateField(string name, object objectContainingField, ES3Type type)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1347D50", Offset = "0x1347D50", VA = "0x1347D50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AAA8", Offset = "0x84AAA8")]
	public void WritePrivatePropertyByRef(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1347F54", Offset = "0x1347F54", VA = "0x1347F54")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AABC", Offset = "0x84AABC")]
	public void WritePrivateFieldByRef(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1345F2C", Offset = "0x1345F2C", VA = "0x1345F2C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AAD0", Offset = "0x84AAD0")]
	public void WriteType(Type type)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1348158", Offset = "0x1348158", VA = "0x1348158")]
	public static ES3Writer Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x13481D4", Offset = "0x13481D4", VA = "0x13481D4")]
	public static ES3Writer Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x13481E4", Offset = "0x13481E4", VA = "0x13481E4")]
	internal static ES3Writer Create(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys, bool append)
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1348244", Offset = "0x1348244", VA = "0x1348244")]
	internal static ES3Writer Create(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1347314", Offset = "0x1347314", VA = "0x1347314")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AAE4", Offset = "0x84AAE4")]
	protected bool SerializationDepthLimitExceeded()
	{
		return default(bool);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x13483C8", Offset = "0x13483C8", VA = "0x13483C8", Slot = "51")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84AAF8", Offset = "0x84AAF8")]
	public virtual void MarkKeyForDeletion(string key)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x134842C", Offset = "0x134842C", VA = "0x134842C")]
	protected void Merge()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1348578", Offset = "0x1348578", VA = "0x1348578")]
	protected void Merge(ES3Reader reader)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x13488A0", Offset = "0x13488A0", VA = "0x13488A0", Slot = "52")]
	public virtual void Save()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x13488B4", Offset = "0x13488B4", VA = "0x13488B4", Slot = "53")]
	public virtual void Save(bool overwriteKeys)
	{
	}
}
[Token(Token = "0x200002C")]
public class ES3XMLWriter
{
	[Token(Token = "0x6000214")]
	[Address(RVA = "0x13489A0", Offset = "0x13489A0", VA = "0x13489A0")]
	public ES3XMLWriter()
	{
	}
}
[Token(Token = "0x200002D")]
public class FCP_ExampleScript : MonoBehaviour
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlexibleColorPicker fcp;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color externalColor;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color internalColor;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1349F34", Offset = "0x1349F34", VA = "0x1349F34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1349F40", Offset = "0x1349F40", VA = "0x1349F40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x134A108", Offset = "0x134A108", VA = "0x134A108")]
	public FCP_ExampleScript()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8409C4", Offset = "0x8409C4")]
public class FCP_Persistence : MonoBehaviour
{
	[Token(Token = "0x200002F")]
	public enum SaveStrategy
	{
		[Token(Token = "0x40000BB")]
		SessionOnly,
		[Token(Token = "0x40000BC")]
		File,
		[Token(Token = "0x40000BD")]
		PlayerPrefs
	}

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveName;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveStrategy saveStrategy;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FlexibleColorPicker fcp;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Color> savedColors;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string saveFilePath;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool saveFileLoaded;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool saveFileOutdated;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x134A110", Offset = "0x134A110", VA = "0x134A110")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x134A168", Offset = "0x134A168", VA = "0x134A168")]
	private void InitStatic()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x134A408", Offset = "0x134A408", VA = "0x134A408")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x134A700", Offset = "0x134A700", VA = "0x134A700")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x134A8CC", Offset = "0x134A8CC", VA = "0x134A8CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x134A2B4", Offset = "0x134A2B4", VA = "0x134A2B4")]
	private void LoadDataFile()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x134A478", Offset = "0x134A478", VA = "0x134A478")]
	private void SaveDataFile()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x134A920", Offset = "0x134A920", VA = "0x134A920")]
	public void SaveColor(Color c)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x134A790", Offset = "0x134A790", VA = "0x134A790")]
	public bool LoadColor(out Color c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x134AB60", Offset = "0x134AB60", VA = "0x134AB60")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x134AC54", Offset = "0x134AC54", VA = "0x134AC54")]
	public FCP_Persistence()
	{
	}
}
[Token(Token = "0x2000030")]
[ExecuteInEditMode]
public class FCP_SpriteMeshEditor : MonoBehaviour
{
	[Token(Token = "0x2000031")]
	public enum MeshType
	{
		[Token(Token = "0x40000C4")]
		CenterPoint,
		[Token(Token = "0x40000C5")]
		forward,
		[Token(Token = "0x40000C6")]
		backward
	}

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int x;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int y;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshType meshType;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite sprite;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int bufferedHash;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x134AC80", Offset = "0x134AC80", VA = "0x134AC80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x134AD78", Offset = "0x134AD78", VA = "0x134AD78")]
	private int GetSettingHash()
	{
		return default(int);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x134AE58", Offset = "0x134AE58", VA = "0x134AE58")]
	private void MakeMesh(Sprite sprite, int x, int y, MeshType meshtype)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x134B414", Offset = "0x134B414", VA = "0x134B414")]
	public FCP_SpriteMeshEditor()
	{
	}
}
[Token(Token = "0x2000032")]
public class FlexibleColorPicker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000033")]
	public struct Picker
	{
		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image image;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite dynamicSprite;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite staticSpriteHor;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite staticSpriteVer;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material dynamicMaterial;
	}

	[Token(Token = "0x2000034")]
	private enum PickerType
	{
		[Token(Token = "0x40000E7")]
		Main,
		[Token(Token = "0x40000E8")]
		R,
		[Token(Token = "0x40000E9")]
		G,
		[Token(Token = "0x40000EA")]
		B,
		[Token(Token = "0x40000EB")]
		H,
		[Token(Token = "0x40000EC")]
		S,
		[Token(Token = "0x40000ED")]
		V,
		[Token(Token = "0x40000EE")]
		A,
		[Token(Token = "0x40000EF")]
		Preview,
		[Token(Token = "0x40000F0")]
		PreviewAlpha
	}

	[Token(Token = "0x2000035")]
	public enum MainPickingMode
	{
		[Token(Token = "0x40000F2")]
		HS,
		[Token(Token = "0x40000F3")]
		HV,
		[Token(Token = "0x40000F4")]
		SH,
		[Token(Token = "0x40000F5")]
		SV,
		[Token(Token = "0x40000F6")]
		VH,
		[Token(Token = "0x40000F7")]
		VS
	}

	[Serializable]
	[Token(Token = "0x2000036")]
	public class ColorUpdateEvent : UnityEvent<Color>
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xC60DCC", Offset = "0xC60DCC", VA = "0xC60DCC")]
		public ColorUpdateEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000037")]
	public class AdvancedSettings
	{
		[Serializable]
		[Token(Token = "0x2000038")]
		public class PSettings
		{
			[Token(Token = "0x40000FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846B4C", Offset = "0x846B4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846B4C", Offset = "0x846B4C")]
			public float min;

			[Token(Token = "0x4000100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846BA0", Offset = "0x846BA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846BA0", Offset = "0x846BA0")]
			public float max;

			[Token(Token = "0x4000101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846BF4", Offset = "0x846BF4")]
			public bool overrideStatic;

			[Token(Token = "0x6000261")]
			[Address(RVA = "0x1C5558C", Offset = "0x1C5558C", VA = "0x1C5558C")]
			public PSettings()
			{
			}
		}

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PSettings r;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PSettings g;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PSettings b;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PSettings h;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PSettings s;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PSettings v;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PSettings a;

		[Token(Token = "0x600025F")]
		[Address(RVA = "0xC60524", Offset = "0xC60524", VA = "0xC60524")]
		public PSettings Get(int i)
		{
			return null;
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0xC60720", Offset = "0xC60720", VA = "0xC60720")]
		public AdvancedSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000039")]
	private class BufferedColor
	{
		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float bufferedHue;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float bufferedSaturation;

		[Token(Token = "0x1700002A")]
		public float r
		{
			[Token(Token = "0x6000262")]
			[Address(RVA = "0xC60728", Offset = "0xC60728", VA = "0xC60728")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002B")]
		public float g
		{
			[Token(Token = "0x6000263")]
			[Address(RVA = "0xC60730", Offset = "0xC60730", VA = "0xC60730")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002C")]
		public float b
		{
			[Token(Token = "0x6000264")]
			[Address(RVA = "0xC60738", Offset = "0xC60738", VA = "0xC60738")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002D")]
		public float a
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0xC60740", Offset = "0xC60740", VA = "0xC60740")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002E")]
		public float h
		{
			[Token(Token = "0x6000266")]
			[Address(RVA = "0xC60748", Offset = "0xC60748", VA = "0xC60748")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002F")]
		public float s
		{
			[Token(Token = "0x6000267")]
			[Address(RVA = "0xC60750", Offset = "0xC60750", VA = "0xC60750")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000030")]
		public float v
		{
			[Token(Token = "0x6000268")]
			[Address(RVA = "0xC60758", Offset = "0xC60758", VA = "0xC60758")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xC6077C", Offset = "0xC6077C", VA = "0xC6077C")]
		public BufferedColor()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0xC607B4", Offset = "0xC607B4", VA = "0xC607B4")]
		public BufferedColor(Color color)
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xC60814", Offset = "0xC60814", VA = "0xC60814")]
		public BufferedColor(Color color, float hue, float sat)
		{
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xC60884", Offset = "0xC60884", VA = "0xC60884")]
		public BufferedColor(Color color, BufferedColor source)
		{
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0xC6080C", Offset = "0xC6080C", VA = "0xC6080C")]
		public void Set(Color color)
		{
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0xC60914", Offset = "0xC60914", VA = "0xC60914")]
		public void Set(Color color, float bufferedHue, float bufferedSaturation)
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0xC60968", Offset = "0xC60968", VA = "0xC60968")]
		public BufferedColor PickR(float value)
		{
			return null;
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0xC609F0", Offset = "0xC609F0", VA = "0xC609F0")]
		public BufferedColor PickG(float value)
		{
			return null;
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0xC60A78", Offset = "0xC60A78", VA = "0xC60A78")]
		public BufferedColor PickB(float value)
		{
			return null;
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0xC60B00", Offset = "0xC60B00", VA = "0xC60B00")]
		public BufferedColor PickA(float value)
		{
			return null;
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0xC60B88", Offset = "0xC60B88", VA = "0xC60B88")]
		public BufferedColor PickH(float value)
		{
			return null;
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xC60C50", Offset = "0xC60C50", VA = "0xC60C50")]
		public BufferedColor PickS(float value)
		{
			return null;
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xC60D1C", Offset = "0xC60D1C", VA = "0xC60D1C")]
		public BufferedColor PickV(float value)
		{
			return null;
		}
	}

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846954", Offset = "0x846954")]
	public Picker[] pickers;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84698C", Offset = "0x84698C")]
	public InputField hexInput;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8469C4", Offset = "0x8469C4")]
	public Dropdown modeDropdown;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas canvas;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8469FC", Offset = "0x8469FC")]
	public MainPickingMode mode;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846A34", Offset = "0x846A34")]
	public Sprite[] staticSpriteMain;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BufferedColor bufferedColor;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Picker focusedPicker;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PickerType focusedPickerType;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private MainPickingMode lastUpdatedMode;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool typeUpdate;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool triggeredStaticMode;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool materialsSeperated;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846A6C", Offset = "0x846A6C")]
	public Color startingColor;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846AA4", Offset = "0x846AA4")]
	public bool staticMode;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846ADC", Offset = "0x846ADC")]
	public bool multiInstance;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ColorUpdateEvent onColorChange;

	[Token(Token = "0x40000D8")]
	private const float HUE_LOOP = 5.9999f;

	[Token(Token = "0x40000D9")]
	private const string SHADER_MODE = "_Mode";

	[Token(Token = "0x40000DA")]
	private const string SHADER_C1 = "_Color1";

	[Token(Token = "0x40000DB")]
	private const string SHADER_C2 = "_Color2";

	[Token(Token = "0x40000DC")]
	private const string SHADER_DOUBLE_MODE = "_DoubleMode";

	[Token(Token = "0x40000DD")]
	private const string SHADER_HSV = "_HSV";

	[Token(Token = "0x40000DE")]
	private const string SHADER_HSV_MIN = "_HSV_MIN";

	[Token(Token = "0x40000DF")]
	private const string SHADER_HSV_MAX = "_HSV_MAX";

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846B14", Offset = "0x846B14")]
	public AdvancedSettings advancedSettings;

	[Token(Token = "0x17000028")]
	private AdvancedSettings AS
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x134BEA8", Offset = "0x134BEA8", VA = "0x134BEA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public Color color
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x134A0C8", Offset = "0x134A0C8", VA = "0x134A0C8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x1349FE8", Offset = "0x1349FE8", VA = "0x1349FE8")]
		set
		{
		}
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x134C3F4", Offset = "0x134C3F4", VA = "0x134C3F4")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x134C434", Offset = "0x134C434", VA = "0x134C434")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x134C438", Offset = "0x134C438", VA = "0x134C438")]
	public Color GetColorFullAlpha()
	{
		return default(Color);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x134C478", Offset = "0x134C478", VA = "0x134C478")]
	public void SetColorNoAlpha(Color color)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x134C494", Offset = "0x134C494", VA = "0x134C494")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x134C4E8", Offset = "0x134C4E8", VA = "0x134C4E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x134CBF4", Offset = "0x134CBF4", VA = "0x134CBF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x134CCB8", Offset = "0x134CCB8", VA = "0x134CCB8")]
	public void SetPointerFocus(int i)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x134CE14", Offset = "0x134CE14", VA = "0x134CE14")]
	public void PointerUpdate(BaseEventData e)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x134D088", Offset = "0x134D088", VA = "0x134D088")]
	public void TypeHex(string input)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x134D264", Offset = "0x134D264", VA = "0x134D264")]
	public void FinishTypeHex(string input)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x134D294", Offset = "0x134D294", VA = "0x134D294")]
	public void ChangeMode(int newMode)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x134CC7C", Offset = "0x134CC7C", VA = "0x134CC7C")]
	public void ChangeMode(MainPickingMode mode)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x134C5E8", Offset = "0x134C5E8", VA = "0x134C5E8")]
	private void SeperateMaterials()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x134D064", Offset = "0x134D064", VA = "0x134D064")]
	private BufferedColor PickColor(BufferedColor color, PickerType type, Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x134D440", Offset = "0x134D440", VA = "0x134D440")]
	private BufferedColor PickColorMain(BufferedColor color, Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x134D448", Offset = "0x134D448", VA = "0x134D448")]
	private BufferedColor PickColor1D(BufferedColor color, PickerType type, Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x134D4E4", Offset = "0x134D4E4", VA = "0x134D4E4")]
	private BufferedColor PickColorMain(BufferedColor color, MainPickingMode mode, Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x134D874", Offset = "0x134D874", VA = "0x134D874")]
	private BufferedColor PickColor2D(BufferedColor color, PickerType type1, float value1, PickerType type2, float value2)
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x134D5F4", Offset = "0x134D5F4", VA = "0x134D5F4")]
	private BufferedColor PickColor1D(BufferedColor color, PickerType type, float value)
	{
		return null;
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x134BEB0", Offset = "0x134BEB0", VA = "0x134BEB0")]
	private void UpdateMarkers()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x134D8F4", Offset = "0x134D8F4", VA = "0x134D8F4")]
	private void UpdateMarker(Picker picker, PickerType type, Vector2 v)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x134D994", Offset = "0x134D994", VA = "0x134D994")]
	private void SetMarker(Image picker, Vector2 v, bool setX, bool setY)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x134DBF4", Offset = "0x134DBF4", VA = "0x134DBF4")]
	private RectTransform GetMarker(Image picker, string search)
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x134D8B4", Offset = "0x134D8B4", VA = "0x134D8B4")]
	private Vector2 GetValue(PickerType type)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x134DE3C", Offset = "0x134DE3C", VA = "0x134DE3C")]
	private float GetValue1D(PickerType type)
	{
		return default(float);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x134DD40", Offset = "0x134DD40", VA = "0x134DD40")]
	private Vector2 GetValue(MainPickingMode mode)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x134BF6C", Offset = "0x134BF6C", VA = "0x134BF6C")]
	private void UpdateTextures()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x134E060", Offset = "0x134E060", VA = "0x134E060")]
	private void UpdateStatic(PickerType type)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x134E27C", Offset = "0x134E27C", VA = "0x134E27C")]
	private void UpdateDynamic(PickerType type)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x134E6BC", Offset = "0x134E6BC", VA = "0x134E6BC")]
	private int GetGradientMode(PickerType type)
	{
		return default(int);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x134E69C", Offset = "0x134E69C", VA = "0x134E69C")]
	private bool IsPickerAvailable(PickerType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x134D360", Offset = "0x134D360", VA = "0x134D360")]
	private bool IsPickerAvailable(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x134C2D0", Offset = "0x134C2D0", VA = "0x134C2D0")]
	private void UpdateHex()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x134D0B8", Offset = "0x134D0B8", VA = "0x134D0B8")]
	private void TypeHex(string input, bool finish)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x134C790", Offset = "0x134C790", VA = "0x134C790")]
	private void MakeModeOptions()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x134D298", Offset = "0x134D298", VA = "0x134D298")]
	private void UpdateMode(MainPickingMode mode)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x134E988", Offset = "0x134E988", VA = "0x134E988")]
	private static bool IsPreviewType(PickerType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x134E6A0", Offset = "0x134E6A0", VA = "0x134E6A0")]
	private static bool IsAlphaType(PickerType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x134D59C", Offset = "0x134D59C", VA = "0x134D59C")]
	private static bool IsHorizontal(Picker p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x134E74C", Offset = "0x134E74C", VA = "0x134E74C")]
	public static string GetSanitizedHex(string input, bool full)
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x134E9A4", Offset = "0x134E9A4", VA = "0x134E9A4")]
	private static bool IsValidHexChar(char c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x134EA24", Offset = "0x134EA24", VA = "0x134EA24")]
	public static Color ParseHex(string input)
	{
		return default(Color);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x134EA4C", Offset = "0x134EA4C", VA = "0x134EA4C")]
	public static Color ParseHex(string input, Color defaultColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x134CEDC", Offset = "0x134CEDC", VA = "0x134CEDC")]
	private static Vector2 GetNormalizedPointerPosition(Canvas canvas, RectTransform rect, BaseEventData e)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x134EAB8", Offset = "0x134EAB8", VA = "0x134EAB8")]
	private static Vector2 GetNormScreenSpace(RectTransform rect, BaseEventData e)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x134EC40", Offset = "0x134EC40", VA = "0x134EC40")]
	private static Vector2 GetNormWorldSpace(Canvas canvas, RectTransform rect, BaseEventData e)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x134EEE0", Offset = "0x134EEE0", VA = "0x134EEE0")]
	public static Color HSVToRGB(Vector3 hsv)
	{
		return default(Color);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x134EEE4", Offset = "0x134EEE4", VA = "0x134EEE4")]
	public static Color HSVToRGB(float h, float s, float v)
	{
		return default(Color);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x134F020", Offset = "0x134F020", VA = "0x134F020")]
	public static Vector3 RGBToHSV(Color color)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x134F024", Offset = "0x134F024", VA = "0x134F024")]
	public static Vector3 RGBToHSV(float r, float g, float b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x134F1A8", Offset = "0x134F1A8", VA = "0x134F1A8")]
	public FlexibleColorPicker()
	{
	}
}
[Token(Token = "0x200003A")]
public class MadsonD9 : HVRPistol
{
	[Token(Token = "0x6000276")]
	[Address(RVA = "0xCB1A7C", Offset = "0xCB1A7C", VA = "0xCB1A7C")]
	public MadsonD9()
	{
	}
}
[Token(Token = "0x200003B")]
public class MadsonD9Slide : HVRSlide
{
	[Token(Token = "0x6000277")]
	[Address(RVA = "0xCB1A84", Offset = "0xCB1A84", VA = "0xCB1A84")]
	public MadsonD9Slide()
	{
	}
}
[Token(Token = "0x200003C")]
public class DemoUIManager : MonoBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HVRPlayerController Player;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HVRCameraRig CameraRig;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HVRPlayerInputs Inputs;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI SitStandText;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI ForceGrabText;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider TurnRateSlider;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider SnapTurnSlider;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI TurnRateText;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI SnapRateText;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle SmoothTurnToggle;

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xCBDC44", Offset = "0xCBDC44", VA = "0xCBDC44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xCBE028", Offset = "0xCBE028", VA = "0xCBE028")]
	private void Update()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xCBE02C", Offset = "0xCBE02C", VA = "0xCBE02C")]
	public void OnSitStandClicked()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xCBE070", Offset = "0xCBE070", VA = "0xCBE070")]
	public void OnForceGrabClicked()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xCBDF7C", Offset = "0xCBDF7C", VA = "0xCBDF7C")]
	private void UpdateForceGrabButton()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xCBDED0", Offset = "0xCBDED0", VA = "0xCBDED0")]
	private void UpdateSitStandButton()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xCBE09C", Offset = "0xCBE09C", VA = "0xCBE09C")]
	public void OnTurnRateChanged(float rate)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xCBE0F4", Offset = "0xCBE0F4", VA = "0xCBE0F4")]
	public void OnSnapTurnRateChanged(float rate)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xCBE14C", Offset = "0xCBE14C", VA = "0xCBE14C")]
	public void OnSmoothTurnChanged(bool smooth)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xCBE170", Offset = "0xCBE170", VA = "0xCBE170")]
	public DemoUIManager()
	{
	}
}
[Token(Token = "0x200003D")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x17000031")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xDAD18C", Offset = "0xDAD18C", VA = "0xDAD18C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xDAC23C", Offset = "0xDAC23C", VA = "0xDAC23C")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xDAC9DC", Offset = "0xDAC9DC", VA = "0xDAC9DC")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xDACD64", Offset = "0xDACD64", VA = "0xDACD64")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xDACA48", Offset = "0xDACA48", VA = "0xDACA48")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xDACDC0", Offset = "0xDACDC0", VA = "0xDACDC0")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xDAC86C", Offset = "0xDAC86C", VA = "0xDAC86C")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xDAD1E4", Offset = "0xDAD1E4", VA = "0xDAD1E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xDAD2EC", Offset = "0xDAD2EC", VA = "0xDAD2EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xDAD378", Offset = "0xDAD378", VA = "0xDAD378")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840A34", Offset = "0x840A34")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xDA932C", Offset = "0xDA932C", VA = "0xDA932C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xDA9338", Offset = "0xDA9338", VA = "0xDA9338")]
	private void Update()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xDA945C", Offset = "0xDA945C", VA = "0xDA945C")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x200003F")]
public class CFX_Demo : MonoBehaviour
{
	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840A94", Offset = "0x840A94")]
	private sealed class <RandomSpawnsCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029A")]
			[Address(RVA = "0xC5B358", Offset = "0xC5B358", VA = "0xC5B358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0xC5B3A0", Offset = "0xC5B3A0", VA = "0xC5B3A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0xC5B148", Offset = "0xC5B148", VA = "0xC5B148")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0xC5B174", Offset = "0xC5B174", VA = "0xC5B174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0xC5B178", Offset = "0xC5B178", VA = "0xC5B178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xC5B360", Offset = "0xC5B360", VA = "0xC5B360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool orderedSpawns;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float step;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float order;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material groundMat;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material waterMat;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, float> ParticlesYOffsetD;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIndex;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string randomSpawnsDelay;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool randomSpawns;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool slowMo;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xDA9518", Offset = "0xDA9518", VA = "0xDA9518")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xDA9674", Offset = "0xDA9674", VA = "0xDA9674")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xDA9904", Offset = "0xDA9904", VA = "0xDA9904")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xDAA4A4", Offset = "0xDAA4A4", VA = "0xDAA4A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84AB0C", Offset = "0x84AB0C")]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xDAA510", Offset = "0xDAA510", VA = "0xDAA510")]
	private void Update()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xDAA168", Offset = "0xDAA168", VA = "0xDAA168")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xDAA308", Offset = "0xDAA308", VA = "0xDAA308")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xDAA56C", Offset = "0xDAA56C", VA = "0xDAA56C")]
	public CFX_Demo()
	{
	}
}
[Token(Token = "0x2000041")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840AA4", Offset = "0x840AA4")]
	private sealed class <>c
	{
		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xC5B408", Offset = "0xC5B408", VA = "0xC5B408")]
		public <>c()
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xC5B410", Offset = "0xC5B410", VA = "0xC5B410")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840AB4", Offset = "0x840AB4")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0xC5B61C", Offset = "0xC5B61C", VA = "0xC5B61C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0xC5B664", Offset = "0xC5B664", VA = "0xC5B664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xC5B464", Offset = "0xC5B464", VA = "0xC5B464")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xC5B490", Offset = "0xC5B490", VA = "0xC5B490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xC5B494", Offset = "0xC5B494", VA = "0xC5B494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xC5B624", Offset = "0xC5B624", VA = "0xC5B624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x846C2C", Offset = "0x846C2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x846C2C", Offset = "0x846C2C")]
	public Image slowMoBtn;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x846C64", Offset = "0x846C64")]
	public Text EffectLabel;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xDAAA2C", Offset = "0xDAAA2C", VA = "0xDAAA2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xDAADEC", Offset = "0xDAADEC", VA = "0xDAADEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xDAB430", Offset = "0xDAB430", VA = "0xDAB430")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xDAB510", Offset = "0xDAB510", VA = "0xDAB510")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xDAB614", Offset = "0xDAB614", VA = "0xDAB614")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xDAB6E0", Offset = "0xDAB6E0", VA = "0xDAB6E0")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xDAB6E4", Offset = "0xDAB6E4", VA = "0xDAB6E4")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xDAACB4", Offset = "0xDAACB4", VA = "0xDAACB4")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xDAB248", Offset = "0xDAB248", VA = "0xDAB248")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xDAB6E8", Offset = "0xDAB6E8", VA = "0xDAB6E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84ABBC", Offset = "0x84ABBC")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xDAB074", Offset = "0xDAB074", VA = "0xDAB074")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xDAB0AC", Offset = "0xDAB0AC", VA = "0xDAB0AC")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xDAB0E0", Offset = "0xDAB0E0", VA = "0xDAB0E0")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xDAB754", Offset = "0xDAB754", VA = "0xDAB754")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000044")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xDAB7CC", Offset = "0xDAB7CC", VA = "0xDAB7CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xDAB858", Offset = "0xDAB858", VA = "0xDAB858")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000045")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xDAB870", Offset = "0xDAB870", VA = "0xDAB870")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xDAB924", Offset = "0xDAB924", VA = "0xDAB924")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xDABA04", Offset = "0xDABA04", VA = "0xDABA04")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x2000046")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xDABA50", Offset = "0xDABA50", VA = "0xDABA50")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xDABB74", Offset = "0xDABB74", VA = "0xDABB74")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x2000047")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xDABBD4", Offset = "0xDABBD4", VA = "0xDABBD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xDABC80", Offset = "0xDABC80", VA = "0xDABC80")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xDABCFC", Offset = "0xDABCFC", VA = "0xDABCFC")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000048")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840AC4", Offset = "0x840AC4")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840B24", Offset = "0x840B24")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0xC5B0F8", Offset = "0xC5B0F8", VA = "0xC5B0F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0xC5B140", Offset = "0xC5B140", VA = "0xC5B140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xC5AF3C", Offset = "0xC5AF3C", VA = "0xC5AF3C")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xC5AF68", Offset = "0xC5AF68", VA = "0xC5AF68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xC5AF6C", Offset = "0xC5AF6C", VA = "0xC5AF6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xC5B100", Offset = "0xC5B100", VA = "0xC5B100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xDA91EC", Offset = "0xDA91EC", VA = "0xDA91EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xDA923C", Offset = "0xDA923C", VA = "0xDA923C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84AC6C", Offset = "0x84AC6C")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xDA92A8", Offset = "0xDA92A8", VA = "0xDA92A8")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x200004A")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xDA92B0", Offset = "0xDA92B0", VA = "0xDA92B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xDA931C", Offset = "0xDA931C", VA = "0xDA931C")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x200004B")]
public class CFX_AutodestructWhenNoChildren : MonoBehaviour
{
	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xDA946C", Offset = "0xDA946C", VA = "0xDA946C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xDA9510", Offset = "0xDA9510", VA = "0xDA9510")]
	public CFX_AutodestructWhenNoChildren()
	{
	}
}
[Token(Token = "0x200004C")]
public class CFX_InspectorHelp : MonoBehaviour
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Locked;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Title;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string HelpText;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MsgType;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xDABD48", Offset = "0xDABD48", VA = "0xDABD48")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x84AD1C", Offset = "0x84AD1C")]
	private void Unlock()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xDABD50", Offset = "0xDABD50", VA = "0xDABD50")]
	public CFX_InspectorHelp()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840B34", Offset = "0x840B34")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xDABD58", Offset = "0xDABD58", VA = "0xDABD58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xDABDBC", Offset = "0xDABDBC", VA = "0xDABDBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xDABDD0", Offset = "0xDABDD0", VA = "0xDABDD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xDABE70", Offset = "0xDABE70", VA = "0xDABE70")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840B94", Offset = "0x840B94")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xDABE80", Offset = "0xDABE80", VA = "0xDABE80")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xDABEE4", Offset = "0xDABEE4", VA = "0xDABEE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xDABF64", Offset = "0xDABF64", VA = "0xDABF64")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xDAC0D0", Offset = "0xDAC0D0", VA = "0xDAC0D0")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x200004F")]
public class CFX_ShurikenThreadFix : MonoBehaviour
{
	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840BF4", Offset = "0x840BF4")]
	private sealed class <WaitFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_ShurikenThreadFix <>4__this;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002DC")]
			[Address(RVA = "0xC5B744", Offset = "0xC5B744", VA = "0xC5B744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002DE")]
			[Address(RVA = "0xC5B78C", Offset = "0xC5B78C", VA = "0xC5B78C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xC5B66C", Offset = "0xC5B66C", VA = "0xC5B66C")]
		[DebuggerHidden]
		public <WaitFrame>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xC5B698", Offset = "0xC5B698", VA = "0xC5B698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xC5B69C", Offset = "0xC5B69C", VA = "0xC5B69C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xC5B74C", Offset = "0xC5B74C", VA = "0xC5B74C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] systems;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xDAC0E0", Offset = "0xDAC0E0", VA = "0xDAC0E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xDAC1C8", Offset = "0xDAC1C8", VA = "0xDAC1C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84AD54", Offset = "0x84AD54")]
	private IEnumerator WaitFrame()
	{
		return null;
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xDAC234", Offset = "0xDAC234", VA = "0xDAC234")]
	public CFX_ShurikenThreadFix()
	{
	}
}
[Token(Token = "0x2000051")]
public class LowPolyVegetation_CameraControl : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846C74", Offset = "0x846C74")]
	public float cameraMoveSpeed_x;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846C94", Offset = "0x846C94")]
	public float cameraMoveSpeed_y;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846CB4", Offset = "0x846CB4")]
	public float cameraMoveSpeed_z;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xCAF108", Offset = "0xCAF108", VA = "0xCAF108")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xCAF1A0", Offset = "0xCAF1A0", VA = "0xCAF1A0")]
	public LowPolyVegetation_CameraControl()
	{
	}
}
[Token(Token = "0x2000052")]
public class LowPolyVegetation_CloudsControl : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846CD4", Offset = "0x846CD4")]
	public float cloudsMoveSpeed_x;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846CEC", Offset = "0x846CEC")]
	public float cloudsMoveSpeed_z;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xCAF1A8", Offset = "0xCAF1A8", VA = "0xCAF1A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xCAF228", Offset = "0xCAF228", VA = "0xCAF228")]
	public LowPolyVegetation_CloudsControl()
	{
	}
}
[Token(Token = "0x2000053")]
public class LowPolyVegetation_SunControl : MonoBehaviour
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846D04", Offset = "0x846D04")]
	public float sunRotationSpeed_x;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846D1C", Offset = "0x846D1C")]
	public float sunRotationSpeed_y;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xCAF230", Offset = "0xCAF230", VA = "0xCAF230")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xCAF2B0", Offset = "0xCAF2B0", VA = "0xCAF2B0")]
	public LowPolyVegetation_SunControl()
	{
	}
}
[Token(Token = "0x2000054")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xD9E118", Offset = "0xD9E118", VA = "0xD9E118")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xD9E700", Offset = "0xD9E700", VA = "0xD9E700")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xD9E908", Offset = "0xD9E908", VA = "0xD9E908")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x2000055")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xCAF2B8", Offset = "0xCAF2B8", VA = "0xCAF2B8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xCAF398", Offset = "0xCAF398", VA = "0xCAF398")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000056")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xCB0D00", Offset = "0xCB0D00", VA = "0xCB0D00")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xCB0E48", Offset = "0xCB0E48", VA = "0xCB0E48")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xCB10BC", Offset = "0xCB10BC", VA = "0xCB10BC")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xCB1648", Offset = "0xCB1648", VA = "0xCB1648")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000057")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xCAFD30", Offset = "0xCAFD30", VA = "0xCAFD30")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xCAFE10", Offset = "0xCAFE10", VA = "0xCAFE10")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000058")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840C04", Offset = "0x840C04")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F8")]
			[Address(RVA = "0xC62678", Offset = "0xC62678", VA = "0xC62678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002FA")]
			[Address(RVA = "0xC626C0", Offset = "0xC626C0", VA = "0xC626C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xC624E8", Offset = "0xC624E8", VA = "0xC624E8")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xC62514", Offset = "0xC62514", VA = "0xC62514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xC62518", Offset = "0xC62518", VA = "0xC62518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xC62680", Offset = "0xC62680", VA = "0xC62680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xCAF3A0", Offset = "0xCAF3A0", VA = "0xCAF3A0")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xCAF438", Offset = "0xCAF438", VA = "0xCAF438")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xCAF814", Offset = "0xCAF814", VA = "0xCAF814")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84AE04", Offset = "0x84AE04")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xCAF880", Offset = "0xCAF880", VA = "0xCAF880")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xCAF960", Offset = "0xCAF960", VA = "0xCAF960")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x200005A")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xCAF9D8", Offset = "0xCAF9D8", VA = "0xCAF9D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xCAFA34", Offset = "0xCAFA34", VA = "0xCAFA34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xCAFAC0", Offset = "0xCAFAC0", VA = "0xCAFAC0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xCAFBA0", Offset = "0xCAFBA0", VA = "0xCAFBA0")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x200005B")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xCAFBA8", Offset = "0xCAFBA8", VA = "0xCAFBA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xCAFC40", Offset = "0xCAFC40", VA = "0xCAFC40")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x200005C")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x6000301")]
	[Address(RVA = "0xCAFC48", Offset = "0xCAFC48", VA = "0xCAFC48")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xCAFD28", Offset = "0xCAFD28", VA = "0xCAFD28")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x200005D")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xCAFE18", Offset = "0xCAFE18", VA = "0xCAFE18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xCB000C", Offset = "0xCB000C", VA = "0xCB000C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xCB0BE0", Offset = "0xCB0BE0", VA = "0xCB0BE0")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xCB0CF8", Offset = "0xCB0CF8", VA = "0xCB0CF8")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x200005E")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xCB1650", Offset = "0xCB1650", VA = "0xCB1650")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xCB1730", Offset = "0xCB1730", VA = "0xCB1730")]
	public void Start()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xCB17D4", Offset = "0xCB17D4", VA = "0xCB17D4")]
	public void Update()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xCB1A74", Offset = "0xCB1A74", VA = "0xCB1A74")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840C14", Offset = "0x840C14")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840C14", Offset = "0x840C14")]
public class MeshCombiner : MonoBehaviour
{
	[Token(Token = "0x2000060")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840CA8", Offset = "0x840CA8")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFilter[] meshFilters;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner <>4__this;

		[Token(Token = "0x6000322")]
		[Address(RVA = "0xC62798", Offset = "0xC62798", VA = "0xC62798")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xC627A0", Offset = "0xC627A0", VA = "0xC627A0")]
		internal bool <GetMeshFiltersToCombine>b__0(MeshFilter meshFilter)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000061")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840CB8", Offset = "0x840CB8")]
	private sealed class <>c__DisplayClass33_1
	{
		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass33_0 CS$<>8__locals1;

		[Token(Token = "0x6000324")]
		[Address(RVA = "0xC62838", Offset = "0xC62838", VA = "0xC62838")]
		public <>c__DisplayClass33_1()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xC62840", Offset = "0xC62840", VA = "0xC62840")]
		internal bool <GetMeshFiltersToCombine>b__2(MeshFilter meshFilter)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000062")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840CC8", Offset = "0x840CC8")]
	private sealed class <>c
	{
		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<MeshFilter, bool> <>9__33_1;

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xC62728", Offset = "0xC62728", VA = "0xC62728")]
		public <>c()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0xC62730", Offset = "0xC62730", VA = "0xC62730")]
		internal bool <GetMeshFiltersToCombine>b__33_1(MeshFilter meshFilter)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400018E")]
	private const int Mesh16BitBufferVertexLimit = 65535;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool createMultiMaterialMesh;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool combineInactiveChildren;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool deactivateCombinedChildren;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool deactivateCombinedChildrenMeshRenderers;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool generateUVMap;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool destroyCombinedChildren;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string folderPath;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846DA4", Offset = "0x846DA4")]
	private MeshFilter[] meshFiltersToSkip;

	[Token(Token = "0x1700003C")]
	public bool CreateMultiMaterialMesh
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xCB2FB4", Offset = "0xCB2FB4", VA = "0xCB2FB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xCB2FBC", Offset = "0xCB2FBC", VA = "0xCB2FBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public bool CombineInactiveChildren
	{
		[Token(Token = "0x600030D")]
		[Address(RVA = "0xCB2FC8", Offset = "0xCB2FC8", VA = "0xCB2FC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xCB2FD0", Offset = "0xCB2FD0", VA = "0xCB2FD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public bool DeactivateCombinedChildren
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xCB2FDC", Offset = "0xCB2FDC", VA = "0xCB2FDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000310")]
		[Address(RVA = "0xCB2FE4", Offset = "0xCB2FE4", VA = "0xCB2FE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public bool DeactivateCombinedChildrenMeshRenderers
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xCB3018", Offset = "0xCB3018", VA = "0xCB3018")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xCB3020", Offset = "0xCB3020", VA = "0xCB3020")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public bool GenerateUVMap
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xCB3040", Offset = "0xCB3040", VA = "0xCB3040")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xCB3048", Offset = "0xCB3048", VA = "0xCB3048")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public bool DestroyCombinedChildren
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xCB3054", Offset = "0xCB3054", VA = "0xCB3054")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000316")]
		[Address(RVA = "0xCB305C", Offset = "0xCB305C", VA = "0xCB305C")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public string FolderPath
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xCB3080", Offset = "0xCB3080", VA = "0xCB3080")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xCB3088", Offset = "0xCB3088", VA = "0xCB3088")]
		set
		{
		}
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xCB3000", Offset = "0xCB3000", VA = "0xCB3000")]
	private void CheckDeactivateCombinedChildren()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xCB3070", Offset = "0xCB3070", VA = "0xCB3070")]
	private void CheckDestroyCombinedChildren()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xCB3090", Offset = "0xCB3090", VA = "0xCB3090")]
	public void CombineMeshes(bool showCreatedMeshInfo)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xCB46E4", Offset = "0xCB46E4", VA = "0xCB46E4")]
	private MeshFilter[] GetMeshFiltersToCombine()
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xCB3338", Offset = "0xCB3338", VA = "0xCB3338")]
	private void CombineMeshesWithSingleMaterial(bool showCreatedMeshInfo)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xCB3A40", Offset = "0xCB3A40", VA = "0xCB3A40")]
	private void CombineMeshesWithMutliMaterial(bool showCreatedMeshInfo)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xCB49BC", Offset = "0xCB49BC", VA = "0xCB49BC")]
	private void DeactivateCombinedGameObjects(MeshFilter[] meshFilters)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xCB49B8", Offset = "0xCB49B8", VA = "0xCB49B8")]
	private void GenerateUV(Mesh combinedMesh)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xCB4B8C", Offset = "0xCB4B8C", VA = "0xCB4B8C")]
	public MeshCombiner()
	{
	}
}
[Token(Token = "0x2000063")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x840CD8", Offset = "0x840CD8")]
public class FastList<T>
{
	[Token(Token = "0x2000064")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000065")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D10", Offset = "0x840D10")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000045")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600034A")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600034C")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000347")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000348")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000349")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600034B")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000043")]
	public int Count
	{
		[Token(Token = "0x600032B")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600032C")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public T Item
	{
		[Token(Token = "0x600032D")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600032E")]
		set
		{
		}
	}

	[Token(Token = "0x6000329")]
	public FastList()
	{
	}

	[Token(Token = "0x600032A")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600032F")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000330")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000331")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000332")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000333")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000334")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000335")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000336")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000337")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000338")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000339")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x600033A")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600033C")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600033D")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84AEB4", Offset = "0x84AEB4")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600033F")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000340")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000341")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000342")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000066")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xCA5954", Offset = "0xCA5954", VA = "0xCA5954")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000067")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xCA5928", Offset = "0xCA5928", VA = "0xCA5928")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000068")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x10F5204", Offset = "0x10F5204", VA = "0x10F5204")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x10F5368", Offset = "0x10F5368", VA = "0x10F5368")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x10F5704", Offset = "0x10F5704", VA = "0x10F5704")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x10F58A8", Offset = "0x10F58A8", VA = "0x10F58A8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x10F58D8", Offset = "0x10F58D8", VA = "0x10F58D8")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000069")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x10F8D40", Offset = "0x10F8D40", VA = "0x10F8D40")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x10F8DC8", Offset = "0x10F8DC8", VA = "0x10F8DC8")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x10F8F3C", Offset = "0x10F8F3C", VA = "0x10F8F3C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200006A")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000047")]
	public bool IsVisible
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0xCA247C", Offset = "0xCA247C", VA = "0xCA247C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xCA2484", Offset = "0xCA2484", VA = "0xCA2484")]
		set
		{
		}
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xCA25C0", Offset = "0xCA25C0", VA = "0xCA25C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xCA2788", Offset = "0xCA2788", VA = "0xCA2788")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xCA2790", Offset = "0xCA2790", VA = "0xCA2790")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200006B")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200006C")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xC677E0", Offset = "0xC677E0", VA = "0xC677E0")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200006D")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846E00", Offset = "0x846E00")]
		public float FakeLatencyMax;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846E18", Offset = "0x846E18")]
		public float FakeLatencyMin;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846E30", Offset = "0x846E30")]
		public float LatencyWeight;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x846E48", Offset = "0x846E48")]
		public int MaxSamples;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xC677E8", Offset = "0xC677E8", VA = "0xC677E8")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xC67920", Offset = "0xC67920", VA = "0xC67920")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x10FABE8", Offset = "0x10FABE8", VA = "0x10FABE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x10FAD2C", Offset = "0x10FAD2C", VA = "0x10FAD2C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x10FB104", Offset = "0x10FB104", VA = "0x10FB104")]
	private void Update()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x10FB05C", Offset = "0x10FB05C", VA = "0x10FB05C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x10FB434", Offset = "0x10FB434", VA = "0x10FB434")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x10FB71C", Offset = "0x10FB71C", VA = "0x10FB71C")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200006E")]
public class P2PManager
{
	[Token(Token = "0x200006F")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40001BD")]
		Update = 1
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x10F6790", Offset = "0x10F6790", VA = "0x10F6790")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x10F6870", Offset = "0x10F6870", VA = "0x10F6870")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x10F6AEC", Offset = "0x10F6AEC", VA = "0x10F6AEC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x10F6C44", Offset = "0x10F6C44", VA = "0x10F6C44")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x10F6DA8", Offset = "0x10F6DA8", VA = "0x10F6DA8")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x10F6FD8", Offset = "0x10F6FD8", VA = "0x10F6FD8")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x10F73C4", Offset = "0x10F73C4", VA = "0x10F73C4")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x10F7678", Offset = "0x10F7678", VA = "0x10F7678")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x10F71A0", Offset = "0x10F71A0", VA = "0x10F71A0")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x10F75AC", Offset = "0x10F75AC", VA = "0x10F75AC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x10F7284", Offset = "0x10F7284", VA = "0x10F7284")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x10F78B8", Offset = "0x10F78B8", VA = "0x10F78B8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x10F71E8", Offset = "0x10F71E8", VA = "0x10F71E8")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x10F75F0", Offset = "0x10F75F0", VA = "0x10F75F0")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x10F7328", Offset = "0x10F7328", VA = "0x10F7328")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x10F7940", Offset = "0x10F7940", VA = "0x10F7940")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000070")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x10F81A0", Offset = "0x10F81A0", VA = "0x10F81A0", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x10F8568", Offset = "0x10F8568", VA = "0x10F8568", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x10F858C", Offset = "0x10F858C", VA = "0x10F858C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x10F893C", Offset = "0x10F893C", VA = "0x10F893C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x10F8AD8", Offset = "0x10F8AD8", VA = "0x10F8AD8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x10F8B58", Offset = "0x10F8B58", VA = "0x10F8B58")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x10F8BAC", Offset = "0x10F8BAC", VA = "0x10F8BAC")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000071")]
public class RemotePlayer
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x10FB7C0", Offset = "0x10FB7C0", VA = "0x10FB7C0")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000072")]
public class RoomManager
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x10FB7C8", Offset = "0x10FB7C8", VA = "0x10FB7C8")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x10FB8CC", Offset = "0x10FB8CC", VA = "0x10FB8CC")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x10FBAFC", Offset = "0x10FBAFC", VA = "0x10FBAFC")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x10FBC34", Offset = "0x10FBC34", VA = "0x10FBC34")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x10FBD08", Offset = "0x10FBD08", VA = "0x10FBD08")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x10FC1D8", Offset = "0x10FC1D8", VA = "0x10FC1D8")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x10FBB2C", Offset = "0x10FBB2C", VA = "0x10FBB2C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x10FC25C", Offset = "0x10FC25C", VA = "0x10FC25C")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x10FC98C", Offset = "0x10FC98C", VA = "0x10FC98C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x10FCC84", Offset = "0x10FCC84", VA = "0x10FCC84")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x10FC538", Offset = "0x10FC538", VA = "0x10FC538")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000073")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	public enum State
	{
		[Token(Token = "0x40001F5")]
		INITIALIZING,
		[Token(Token = "0x40001F6")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40001F7")]
		CREATING_A_ROOM,
		[Token(Token = "0x40001F8")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40001F9")]
		JOINING_A_ROOM,
		[Token(Token = "0x40001FA")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40001FB")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40001FC")]
		SHUTDOWN
	}

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000048")]
	public static State CurrentState
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x1108F5C", Offset = "0x1108F5C", VA = "0x1108F5C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000049")]
	public static ulong MyID
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x10F694C", Offset = "0x10F694C", VA = "0x10F694C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700004A")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x1108FCC", Offset = "0x1108FCC", VA = "0x1108FCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x10F85B0", Offset = "0x10F85B0", VA = "0x10F85B0", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x10F81D8", Offset = "0x10F81D8", VA = "0x10F81D8", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1107D9C", Offset = "0x1107D9C", VA = "0x1107D9C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x10F8588", Offset = "0x10F8588", VA = "0x10F8588", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1107F44", Offset = "0x1107F44", VA = "0x1107F44")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1108064", Offset = "0x1108064", VA = "0x1108064")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1108778", Offset = "0x1108778", VA = "0x1108778")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1108B64", Offset = "0x1108B64", VA = "0x1108B64")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1108D70", Offset = "0x1108D70", VA = "0x1108D70")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1108EF0", Offset = "0x1108EF0", VA = "0x1108EF0")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1107CE8", Offset = "0x1107CE8", VA = "0x1107CE8")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x10FBA44", Offset = "0x10FBA44", VA = "0x10FBA44")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x10FBE34", Offset = "0x10FBE34", VA = "0x10FBE34")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x11090F4", Offset = "0x11090F4", VA = "0x11090F4")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x10FC0F4", Offset = "0x10FC0F4", VA = "0x10FC0F4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x10FCCF8", Offset = "0x10FCCF8", VA = "0x10FCCF8")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x10FD0D4", Offset = "0x10FD0D4", VA = "0x10FD0D4")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x10FD1B8", Offset = "0x10FD1B8", VA = "0x10FD1B8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x10F6A2C", Offset = "0x10F6A2C", VA = "0x10F6A2C")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x10FCE54", Offset = "0x10FCE54", VA = "0x10FCE54")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x10FCEE8", Offset = "0x10FCEE8", VA = "0x10FCEE8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1109270", Offset = "0x1109270", VA = "0x1109270")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1109484", Offset = "0x1109484", VA = "0x1109484")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1107C64", Offset = "0x1107C64", VA = "0x1107C64")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x84AF64", Offset = "0x84AF64")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x10F6B68", Offset = "0x10F6B68", VA = "0x10F6B68")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x10F8C14", Offset = "0x10F8C14", VA = "0x10F8C14")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000075")]
public class VoipManager
{
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xBC04BC", Offset = "0xBC04BC", VA = "0xBC04BC")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xBC059C", Offset = "0xBC059C", VA = "0xBC059C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xBC0680", Offset = "0xBC0680", VA = "0xBC0680")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xBC0700", Offset = "0xBC0700", VA = "0xBC0700")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xBC0870", Offset = "0xBC0870", VA = "0xBC0870")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000076")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x134F2A0", Offset = "0x134F2A0", VA = "0x134F2A0")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x134F318", Offset = "0x134F318", VA = "0x134F318")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x134F48C", Offset = "0x134F48C", VA = "0x134F48C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x134F4F0", Offset = "0x134F4F0", VA = "0x134F4F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x134F354", Offset = "0x134F354", VA = "0x134F354")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x134F5B4", Offset = "0x134F5B4", VA = "0x134F5B4")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x134F5CC", Offset = "0x134F5CC", VA = "0x134F5CC")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000077")]
public class AvatarLayer
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xD9DA34", Offset = "0xD9DA34", VA = "0xD9DA34")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000078")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x10F79C8", Offset = "0x10F79C8", VA = "0x10F79C8")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200007A")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xC663A8", Offset = "0xC663A8", VA = "0xC663A8")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200007B")]
	public enum HandType
	{
		[Token(Token = "0x400025E")]
		Right,
		[Token(Token = "0x400025F")]
		Left,
		[Token(Token = "0x4000260")]
		Max
	}

	[Token(Token = "0x200007C")]
	public enum HandJoint
	{
		[Token(Token = "0x4000262")]
		HandBase,
		[Token(Token = "0x4000263")]
		IndexBase,
		[Token(Token = "0x4000264")]
		IndexTip,
		[Token(Token = "0x4000265")]
		ThumbBase,
		[Token(Token = "0x4000266")]
		ThumbTip,
		[Token(Token = "0x4000267")]
		Max
	}

	[Token(Token = "0x200007D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D20", Offset = "0x840D20")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0xC66358", Offset = "0xC66358", VA = "0xC66358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0xC663A0", Offset = "0xC663A0", VA = "0xC663A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xC66188", Offset = "0xC66188", VA = "0xC66188")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xC661B4", Offset = "0xC661B4", VA = "0xC661B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xC661B8", Offset = "0xC661B8", VA = "0xC661B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xC66360", Offset = "0xC66360", VA = "0xC66360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x846E60", Offset = "0x846E60")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x846E98", Offset = "0x846E98")]
	public bool EnableBody;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x846ED0", Offset = "0x846ED0")]
	public bool RecordPackets;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x846F08", Offset = "0x846F08")]
	public bool StartWithControllers;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x846F40", Offset = "0x846F40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846F40", Offset = "0x846F40")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846FB0", Offset = "0x846FB0")]
	private bool CombineMeshes;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x846FE8", Offset = "0x846FE8")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x847020", Offset = "0x847020")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x847058", Offset = "0x847058")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847090", Offset = "0x847090")]
	public bool EnableLaughter;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400023E")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000240")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000241")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000242")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000243")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000244")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x14081FC", Offset = "0x14081FC", VA = "0x14081FC")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x14085E8", Offset = "0x14085E8", VA = "0x14085E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x140867C", Offset = "0x140867C", VA = "0x140867C")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x14086E4", Offset = "0x14086E4", VA = "0x14086E4")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1408814", Offset = "0x1408814", VA = "0x1408814")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1408A48", Offset = "0x1408A48", VA = "0x1408A48")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1408C64", Offset = "0x1408C64", VA = "0x1408C64")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1409230", Offset = "0x1409230", VA = "0x1409230")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x140930C", Offset = "0x140930C", VA = "0x140930C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1409384", Offset = "0x1409384", VA = "0x1409384")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x140946C", Offset = "0x140946C", VA = "0x140946C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x14094F8", Offset = "0x14094F8", VA = "0x14094F8")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1409580", Offset = "0x1409580", VA = "0x1409580")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1409598", Offset = "0x1409598", VA = "0x1409598")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60003C2")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1409A48", Offset = "0x1409A48", VA = "0x1409A48")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1409DC8", Offset = "0x1409DC8", VA = "0x1409DC8")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1409F70", Offset = "0x1409F70", VA = "0x1409F70")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x140A1BC", Offset = "0x140A1BC", VA = "0x140A1BC")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x140A2B0", Offset = "0x140A2B0", VA = "0x140A2B0")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x140ADA0", Offset = "0x140ADA0", VA = "0x140ADA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x140B1AC", Offset = "0x140B1AC", VA = "0x140B1AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x140BC28", Offset = "0x140BC28", VA = "0x140BC28")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x140BC7C", Offset = "0x140BC7C", VA = "0x140BC7C")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x140A558", Offset = "0x140A558", VA = "0x140A558")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x140A5FC", Offset = "0x140A5FC", VA = "0x140A5FC")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x140BCAC", Offset = "0x140BCAC", VA = "0x140BCAC")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x140B578", Offset = "0x140B578", VA = "0x140B578")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x140BF1C", Offset = "0x140BF1C", VA = "0x140BF1C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x140BD10", Offset = "0x140BD10", VA = "0x140BD10")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x140C630", Offset = "0x140C630", VA = "0x140C630")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x140CAAC", Offset = "0x140CAAC", VA = "0x140CAAC")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x140CEB0", Offset = "0x140CEB0", VA = "0x140CEB0")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x140D004", Offset = "0x140D004", VA = "0x140D004")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x140D1E8", Offset = "0x140D1E8", VA = "0x140D1E8")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x140B7A8", Offset = "0x140B7A8", VA = "0x140B7A8")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x140D2BC", Offset = "0x140D2BC", VA = "0x140D2BC")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x140B588", Offset = "0x140B588", VA = "0x140B588")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x140D3AC", Offset = "0x140D3AC", VA = "0x140D3AC")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x140DA04", Offset = "0x140DA04", VA = "0x140DA04")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x140DEE8", Offset = "0x140DEE8", VA = "0x140DEE8")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x140DF10", Offset = "0x140DF10", VA = "0x140DF10")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x140DF38", Offset = "0x140DF38", VA = "0x140DF38")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x140BAB4", Offset = "0x140BAB4", VA = "0x140BAB4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x140D470", Offset = "0x140D470", VA = "0x140D470")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x140E358", Offset = "0x140E358", VA = "0x140E358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84AFC4", Offset = "0x84AFC4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x140E3C4", Offset = "0x140E3C4", VA = "0x140E3C4")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x140E218", Offset = "0x140E218", VA = "0x140E218")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x140E488", Offset = "0x140E488", VA = "0x140E488")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x140E570", Offset = "0x140E570", VA = "0x140E570")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x140DF74", Offset = "0x140DF74", VA = "0x140DF74")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x140E658", Offset = "0x140E658", VA = "0x140E658")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200007E")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x140E818", Offset = "0x140E818", VA = "0x140E818")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200007F")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x140E8DC", Offset = "0x140E8DC", VA = "0x140E8DC")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x140FB60", Offset = "0x140FB60", VA = "0x140FB60")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x140F734", Offset = "0x140F734", VA = "0x140F734")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x140F4C4", Offset = "0x140F4C4", VA = "0x140F4C4")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x140F5A0", Offset = "0x140F5A0", VA = "0x140F5A0")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x140FDF0", Offset = "0x140FDF0", VA = "0x140FDF0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000080")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000270")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1410378", Offset = "0x1410378", VA = "0x1410378")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000081")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x14105E4", Offset = "0x14105E4", VA = "0x14105E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1410A28", Offset = "0x1410A28", VA = "0x1410A28")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000082")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x140CD40", Offset = "0x140CD40", VA = "0x140CD40")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1410B40", Offset = "0x1410B40", VA = "0x1410B40")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1410C64", Offset = "0x1410C64", VA = "0x1410C64")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000083")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1410CC4", Offset = "0x1410CC4", VA = "0x1410CC4")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1410708", Offset = "0x1410708", VA = "0x1410708")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1411314", Offset = "0x1411314", VA = "0x1411314")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1411374", Offset = "0x1411374", VA = "0x1411374")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1411B28", Offset = "0x1411B28", VA = "0x1411B28")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1410A88", Offset = "0x1410A88", VA = "0x1410A88")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000084")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	public enum PacketMode
	{
		[Token(Token = "0x4000284")]
		SDK,
		[Token(Token = "0x4000285")]
		Unity
	}

	[Token(Token = "0x2000086")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xC66420", Offset = "0xC66420", VA = "0xC66420")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000087")]
	public struct PoseFrame
	{
		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xC664FC", Offset = "0xC664FC", VA = "0xC664FC")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1412F84", Offset = "0x1412F84", VA = "0x1412F84")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000404")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1412F94", Offset = "0x1412F94", VA = "0x1412F94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x140A6A0", Offset = "0x140A6A0", VA = "0x140A6A0")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x141301C", Offset = "0x141301C", VA = "0x141301C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1413024", Offset = "0x1413024", VA = "0x1413024")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000088")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1413034", Offset = "0x1413034", VA = "0x1413034")]
	private void Update()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1413198", Offset = "0x1413198", VA = "0x1413198")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000089")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1413200", Offset = "0x1413200", VA = "0x1413200")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1413364", Offset = "0x1413364", VA = "0x1413364")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1413700", Offset = "0x1413700", VA = "0x1413700")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1413924", Offset = "0x1413924", VA = "0x1413924", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1413950", Offset = "0x1413950", VA = "0x1413950")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200008A")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200008B")]
	public enum TextureType
	{
		[Token(Token = "0x40002BB")]
		DiffuseTextures,
		[Token(Token = "0x40002BC")]
		NormalMaps,
		[Token(Token = "0x40002BD")]
		RoughnessMaps,
		[Token(Token = "0x40002BE")]
		Count
	}

	[Token(Token = "0x200008C")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200008D")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200008E")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200008F")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xC66EF8", Offset = "0xC66EF8", VA = "0xC66EF8")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000090")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840D30", Offset = "0x840D30")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0xC66EA8", Offset = "0xC66EA8", VA = "0xC66EA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000427")]
			[Address(RVA = "0xC66EF0", Offset = "0xC66EF0", VA = "0xC66EF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xC66800", Offset = "0xC66800", VA = "0xC66800")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xC6682C", Offset = "0xC6682C", VA = "0xC6682C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xC66830", Offset = "0xC66830", VA = "0xC66830", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xC66EB0", Offset = "0xC66EB0", VA = "0xC66EB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40002B6")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40002B7")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40002B8")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40002B9")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x141399C", Offset = "0x141399C", VA = "0x141399C")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1413B28", Offset = "0x1413B28", VA = "0x1413B28")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1413B50", Offset = "0x1413B50", VA = "0x1413B50")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x14142AC", Offset = "0x14142AC", VA = "0x14142AC")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1414390", Offset = "0x1414390", VA = "0x1414390")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1413BEC", Offset = "0x1413BEC", VA = "0x1413BEC")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x14143DC", Offset = "0x14143DC", VA = "0x14143DC")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1414024", Offset = "0x1414024", VA = "0x1414024")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x14144C4", Offset = "0x14144C4", VA = "0x14144C4")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1414768", Offset = "0x1414768", VA = "0x1414768")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1414890", Offset = "0x1414890", VA = "0x1414890")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x14148C8", Offset = "0x14148C8", VA = "0x14148C8")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1414234", Offset = "0x1414234", VA = "0x1414234")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B074", Offset = "0x84B074")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1415740", Offset = "0x1415740", VA = "0x1415740")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000091")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700004F")]
	public float Duration
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x140C34C", Offset = "0x140C34C", VA = "0x140C34C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000050")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x140C498", Offset = "0x140C498", VA = "0x140C498")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x140C528", Offset = "0x140C528", VA = "0x140C528")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x140C1B0", Offset = "0x140C1B0", VA = "0x140C1B0")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1415C84", Offset = "0x1415C84", VA = "0x1415C84")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x140C3C0", Offset = "0x140C3C0", VA = "0x140C3C0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1415DA4", Offset = "0x1415DA4", VA = "0x1415DA4")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1415FD4", Offset = "0x1415FD4", VA = "0x1415FD4")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x14162B0", Offset = "0x14162B0", VA = "0x14162B0")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000092")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000431")]
	[Address(RVA = "0xD9FC5C", Offset = "0xD9FC5C", VA = "0xD9FC5C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xD9FD70", Offset = "0xD9FD70", VA = "0xD9FD70")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xD9FF1C", Offset = "0xD9FF1C", VA = "0xD9FF1C")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xD9FDE0", Offset = "0xD9FDE0", VA = "0xD9FDE0")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xD9FE74", Offset = "0xD9FE74", VA = "0xD9FE74")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000093")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000436")]
	[Address(RVA = "0xD9F85C", Offset = "0xD9F85C", VA = "0xD9F85C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xD9FC00", Offset = "0xD9FC00", VA = "0xD9FC00")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xD9F9FC", Offset = "0xD9F9FC", VA = "0xD9F9FC")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xD9FA74", Offset = "0xD9FA74", VA = "0xD9FA74")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xD9FB10", Offset = "0xD9FB10", VA = "0xD9FB10")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000094")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40002E0")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40002E1")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x14164D8", Offset = "0x14164D8", VA = "0x14164D8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1416560", Offset = "0x1416560", VA = "0x1416560", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x141657C", Offset = "0x141657C", VA = "0x141657C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1416720", Offset = "0x1416720", VA = "0x1416720")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x14168D0", Offset = "0x14168D0", VA = "0x14168D0")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000095")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1416964", Offset = "0x1416964", VA = "0x1416964")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1416A48", Offset = "0x1416A48", VA = "0x1416A48")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1416C3C", Offset = "0x1416C3C", VA = "0x1416C3C")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1416FF4", Offset = "0x1416FF4", VA = "0x1416FF4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1417100", Offset = "0x1417100", VA = "0x1417100")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000096")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40002EA")]
	Body = 1,
	[Token(Token = "0x40002EB")]
	Hands = 2,
	[Token(Token = "0x40002EC")]
	Base = 4,
	[Token(Token = "0x40002ED")]
	BodyTilt = 0x10,
	[Token(Token = "0x40002EE")]
	Expressive = 0x20,
	[Token(Token = "0x40002EF")]
	All = -1
}
[Token(Token = "0x2000097")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40002F1")]
	AvatarSpecification,
	[Token(Token = "0x40002F2")]
	AssetLoaded,
	[Token(Token = "0x40002F3")]
	Count
}
[Token(Token = "0x2000098")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000099")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200009A")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40002F9")]
	Mesh,
	[Token(Token = "0x40002FA")]
	Texture,
	[Token(Token = "0x40002FB")]
	Pose,
	[Token(Token = "0x40002FC")]
	Material,
	[Token(Token = "0x40002FD")]
	CombinedMesh,
	[Token(Token = "0x40002FE")]
	PBSMaterial,
	[Token(Token = "0x40002FF")]
	FailedLoad,
	[Token(Token = "0x4000300")]
	Count
}
[Token(Token = "0x200009B")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200009C")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200009D")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200009E")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200009F")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000A0")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000335")]
	RGB24,
	[Token(Token = "0x4000336")]
	DXT1,
	[Token(Token = "0x4000337")]
	DXT5,
	[Token(Token = "0x4000338")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000339")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400033A")]
	Count
}
[Token(Token = "0x20000A1")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000A2")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000342")]
	SkinnedMeshRender,
	[Token(Token = "0x4000343")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000344")]
	ProjectorRender,
	[Token(Token = "0x4000345")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000346")]
	Count
}
[Token(Token = "0x20000A3")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000348")]
	Unknown,
	[Token(Token = "0x4000349")]
	Default,
	[Token(Token = "0x400034A")]
	Verbose,
	[Token(Token = "0x400034B")]
	Debug,
	[Token(Token = "0x400034C")]
	Info,
	[Token(Token = "0x400034D")]
	Warn,
	[Token(Token = "0x400034E")]
	Error,
	[Token(Token = "0x400034F")]
	Fatal,
	[Token(Token = "0x4000350")]
	Silent
}
[Token(Token = "0x20000A4")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000A5")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000355")]
	One = 1,
	[Token(Token = "0x4000356")]
	Two = 2,
	[Token(Token = "0x4000357")]
	Three = 4,
	[Token(Token = "0x4000358")]
	Joystick = 8
}
[Token(Token = "0x20000A6")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400035A")]
	One = 1,
	[Token(Token = "0x400035B")]
	Two = 2,
	[Token(Token = "0x400035C")]
	Joystick = 4,
	[Token(Token = "0x400035D")]
	ThumbRest = 8,
	[Token(Token = "0x400035E")]
	Index = 0x10,
	[Token(Token = "0x400035F")]
	Pointing = 0x40,
	[Token(Token = "0x4000360")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000A8")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000A9")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000AA")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000AB")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000AC")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000AD")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000AE")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000AF")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000380")]
	Add,
	[Token(Token = "0x4000381")]
	Multiply,
	[Token(Token = "0x4000382")]
	Count
}
[Token(Token = "0x20000B0")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000384")]
	Color,
	[Token(Token = "0x4000385")]
	Texture,
	[Token(Token = "0x4000386")]
	TextureSingleChannel,
	[Token(Token = "0x4000387")]
	Parallax,
	[Token(Token = "0x4000388")]
	Count
}
[Token(Token = "0x20000B1")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400038A")]
	None,
	[Token(Token = "0x400038B")]
	Positional,
	[Token(Token = "0x400038C")]
	ViewReflection,
	[Token(Token = "0x400038D")]
	Fresnel,
	[Token(Token = "0x400038E")]
	Pulse,
	[Token(Token = "0x400038F")]
	Count
}
[Token(Token = "0x20000B2")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000391")]
	Touch,
	[Token(Token = "0x4000392")]
	Malibu,
	[Token(Token = "0x4000393")]
	Go,
	[Token(Token = "0x4000394")]
	Quest,
	[Token(Token = "0x4000395")]
	Count
}
[Token(Token = "0x20000B3")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000397")]
	Lowest = 1,
	[Token(Token = "0x4000398")]
	Medium = 3,
	[Token(Token = "0x4000399")]
	Highest = 5
}
[Token(Token = "0x20000B4")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400039B")]
	Unknown = -1,
	[Token(Token = "0x400039C")]
	One,
	[Token(Token = "0x400039D")]
	Two
}
[Token(Token = "0x20000B5")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xC58CD4", Offset = "0xC58CD4", VA = "0xC58CD4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xC58D04", Offset = "0xC58D04", VA = "0xC58D04", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xC58F20", Offset = "0xC58F20", VA = "0xC58F20", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xC59004", Offset = "0xC59004", VA = "0xC59004")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xC59034", Offset = "0xC59034", VA = "0xC59034", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xC593D0", Offset = "0xC593D0", VA = "0xC593D0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B7")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xC58264", Offset = "0xC58264", VA = "0xC58264")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xC58294", Offset = "0xC58294", VA = "0xC58294", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xC58524", Offset = "0xC58524", VA = "0xC58524", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B8")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xC59538", Offset = "0xC59538", VA = "0xC59538")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xC59568", Offset = "0xC59568", VA = "0xC59568", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xC59758", Offset = "0xC59758", VA = "0xC59758", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B9")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x140E820", Offset = "0x140E820", VA = "0x140E820")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000BA")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000BB")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40003D2")]
	FirstPerson = 1,
	[Token(Token = "0x40003D3")]
	ThirdPerson = 2,
	[Token(Token = "0x40003D4")]
	SelfOccluding = 4
}
[Token(Token = "0x20000BC")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000BD")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000BE")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000BF")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000C0")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40003EA")]
	Default,
	[Token(Token = "0x40003EB")]
	GripSphere,
	[Token(Token = "0x40003EC")]
	GripCube,
	[Token(Token = "0x40003ED")]
	Count
}
[Token(Token = "0x20000C1")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40003EF")]
	Body,
	[Token(Token = "0x40003F0")]
	Clothing,
	[Token(Token = "0x40003F1")]
	Eyewear,
	[Token(Token = "0x40003F2")]
	Hair,
	[Token(Token = "0x40003F3")]
	Beard,
	[Token(Token = "0x40003F4")]
	Count
}
[Token(Token = "0x20000C2")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000C3")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000C4")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000C5")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000C6")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40003FE")]
	AvatarHead,
	[Token(Token = "0x40003FF")]
	AvatarHand,
	[Token(Token = "0x4000400")]
	Object,
	[Token(Token = "0x4000401")]
	ObjectStatic,
	[Token(Token = "0x4000402")]
	Count
}
[Token(Token = "0x20000C7")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000C8")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000C9")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000CA")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000CB")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400040E")]
	Point,
	[Token(Token = "0x400040F")]
	Direction,
	[Token(Token = "0x4000410")]
	Spot,
	[Token(Token = "0x4000411")]
	Count
}
[Token(Token = "0x20000CC")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000CD")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000CE")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000CF")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000D0")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000427")]
	None = 0u,
	[Token(Token = "0x4000428")]
	GazeTarget = 1u,
	[Token(Token = "0x4000429")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000D1")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000D2")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000D3")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000D4")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000D5")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000D6")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20000D7")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000477")]
		[Address(RVA = "0xC66F00", Offset = "0xC66F00", VA = "0xC66F00")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400043E")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000051")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0x140A908", Offset = "0x140A908", VA = "0x140A908")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1417110", Offset = "0x1417110", VA = "0x1417110")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1417418", Offset = "0x1417418", VA = "0x1417418")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1417488", Offset = "0x1417488", VA = "0x1417488")]
	private void Update()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1417E5C", Offset = "0x1417E5C", VA = "0x1417E5C")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1417EB0", Offset = "0x1417EB0", VA = "0x1417EB0")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x140B148", Offset = "0x140B148", VA = "0x140B148")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x140B744", Offset = "0x140B744", VA = "0x140B744")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x140B0B8", Offset = "0x140B0B8", VA = "0x140B0B8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1417C58", Offset = "0x1417C58", VA = "0x1417C58")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x140AB58", Offset = "0x140AB58", VA = "0x140AB58")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x140ACAC", Offset = "0x140ACAC", VA = "0x140ACAC")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x140AADC", Offset = "0x140AADC", VA = "0x140AADC")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1417F04", Offset = "0x1417F04", VA = "0x1417F04")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x14173CC", Offset = "0x14173CC", VA = "0x14173CC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1414310", Offset = "0x1414310", VA = "0x1414310")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1417FE4", Offset = "0x1417FE4", VA = "0x1417FE4")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000D8")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000052")]
	public static string AppID
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x1417FA4", Offset = "0x1417FA4", VA = "0x1417FA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000479")]
		[Address(RVA = "0x141813C", Offset = "0x141813C", VA = "0x141813C")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public static string MobileAppID
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1417FC4", Offset = "0x1417FC4", VA = "0x1417FC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1418168", Offset = "0x1418168", VA = "0x1418168")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0x1417FFC", Offset = "0x1417FFC", VA = "0x1417FFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x1418194", Offset = "0x1418194", VA = "0x1418194")]
		set
		{
		}
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x14181E4", Offset = "0x14181E4", VA = "0x14181E4")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000D9")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x14088F0", Offset = "0x14088F0", VA = "0x14088F0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1410CCC", Offset = "0x1410CCC", VA = "0x1410CCC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x141961C", Offset = "0x141961C", VA = "0x141961C")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1419784", Offset = "0x1419784", VA = "0x1419784")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000DA")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1408B20", Offset = "0x1408B20", VA = "0x1408B20")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1410F08", Offset = "0x1410F08", VA = "0x1410F08")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1419794", Offset = "0x1419794", VA = "0x1419794")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000DB")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000455")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000456")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000457")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1408E44", Offset = "0x1408E44", VA = "0x1408E44")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x14110D8", Offset = "0x14110D8", VA = "0x14110D8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1418DA0", Offset = "0x1418DA0", VA = "0x1418DA0")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1418514", Offset = "0x1418514", VA = "0x1418514")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1418238", Offset = "0x1418238", VA = "0x1418238")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x141839C", Offset = "0x141839C", VA = "0x141839C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x141960C", Offset = "0x141960C", VA = "0x141960C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000DC")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000DD")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20000DE")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xC67594", Offset = "0xC67594", VA = "0xC67594")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20000DF")]
	public struct TextureSet
	{
		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xC675A4", Offset = "0xC675A4", VA = "0xC675A4")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20000E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840DB0", Offset = "0x840DB0")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049C")]
			[Address(RVA = "0xC67544", Offset = "0xC67544", VA = "0xC67544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600049E")]
			[Address(RVA = "0xC6758C", Offset = "0xC6758C", VA = "0xC6758C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xC66F2C", Offset = "0xC66F2C", VA = "0xC66F2C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xC66F58", Offset = "0xC66F58", VA = "0xC66F58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xC66F5C", Offset = "0xC66F5C", VA = "0xC66F5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xC6754C", Offset = "0xC6754C", VA = "0xC6754C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400045B")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400045C")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400045F")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000460")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000461")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000462")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000463")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000464")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000465")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x10F591C", Offset = "0x10F591C", VA = "0x10F591C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x10F5D04", Offset = "0x10F5D04", VA = "0x10F5D04")]
	public void Update()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x10F5F04", Offset = "0x10F5F04", VA = "0x10F5F04")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x10F5F50", Offset = "0x10F5F50", VA = "0x10F5F50")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x10F5E78", Offset = "0x10F5E78", VA = "0x10F5E78")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x10F60FC", Offset = "0x10F60FC", VA = "0x10F60FC")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x10F6304", Offset = "0x10F6304", VA = "0x10F6304")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x10F63A8", Offset = "0x10F63A8", VA = "0x10F63A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B1C4", Offset = "0x84B1C4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x10F6438", Offset = "0x10F6438", VA = "0x10F6438")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x10F6484", Offset = "0x10F6484", VA = "0x10F6484")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000E1")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x10F65BC", Offset = "0x10F65BC", VA = "0x10F65BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x10F6724", Offset = "0x10F6724", VA = "0x10F6724")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000E2")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60004A1")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x13489A8", Offset = "0x13489A8", VA = "0x13489A8")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000E3")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8470E8", Offset = "0x8470E8")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847120", Offset = "0x847120")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847158", Offset = "0x847158")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xCABE0C", Offset = "0xCABE0C", VA = "0xCABE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xCABE10", Offset = "0xCABE10", VA = "0xCABE10")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xCABE90", Offset = "0xCABE90", VA = "0xCABE90")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xCAC09C", Offset = "0xCAC09C", VA = "0xCAC09C")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000E4")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xCAC0CC", Offset = "0xCAC0CC", VA = "0xCAC0CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xCAC1FC", Offset = "0xCAC1FC", VA = "0xCAC1FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xCAC554", Offset = "0xCAC554", VA = "0xCAC554")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xCAC7F4", Offset = "0xCAC7F4", VA = "0xCAC7F4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xCAC844", Offset = "0xCAC844", VA = "0xCAC844")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000E5")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000057")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x1A2E518", Offset = "0x1A2E518", VA = "0x1A2E518")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1A2E814", Offset = "0x1A2E814", VA = "0x1A2E814")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1A2E96C", Offset = "0x1A2E96C", VA = "0x1A2E96C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1A2E880", Offset = "0x1A2E880", VA = "0x1A2E880")]
	public void Init()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1A2C588", Offset = "0x1A2C588", VA = "0x1A2C588")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1A2EAEC", Offset = "0x1A2EAEC", VA = "0x1A2EAEC")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1A2C524", Offset = "0x1A2C524", VA = "0x1A2C524")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1A2C604", Offset = "0x1A2C604", VA = "0x1A2C604")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1A2EA00", Offset = "0x1A2EA00", VA = "0x1A2EA00")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1A2EB88", Offset = "0x1A2EB88", VA = "0x1A2EB88")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1A2EBC4", Offset = "0x1A2EBC4", VA = "0x1A2EBC4")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1A2EDD8", Offset = "0x1A2EDD8", VA = "0x1A2EDD8")]
	private void Prune()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1A2EBD4", Offset = "0x1A2EBD4", VA = "0x1A2EBD4")]
	private void Display()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1A2EE88", Offset = "0x1A2EE88", VA = "0x1A2EE88")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000E6")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1A2F934", Offset = "0x1A2F934", VA = "0x1A2F934")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000E7")]
public static class OVRTouchpad
{
	[Token(Token = "0x20000E8")]
	public enum TouchEvent
	{
		[Token(Token = "0x400048E")]
		SingleTap,
		[Token(Token = "0x400048F")]
		DoubleTap,
		[Token(Token = "0x4000490")]
		Left,
		[Token(Token = "0x4000491")]
		Right,
		[Token(Token = "0x4000492")]
		Up,
		[Token(Token = "0x4000493")]
		Down
	}

	[Token(Token = "0x20000E9")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1405CB0", Offset = "0x1405CB0", VA = "0x1405CB0")]
	public static void Create()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1405CB4", Offset = "0x1405CB4", VA = "0x1405CB4")]
	public static void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1405F64", Offset = "0x1405F64", VA = "0x1405F64")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1405DD4", Offset = "0x1405DD4", VA = "0x1405DD4")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1405F68", Offset = "0x1405F68", VA = "0x1405F68")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000EA")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x14060FC", Offset = "0x14060FC", VA = "0x14060FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1406174", Offset = "0x1406174", VA = "0x1406174")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x140622C", Offset = "0x140622C", VA = "0x140622C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1406284", Offset = "0x1406284", VA = "0x1406284")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x14062E4", Offset = "0x14062E4", VA = "0x14062E4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x14062E8", Offset = "0x14062E8", VA = "0x14062E8")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000EB")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	public enum Result
	{
		[Token(Token = "0x400049A")]
		Success = 0,
		[Token(Token = "0x400049B")]
		Unknown = -2200,
		[Token(Token = "0x400049C")]
		CannotCreateContext = -2201,
		[Token(Token = "0x400049D")]
		InvalidParam = -2202,
		[Token(Token = "0x400049E")]
		BadSampleRate = -2203,
		[Token(Token = "0x400049F")]
		MissingDLL = -2204,
		[Token(Token = "0x40004A0")]
		BadVersion = -2205,
		[Token(Token = "0x40004A1")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20000ED")]
	public enum AudioDataType
	{
		[Token(Token = "0x40004A3")]
		S16_Mono,
		[Token(Token = "0x40004A4")]
		S16_Stereo,
		[Token(Token = "0x40004A5")]
		F32_Mono,
		[Token(Token = "0x40004A6")]
		F32_Stereo
	}

	[Token(Token = "0x20000EE")]
	public enum Viseme
	{
		[Token(Token = "0x40004A8")]
		sil,
		[Token(Token = "0x40004A9")]
		PP,
		[Token(Token = "0x40004AA")]
		FF,
		[Token(Token = "0x40004AB")]
		TH,
		[Token(Token = "0x40004AC")]
		DD,
		[Token(Token = "0x40004AD")]
		kk,
		[Token(Token = "0x40004AE")]
		CH,
		[Token(Token = "0x40004AF")]
		SS,
		[Token(Token = "0x40004B0")]
		nn,
		[Token(Token = "0x40004B1")]
		RR,
		[Token(Token = "0x40004B2")]
		aa,
		[Token(Token = "0x40004B3")]
		E,
		[Token(Token = "0x40004B4")]
		ih,
		[Token(Token = "0x40004B5")]
		oh,
		[Token(Token = "0x40004B6")]
		ou
	}

	[Token(Token = "0x20000EF")]
	public enum Signals
	{
		[Token(Token = "0x40004B8")]
		VisemeOn,
		[Token(Token = "0x40004B9")]
		VisemeOff,
		[Token(Token = "0x40004BA")]
		VisemeAmount,
		[Token(Token = "0x40004BB")]
		VisemeSmoothing,
		[Token(Token = "0x40004BC")]
		LaughterAmount
	}

	[Token(Token = "0x20000F0")]
	public enum ContextProviders
	{
		[Token(Token = "0x40004BE")]
		Original,
		[Token(Token = "0x40004BF")]
		Enhanced,
		[Token(Token = "0x40004C0")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20000F1")]
	public class Frame
	{
		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xC65950", Offset = "0xC65950", VA = "0xC65950")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xC659A8", Offset = "0xC659A8", VA = "0xC659A8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xC65A34", Offset = "0xC65A34", VA = "0xC65A34")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000496")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1A2A8BC", Offset = "0x1A2A8BC", VA = "0x1A2A8BC")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1A2A94C", Offset = "0x1A2A94C", VA = "0x1A2A94C")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1A2A9BC", Offset = "0x1A2A9BC", VA = "0x1A2A9BC")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1A2AA50", Offset = "0x1A2AA50", VA = "0x1A2AA50")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1A2AAF8", Offset = "0x1A2AAF8", VA = "0x1A2AAF8")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1A2ABC4", Offset = "0x1A2ABC4", VA = "0x1A2ABC4")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1A2AC44", Offset = "0x1A2AC44", VA = "0x1A2AC44")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1A2ACC4", Offset = "0x1A2ACC4", VA = "0x1A2ACC4")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1A2AD6C", Offset = "0x1A2AD6C", VA = "0x1A2AD6C")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1A2AE74", Offset = "0x1A2AE74", VA = "0x1A2AE74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1A2B344", Offset = "0x1A2B344", VA = "0x1A2B344")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1A2B1EC", Offset = "0x1A2B1EC", VA = "0x1A2B1EC")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1A2B444", Offset = "0x1A2B444", VA = "0x1A2B444")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1A2B578", Offset = "0x1A2B578", VA = "0x1A2B578")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1A2B5E4", Offset = "0x1A2B5E4", VA = "0x1A2B5E4")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1A2B648", Offset = "0x1A2B648", VA = "0x1A2B648")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1A2B764", Offset = "0x1A2B764", VA = "0x1A2B764")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1A2B894", Offset = "0x1A2B894", VA = "0x1A2B894")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1A2B96C", Offset = "0x1A2B96C", VA = "0x1A2B96C")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1A2BA44", Offset = "0x1A2BA44", VA = "0x1A2BA44")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1A2BB40", Offset = "0x1A2BB40", VA = "0x1A2BB40")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1A2BCDC", Offset = "0x1A2BCDC", VA = "0x1A2BCDC")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1A2BE70", Offset = "0x1A2BE70", VA = "0x1A2BE70")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000F2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840DC0", Offset = "0x840DC0")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847190", Offset = "0x847190")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8471C8", Offset = "0x8471C8")]
	public bool enableTouchInput;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847200", Offset = "0x847200")]
	public bool audioLoopback;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847238", Offset = "0x847238")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847270", Offset = "0x847270")]
	public bool showVisemes;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8472A8", Offset = "0x8472A8")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8472E0", Offset = "0x8472E0")]
	public bool skipAudioSource;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847318", Offset = "0x847318")]
	public float gain;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1A2BFB4", Offset = "0x1A2BFB4", VA = "0x1A2BFB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1A2C118", Offset = "0x1A2C118", VA = "0x1A2C118")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x1A2C680", Offset = "0x1A2C680", VA = "0x1A2C680")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1A2C9A8", Offset = "0x1A2C9A8", VA = "0x1A2C9A8")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1A2CA0C", Offset = "0x1A2CA0C", VA = "0x1A2CA0C")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1A2CA78", Offset = "0x1A2CA78", VA = "0x1A2CA78")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1A2CC1C", Offset = "0x1A2CC1C", VA = "0x1A2CC1C")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1A2CDC0", Offset = "0x1A2CDC0", VA = "0x1A2CDC0")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1A2CEF8", Offset = "0x1A2CEF8", VA = "0x1A2CEF8")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1A2C6C4", Offset = "0x1A2C6C4", VA = "0x1A2C6C4")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1A2C43C", Offset = "0x1A2C43C", VA = "0x1A2C43C")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1A2CF08", Offset = "0x1A2CF08", VA = "0x1A2CF08")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1A2D028", Offset = "0x1A2D028", VA = "0x1A2D028")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000F3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840E20", Offset = "0x840E20")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847350", Offset = "0x847350")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847388", Offset = "0x847388")]
	public bool enableAcceleration;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000058")]
	public int Smoothing
	{
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1A2D1C8", Offset = "0x1A2D1C8", VA = "0x1A2D1C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1A2D0BC", Offset = "0x1A2D0BC", VA = "0x1A2D0BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public uint Context
	{
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x1A2D1D0", Offset = "0x1A2D1D0", VA = "0x1A2D1D0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700005A")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x1A2D1D8", Offset = "0x1A2D1D8", VA = "0x1A2D1D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1A2D1E0", Offset = "0x1A2D1E0", VA = "0x1A2D1E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1A2D3C8", Offset = "0x1A2D3C8", VA = "0x1A2D3C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x1A2D52C", Offset = "0x1A2D52C", VA = "0x1A2D52C")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1A2D534", Offset = "0x1A2D534", VA = "0x1A2D534")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1A2D648", Offset = "0x1A2D648", VA = "0x1A2D648")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1A2D724", Offset = "0x1A2D724", VA = "0x1A2D724")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1A2D04C", Offset = "0x1A2D04C", VA = "0x1A2D04C")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840E80", Offset = "0x840E80")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8473C0", Offset = "0x8473C0")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1A2D79C", Offset = "0x1A2D79C", VA = "0x1A2D79C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1A2D92C", Offset = "0x1A2D92C", VA = "0x1A2D92C")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000F5")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8473F8", Offset = "0x8473F8")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847430", Offset = "0x847430")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847468", Offset = "0x847468")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8474A0", Offset = "0x8474A0")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8474D8", Offset = "0x8474D8")]
	public KeyCode laughterKey;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847510", Offset = "0x847510")]
	public int laughterBlendTarget;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x847548", Offset = "0x847548")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847548", Offset = "0x847548")]
	public float laughterThreshold;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84759C", Offset = "0x84759C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84759C", Offset = "0x84759C")]
	public float laughterMultiplier;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8475F0", Offset = "0x8475F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8475F0", Offset = "0x8475F0")]
	public int smoothAmount;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1A2D930", Offset = "0x1A2D930", VA = "0x1A2D930")]
	private void Start()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1A2DAA0", Offset = "0x1A2DAA0", VA = "0x1A2DAA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1A2DCF8", Offset = "0x1A2DCF8", VA = "0x1A2DCF8")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1A2DBA8", Offset = "0x1A2DBA8", VA = "0x1A2DBA8")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1A2DC5C", Offset = "0x1A2DC5C", VA = "0x1A2DC5C")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1A2DDC4", Offset = "0x1A2DDC4", VA = "0x1A2DDC4")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1A2DE88", Offset = "0x1A2DE88", VA = "0x1A2DE88")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1A2DEF0", Offset = "0x1A2DEF0", VA = "0x1A2DEF0")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000F6")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847648", Offset = "0x847648")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x847648", Offset = "0x847648")]
	public Texture[] Textures;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8477C0", Offset = "0x8477C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8477C0", Offset = "0x8477C0")]
	public int smoothAmount;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1A2E008", Offset = "0x1A2E008", VA = "0x1A2E008")]
	private void Start()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1A2E188", Offset = "0x1A2E188", VA = "0x1A2E188")]
	private void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1A2E328", Offset = "0x1A2E328", VA = "0x1A2E328")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1A2E454", Offset = "0x1A2E454", VA = "0x1A2E454")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x840EE0", Offset = "0x840EE0")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20000F8")]
	public enum micActivation
	{
		[Token(Token = "0x40004F5")]
		HoldToSpeak,
		[Token(Token = "0x40004F6")]
		PushToSpeak,
		[Token(Token = "0x40004F7")]
		ConstantSpeak
	}

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847818", Offset = "0x847818")]
	public AudioSource audioSource;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847850", Offset = "0x847850")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847888", Offset = "0x847888")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8478C0", Offset = "0x8478C0")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8478C0", Offset = "0x8478C0")]
	private float micInputVolume;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847928", Offset = "0x847928")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847974", Offset = "0x847974")]
	public micActivation micControl;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8479AC", Offset = "0x8479AC")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8479E4", Offset = "0x8479E4")]
	public string selectedDevice;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x1700005B")]
	public float MicFrequency
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1A2EEF8", Offset = "0x1A2EEF8", VA = "0x1A2EEF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1A2EF04", Offset = "0x1A2EF04", VA = "0x1A2EF04")]
		set
		{
		}
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1A2EF54", Offset = "0x1A2EF54", VA = "0x1A2EF54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1A2F01C", Offset = "0x1A2F01C", VA = "0x1A2F01C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x1A2F068", Offset = "0x1A2F068", VA = "0x1A2F068")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1A2F1B4", Offset = "0x1A2F1B4", VA = "0x1A2F1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x1A2F600", Offset = "0x1A2F600", VA = "0x1A2F600")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x1A2F614", Offset = "0x1A2F614", VA = "0x1A2F614")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1A2F62C", Offset = "0x1A2F62C", VA = "0x1A2F62C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1A2F630", Offset = "0x1A2F630", VA = "0x1A2F630")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1A2F6A8", Offset = "0x1A2F6A8", VA = "0x1A2F6A8")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1A2F0F0", Offset = "0x1A2F0F0", VA = "0x1A2F0F0")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1A2F46C", Offset = "0x1A2F46C", VA = "0x1A2F46C")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1A2F310", Offset = "0x1A2F310", VA = "0x1A2F310")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1A2F884", Offset = "0x1A2F884", VA = "0x1A2F884")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1A2F88C", Offset = "0x1A2F88C", VA = "0x1A2F88C")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F9")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x1A2D868", Offset = "0x1A2D868", VA = "0x1A2D868")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1A2F8BC", Offset = "0x1A2F8BC", VA = "0x1A2F8BC")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000FA")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20000FB")]
	public delegate void OnClick();

	[Token(Token = "0x20000FC")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20000FD")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20000FE")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840F40", Offset = "0x840F40")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xC5B794", Offset = "0xC5B794", VA = "0xC5B794")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xC5B79C", Offset = "0xC5B79C", VA = "0xC5B79C")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840F50", Offset = "0x840F50")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xC5B9C0", Offset = "0xC5B9C0", VA = "0xC5B9C0")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xC5B9C8", Offset = "0xC5B9C8", VA = "0xC5B9C8")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840F60", Offset = "0x840F60")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xC5BC14", Offset = "0xC5BC14", VA = "0xC5BC14")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xC5BC1C", Offset = "0xC5BC1C", VA = "0xC5BC1C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840F70", Offset = "0x840F70")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xC5BFB0", Offset = "0xC5BFB0", VA = "0xC5BFB0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xC5BFB8", Offset = "0xC5BFB8", VA = "0xC5BFB8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840F80", Offset = "0x840F80")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xC5BFD8", Offset = "0xC5BFD8", VA = "0xC5BFD8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xC5BFE0", Offset = "0xC5BFE0", VA = "0xC5BFE0")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40004FA")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40004FB")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40004FC")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000509")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400050A")]
	private const float marginH = 16f;

	[Token(Token = "0x400050B")]
	private const float marginV = 16f;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xCB8E64", Offset = "0xCB8E64", VA = "0xCB8E64")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xCB9318", Offset = "0xCB9318", VA = "0xCB9318")]
	public void Show()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xCB98DC", Offset = "0xCB98DC", VA = "0xCB98DC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xCB96BC", Offset = "0xCB96BC", VA = "0xCB96BC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xCB9A98", Offset = "0xCB9A98", VA = "0xCB9A98")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xCB9D70", Offset = "0xCB9D70", VA = "0xCB9D70")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xCBA000", Offset = "0xCBA000", VA = "0xCBA000")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xCBA104", Offset = "0xCBA104", VA = "0xCBA104")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xCBA2DC", Offset = "0xCBA2DC", VA = "0xCBA2DC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xCBA380", Offset = "0xCBA380", VA = "0xCBA380")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xCBA550", Offset = "0xCBA550", VA = "0xCBA550")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xCBA738", Offset = "0xCBA738", VA = "0xCBA738")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xCBAA20", Offset = "0xCBAA20", VA = "0xCBAA20")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xCBAACC", Offset = "0xCBAACC", VA = "0xCBAACC")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000104")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xCA4038", Offset = "0xCA4038", VA = "0xCA4038")]
	private void Start()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xCA40D4", Offset = "0xCA40D4", VA = "0xCA40D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xCA4194", Offset = "0xCA4194", VA = "0xCA4194")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xCA41D0", Offset = "0xCA41D0", VA = "0xCA41D0")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000105")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000106")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000528")]
		On,
		[Token(Token = "0x4000529")]
		Off,
		[Token(Token = "0x400052A")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700005C")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600054C")]
		[Address(RVA = "0xCAB3F0", Offset = "0xCAB3F0", VA = "0xCAB3F0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600054B")]
		[Address(RVA = "0xCAB3AC", Offset = "0xCAB3AC", VA = "0xCAB3AC")]
		set
		{
		}
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xCAB3F8", Offset = "0xCAB3F8", VA = "0xCAB3F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xCAB44C", Offset = "0xCAB44C", VA = "0xCAB44C")]
	private void Start()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xCAB590", Offset = "0xCAB590", VA = "0xCAB590", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xCAB5AC", Offset = "0xCAB5AC", VA = "0xCAB5AC", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xCAB600", Offset = "0xCAB600", VA = "0xCAB600")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xCAB7BC", Offset = "0xCAB7BC", VA = "0xCAB7BC")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xCAB8D0", Offset = "0xCAB8D0", VA = "0xCAB8D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xCAB960", Offset = "0xCAB960", VA = "0xCAB960")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xCABA2C", Offset = "0xCABA2C", VA = "0xCABA2C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xCABAE0", Offset = "0xCABAE0", VA = "0xCABAE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xCABBCC", Offset = "0xCABBCC", VA = "0xCABBCC")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000107")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400052B")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400052C")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400052D")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847ABC", Offset = "0x847ABC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847AF4", Offset = "0x847AF4")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847B2C", Offset = "0x847B2C")]
	public float HeightOffset;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847B64", Offset = "0x847B64")]
	public float MinimumHeight;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847B9C", Offset = "0x847B9C")]
	public float MaximumHeight;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xDAE0F8", Offset = "0xDAE0F8", VA = "0xDAE0F8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xDAE100", Offset = "0xDAE100", VA = "0xDAE100")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xDAE178", Offset = "0xDAE178", VA = "0xDAE178")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xDAE20C", Offset = "0xDAE20C", VA = "0xDAE20C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xDAE2A0", Offset = "0xDAE2A0", VA = "0xDAE2A0")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xDAE5CC", Offset = "0xDAE5CC", VA = "0xDAE5CC")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xDAE7FC", Offset = "0xDAE7FC", VA = "0xDAE7FC")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000108")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xCACA74", Offset = "0xCACA74", VA = "0xCACA74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xCACB28", Offset = "0xCACB28", VA = "0xCACB28")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000109")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200010A")]
	public enum States
	{
		[Token(Token = "0x400055B")]
		Ready,
		[Token(Token = "0x400055C")]
		Aim,
		[Token(Token = "0x400055D")]
		CancelAim,
		[Token(Token = "0x400055E")]
		PreTeleport,
		[Token(Token = "0x400055F")]
		CancelTeleport,
		[Token(Token = "0x4000560")]
		Teleporting,
		[Token(Token = "0x4000561")]
		PostTeleport
	}

	[Token(Token = "0x200010B")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000563")]
		None,
		[Token(Token = "0x4000564")]
		Aim,
		[Token(Token = "0x4000565")]
		PreTeleport,
		[Token(Token = "0x4000566")]
		Teleport
	}

	[Token(Token = "0x200010C")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000568")]
		Point,
		[Token(Token = "0x4000569")]
		Sphere,
		[Token(Token = "0x400056A")]
		Capsule
	}

	[Token(Token = "0x200010D")]
	public class AimData
	{
		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x847FB4", Offset = "0x847FB4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000060")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000596")]
			[Address(RVA = "0xC62478", Offset = "0xC62478", VA = "0xC62478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B6EC", Offset = "0x84B6EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000597")]
			[Address(RVA = "0xC62480", Offset = "0xC62480", VA = "0xC62480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B6FC", Offset = "0x84B6FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xC623FC", Offset = "0xC623FC", VA = "0xC623FC")]
		public AimData()
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xC62488", Offset = "0xC62488", VA = "0xC62488")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840F90", Offset = "0x840F90")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059C")]
			[Address(RVA = "0xC62254", Offset = "0xC62254", VA = "0xC62254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0xC6229C", Offset = "0xC6229C", VA = "0xC6229C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xC62138", Offset = "0xC62138", VA = "0xC62138")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xC62164", Offset = "0xC62164", VA = "0xC62164", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xC62168", Offset = "0xC62168", VA = "0xC62168", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xC6225C", Offset = "0xC6225C", VA = "0xC6225C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840FA0", Offset = "0x840FA0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A2")]
			[Address(RVA = "0xC61BE0", Offset = "0xC61BE0", VA = "0xC61BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0xC61C28", Offset = "0xC61C28", VA = "0xC61C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xC61A70", Offset = "0xC61A70", VA = "0xC61A70")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xC61A9C", Offset = "0xC61A9C", VA = "0xC61A9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xC61AA0", Offset = "0xC61AA0", VA = "0xC61AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xC61BE8", Offset = "0xC61BE8", VA = "0xC61BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840FB0", Offset = "0x840FB0")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0xC61D00", Offset = "0xC61D00", VA = "0xC61D00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0xC61D48", Offset = "0xC61D48", VA = "0xC61D48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xC61C30", Offset = "0xC61C30", VA = "0xC61C30")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xC61C5C", Offset = "0xC61C5C", VA = "0xC61C5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xC61C60", Offset = "0xC61C60", VA = "0xC61C60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xC61D08", Offset = "0xC61D08", VA = "0xC61D08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000111")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840FC0", Offset = "0x840FC0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0xC620E8", Offset = "0xC620E8", VA = "0xC620E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0xC62130", Offset = "0xC62130", VA = "0xC62130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xC61FD8", Offset = "0xC61FD8", VA = "0xC61FD8")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xC62004", Offset = "0xC62004", VA = "0xC62004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xC62008", Offset = "0xC62008", VA = "0xC62008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xC620F0", Offset = "0xC620F0", VA = "0xC620F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840FD0", Offset = "0x840FD0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0xC61E20", Offset = "0xC61E20", VA = "0xC61E20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0xC61E68", Offset = "0xC61E68", VA = "0xC61E68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xC61D50", Offset = "0xC61D50", VA = "0xC61D50")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xC61D7C", Offset = "0xC61D7C", VA = "0xC61D7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xC61D80", Offset = "0xC61D80", VA = "0xC61D80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xC61E28", Offset = "0xC61E28", VA = "0xC61E28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840FE0", Offset = "0x840FE0")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0xC623AC", Offset = "0xC623AC", VA = "0xC623AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0xC623F4", Offset = "0xC623F4", VA = "0xC623F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xC622A4", Offset = "0xC622A4", VA = "0xC622A4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xC622D0", Offset = "0xC622D0", VA = "0xC622D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xC622D4", Offset = "0xC622D4", VA = "0xC622D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xC623B4", Offset = "0xC623B4", VA = "0xC623B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840FF0", Offset = "0x840FF0")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0xC61F88", Offset = "0xC61F88", VA = "0xC61F88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0xC61FD0", Offset = "0xC61FD0", VA = "0xC61FD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xC61E70", Offset = "0xC61E70", VA = "0xC61E70")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xC61E9C", Offset = "0xC61E9C", VA = "0xC61E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xC61EA0", Offset = "0xC61EA0", VA = "0xC61EA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xC61F90", Offset = "0xC61F90", VA = "0xC61F90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847BD4", Offset = "0x847BD4")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847C0C", Offset = "0x847C0C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847C44", Offset = "0x847C44")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847C7C", Offset = "0x847C7C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847CB4", Offset = "0x847CB4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847CEC", Offset = "0x847CEC")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847D24", Offset = "0x847D24")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847D5C", Offset = "0x847D5C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x847D94", Offset = "0x847D94")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847DA4", Offset = "0x847DA4")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847DDC", Offset = "0x847DDC")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x847E24", Offset = "0x847E24")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847E34", Offset = "0x847E34")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847E6C", Offset = "0x847E6C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847EA4", Offset = "0x847EA4")]
	public float AimCollisionRadius;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847EDC", Offset = "0x847EDC")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700005D")]
	public States CurrentState
	{
		[Token(Token = "0x6000563")]
		[Address(RVA = "0xCAD5F8", Offset = "0xCAD5F8", VA = "0xCAD5F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B274", Offset = "0x84B274")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000564")]
		[Address(RVA = "0xCAD600", Offset = "0xCAD600", VA = "0xCAD600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B284", Offset = "0x84B284")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0xCAD824", Offset = "0xCAD824", VA = "0xCAD824")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700005F")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000569")]
		[Address(RVA = "0xCAD84C", Offset = "0xCAD84C", VA = "0xCAD84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B2B4", Offset = "0x84B2B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056A")]
		[Address(RVA = "0xCAD854", Offset = "0xCAD854", VA = "0xCAD854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B2C4", Offset = "0x84B2C4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0xCAD608", Offset = "0xCAD608", VA = "0xCAD608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B294", Offset = "0x84B294")]
		add
		{
		}
		[Token(Token = "0x6000566")]
		[Address(RVA = "0xCAD6A8", Offset = "0xCAD6A8", VA = "0xCAD6A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B2A4", Offset = "0x84B2A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000574")]
		[Address(RVA = "0xCADE4C", Offset = "0xCADE4C", VA = "0xCADE4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B30C", Offset = "0x84B30C")]
		add
		{
		}
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xCADEEC", Offset = "0xCADEEC", VA = "0xCADEEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B31C", Offset = "0x84B31C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000577")]
		[Address(RVA = "0xCADF8C", Offset = "0xCADF8C", VA = "0xCADF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B38C", Offset = "0x84B38C")]
		add
		{
		}
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xCAE02C", Offset = "0xCAE02C", VA = "0xCAE02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B39C", Offset = "0x84B39C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xCAE0CC", Offset = "0xCAE0CC", VA = "0xCAE0CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B3AC", Offset = "0x84B3AC")]
		add
		{
		}
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xCAE16C", Offset = "0xCAE16C", VA = "0xCAE16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B3BC", Offset = "0x84B3BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xCAE27C", Offset = "0xCAE27C", VA = "0xCAE27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B3CC", Offset = "0x84B3CC")]
		add
		{
		}
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xCAE31C", Offset = "0xCAE31C", VA = "0xCAE31C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B3DC", Offset = "0x84B3DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xCAE428", Offset = "0xCAE428", VA = "0xCAE428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B44C", Offset = "0x84B44C")]
		add
		{
		}
		[Token(Token = "0x6000580")]
		[Address(RVA = "0xCAE4C8", Offset = "0xCAE4C8", VA = "0xCAE4C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B45C", Offset = "0x84B45C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000582")]
		[Address(RVA = "0xCAE5D4", Offset = "0xCAE5D4", VA = "0xCAE5D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B4CC", Offset = "0x84B4CC")]
		add
		{
		}
		[Token(Token = "0x6000583")]
		[Address(RVA = "0xCAE674", Offset = "0xCAE674", VA = "0xCAE674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B4DC", Offset = "0x84B4DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000585")]
		[Address(RVA = "0xCAE780", Offset = "0xCAE780", VA = "0xCAE780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B54C", Offset = "0x84B54C")]
		add
		{
		}
		[Token(Token = "0x6000586")]
		[Address(RVA = "0xCAE820", Offset = "0xCAE820", VA = "0xCAE820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B55C", Offset = "0x84B55C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000588")]
		[Address(RVA = "0xCAE92C", Offset = "0xCAE92C", VA = "0xCAE92C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B5CC", Offset = "0x84B5CC")]
		add
		{
		}
		[Token(Token = "0x6000589")]
		[Address(RVA = "0xCAE9CC", Offset = "0xCAE9CC", VA = "0xCAE9CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B5DC", Offset = "0x84B5DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xCAEAD8", Offset = "0xCAEAD8", VA = "0xCAEAD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B64C", Offset = "0x84B64C")]
		add
		{
		}
		[Token(Token = "0x600058C")]
		[Address(RVA = "0xCAEB78", Offset = "0xCAEB78", VA = "0xCAEB78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B65C", Offset = "0x84B65C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600058E")]
		[Address(RVA = "0xCAEC84", Offset = "0xCAEC84", VA = "0xCAEC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B6CC", Offset = "0x84B6CC")]
		add
		{
		}
		[Token(Token = "0x600058F")]
		[Address(RVA = "0xCAED24", Offset = "0xCAED24", VA = "0xCAED24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B6DC", Offset = "0x84B6DC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xCAD2A4", Offset = "0xCAD2A4", VA = "0xCAD2A4")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xCAD2C8", Offset = "0xCAD2C8", VA = "0xCAD2C8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xCAD748", Offset = "0xCAD748", VA = "0xCAD748")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xCAD85C", Offset = "0xCAD85C", VA = "0xCAD85C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xCADAA8", Offset = "0xCADAA8", VA = "0xCADAA8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84B2D4", Offset = "0x84B2D4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xCADB5C", Offset = "0xCADB5C", VA = "0xCADB5C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xCADC2C", Offset = "0xCADC2C", VA = "0xCADC2C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xCADC48", Offset = "0xCADC48", VA = "0xCADC48")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xCADD0C", Offset = "0xCADD0C", VA = "0xCADD0C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xCADD50", Offset = "0xCADD50", VA = "0xCADD50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xCADDA8", Offset = "0xCADDA8", VA = "0xCADDA8", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xCADE44", Offset = "0xCADE44", VA = "0xCADE44", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xCADDD8", Offset = "0xCADDD8", VA = "0xCADDD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B32C", Offset = "0x84B32C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xCAE20C", Offset = "0xCAE20C", VA = "0xCAE20C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xCAE3BC", Offset = "0xCAE3BC", VA = "0xCAE3BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B3EC", Offset = "0x84B3EC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xCAE568", Offset = "0xCAE568", VA = "0xCAE568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B46C", Offset = "0x84B46C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xCAE714", Offset = "0xCAE714", VA = "0xCAE714")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B4EC", Offset = "0x84B4EC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xCAE8C0", Offset = "0xCAE8C0", VA = "0xCAE8C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B56C", Offset = "0x84B56C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xCAEA6C", Offset = "0xCAEA6C", VA = "0xCAEA6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B5EC", Offset = "0x84B5EC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xCAEC18", Offset = "0xCAEC18", VA = "0xCAEC18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B66C", Offset = "0x84B66C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xCAEDC4", Offset = "0xCAEDC4", VA = "0xCAEDC4")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xCAEF04", Offset = "0xCAEF04", VA = "0xCAEF04")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xCAEF38", Offset = "0xCAEF38", VA = "0xCAEF38")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xCAF000", Offset = "0xCAF000", VA = "0xCAF000")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xCAF0F8", Offset = "0xCAF0F8", VA = "0xCAF0F8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000115")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1106EAC", Offset = "0x1106EAC", VA = "0x1106EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B93C", Offset = "0x84B93C")]
		add
		{
		}
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x1106F4C", Offset = "0x1106F4C", VA = "0x1106F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B94C", Offset = "0x84B94C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1106FEC", Offset = "0x1106FEC", VA = "0x1106FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B95C", Offset = "0x84B95C")]
		add
		{
		}
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x110708C", Offset = "0x110708C", VA = "0x110708C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B96C", Offset = "0x84B96C")]
		remove
		{
		}
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x110712C", Offset = "0x110712C", VA = "0x110712C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x11071E8", Offset = "0x11071E8", VA = "0x11071E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x11071EC", Offset = "0x11071EC", VA = "0x11071EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1107260", Offset = "0x1107260", VA = "0x1107260")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1107384", Offset = "0x1107384", VA = "0x1107384")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x110756C", Offset = "0x110756C", VA = "0x110756C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1107734", Offset = "0x1107734", VA = "0x1107734")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000116")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xBB80E4", Offset = "0xBB80E4", VA = "0xBB80E4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xBB8174", Offset = "0xBB8174", VA = "0xBB8174", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60005D0")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xBB8240", Offset = "0xBB8240", VA = "0xBB8240")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000117")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x847FE4", Offset = "0x847FE4")]
	public float Range;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xBB8250", Offset = "0xBB8250", VA = "0xBB8250", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xBB834C", Offset = "0xBB834C", VA = "0xBB834C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000118")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84801C", Offset = "0x84801C")]
	public float Range;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848054", Offset = "0x848054")]
	public float MinimumElevation;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84808C", Offset = "0x84808C")]
	public float Gravity;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8480C4", Offset = "0x8480C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8480C4", Offset = "0x8480C4")]
	public float AimVelocity;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x848120", Offset = "0x848120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848120", Offset = "0x848120")]
	public float AimStep;

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xBB835C", Offset = "0xBB835C", VA = "0xBB835C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xBB84EC", Offset = "0xBB84EC", VA = "0xBB84EC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000119")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848178", Offset = "0x848178")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xBB8500", Offset = "0xBB8500", VA = "0xBB8500")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xBB861C", Offset = "0xBB861C", VA = "0xBB861C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xBB864C", Offset = "0xBB864C", VA = "0xBB864C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xBB867C", Offset = "0xBB867C", VA = "0xBB867C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xBB8724", Offset = "0xBB8724", VA = "0xBB8724", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xBB8790", Offset = "0xBB8790", VA = "0xBB8790", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xBB87F8", Offset = "0xBB87F8", VA = "0xBB87F8")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200011A")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8481B0", Offset = "0x8481B0")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8481C0", Offset = "0x8481C0")]
	public Transform PositionIndicator;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8481F8", Offset = "0x8481F8")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848230", Offset = "0x848230")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700006F")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xBB891C", Offset = "0xBB891C", VA = "0xBB891C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B97C", Offset = "0x84B97C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xBB8924", Offset = "0xBB8924", VA = "0xBB8924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B98C", Offset = "0x84B98C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xBB8AD8", Offset = "0xBB8AD8", VA = "0xBB8AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B99C", Offset = "0x84B99C")]
		add
		{
		}
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xBB8B78", Offset = "0xBB8B78", VA = "0xBB8B78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B9AC", Offset = "0x84B9AC")]
		remove
		{
		}
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xBB8930", Offset = "0xBB8930", VA = "0xBB8930")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xBB89C0", Offset = "0xBB89C0", VA = "0xBB89C0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xBB8A94", Offset = "0xBB8A94", VA = "0xBB8A94")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xBB8AD4", Offset = "0xBB8AD4", VA = "0xBB8AD4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xBB8C18", Offset = "0xBB8C18", VA = "0xBB8C18")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xBB8C7C", Offset = "0xBB8C7C", VA = "0xBB8C7C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xBB8C9C", Offset = "0xBB8C9C", VA = "0xBB8C9C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200011B")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200011C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841000", Offset = "0x841000")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0xC69050", Offset = "0xC69050", VA = "0xC69050", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0xC69098", Offset = "0xC69098", VA = "0xC69098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xC68F94", Offset = "0xC68F94", VA = "0xC68F94")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xC68FC0", Offset = "0xC68FC0", VA = "0xC68FC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xC68FC4", Offset = "0xC68FC4", VA = "0xC68FC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xC69058", Offset = "0xC69058", VA = "0xC69058", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841010", Offset = "0x841010")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0xC68F44", Offset = "0xC68F44", VA = "0xC68F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xC68F8C", Offset = "0xC68F8C", VA = "0xC68F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xC68E84", Offset = "0xC68E84", VA = "0xC68E84")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xC68EB0", Offset = "0xC68EB0", VA = "0xC68EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xC68EB4", Offset = "0xC68EB4", VA = "0xC68EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xC68F4C", Offset = "0xC68F4C", VA = "0xC68F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xBB8EA8", Offset = "0xBB8EA8", VA = "0xBB8EA8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xBB8F68", Offset = "0xBB8F68", VA = "0xBB8F68", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xBB8FC0", Offset = "0xBB8FC0", VA = "0xBB8FC0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xBB9078", Offset = "0xBB9078", VA = "0xBB9078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84B9BC", Offset = "0x84B9BC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xBB90E4", Offset = "0xBB90E4", VA = "0xBB90E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84BA1C", Offset = "0x84BA1C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005ED")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60005EE")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xBB9150", Offset = "0xBB9150", VA = "0xBB9150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BA7C", Offset = "0x84BA7C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xBB917C", Offset = "0xBB917C", VA = "0xBB917C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BA8C", Offset = "0x84BA8C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200011E")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848278", Offset = "0x848278")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848288", Offset = "0x848288")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8482C0", Offset = "0x8482C0")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8482F8", Offset = "0x8482F8")]
	public bool FastTeleport;

	[Token(Token = "0x17000074")]
	public Transform Pointer
	{
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xBB91A8", Offset = "0xBB91A8", VA = "0xBB91A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BB3C", Offset = "0x84BB3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xBB91B0", Offset = "0xBB91B0", VA = "0xBB91B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BB4C", Offset = "0x84BB4C")]
		private set
		{
		}
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xBB91B8", Offset = "0xBB91B8", VA = "0xBB91B8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xBB9310", Offset = "0xBB9310", VA = "0xBB9310", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xBB93C8", Offset = "0xBB93C8", VA = "0xBB93C8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200011F")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000120")]
	public enum InputModes
	{
		[Token(Token = "0x40005BB")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40005BC")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40005BD")]
		ThumbstickTeleport,
		[Token(Token = "0x40005BE")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000121")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40005C0")]
		A,
		[Token(Token = "0x40005C1")]
		B,
		[Token(Token = "0x40005C2")]
		LeftTrigger,
		[Token(Token = "0x40005C3")]
		LeftThumbstick,
		[Token(Token = "0x40005C4")]
		RightTrigger,
		[Token(Token = "0x40005C5")]
		RightThumbstick,
		[Token(Token = "0x40005C6")]
		X,
		[Token(Token = "0x40005C7")]
		Y
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848330", Offset = "0x848330")]
	public InputModes InputMode;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848368", Offset = "0x848368")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8483A0", Offset = "0x8483A0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8483D8", Offset = "0x8483D8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xBB93CC", Offset = "0xBB93CC", VA = "0xBB93CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xBB93D0", Offset = "0xBB93D0", VA = "0xBB93D0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xBB97B8", Offset = "0xBB97B8", VA = "0xBB97B8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xBB9878", Offset = "0xBB9878", VA = "0xBB9878")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000122")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000123")]
	public enum OrientationModes
	{
		[Token(Token = "0x40005CC")]
		HeadRelative,
		[Token(Token = "0x40005CD")]
		ForwardFacing
	}

	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841020", Offset = "0x841020")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0xC69174", Offset = "0xC69174", VA = "0xC69174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000614")]
			[Address(RVA = "0xC691BC", Offset = "0xC691BC", VA = "0xC691BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xC690A0", Offset = "0xC690A0", VA = "0xC690A0")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xC690CC", Offset = "0xC690CC", VA = "0xC690CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xC690D0", Offset = "0xC690D0", VA = "0xC690D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xC6917C", Offset = "0xC6917C", VA = "0xC6917C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xBB9944", Offset = "0xBB9944", VA = "0xBB9944")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xBB9A24", Offset = "0xBB9A24", VA = "0xBB9A24")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xBB9A2C", Offset = "0xBB9A2C", VA = "0xBB9A2C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xBB9A78", Offset = "0xBB9A78", VA = "0xBB9A78", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xBB9AC0", Offset = "0xBB9AC0", VA = "0xBB9AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84BB5C", Offset = "0x84BB5C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600060B")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600060C")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xBB9B2C", Offset = "0xBB9B2C", VA = "0xBB9B2C")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xBB9BE8", Offset = "0xBB9BE8", VA = "0xBB9BE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BBBC", Offset = "0x84BBBC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000125")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000615")]
	[Address(RVA = "0xBB9C14", Offset = "0xBB9C14", VA = "0xBB9C14", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xBB9C18", Offset = "0xBB9C18", VA = "0xBB9C18", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xBB9C94", Offset = "0xBB9C94", VA = "0xBB9C94")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000126")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848410", Offset = "0x848410")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848448", Offset = "0x848448")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848480", Offset = "0x848480")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8484B8", Offset = "0x8484B8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xBB9C98", Offset = "0xBB9C98", VA = "0xBB9C98", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xBB9CC4", Offset = "0xBB9CC4", VA = "0xBB9CC4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xBBA074", Offset = "0xBBA074", VA = "0xBBA074")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000127")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8484F0", Offset = "0x8484F0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848528", Offset = "0x848528")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848560", Offset = "0x848560")]
	public float RotateStickThreshold;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xBBA078", Offset = "0xBBA078", VA = "0xBBA078", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xBBA0BC", Offset = "0xBBA0BC", VA = "0xBBA0BC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xBBA464", Offset = "0xBBA464", VA = "0xBBA464")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000128")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xBBA474", Offset = "0xBBA474", VA = "0xBBA474")]
	private void Start()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xBBA478", Offset = "0xBBA478", VA = "0xBBA478")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xBBA480", Offset = "0xBBA480", VA = "0xBBA480")]
	private void Update()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xBBA53C", Offset = "0xBBA53C", VA = "0xBBA53C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xBBA564", Offset = "0xBBA564", VA = "0xBBA564")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000129")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848598", Offset = "0x848598")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000077")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000623")]
		[Address(RVA = "0xBBA57C", Offset = "0xBBA57C", VA = "0xBBA57C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BC1C", Offset = "0x84BC1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000624")]
		[Address(RVA = "0xBBA584", Offset = "0xBBA584", VA = "0xBBA584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BC2C", Offset = "0x84BC2C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xBB8114", Offset = "0xBB8114", VA = "0xBB8114", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xBB8214", Offset = "0xBB8214", VA = "0xBB8214", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xBBA58C", Offset = "0xBBA58C", VA = "0xBBA58C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84BC3C", Offset = "0x84BC3C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xBB8784", Offset = "0xBB8784", VA = "0xBB8784", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xBB87F0", Offset = "0xBB87F0", VA = "0xBB87F0", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xBB8248", Offset = "0xBB8248", VA = "0xBB8248")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200012A")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841030", Offset = "0x841030")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0xC69488", Offset = "0xC69488", VA = "0xC69488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000638")]
			[Address(RVA = "0xC694D0", Offset = "0xC694D0", VA = "0xC694D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xC691C4", Offset = "0xC691C4", VA = "0xC691C4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xC691F0", Offset = "0xC691F0", VA = "0xC691F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xC691F4", Offset = "0xC691F4", VA = "0xC691F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xC69490", Offset = "0xC69490", VA = "0xC69490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8485A8", Offset = "0x8485A8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40005E7")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xBBA668", Offset = "0xBBA668", VA = "0xBBA668")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xBBA758", Offset = "0xBBA758", VA = "0xBBA758", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xBBA784", Offset = "0xBBA784", VA = "0xBBA784", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xBBA7AC", Offset = "0xBBA7AC", VA = "0xBBA7AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84BC74", Offset = "0x84BC74")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xBBA818", Offset = "0xBBA818", VA = "0xBBA818", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000630")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xBBA834", Offset = "0xBBA834", VA = "0xBBA834", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xBBA954", Offset = "0xBBA954", VA = "0xBBA954")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BCD4", Offset = "0x84BCD4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200012C")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xBBA980", Offset = "0xBBA980", VA = "0xBBA980")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xBBA9DC", Offset = "0xBBA9DC", VA = "0xBBA9DC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xBBAAD4", Offset = "0xBBAAD4", VA = "0xBBAAD4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xBBABCC", Offset = "0xBBABCC", VA = "0xBBABCC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84BD34", Offset = "0x84BD34")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xBBABD0", Offset = "0xBBABD0", VA = "0xBBABD0")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200012D")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8485E0", Offset = "0x8485E0")]
	public float LOSOffset;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848618", Offset = "0x848618")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xBBABDC", Offset = "0xBBABDC", VA = "0xBBABDC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xBBADE8", Offset = "0xBBADE8", VA = "0xBBADE8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200012E")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000640")]
	[Address(RVA = "0xBBADF4", Offset = "0xBBADF4", VA = "0xBBADF4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xBBAEEC", Offset = "0xBBAEEC", VA = "0xBBAEEC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200012F")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000642")]
	[Address(RVA = "0xBBAEF0", Offset = "0xBBAEF0", VA = "0xBBAEF0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xBBAF84", Offset = "0xBBAF84", VA = "0xBBAF84", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000644")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xBBB014", Offset = "0xBBB014", VA = "0xBBB014")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000130")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841040", Offset = "0x841040")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064C")]
			[Address(RVA = "0xC69604", Offset = "0xC69604", VA = "0xC69604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064E")]
			[Address(RVA = "0xC6964C", Offset = "0xC6964C", VA = "0xC6964C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xC694D8", Offset = "0xC694D8", VA = "0xC694D8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xC69504", Offset = "0xC69504", VA = "0xC69504", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xC69508", Offset = "0xC69508", VA = "0xC69508", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xC6960C", Offset = "0xC6960C", VA = "0xC6960C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x848650", Offset = "0x848650")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848650", Offset = "0x848650")]
	public float TransitionDuration;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8486A8", Offset = "0x8486A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8486A8", Offset = "0x8486A8")]
	public float TeleportDelay;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8486FC", Offset = "0x8486FC")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xBBB01C", Offset = "0xBBB01C", VA = "0xBBB01C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xBBB048", Offset = "0xBBB048", VA = "0xBBB048")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84BD6C", Offset = "0x84BD6C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xBBB0B4", Offset = "0xBBB0B4", VA = "0xBBB0B4")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000132")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600064F")]
	[Address(RVA = "0xBBB254", Offset = "0xBBB254", VA = "0xBBB254", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xBBB270", Offset = "0xBBB270", VA = "0xBBB270")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000133")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841050", Offset = "0x841050")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000657")]
			[Address(RVA = "0xC697B4", Offset = "0xC697B4", VA = "0xC697B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000659")]
			[Address(RVA = "0xC697FC", Offset = "0xC697FC", VA = "0xC697FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xC69654", Offset = "0xC69654", VA = "0xC69654")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xC69680", Offset = "0xC69680", VA = "0xC69680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xC69684", Offset = "0xC69684", VA = "0xC69684", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xC697BC", Offset = "0xC697BC", VA = "0xC697BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x848734", Offset = "0x848734")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848734", Offset = "0x848734")]
	public float TransitionDuration;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xBBB278", Offset = "0xBBB278", VA = "0xBBB278", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xBBB2A4", Offset = "0xBBB2A4", VA = "0xBBB2A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84BE1C", Offset = "0x84BE1C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xBBB310", Offset = "0xBBB310", VA = "0xBBB310")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000135")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000136")]
	public enum PlabackState
	{
		[Token(Token = "0x4000617")]
		Idle = 1,
		[Token(Token = "0x4000618")]
		Preparing,
		[Token(Token = "0x4000619")]
		Buffering,
		[Token(Token = "0x400061A")]
		Ready,
		[Token(Token = "0x400061B")]
		Ended
	}

	[Token(Token = "0x2000137")]
	public enum StereoMode
	{
		[Token(Token = "0x400061D")]
		Unknown = -1,
		[Token(Token = "0x400061E")]
		Mono,
		[Token(Token = "0x400061F")]
		TopBottom,
		[Token(Token = "0x4000620")]
		LeftRight,
		[Token(Token = "0x4000621")]
		Mesh
	}

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700007E")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1A1AC4C", Offset = "0x1A1AC4C", VA = "0x1A1AC4C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700007F")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1A1AF7C", Offset = "0x1A1AF7C", VA = "0x1A1AF7C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000080")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1A1B24C", Offset = "0x1A1B24C", VA = "0x1A1B24C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000081")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1A1B2BC", Offset = "0x1A1B2BC", VA = "0x1A1B2BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000082")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x1A1B3CC", Offset = "0x1A1B3CC", VA = "0x1A1B3CC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000083")]
	public static long Duration
	{
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1A1B4E0", Offset = "0x1A1B4E0", VA = "0x1A1B4E0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000084")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x1A1B5F4", Offset = "0x1A1B5F4", VA = "0x1A1B5F4")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000085")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1A1B708", Offset = "0x1A1B708", VA = "0x1A1B708")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000086")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1A1B81C", Offset = "0x1A1B81C", VA = "0x1A1B81C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000087")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1A1B930", Offset = "0x1A1B930", VA = "0x1A1B930")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1A1BA44", Offset = "0x1A1BA44", VA = "0x1A1BA44")]
		set
		{
		}
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x1A1BBB0", Offset = "0x1A1BBB0", VA = "0x1A1BBB0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1A1BDD0", Offset = "0x1A1BDD0", VA = "0x1A1BDD0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1A1BEE4", Offset = "0x1A1BEE4", VA = "0x1A1BEE4")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1A1BFF8", Offset = "0x1A1BFF8", VA = "0x1A1BFF8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x1A1C10C", Offset = "0x1A1C10C", VA = "0x1A1C10C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x1A1C280", Offset = "0x1A1C280", VA = "0x1A1C280")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1A1C3F0", Offset = "0x1A1C3F0", VA = "0x1A1C3F0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000138")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0xDA1124", Offset = "0xDA1124", VA = "0xDA1124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BECC", Offset = "0x84BECC")]
		add
		{
		}
		[Token(Token = "0x600066E")]
		[Address(RVA = "0xDA11C4", Offset = "0xDA11C4", VA = "0xDA11C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BEDC", Offset = "0x84BEDC")]
		remove
		{
		}
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xDA1264", Offset = "0xDA1264", VA = "0xDA1264", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xDA1278", Offset = "0xDA1278", VA = "0xDA1278")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000139")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200013A")]
	public enum ButtonType
	{
		[Token(Token = "0x4000625")]
		Play,
		[Token(Token = "0x4000626")]
		Pause,
		[Token(Token = "0x4000627")]
		FastForward,
		[Token(Token = "0x4000628")]
		Rewind,
		[Token(Token = "0x4000629")]
		SkipForward,
		[Token(Token = "0x400062A")]
		SkipBack,
		[Token(Token = "0x400062B")]
		Stop
	}

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000088")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0xCB1A8C", Offset = "0xCB1A8C", VA = "0xCB1A8C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000672")]
		[Address(RVA = "0xCB1A94", Offset = "0xCB1A94", VA = "0xCB1A94")]
		set
		{
		}
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xCB1AB8", Offset = "0xCB1AB8", VA = "0xCB1AB8", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xCB2F50", Offset = "0xCB2F50", VA = "0xCB2F50")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200013B")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200013C")]
	public enum VideoShape
	{
		[Token(Token = "0x4000640")]
		_360,
		[Token(Token = "0x4000641")]
		_180,
		[Token(Token = "0x4000642")]
		Quad
	}

	[Token(Token = "0x200013D")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000644")]
		Mono,
		[Token(Token = "0x4000645")]
		TopBottom,
		[Token(Token = "0x4000646")]
		LeftRight,
		[Token(Token = "0x4000647")]
		BottomTop
	}

	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841060", Offset = "0x841060")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0xC62BD4", Offset = "0xC62BD4", VA = "0xC62BD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600068D")]
			[Address(RVA = "0xC62C1C", Offset = "0xC62C1C", VA = "0xC62C1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xC629EC", Offset = "0xC629EC", VA = "0xC629EC")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xC62A18", Offset = "0xC62A18", VA = "0xC62A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xC62A1C", Offset = "0xC62A1C", VA = "0xC62A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xC62BDC", Offset = "0xC62BDC", VA = "0xC62BDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841070", Offset = "0x841070")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xC628F4", Offset = "0xC628F4", VA = "0xC628F4")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xC628FC", Offset = "0xC628FC", VA = "0xC628FC")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8487BC", Offset = "0x8487BC")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8487CC", Offset = "0x8487CC")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8487DC", Offset = "0x8487DC")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000089")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0xCB524C", Offset = "0xCB524C", VA = "0xCB524C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BEEC", Offset = "0x84BEEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000676")]
		[Address(RVA = "0xCB5254", Offset = "0xCB5254", VA = "0xCB5254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BEFC", Offset = "0x84BEFC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public long Duration
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0xCB5260", Offset = "0xCB5260", VA = "0xCB5260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BF0C", Offset = "0x84BF0C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000678")]
		[Address(RVA = "0xCB5268", Offset = "0xCB5268", VA = "0xCB5268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BF1C", Offset = "0x84BF1C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0xCB5270", Offset = "0xCB5270", VA = "0xCB5270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BF2C", Offset = "0x84BF2C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600067A")]
		[Address(RVA = "0xCB5278", Offset = "0xCB5278", VA = "0xCB5278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BF3C", Offset = "0x84BF3C")]
		private set
		{
		}
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xCB5280", Offset = "0xCB5280", VA = "0xCB5280")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xCB54F8", Offset = "0xCB54F8", VA = "0xCB54F8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xCB555C", Offset = "0xCB555C", VA = "0xCB555C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xCB5894", Offset = "0xCB5894", VA = "0xCB5894")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84BF4C", Offset = "0x84BF4C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xCB5900", Offset = "0xCB5900", VA = "0xCB5900")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xCB5BA4", Offset = "0xCB5BA4", VA = "0xCB5BA4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xCB5C38", Offset = "0xCB5C38", VA = "0xCB5C38")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xCB5CC8", Offset = "0xCB5CC8", VA = "0xCB5CC8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xCB5DCC", Offset = "0xCB5DCC", VA = "0xCB5DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xCB6388", Offset = "0xCB6388", VA = "0xCB6388")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xCB6440", Offset = "0xCB6440", VA = "0xCB6440")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xCB64D0", Offset = "0xCB64D0", VA = "0xCB64D0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xCB65BC", Offset = "0xCB65BC", VA = "0xCB65BC")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000140")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000141")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000664")]
		Playing,
		[Token(Token = "0x4000665")]
		Paused,
		[Token(Token = "0x4000666")]
		Rewinding,
		[Token(Token = "0x4000667")]
		FastForwarding
	}

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xCB65CC", Offset = "0xCB65CC", VA = "0xCB65CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xCB6920", Offset = "0xCB6920", VA = "0xCB6920")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xCB6AFC", Offset = "0xCB6AFC", VA = "0xCB6AFC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xCB6C30", Offset = "0xCB6C30", VA = "0xCB6C30")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xCB6D38", Offset = "0xCB6D38", VA = "0xCB6D38")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xCB6C04", Offset = "0xCB6C04", VA = "0xCB6C04")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xCB6D98", Offset = "0xCB6D98", VA = "0xCB6D98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xCB680C", Offset = "0xCB680C", VA = "0xCB680C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xCB70D8", Offset = "0xCB70D8", VA = "0xCB70D8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000142")]
public static class VectorUtil
{
	[Token(Token = "0x6000699")]
	[Address(RVA = "0xBBF5AC", Offset = "0xBBF5AC", VA = "0xBBF5AC")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000143")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xCBAB44", Offset = "0xCBAB44", VA = "0xCBAB44")]
	private void Start()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xCBB048", Offset = "0xCBB048", VA = "0xCBB048")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xCBB108", Offset = "0xCBB108", VA = "0xCBB108")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xCBB334", Offset = "0xCBB334", VA = "0xCBB334")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xCBB414", Offset = "0xCBB414", VA = "0xCBB414")]
	private void Update()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xCBB4F8", Offset = "0xCBB4F8", VA = "0xCBB4F8")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xCBB56C", Offset = "0xCBB56C", VA = "0xCBB56C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xCBB574", Offset = "0xCBB574", VA = "0xCBB574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C00C", Offset = "0x84C00C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xCBB5D8", Offset = "0xCBB5D8", VA = "0xCBB5D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C01C", Offset = "0x84C01C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xCBB63C", Offset = "0xCBB63C", VA = "0xCBB63C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C02C", Offset = "0x84C02C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xCBB6A0", Offset = "0xCBB6A0", VA = "0xCBB6A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C03C", Offset = "0x84C03C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000144")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841090", Offset = "0x841090")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0xC60FFC", Offset = "0xC60FFC", VA = "0xC60FFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0xC61044", Offset = "0xC61044", VA = "0xC61044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xC60EAC", Offset = "0xC60EAC", VA = "0xC60EAC")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xC60ED8", Offset = "0xC60ED8", VA = "0xC60ED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xC60EDC", Offset = "0xC60EDC", VA = "0xC60EDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xC61004", Offset = "0xC61004", VA = "0xC61004", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xCA41D8", Offset = "0xCA41D8", VA = "0xCA41D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xCA42DC", Offset = "0xCA42DC", VA = "0xCA42DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xCA4270", Offset = "0xCA4270", VA = "0xCA4270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C04C", Offset = "0x84C04C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xCA4488", Offset = "0xCA4488", VA = "0xCA4488")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000146")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8487FC", Offset = "0x8487FC")]
	public int SubdivisionsU;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x848818", Offset = "0x848818")]
	public int SubdivisionsV;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xDAECC8", Offset = "0xDAECC8", VA = "0xDAECC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xDAF6D4", Offset = "0xDAF6D4", VA = "0xDAF6D4")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000147")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000090")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xCACB30", Offset = "0xCACB30", VA = "0xCACB30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xCACB84", Offset = "0xCACB84", VA = "0xCACB84")]
	public void Start()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xCACF80", Offset = "0xCACF80", VA = "0xCACF80")]
	public void Update()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xCAD06C", Offset = "0xCAD06C", VA = "0xCAD06C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84C0FC", Offset = "0x84C0FC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60006B5")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60006B6")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60006B7")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60006B8")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60006B9")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60006BA")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60006BB")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60006BC")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xCAD0D0", Offset = "0xCAD0D0", VA = "0xCAD0D0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xCAD10C", Offset = "0xCAD10C", VA = "0xCAD10C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xCAD17C", Offset = "0xCAD17C", VA = "0xCAD17C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xCAD2EC", Offset = "0xCAD2EC", VA = "0xCAD2EC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xCAD3C8", Offset = "0xCAD3C8", VA = "0xCAD3C8")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xCACE78", Offset = "0xCACE78", VA = "0xCACE78")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xCAD490", Offset = "0xCAD490", VA = "0xCAD490")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xCAD4F8", Offset = "0xCAD4F8", VA = "0xCAD4F8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xCAD5F0", Offset = "0xCAD5F0", VA = "0xCAD5F0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000148")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8410B0", Offset = "0x8410B0")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000149")]
	public enum DrawMode
	{
		[Token(Token = "0x4000692")]
		Opaque,
		[Token(Token = "0x4000693")]
		OpaqueWithClip,
		[Token(Token = "0x4000694")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000695")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000091")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1A30E28", Offset = "0x1A30E28", VA = "0x1A30E28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1A30EB8", Offset = "0x1A30EB8", VA = "0x1A30EB8")]
		set
		{
		}
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1A2F960", Offset = "0x1A2F960", VA = "0x1A2F960")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1A30494", Offset = "0x1A30494", VA = "0x1A30494")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1A30514", Offset = "0x1A30514", VA = "0x1A30514")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1A30604", Offset = "0x1A30604", VA = "0x1A30604")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1A306F4", Offset = "0x1A306F4", VA = "0x1A306F4", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1A30900", Offset = "0x1A30900", VA = "0x1A30900")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x1A30F84", Offset = "0x1A30F84", VA = "0x1A30F84")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200014A")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841110", Offset = "0x841110")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xC68A2C", Offset = "0xC68A2C", VA = "0xC68A2C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xC68A34", Offset = "0xC68A34", VA = "0xC68A34")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xBB2850", Offset = "0xBB2850", VA = "0xBB2850")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xBB2A54", Offset = "0xBB2A54", VA = "0xBB2A54")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xBB2B64", Offset = "0xBB2B64", VA = "0xBB2B64")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200014C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x841120", Offset = "0x841120")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	public enum RotationAxes
	{
		[Token(Token = "0x40006A4")]
		MouseXAndY,
		[Token(Token = "0x40006A5")]
		MouseX,
		[Token(Token = "0x40006A6")]
		MouseY
	}

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xCB4C78", Offset = "0xCB4C78", VA = "0xCB4C78")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xCB4E50", Offset = "0xCB4E50", VA = "0xCB4E50")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xCB4F18", Offset = "0xCB4F18", VA = "0xCB4F18")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200014E")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40006AC")]
		Uninitialized = -1,
		[Token(Token = "0x40006AD")]
		NotEnabled,
		[Token(Token = "0x40006AE")]
		Success,
		[Token(Token = "0x40006AF")]
		StreamError,
		[Token(Token = "0x40006B0")]
		ProcessError,
		[Token(Token = "0x40006B1")]
		MaxStatValue
	}

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1A1C644", Offset = "0x1A1C644", VA = "0x1A1C644")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1A1C8C8", Offset = "0x1A1C8C8", VA = "0x1A1C8C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1A1CB1C", Offset = "0x1A1CB1C", VA = "0x1A1CB1C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000150")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	private enum Parameters
	{
		[Token(Token = "0x40006BD")]
		P_GAIN,
		[Token(Token = "0x40006BE")]
		P_USEINVSQR,
		[Token(Token = "0x40006BF")]
		P_NEAR,
		[Token(Token = "0x40006C0")]
		P_FAR,
		[Token(Token = "0x40006C1")]
		P_RADIUS,
		[Token(Token = "0x40006C2")]
		P_DISABLE_RFL,
		[Token(Token = "0x40006C3")]
		P_AMBISTAT,
		[Token(Token = "0x40006C4")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40006C5")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40006C6")]
		P_SENDLEVEL,
		[Token(Token = "0x40006C7")]
		P_NUM
	}

	[Token(Token = "0x40006B2")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000092")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x1A1CE9C", Offset = "0x1A1CE9C", VA = "0x1A1CE9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1A1CEA4", Offset = "0x1A1CEA4", VA = "0x1A1CEA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public float Gain
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1A1CEB0", Offset = "0x1A1CEB0", VA = "0x1A1CEB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1A1CEB8", Offset = "0x1A1CEB8", VA = "0x1A1CEB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1A1CEE8", Offset = "0x1A1CEE8", VA = "0x1A1CEE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1A1CEF0", Offset = "0x1A1CEF0", VA = "0x1A1CEF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public float Near
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1A1CEFC", Offset = "0x1A1CEFC", VA = "0x1A1CEFC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1A1CF04", Offset = "0x1A1CF04", VA = "0x1A1CF04")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float Far
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x1A1CF38", Offset = "0x1A1CF38", VA = "0x1A1CF38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1A1CF40", Offset = "0x1A1CF40", VA = "0x1A1CF40")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x1A1CF74", Offset = "0x1A1CF74", VA = "0x1A1CF74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1A1CF7C", Offset = "0x1A1CF7C", VA = "0x1A1CF7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public float ReverbSend
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1A1CFB0", Offset = "0x1A1CFB0", VA = "0x1A1CFB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1A1CFB8", Offset = "0x1A1CFB8", VA = "0x1A1CFB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public bool EnableRfl
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1A1CFEC", Offset = "0x1A1CFEC", VA = "0x1A1CFEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1A1CFF4", Offset = "0x1A1CFF4", VA = "0x1A1CFF4")]
		set
		{
		}
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1A1CB8C", Offset = "0x1A1CB8C", VA = "0x1A1CB8C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x84C134", Offset = "0x84C134")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1A1CDBC", Offset = "0x1A1CDBC", VA = "0x1A1CDBC")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1A1D000", Offset = "0x1A1D000", VA = "0x1A1D000")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1A1D170", Offset = "0x1A1D170", VA = "0x1A1D170")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x1A1D174", Offset = "0x1A1D174", VA = "0x1A1D174")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1A1D068", Offset = "0x1A1D068", VA = "0x1A1D068")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1A1D238", Offset = "0x1A1D238", VA = "0x1A1D238")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1A1D628", Offset = "0x1A1D628", VA = "0x1A1D628")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1A1CD3C", Offset = "0x1A1CD3C", VA = "0x1A1CD3C")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1A1D700", Offset = "0x1A1D700", VA = "0x1A1D700")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000152")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40006C9")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40006CB")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1A1D720", Offset = "0x1A1D720", VA = "0x1A1D720")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1A1D72C", Offset = "0x1A1D72C", VA = "0x1A1D72C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1A1D7E4", Offset = "0x1A1D7E4", VA = "0x1A1D7E4")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1A1D764", Offset = "0x1A1D764", VA = "0x1A1D764")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1A1D864", Offset = "0x1A1D864", VA = "0x1A1D864")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000153")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000154")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000155")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40006D2")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700009A")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1A1DB70", Offset = "0x1A1DB70", VA = "0x1A1DB70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009B")]
	public string filePath
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x1A1DC04", Offset = "0x1A1DC04", VA = "0x1A1DC04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1A1DC84", Offset = "0x1A1DC84", VA = "0x1A1DC84")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1A1DDEC", Offset = "0x1A1DDEC", VA = "0x1A1DDEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x1A1DDF0", Offset = "0x1A1DDF0", VA = "0x1A1DDF0")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1A1E3C8", Offset = "0x1A1E3C8", VA = "0x1A1E3C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1A1E774", Offset = "0x1A1E774", VA = "0x1A1E774")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1A1E8F0", Offset = "0x1A1E8F0", VA = "0x1A1E8F0")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1A1F094", Offset = "0x1A1F094", VA = "0x1A1F094")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1A1F0D0", Offset = "0x1A1F0D0", VA = "0x1A1F0D0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1A208D8", Offset = "0x1A208D8", VA = "0x1A208D8")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1A207B0", Offset = "0x1A207B0", VA = "0x1A207B0")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1A1E1E0", Offset = "0x1A1E1E0", VA = "0x1A1E1E0")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1A1DFE8", Offset = "0x1A1DFE8", VA = "0x1A1DFE8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1A20F60", Offset = "0x1A20F60", VA = "0x1A20F60")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1A213F8", Offset = "0x1A213F8", VA = "0x1A213F8")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000156")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000157")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40006DB")]
		Int8,
		[Token(Token = "0x40006DC")]
		UInt8,
		[Token(Token = "0x40006DD")]
		Int16,
		[Token(Token = "0x40006DE")]
		UInt16,
		[Token(Token = "0x40006DF")]
		Int32,
		[Token(Token = "0x40006E0")]
		UInt32,
		[Token(Token = "0x40006E1")]
		Int64,
		[Token(Token = "0x40006E2")]
		UInt64,
		[Token(Token = "0x40006E3")]
		Float16,
		[Token(Token = "0x40006E4")]
		Float32,
		[Token(Token = "0x40006E5")]
		Float64
	}

	[Token(Token = "0x2000158")]
	public class ClientType
	{
		[Token(Token = "0x40006E6")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40006E7")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40006E8")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40006E9")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40006EA")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40006EB")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40006EC")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40006ED")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40006EE")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40006EF")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40006F0")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40006F1")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40006F2")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x40006F3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x40006F4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xC62C24", Offset = "0xC62C24", VA = "0xC62C24")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000159")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000711")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000712")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000713")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000714")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000715")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000716")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000717")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000718")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000719")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600071A")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600071B")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600071C")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600071D")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600071E")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600071F")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200015A")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40006F5")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700009D")]
		private IntPtr context
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xC63960", Offset = "0xC63960", VA = "0xC63960")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000721")]
		[Address(RVA = "0xC639C0", Offset = "0xC639C0", VA = "0xC639C0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000722")]
		[Address(RVA = "0xC63A50", Offset = "0xC63A50", VA = "0xC63A50")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xC63AE0", Offset = "0xC63AE0", VA = "0xC63AE0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000724")]
		[Address(RVA = "0xC63B04", Offset = "0xC63B04", VA = "0xC63B04")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xC63B94", Offset = "0xC63B94", VA = "0xC63B94", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000726")]
		[Address(RVA = "0xC63BB8", Offset = "0xC63BB8", VA = "0xC63BB8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xC63C44", Offset = "0xC63C44", VA = "0xC63C44", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000728")]
		[Address(RVA = "0xC63C68", Offset = "0xC63C68", VA = "0xC63C68")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xC63CE8", Offset = "0xC63CE8", VA = "0xC63CE8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600072A")]
		[Address(RVA = "0xC63CF0", Offset = "0xC63CF0", VA = "0xC63CF0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xC63E10", Offset = "0xC63E10", VA = "0xC63E10", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600072C")]
		[Address(RVA = "0xC63F04", Offset = "0xC63F04", VA = "0xC63F04")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xC63F9C", Offset = "0xC63F9C", VA = "0xC63F9C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600072E")]
		[Address(RVA = "0xC63FA8", Offset = "0xC63FA8", VA = "0xC63FA8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xC640D0", Offset = "0xC640D0", VA = "0xC640D0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000730")]
		[Address(RVA = "0xC640DC", Offset = "0xC640DC", VA = "0xC640DC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xC64188", Offset = "0xC64188", VA = "0xC64188", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000732")]
		[Address(RVA = "0xC64194", Offset = "0xC64194", VA = "0xC64194")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xC64240", Offset = "0xC64240", VA = "0xC64240", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000734")]
		[Address(RVA = "0xC6424C", Offset = "0xC6424C", VA = "0xC6424C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xC642F8", Offset = "0xC642F8", VA = "0xC642F8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000736")]
		[Address(RVA = "0xC64304", Offset = "0xC64304", VA = "0xC64304")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xC64390", Offset = "0xC64390", VA = "0xC64390", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000738")]
		[Address(RVA = "0xC643B4", Offset = "0xC643B4", VA = "0xC643B4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xC64434", Offset = "0xC64434", VA = "0xC64434", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600073A")]
		[Address(RVA = "0xC6443C", Offset = "0xC6443C", VA = "0xC6443C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xC644E4", Offset = "0xC644E4", VA = "0xC644E4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600073C")]
		[Address(RVA = "0xC644F0", Offset = "0xC644F0", VA = "0xC644F0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xC64598", Offset = "0xC64598", VA = "0xC64598", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600073E")]
		[Address(RVA = "0xC645A8", Offset = "0xC645A8", VA = "0xC645A8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xC64638", Offset = "0xC64638", VA = "0xC64638", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xC64644", Offset = "0xC64644", VA = "0xC64644")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200015B")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40006F7")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700009E")]
		private IntPtr context
		{
			[Token(Token = "0x6000741")]
			[Address(RVA = "0xC6468C", Offset = "0xC6468C", VA = "0xC6468C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000742")]
		[Address(RVA = "0xC646EC", Offset = "0xC646EC", VA = "0xC646EC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xC6477C", Offset = "0xC6477C", VA = "0xC6477C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xC6480C", Offset = "0xC6480C", VA = "0xC6480C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000745")]
		[Address(RVA = "0xC64830", Offset = "0xC64830", VA = "0xC64830")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xC648C0", Offset = "0xC648C0", VA = "0xC648C0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000747")]
		[Address(RVA = "0xC648E4", Offset = "0xC648E4", VA = "0xC648E4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xC64974", Offset = "0xC64974", VA = "0xC64974", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000749")]
		[Address(RVA = "0xC64998", Offset = "0xC64998", VA = "0xC64998")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xC64A18", Offset = "0xC64A18", VA = "0xC64A18", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600074B")]
		[Address(RVA = "0xC64A20", Offset = "0xC64A20", VA = "0xC64A20")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xC64B40", Offset = "0xC64B40", VA = "0xC64B40", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600074D")]
		[Address(RVA = "0xC64C34", Offset = "0xC64C34", VA = "0xC64C34")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xC64CCC", Offset = "0xC64CCC", VA = "0xC64CCC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600074F")]
		[Address(RVA = "0xC64CD8", Offset = "0xC64CD8", VA = "0xC64CD8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xC64E00", Offset = "0xC64E00", VA = "0xC64E00", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000751")]
		[Address(RVA = "0xC64E0C", Offset = "0xC64E0C", VA = "0xC64E0C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xC64EB8", Offset = "0xC64EB8", VA = "0xC64EB8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000753")]
		[Address(RVA = "0xC64EC4", Offset = "0xC64EC4", VA = "0xC64EC4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xC64F70", Offset = "0xC64F70", VA = "0xC64F70", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000755")]
		[Address(RVA = "0xC64F7C", Offset = "0xC64F7C", VA = "0xC64F7C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xC65028", Offset = "0xC65028", VA = "0xC65028", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000757")]
		[Address(RVA = "0xC65034", Offset = "0xC65034", VA = "0xC65034")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xC650C4", Offset = "0xC650C4", VA = "0xC650C4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000759")]
		[Address(RVA = "0xC650E8", Offset = "0xC650E8", VA = "0xC650E8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xC65168", Offset = "0xC65168", VA = "0xC65168", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600075B")]
		[Address(RVA = "0xC65170", Offset = "0xC65170", VA = "0xC65170")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xC65218", Offset = "0xC65218", VA = "0xC65218", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600075D")]
		[Address(RVA = "0xC65224", Offset = "0xC65224", VA = "0xC65224")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xC652CC", Offset = "0xC652CC", VA = "0xC652CC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600075F")]
		[Address(RVA = "0xC652DC", Offset = "0xC652DC", VA = "0xC652DC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xC6536C", Offset = "0xC6536C", VA = "0xC6536C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xC65378", Offset = "0xC65378", VA = "0xC65378")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200015C")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40006F9")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700009F")]
		private IntPtr context
		{
			[Token(Token = "0x6000762")]
			[Address(RVA = "0xC62C2C", Offset = "0xC62C2C", VA = "0xC62C2C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000763")]
		[Address(RVA = "0xC62C8C", Offset = "0xC62C8C", VA = "0xC62C8C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000764")]
		[Address(RVA = "0xC62D1C", Offset = "0xC62D1C", VA = "0xC62D1C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xC62DAC", Offset = "0xC62DAC", VA = "0xC62DAC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000766")]
		[Address(RVA = "0xC62DD0", Offset = "0xC62DD0", VA = "0xC62DD0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xC62E60", Offset = "0xC62E60", VA = "0xC62E60", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000768")]
		[Address(RVA = "0xC62E84", Offset = "0xC62E84", VA = "0xC62E84")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xC62F14", Offset = "0xC62F14", VA = "0xC62F14", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600076A")]
		[Address(RVA = "0xC62F38", Offset = "0xC62F38", VA = "0xC62F38")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC62FB8", Offset = "0xC62FB8", VA = "0xC62FB8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600076C")]
		[Address(RVA = "0xC62FC0", Offset = "0xC62FC0", VA = "0xC62FC0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xC630E0", Offset = "0xC630E0", VA = "0xC630E0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC631D4", Offset = "0xC631D4", VA = "0xC631D4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC6326C", Offset = "0xC6326C", VA = "0xC6326C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC63278", Offset = "0xC63278", VA = "0xC63278")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xC633A0", Offset = "0xC633A0", VA = "0xC633A0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC633AC", Offset = "0xC633AC", VA = "0xC633AC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xC63458", Offset = "0xC63458", VA = "0xC63458", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000774")]
		[Address(RVA = "0xC63464", Offset = "0xC63464", VA = "0xC63464")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xC63510", Offset = "0xC63510", VA = "0xC63510", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000776")]
		[Address(RVA = "0xC6351C", Offset = "0xC6351C", VA = "0xC6351C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xC635C8", Offset = "0xC635C8", VA = "0xC635C8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000778")]
		[Address(RVA = "0xC635D4", Offset = "0xC635D4", VA = "0xC635D4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xC63664", Offset = "0xC63664", VA = "0xC63664", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600077A")]
		[Address(RVA = "0xC63688", Offset = "0xC63688", VA = "0xC63688")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xC63708", Offset = "0xC63708", VA = "0xC63708", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600077C")]
		[Address(RVA = "0xC63710", Offset = "0xC63710", VA = "0xC63710")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xC637B8", Offset = "0xC637B8", VA = "0xC637B8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600077E")]
		[Address(RVA = "0xC637C4", Offset = "0xC637C4", VA = "0xC637C4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xC6386C", Offset = "0xC6386C", VA = "0xC6386C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000780")]
		[Address(RVA = "0xC6387C", Offset = "0xC6387C", VA = "0xC6387C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xC6390C", Offset = "0xC6390C", VA = "0xC6390C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xC63918", Offset = "0xC63918", VA = "0xC63918")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700009C")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1A1D874", Offset = "0x1A1D874", VA = "0x1A1D874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1A1D8E0", Offset = "0x1A1D8E0", VA = "0x1A1D8E0")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1A1DB68", Offset = "0x1A1DB68", VA = "0x1A1DB68")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200015D")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	public enum Preset
	{
		[Token(Token = "0x4000701")]
		Custom,
		[Token(Token = "0x4000702")]
		AcousticTile,
		[Token(Token = "0x4000703")]
		Brick,
		[Token(Token = "0x4000704")]
		BrickPainted,
		[Token(Token = "0x4000705")]
		Carpet,
		[Token(Token = "0x4000706")]
		CarpetHeavy,
		[Token(Token = "0x4000707")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000708")]
		CeramicTile,
		[Token(Token = "0x4000709")]
		Concrete,
		[Token(Token = "0x400070A")]
		ConcreteRough,
		[Token(Token = "0x400070B")]
		ConcreteBlock,
		[Token(Token = "0x400070C")]
		ConcreteBlockPainted,
		[Token(Token = "0x400070D")]
		Curtain,
		[Token(Token = "0x400070E")]
		Foliage,
		[Token(Token = "0x400070F")]
		Glass,
		[Token(Token = "0x4000710")]
		GlassHeavy,
		[Token(Token = "0x4000711")]
		Grass,
		[Token(Token = "0x4000712")]
		Gravel,
		[Token(Token = "0x4000713")]
		GypsumBoard,
		[Token(Token = "0x4000714")]
		PlasterOnBrick,
		[Token(Token = "0x4000715")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000716")]
		Soil,
		[Token(Token = "0x4000717")]
		SoundProof,
		[Token(Token = "0x4000718")]
		Snow,
		[Token(Token = "0x4000719")]
		Steel,
		[Token(Token = "0x400071A")]
		Water,
		[Token(Token = "0x400071B")]
		WoodThin,
		[Token(Token = "0x400071C")]
		WoodThick,
		[Token(Token = "0x400071D")]
		WoodFloor,
		[Token(Token = "0x400071E")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200015F")]
	public sealed class Point
	{
		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xC653C0", Offset = "0xC653C0", VA = "0xC653C0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xC653F8", Offset = "0xC653F8", VA = "0xC653F8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xC65464", Offset = "0xC65464", VA = "0xC65464")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x841158", Offset = "0x841158")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000161")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841190", Offset = "0x841190")]
		private sealed class <>c
		{
			[Token(Token = "0x4000723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x1C555FC", Offset = "0x1C555FC", VA = "0x1C555FC")]
			public <>c()
			{
			}

			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x1C55604", Offset = "0x1C55604", VA = "0x1C55604")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x1C5561C", Offset = "0x1C5561C", VA = "0x1C5561C")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170000A1")]
		public float Item
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0xC6547C", Offset = "0xC6547C", VA = "0xC6547C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xC658D0", Offset = "0xC658D0", VA = "0xC658D0")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848924", Offset = "0x848924")]
	public Spectrum absorption;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84895C", Offset = "0x84895C")]
	public Spectrum transmission;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x848994", Offset = "0x848994")]
	public Spectrum scattering;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170000A0")]
	public Preset preset
	{
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1A214E0", Offset = "0x1A214E0", VA = "0x1A214E0")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1A214E8", Offset = "0x1A214E8", VA = "0x1A214E8")]
		set
		{
		}
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1A21510", Offset = "0x1A21510", VA = "0x1A21510")]
	private void Start()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1A20DD4", Offset = "0x1A20DD4", VA = "0x1A20DD4")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1A21B80", Offset = "0x1A21B80", VA = "0x1A21B80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1A21B84", Offset = "0x1A21B84", VA = "0x1A21B84")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1A21514", Offset = "0x1A21514", VA = "0x1A21514")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x1A2061C", Offset = "0x1A2061C", VA = "0x1A2061C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x1A21C70", Offset = "0x1A21C70", VA = "0x1A21C70")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x1A22130", Offset = "0x1A22130", VA = "0x1A22130")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1A225F4", Offset = "0x1A225F4", VA = "0x1A225F4")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x1A22AB4", Offset = "0x1A22AB4", VA = "0x1A22AB4")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1A22F88", Offset = "0x1A22F88", VA = "0x1A22F88")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x1A23448", Offset = "0x1A23448", VA = "0x1A23448")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1A23908", Offset = "0x1A23908", VA = "0x1A23908")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1A23DD0", Offset = "0x1A23DD0", VA = "0x1A23DD0")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1A24298", Offset = "0x1A24298", VA = "0x1A24298")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1A24764", Offset = "0x1A24764", VA = "0x1A24764")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1A24C2C", Offset = "0x1A24C2C", VA = "0x1A24C2C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1A250FC", Offset = "0x1A250FC", VA = "0x1A250FC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x1A255BC", Offset = "0x1A255BC", VA = "0x1A255BC")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x1A25A88", Offset = "0x1A25A88", VA = "0x1A25A88")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1A25F38", Offset = "0x1A25F38", VA = "0x1A25F38")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x1A263F4", Offset = "0x1A263F4", VA = "0x1A263F4")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x1A2679C", Offset = "0x1A2679C", VA = "0x1A2679C")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x1A26B3C", Offset = "0x1A26B3C", VA = "0x1A26B3C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x1A2700C", Offset = "0x1A2700C", VA = "0x1A2700C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x1A274D8", Offset = "0x1A274D8", VA = "0x1A274D8")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1A2799C", Offset = "0x1A2799C", VA = "0x1A2799C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x1A27D48", Offset = "0x1A27D48", VA = "0x1A27D48")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x1A27ECC", Offset = "0x1A27ECC", VA = "0x1A27ECC")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x1A28268", Offset = "0x1A28268", VA = "0x1A28268")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1A28718", Offset = "0x1A28718", VA = "0x1A28718")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1A28BDC", Offset = "0x1A28BDC", VA = "0x1A28BDC")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1A29094", Offset = "0x1A29094", VA = "0x1A29094")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1A29554", Offset = "0x1A29554", VA = "0x1A29554")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1A29A1C", Offset = "0x1A29A1C", VA = "0x1A29A1C")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1A29EE0", Offset = "0x1A29EE0", VA = "0x1A29EE0")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000162")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x1A29F8C", Offset = "0x1A29F8C", VA = "0x1A29F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1A2A058", Offset = "0x1A2A058", VA = "0x1A2A058")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000163")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170000A2")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1A1CBFC", Offset = "0x1A1CBFC", VA = "0x1A1CBFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x1A2A698", Offset = "0x1A2A698", VA = "0x1A2A698")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000164")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000729")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1A2A6A8", Offset = "0x1A2A6A8", VA = "0x1A2A6A8")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1A2A740", Offset = "0x1A2A740", VA = "0x1A2A740")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x1A2A860", Offset = "0x1A2A860", VA = "0x1A2A860")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1A2A864", Offset = "0x1A2A864", VA = "0x1A2A864")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1A2A868", Offset = "0x1A2A868", VA = "0x1A2A868")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000165")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000166")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000738")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400073E")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x14066D0", Offset = "0x14066D0", VA = "0x14066D0")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1406560", Offset = "0x1406560", VA = "0x1406560")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x84C148", Offset = "0x84C148")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x14066D8", Offset = "0x14066D8", VA = "0x14066D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x140681C", Offset = "0x140681C", VA = "0x140681C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1406918", Offset = "0x1406918", VA = "0x1406918")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1407234", Offset = "0x1407234", VA = "0x1407234")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1406788", Offset = "0x1406788", VA = "0x1406788")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1406888", Offset = "0x1406888", VA = "0x1406888")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1406F9C", Offset = "0x1406F9C", VA = "0x1406F9C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x140701C", Offset = "0x140701C", VA = "0x140701C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x14070A4", Offset = "0x14070A4", VA = "0x14070A4")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x140712C", Offset = "0x140712C", VA = "0x140712C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x14071AC", Offset = "0x14071AC", VA = "0x14071AC")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1407EFC", Offset = "0x1407EFC", VA = "0x1407EFC")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1407FA4", Offset = "0x1407FA4", VA = "0x1407FA4")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x140804C", Offset = "0x140804C", VA = "0x140804C")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000167")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000168")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1A2A068", Offset = "0x1A2A068", VA = "0x1A2A068")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x1A2A06C", Offset = "0x1A2A06C", VA = "0x1A2A06C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1A2A070", Offset = "0x1A2A070", VA = "0x1A2A070")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1A2A1E8", Offset = "0x1A2A1E8", VA = "0x1A2A1E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1A2A0BC", Offset = "0x1A2A0BC", VA = "0x1A2A0BC")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1A2A154", Offset = "0x1A2A154", VA = "0x1A2A154")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1A2A234", Offset = "0x1A2A234", VA = "0x1A2A234")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1A2A2D4", Offset = "0x1A2A2D4", VA = "0x1A2A2D4")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1A2A468", Offset = "0x1A2A468", VA = "0x1A2A468")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1A2A5FC", Offset = "0x1A2A5FC", VA = "0x1A2A5FC")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000169")]
public class MoveSample : MonoBehaviour
{
	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xCB4F38", Offset = "0xCB4F38", VA = "0xCB4F38")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xCB5244", Offset = "0xCB5244", VA = "0xCB5244")]
	public MoveSample()
	{
	}
}
[Token(Token = "0x200016A")]
public class RotateSample : MonoBehaviour
{
	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x10FD4EC", Offset = "0x10FD4EC", VA = "0x10FD4EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x10FD7E4", Offset = "0x10FD7E4", VA = "0x10FD7E4")]
	public RotateSample()
	{
	}
}
[Token(Token = "0x200016B")]
public class SampleInfo : MonoBehaviour
{
	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1106614", Offset = "0x1106614", VA = "0x1106614")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x11068E8", Offset = "0x11068E8", VA = "0x11068E8")]
	public SampleInfo()
	{
	}
}
[Token(Token = "0x200016C")]
public class iTween : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	private delegate float EasingFunction(float start, float end, float Value);

	[Token(Token = "0x200016E")]
	private delegate void ApplyTween();

	[Token(Token = "0x200016F")]
	public enum EaseType
	{
		[Token(Token = "0x400076B")]
		easeInQuad,
		[Token(Token = "0x400076C")]
		easeOutQuad,
		[Token(Token = "0x400076D")]
		easeInOutQuad,
		[Token(Token = "0x400076E")]
		easeInCubic,
		[Token(Token = "0x400076F")]
		easeOutCubic,
		[Token(Token = "0x4000770")]
		easeInOutCubic,
		[Token(Token = "0x4000771")]
		easeInQuart,
		[Token(Token = "0x4000772")]
		easeOutQuart,
		[Token(Token = "0x4000773")]
		easeInOutQuart,
		[Token(Token = "0x4000774")]
		easeInQuint,
		[Token(Token = "0x4000775")]
		easeOutQuint,
		[Token(Token = "0x4000776")]
		easeInOutQuint,
		[Token(Token = "0x4000777")]
		easeInSine,
		[Token(Token = "0x4000778")]
		easeOutSine,
		[Token(Token = "0x4000779")]
		easeInOutSine,
		[Token(Token = "0x400077A")]
		easeInExpo,
		[Token(Token = "0x400077B")]
		easeOutExpo,
		[Token(Token = "0x400077C")]
		easeInOutExpo,
		[Token(Token = "0x400077D")]
		easeInCirc,
		[Token(Token = "0x400077E")]
		easeOutCirc,
		[Token(Token = "0x400077F")]
		easeInOutCirc,
		[Token(Token = "0x4000780")]
		linear,
		[Token(Token = "0x4000781")]
		spring,
		[Token(Token = "0x4000782")]
		easeInBounce,
		[Token(Token = "0x4000783")]
		easeOutBounce,
		[Token(Token = "0x4000784")]
		easeInOutBounce,
		[Token(Token = "0x4000785")]
		easeInBack,
		[Token(Token = "0x4000786")]
		easeOutBack,
		[Token(Token = "0x4000787")]
		easeInOutBack,
		[Token(Token = "0x4000788")]
		easeInElastic,
		[Token(Token = "0x4000789")]
		easeOutElastic,
		[Token(Token = "0x400078A")]
		easeInOutElastic,
		[Token(Token = "0x400078B")]
		punch
	}

	[Token(Token = "0x2000170")]
	public enum LoopType
	{
		[Token(Token = "0x400078D")]
		none,
		[Token(Token = "0x400078E")]
		loop,
		[Token(Token = "0x400078F")]
		pingPong
	}

	[Token(Token = "0x2000171")]
	public enum NamedValueColor
	{
		[Token(Token = "0x4000791")]
		_Color,
		[Token(Token = "0x4000792")]
		_SpecColor,
		[Token(Token = "0x4000793")]
		_Emission,
		[Token(Token = "0x4000794")]
		_ReflectColor
	}

	[Token(Token = "0x2000172")]
	public static class Defaults
	{
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float time;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float delay;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NamedValueColor namedColorValue;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LoopType loopType;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EaseType easeType;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float lookSpeed;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isLocal;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static Space space;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool orientToPath;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Color color;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float updateTimePercentage;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float updateTime;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float lookAhead;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool useRealTime;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector3 up;
	}

	[Token(Token = "0x2000173")]
	private class CRSpline
	{
		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] pts;

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1C54BEC", Offset = "0x1C54BEC", VA = "0x1C54BEC")]
		public CRSpline(params Vector3[] pts)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1C54C70", Offset = "0x1C54C70", VA = "0x1C54C70")]
		public Vector3 Interp(float t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8411A0", Offset = "0x8411A0")]
	private sealed class <TweenDelay>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x1C547F0", Offset = "0x1C547F0", VA = "0x1C547F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x1C54838", Offset = "0x1C54838", VA = "0x1C54838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1C546F0", Offset = "0x1C546F0", VA = "0x1C546F0")]
		[DebuggerHidden]
		public <TweenDelay>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x1C5471C", Offset = "0x1C5471C", VA = "0x1C5471C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1C54720", Offset = "0x1C54720", VA = "0x1C54720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1C547F8", Offset = "0x1C547F8", VA = "0x1C547F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8411B0", Offset = "0x8411B0")]
	private sealed class <TweenRestart>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x1C54948", Offset = "0x1C54948", VA = "0x1C54948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x1C54990", Offset = "0x1C54990", VA = "0x1C54990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1C54840", Offset = "0x1C54840", VA = "0x1C54840")]
		[DebuggerHidden]
		public <TweenRestart>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1C5486C", Offset = "0x1C5486C", VA = "0x1C5486C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1C54870", Offset = "0x1C54870", VA = "0x1C54870", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1C54950", Offset = "0x1C54950", VA = "0x1C54950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8411C0", Offset = "0x8411C0")]
	private sealed class <Start>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x1C546A0", Offset = "0x1C546A0", VA = "0x1C546A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x1C546E8", Offset = "0x1C546E8", VA = "0x1C546E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1C545C8", Offset = "0x1C545C8", VA = "0x1C545C8")]
		[DebuggerHidden]
		public <Start>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x1C545F4", Offset = "0x1C545F4", VA = "0x1C545F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x1C545F8", Offset = "0x1C545F8", VA = "0x1C545F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1C546A8", Offset = "0x1C546A8", VA = "0x1C546A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Hashtable> tweens;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string type;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string method;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EaseType easeType;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LoopType loopType;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRunning;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPaused;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _name;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float runningTime;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float percentage;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayStarted;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool kinematic;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isLocal;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool loop;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool reverse;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wasPaused;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool physics;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Hashtable tweenArguments;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Space space;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EasingFunction ease;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ApplyTween apply;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] vector3s;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] vector2s;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[,] colors;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] floats;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] rects;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CRSpline path;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 preUpdate;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 postUpdate;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NamedValueColor namedcolorvalue;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastRealTime;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool useRealTime;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform thisTransform;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xBC1BF8", Offset = "0xBC1BF8", VA = "0xBC1BF8")]
	public static void Init(GameObject target)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xBC1E90", Offset = "0xBC1E90", VA = "0xBC1E90")]
	public static void ValueTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xBC300C", Offset = "0xBC300C", VA = "0xBC300C")]
	public static void FadeFrom(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xBC332C", Offset = "0xBC332C", VA = "0xBC332C")]
	public static void FadeFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xBC3ECC", Offset = "0xBC3ECC", VA = "0xBC3ECC")]
	public static void FadeTo(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xBC40A8", Offset = "0xBC40A8", VA = "0xBC40A8")]
	public static void FadeTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xBC46CC", Offset = "0xBC46CC", VA = "0xBC46CC")]
	public static void ColorFrom(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xBC339C", Offset = "0xBC339C", VA = "0xBC339C")]
	public static void ColorFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xBC48E0", Offset = "0xBC48E0", VA = "0xBC48E0")]
	public static void ColorTo(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xBC4118", Offset = "0xBC4118", VA = "0xBC4118")]
	public static void ColorTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xBC4AF4", Offset = "0xBC4AF4", VA = "0xBC4AF4")]
	public static void AudioFrom(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xBC4D58", Offset = "0xBC4D58", VA = "0xBC4D58")]
	public static void AudioFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xBC5210", Offset = "0xBC5210", VA = "0xBC5210")]
	public static void AudioTo(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xBC5474", Offset = "0xBC5474", VA = "0xBC5474")]
	public static void AudioTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xBC5614", Offset = "0xBC5614", VA = "0xBC5614")]
	public static void Stab(GameObject target, AudioClip audioclip, float delay)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xBC57D4", Offset = "0xBC57D4", VA = "0xBC57D4")]
	public static void Stab(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xBC5898", Offset = "0xBC5898", VA = "0xBC5898")]
	public static void LookFrom(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xBC5A9C", Offset = "0xBC5A9C", VA = "0xBC5A9C")]
	public static void LookFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xBC621C", Offset = "0xBC621C", VA = "0xBC621C")]
	public static void LookTo(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xBC6420", Offset = "0xBC6420", VA = "0xBC6420")]
	public static void LookTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xBC6778", Offset = "0xBC6778", VA = "0xBC6778")]
	public static void MoveTo(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xBC697C", Offset = "0xBC697C", VA = "0xBC697C")]
	public static void MoveTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xBC6D30", Offset = "0xBC6D30", VA = "0xBC6D30")]
	public static void MoveFrom(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xBC6F34", Offset = "0xBC6F34", VA = "0xBC6F34")]
	public static void MoveFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xBC7900", Offset = "0xBC7900", VA = "0xBC7900")]
	public static void MoveAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xBC7B04", Offset = "0xBC7B04", VA = "0xBC7B04")]
	public static void MoveAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xBC1C8C", Offset = "0xBC1C8C", VA = "0xBC1C8C")]
	public static void MoveBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xBC7C0C", Offset = "0xBC7C0C", VA = "0xBC7C0C")]
	public static void MoveBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xBC7D14", Offset = "0xBC7D14", VA = "0xBC7D14")]
	public static void ScaleTo(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xBC7F18", Offset = "0xBC7F18", VA = "0xBC7F18")]
	public static void ScaleTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xBC82B8", Offset = "0xBC82B8", VA = "0xBC82B8")]
	public static void ScaleFrom(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xBC84BC", Offset = "0xBC84BC", VA = "0xBC84BC")]
	public static void ScaleFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xBC8A00", Offset = "0xBC8A00", VA = "0xBC8A00")]
	public static void ScaleAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xBC8C04", Offset = "0xBC8C04", VA = "0xBC8C04")]
	public static void ScaleAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xBC8D0C", Offset = "0xBC8D0C", VA = "0xBC8D0C")]
	public static void ScaleBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xBC8F10", Offset = "0xBC8F10", VA = "0xBC8F10")]
	public static void ScaleBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xBC9018", Offset = "0xBC9018", VA = "0xBC9018")]
	public static void RotateTo(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xBC921C", Offset = "0xBC921C", VA = "0xBC921C")]
	public static void RotateTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xBC95D0", Offset = "0xBC95D0", VA = "0xBC95D0")]
	public static void RotateFrom(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xBC97D4", Offset = "0xBC97D4", VA = "0xBC97D4")]
	public static void RotateFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xBC9E00", Offset = "0xBC9E00", VA = "0xBC9E00")]
	public static void RotateAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xBCA004", Offset = "0xBCA004", VA = "0xBCA004")]
	public static void RotateAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xBCA10C", Offset = "0xBCA10C", VA = "0xBCA10C")]
	public static void RotateBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xBCA310", Offset = "0xBCA310", VA = "0xBCA310")]
	public static void RotateBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xBCA418", Offset = "0xBCA418", VA = "0xBCA418")]
	public static void ShakePosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xBCA61C", Offset = "0xBCA61C", VA = "0xBCA61C")]
	public static void ShakePosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xBCA724", Offset = "0xBCA724", VA = "0xBCA724")]
	public static void ShakeScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xBCA928", Offset = "0xBCA928", VA = "0xBCA928")]
	public static void ShakeScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xBCAA30", Offset = "0xBCAA30", VA = "0xBCAA30")]
	public static void ShakeRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xBCAC34", Offset = "0xBCAC34", VA = "0xBCAC34")]
	public static void ShakeRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xBCAD3C", Offset = "0xBCAD3C", VA = "0xBCAD3C")]
	public static void PunchPosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xBCAF40", Offset = "0xBCAF40", VA = "0xBCAF40")]
	public static void PunchPosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xBCB0A4", Offset = "0xBCB0A4", VA = "0xBCB0A4")]
	public static void PunchRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xBCB2A8", Offset = "0xBCB2A8", VA = "0xBCB2A8")]
	public static void PunchRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xBCB40C", Offset = "0xBCB40C", VA = "0xBCB40C")]
	public static void PunchScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xBCB610", Offset = "0xBCB610", VA = "0xBCB610")]
	public static void PunchScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xBCB774", Offset = "0xBCB774", VA = "0xBCB774")]
	private void GenerateTargets()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xBCCA24", Offset = "0xBCCA24", VA = "0xBCCA24")]
	private void GenerateRectTargets()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xBCC898", Offset = "0xBCC898", VA = "0xBCC898")]
	private void GenerateColorTargets()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xBCC634", Offset = "0xBCC634", VA = "0xBCC634")]
	private void GenerateVector3Targets()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xBCC3DC", Offset = "0xBCC3DC", VA = "0xBCC3DC")]
	private void GenerateVector2Targets()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xBCC1B0", Offset = "0xBCC1B0", VA = "0xBCC1B0")]
	private void GenerateFloatTargets()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xBCCB80", Offset = "0xBCCB80", VA = "0xBCCB80")]
	private void GenerateColorToTargets()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xBCD570", Offset = "0xBCD570", VA = "0xBCD570")]
	private void GenerateAudioToTargets()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xBD2650", Offset = "0xBD2650", VA = "0xBD2650")]
	private void GenerateStabTargets()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xBD1D00", Offset = "0xBD1D00", VA = "0xBD1D00")]
	private void GenerateLookToTargets()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xBCD8C0", Offset = "0xBCD8C0", VA = "0xBCD8C0")]
	private void GenerateMoveToPathTargets()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xBCDFB0", Offset = "0xBCDFB0", VA = "0xBCDFB0")]
	private void GenerateMoveToTargets()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xBCE664", Offset = "0xBCE664", VA = "0xBCE664")]
	private void GenerateMoveByTargets()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xBCEC68", Offset = "0xBCEC68", VA = "0xBCEC68")]
	private void GenerateScaleToTargets()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xBCF1FC", Offset = "0xBCF1FC", VA = "0xBCF1FC")]
	private void GenerateScaleByTargets()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xBCF634", Offset = "0xBCF634", VA = "0xBCF634")]
	private void GenerateScaleAddTargets()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xBCFA60", Offset = "0xBCFA60", VA = "0xBCFA60")]
	private void GenerateRotateToTargets()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xBD0140", Offset = "0xBD0140", VA = "0xBD0140")]
	private void GenerateRotateAddTargets()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xBD0574", Offset = "0xBD0574", VA = "0xBD0574")]
	private void GenerateRotateByTargets()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xBD09E4", Offset = "0xBD09E4", VA = "0xBD09E4")]
	private void GenerateShakePositionTargets()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xBD0D1C", Offset = "0xBD0D1C", VA = "0xBD0D1C")]
	private void GenerateShakeScaleTargets()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xBD1028", Offset = "0xBD1028", VA = "0xBD1028")]
	private void GenerateShakeRotationTargets()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xBD1334", Offset = "0xBD1334", VA = "0xBD1334")]
	private void GeneratePunchPositionTargets()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xBD1698", Offset = "0xBD1698", VA = "0xBD1698")]
	private void GeneratePunchRotationTargets()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xBD19D0", Offset = "0xBD19D0", VA = "0xBD19D0")]
	private void GeneratePunchScaleTargets()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xBD2D60", Offset = "0xBD2D60", VA = "0xBD2D60")]
	private void ApplyRectTargets()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xBD3068", Offset = "0xBD3068", VA = "0xBD3068")]
	private void ApplyColorTargets()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xBD32A0", Offset = "0xBD32A0", VA = "0xBD32A0")]
	private void ApplyVector3Targets()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xBD349C", Offset = "0xBD349C", VA = "0xBD349C")]
	private void ApplyVector2Targets()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xBD3644", Offset = "0xBD3644", VA = "0xBD3644")]
	private void ApplyFloatTargets()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xBD37A4", Offset = "0xBD37A4", VA = "0xBD37A4")]
	private void ApplyColorToTargets()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xBD3D24", Offset = "0xBD3D24", VA = "0xBD3D24")]
	private void ApplyAudioToTargets()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xBD3E90", Offset = "0xBD3E90", VA = "0xBD3E90")]
	private void ApplyStabTargets()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xBD3E94", Offset = "0xBD3E94", VA = "0xBD3E94")]
	private void ApplyMoveToPathTargets()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xBD41C4", Offset = "0xBD41C4", VA = "0xBD41C4")]
	private void ApplyMoveToTargets()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xBD43CC", Offset = "0xBD43CC", VA = "0xBD43CC")]
	private void ApplyMoveByTargets()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xBD46B8", Offset = "0xBD46B8", VA = "0xBD46B8")]
	private void ApplyScaleToTargets()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xBD4820", Offset = "0xBD4820", VA = "0xBD4820")]
	private void ApplyLookToTargets()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xBD4960", Offset = "0xBD4960", VA = "0xBD4960")]
	private void ApplyRotateToTargets()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xBD4B9C", Offset = "0xBD4B9C", VA = "0xBD4B9C")]
	private void ApplyRotateAddTargets()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xBD4DA4", Offset = "0xBD4DA4", VA = "0xBD4DA4")]
	private void ApplyShakePositionTargets()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xBD511C", Offset = "0xBD511C", VA = "0xBD511C")]
	private void ApplyShakeScaleTargets()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xBD52BC", Offset = "0xBD52BC", VA = "0xBD52BC")]
	private void ApplyShakeRotationTargets()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xBD54EC", Offset = "0xBD54EC", VA = "0xBD54EC")]
	private void ApplyPunchPositionTargets()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xBD5A50", Offset = "0xBD5A50", VA = "0xBD5A50")]
	private void ApplyPunchRotationTargets()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xBD5E68", Offset = "0xBD5E68", VA = "0xBD5E68")]
	private void ApplyPunchScaleTargets()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xBD61A8", Offset = "0xBD61A8", VA = "0xBD61A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C1A8", Offset = "0x84C1A8")]
	private IEnumerator TweenDelay()
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xBD6214", Offset = "0xBD6214", VA = "0xBD6214")]
	private void TweenStart()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xBD6CA4", Offset = "0xBD6CA4", VA = "0xBD6CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C208", Offset = "0x84C208")]
	private IEnumerator TweenRestart()
	{
		return null;
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xBD6D10", Offset = "0xBD6D10", VA = "0xBD6D10")]
	private void TweenUpdate()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xBD6DF0", Offset = "0xBD6DF0", VA = "0xBD6DF0")]
	private void TweenComplete()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xBD6ED4", Offset = "0xBD6ED4", VA = "0xBD6ED4")]
	private void TweenLoop()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xBD6F74", Offset = "0xBD6F74", VA = "0xBD6F74")]
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed)
	{
		return default(Rect);
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xBD7138", Offset = "0xBD7138", VA = "0xBD7138")]
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xBD71A4", Offset = "0xBD71A4", VA = "0xBD71A4")]
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xBD70F8", Offset = "0xBD70F8", VA = "0xBD70F8")]
	public static float FloatUpdate(float currentValue, float targetValue, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xBD71F4", Offset = "0xBD71F4", VA = "0xBD71F4")]
	public static void FadeUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xBD7D28", Offset = "0xBD7D28", VA = "0xBD7D28")]
	public static void FadeUpdate(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xBD72C8", Offset = "0xBD72C8", VA = "0xBD72C8")]
	public static void ColorUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xBD7F04", Offset = "0xBD7F04", VA = "0xBD7F04")]
	public static void ColorUpdate(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xBD8118", Offset = "0xBD8118", VA = "0xBD8118")]
	public static void AudioUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xBD85F4", Offset = "0xBD85F4", VA = "0xBD85F4")]
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xBD8858", Offset = "0xBD8858", VA = "0xBD8858")]
	public static void RotateUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xBD8ED8", Offset = "0xBD8ED8", VA = "0xBD8ED8")]
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xBD90DC", Offset = "0xBD90DC", VA = "0xBD90DC")]
	public static void ScaleUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xBD972C", Offset = "0xBD972C", VA = "0xBD972C")]
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xBD9930", Offset = "0xBD9930", VA = "0xBD9930")]
	public static void MoveUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xBDAC28", Offset = "0xBDAC28", VA = "0xBDAC28")]
	public static void MoveUpdate(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xBDA24C", Offset = "0xBDA24C", VA = "0xBDA24C")]
	public static void LookUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xBDAE2C", Offset = "0xBDAE2C", VA = "0xBDAE2C")]
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xBDB030", Offset = "0xBDB030", VA = "0xBDB030")]
	public static float PathLength(Transform[] path)
	{
		return default(float);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xBD2C18", Offset = "0xBD2C18", VA = "0xBD2C18")]
	public static float PathLength(Vector3[] path)
	{
		return default(float);
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xBDB5CC", Offset = "0xBDB5CC", VA = "0xBDB5CC")]
	public static void PutOnPath(GameObject target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xBDB678", Offset = "0xBDB678", VA = "0xBDB678")]
	public static void PutOnPath(Transform target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xBDB70C", Offset = "0xBDB70C", VA = "0xBDB70C")]
	public static void PutOnPath(GameObject target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xBDB84C", Offset = "0xBDB84C", VA = "0xBDB84C")]
	public static void PutOnPath(Transform target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xBDB974", Offset = "0xBDB974", VA = "0xBDB974")]
	public static Vector3 PointOnPath(Transform[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xBDBA88", Offset = "0xBDBA88", VA = "0xBDBA88")]
	public static void DrawLine(Vector3[] line)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xBDBD20", Offset = "0xBDBD20", VA = "0xBDBD20")]
	public static void DrawLine(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xBDBDEC", Offset = "0xBDBDEC", VA = "0xBDBDEC")]
	public static void DrawLine(Transform[] line)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xBDBF80", Offset = "0xBDBF80", VA = "0xBDBF80")]
	public static void DrawLine(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xBDC0E8", Offset = "0xBDC0E8", VA = "0xBDC0E8")]
	public static void DrawLineGizmos(Vector3[] line)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xBDC1E0", Offset = "0xBDC1E0", VA = "0xBDC1E0")]
	public static void DrawLineGizmos(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xBDC2AC", Offset = "0xBDC2AC", VA = "0xBDC2AC")]
	public static void DrawLineGizmos(Transform[] line)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xBDC440", Offset = "0xBDC440", VA = "0xBDC440")]
	public static void DrawLineGizmos(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xBDC5A8", Offset = "0xBDC5A8", VA = "0xBDC5A8")]
	public static void DrawLineHandles(Vector3[] line)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xBDC6A0", Offset = "0xBDC6A0", VA = "0xBDC6A0")]
	public static void DrawLineHandles(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xBDC76C", Offset = "0xBDC76C", VA = "0xBDC76C")]
	public static void DrawLineHandles(Transform[] line)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xBDC900", Offset = "0xBDC900", VA = "0xBDC900")]
	public static void DrawLineHandles(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xBDCA68", Offset = "0xBDCA68", VA = "0xBDCA68")]
	public static Vector3 PointOnPath(Vector3[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xBDCADC", Offset = "0xBDCADC", VA = "0xBDCADC")]
	public static void DrawPath(Vector3[] path)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xBDCDF4", Offset = "0xBDCDF4", VA = "0xBDCDF4")]
	public static void DrawPath(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xBDCEC0", Offset = "0xBDCEC0", VA = "0xBDCEC0")]
	public static void DrawPath(Transform[] path)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xBDD054", Offset = "0xBDD054", VA = "0xBDD054")]
	public static void DrawPath(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xBDD1BC", Offset = "0xBDD1BC", VA = "0xBDD1BC")]
	public static void DrawPathGizmos(Vector3[] path)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xBDD2B4", Offset = "0xBDD2B4", VA = "0xBDD2B4")]
	public static void DrawPathGizmos(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xBDD380", Offset = "0xBDD380", VA = "0xBDD380")]
	public static void DrawPathGizmos(Transform[] path)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xBDD514", Offset = "0xBDD514", VA = "0xBDD514")]
	public static void DrawPathGizmos(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xBDD67C", Offset = "0xBDD67C", VA = "0xBDD67C")]
	public static void DrawPathHandles(Vector3[] path)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xBDD774", Offset = "0xBDD774", VA = "0xBDD774")]
	public static void DrawPathHandles(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xBDD840", Offset = "0xBDD840", VA = "0xBDD840")]
	public static void DrawPathHandles(Transform[] path)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xBDD9D4", Offset = "0xBDD9D4", VA = "0xBDD9D4")]
	public static void DrawPathHandles(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xBDDB3C", Offset = "0xBDDB3C", VA = "0xBDDB3C")]
	public static void Resume(GameObject target)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xBDDC34", Offset = "0xBDDC34", VA = "0xBDDC34")]
	public static void Resume(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xBDDF34", Offset = "0xBDDF34", VA = "0xBDDF34")]
	public static void Resume(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xBDE094", Offset = "0xBDE094", VA = "0xBDE094")]
	public static void Resume(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xBDE498", Offset = "0xBDE498", VA = "0xBDE498")]
	public static void Resume()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xBDE5E4", Offset = "0xBDE5E4", VA = "0xBDE5E4")]
	public static void Resume(string type)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xBDE84C", Offset = "0xBDE84C", VA = "0xBDE84C")]
	public static void Pause(GameObject target)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xBDE9AC", Offset = "0xBDE9AC", VA = "0xBDE9AC")]
	public static void Pause(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xBDECAC", Offset = "0xBDECAC", VA = "0xBDECAC")]
	public static void Pause(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xBDEE6C", Offset = "0xBDEE6C", VA = "0xBDEE6C")]
	public static void Pause(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xBDF2C8", Offset = "0xBDF2C8", VA = "0xBDF2C8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xBDF414", Offset = "0xBDF414", VA = "0xBDF414")]
	public static void Pause(string type)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xBDF67C", Offset = "0xBDF67C", VA = "0xBDF67C")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xBDF6F8", Offset = "0xBDF6F8", VA = "0xBDF6F8")]
	public static int Count(string type)
	{
		return default(int);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xBDF90C", Offset = "0xBDF90C", VA = "0xBDF90C")]
	public static int Count(GameObject target)
	{
		return default(int);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xBDF96C", Offset = "0xBDF96C", VA = "0xBDF96C")]
	public static int Count(GameObject target, string type)
	{
		return default(int);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xBDFAD0", Offset = "0xBDFAD0", VA = "0xBDFAD0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xBDFD48", Offset = "0xBDFD48", VA = "0xBDFD48")]
	public static void Stop(string type)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xBE0108", Offset = "0xBE0108", VA = "0xBE0108")]
	public static void StopByName(string name)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xBDFC58", Offset = "0xBDFC58", VA = "0xBDFC58")]
	public static void Stop(GameObject target)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xBE0488", Offset = "0xBE0488", VA = "0xBE0488")]
	public static void Stop(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xBDFFB0", Offset = "0xBDFFB0", VA = "0xBDFFB0")]
	public static void Stop(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xBE0370", Offset = "0xBE0370", VA = "0xBE0370")]
	public static void StopByName(GameObject target, string name)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xBE0788", Offset = "0xBE0788", VA = "0xBE0788")]
	public static void Stop(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xBE0B84", Offset = "0xBE0B84", VA = "0xBE0B84")]
	public static void StopByName(GameObject target, string name, bool includechildren)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xBC31E8", Offset = "0xBC31E8", VA = "0xBC31E8")]
	public static Hashtable Hash(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xBE0F38", Offset = "0xBE0F38", VA = "0xBE0F38")]
	private iTween(Hashtable h)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xBE0F64", Offset = "0xBE0F64", VA = "0xBE0F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xBE22EC", Offset = "0xBE22EC", VA = "0xBE22EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C268", Offset = "0x84C268")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xBE2358", Offset = "0xBE2358", VA = "0xBE2358")]
	private void Update()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xBE2398", Offset = "0xBE2398", VA = "0xBE2398")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xBE23D8", Offset = "0xBE23D8", VA = "0xBE23D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xBE2518", Offset = "0xBE2518", VA = "0xBE2518")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xBE2590", Offset = "0xBE2590", VA = "0xBE2590")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xBDBB80", Offset = "0xBDBB80", VA = "0xBDBB80")]
	private static void DrawLineHelper(Vector3[] line, Color color, string method)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xBDCBD4", Offset = "0xBDCBD4", VA = "0xBDCBD4")]
	private static void DrawPathHelper(Vector3[] path, Color color, string method)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xBDB208", Offset = "0xBDB208", VA = "0xBDB208")]
	private static Vector3[] PathControlPointGenerator(Vector3[] path)
	{
		return null;
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xBDB418", Offset = "0xBDB418", VA = "0xBDB418")]
	private static Vector3 Interp(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xBC2E8C", Offset = "0xBC2E8C", VA = "0xBC2E8C")]
	private static void Launch(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xBC2470", Offset = "0xBC2470", VA = "0xBC2470")]
	private static Hashtable CleanArgs(Hashtable args)
	{
		return null;
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xBE2594", Offset = "0xBE2594", VA = "0xBE2594")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xBE0FA0", Offset = "0xBE0FA0", VA = "0xBE0FA0")]
	private void RetrieveArgs()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xBE2610", Offset = "0xBE2610", VA = "0xBE2610")]
	private void GetEasingFunction()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xBD6D78", Offset = "0xBD6D78", VA = "0xBD6D78")]
	private void UpdatePercentage()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xBD63E8", Offset = "0xBD63E8", VA = "0xBD63E8")]
	private void CallBack(string callbackType)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xBD29D4", Offset = "0xBD29D4", VA = "0xBD29D4")]
	private void Dispose()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xBD6728", Offset = "0xBD6728", VA = "0xBD6728")]
	private void ConflictCheck()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xBD6CA0", Offset = "0xBD6CA0", VA = "0xBD6CA0")]
	private void EnableKinematic()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xBD6F70", Offset = "0xBD6F70", VA = "0xBD6F70")]
	private void DisableKinematic()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xBE2540", Offset = "0xBE2540", VA = "0xBE2540")]
	private void ResumeDelay()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xBE2B80", Offset = "0xBE2B80", VA = "0xBE2B80")]
	private float linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xBD2BB4", Offset = "0xBD2BB4", VA = "0xBD2BB4")]
	private float clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xBE2B88", Offset = "0xBE2B88", VA = "0xBE2B88")]
	private float spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xBE2C3C", Offset = "0xBE2C3C", VA = "0xBE2C3C")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xBE2C50", Offset = "0xBE2C50", VA = "0xBE2C50")]
	private float easeOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xBE2C6C", Offset = "0xBE2C6C", VA = "0xBE2C6C")]
	private float easeInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xBE2CC0", Offset = "0xBE2CC0", VA = "0xBE2CC0")]
	private float easeInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xBE2CD8", Offset = "0xBE2CD8", VA = "0xBE2CD8")]
	private float easeOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xBE2D00", Offset = "0xBE2D00", VA = "0xBE2D00")]
	private float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xBE2D58", Offset = "0xBE2D58", VA = "0xBE2D58")]
	private float easeInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xBE2D74", Offset = "0xBE2D74", VA = "0xBE2D74")]
	private float easeOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xBE2D9C", Offset = "0xBE2D9C", VA = "0xBE2D9C")]
	private float easeInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xBE2DF8", Offset = "0xBE2DF8", VA = "0xBE2DF8")]
	private float easeInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xBE2E18", Offset = "0xBE2E18", VA = "0xBE2E18")]
	private float easeOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xBE2E48", Offset = "0xBE2E48", VA = "0xBE2E48")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xBE2EB0", Offset = "0xBE2EB0", VA = "0xBE2EB0")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xBE2EEC", Offset = "0xBE2EEC", VA = "0xBE2EEC")]
	private float easeOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xBE2F24", Offset = "0xBE2F24", VA = "0xBE2F24")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xBE2F6C", Offset = "0xBE2F6C", VA = "0xBE2F6C")]
	private float easeInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xBE2FA8", Offset = "0xBE2FA8", VA = "0xBE2FA8")]
	private float easeOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xBE2FE4", Offset = "0xBE2FE4", VA = "0xBE2FE4")]
	private float easeInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xBE3058", Offset = "0xBE3058", VA = "0xBE3058")]
	private float easeInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xBE30A8", Offset = "0xBE30A8", VA = "0xBE30A8")]
	private float easeOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xBE30F8", Offset = "0xBE30F8", VA = "0xBE30F8")]
	private float easeInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xBE317C", Offset = "0xBE317C", VA = "0xBE317C")]
	private float easeInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xBE31B8", Offset = "0xBE31B8", VA = "0xBE31B8")]
	private float easeOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xBE3284", Offset = "0xBE3284", VA = "0xBE3284")]
	private float easeInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xBE3308", Offset = "0xBE3308", VA = "0xBE3308")]
	private float easeInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xBE3338", Offset = "0xBE3338", VA = "0xBE3338")]
	private float easeOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xBE3378", Offset = "0xBE3378", VA = "0xBE3378")]
	private float easeInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xBD59DC", Offset = "0xBD59DC", VA = "0xBD59DC")]
	private float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xBE33FC", Offset = "0xBE33FC", VA = "0xBE33FC")]
	private float easeInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xBE3490", Offset = "0xBE3490", VA = "0xBE3490")]
	private float easeOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xBE3524", Offset = "0xBE3524", VA = "0xBE3524")]
	private float easeInOutElastic(float start, float end, float value)
	{
		return default(float);
	}
}
[Token(Token = "0x2000177")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xDAF6DC", Offset = "0xDAF6DC", VA = "0xDAF6DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xDAF7A0", Offset = "0xDAF7A0", VA = "0xDAF7A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xDAF864", Offset = "0xDAF864", VA = "0xDAF864")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xDAFC44", Offset = "0xDAFC44", VA = "0xDAFC44")]
	public ChatController()
	{
	}
}
[Token(Token = "0x2000178")]
public class DropdownSample : MonoBehaviour
{
	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Dropdown dropdownWithoutPlaceholder;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown dropdownWithPlaceholder;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xCC0288", Offset = "0xCC0288", VA = "0xCC0288")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xCC0394", Offset = "0xCC0394", VA = "0xCC0394")]
	public DropdownSample()
	{
	}
}
[Token(Token = "0x2000179")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8411D0", Offset = "0x8411D0")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xC5FFA8", Offset = "0xC5FFA8", VA = "0xC5FFA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0xC5FFF0", Offset = "0xC5FFF0", VA = "0xC5FFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xC5FDCC", Offset = "0xC5FDCC", VA = "0xC5FDCC")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xC5FDF8", Offset = "0xC5FDF8", VA = "0xC5FDF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xC5FDFC", Offset = "0xC5FDFC", VA = "0xC5FDFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xC5FFB0", Offset = "0xC5FFB0", VA = "0xC5FFB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1348A9C", Offset = "0x1348A9C", VA = "0x1348A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1348B0C", Offset = "0x1348B0C", VA = "0x1348B0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C3B8", Offset = "0x84C3B8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1348B78", Offset = "0x1348B78", VA = "0x1348B78")]
	public EnvMapAnimator()
	{
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x200017B")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x6000900")]
		[Address(RVA = "0xBB2B6C", Offset = "0xBB2B6C", VA = "0xBB2B6C", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xBB2BE4", Offset = "0xBB2BE4", VA = "0xBB2BE4")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x6000902")]
		[Address(RVA = "0xBB3450", Offset = "0xBB3450", VA = "0xBB3450", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xBB3858", Offset = "0xBB3858", VA = "0xBB3858")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x200017E")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000918")]
			[Address(RVA = "0xC68A58", Offset = "0xC68A58", VA = "0xC68A58")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200017F")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0xC68B3C", Offset = "0xC68B3C", VA = "0xC68B3C")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000180")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x600091A")]
			[Address(RVA = "0xC68B88", Offset = "0xC68B88", VA = "0xC68B88")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000181")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0xC68AA4", Offset = "0xC68AA4", VA = "0xC68AA4")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000182")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x600091C")]
			[Address(RVA = "0xC68AF0", Offset = "0xC68AF0", VA = "0xC68AF0")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x170000AB")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6000904")]
			[Address(RVA = "0xBB49B4", Offset = "0xBB49B4", VA = "0xBB49B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000905")]
			[Address(RVA = "0xBB49BC", Offset = "0xBB49BC", VA = "0xBB49BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0xBB49C4", Offset = "0xBB49C4", VA = "0xBB49C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000907")]
			[Address(RVA = "0xBB49CC", Offset = "0xBB49CC", VA = "0xBB49CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0xBB49D4", Offset = "0xBB49D4", VA = "0xBB49D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000909")]
			[Address(RVA = "0xBB49DC", Offset = "0xBB49DC", VA = "0xBB49DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0xBB49E4", Offset = "0xBB49E4", VA = "0xBB49E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090B")]
			[Address(RVA = "0xBB49EC", Offset = "0xBB49EC", VA = "0xBB49EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0xBB49F4", Offset = "0xBB49F4", VA = "0xBB49F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090D")]
			[Address(RVA = "0xBB49FC", Offset = "0xBB49FC", VA = "0xBB49FC")]
			set
			{
			}
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xBB4A04", Offset = "0xBB4A04", VA = "0xBB4A04")]
		private void Awake()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xBB4B98", Offset = "0xBB4B98", VA = "0xBB4B98")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xBB52D8", Offset = "0xBB52D8", VA = "0xBB52D8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xBB52DC", Offset = "0xBB52DC", VA = "0xBB52DC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xBB5044", Offset = "0xBB5044", VA = "0xBB5044")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xBB50BC", Offset = "0xBB50BC", VA = "0xBB50BC")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xBB5134", Offset = "0xBB5134", VA = "0xBB5134")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xBB51C0", Offset = "0xBB51C0", VA = "0xBB51C0")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xBB524C", Offset = "0xBB524C", VA = "0xBB524C")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xBB52E0", Offset = "0xBB52E0", VA = "0xBB52E0")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000183")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8411E0", Offset = "0x8411E0")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x40007D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000922")]
				[Address(RVA = "0xC5A5CC", Offset = "0xC5A5CC", VA = "0xC5A5CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000924")]
				[Address(RVA = "0xC5A614", Offset = "0xC5A614", VA = "0xC5A614", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600091F")]
			[Address(RVA = "0xC5A024", Offset = "0xC5A024", VA = "0xC5A024")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000920")]
			[Address(RVA = "0xC5A050", Offset = "0xC5A050", VA = "0xC5A050", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000921")]
			[Address(RVA = "0xC5A054", Offset = "0xC5A054", VA = "0xC5A054", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000923")]
			[Address(RVA = "0xC5A5D4", Offset = "0xC5A5D4", VA = "0xC5A5D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40007CD")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x40007CE")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xD9E96C", Offset = "0xD9E96C", VA = "0xD9E96C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C468", Offset = "0x84C468")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xD9E9D8", Offset = "0xD9E9D8", VA = "0xD9E9D8")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x2000186")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8411F0", Offset = "0x8411F0")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x40007E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600092A")]
				[Address(RVA = "0xC5AAC0", Offset = "0xC5AAC0", VA = "0xC5AAC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600092C")]
				[Address(RVA = "0xC5AB08", Offset = "0xC5AB08", VA = "0xC5AB08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000927")]
			[Address(RVA = "0xC5A61C", Offset = "0xC5A61C", VA = "0xC5A61C")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000928")]
			[Address(RVA = "0xC5A648", Offset = "0xC5A648", VA = "0xC5A648", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000929")]
			[Address(RVA = "0xC5A64C", Offset = "0xC5A64C", VA = "0xC5A64C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600092B")]
			[Address(RVA = "0xC5AAC8", Offset = "0xC5AAC8", VA = "0xC5AAC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x40007DB")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x40007DC")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xD9E9E0", Offset = "0xD9E9E0", VA = "0xD9E9E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C518", Offset = "0x84C518")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xD9EA4C", Offset = "0xD9EA4C", VA = "0xD9EA4C")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xD9EA54", Offset = "0xD9EA54", VA = "0xD9EA54")]
		private void Start()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xD9F04C", Offset = "0xD9F04C", VA = "0xD9F04C")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x2000189")]
		public enum BenchmarkType
		{
			[Token(Token = "0x40007EA")]
			TMP_SDF_MOBILE,
			[Token(Token = "0x40007EB")]
			TMP_SDF__MOBILE_SSD,
			[Token(Token = "0x40007EC")]
			TMP_SDF,
			[Token(Token = "0x40007ED")]
			TMP_BITMAP_MOBILE,
			[Token(Token = "0x40007EE")]
			TEXTMESH_BITMAP
		}

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NumberOfSamples;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BenchmarkType Benchmark;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font SourceFontFile;

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xD9F05C", Offset = "0xD9F05C", VA = "0xD9F05C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xD9F060", Offset = "0xD9F060", VA = "0xD9F060")]
		private void Start()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xD9F51C", Offset = "0xD9F51C", VA = "0xD9F51C")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xD9F52C", Offset = "0xD9F52C", VA = "0xD9F52C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xD9F840", Offset = "0xD9F840", VA = "0xD9F840")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x200018C")]
		public enum CameraModes
		{
			[Token(Token = "0x400080E")]
			Follow,
			[Token(Token = "0x400080F")]
			Isometric,
			[Token(Token = "0x4000810")]
			Free
		}

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x400080B")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x400080C")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xDAD480", Offset = "0xDAD480", VA = "0xDAD480")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xDAD504", Offset = "0xDAD504", VA = "0xDAD504")]
		private void Start()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xDAD5D0", Offset = "0xDAD5D0", VA = "0xDAD5D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xDAD8E8", Offset = "0xDAD8E8", VA = "0xDAD8E8")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xDAE094", Offset = "0xDAE094", VA = "0xDAE094")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x200018E")]
		public enum MotionType
		{
			[Token(Token = "0x400081C")]
			Rotation,
			[Token(Token = "0x400081D")]
			BackAndForth,
			[Token(Token = "0x400081E")]
			Translation
		}

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x14062F0", Offset = "0x14062F0", VA = "0x14062F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1406410", Offset = "0x1406410", VA = "0x1406410")]
		private void Update()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x140654C", Offset = "0x140654C", VA = "0x140654C")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841200", Offset = "0x841200")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x170000B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000943")]
				[Address(RVA = "0xC67B40", Offset = "0xC67B40", VA = "0xC67B40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000945")]
				[Address(RVA = "0xC67B88", Offset = "0xC67B88", VA = "0xC67B88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000940")]
			[Address(RVA = "0xC679B0", Offset = "0xC679B0", VA = "0xC679B0")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000941")]
			[Address(RVA = "0xC679DC", Offset = "0xC679DC", VA = "0xC679DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000942")]
			[Address(RVA = "0xC679E0", Offset = "0xC679E0", VA = "0xC679E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000944")]
			[Address(RVA = "0xC67B48", Offset = "0xC67B48", VA = "0xC67B48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1106DA4", Offset = "0x1106DA4", VA = "0x1106DA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x1106E0C", Offset = "0x1106E0C", VA = "0x1106E0C")]
		private void Start()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x1106E38", Offset = "0x1106E38", VA = "0x1106E38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C5C8", Offset = "0x84C5C8")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x1106EA4", Offset = "0x1106EA4", VA = "0x1106EA4")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000827")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x1107754", Offset = "0x1107754", VA = "0x1107754")]
		private void Start()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x110780C", Offset = "0x110780C", VA = "0x110780C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x11078A4", Offset = "0x11078A4", VA = "0x11078A4")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x2000193")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841210", Offset = "0x841210")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400082D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400082E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400082F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4000830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4000831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4000832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x170000B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000951")]
				[Address(RVA = "0xC6840C", Offset = "0xC6840C", VA = "0xC6840C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000953")]
				[Address(RVA = "0xC68454", Offset = "0xC68454", VA = "0xC68454", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600094E")]
			[Address(RVA = "0xC67B90", Offset = "0xC67B90", VA = "0xC67B90")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600094F")]
			[Address(RVA = "0xC67BBC", Offset = "0xC67BBC", VA = "0xC67BBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000950")]
			[Address(RVA = "0xC67BC0", Offset = "0xC67BC0", VA = "0xC67BC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000952")]
			[Address(RVA = "0xC68414", Offset = "0xC68414", VA = "0xC68414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x11078AC", Offset = "0x11078AC", VA = "0x11078AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1107910", Offset = "0x1107910", VA = "0x1107910")]
		private void Start()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x11079A8", Offset = "0x11079A8", VA = "0x11079A8")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x110793C", Offset = "0x110793C", VA = "0x110793C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C678", Offset = "0x84C678")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x1107A2C", Offset = "0x1107A2C", VA = "0x1107A2C")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x2000195")]
		public enum objectType
		{
			[Token(Token = "0x4000839")]
			TextMeshPro,
			[Token(Token = "0x400083A")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4000836")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xBB2BEC", Offset = "0xBB2BEC", VA = "0xBB2BEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xBB2E04", Offset = "0xBB2E04", VA = "0xBB2E04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xBB2E9C", Offset = "0xBB2E9C", VA = "0xBB2E9C")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x2000197")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000846")]
			TopLeft,
			[Token(Token = "0x4000847")]
			BottomLeft,
			[Token(Token = "0x4000848")]
			TopRight,
			[Token(Token = "0x4000849")]
			BottomRight
		}

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000840")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xBB2EA4", Offset = "0xBB2EA4", VA = "0xBB2EA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xBB32AC", Offset = "0xBB32AC", VA = "0xBB32AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xBB32D8", Offset = "0xBB32D8", VA = "0xBB32D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xBB30A4", Offset = "0xBB30A4", VA = "0xBB30A4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xBB3438", Offset = "0xBB3438", VA = "0xBB3438")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xBB3860", Offset = "0xBB3860", VA = "0xBB3860")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xBB3B64", Offset = "0xBB3B64", VA = "0xBB3B64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xBB3E40", Offset = "0xBB3E40", VA = "0xBB3E40")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xBB4038", Offset = "0xBB4038", VA = "0xBB4038")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xBB4230", Offset = "0xBB4230", VA = "0xBB4230")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xBB4490", Offset = "0xBB4490", VA = "0xBB4490")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xBB46F0", Offset = "0xBB46F0", VA = "0xBB46F0")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xBB49AC", Offset = "0xBB49AC", VA = "0xBB49AC")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x6000964")]
		[Address(RVA = "0xBB53FC", Offset = "0xBB53FC", VA = "0xBB53FC")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xBB5404", Offset = "0xBB5404", VA = "0xBB5404")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xBB5494", Offset = "0xBB5494", VA = "0xBB5494")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xBB5BB4", Offset = "0xBB5BB4", VA = "0xBB5BB4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xBB5C38", Offset = "0xBB5C38", VA = "0xBB5C38", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xBB5CB8", Offset = "0xBB5CB8", VA = "0xBB5CB8")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4000855")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000856")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xBB5CD0", Offset = "0xBB5CD0", VA = "0xBB5CD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xBB5E5C", Offset = "0xBB5E5C", VA = "0xBB5E5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xBB5F4C", Offset = "0xBB5F4C", VA = "0xBB5F4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xBB603C", Offset = "0xBB603C", VA = "0xBB603C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xBB60DC", Offset = "0xBB60DC", VA = "0xBB60DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xBB75D4", Offset = "0xBB75D4", VA = "0xBB75D4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xBB75E0", Offset = "0xBB75E0", VA = "0xBB75E0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xBB75E8", Offset = "0xBB75E8", VA = "0xBB75E8", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xBB75EC", Offset = "0xBB75EC", VA = "0xBB75EC", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xBB6D44", Offset = "0xBB6D44", VA = "0xBB6D44")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xBB75F0", Offset = "0xBB75F0", VA = "0xBB75F0")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x200019D")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400086A")]
			TopLeft,
			[Token(Token = "0x400086B")]
			BottomLeft,
			[Token(Token = "0x400086C")]
			TopRight,
			[Token(Token = "0x400086D")]
			BottomRight
		}

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000865")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xBB7608", Offset = "0xBB7608", VA = "0xBB7608")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xBB7A4C", Offset = "0xBB7A4C", VA = "0xBB7A4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xBB7A78", Offset = "0xBB7A78", VA = "0xBB7A78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xBB7808", Offset = "0xBB7808", VA = "0xBB7808")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xBB7BD8", Offset = "0xBB7BD8", VA = "0xBB7BD8")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x200019F")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4000875")]
			TopLeft,
			[Token(Token = "0x4000876")]
			BottomLeft,
			[Token(Token = "0x4000877")]
			TopRight,
			[Token(Token = "0x4000878")]
			BottomRight
		}

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400086F")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xBB7BF0", Offset = "0xBB7BF0", VA = "0xBB7BF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xBB7E3C", Offset = "0xBB7E3C", VA = "0xBB7E3C")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xBB7F64", Offset = "0xBB7F64", VA = "0xBB7F64")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x20001A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841220", Offset = "0x841220")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400087C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400087D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400087E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x400087F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x170000B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000983")]
				[Address(RVA = "0xC68E34", Offset = "0xC68E34", VA = "0xC68E34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000985")]
				[Address(RVA = "0xC68E7C", Offset = "0xC68E7C", VA = "0xC68E7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000980")]
			[Address(RVA = "0xC68BD4", Offset = "0xC68BD4", VA = "0xC68BD4")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000981")]
			[Address(RVA = "0xC68C00", Offset = "0xC68C00", VA = "0xC68C00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000982")]
			[Address(RVA = "0xC68C04", Offset = "0xC68C04", VA = "0xC68C04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000984")]
			[Address(RVA = "0xC68E3C", Offset = "0xC68E3C", VA = "0xC68E3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xBB7F74", Offset = "0xBB7F74", VA = "0xBB7F74")]
		private void Awake()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xBB8008", Offset = "0xBB8008", VA = "0xBB8008")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C728", Offset = "0x84C728")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xBB8074", Offset = "0xBB8074", VA = "0xBB8074")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x20001A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841230", Offset = "0x841230")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4000886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4000887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4000888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4000889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x170000BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000991")]
				[Address(RVA = "0xC69998", Offset = "0xC69998", VA = "0xC69998", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000993")]
				[Address(RVA = "0xC699E0", Offset = "0xC699E0", VA = "0xC699E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600098E")]
			[Address(RVA = "0xC69804", Offset = "0xC69804", VA = "0xC69804")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600098F")]
			[Address(RVA = "0xC69830", Offset = "0xC69830", VA = "0xC69830", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000990")]
			[Address(RVA = "0xC69834", Offset = "0xC69834", VA = "0xC69834", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000992")]
			[Address(RVA = "0xC699A0", Offset = "0xC699A0", VA = "0xC699A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841240", Offset = "0x841240")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400088A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400088B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400088C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x400088D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x400088E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x400088F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4000890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x170000BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000997")]
				[Address(RVA = "0xC69C00", Offset = "0xC69C00", VA = "0xC69C00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000999")]
				[Address(RVA = "0xC69C48", Offset = "0xC69C48", VA = "0xC69C48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000994")]
			[Address(RVA = "0xC699E8", Offset = "0xC699E8", VA = "0xC699E8")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000995")]
			[Address(RVA = "0xC69A14", Offset = "0xC69A14", VA = "0xC69A14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000996")]
			[Address(RVA = "0xC69A18", Offset = "0xC69A18", VA = "0xC69A18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000998")]
			[Address(RVA = "0xC69C08", Offset = "0xC69C08", VA = "0xC69C08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xBBB404", Offset = "0xBBB404", VA = "0xBBB404")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xBBB468", Offset = "0xBBB468", VA = "0xBBB468")]
		private void Start()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xBBB510", Offset = "0xBBB510", VA = "0xBBB510")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xBBB600", Offset = "0xBBB600", VA = "0xBBB600")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xBBB6F0", Offset = "0xBBB6F0", VA = "0xBBB6F0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xBBB498", Offset = "0xBBB498", VA = "0xBBB498")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C7D8", Offset = "0x84C7D8")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xBBB6FC", Offset = "0xBBB6FC", VA = "0xBBB6FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C838", Offset = "0x84C838")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xBBB768", Offset = "0xBBB768", VA = "0xBBB768")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x20001A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841250", Offset = "0x841250")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400089B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400089C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400089D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x400089E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x400089F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x40008A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x40008A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x40008A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x40008A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x40008A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170000BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009A2")]
				[Address(RVA = "0xC6A548", Offset = "0xC6A548", VA = "0xC6A548", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009A4")]
				[Address(RVA = "0xC6A590", Offset = "0xC6A590", VA = "0xC6A590", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600099F")]
			[Address(RVA = "0xC6A0E8", Offset = "0xC6A0E8", VA = "0xC6A0E8")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xC6A114", Offset = "0xC6A114", VA = "0xC6A114", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xC6A118", Offset = "0xC6A118", VA = "0xC6A118", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0xC6A550", Offset = "0xC6A550", VA = "0xC6A550", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841260", Offset = "0x841260")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x40008AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x40008AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x40008AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x40008AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x40008AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170000C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009A8")]
				[Address(RVA = "0xC6A098", Offset = "0xC6A098", VA = "0xC6A098", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009AA")]
				[Address(RVA = "0xC6A0E0", Offset = "0xC6A0E0", VA = "0xC6A0E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009A5")]
			[Address(RVA = "0xC69C50", Offset = "0xC69C50", VA = "0xC69C50")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0xC69C7C", Offset = "0xC69C7C", VA = "0xC69C7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009A7")]
			[Address(RVA = "0xC69C80", Offset = "0xC69C80", VA = "0xC69C80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xC6A0A0", Offset = "0xC6A0A0", VA = "0xC6A0A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xBBB770", Offset = "0xBBB770", VA = "0xBBB770")]
		private void Awake()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xBBB838", Offset = "0xBBB838", VA = "0xBBB838")]
		private void Start()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xBBBC10", Offset = "0xBBBC10", VA = "0xBBBC10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C938", Offset = "0x84C938")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xBBBC7C", Offset = "0xBBBC7C", VA = "0xBBBC7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84C998", Offset = "0x84C998")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xBBBCE8", Offset = "0xBBBCE8", VA = "0xBBBCE8")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xBBBD2C", Offset = "0xBBBD2C", VA = "0xBBBD2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xBBBD30", Offset = "0xBBBD30", VA = "0xBBBD30")]
		private void Start()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xBBC050", Offset = "0xBBC050", VA = "0xBBC050")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x20001AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841270", Offset = "0x841270")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x40008B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40008B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x170000C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009B5")]
				[Address(RVA = "0x1C50B88", Offset = "0x1C50B88", VA = "0x1C50B88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009B7")]
				[Address(RVA = "0x1C50BD0", Offset = "0x1C50BD0", VA = "0x1C50BD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x1C508A0", Offset = "0x1C508A0", VA = "0x1C508A0")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x1C508CC", Offset = "0x1C508CC", VA = "0x1C508CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x1C508D0", Offset = "0x1C508D0", VA = "0x1C508D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x1C50B90", Offset = "0x1C50B90", VA = "0x1C50B90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xBBF640", Offset = "0xBBF640", VA = "0xBBF640")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xBBF694", Offset = "0xBBF694", VA = "0xBBF694")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xBBF6C0", Offset = "0xBBF6C0", VA = "0xBBF6C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84CA98", Offset = "0x84CA98")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xBBF72C", Offset = "0xBBF72C", VA = "0xBBF72C")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x20001AC")]
		private struct VertexAnim
		{
			[Token(Token = "0x40008BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x40008BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x40008C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x20001AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841280", Offset = "0x841280")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x40008C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x170000C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009C2")]
				[Address(RVA = "0x1C51440", Offset = "0x1C51440", VA = "0x1C51440", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009C4")]
				[Address(RVA = "0x1C51488", Offset = "0x1C51488", VA = "0x1C51488", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x1C50BD8", Offset = "0x1C50BD8", VA = "0x1C50BD8")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x1C50C04", Offset = "0x1C50C04", VA = "0x1C50C04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x1C50C08", Offset = "0x1C50C08", VA = "0x1C50C08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x1C51448", Offset = "0x1C51448", VA = "0x1C51448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xBBF734", Offset = "0xBBF734", VA = "0xBBF734")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xBBF788", Offset = "0xBBF788", VA = "0xBBF788")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xBBF878", Offset = "0xBBF878", VA = "0xBBF878")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xBBF968", Offset = "0xBBF968", VA = "0xBBF968")]
		private void Start()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xBBFA00", Offset = "0xBBFA00", VA = "0xBBFA00")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xBBF994", Offset = "0xBBF994", VA = "0xBBF994")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84CB48", Offset = "0x84CB48")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xBBFA88", Offset = "0xBBFA88", VA = "0xBBFA88")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x20001AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841290", Offset = "0x841290")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170000C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009CF")]
				[Address(RVA = "0x1C51E90", Offset = "0x1C51E90", VA = "0x1C51E90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009D1")]
				[Address(RVA = "0x1C51ED8", Offset = "0x1C51ED8", VA = "0x1C51ED8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x1C51490", Offset = "0x1C51490", VA = "0x1C51490")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x1C514BC", Offset = "0x1C514BC", VA = "0x1C514BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x1C514C0", Offset = "0x1C514C0", VA = "0x1C514C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x1C51E98", Offset = "0x1C51E98", VA = "0x1C51E98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xBBFAA0", Offset = "0xBBFAA0", VA = "0xBBFAA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xBBFAF4", Offset = "0xBBFAF4", VA = "0xBBFAF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xBBFBE4", Offset = "0xBBFBE4", VA = "0xBBFBE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xBBFCD4", Offset = "0xBBFCD4", VA = "0xBBFCD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xBBFD6C", Offset = "0xBBFD6C", VA = "0xBBFD6C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xBBFD00", Offset = "0xBBFD00", VA = "0xBBFD00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84CBF8", Offset = "0x84CBF8")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xBBFDE4", Offset = "0xBBFDE4", VA = "0xBBFDE4")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x20001B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412A0", Offset = "0x8412A0")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170000C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009DC")]
				[Address(RVA = "0x1C52D74", Offset = "0x1C52D74", VA = "0x1C52D74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009DE")]
				[Address(RVA = "0x1C52DBC", Offset = "0x1C52DBC", VA = "0x1C52DBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x1C51EE0", Offset = "0x1C51EE0", VA = "0x1C51EE0")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x1C51F0C", Offset = "0x1C51F0C", VA = "0x1C51F0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x1C51F10", Offset = "0x1C51F10", VA = "0x1C51F10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x1C52D7C", Offset = "0x1C52D7C", VA = "0x1C52D7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xBBFDF4", Offset = "0xBBFDF4", VA = "0xBBFDF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xBBFE48", Offset = "0xBBFE48", VA = "0xBBFE48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xBBFF38", Offset = "0xBBFF38", VA = "0xBBFF38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xBC0028", Offset = "0xBC0028", VA = "0xBC0028")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xBC00C0", Offset = "0xBC00C0", VA = "0xBC00C0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xBC0054", Offset = "0xBC0054", VA = "0xBC0054")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84CCA8", Offset = "0x84CCA8")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xBC0138", Offset = "0xBC0138", VA = "0xBC0138")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x20001B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412B0", Offset = "0x8412B0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x1C52DC4", Offset = "0x1C52DC4", VA = "0x1C52DC4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x1C52DCC", Offset = "0x1C52DCC", VA = "0x1C52DCC")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20001B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412C0", Offset = "0x8412C0")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x170000CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009EB")]
				[Address(RVA = "0x1C53A00", Offset = "0x1C53A00", VA = "0x1C53A00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009ED")]
				[Address(RVA = "0x1C53A48", Offset = "0x1C53A48", VA = "0x1C53A48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x1C52E8C", Offset = "0x1C52E8C", VA = "0x1C52E8C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x1C52EB8", Offset = "0x1C52EB8", VA = "0x1C52EB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x1C52EBC", Offset = "0x1C52EBC", VA = "0x1C52EBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x1C53A08", Offset = "0x1C53A08", VA = "0x1C53A08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xBC0150", Offset = "0xBC0150", VA = "0xBC0150")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xBC01A4", Offset = "0xBC01A4", VA = "0xBC01A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xBC0294", Offset = "0xBC0294", VA = "0xBC0294")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xBC0384", Offset = "0xBC0384", VA = "0xBC0384")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xBC041C", Offset = "0xBC041C", VA = "0xBC041C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xBC03B0", Offset = "0xBC03B0", VA = "0xBC03B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84CD58", Offset = "0x84CD58")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xBC04A4", Offset = "0xBC04A4", VA = "0xBC04A4")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20001B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8412D0", Offset = "0x8412D0")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x40008F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x40008F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x170000CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009F6")]
				[Address(RVA = "0x1C54234", Offset = "0x1C54234", VA = "0x1C54234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009F8")]
				[Address(RVA = "0x1C5427C", Offset = "0x1C5427C", VA = "0x1C5427C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x1C53A50", Offset = "0x1C53A50", VA = "0x1C53A50")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x1C53A7C", Offset = "0x1C53A7C", VA = "0x1C53A7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x1C53A80", Offset = "0x1C53A80", VA = "0x1C53A80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x1C5423C", Offset = "0x1C5423C", VA = "0x1C5423C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xBC0AB0", Offset = "0xBC0AB0", VA = "0xBC0AB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xBC0B14", Offset = "0xBC0B14", VA = "0xBC0B14")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xBC0BAC", Offset = "0xBC0BAC", VA = "0xBC0BAC")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xBC0B40", Offset = "0xBC0B40", VA = "0xBC0B40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84CE08", Offset = "0x84CE08")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xBC0C30", Offset = "0xBC0C30", VA = "0xBC0C30")]
		public WarpTextExample()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20001B7")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170000CE")]
		public bool Highlight
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0xDAFC4C", Offset = "0xDAFC4C", VA = "0xDAFC4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0xDAFC54", Offset = "0xDAFC54", VA = "0xDAFC54")]
			set
			{
			}
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xDAFC60", Offset = "0xDAFC60", VA = "0xDAFC60")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xDAFE28", Offset = "0xDAFE28", VA = "0xDAFE28", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xDAFE50", Offset = "0xDAFE50", VA = "0xDAFE50", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xDAFE78", Offset = "0xDAFE78", VA = "0xDAFE78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xDAFD28", Offset = "0xDAFD28", VA = "0xDAFD28")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xDB0110", Offset = "0xDB0110", VA = "0xDB0110")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170000CF")]
		public bool InRange
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0xCBE460", Offset = "0xCBE460", VA = "0xCBE460")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xCBE468", Offset = "0xCBE468", VA = "0xCBE468")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public bool Targeted
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0xCBE5E4", Offset = "0xCBE5E4", VA = "0xCBE5E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0xCBE5EC", Offset = "0xCBE5EC", VA = "0xCBE5EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xCBE5F8", Offset = "0xCBE5F8", VA = "0xCBE5F8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xCBE474", Offset = "0xCBE474", VA = "0xCBE474")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xCBE728", Offset = "0xCBE728", VA = "0xCBE728")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8412E0", Offset = "0x8412E0")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170000D1")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xCBE730", Offset = "0xCBE730", VA = "0xCBE730")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0xCBE738", Offset = "0xCBE738", VA = "0xCBE738")]
			set
			{
			}
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xCBE754", Offset = "0xCBE754", VA = "0xCBE754", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xCBE984", Offset = "0xCBE984", VA = "0xCBE984", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xCBF244", Offset = "0xCBF244", VA = "0xCBF244", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xCBF6BC", Offset = "0xCBF6BC", VA = "0xCBF6BC", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xCBF97C", Offset = "0xCBF97C", VA = "0xCBF97C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xCBEBD8", Offset = "0xCBEBD8", VA = "0xCBEBD8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xCBFA6C", Offset = "0xCBFA6C", VA = "0xCBFA6C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xCBFE68", Offset = "0xCBFE68", VA = "0xCBFE68", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xCBFE80", Offset = "0xCBFE80", VA = "0xCBFE80", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xCBFE88", Offset = "0xCBFE88", VA = "0xCBFE88")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xCA27A4", Offset = "0xCA27A4", VA = "0xCA27A4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xCA285C", Offset = "0xCA285C", VA = "0xCA285C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xCA2914", Offset = "0xCA2914", VA = "0xCA2914")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20001BC")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000917")]
			Disabled,
			[Token(Token = "0x4000918")]
			Enabled,
			[Token(Token = "0x4000919")]
			Targeted
		}

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xCA291C", Offset = "0xCA291C", VA = "0xCA291C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xCA2980", Offset = "0xCA2980", VA = "0xCA2980")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xCA2A1C", Offset = "0xCA2A1C", VA = "0xCA2A1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xCA2A64", Offset = "0xCA2A64", VA = "0xCA2A64")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x10F7D68", Offset = "0x10F7D68", VA = "0x10F7D68")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x10F7E54", Offset = "0x10F7E54", VA = "0x10F7E54")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x10F7E60", Offset = "0x10F7E60", VA = "0x10F7E60")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x10F7E6C", Offset = "0x10F7E6C", VA = "0x10F7E6C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xD9FF70", Offset = "0xD9FF70", VA = "0xD9FF70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xD9FFC4", Offset = "0xD9FFC4", VA = "0xD9FFC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xDA0330", Offset = "0xDA0330", VA = "0xDA0330")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xDA0434", Offset = "0xDA0434", VA = "0xDA0434")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xD9FFC8", Offset = "0xD9FFC8", VA = "0xD9FFC8")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xDA0538", Offset = "0xDA0538", VA = "0xDA0538")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20001C0")]
		public enum ContactTest
		{
			[Token(Token = "0x400092B")]
			PerpenTest,
			[Token(Token = "0x400092C")]
			BackwardsPress
		}

		[Token(Token = "0x400091D")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400091E")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170000D2")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xDA05F0", Offset = "0xDA05F0", VA = "0xDA05F0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D3")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0xDA05F8", Offset = "0xDA05F8", VA = "0xDA05F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xDA0604", Offset = "0xDA0604", VA = "0xDA0604", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xDA06F0", Offset = "0xDA06F0", VA = "0xDA06F0")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xDA08F0", Offset = "0xDA08F0", VA = "0xDA08F0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xDA0E90", Offset = "0xDA0E90", VA = "0xDA0E90")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xDA0DA8", Offset = "0xDA0DA8", VA = "0xDA0DA8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xDA0F3C", Offset = "0xDA0F3C", VA = "0xDA0F3C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xDA0FC0", Offset = "0xDA0FC0", VA = "0xDA0FC0")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xDA104C", Offset = "0xDA104C", VA = "0xDA104C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848B9C", Offset = "0x848B9C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848BAC", Offset = "0x848BAC")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170000D4")]
		public Collider Collider
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0xDA1280", Offset = "0xDA1280", VA = "0xDA1280", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CEB8", Offset = "0x84CEB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0xDA1288", Offset = "0xDA1288", VA = "0xDA1288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CEC8", Offset = "0x84CEC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0xDA1290", Offset = "0xDA1290", VA = "0xDA1290", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CED8", Offset = "0x84CED8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0xDA1298", Offset = "0xDA1298", VA = "0xDA1298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CEE8", Offset = "0x84CEE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0xDA12A0", Offset = "0xDA12A0", VA = "0xDA12A0", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xDA12F0", Offset = "0xDA12F0", VA = "0xDA12F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xDA1374", Offset = "0xDA1374", VA = "0xDA1374")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public interface ColliderZone
	{
		[Token(Token = "0x170000D7")]
		Collider Collider
		{
			[Token(Token = "0x6000A37")]
			get;
		}

		[Token(Token = "0x170000D8")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000A38")]
			get;
		}

		[Token(Token = "0x170000D9")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000A39")]
			get;
		}
	}
	[Token(Token = "0x20001C3")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xDA0850", Offset = "0xDA0850", VA = "0xDA0850")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public enum InteractionType
	{
		[Token(Token = "0x4000935")]
		Enter,
		[Token(Token = "0x4000936")]
		Stay,
		[Token(Token = "0x4000937")]
		Exit
	}
	[Token(Token = "0x20001C5")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20001C6")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000949")]
			Mesh,
			[Token(Token = "0x400094A")]
			Skeleton,
			[Token(Token = "0x400094B")]
			Both
		}

		[Token(Token = "0x20001C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841340", Offset = "0x841340")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400094C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400094D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400094E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A5C")]
				[Address(RVA = "0xC612AC", Offset = "0xC612AC", VA = "0xC612AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A5E")]
				[Address(RVA = "0xC612F4", Offset = "0xC612F4", VA = "0xC612F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A59")]
			[Address(RVA = "0xC6104C", Offset = "0xC6104C", VA = "0xC6104C")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0xC61078", Offset = "0xC61078", VA = "0xC61078", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0xC6107C", Offset = "0xC6107C", VA = "0xC6107C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0xC612B4", Offset = "0xC612B4", VA = "0xC612B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000938")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848BDC", Offset = "0x848BDC")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170000DA")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0xCA4490", Offset = "0xCA4490", VA = "0xCA4490")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0xCA44C8", Offset = "0xCA44C8", VA = "0xCA44C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0xCA4530", Offset = "0xCA4530", VA = "0xCA4530")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0xCA4568", Offset = "0xCA4568", VA = "0xCA4568")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0xCA45D0", Offset = "0xCA45D0", VA = "0xCA45D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0xCA4608", Offset = "0xCA4608", VA = "0xCA4608")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0xCA4670", Offset = "0xCA4670", VA = "0xCA4670")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0xCA46A8", Offset = "0xCA46A8", VA = "0xCA46A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0xCA4710", Offset = "0xCA4710", VA = "0xCA4710")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0xCA4748", Offset = "0xCA4748", VA = "0xCA4748")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xCA47B0", Offset = "0xCA47B0", VA = "0xCA47B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0xCA47E4", Offset = "0xCA47E4", VA = "0xCA47E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0xCA4848", Offset = "0xCA4848", VA = "0xCA4848")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0xCA487C", Offset = "0xCA487C", VA = "0xCA487C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0xCA48E0", Offset = "0xCA48E0", VA = "0xCA48E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xCA4914", Offset = "0xCA4914", VA = "0xCA4914")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xCA4978", Offset = "0xCA4978", VA = "0xCA4978")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xCA49AC", Offset = "0xCA49AC", VA = "0xCA49AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0xCA4A10", Offset = "0xCA4A10", VA = "0xCA4A10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0xCA4A44", Offset = "0xCA4A44", VA = "0xCA4A44")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xCA4AA8", Offset = "0xCA4AA8", VA = "0xCA4AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CEF8", Offset = "0x84CEF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0xCA4AF4", Offset = "0xCA4AF4", VA = "0xCA4AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CF08", Offset = "0x84CF08")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xCA4B44", Offset = "0xCA4B44", VA = "0xCA4B44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xCA4EEC", Offset = "0xCA4EEC", VA = "0xCA4EEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xCA4E80", Offset = "0xCA4E80", VA = "0xCA4E80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84CF18", Offset = "0x84CF18")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xCA4F74", Offset = "0xCA4F74", VA = "0xCA4F74")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xCA5058", Offset = "0xCA5058", VA = "0xCA5058")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xCA5238", Offset = "0xCA5238", VA = "0xCA5238")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xCA5474", Offset = "0xCA5474", VA = "0xCA5474")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xCA5600", Offset = "0xCA5600", VA = "0xCA5600")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001C9")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0xC612FC", Offset = "0xC612FC", VA = "0xC612FC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170000E7")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0xCA598C", Offset = "0xCA598C", VA = "0xCA598C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0xCA5994", Offset = "0xCA5994", VA = "0xCA5994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0xCA599C", Offset = "0xCA599C", VA = "0xCA599C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0xCA59A4", Offset = "0xCA59A4", VA = "0xCA59A4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0xCA59AC", Offset = "0xCA59AC", VA = "0xCA59AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CFC8", Offset = "0x84CFC8")]
			add
			{
			}
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0xCA5A4C", Offset = "0xCA5A4C", VA = "0xCA5A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CFD8", Offset = "0x84CFD8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0xCA5B5C", Offset = "0xCA5B5C", VA = "0xCA5B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CFE8", Offset = "0x84CFE8")]
			add
			{
			}
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xCA5BFC", Offset = "0xCA5BFC", VA = "0xCA5BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CFF8", Offset = "0x84CFF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xCA5D0C", Offset = "0xCA5D0C", VA = "0xCA5D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D008", Offset = "0x84D008")]
			add
			{
			}
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xCA5DAC", Offset = "0xCA5DAC", VA = "0xCA5DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D018", Offset = "0x84D018")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xCA5AEC", Offset = "0xCA5AEC", VA = "0xCA5AEC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xCA5C9C", Offset = "0xCA5C9C", VA = "0xCA5C9C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xCA5E4C", Offset = "0xCA5E4C", VA = "0xCA5E4C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000A6C")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xCA5EBC", Offset = "0xCA5EBC", VA = "0xCA5EBC", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xCA5FE8", Offset = "0xCA5FE8", VA = "0xCA5FE8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xCA6114", Offset = "0xCA6114", VA = "0xCA6114")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000957")]
		None,
		[Token(Token = "0x4000958")]
		Proximity,
		[Token(Token = "0x4000959")]
		Contact,
		[Token(Token = "0x400095A")]
		Action
	}
	[Token(Token = "0x20001CB")]
	public enum InteractableState
	{
		[Token(Token = "0x400095C")]
		Default,
		[Token(Token = "0x400095D")]
		ProximityState,
		[Token(Token = "0x400095E")]
		ContactState,
		[Token(Token = "0x400095F")]
		ActionState
	}
	[Token(Token = "0x20001CC")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xCA6254", Offset = "0xCA6254", VA = "0xCA6254")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170000EB")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0xCA6160", Offset = "0xCA6160", VA = "0xCA6160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xCA5F1C", Offset = "0xCA5F1C", VA = "0xCA5F1C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xCA6048", Offset = "0xCA6048", VA = "0xCA6048")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xCA61C4", Offset = "0xCA61C4", VA = "0xCA61C4")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20001CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841350", Offset = "0x841350")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170000EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A7F")]
				[Address(RVA = "0xC617E4", Offset = "0xC617E4", VA = "0xC617E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A81")]
				[Address(RVA = "0xC6182C", Offset = "0xC6182C", VA = "0xC6182C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xC61348", Offset = "0xC61348", VA = "0xC61348")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0xC61374", Offset = "0xC61374", VA = "0xC61374", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xC613E4", Offset = "0xC613E4", VA = "0xC613E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xC61390", Offset = "0xC61390", VA = "0xC61390")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xC617EC", Offset = "0xC617EC", VA = "0xC617EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xCA6F40", Offset = "0xCA6F40", VA = "0xCA6F40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xCA6FBC", Offset = "0xCA6FBC", VA = "0xCA6FBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D028", Offset = "0x84D028")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xCA7044", Offset = "0xCA7044", VA = "0xCA7044")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xCA712C", Offset = "0xCA712C", VA = "0xCA712C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170000EE")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xCA7134", Offset = "0xCA7134", VA = "0xCA7134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xCA72B0", Offset = "0xCA72B0", VA = "0xCA72B0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xCA7358", Offset = "0xCA7358", VA = "0xCA7358")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xCA7400", Offset = "0xCA7400", VA = "0xCA7400")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xCA76AC", Offset = "0xCA76AC", VA = "0xCA76AC")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xCA76F4", Offset = "0xCA76F4", VA = "0xCA76F4")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xCA7988", Offset = "0xCA7988", VA = "0xCA7988")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xCA7AD4", Offset = "0xCA7AD4", VA = "0xCA7AD4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20001D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841360", Offset = "0x841360")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170000F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A9B")]
				[Address(RVA = "0xC604D4", Offset = "0xC604D4", VA = "0xC604D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A9D")]
				[Address(RVA = "0xC6051C", Offset = "0xC6051C", VA = "0xC6051C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xC600C0", Offset = "0xC600C0", VA = "0xC600C0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xC600EC", Offset = "0xC600EC", VA = "0xC600EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xC600F0", Offset = "0xC600F0", VA = "0xC600F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0xC604DC", Offset = "0xC604DC", VA = "0xC604DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000978")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170000EF")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x134B41C", Offset = "0x134B41C", VA = "0x134B41C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000F0")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x134B424", Offset = "0x134B424", VA = "0x134B424", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000F1")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x134B42C", Offset = "0x134B42C", VA = "0x134B42C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F2")]
		public override bool EnableState
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x134B434", Offset = "0x134B434", VA = "0x134B434", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x134B460", Offset = "0x134B460", VA = "0x134B460", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x134B49C", Offset = "0x134B49C", VA = "0x134B49C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x134B53C", Offset = "0x134B53C", VA = "0x134B53C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D0D8", Offset = "0x84D0D8")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x134B5A8", Offset = "0x134B5A8", VA = "0x134B5A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x134B848", Offset = "0x134B848", VA = "0x134B848")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x134B9D4", Offset = "0x134B9D4", VA = "0x134B9D4")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x134BACC", Offset = "0x134BACC", VA = "0x134BACC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x134BDC4", Offset = "0x134BDC4", VA = "0x134BDC4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x134BDC8", Offset = "0x134BDC8", VA = "0x134BDC8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x134BDCC", Offset = "0x134BDCC", VA = "0x134BDCC")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848C6C", Offset = "0x848C6C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848C7C", Offset = "0x848C7C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848C8C", Offset = "0x848C8C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170000F5")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x134BDE4", Offset = "0x134BDE4", VA = "0x134BDE4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D188", Offset = "0x84D188")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x134BDEC", Offset = "0x134BDEC", VA = "0x134BDEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D198", Offset = "0x84D198")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public bool EnableState
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x134BDF4", Offset = "0x134BDF4", VA = "0x134BDF4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x134BE10", Offset = "0x134BE10", VA = "0x134BE10", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x134BE30", Offset = "0x134BE30", VA = "0x134BE30", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D1A8", Offset = "0x84D1A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x134BE38", Offset = "0x134BE38", VA = "0x134BE38", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D1B8", Offset = "0x84D1B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public float SphereRadius
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x134BE44", Offset = "0x134BE44", VA = "0x134BE44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D1C8", Offset = "0x84D1C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x134BE4C", Offset = "0x134BE4C", VA = "0x134BE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D1D8", Offset = "0x84D1D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x134BE54", Offset = "0x134BE54", VA = "0x134BE54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x134BE9C", Offset = "0x134BE9C", VA = "0x134BE9C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x134BEA0", Offset = "0x134BEA0", VA = "0x134BEA0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400098B")]
		None = 0,
		[Token(Token = "0x400098C")]
		Ray = 1,
		[Token(Token = "0x400098D")]
		Poke = 4,
		[Token(Token = "0x400098E")]
		All = -1
	}
	[Token(Token = "0x20001D5")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000990")]
		Inactive,
		[Token(Token = "0x4000991")]
		PrimaryInputDown,
		[Token(Token = "0x4000992")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000993")]
		PrimaryInputUp
	}
	[Token(Token = "0x20001D6")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xCA611C", Offset = "0xCA611C", VA = "0xCA611C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848C9C", Offset = "0x848C9C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848CAC", Offset = "0x848CAC")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848CBC", Offset = "0x848CBC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170000F9")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0xCA62F4", Offset = "0xCA62F4", VA = "0xCA62F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0xCA62FC", Offset = "0xCA62FC", VA = "0xCA62FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D1E8", Offset = "0x84D1E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0xCA6304", Offset = "0xCA6304", VA = "0xCA6304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D1F8", Offset = "0x84D1F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000AAD")]
			get;
		}

		[Token(Token = "0x170000FC")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000AAE")]
			get;
		}

		[Token(Token = "0x170000FD")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000AAF")]
			get;
		}

		[Token(Token = "0x170000FE")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0xCA6310", Offset = "0xCA6310", VA = "0xCA6310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D208", Offset = "0x84D208")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0xCA631C", Offset = "0xCA631C", VA = "0xCA631C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D218", Offset = "0x84D218")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0xCA6328", Offset = "0xCA6328", VA = "0xCA6328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D228", Offset = "0x84D228")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0xCA6334", Offset = "0xCA6334", VA = "0xCA6334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D238", Offset = "0x84D238")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000AB8")]
			get;
			[Token(Token = "0x6000AB9")]
			set;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xCA6340", Offset = "0xCA6340", VA = "0xCA6340")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000AB5")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000AB6")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000AB7")]
		public abstract void DeFocus();

		[Token(Token = "0x6000ABA")]
		public abstract void Initialize();

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xCA6348", Offset = "0xCA6348", VA = "0xCA6348")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xCA6394", Offset = "0xCA6394", VA = "0xCA6394")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xCA63E8", Offset = "0xCA63E8", VA = "0xCA63E8", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xCA667C", Offset = "0xCA667C", VA = "0xCA667C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xCA6DF8", Offset = "0xCA6DF8", VA = "0xCA6DF8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000101")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000AC0")]
			get;
		}

		[Token(Token = "0x17000102")]
		bool EnableState
		{
			[Token(Token = "0x6000AC2")]
			get;
			[Token(Token = "0x6000AC3")]
			set;
		}

		[Token(Token = "0x17000103")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000AC4")]
			get;
			[Token(Token = "0x6000AC5")]
			set;
		}

		[Token(Token = "0x6000AC1")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20001D9")]
	public class PinchStateModule
	{
		[Token(Token = "0x20001DA")]
		private enum PinchState
		{
			[Token(Token = "0x40009A4")]
			None,
			[Token(Token = "0x40009A5")]
			PinchDown,
			[Token(Token = "0x40009A6")]
			PinchStay,
			[Token(Token = "0x40009A7")]
			PinchUp
		}

		[Token(Token = "0x40009A0")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000104")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x10F7E74", Offset = "0x10F7E74", VA = "0x10F7E74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000105")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x10F7EFC", Offset = "0x10F7EFC", VA = "0x10F7EFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x10F7F84", Offset = "0x10F7F84", VA = "0x10F7F84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x10F800C", Offset = "0x10F800C", VA = "0x10F800C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x10F8038", Offset = "0x10F8038", VA = "0x10F8038")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40009A8")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40009A9")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40009AA")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40009AB")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40009AC")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x848CDC", Offset = "0x848CDC")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000107")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x10F9218", Offset = "0x10F9218", VA = "0x10F9218", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000108")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x10F9220", Offset = "0x10F9220", VA = "0x10F9220", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000109")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x10F9288", Offset = "0x10F9288", VA = "0x10F9288", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010A")]
		public override bool EnableState
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x10F9290", Offset = "0x10F9290", VA = "0x10F9290", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x10F92D4", Offset = "0x10F92D4", VA = "0x10F92D4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x10F9348", Offset = "0x10F9348", VA = "0x10F9348", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x10F93A8", Offset = "0x10F93A8", VA = "0x10F93A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x10F944C", Offset = "0x10F944C", VA = "0x10F944C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x10F9704", Offset = "0x10F9704", VA = "0x10F9704")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x10F978C", Offset = "0x10F978C", VA = "0x10F978C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x10F9B34", Offset = "0x10F9B34", VA = "0x10F9B34")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x10F9C44", Offset = "0x10F9C44", VA = "0x10F9C44")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x10F9D68", Offset = "0x10F9D68", VA = "0x10F9D68")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x10FA06C", Offset = "0x10FA06C", VA = "0x10FA06C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x10FA400", Offset = "0x10FA400", VA = "0x10FA400", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x10FA4D0", Offset = "0x10FA4D0", VA = "0x10FA4D0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x10FA504", Offset = "0x10FA504", VA = "0x10FA504")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009B8")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40009B9")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848D50", Offset = "0x848D50")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700010B")]
		public bool EnableState
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x10F92B8", Offset = "0x10F92B8", VA = "0x10F92B8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x10F92F0", Offset = "0x10F92F0", VA = "0x10F92F0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x10FA5D4", Offset = "0x10FA5D4", VA = "0x10FA5D4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x10F96C8", Offset = "0x10F96C8", VA = "0x10F96C8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x10FA818", Offset = "0x10FA818", VA = "0x10FA818", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D248", Offset = "0x84D248")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x10FA820", Offset = "0x10FA820", VA = "0x10FA820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D258", Offset = "0x84D258")]
			set
			{
			}
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x10FA5DC", Offset = "0x10FA5DC", VA = "0x10FA5DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x10FA434", Offset = "0x10FA434", VA = "0x10FA434", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x10FA828", Offset = "0x10FA828", VA = "0x10FA828")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x10FAA9C", Offset = "0x10FAA9C", VA = "0x10FAA9C")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x10FAB8C", Offset = "0x10FAB8C", VA = "0x10FAB8C")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700010E")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0xCBFEA8", Offset = "0xCBFEA8", VA = "0xCBFEA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0xCBFEB0", Offset = "0xCBFEB0", VA = "0xCBFEB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0xCBFF38", Offset = "0xCBFF38", VA = "0xCBFF38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0xCBFF40", Offset = "0xCBFF40", VA = "0xCBFF40")]
			set
			{
			}
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xCBFFAC", Offset = "0xCBFFAC", VA = "0xCBFFAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xCC0260", Offset = "0xCC0260", VA = "0xCC0260")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xCC0270", Offset = "0xCC0270", VA = "0xCC0270")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xCC0280", Offset = "0xCC0280", VA = "0xCC0280")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xCB8BD8", Offset = "0xCB8BD8", VA = "0xCB8BD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xCB8BDC", Offset = "0xCB8BDC", VA = "0xCB8BDC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xCB8C14", Offset = "0xCB8C14", VA = "0xCB8C14")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xCB8C4C", Offset = "0xCB8C4C", VA = "0xCB8C4C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xCB8C84", Offset = "0xCB8C84", VA = "0xCB8C84")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xCB8CBC", Offset = "0xCB8CBC", VA = "0xCB8CBC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xCB8CF4", Offset = "0xCB8CF4", VA = "0xCB8CF4")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xCB8D2C", Offset = "0xCB8D2C", VA = "0xCB8D2C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xCB8DA0", Offset = "0xCB8DA0", VA = "0xCB8DA0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xCB8E10", Offset = "0xCB8E10", VA = "0xCB8E10")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xCB8E18", Offset = "0xCB8E18", VA = "0xCB8E18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xCB8E1C", Offset = "0xCB8E1C", VA = "0xCB8E1C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xCB8DD4", Offset = "0xCB8DD4", VA = "0xCB8DD4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xCB8E5C", Offset = "0xCB8E5C", VA = "0xCB8E5C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20001E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841380", Offset = "0x841380")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B05")]
				[Address(RVA = "0xC67790", Offset = "0xC67790", VA = "0xC67790", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B07")]
				[Address(RVA = "0xC677D8", Offset = "0xC677D8", VA = "0xC677D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xC675B4", Offset = "0xC675B4", VA = "0xC675B4")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xC675E0", Offset = "0xC675E0", VA = "0xC675E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xC675E4", Offset = "0xC675E4", VA = "0xC675E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xC67798", Offset = "0xC67798", VA = "0xC67798", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009C9")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40009CA")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x10F79DC", Offset = "0x10F79DC", VA = "0x10F79DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x10F7A7C", Offset = "0x10F7A7C", VA = "0x10F7A7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x10F7CB0", Offset = "0x10F7CB0", VA = "0x10F7CB0")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x10F7C44", Offset = "0x10F7C44", VA = "0x10F7C44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D268", Offset = "0x84D268")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x10F7CFC", Offset = "0x10F7CFC", VA = "0x10F7CFC")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20001E3")]
		public enum SelectionState
		{
			[Token(Token = "0x40009E0")]
			Off,
			[Token(Token = "0x40009E1")]
			Selected,
			[Token(Token = "0x40009E2")]
			Highlighted
		}

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000112")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x11068F0", Offset = "0x11068F0", VA = "0x11068F0")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x11068F8", Offset = "0x11068F8", VA = "0x11068F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1106A7C", Offset = "0x1106A7C", VA = "0x1106A7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1106C44", Offset = "0x1106C44", VA = "0x1106C44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1106980", Offset = "0x1106980", VA = "0x1106980")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1106D30", Offset = "0x1106D30", VA = "0x1106D30")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20001E5")]
		public enum SegmentType
		{
			[Token(Token = "0x40009F1")]
			Straight,
			[Token(Token = "0x40009F2")]
			LeftTurn,
			[Token(Token = "0x40009F3")]
			RightTurn,
			[Token(Token = "0x40009F4")]
			Switch
		}

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40009E9")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40009EA")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848E30", Offset = "0x848E30")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000113")]
		public float StartDistance
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0xBBC3F0", Offset = "0xBBC3F0", VA = "0xBBC3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D318", Offset = "0x84D318")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0xBBC3F8", Offset = "0xBBC3F8", VA = "0xBBC3F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D328", Offset = "0x84D328")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public float GridSize
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0xBBC400", Offset = "0xBBC400", VA = "0xBBC400")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xBBC408", Offset = "0xBBC408", VA = "0xBBC408")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public int SubDivCount
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xBBC410", Offset = "0xBBC410", VA = "0xBBC410")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0xBBC418", Offset = "0xBBC418", VA = "0xBBC418")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public SegmentType Type
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0xBBC420", Offset = "0xBBC420", VA = "0xBBC420")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000117")]
		public Pose EndPose
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xBBC428", Offset = "0xBBC428", VA = "0xBBC428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public float Radius
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xBBC784", Offset = "0xBBC784", VA = "0xBBC784")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000119")]
		public float SegmentLength
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xBBC490", Offset = "0xBBC490", VA = "0xBBC490")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xBBC794", Offset = "0xBBC794", VA = "0xBBC794")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xBBC7AC", Offset = "0xBBC7AC", VA = "0xBBC7AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xBBC4D0", Offset = "0xBBC4D0", VA = "0xBBC4D0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xBBC7B0", Offset = "0xBBC7B0", VA = "0xBBC7B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xBBC7B4", Offset = "0xBBC7B4", VA = "0xBBC7B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xBBC81C", Offset = "0xBBC81C", VA = "0xBBC81C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xBBD0E4", Offset = "0xBBD0E4", VA = "0xBBD0E4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xBBD370", Offset = "0xBBD370", VA = "0xBBD370")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20001E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841390", Offset = "0x841390")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700011A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B2F")]
				[Address(RVA = "0x1C50300", Offset = "0x1C50300", VA = "0x1C50300", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B31")]
				[Address(RVA = "0x1C50348", Offset = "0x1C50348", VA = "0x1C50348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x1C5016C", Offset = "0x1C5016C", VA = "0x1C5016C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x1C50198", Offset = "0x1C50198", VA = "0x1C50198", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x1C5019C", Offset = "0x1C5019C", VA = "0x1C5019C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x1C50308", Offset = "0x1C50308", VA = "0x1C50308", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F5")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40009F6")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xBBD41C", Offset = "0xBBD41C", VA = "0xBBD41C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xBBD4C4", Offset = "0xBBD4C4", VA = "0xBBD4C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xBBD574", Offset = "0xBBD574", VA = "0xBBD574")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xBBD6EC", Offset = "0xBBD6EC", VA = "0xBBD6EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xBBD8B4", Offset = "0xBBD8B4", VA = "0xBBD8B4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xBBD99C", Offset = "0xBBD99C", VA = "0xBBD99C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xBBDBA0", Offset = "0xBBDBA0", VA = "0xBBDBA0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xBBDAB0", Offset = "0xBBDAB0", VA = "0xBBDAB0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xBBDAC4", Offset = "0xBBDAC4", VA = "0xBBDAC4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xBBDBF8", Offset = "0xBBDBF8", VA = "0xBBDBF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D338", Offset = "0x84D338")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xBBDC64", Offset = "0xBBDC64", VA = "0xBBDC64")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700011C")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0xBBDD14", Offset = "0xBBDD14", VA = "0xBBDD14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xBBDD24", Offset = "0xBBDD24", VA = "0xBBDD24", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xBBDD2C", Offset = "0xBBDD2C", VA = "0xBBDD2C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xBBE070", Offset = "0xBBE070", VA = "0xBBE070")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000A0E")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000A0F")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x848F30", Offset = "0x848F30")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700011D")]
		public float Distance
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0xBBE168", Offset = "0xBBE168", VA = "0xBBE168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D3E8", Offset = "0x84D3E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0xBBE170", Offset = "0xBBE170", VA = "0xBBE170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D3F8", Offset = "0x84D3F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public float Scale
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0xBBE178", Offset = "0xBBE178", VA = "0xBBE178")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0xBBE180", Offset = "0xBBE180", VA = "0xBBE180")]
			set
			{
			}
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xBBDD28", Offset = "0xBBDD28", VA = "0xBBDD28", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xBBE188", Offset = "0xBBE188", VA = "0xBBE188")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xBBDD74", Offset = "0xBBDD74", VA = "0xBBDD74")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xBBDF98", Offset = "0xBBDF98", VA = "0xBBDF98")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000B3E")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xBBE0DC", Offset = "0xBBE0DC", VA = "0xBBE0DC")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20001EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8413A0", Offset = "0x8413A0")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700011F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B4D")]
				[Address(RVA = "0x1C505A8", Offset = "0x1C505A8", VA = "0x1C505A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000120")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B4F")]
				[Address(RVA = "0x1C505F0", Offset = "0x1C505F0", VA = "0x1C505F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x1C50350", Offset = "0x1C50350", VA = "0x1C50350")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x1C5037C", Offset = "0x1C5037C", VA = "0x1C5037C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x1C50380", Offset = "0x1C50380", VA = "0x1C50380", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x1C505B0", Offset = "0x1C505B0", VA = "0x1C505B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xBBE328", Offset = "0xBBE328", VA = "0xBBE328")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xBBE374", Offset = "0xBBE374", VA = "0xBBE374")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xBBE47C", Offset = "0xBBE47C", VA = "0xBBE47C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xBBE5DC", Offset = "0xBBE5DC", VA = "0xBBE5DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xBBE4D8", Offset = "0xBBE4D8", VA = "0xBBE4D8")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xBBE6B8", Offset = "0xBBE6B8", VA = "0xBBE6B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D408", Offset = "0x84D408")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xBBE734", Offset = "0xBBE734", VA = "0xBBE734")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xBBE7E0", Offset = "0xBBE7E0", VA = "0xBBE7E0")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xBBE840", Offset = "0xBBE840", VA = "0xBBE840")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20001ED")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000A4C")]
			Start,
			[Token(Token = "0x4000A4D")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000A4E")]
			Stop
		}

		[Token(Token = "0x20001EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8413B0", Offset = "0x8413B0")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000121")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B62")]
				[Address(RVA = "0x1C50850", Offset = "0x1C50850", VA = "0x1C50850", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000122")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B64")]
				[Address(RVA = "0x1C50898", Offset = "0x1C50898", VA = "0x1C50898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x1C505F8", Offset = "0x1C505F8", VA = "0x1C505F8")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000B60")]
			[Address(RVA = "0x1C50624", Offset = "0x1C50624", VA = "0x1C50624", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B61")]
			[Address(RVA = "0x1C50628", Offset = "0x1C50628", VA = "0x1C50628", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x1C50858", Offset = "0x1C50858", VA = "0x1C50858", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A2E")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000A2F")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000A30")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000A31")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x848F90", Offset = "0x848F90")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xBBE89C", Offset = "0xBBE89C", VA = "0xBBE89C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xBBE9F0", Offset = "0xBBE9F0", VA = "0xBBE9F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xBBE9FC", Offset = "0xBBE9FC", VA = "0xBBE9FC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xBBEB4C", Offset = "0xBBEB4C", VA = "0xBBEB4C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xBBE970", Offset = "0xBBE970", VA = "0xBBE970")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D4B8", Offset = "0x84D4B8")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xBBEB98", Offset = "0xBBEB98", VA = "0xBBEB98")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xBBEAE8", Offset = "0xBBEAE8", VA = "0xBBEAE8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xBBEDB4", Offset = "0xBBEDB4", VA = "0xBBEDB4")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xBBEEF0", Offset = "0xBBEEF0", VA = "0xBBEEF0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xBBEE20", Offset = "0xBBEE20", VA = "0xBBEE20")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xBBEF5C", Offset = "0xBBEF5C", VA = "0xBBEF5C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xBBEF7C", Offset = "0xBBEF7C", VA = "0xBBEF7C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xBBF008", Offset = "0xBBF008", VA = "0xBBF008")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xBBF0C0", Offset = "0xBBF0C0", VA = "0xBBF0C0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xBBF0D0", Offset = "0xBBF0D0", VA = "0xBBF0D0")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000123")]
		public float TrackLength
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xBBF138", Offset = "0xBBF138", VA = "0xBBF138")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0xBBF140", Offset = "0xBBF140", VA = "0xBBF140")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xBBF148", Offset = "0xBBF148", VA = "0xBBF148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xBBE208", Offset = "0xBBE208", VA = "0xBBE208")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xBBF14C", Offset = "0xBBF14C", VA = "0xBBF14C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xBBF34C", Offset = "0xBBF34C", VA = "0xBBF34C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xBBF448", Offset = "0xBBF448", VA = "0xBBF448")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class Pose
	{
		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x10F8C8C", Offset = "0x10F8C8C", VA = "0x10F8C8C")]
		public Pose()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x10F8CD0", Offset = "0x10F8CD0", VA = "0x10F8CD0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20001F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8413C0", Offset = "0x8413C0")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000125")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B7A")]
				[Address(RVA = "0x1C5442C", Offset = "0x1C5442C", VA = "0x1C5442C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000126")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B7C")]
				[Address(RVA = "0x1C54474", Offset = "0x1C54474", VA = "0x1C54474", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x1C54284", Offset = "0x1C54284", VA = "0x1C54284")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x1C542B0", Offset = "0x1C542B0", VA = "0x1C542B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x1C542B4", Offset = "0x1C542B4", VA = "0x1C542B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x1C54434", Offset = "0x1C54434", VA = "0x1C54434", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8413D0", Offset = "0x8413D0")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000127")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B80")]
				[Address(RVA = "0x1C54578", Offset = "0x1C54578", VA = "0x1C54578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000128")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B82")]
				[Address(RVA = "0x1C545C0", Offset = "0x1C545C0", VA = "0x1C545C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x1C5447C", Offset = "0x1C5447C", VA = "0x1C5447C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x1C544A8", Offset = "0x1C544A8", VA = "0x1C544A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x1C544AC", Offset = "0x1C544AC", VA = "0x1C544AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x1C54580", Offset = "0x1C54580", VA = "0x1C54580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A61")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849178", Offset = "0x849178")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000124")]
		public bool IsMoving
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xBC0E70", Offset = "0xBC0E70", VA = "0xBC0E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D568", Offset = "0x84D568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xBC0E78", Offset = "0xBC0E78", VA = "0xBC0E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D578", Offset = "0x84D578")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xBC0E84", Offset = "0xBC0E84", VA = "0xBC0E84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xBC0EC0", Offset = "0xBC0EC0", VA = "0xBC0EC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xBC0FA4", Offset = "0xBC0FA4", VA = "0xBC0FA4")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xBC100C", Offset = "0xBC100C", VA = "0xBC100C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D588", Offset = "0x84D588")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xBC1088", Offset = "0xBC1088", VA = "0xBC1088")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D5E8", Offset = "0x84D5E8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xBC1118", Offset = "0xBC1118", VA = "0xBC1118")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xBC1184", Offset = "0xBC1184", VA = "0xBC1184")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xBC118C", Offset = "0xBC118C", VA = "0xBC118C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xBC11F0", Offset = "0xBC11F0", VA = "0xBC11F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xBC12D4", Offset = "0xBC12D4", VA = "0xBC12D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xBC140C", Offset = "0xBC140C", VA = "0xBC140C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xBC1488", Offset = "0xBC1488", VA = "0xBC1488")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xBC1564", Offset = "0xBC1564", VA = "0xBC1564")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000A7E")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000A7F")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000A80")]
		EUDT_None,
		[Token(Token = "0x4000A81")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20001F6")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20001F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8413E0", Offset = "0x8413E0")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000129")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B9C")]
				[Address(RVA = "0xC65CD8", Offset = "0xC65CD8", VA = "0xC65CD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B9E")]
				[Address(RVA = "0xC65D20", Offset = "0xC65D20", VA = "0xC65D20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xC65AC4", Offset = "0xC65AC4", VA = "0xC65AC4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xC65AF0", Offset = "0xC65AF0", VA = "0xC65AF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xC65AF4", Offset = "0xC65AF4", VA = "0xC65AF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xC65CE0", Offset = "0xC65CE0", VA = "0xC65CE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000A83")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000A84")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000A85")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8491B8", Offset = "0x8491B8")]
		public GameObject mainCamera;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8491F0", Offset = "0x8491F0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x14048AC", Offset = "0x14048AC", VA = "0x14048AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x14050D4", Offset = "0x14050D4", VA = "0x14050D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x140521C", Offset = "0x140521C", VA = "0x140521C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x140534C", Offset = "0x140534C", VA = "0x140534C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x140547C", Offset = "0x140547C", VA = "0x140547C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x14051F0", Offset = "0x14051F0", VA = "0x14051F0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x140555C", Offset = "0x140555C", VA = "0x140555C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84D6E8", Offset = "0x84D6E8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x14055C8", Offset = "0x14055C8", VA = "0x14055C8")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1404CEC", Offset = "0x1404CEC", VA = "0x1404CEC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x140571C", Offset = "0x140571C", VA = "0x140571C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x14055FC", Offset = "0x14055FC", VA = "0x14055FC")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1405A34", Offset = "0x1405A34", VA = "0x1405A34")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1405B24", Offset = "0x1405B24", VA = "0x1405B24")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1405BA8", Offset = "0x1405BA8", VA = "0x1405BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D748", Offset = "0x84D748")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1405C00", Offset = "0x1405C00", VA = "0x1405C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D758", Offset = "0x84D758")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1405C58", Offset = "0x1405C58", VA = "0x1405C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D768", Offset = "0x84D768")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8413F0", Offset = "0x8413F0")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841450", Offset = "0x841450")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0xC60E78", Offset = "0xC60E78", VA = "0xC60E78")]
			public <>c()
			{
			}

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xC60E80", Offset = "0xC60E80", VA = "0xC60E80")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A9D")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000A9E")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000A9F")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000AA0")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000AA1")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000AA2")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000AA3")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000AA4")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000AA5")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000AA6")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000AA7")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xCA324C", Offset = "0xCA324C", VA = "0xCA324C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xCA32A0", Offset = "0xCA32A0", VA = "0xCA32A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xCA3714", Offset = "0xCA3714", VA = "0xCA3714")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xCA3800", Offset = "0xCA3800", VA = "0xCA3800")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xCA3964", Offset = "0xCA3964", VA = "0xCA3964")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xCA3C6C", Offset = "0xCA3C6C", VA = "0xCA3C6C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xCA3D64", Offset = "0xCA3D64", VA = "0xCA3D64")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xCA3EC4", Offset = "0xCA3EC4", VA = "0xCA3EC4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xCA39FC", Offset = "0xCA39FC", VA = "0xCA39FC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xCA3A50", Offset = "0xCA3A50", VA = "0xCA3A50")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xCA35B8", Offset = "0xCA35B8", VA = "0xCA35B8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xCA4000", Offset = "0xCA4000", VA = "0xCA4000")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000ABC")]
		Default,
		[Token(Token = "0x4000ABD")]
		Generic,
		[Token(Token = "0x4000ABE")]
		PingPongBall,
		[Token(Token = "0x4000ABF")]
		Controller
	}
	[Token(Token = "0x20001FB")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700012B")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xCA4018", Offset = "0xCA4018", VA = "0xCA4018")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012C")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xCA4020", Offset = "0xCA4020", VA = "0xCA4020")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012D")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xCA4028", Offset = "0xCA4028", VA = "0xCA4028")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xCA4030", Offset = "0xCA4030", VA = "0xCA4030")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xBBC060", Offset = "0xBBC060", VA = "0xBBC060")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xBBC348", Offset = "0xBBC348", VA = "0xBBC348")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xBBC3A4", Offset = "0xBBC3A4", VA = "0xBBC3A4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xBBC3E8", Offset = "0xBBC3E8", VA = "0xBBC3E8")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20001FD")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000AC7")]
		TRIANGLES,
		[Token(Token = "0x4000AC8")]
		QUADS
	}
	[Token(Token = "0x20001FE")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000ACA")]
		ABSORPTION,
		[Token(Token = "0x4000ACB")]
		TRANSMISSION,
		[Token(Token = "0x4000ACC")]
		SCATTERING
	}
	[Token(Token = "0x20001FF")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000200")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000AD1")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000AD2")]
		public const string Tab = "    ";

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xD9DA3C", Offset = "0xD9DA3C", VA = "0xD9DA3C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D7C8", Offset = "0x84D7C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D7C8", Offset = "0x84D7C8")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xD9DACC", Offset = "0xD9DACC", VA = "0xD9DACC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D828", Offset = "0x84D828")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D828", Offset = "0x84D828")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xD9DB6C", Offset = "0xD9DB6C", VA = "0xD9DB6C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D888", Offset = "0x84D888")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D888", Offset = "0x84D888")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xD9DBFC", Offset = "0xD9DBFC", VA = "0xD9DBFC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D8E8", Offset = "0x84D8E8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D8E8", Offset = "0x84D8E8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xD9DC8C", Offset = "0xD9DC8C", VA = "0xD9DC8C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D948", Offset = "0x84D948")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84D948", Offset = "0x84D948")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class CAPI
	{
		[Token(Token = "0x2000202")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000203")]
		public enum Result
		{
			[Token(Token = "0x4000ADE")]
			Success = 0,
			[Token(Token = "0x4000ADF")]
			Failure = -1000,
			[Token(Token = "0x4000AE0")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000AE1")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000AE2")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000AE3")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000AE4")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000AE5")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000AE6")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000204")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0xC5ADE0", Offset = "0xC5ADE0", VA = "0xC5ADE0")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000AD3")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000ADB")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xDA13E0", Offset = "0xDA13E0", VA = "0xDA13E0")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xDA1470", Offset = "0xDA1470", VA = "0xDA1470")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xDA1688", Offset = "0xDA1688", VA = "0xDA1688")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xDA1770", Offset = "0xDA1770", VA = "0xDA1770")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xDA17E0", Offset = "0xDA17E0", VA = "0xDA17E0")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xDA1854", Offset = "0xDA1854", VA = "0xDA1854")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xDA18D4", Offset = "0xDA18D4", VA = "0xDA18D4")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xDA1A18", Offset = "0xDA1A18", VA = "0xDA1A18")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xDA1A98", Offset = "0xDA1A98", VA = "0xDA1A98")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xDA1BDC", Offset = "0xDA1BDC", VA = "0xDA1BDC")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xDA1C5C", Offset = "0xDA1C5C", VA = "0xDA1C5C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xDA1CDC", Offset = "0xDA1CDC", VA = "0xDA1CDC")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xDA1D5C", Offset = "0xDA1D5C", VA = "0xDA1D5C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xDA1DDC", Offset = "0xDA1DDC", VA = "0xDA1DDC")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xDA1E6C", Offset = "0xDA1E6C", VA = "0xDA1E6C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xDA1EFC", Offset = "0xDA1EFC", VA = "0xDA1EFC")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xDA1F8C", Offset = "0xDA1F8C", VA = "0xDA1F8C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xDA200C", Offset = "0xDA200C", VA = "0xDA200C")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xDA208C", Offset = "0xDA208C", VA = "0xDA208C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xDA211C", Offset = "0xDA211C", VA = "0xDA211C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xDA21AC", Offset = "0xDA21AC", VA = "0xDA21AC")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xDA223C", Offset = "0xDA223C", VA = "0xDA223C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xDA22BC", Offset = "0xDA22BC", VA = "0xDA22BC")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xDA235C", Offset = "0xDA235C", VA = "0xDA235C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xDA23D8", Offset = "0xDA23D8", VA = "0xDA23D8")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xDA2478", Offset = "0xDA2478", VA = "0xDA2478")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xDA2538", Offset = "0xDA2538", VA = "0xDA2538")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xDA2608", Offset = "0xDA2608", VA = "0xDA2608")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xDA2698", Offset = "0xDA2698", VA = "0xDA2698")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xDA2728", Offset = "0xDA2728", VA = "0xDA2728")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xDA27B8", Offset = "0xDA27B8", VA = "0xDA27B8")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xDA2848", Offset = "0xDA2848", VA = "0xDA2848")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xDA28D8", Offset = "0xDA28D8", VA = "0xDA28D8")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xDA2958", Offset = "0xDA2958", VA = "0xDA2958")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xDA2A74", Offset = "0xDA2A74", VA = "0xDA2A74")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xDA29E4", Offset = "0xDA29E4", VA = "0xDA29E4")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xDA2C88", Offset = "0xDA2C88", VA = "0xDA2C88")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xDA2DF8", Offset = "0xDA2DF8", VA = "0xDA2DF8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000BE1")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xDA2E78", Offset = "0xDA2E78", VA = "0xDA2E78")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xDA3120", Offset = "0xDA3120", VA = "0xDA3120")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xDA31A0", Offset = "0xDA31A0", VA = "0xDA31A0")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xDA3310", Offset = "0xDA3310", VA = "0xDA3310")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xDA3390", Offset = "0xDA3390", VA = "0xDA3390")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xDA3500", Offset = "0xDA3500", VA = "0xDA3500")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xDA3580", Offset = "0xDA3580", VA = "0xDA3580")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xDA36F0", Offset = "0xDA36F0", VA = "0xDA36F0")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xDA3770", Offset = "0xDA3770", VA = "0xDA3770")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xDA38E0", Offset = "0xDA38E0", VA = "0xDA38E0")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xDA3960", Offset = "0xDA3960", VA = "0xDA3960")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xDA39E0", Offset = "0xDA39E0", VA = "0xDA39E0")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xDA3A78", Offset = "0xDA3A78", VA = "0xDA3A78")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xDA3AF8", Offset = "0xDA3AF8", VA = "0xDA3AF8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xDA3CD0", Offset = "0xDA3CD0", VA = "0xDA3CD0")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xDA3E28", Offset = "0xDA3E28", VA = "0xDA3E28")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xDA3C50", Offset = "0xDA3C50", VA = "0xDA3C50")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xDA3EA8", Offset = "0xDA3EA8", VA = "0xDA3EA8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xDA3F28", Offset = "0xDA3F28", VA = "0xDA3F28")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xDA3FB8", Offset = "0xDA3FB8", VA = "0xDA3FB8")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xDA4038", Offset = "0xDA4038", VA = "0xDA4038")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xDA40C8", Offset = "0xDA40C8", VA = "0xDA40C8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xDA4148", Offset = "0xDA4148", VA = "0xDA4148")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xDA41C8", Offset = "0xDA41C8", VA = "0xDA41C8")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xDA4454", Offset = "0xDA4454", VA = "0xDA4454")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xDA44E4", Offset = "0xDA44E4", VA = "0xDA44E4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xDA4714", Offset = "0xDA4714", VA = "0xDA4714")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xDA47AC", Offset = "0xDA47AC", VA = "0xDA47AC")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xDA48FC", Offset = "0xDA48FC", VA = "0xDA48FC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xDA497C", Offset = "0xDA497C", VA = "0xDA497C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xDA49FC", Offset = "0xDA49FC", VA = "0xDA49FC")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xDA4B50", Offset = "0xDA4B50", VA = "0xDA4B50")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xDA4BD0", Offset = "0xDA4BD0", VA = "0xDA4BD0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xDA4D24", Offset = "0xDA4D24", VA = "0xDA4D24")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xDA4DA4", Offset = "0xDA4DA4", VA = "0xDA4DA4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xDA4E34", Offset = "0xDA4E34", VA = "0xDA4E34")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xDA4EC4", Offset = "0xDA4EC4", VA = "0xDA4EC4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xDA4F54", Offset = "0xDA4F54", VA = "0xDA4F54")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xDA4FD4", Offset = "0xDA4FD4", VA = "0xDA4FD4")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xDA505C", Offset = "0xDA505C", VA = "0xDA505C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xDA50E4", Offset = "0xDA50E4", VA = "0xDA50E4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xDA5164", Offset = "0xDA5164", VA = "0xDA5164")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xDA51E4", Offset = "0xDA51E4", VA = "0xDA51E4")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xDA5298", Offset = "0xDA5298", VA = "0xDA5298")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xDA5328", Offset = "0xDA5328", VA = "0xDA5328")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xDA53B8", Offset = "0xDA53B8", VA = "0xDA53B8")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xDA5438", Offset = "0xDA5438", VA = "0xDA5438")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xDA54B8", Offset = "0xDA54B8", VA = "0xDA54B8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xDA5538", Offset = "0xDA5538", VA = "0xDA5538")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xDA55D0", Offset = "0xDA55D0", VA = "0xDA55D0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xDA5660", Offset = "0xDA5660", VA = "0xDA5660")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xDA56F0", Offset = "0xDA56F0", VA = "0xDA56F0")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xDA5780", Offset = "0xDA5780", VA = "0xDA5780")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xDA5818", Offset = "0xDA5818", VA = "0xDA5818")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xDA58B0", Offset = "0xDA58B0", VA = "0xDA58B0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xDA5930", Offset = "0xDA5930", VA = "0xDA5930")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xDA59B0", Offset = "0xDA59B0", VA = "0xDA59B0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xDA5B04", Offset = "0xDA5B04", VA = "0xDA5B04")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xDA5B84", Offset = "0xDA5B84", VA = "0xDA5B84")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xDA5CD8", Offset = "0xDA5CD8", VA = "0xDA5CD8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xDA5D58", Offset = "0xDA5D58", VA = "0xDA5D58")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xDA5E94", Offset = "0xDA5E94", VA = "0xDA5E94")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xDA5F14", Offset = "0xDA5F14", VA = "0xDA5F14")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xDA60E8", Offset = "0xDA60E8", VA = "0xDA60E8")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xDA63C8", Offset = "0xDA63C8", VA = "0xDA63C8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xDA6068", Offset = "0xDA6068", VA = "0xDA6068")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xDA6458", Offset = "0xDA6458", VA = "0xDA6458")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xDA64D8", Offset = "0xDA64D8", VA = "0xDA64D8")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xDA6568", Offset = "0xDA6568", VA = "0xDA6568")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xDA65F8", Offset = "0xDA65F8", VA = "0xDA65F8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xDA6688", Offset = "0xDA6688", VA = "0xDA6688")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xDA6728", Offset = "0xDA6728", VA = "0xDA6728")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xDA67C8", Offset = "0xDA67C8", VA = "0xDA67C8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xDA6868", Offset = "0xDA6868", VA = "0xDA6868")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xDA68E8", Offset = "0xDA68E8", VA = "0xDA68E8")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xDA6968", Offset = "0xDA6968", VA = "0xDA6968")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xDA69E8", Offset = "0xDA69E8", VA = "0xDA69E8")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xDA6A68", Offset = "0xDA6A68", VA = "0xDA6A68")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xDA6AE8", Offset = "0xDA6AE8", VA = "0xDA6AE8")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xDA6C10", Offset = "0xDA6C10", VA = "0xDA6C10")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xDA6CA8", Offset = "0xDA6CA8", VA = "0xDA6CA8")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xDA6D28", Offset = "0xDA6D28", VA = "0xDA6D28")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xDA6D88", Offset = "0xDA6D88", VA = "0xDA6D88")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xDA6ED0", Offset = "0xDA6ED0", VA = "0xDA6ED0")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xDA6F60", Offset = "0xDA6F60", VA = "0xDA6F60")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xDA70B8", Offset = "0xDA70B8", VA = "0xDA70B8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xDA7148", Offset = "0xDA7148", VA = "0xDA7148")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xDA71E8", Offset = "0xDA71E8", VA = "0xDA71E8")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xDA75B8", Offset = "0xDA75B8", VA = "0xDA75B8")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xDA7638", Offset = "0xDA7638", VA = "0xDA7638")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xDA76D0", Offset = "0xDA76D0", VA = "0xDA76D0")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xDA7F30", Offset = "0xDA7F30", VA = "0xDA7F30")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xDA7FB0", Offset = "0xDA7FB0", VA = "0xDA7FB0")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xDA137C", Offset = "0xDA137C", VA = "0xDA137C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x84D9A8", Offset = "0x84D9A8")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xDA8048", Offset = "0xDA8048", VA = "0xDA8048")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xDA80CC", Offset = "0xDA80CC", VA = "0xDA80CC")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xDA814C", Offset = "0xDA814C", VA = "0xDA814C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xDA81CC", Offset = "0xDA81CC", VA = "0xDA81CC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xDA824C", Offset = "0xDA824C", VA = "0xDA824C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xDA8C10", Offset = "0xDA8C10", VA = "0xDA8C10")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xDA8C90", Offset = "0xDA8C90", VA = "0xDA8C90")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xDA90B0", Offset = "0xDA90B0", VA = "0xDA90B0")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xDA9018", Offset = "0xDA9018", VA = "0xDA9018")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xDA9124", Offset = "0xDA9124", VA = "0xDA9124")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000205")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x8492A8", Offset = "0x8492A8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xBBB358", Offset = "0xBBB358", VA = "0xBBB358")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xBBB35C", Offset = "0xBBB35C", VA = "0xBBB35C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xBBB3FC", Offset = "0xBBB3FC", VA = "0xBBB3FC")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8492F4", Offset = "0x8492F4")]
		public bool autoRetrigger;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x84932C", Offset = "0x84932C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849350", Offset = "0x849350")]
		public Transform[] playPositions;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xD9751C", Offset = "0xD9751C", VA = "0xD9751C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xD976C0", Offset = "0xD976C0", VA = "0xD976C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xD9789C", Offset = "0xD9789C", VA = "0xD9789C")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xD97720", Offset = "0xD97720", VA = "0xD97720")]
		public void Play()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xD9795C", Offset = "0xD9795C", VA = "0xD9795C")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xD97ACC", Offset = "0xD97ACC", VA = "0xD97ACC")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000AF5")]
		Default,
		[Token(Token = "0x4000AF6")]
		Preload,
		[Token(Token = "0x4000AF7")]
		ManualPreload
	}
	[Token(Token = "0x2000208")]
	public enum Fade
	{
		[Token(Token = "0x4000AF9")]
		In,
		[Token(Token = "0x4000AFA")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	public class SoundGroup
	{
		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x849388", Offset = "0x849388")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xBB2720", Offset = "0xBB2720", VA = "0xBB2720")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xBB27BC", Offset = "0xBB27BC", VA = "0xBB27BC")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xBB0B84", Offset = "0xBB0B84", VA = "0xBB0B84")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xBB0E8C", Offset = "0xBB0E8C", VA = "0xBB0E8C")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xBB1CF0", Offset = "0xBB1CF0", VA = "0xBB1CF0")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020A")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200020B")]
		public enum Fade
		{
			[Token(Token = "0x4000B22")]
			In,
			[Token(Token = "0x4000B23")]
			Out
		}

		[Token(Token = "0x200020C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841460", Offset = "0x841460")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000C94")]
			[Address(RVA = "0xC59DA0", Offset = "0xC59DA0", VA = "0xC59DA0")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0xC59DA8", Offset = "0xC59DA8", VA = "0xC59DA8")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200020D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841470", Offset = "0x841470")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xC59D0C", Offset = "0xC59D0C", VA = "0xC59D0C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C98")]
			[Address(RVA = "0xC59D14", Offset = "0xC59D14", VA = "0xC59D14")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8493B4", Offset = "0x8493B4")]
		public bool makePersistent;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8493EC", Offset = "0x8493EC")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849424", Offset = "0x849424")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84945C", Offset = "0x84945C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849494", Offset = "0x849494")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8494CC", Offset = "0x8494CC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849504", Offset = "0x849504")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84953C", Offset = "0x84953C")]
		public bool verboseLogging;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849574", Offset = "0x849574")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8495AC", Offset = "0x8495AC")]
		public float volumeSoundFX;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8495E4", Offset = "0x8495E4")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700012E")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0xD97C0C", Offset = "0xD97C0C", VA = "0xD97C0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012F")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0xD97CF4", Offset = "0xD97CF4", VA = "0xD97CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0xD97D58", Offset = "0xD97D58", VA = "0xD97D58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000131")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0xD97DC8", Offset = "0xD97DC8", VA = "0xD97DC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000132")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xD97E38", Offset = "0xD97E38", VA = "0xD97E38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0xD97EA8", Offset = "0xD97EA8", VA = "0xD97EA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0xD97F18", Offset = "0xD97F18", VA = "0xD97F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xD99DC0", Offset = "0xD99DC0", VA = "0xD99DC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xD97F88", Offset = "0xD97F88", VA = "0xD97F88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xD981C4", Offset = "0xD981C4", VA = "0xD981C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xD97F8C", Offset = "0xD97F8C", VA = "0xD97F8C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xD98E1C", Offset = "0xD98E1C", VA = "0xD98E1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xD98324", Offset = "0xD98324", VA = "0xD98324")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xD994C8", Offset = "0xD994C8", VA = "0xD994C8")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xD9965C", Offset = "0xD9965C", VA = "0xD9965C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xD99830", Offset = "0xD99830", VA = "0xD99830")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xD99938", Offset = "0xD99938", VA = "0xD99938")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xD999C4", Offset = "0xD999C4", VA = "0xD999C4")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xD99E24", Offset = "0xD99E24", VA = "0xD99E24")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xD99E98", Offset = "0xD99E98", VA = "0xD99E98")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xD987D8", Offset = "0xD987D8", VA = "0xD987D8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xD98E20", Offset = "0xD98E20", VA = "0xD98E20")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xD99FE0", Offset = "0xD99FE0", VA = "0xD99FE0")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xD9A110", Offset = "0xD9A110", VA = "0xD9A110")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xD9A244", Offset = "0xD9A244", VA = "0xD9A244")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xD99F0C", Offset = "0xD99F0C", VA = "0xD99F0C")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xD9A38C", Offset = "0xD9A38C", VA = "0xD9A38C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xD9A444", Offset = "0xD9A444", VA = "0xD9A444")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xD9A560", Offset = "0xD9A560", VA = "0xD9A560")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xD978AC", Offset = "0xD978AC", VA = "0xD978AC")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xD97A1C", Offset = "0xD97A1C", VA = "0xD97A1C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xD9A618", Offset = "0xD9A618", VA = "0xD9A618")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xD9A6E0", Offset = "0xD9A6E0", VA = "0xD9A6E0")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xD9A774", Offset = "0xD9A774", VA = "0xD9A774")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xD9A838", Offset = "0xD9A838", VA = "0xD9A838")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xD9A8D8", Offset = "0xD9A8D8", VA = "0xD9A8D8")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xD9A990", Offset = "0xD9A990", VA = "0xD9A990")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xD9B420", Offset = "0xD9B420", VA = "0xD9B420")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xD9BB18", Offset = "0xD9BB18", VA = "0xD9BB18")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xD9BCDC", Offset = "0xD9BCDC", VA = "0xD9BCDC")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xD9C800", Offset = "0xD9C800", VA = "0xD9C800")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xD9AB7C", Offset = "0xD9AB7C", VA = "0xD9AB7C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xD9C91C", Offset = "0xD9C91C", VA = "0xD9C91C")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xD9C9EC", Offset = "0xD9C9EC", VA = "0xD9C9EC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xD9CAD8", Offset = "0xD9CAD8", VA = "0xD9CAD8")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xD9CD00", Offset = "0xD9CD00", VA = "0xD9CD00")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xD9CE54", Offset = "0xD9CE54", VA = "0xD9CE54")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xD9CF78", Offset = "0xD9CF78", VA = "0xD9CF78")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xD9D0A4", Offset = "0xD9D0A4", VA = "0xD9D0A4")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xD9D184", Offset = "0xD9D184", VA = "0xD9D184")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xD9D2C0", Offset = "0xD9D2C0", VA = "0xD9D2C0")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xD9D6C4", Offset = "0xD9D6C4", VA = "0xD9D6C4")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000B28")]
		None = -1,
		[Token(Token = "0x4000B29")]
		Reserved,
		[Token(Token = "0x4000B2A")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xCB4C68", Offset = "0xCB4C68", VA = "0xCB4C68")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xCB4C0C", Offset = "0xCB4C0C", VA = "0xCB4C0C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000212")]
		public enum FadeState
		{
			[Token(Token = "0x4000B41")]
			Null,
			[Token(Token = "0x4000B42")]
			FadingIn,
			[Token(Token = "0x4000B43")]
			FadingOut,
			[Token(Token = "0x4000B44")]
			Ducking
		}

		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841480", Offset = "0x841480")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700013F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CC7")]
				[Address(RVA = "0xC68570", Offset = "0xC68570", VA = "0xC68570", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000140")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CC9")]
				[Address(RVA = "0xC685B8", Offset = "0xC685B8", VA = "0xC685B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0xC6845C", Offset = "0xC6845C", VA = "0xC6845C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0xC68488", Offset = "0xC68488", VA = "0xC68488", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xC6848C", Offset = "0xC6848C", VA = "0xC6848C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0xC68578", Offset = "0xC68578", VA = "0xC68578", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841490", Offset = "0x841490")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000141")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CCD")]
				[Address(RVA = "0xC689DC", Offset = "0xC689DC", VA = "0xC689DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000142")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CCF")]
				[Address(RVA = "0xC68A24", Offset = "0xC68A24", VA = "0xC68A24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0xC6887C", Offset = "0xC6887C", VA = "0xC6887C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xC688A8", Offset = "0xC688A8", VA = "0xC688A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xC688AC", Offset = "0xC688AC", VA = "0xC688AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0xC689E4", Offset = "0xC689E4", VA = "0xC689E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000215")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8414A0", Offset = "0x8414A0")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000143")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CD3")]
				[Address(RVA = "0xC6882C", Offset = "0xC6882C", VA = "0xC6882C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000144")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CD5")]
				[Address(RVA = "0xC68874", Offset = "0xC68874", VA = "0xC68874", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0xC685C0", Offset = "0xC685C0", VA = "0xC685C0")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0xC685EC", Offset = "0xC685EC", VA = "0xC685EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xC685F0", Offset = "0xC685F0", VA = "0xC685F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xC68834", Offset = "0xC68834", VA = "0xC68834", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000136")]
		public float volume
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xBB0728", Offset = "0xBB0728", VA = "0xBB0728")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xBB0744", Offset = "0xBB0744", VA = "0xBB0744")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public float pitch
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0xBB0760", Offset = "0xBB0760", VA = "0xBB0760")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xBB077C", Offset = "0xBB077C", VA = "0xBB077C")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public AudioClip clip
		{
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0xBB0798", Offset = "0xBB0798", VA = "0xBB0798")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xBB07B4", Offset = "0xBB07B4", VA = "0xBB07B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float time
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xBB07D0", Offset = "0xBB07D0", VA = "0xBB07D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xBB07EC", Offset = "0xBB07EC", VA = "0xBB07EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float length
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xBB0808", Offset = "0xBB0808", VA = "0xBB0808")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013B")]
		public bool loop
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xBB08BC", Offset = "0xBB08BC", VA = "0xBB08BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0xBB08D8", Offset = "0xBB08D8", VA = "0xBB08D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public bool mute
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0xBB08F8", Offset = "0xBB08F8", VA = "0xBB08F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0xBB0914", Offset = "0xBB0914", VA = "0xBB0914")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xBB0934", Offset = "0xBB0934", VA = "0xBB0934")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0xBB0950", Offset = "0xBB0950", VA = "0xBB0950")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public bool isPlaying
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xBB096C", Offset = "0xBB096C", VA = "0xBB096C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xBB0988", Offset = "0xBB0988", VA = "0xBB0988")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xBB0B40", Offset = "0xBB0B40", VA = "0xBB0B40")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xBB0BC0", Offset = "0xBB0BC0", VA = "0xBB0BC0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xBB0BC8", Offset = "0xBB0BC8", VA = "0xBB0BC8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xBB0BD0", Offset = "0xBB0BD0", VA = "0xBB0BD0")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xBB0BD8", Offset = "0xBB0BD8", VA = "0xBB0BD8")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xBB0BE0", Offset = "0xBB0BE0", VA = "0xBB0BE0")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xBB0C84", Offset = "0xBB0C84", VA = "0xBB0C84")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xBB0CF0", Offset = "0xBB0CF0", VA = "0xBB0CF0")]
		public void Play()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xBB0D50", Offset = "0xBB0D50", VA = "0xBB0D50")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xBB0D88", Offset = "0xBB0D88", VA = "0xBB0D88")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xBB0EC8", Offset = "0xBB0EC8", VA = "0xBB0EC8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xBB0F20", Offset = "0xBB0F20", VA = "0xBB0F20")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xBB1030", Offset = "0xBB1030", VA = "0xBB1030")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xBB10E4", Offset = "0xBB10E4", VA = "0xBB10E4")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xBB1124", Offset = "0xBB1124", VA = "0xBB1124")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xBB1150", Offset = "0xBB1150", VA = "0xBB1150")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DA08", Offset = "0x84DA08")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xBB11DC", Offset = "0xBB11DC", VA = "0xBB11DC")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xBB12C4", Offset = "0xBB12C4", VA = "0xBB12C4")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xBB13E4", Offset = "0xBB13E4", VA = "0xBB13E4")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xBB145C", Offset = "0xBB145C", VA = "0xBB145C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xBB14F4", Offset = "0xBB14F4", VA = "0xBB14F4")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xBB1244", Offset = "0xBB1244", VA = "0xBB1244")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DA68", Offset = "0x84DA68")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xBB1340", Offset = "0xBB1340", VA = "0xBB1340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DAC8", Offset = "0x84DAC8")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xBB1590", Offset = "0xBB1590", VA = "0xBB1590")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000B61")]
		Random,
		[Token(Token = "0x4000B62")]
		Sequential
	}
	[Token(Token = "0x2000217")]
	public enum FreqHint
	{
		[Token(Token = "0x4000B64")]
		None,
		[Token(Token = "0x4000B65")]
		Wide,
		[Token(Token = "0x4000B66")]
		Narrow
	}
	[Token(Token = "0x2000218")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000B68")]
		VeryLow = -2,
		[Token(Token = "0x4000B69")]
		Low,
		[Token(Token = "0x4000B6A")]
		Default,
		[Token(Token = "0x4000B6B")]
		High,
		[Token(Token = "0x4000B6C")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000219")]
	public class OSPProps
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8496CC", Offset = "0x8496CC")]
		public bool enableSpatialization;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849704", Offset = "0x849704")]
		public bool useFastOverride;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84973C", Offset = "0x84973C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84973C", Offset = "0x84973C")]
		public float gain;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849790", Offset = "0x849790")]
		public bool enableInvSquare;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8497C8", Offset = "0x8497C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8497C8", Offset = "0x8497C8")]
		public float volumetric;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849820", Offset = "0x849820")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x849820", Offset = "0x849820")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x1A2A870", Offset = "0x1A2A870", VA = "0x1A2A870")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021A")]
	public class SoundFX
	{
		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849880", Offset = "0x849880")]
		public string name;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8498B8", Offset = "0x8498B8")]
		public SoundFXNext playback;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8498F0", Offset = "0x8498F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8498F0", Offset = "0x8498F0")]
		public float volume;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849944", Offset = "0x849944")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x849944", Offset = "0x849944")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8499A0", Offset = "0x8499A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8499A0", Offset = "0x8499A0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849A00", Offset = "0x849A00")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849A38", Offset = "0x849A38")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849A70", Offset = "0x849A70")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849AA8", Offset = "0x849AA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x849AA8", Offset = "0x849AA8")]
		public float spread;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849B00", Offset = "0x849B00")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x849B00", Offset = "0x849B00")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849B54", Offset = "0x849B54")]
		public SoundPriority priority;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849B8C", Offset = "0x849B8C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x849B8C", Offset = "0x849B8C")]
		public Vector2 delay;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849BE8", Offset = "0x849BE8")]
		public bool looping;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849C20", Offset = "0x849C20")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000145")]
		public int Length
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xBB1A6C", Offset = "0xBB1A6C", VA = "0xBB1A6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000146")]
		public bool IsValid
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xBB1A88", Offset = "0xBB1A88", VA = "0xBB1A88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000147")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xBB1B28", Offset = "0xBB1B28", VA = "0xBB1B28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xBB1B30", Offset = "0xBB1B30", VA = "0xBB1B30")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0xBB1B38", Offset = "0xBB1B38", VA = "0xBB1B38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000149")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0xBB1B44", Offset = "0xBB1B44", VA = "0xBB1B44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xBB15A8", Offset = "0xBB15A8", VA = "0xBB15A8")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xBB1B5C", Offset = "0xBB1B5C", VA = "0xBB1B5C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xBB1C2C", Offset = "0xBB1C2C", VA = "0xBB1C2C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xBB1CC8", Offset = "0xBB1CC8", VA = "0xBB1CC8")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xBB1D10", Offset = "0xBB1D10", VA = "0xBB1D10")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xBB1E08", Offset = "0xBB1E08", VA = "0xBB1E08")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xBB1E14", Offset = "0xBB1E14", VA = "0xBB1E14")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xBB1EF0", Offset = "0xBB1EF0", VA = "0xBB1EF0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xBB2004", Offset = "0xBB2004", VA = "0xBB2004")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xBB2090", Offset = "0xBB2090", VA = "0xBB2090")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xBB2124", Offset = "0xBB2124", VA = "0xBB2124")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xBB21B0", Offset = "0xBB21B0", VA = "0xBB21B0")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xBB223C", Offset = "0xBB223C", VA = "0xBB223C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700014A")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xBB22B4", Offset = "0xBB22B4", VA = "0xBB22B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		public string name
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0xBB23B8", Offset = "0xBB23B8", VA = "0xBB23B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0xBB23C0", Offset = "0xBB23C0", VA = "0xBB23C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public int Length
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0xBB23C8", Offset = "0xBB23C8", VA = "0xBB23C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014D")]
		public bool IsValid
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0xBB240C", Offset = "0xBB240C", VA = "0xBB240C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xBB22E4", Offset = "0xBB22E4", VA = "0xBB22E4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xBB2444", Offset = "0xBB2444", VA = "0xBB2444")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xBB247C", Offset = "0xBB247C", VA = "0xBB247C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xBB24BC", Offset = "0xBB24BC", VA = "0xBB24BC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xBB2504", Offset = "0xBB2504", VA = "0xBB2504")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xBB2584", Offset = "0xBB2584", VA = "0xBB2584")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xBB25C4", Offset = "0xBB25C4", VA = "0xBB25C4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xBB2614", Offset = "0xBB2614", VA = "0xBB2614")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xBB264C", Offset = "0xBB264C", VA = "0xBB264C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xBB268C", Offset = "0xBB268C", VA = "0xBB268C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xBB26C4", Offset = "0xBB26C4", VA = "0xBB26C4")]
		public SoundFXRef()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x200021C")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4000B8A")]
		NONE = 0u,
		[Token(Token = "0x4000B8B")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4000B8C")]
		STAGE = 2u,
		[Token(Token = "0x4000B8D")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4000B8E")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8414C0", Offset = "0x8414C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8414C0", Offset = "0x8414C0")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x200021E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841520", Offset = "0x841520")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D24")]
				[Address(RVA = "0xC61A20", Offset = "0xC61A20", VA = "0xC61A20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D26")]
				[Address(RVA = "0xC61A68", Offset = "0xC61A68", VA = "0xC61A68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D21")]
			[Address(RVA = "0xC6191C", Offset = "0xC6191C", VA = "0xC6191C")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xC61948", Offset = "0xC61948", VA = "0xC61948", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D23")]
			[Address(RVA = "0xC6194C", Offset = "0xC6194C", VA = "0xC6194C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D25")]
			[Address(RVA = "0xC61A28", Offset = "0xC61A28", VA = "0xC61A28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x849C58", Offset = "0x849C58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849C58", Offset = "0x849C58")]
		private Transform _stage;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x849CC8", Offset = "0x849CC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849CC8", Offset = "0x849CC8")]
		private Transform _stageTransform;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x849D38", Offset = "0x849D38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849D38", Offset = "0x849D38")]
		[SerializeField]
		private Camera _HMDCamera;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x849DA8", Offset = "0x849DA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849DA8", Offset = "0x849DA8")]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x849E18", Offset = "0x849E18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849E18", Offset = "0x849E18")]
		private bool _disableStandardAssets;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x849E88", Offset = "0x849E88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849E88", Offset = "0x849E88")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x849EF8", Offset = "0x849EF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849EF8", Offset = "0x849EF8")]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x849F68", Offset = "0x849F68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849F68", Offset = "0x849F68")]
		[SerializeField]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x1700014E")]
		public Transform stage
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0xCAA3D0", Offset = "0xCAA3D0", VA = "0xCAA3D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xCAA46C", Offset = "0xCAA46C", VA = "0xCAA46C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x84E18C", Offset = "0x84E18C")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0xCAA580", Offset = "0xCAA580", VA = "0xCAA580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0xCAA584", Offset = "0xCAA584", VA = "0xCAA584")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0xCAA588", Offset = "0xCAA588", VA = "0xCAA588")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000151")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0xCAA658", Offset = "0xCAA658", VA = "0xCAA658")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000152")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0xCAA728", Offset = "0xCAA728", VA = "0xCAA728")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0xCAA730", Offset = "0xCAA730", VA = "0xCAA730")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0xCAA738", Offset = "0xCAA738", VA = "0xCAA738")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xCAA740", Offset = "0xCAA740", VA = "0xCAA740")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xCAA854", Offset = "0xCAA854", VA = "0xCAA854")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xCAA85C", Offset = "0xCAA85C", VA = "0xCAA85C")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xCAA8F8", Offset = "0xCAA8F8", VA = "0xCAA8F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0xCAA900", Offset = "0xCAA900", VA = "0xCAA900")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0xCAA90C", Offset = "0xCAA90C", VA = "0xCAA90C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0xCAA914", Offset = "0xCAA914", VA = "0xCAA914")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0xCAA91C", Offset = "0xCAA91C", VA = "0xCAA91C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0xCAA924", Offset = "0xCAA924", VA = "0xCAA924")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xCAA968", Offset = "0xCAA968", VA = "0xCAA968")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xCAA970", Offset = "0xCAA970", VA = "0xCAA970")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public bool isValid
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xCAA97C", Offset = "0xCAA97C", VA = "0xCAA97C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015A")]
		public bool isActive
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xCAAB18", Offset = "0xCAAB18", VA = "0xCAAB18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015B")]
		private bool _isReady
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xCAAB20", Offset = "0xCAAB20", VA = "0xCAAB20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015C")]
		public SDKRender render
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xCAABA4", Offset = "0xCAABA4", VA = "0xCAABA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xCAABAC", Offset = "0xCAABAC", VA = "0xCAABAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xCAAC10", Offset = "0xCAAC10", VA = "0xCAAC10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xCAAD48", Offset = "0xCAAD48", VA = "0xCAAD48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xCAAD50", Offset = "0xCAAD50", VA = "0xCAAD50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DC18", Offset = "0x84DC18")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xCAABB8", Offset = "0xCAABB8", VA = "0xCAABB8")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xCAADBC", Offset = "0xCAADBC", VA = "0xCAADBC")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xCAADC8", Offset = "0xCAADC8", VA = "0xCAADC8")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xCAAE78", Offset = "0xCAAE78", VA = "0xCAAE78")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xCAB0B4", Offset = "0xCAB0B4", VA = "0xCAB0B4")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xCAB1A8", Offset = "0xCAB1A8", VA = "0xCAB1A8")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xCAB128", Offset = "0xCAB128", VA = "0xCAB128")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xCAB178", Offset = "0xCAB178", VA = "0xCAB178")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xCAAF34", Offset = "0xCAAF34", VA = "0xCAAF34")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xCAAC34", Offset = "0xCAAC34", VA = "0xCAAC34")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xCAB1D8", Offset = "0xCAB1D8", VA = "0xCAB1D8")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public static class SDKBridge
	{
		[Token(Token = "0x2000220")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x1700015F")]
		public static bool IsActive
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x10FDF50", Offset = "0x10FDF50", VA = "0x10FDF50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x10FDAB8", Offset = "0x10FDAB8", VA = "0x10FDAB8")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x10FDAC0", Offset = "0x10FDAC0", VA = "0x10FDAC0")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x10FDAC8", Offset = "0x10FDAC8", VA = "0x10FDAC8")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x10FDAD0", Offset = "0x10FDAD0", VA = "0x10FDAD0")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x10FDAD8", Offset = "0x10FDAD8", VA = "0x10FDAD8")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x10FDAE0", Offset = "0x10FDAE0", VA = "0x10FDAE0")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x10FDB1C", Offset = "0x10FDB1C", VA = "0x10FDB1C")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x10FDB58", Offset = "0x10FDB58", VA = "0x10FDB58")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x10FDB60", Offset = "0x10FDB60", VA = "0x10FDB60")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x10FDB68", Offset = "0x10FDB68", VA = "0x10FDB68")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x10FDBA4", Offset = "0x10FDBA4", VA = "0x10FDBA4")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x10FDBE0", Offset = "0x10FDBE0", VA = "0x10FDBE0")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x10FDC1C", Offset = "0x10FDC1C", VA = "0x10FDC1C")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x10FDC24", Offset = "0x10FDC24", VA = "0x10FDC24")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x10FDCAC", Offset = "0x10FDCAC", VA = "0x10FDCAC")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x10FDDBC", Offset = "0x10FDDBC", VA = "0x10FDDBC")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x10FDE80", Offset = "0x10FDE80", VA = "0x10FDE80")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x10FDEE8", Offset = "0x10FDEE8", VA = "0x10FDEE8")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x10FE004", Offset = "0x10FE004", VA = "0x10FE004")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x10FE0B8", Offset = "0x10FE0B8", VA = "0x10FE0B8")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x6000D3C")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3D")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000D3E")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3F")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000D40")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x10FE2BC", Offset = "0x10FE2BC", VA = "0x10FE2BC")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x10FE6CC", Offset = "0x10FE6CC", VA = "0x10FE6CC")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x10FE8EC", Offset = "0x10FE8EC", VA = "0x10FE8EC")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x10FEA30", Offset = "0x10FEA30", VA = "0x10FEA30")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x10FEBAC", Offset = "0x10FEBAC", VA = "0x10FEBAC")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x10FEC58", Offset = "0x10FEC58", VA = "0x10FEC58")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000221")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x17000160")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x1100EE0", Offset = "0x1100EE0", VA = "0x1100EE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000161")]
		private bool interlacedRendering
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x1100F38", Offset = "0x1100F38", VA = "0x1100F38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000162")]
		private bool canRenderBackground
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x1100F50", Offset = "0x1100F50", VA = "0x1100F50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000163")]
		private bool canRenderForeground
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x1100FE8", Offset = "0x1100FE8", VA = "0x1100FE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x1101094", Offset = "0x1101094", VA = "0x1101094")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		public LIV liv
		{
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x1104B28", Offset = "0x1104B28", VA = "0x1104B28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x1104B30", Offset = "0x1104B30", VA = "0x1104B30")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x17000167")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x1104B40", Offset = "0x1104B40", VA = "0x1104B40")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x17000168")]
		public SDKResolution resolution
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x1104B50", Offset = "0x1104B50", VA = "0x1104B50")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000169")]
		public Camera cameraInstance
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x1104B58", Offset = "0x1104B58", VA = "0x1104B58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		public Camera cameraReference
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x1103F48", Offset = "0x1103F48", VA = "0x1103F48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public Camera hmdCamera
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x1104B60", Offset = "0x1104B60", VA = "0x1104B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public Transform stage
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x1104B7C", Offset = "0x1104B7C", VA = "0x1104B7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x1104B98", Offset = "0x1104B98", VA = "0x1104B98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x1104BB4", Offset = "0x1104BB4", VA = "0x1104BB4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700016F")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x11033A8", Offset = "0x11033A8", VA = "0x11033A8")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000170")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x1103478", Offset = "0x1103478", VA = "0x1103478")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000171")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x1103988", Offset = "0x1103988", VA = "0x1103988")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000172")]
		public bool canSetPose
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x1104C94", Offset = "0x1104C94", VA = "0x1104C94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1100D10", Offset = "0x1100D10", VA = "0x1100D10")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1100E38", Offset = "0x1100E38", VA = "0x1100E38")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1101118", Offset = "0x1101118", VA = "0x1101118")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x110190C", Offset = "0x110190C", VA = "0x110190C")]
		public void Render()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x110201C", Offset = "0x110201C", VA = "0x110201C")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x110231C", Offset = "0x110231C", VA = "0x110231C")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1102CC4", Offset = "0x1102CC4", VA = "0x1102CC4")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1101274", Offset = "0x1101274", VA = "0x1101274")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1104834", Offset = "0x1104834", VA = "0x1104834")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x11049D4", Offset = "0x11049D4", VA = "0x11049D4", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1104CB4", Offset = "0x1104CB4", VA = "0x1104CB4")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1105038", Offset = "0x1105038", VA = "0x1105038")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x11051E8", Offset = "0x11051E8", VA = "0x11051E8")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1105264", Offset = "0x1105264", VA = "0x1105264")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1104A18", Offset = "0x1104A18", VA = "0x1104A18")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x11019DC", Offset = "0x11019DC", VA = "0x11019DC")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1101A40", Offset = "0x1101A40", VA = "0x1101A40")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1101FB0", Offset = "0x1101FB0", VA = "0x1101FB0")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1103194", Offset = "0x1103194", VA = "0x1103194")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x1103714", Offset = "0x1103714", VA = "0x1103714")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x110388C", Offset = "0x110388C", VA = "0x110388C")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1103D8C", Offset = "0x1103D8C", VA = "0x1103D8C")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1103DF8", Offset = "0x1103DF8", VA = "0x1103DF8")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x11053EC", Offset = "0x11053EC", VA = "0x11053EC")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1105618", Offset = "0x1105618", VA = "0x1105618")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x11056B8", Offset = "0x11056B8", VA = "0x11056B8")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1105758", Offset = "0x1105758", VA = "0x1105758")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1101CF4", Offset = "0x1101CF4", VA = "0x1101CF4")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1103780", Offset = "0x1103780", VA = "0x1103780")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x2000222")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4000BD7")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4000BD8")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4000BD9")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4000BDA")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4000BDB")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4000BDC")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4000BDD")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4000BDE")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4000BDF")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4000BE0")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4000BE1")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1103684", Offset = "0x1103684", VA = "0x1103684")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x1103940", Offset = "0x1103940", VA = "0x1103940")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1103D44", Offset = "0x1103D44", VA = "0x1103D44")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1103E64", Offset = "0x1103E64", VA = "0x1103E64")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x11036CC", Offset = "0x11036CC", VA = "0x11036CC")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x11038F8", Offset = "0x11038F8", VA = "0x11038F8")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public struct SDKConstants
	{
		[Token(Token = "0x4000BE2")]
		public const string SDK_ID = "PCPBVS96FMYLKHON9MD4AABERUQ8QTLR";

		[Token(Token = "0x4000BE3")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4000BE4")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000224")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4000BE6")]
		NONE = 0,
		[Token(Token = "0x4000BE7")]
		GAME = 63
	}
	[Token(Token = "0x2000225")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4000BE9")]
		NONE = 0uL,
		[Token(Token = "0x4000BEA")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4000BEB")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4000BEC")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4000BED")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4000BEE")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4000BEF")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4000BF0")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4000BF1")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4000BF2")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4000BF3")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4000BF4")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000226")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4000BF6")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000BF7")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4000BF8")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4000BF9")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x2000227")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4000BFB")]
		UNDEFINED,
		[Token(Token = "0x4000BFC")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000228")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4000BFE")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000BFF")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000229")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4000C01")]
		UNDEFINED,
		[Token(Token = "0x4000C02")]
		RAW,
		[Token(Token = "0x4000C03")]
		DIRECTX,
		[Token(Token = "0x4000C04")]
		OPENGL,
		[Token(Token = "0x4000C05")]
		VULKAN,
		[Token(Token = "0x4000C06")]
		METAL
	}
	[Token(Token = "0x200022A")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4000C08")]
		UNDEFINED,
		[Token(Token = "0x4000C09")]
		LINEAR,
		[Token(Token = "0x4000C0A")]
		SRGB
	}
	[Token(Token = "0x200022B")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4000C0C")]
		UNDEFINED,
		[Token(Token = "0x4000C0D")]
		FORWARD,
		[Token(Token = "0x4000C0E")]
		DEFERRED,
		[Token(Token = "0x4000C0F")]
		VERTEX_LIT,
		[Token(Token = "0x4000C10")]
		UNIVERSAL,
		[Token(Token = "0x4000C11")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x200022C")]
	public struct SDKResolution
	{
		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x17000173")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x10FEE58", Offset = "0x10FEE58", VA = "0x10FEE58")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x11058F4", Offset = "0x11058F4", VA = "0x11058F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022D")]
	public struct SDKVector3
	{
		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x17000174")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x10FF0F4", Offset = "0x10FF0F4", VA = "0x10FF0F4")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000175")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x110605C", Offset = "0x110605C", VA = "0x110605C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000176")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x11064EC", Offset = "0x11064EC", VA = "0x11064EC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000177")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x110037C", Offset = "0x110037C", VA = "0x110037C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000178")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x11064FC", Offset = "0x11064FC", VA = "0x11064FC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1106260", Offset = "0x1106260", VA = "0x1106260")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1100364", Offset = "0x1100364", VA = "0x1100364")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x110650C", Offset = "0x110650C", VA = "0x110650C")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x110651C", Offset = "0x110651C", VA = "0x110651C")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x110652C", Offset = "0x110652C", VA = "0x110652C")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x110653C", Offset = "0x110653C", VA = "0x110653C")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x110654C", Offset = "0x110654C", VA = "0x110654C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022E")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000179")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x10FF104", Offset = "0x10FF104", VA = "0x10FF104")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1100948", Offset = "0x1100948", VA = "0x1100948")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1100978", Offset = "0x1100978", VA = "0x1100978")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x110097C", Offset = "0x110097C", VA = "0x110097C")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1100A40", Offset = "0x1100A40", VA = "0x1100A40")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1100AB4", Offset = "0x1100AB4", VA = "0x1100AB4")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1100B58", Offset = "0x1100B58", VA = "0x1100B58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200022F")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x1700017A")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x10FEE94", Offset = "0x10FEE94", VA = "0x10FEE94")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x10FF89C", Offset = "0x10FF89C", VA = "0x10FF89C")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x10FF8E0", Offset = "0x10FF8E0", VA = "0x10FF8E0")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x10FF924", Offset = "0x10FF924", VA = "0x10FF924")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x10FF9E4", Offset = "0x10FF9E4", VA = "0x10FF9E4")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x10FFA90", Offset = "0x10FFA90", VA = "0x10FFA90")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x10FFAE8", Offset = "0x10FFAE8", VA = "0x10FFAE8")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x10FFB24", Offset = "0x10FFB24", VA = "0x10FFB24")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x10FFBB8", Offset = "0x10FFBB8", VA = "0x10FFBB8")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x10FFBE4", Offset = "0x10FFBE4", VA = "0x10FFBE4")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x10FFCD0", Offset = "0x10FFCD0", VA = "0x10FFCD0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000230")]
	public struct SDKPlane
	{
		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x1700017B")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x1100368", Offset = "0x1100368", VA = "0x1100368")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1100304", Offset = "0x1100304", VA = "0x1100304")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x110038C", Offset = "0x110038C", VA = "0x110038C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000231")]
	public struct SDKPriority
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x1700017C")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x10FF524", Offset = "0x10FF524", VA = "0x10FF524")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x11006D0", Offset = "0x11006D0", VA = "0x11006D0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000232")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x1700017D")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x10FD7EC", Offset = "0x10FD7EC", VA = "0x10FD7EC")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x10FD868", Offset = "0x10FD868", VA = "0x10FD868", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000233")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x1700017E")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x10FE598", Offset = "0x10FE598", VA = "0x10FE598")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x10FF530", Offset = "0x10FF530", VA = "0x10FF530")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x10FF540", Offset = "0x10FF540", VA = "0x10FF540")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x10FF554", Offset = "0x10FF554", VA = "0x10FF554", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000234")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x1700017F")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x1100188", Offset = "0x1100188", VA = "0x1100188")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1100244", Offset = "0x1100244", VA = "0x1100244", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000235")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x17000180")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x11001E8", Offset = "0x11001E8", VA = "0x11001E8")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1105E0C", Offset = "0x1105E0C", VA = "0x1105E0C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000236")]
	public struct SDKTexture
	{
		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x17000181")]
		public static SDKTexture empty
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x10FE8A0", Offset = "0x10FE8A0", VA = "0x10FE8A0")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1105A5C", Offset = "0x1105A5C", VA = "0x1105A5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000237")]
	public struct SDKTransform
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x17000182")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x10FF510", Offset = "0x10FF510", VA = "0x10FF510")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x110606C", Offset = "0x110606C", VA = "0x110606C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000238")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x17000183")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x10FEE60", Offset = "0x10FEE60", VA = "0x10FEE60")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x10FEEC0", Offset = "0x10FEEC0", VA = "0x10FEEC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000239")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x17000184")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x10FF0A8", Offset = "0x10FF0A8", VA = "0x10FF0A8")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x10FF118", Offset = "0x10FF118", VA = "0x10FF118", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200023A")]
	public struct SDKPose
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x17000185")]
		public static SDKPose empty
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x10FF494", Offset = "0x10FF494", VA = "0x10FF494")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x110044C", Offset = "0x110044C", VA = "0x110044C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200023B")]
	public static class SDKUtils
	{
		[Token(Token = "0x17000186")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x1106170", Offset = "0x1106170", VA = "0x1106170")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1104348", Offset = "0x1104348", VA = "0x1104348")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1106158", Offset = "0x1106158", VA = "0x1106158")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x110585C", Offset = "0x110585C", VA = "0x110585C")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x11061A0", Offset = "0x11061A0", VA = "0x11061A0")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x11057F8", Offset = "0x11057F8", VA = "0x11057F8")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x11061C0", Offset = "0x11061C0", VA = "0x11061C0")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x11061CC", Offset = "0x11061CC", VA = "0x11061CC")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x11061E0", Offset = "0x11061E0", VA = "0x11061E0")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1103FE0", Offset = "0x1103FE0", VA = "0x1103FE0")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1103498", Offset = "0x1103498", VA = "0x1103498")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1104F84", Offset = "0x1104F84", VA = "0x1104F84")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1106264", Offset = "0x1106264", VA = "0x1106264")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x6000DC5")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC6")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x110548C", Offset = "0x110548C", VA = "0x110548C")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1104A88", Offset = "0x1104A88", VA = "0x1104A88")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1101BF0", Offset = "0x1101BF0", VA = "0x1101BF0")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1103200", Offset = "0x1103200", VA = "0x1103200")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1100F44", Offset = "0x1100F44", VA = "0x1100F44")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x11039A4", Offset = "0x11039A4", VA = "0x11039A4")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1103EAC", Offset = "0x1103EAC", VA = "0x1103EAC")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1103B20", Offset = "0x1103B20", VA = "0x1103B20")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace HurricaneVR.TechDemo.Scripts
{
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x841540", Offset = "0x841540")]
	public class DemoDummyArm : MonoBehaviour
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Anchor;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Length;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineRenderer Rope;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ArmRopeAnchor;

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xCBB704", Offset = "0xCBB704", VA = "0xCBB704")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xCBB7D0", Offset = "0xCBB7D0", VA = "0xCBB7D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xCBB83C", Offset = "0xCBB83C", VA = "0xCBB83C")]
		public DemoDummyArm()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class DemoGlassRotate : MonoBehaviour
	{
		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Timer;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Degrees;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Unlocked;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DoneRotating;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SFXOpen;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _elapsed;

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xCBB84C", Offset = "0xCBB84C", VA = "0xCBB84C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xCBB850", Offset = "0xCBB850", VA = "0xCBB850")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xCBB960", Offset = "0xCBB960", VA = "0xCBB960")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xCBB9FC", Offset = "0xCBB9FC", VA = "0xCBB9FC")]
		public DemoGlassRotate()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class DemoHatchDoor : MonoBehaviour
	{
		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Timer;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Degrees;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Unlocked;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DoneRotating;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SFXOpen;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _elapsed;

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xCBBA10", Offset = "0xCBBA10", VA = "0xCBBA10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xCBBB20", Offset = "0xCBBB20", VA = "0xCBBB20")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xCBBBBC", Offset = "0xCBBBBC", VA = "0xCBBBBC")]
		public DemoHatchDoor()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class DemoHeavyDoor : MonoBehaviour
	{
		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody DoorRigidbody;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRRotationTracker ValveTracker;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRRotationLimiter Limiter;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxAngle;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] SFX;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float SFXAngle;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Angle;

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xCBBBD0", Offset = "0xCBBBD0", VA = "0xCBBBD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xCBBBD4", Offset = "0xCBBBD4", VA = "0xCBBBD4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xCBBD3C", Offset = "0xCBBD3C", VA = "0xCBBD3C")]
		public DemoHeavyDoor()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class DemoKeyHologram : MonoBehaviour
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Interval;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LastMove;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> Positions;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Index;

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xCBBD54", Offset = "0xCBBD54", VA = "0xCBBD54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xCBBD58", Offset = "0xCBBD58", VA = "0xCBBD58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xCBBE68", Offset = "0xCBBE68", VA = "0xCBBE68")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xCBBEE0", Offset = "0xCBBEE0", VA = "0xCBBEE0")]
		public DemoKeyHologram()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class DemoKeypad : MonoBehaviour
	{
		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Code;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro Display;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Entry;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ForceUnlock;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _unlocked;

		[Token(Token = "0x17000187")]
		public int Index
		{
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0xCBBF64", Offset = "0xCBBF64", VA = "0xCBBF64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000188")]
		public int MaxLength
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0xCBBF7C", Offset = "0xCBBF7C", VA = "0xCBBF7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xCBBF94", Offset = "0xCBBF94", VA = "0xCBBF94", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xCBC2EC", Offset = "0xCBC2EC", VA = "0xCBC2EC", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xCBC308", Offset = "0xCBC308", VA = "0xCBC308", Slot = "6")]
		protected virtual void OnButtonDown(HVRPhysicsButton button)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xCBC4CC", Offset = "0xCBC4CC", VA = "0xCBC4CC", Slot = "7")]
		protected virtual void Unlock()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xCBC568", Offset = "0xCBC568", VA = "0xCBC568")]
		public DemoKeypad()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class DemoKeypadButton : HVRPhysicsButton
	{
		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public char Key;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshPro TextMeshPro;

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xCBC5E8", Offset = "0xCBC5E8", VA = "0xCBC5E8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xCBC660", Offset = "0xCBC660", VA = "0xCBC660")]
		public DemoKeypadButton()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8415A0", Offset = "0x8415A0")]
	public class DemoLock : MonoBehaviour
	{
		[Token(Token = "0x2000244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841600", Offset = "0x841600")]
		private sealed class <MoveKey>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HVRGrabbable key;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DemoLock <>4__this;

			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <start>5__2;

			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <startRot>5__3;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsed>5__4;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DF1")]
				[Address(RVA = "0xC5C6F0", Offset = "0xC5C6F0", VA = "0xC5C6F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DF3")]
				[Address(RVA = "0xC5C738", Offset = "0xC5C738", VA = "0xC5C738", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xC5C3AC", Offset = "0xC5C3AC", VA = "0xC5C3AC")]
			[DebuggerHidden]
			public <MoveKey>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0xC5C3D8", Offset = "0xC5C3D8", VA = "0xC5C3D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0xC5C3DC", Offset = "0xC5C3DC", VA = "0xC5C3DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0xC5C6F8", Offset = "0xC5C6F8", VA = "0xC5C6F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoPassthroughSocket Socket;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRGrabbable FaceGrabbable;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Face;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform Key;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float AnimationTime;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip SFXUnlocked;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip SFXKeyInserted;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LockThreshold;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _unlocked;

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xCBC668", Offset = "0xCBC668", VA = "0xCBC668")]
		public void Start()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xCBC74C", Offset = "0xCBC74C", VA = "0xCBC74C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xCBC910", Offset = "0xCBC910", VA = "0xCBC910")]
		private void OnKeyGrabbed(HVRGrabberBase grabber, HVRGrabbable key)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xCBC940", Offset = "0xCBC940", VA = "0xCBC940")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DCC8", Offset = "0x84DCC8")]
		private IEnumerator MoveKey(HVRGrabbable key)
		{
			return null;
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xCBC9B8", Offset = "0xCBC9B8", VA = "0xCBC9B8")]
		public DemoLock()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class DemoPassthroughSocket : HVRSocket
	{
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xCBCA2C", Offset = "0xCBCA2C", VA = "0xCBCA2C", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xCBCA64", Offset = "0xCBCA64", VA = "0xCBCA64", Slot = "39")]
		protected override void OnGrabbed(HVRGrabArgs args)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xCBCB24", Offset = "0xCBCB24", VA = "0xCBCB24")]
		public DemoPassthroughSocket()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class DemoPowerUnit : MonoBehaviour
	{
		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent PoweredUp;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRSocket LeftSocket;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HVRSocket RightSocket;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer LeftLight;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer RightLight;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HVRRotationTracker LeverRotation;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float RequiredAngle;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip SFXPoweredOn;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int RequiredCells;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int SocketedCellCount;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool Engaged;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material OnMaterial;

		[Token(Token = "0x1700018B")]
		public bool IsPoweredUp
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0xCBCB2C", Offset = "0xCBCB2C", VA = "0xCBCB2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xCBCB3C", Offset = "0xCBCB3C", VA = "0xCBCB3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xCBCC58", Offset = "0xCBCC58", VA = "0xCBCC58")]
		private void OnRightSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xCBCCF4", Offset = "0xCBCCF4", VA = "0xCBCCF4")]
		private void OnLeftSocketGrabbed(HVRGrabberBase arg0, HVRGrabbable arg1)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xCBCD90", Offset = "0xCBCD90", VA = "0xCBCD90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xCBCED0", Offset = "0xCBCED0", VA = "0xCBCED0")]
		public DemoPowerUnit()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public enum SafeDialState
	{
		[Token(Token = "0x4000CB1")]
		CamOne,
		[Token(Token = "0x4000CB2")]
		CamTwo,
		[Token(Token = "0x4000CB3")]
		CamThree,
		[Token(Token = "0x4000CB4")]
		Unlocked
	}
	[Token(Token = "0x2000248")]
	public class DemoSafeDial : HVRRotationTracker
	{
		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshPro NumberLabel;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshPro DebugLabel;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool DisplayDebug;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int First;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int Second;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Third;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int CurrentNumber;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float CamDistance;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float PreviousDistance;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float Tolerance;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float LowerBound;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float UpperBound;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int AccuracyAllowance;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SafeDialState _state;

		[Token(Token = "0x1700018C")]
		public SafeDialState State
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xCBCF44", Offset = "0xCBCF44", VA = "0xCBCF44")]
			get
			{
				return default(SafeDialState);
			}
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xCBCF4C", Offset = "0xCBCF4C", VA = "0xCBCF4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public int NumberOfRotations
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xCBD000", Offset = "0xCBD000", VA = "0xCBD000")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018E")]
		public bool IsFirstInRange
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0xCBD3D4", Offset = "0xCBD3D4", VA = "0xCBD3D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018F")]
		public bool IsSecondInRange
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0xCBD400", Offset = "0xCBD400", VA = "0xCBD400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		public bool IsThirdInRange
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xCBD42C", Offset = "0xCBD42C", VA = "0xCBD42C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xCBD040", Offset = "0xCBD040", VA = "0xCBD040", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xCBCF54", Offset = "0xCBCF54", VA = "0xCBCF54")]
		private void ComputeBounds()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xCBD3CC", Offset = "0xCBD3CC", VA = "0xCBD3CC", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xCBD3A4", Offset = "0xCBD3A4", VA = "0xCBD3A4")]
		public void ResetLockState(SafeDialState state)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xCBD454", Offset = "0xCBD454", VA = "0xCBD454", Slot = "6")]
		protected override void OnStepChanged(int step, bool raiseEvents)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xCBD830", Offset = "0xCBD830", VA = "0xCBD830", Slot = "7")]
		protected override void OnAngleChanged(float angle, float delta)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xCBD9E0", Offset = "0xCBD9E0", VA = "0xCBD9E0")]
		public DemoSafeDial()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class DemoSafeDoor : MonoBehaviour
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xCBDA64", Offset = "0xCBDA64", VA = "0xCBDA64")]
		public DemoSafeDoor()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class DemoSlidingDoor : MonoBehaviour
	{
		[Token(Token = "0x200024B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841610", Offset = "0x841610")]
		private sealed class <OpenDoorRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoSlidingDoor <>4__this;

			[Token(Token = "0x4000CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x4000CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <LockRotateSpeed>5__3;

			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__4;

			[Token(Token = "0x17000191")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E12")]
				[Address(RVA = "0xC5CAB0", Offset = "0xC5CAB0", VA = "0xC5CAB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E14")]
				[Address(RVA = "0xC5CAF8", Offset = "0xC5CAF8", VA = "0xC5CAF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xC5C740", Offset = "0xC5C740", VA = "0xC5C740")]
			[DebuggerHidden]
			public <OpenDoorRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xC5C76C", Offset = "0xC5C76C", VA = "0xC5C76C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xC5C770", Offset = "0xC5C770", VA = "0xC5C770", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xC5CAB8", Offset = "0xC5CAB8", VA = "0xC5CAB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody LeftDoor;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody RightDoor;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Lock;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LockRotateTime;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LockRotateAngles;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float OpenOffset;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Speed;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip OpenedClip;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _opened;

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xCBDA6C", Offset = "0xCBDA6C", VA = "0xCBDA6C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xCBDA70", Offset = "0xCBDA70", VA = "0xCBDA70")]
		public void OpenDoors()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xCBDB2C", Offset = "0xCBDB2C", VA = "0xCBDB2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DD78", Offset = "0x84DD78")]
		private IEnumerator OpenDoorRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xCBDB98", Offset = "0xCBDB98", VA = "0xCBDB98")]
		public DemoSlidingDoor()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class DemoSocketFilter : HVREnumFlagsSocketFilter<DemoSocketableItems>
	{
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xCBDBAC", Offset = "0xCBDBAC", VA = "0xCBDBAC")]
		public DemoSocketFilter()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class DemoSocketables : HVREnumFlagsSocketable<DemoSocketableItems>
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xCBDBF8", Offset = "0xCBDBF8", VA = "0xCBDBF8")]
		public DemoSocketables()
		{
		}
	}
	[Token(Token = "0x200024E")]
	[Flags]
	public enum DemoSocketableItems
	{
		[Token(Token = "0x4000CD4")]
		None = 0,
		[Token(Token = "0x4000CD5")]
		Pistol = 1,
		[Token(Token = "0x4000CD6")]
		PistolMagazine = 2,
		[Token(Token = "0x4000CD7")]
		SMG = 4,
		[Token(Token = "0x4000CD8")]
		SMGMagazine = 8,
		[Token(Token = "0x4000CD9")]
		PowerCell = 0x10,
		[Token(Token = "0x4000CDA")]
		SmallObject = 0x20,
		[Token(Token = "0x4000CDB")]
		LargeObject = 0x40,
		[Token(Token = "0x4000CDC")]
		DoorKey = 0x80,
		[Token(Token = "0x4000CDD")]
		ShotgunShell = 0x100,
		[Token(Token = "0x4000CDE")]
		Valve = 0x200,
		[Token(Token = "0x4000CDF")]
		Key = 0x400,
		[Token(Token = "0x4000CE0")]
		All = -1
	}
	[Token(Token = "0x200024F")]
	public class DemoValveHologram : MonoBehaviour
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Interval;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion StartRotation;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion EndRotation;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _current;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _next;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _elapsed;

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xCBE178", Offset = "0xCBE178", VA = "0xCBE178")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xCBE18C", Offset = "0xCBE18C", VA = "0xCBE18C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xCBE234", Offset = "0xCBE234", VA = "0xCBE234")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xCBE2AC", Offset = "0xCBE2AC", VA = "0xCBE2AC")]
		public DemoValveHologram()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x841630", Offset = "0x841630")]
	public class DemoValveLock : MonoBehaviour
	{
		[Token(Token = "0x2000251")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841690", Offset = "0x841690")]
		private sealed class <MoveKey>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HVRGrabbable key;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DemoValveLock <>4__this;

			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <start>5__2;

			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <startRot>5__3;

			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsed>5__4;

			[Token(Token = "0x17000193")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E23")]
				[Address(RVA = "0xC5CDCC", Offset = "0xC5CDCC", VA = "0xC5CDCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E25")]
				[Address(RVA = "0xC5CE14", Offset = "0xC5CE14", VA = "0xC5CE14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E20")]
			[Address(RVA = "0xC5CB00", Offset = "0xC5CB00", VA = "0xC5CB00")]
			[DebuggerHidden]
			public <MoveKey>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xC5CB2C", Offset = "0xC5CB2C", VA = "0xC5CB2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E22")]
			[Address(RVA = "0xC5CB30", Offset = "0xC5CB30", VA = "0xC5CB30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E24")]
			[Address(RVA = "0xC5CDD4", Offset = "0xC5CDD4", VA = "0xC5CDD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoPassthroughSocket Socket;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HVRGrabbable FaceGrabbable;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AnimationTime;

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xCBE2C0", Offset = "0xCBE2C0", VA = "0xCBE2C0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xCBE3A4", Offset = "0xCBE3A4", VA = "0xCBE3A4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xCBE3A8", Offset = "0xCBE3A8", VA = "0xCBE3A8")]
		private void OnValveGrabbed(HVRGrabberBase grabber, HVRGrabbable key)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xCBE3D8", Offset = "0xCBE3D8", VA = "0xCBE3D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DE28", Offset = "0x84DE28")]
		private IEnumerator MoveKey(HVRGrabbable key)
		{
			return null;
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xCBE450", Offset = "0xCBE450", VA = "0xCBE450")]
		public DemoValveLock()
		{
		}
	}
}
namespace HurricaneVR.Samples
{
	[Token(Token = "0x2000252")]
	public class AmmoSocketFilter : HVREnumSocketFilter<AmmoType>
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xD97B74", Offset = "0xD97B74", VA = "0xD97B74")]
		public AmmoSocketFilter()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class AmmoSocketable : HVREnumSocketable<AmmoType>
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xD97BC0", Offset = "0xD97BC0", VA = "0xD97BC0")]
		public AmmoSocketable()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public enum AmmoType
	{
		[Token(Token = "0x4000CF2")]
		Mag556,
		[Token(Token = "0x4000CF3")]
		ShotgunShell
	}
	[Token(Token = "0x2000255")]
	public class Backpack : MonoBehaviour
	{
		[Token(Token = "0x2000256")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8416A0", Offset = "0x8416A0")]
		private sealed class <IgnoreColliders>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Backpack <>4__this;

			[Token(Token = "0x17000195")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E2F")]
				[Address(RVA = "0xC59FD4", Offset = "0xC59FD4", VA = "0xC59FD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000196")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E31")]
				[Address(RVA = "0xC5A01C", Offset = "0xC5A01C", VA = "0xC5A01C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0xC59E44", Offset = "0xC59E44", VA = "0xC59E44")]
			[DebuggerHidden]
			public <IgnoreColliders>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0xC59E70", Offset = "0xC59E70", VA = "0xC59E70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0xC59E74", Offset = "0xC59E74", VA = "0xC59E74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0xC59FDC", Offset = "0xC59FDC", VA = "0xC59FDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x849FD8", Offset = "0x849FD8")]
		public List<Collider> Colliders;

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xD9DD2C", Offset = "0xD9DD2C", VA = "0xD9DD2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xD9DDEC", Offset = "0xD9DDEC", VA = "0xD9DDEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DED8", Offset = "0x84DED8")]
		public IEnumerator IgnoreColliders()
		{
			return null;
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xD9DE58", Offset = "0xD9DE58", VA = "0xD9DE58")]
		public void IgnoreCollision(HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xD9E0A0", Offset = "0xD9E0A0", VA = "0xD9E0A0")]
		public Backpack()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public enum CombinationLockState
	{
		[Token(Token = "0x4000CF9")]
		CamOne,
		[Token(Token = "0x4000CFA")]
		CamTwo,
		[Token(Token = "0x4000CFB")]
		CamThree,
		[Token(Token = "0x4000CFC")]
		Unlocked
	}
	[Token(Token = "0x2000258")]
	public class CombinationLock : HVRDial
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshPro NumberLabel;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TextMeshPro DebugLabel;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool DisplayDebug;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int First;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int Second;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int Third;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int CurrentNumber;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float CamDistance;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float PreviousDistance;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float Tolerance;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float LowerBound;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float UpperBound;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int AccuracyAllowance;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private CombinationLockState _state;

		[Token(Token = "0x17000197")]
		public CombinationLockState State
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0xCB80E8", Offset = "0xCB80E8", VA = "0xCB80E8")]
			get
			{
				return default(CombinationLockState);
			}
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0xCB80F0", Offset = "0xCB80F0", VA = "0xCB80F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public int NumberOfRotations
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0xCB81A4", Offset = "0xCB81A4", VA = "0xCB81A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000199")]
		public bool IsFirstInRange
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xCB8578", Offset = "0xCB8578", VA = "0xCB8578")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019A")]
		public bool IsSecondInRange
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xCB85A4", Offset = "0xCB85A4", VA = "0xCB85A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019B")]
		public bool IsThirdInRange
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xCB85D0", Offset = "0xCB85D0", VA = "0xCB85D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xCB81E4", Offset = "0xCB81E4", VA = "0xCB81E4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xCB80F8", Offset = "0xCB80F8", VA = "0xCB80F8")]
		private void ComputeBounds()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xCB8570", Offset = "0xCB8570", VA = "0xCB8570", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xCB8548", Offset = "0xCB8548", VA = "0xCB8548")]
		public void ResetLockState(CombinationLockState state)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xCB85F8", Offset = "0xCB85F8", VA = "0xCB85F8", Slot = "6")]
		protected override void OnStepChanged(int step, bool raiseEvents)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xCB89A4", Offset = "0xCB89A4", VA = "0xCB89A4", Slot = "7")]
		protected override void OnAngleChanged(float angle, float delta, float percent, bool raiseEvents)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xCB8B54", Offset = "0xCB8B54", VA = "0xCB8B54")]
		public CombinationLock()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8416B0", Offset = "0x8416B0")]
	public class ExampleLight : MonoBehaviour
	{
		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light Light;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxIntensity;

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x1348B80", Offset = "0x1348B80", VA = "0x1348B80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x1348BD4", Offset = "0x1348BD4", VA = "0x1348BD4")]
		public void OnAngledChanged(float angle, float delta, float percent)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x1348BFC", Offset = "0x1348BFC", VA = "0x1348BFC")]
		public ExampleLight()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class Examples : MonoBehaviour
	{
		[Token(Token = "0x200025B")]
		private class ResetState
		{
			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HVRGrabbable Grabbable;

			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HVRGrabbable Clone;

			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 Position;

			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion Rotation;

			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84A010", Offset = "0x84A010")]
			private Vector3 <Scale>k__BackingField;

			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform Parent;

			[Token(Token = "0x1700019C")]
			public Vector3 Scale
			{
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0xC600A0", Offset = "0xC600A0", VA = "0xC600A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DF98", Offset = "0x84DF98")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000E4B")]
				[Address(RVA = "0xC600AC", Offset = "0xC600AC", VA = "0xC600AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DFA8", Offset = "0x84DFA8")]
				set
				{
				}
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xC600B8", Offset = "0xC600B8", VA = "0xC600B8")]
			public ResetState()
			{
			}
		}

		[Token(Token = "0x200025C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841710", Offset = "0x841710")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform parent;

			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<HVRGrabbable, bool> <>9__0;

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xC5FFF8", Offset = "0xC5FFF8", VA = "0xC5FFF8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0xC60000", Offset = "0xC60000", VA = "0xC60000")]
			internal bool <AddResetGrabbable>b__0(HVRGrabbable e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Parents;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HVRGrabbable> Grabbables;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<ResetState> _grabbableState;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<HVRGrabbable> _balls;

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x1348C04", Offset = "0x1348C04", VA = "0x1348C04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x1348EC0", Offset = "0x1348EC0", VA = "0x1348EC0")]
		private void AddResetGrabbable(Transform parent)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x134925C", Offset = "0x134925C", VA = "0x134925C")]
		private void SaveResetGrabbable(Transform parent, HVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x13493EC", Offset = "0x13493EC", VA = "0x13493EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x13493F0", Offset = "0x13493F0", VA = "0x13493F0")]
		public void BallSpawned(HVRSocket socket, GameObject ball)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x134947C", Offset = "0x134947C", VA = "0x134947C")]
		public void ResetGrabbables()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x1349AF8", Offset = "0x1349AF8", VA = "0x1349AF8")]
		public Examples()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x1349C10", Offset = "0x1349C10", VA = "0x1349C10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DF88", Offset = "0x84DF88")]
		private void <ResetGrabbables>b__10_0(HVRGrabbable grabbable)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class HVRShoulderGrabber : HVRSocketContainerGrabber
	{
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xCA2EE4", Offset = "0xCA2EE4", VA = "0xCA2EE4", Slot = "47")]
		public override bool CanHover(HVRGrabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xCA3090", Offset = "0xCA3090", VA = "0xCA3090")]
		public HVRShoulderGrabber()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class HVRShoulderSocket : HVRSocket
	{
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xCA3098", Offset = "0xCA3098", VA = "0xCA3098", Slot = "47")]
		public override bool CanHover(HVRGrabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xCA3244", Offset = "0xCA3244", VA = "0xCA3244")]
		public HVRShoulderSocket()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class Holster : HVRSocket
	{
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xCA5718", Offset = "0xCA5718", VA = "0xCA5718", Slot = "55")]
		protected override Quaternion GetRotationOffset(HVRGrabbable grabbable)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xCA5818", Offset = "0xCA5818", VA = "0xCA5818", Slot = "54")]
		protected override Vector3 GetPositionOffset(HVRGrabbable grabbable)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xCA5918", Offset = "0xCA5918", VA = "0xCA5918")]
		public Holster()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class HolsterOrientation : MonoBehaviour
	{
		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Orientation;

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xCA5920", Offset = "0xCA5920", VA = "0xCA5920")]
		public HolsterOrientation()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class ItemsSocketFilter : HVREnumFlagsSocketFilter<Items>
	{
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xCA7B9C", Offset = "0xCA7B9C", VA = "0xCA7B9C")]
		public ItemsSocketFilter()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class ItemsSocketable : HVREnumFlagsSocketable<Items>
	{
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xCA7BE8", Offset = "0xCA7BE8", VA = "0xCA7BE8")]
		public ItemsSocketable()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[Flags]
	public enum Items
	{
		[Token(Token = "0x4000D1C")]
		None = 0,
		[Token(Token = "0x4000D1D")]
		Item = 1,
		[Token(Token = "0x4000D1E")]
		LargeItem = 2,
		[Token(Token = "0x4000D1F")]
		SmallWeapon = 4,
		[Token(Token = "0x4000D20")]
		MadsonD9Magazine = 8,
		[Token(Token = "0x4000D21")]
		Ball = 0x10,
		[Token(Token = "0x4000D22")]
		All = -1
	}
	[Token(Token = "0x2000264")]
	public class KeypadDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro Display;

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xCAA31C", Offset = "0xCAA31C", VA = "0xCAA31C")]
		public void Unlocked()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xCAA3C8", Offset = "0xCAA3C8", VA = "0xCAA3C8")]
		public KeypadDisplay()
		{
		}
	}
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x841730", Offset = "0x841730")]
	public class LeverDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _step;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _angle;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro _tm;

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xCABBDC", Offset = "0xCABBDC", VA = "0xCABBDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xCABC30", Offset = "0xCABC30", VA = "0xCABC30")]
		public void OnStepChanged(int step)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xCABD10", Offset = "0xCABD10", VA = "0xCABD10")]
		public void OnAngleChanged(float angle, float delta, float percent)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xCABE04", Offset = "0xCABE04", VA = "0xCABE04")]
		public LeverDisplay()
		{
		}
	}
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x841790", Offset = "0x841790")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x841790", Offset = "0x841790")]
	public class LockedDoor : MonoBehaviour
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HingeJoint _hinge;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinAngle;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxAngle;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool LockOnStart;

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xCAC854", Offset = "0xCAC854", VA = "0xCAC854")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xCAC8E4", Offset = "0xCAC8E4", VA = "0xCAC8E4")]
		private void Lock()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xCAC9A4", Offset = "0xCAC9A4", VA = "0xCAC9A4")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xCACA64", Offset = "0xCACA64", VA = "0xCACA64")]
		public LockedDoor()
		{
		}
	}
}
namespace HurricaneVR.Samples.Prefabs.Keypad
{
	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x841824", Offset = "0x841824")]
	public class KeyPadButton : HVRButton
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x84A020", Offset = "0x84A020")]
		public char Key;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshPro Text;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshPro Ring;

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xCA9D68", Offset = "0xCA9D68", VA = "0xCA9D68")]
		public KeyPadButton()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class Keypad : MonoBehaviour
	{
		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent Unlocked;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Code;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro Display;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Entry;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyPadButton LeftActive;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public KeyPadButton RightActive;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int MaxLength;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _unlocked;

		[Token(Token = "0x1700019D")]
		public int Index
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0xCA9D70", Offset = "0xCA9D70", VA = "0xCA9D70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xCA9D88", Offset = "0xCA9D88", VA = "0xCA9D88", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xCAA0DC", Offset = "0xCAA0DC", VA = "0xCAA0DC", Slot = "5")]
		protected virtual void OnButtonDown(HVRButton button)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xCAA298", Offset = "0xCAA298", VA = "0xCAA298")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xCAA29C", Offset = "0xCAA29C", VA = "0xCAA29C")]
		public Keypad()
		{
		}
	}
}
namespace HurricaneVR.Framework.Oculus
{
	[Token(Token = "0x2000269")]
	public class HVROculusManager : MonoBehaviour
	{
		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonoBehaviour[] ComponentsToDisable;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<MonoBehaviour, Vector3> Stuff;

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xCA2A6C", Offset = "0xCA2A6C", VA = "0xCA2A6C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xCA2B58", Offset = "0xCA2B58", VA = "0xCA2B58")]
		private void OnResume()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xCA2C48", Offset = "0xCA2C48", VA = "0xCA2C48")]
		private void OnPaused()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xCA2D80", Offset = "0xCA2D80", VA = "0xCA2D80")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xCA2E6C", Offset = "0xCA2E6C", VA = "0xCA2E6C")]
		public HVROculusManager()
		{
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x200026A")]
	[Preserve]
	public class ES3Type_ES3Prefab : ES3Type
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x193A058", Offset = "0x193A058", VA = "0x193A058")]
		public ES3Type_ES3Prefab()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x193A11C", Offset = "0x193A11C", VA = "0x193A11C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000E70")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200026B")]
	public class ES3Type_ES3PrefabInternal : ES3Type
	{
		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1D4B3FC", Offset = "0x1D4B3FC", VA = "0x1D4B3FC")]
		public ES3Type_ES3PrefabInternal()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1D4B4C4", Offset = "0x1D4B4C4", VA = "0x1D4B4C4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000E74")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E75")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class ES32DArrayType : ES3CollectionType
	{
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xCC824C", Offset = "0xCC824C", VA = "0xCC824C")]
		public ES32DArrayType(Type type)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xCC8348", Offset = "0xCC8348", VA = "0xCC8348", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode unityObjectType)
		{
		}

		[Token(Token = "0x6000E79")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xCC8564", Offset = "0xCC8564", VA = "0xCC8564", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E7B")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xCC87DC", Offset = "0xCC87DC", VA = "0xCC87DC", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class ES33DArrayType : ES3CollectionType
	{
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xCC8AAC", Offset = "0xCC8AAC", VA = "0xCC8AAC")]
		public ES33DArrayType(Type type)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xCC8AB0", Offset = "0xCC8AB0", VA = "0xCC8AB0", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000E7F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xCC8D64", Offset = "0xCC8D64", VA = "0xCC8D64", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xCC90B8", Offset = "0xCC90B8", VA = "0xCC90B8", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200026E")]
	[Preserve]
	public class ES3ArrayType : ES3CollectionType
	{
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xCC9428", Offset = "0xCC9428", VA = "0xCC9428")]
		public ES3ArrayType(Type type)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xCC942C", Offset = "0xCC942C", VA = "0xCC942C")]
		public ES3ArrayType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xCC9494", Offset = "0xCC9494", VA = "0xCC9494", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xCC9618", Offset = "0xCC9618", VA = "0xCC9618", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E87")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xCC984C", Offset = "0xCC984C", VA = "0xCC984C", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200026F")]
	[Preserve]
	public abstract class ES3CollectionType : ES3Type
	{
		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Type elementType;

		[Token(Token = "0x6000E8A")]
		public abstract object Read(ES3Reader reader);

		[Token(Token = "0x6000E8B")]
		public abstract void ReadInto(ES3Reader reader, object obj);

		[Token(Token = "0x6000E8C")]
		public abstract void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode);

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xCC8250", Offset = "0xCC8250", VA = "0xCC8250")]
		public ES3CollectionType(Type type)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xCC9460", Offset = "0xCC9460", VA = "0xCC9460")]
		public ES3CollectionType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xCCE708", Offset = "0xCCE708", VA = "0xCCE708", Slot = "4")]
		[Preserve]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000E90")]
		protected virtual bool ReadICollection<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E91")]
		protected virtual void ReadICollectionInto<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xCCE718", Offset = "0xCCE718", VA = "0xCCE718", Slot = "12")]
		[Preserve]
		protected virtual void ReadICollectionInto(ES3Reader reader, ICollection collection, ES3Type elementType)
		{
		}
	}
	[Token(Token = "0x2000270")]
	[Preserve]
	public class ES3DictionaryType : ES3Type
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Type keyType;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ES3Type valueType;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ES3Reflection.ES3ReflectedMethod readMethod;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ES3Reflection.ES3ReflectedMethod readIntoMethod;

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xCCF470", Offset = "0xCCF470", VA = "0xCCF470")]
		public ES3DictionaryType(Type type)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xCCF594", Offset = "0xCCF594", VA = "0xCCF594")]
		public ES3DictionaryType(Type type, ES3Type keyType, ES3Type valueType)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xCCF5E4", Offset = "0xCCF5E4", VA = "0xCCF5E4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xCCF608", Offset = "0xCCF608", VA = "0xCCF608")]
		public void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000E97")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E98")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xCCFA18", Offset = "0xCCFA18", VA = "0xCCFA18")]
		public object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xCCFC64", Offset = "0xCCFC64", VA = "0xCCFC64")]
		public void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000271")]
	[Preserve]
	public class ES3HashSetType : ES3CollectionType
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xCD17E0", Offset = "0xCD17E0", VA = "0xCD17E0")]
		public ES3HashSetType(Type type)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xCD17E4", Offset = "0xCD17E4", VA = "0xCD17E4", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000E9D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xCD1DC4", Offset = "0xCD1DC4", VA = "0xCD1DC4", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xCD20B0", Offset = "0xCD20B0", VA = "0xCD20B0", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000272")]
	[Preserve]
	public class ES3ListType : ES3CollectionType
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1923A80", Offset = "0x1923A80", VA = "0x1923A80")]
		public ES3ListType(Type type)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1923A88", Offset = "0x1923A88", VA = "0x1923A88")]
		public ES3ListType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x1923A90", Offset = "0x1923A90", VA = "0x1923A90", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000EA4")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EA5")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1923E74", Offset = "0x1923E74", VA = "0x1923E74", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x19241EC", Offset = "0x19241EC", VA = "0x19241EC", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000273")]
	[Preserve]
	public class ES3QueueType : ES3CollectionType
	{
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x1926414", Offset = "0x1926414", VA = "0x1926414")]
		public ES3QueueType(Type type)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x192641C", Offset = "0x192641C", VA = "0x192641C", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000EAA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EAB")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x19267EC", Offset = "0x19267EC", VA = "0x19267EC", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1926D38", Offset = "0x1926D38", VA = "0x1926D38", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000274")]
	[Preserve]
	public class ES3StackType : ES3CollectionType
	{
		[Serializable]
		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841904", Offset = "0x841904")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MethodInfo, bool> <>9__4_0;

			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xC5FC08", Offset = "0xC5FC08", VA = "0xC5FC08")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0xC5FC10", Offset = "0xC5FC10", VA = "0xC5FC10")]
			internal bool <Read>b__4_0(MethodInfo t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x19325BC", Offset = "0x19325BC", VA = "0x19325BC")]
		public ES3StackType(Type type)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x19325C4", Offset = "0x19325C4", VA = "0x19325C4", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000EB0")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EB1")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1932994", Offset = "0x1932994", VA = "0x1932994", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1932DE8", Offset = "0x1932DE8", VA = "0x1932DE8", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000276")]
	[Preserve]
	public abstract class ES3ComponentType : ES3UnityObjectType
	{
		[Token(Token = "0x4000D42")]
		protected const string gameObjectPropertyName = "goID";

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xCCEC48", Offset = "0xCCEC48", VA = "0xCCEC48")]
		public ES3ComponentType(Type type)
		{
		}

		[Token(Token = "0x6000EB8")]
		protected abstract void WriteComponent(object obj, ES3Writer writer);

		[Token(Token = "0x6000EB9")]
		protected abstract void ReadComponent<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xCCEC50", Offset = "0xCCEC50", VA = "0xCCEC50", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000EBB")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000EBC")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EBD")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xCCEF08", Offset = "0xCCEF08", VA = "0xCCEF08")]
		private static Component GetOrAddComponent(GameObject go, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xCCEFC4", Offset = "0xCCEFC4", VA = "0xCCEFC4")]
		public static Component CreateComponent(Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000277")]
	[Preserve]
	public abstract class ES3ObjectType : ES3Type
	{
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1924824", Offset = "0x1924824", VA = "0x1924824")]
		public ES3ObjectType(Type type)
		{
		}

		[Token(Token = "0x6000EC1")]
		protected abstract void WriteObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000EC2")]
		protected abstract object ReadObject<T>(ES3Reader reader);

		[Token(Token = "0x6000EC3")]
		protected virtual void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x19248F4", Offset = "0x19248F4", VA = "0x19248F4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000EC5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000278")]
	[Preserve]
	public abstract class ES3ScriptableObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x192BEC4", Offset = "0x192BEC4", VA = "0x192BEC4")]
		public ES3ScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x6000EC8")]
		protected abstract void WriteScriptableObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000EC9")]
		protected abstract void ReadScriptableObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x192FA44", Offset = "0x192FA44", VA = "0x192FA44", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ECB")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000ECC")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000279")]
	[Preserve]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x841944", Offset = "0x841944")]
	public abstract class ES3Type
	{
		[Token(Token = "0x4000D43")]
		public const string typeFieldName = "__type";

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Member[] members;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPrimitive;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isValueType;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool isCollection;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool isDictionary;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isES3TypeUnityObject;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isReflectedType;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool isUnsupported;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int priority;

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1924828", Offset = "0x1924828", VA = "0x1924828")]
		protected ES3Type(Type type)
		{
		}

		[Token(Token = "0x6000ECF")]
		public abstract void Write(object obj, ES3Writer writer);

		[Token(Token = "0x6000ED0")]
		public abstract object Read<T>(ES3Reader reader);

		[Token(Token = "0x6000ED1")]
		public virtual void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1924AC8", Offset = "0x1924AC8", VA = "0x1924AC8")]
		protected bool WriteUsingDerivedType(object obj, ES3Writer writer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED3")]
		protected void ReadUsingDerivedType<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1933534", Offset = "0x1933534", VA = "0x1933534")]
		internal string ReadPropertyName(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x192BD10", Offset = "0x192BD10", VA = "0x192BD10")]
		protected void WriteProperties(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x193356C", Offset = "0x193356C", VA = "0x193356C")]
		protected object ReadProperties(ES3Reader reader, object obj)
		{
			return null;
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x192BD00", Offset = "0x192BD00", VA = "0x192BD00")]
		protected void GetMembers(bool safe)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x192BF30", Offset = "0x192BF30", VA = "0x192BF30")]
		protected void GetMembers(bool safe, string[] memberNames)
		{
		}
	}
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x841980", Offset = "0x841980")]
	public class ES3PropertiesAttribute : Attribute
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string[] members;

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x19263E8", Offset = "0x19263E8", VA = "0x19263E8")]
		public ES3PropertiesAttribute(params string[] members)
		{
		}
	}
	[Token(Token = "0x200027B")]
	[Preserve]
	public abstract class ES3UnityObjectType : ES3ObjectType
	{
		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x133D81C", Offset = "0x133D81C", VA = "0x133D81C")]
		public ES3UnityObjectType(Type type)
		{
		}

		[Token(Token = "0x6000EDB")]
		protected abstract void WriteUnityObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000EDC")]
		protected abstract void ReadUnityObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000EDD")]
		protected abstract object ReadUnityObject<T>(ES3Reader reader);

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1345B2C", Offset = "0x1345B2C", VA = "0x1345B2C", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x1345B40", Offset = "0x1345B40", VA = "0x1345B40", Slot = "13")]
		public virtual void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000EE0")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000EE1")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1345DB8", Offset = "0x1345DB8", VA = "0x1345DB8")]
		protected bool WriteUsingDerivedType(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200027C")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8419A4", Offset = "0x8419A4")]
	public class ES3Type_Random : ES3ObjectType
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1DCA490", Offset = "0x1DCA490", VA = "0x1DCA490")]
		public ES3Type_Random()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1DCA558", Offset = "0x1DCA558", VA = "0x1DCA558", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000EE5")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000EE6")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200027D")]
	public class ES3Type_RandomArray : ES3ArrayType
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1DCA660", Offset = "0x1DCA660", VA = "0x1DCA660")]
		public ES3Type_RandomArray()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[Preserve]
	public class ES3Type_DateTime : ES3Type
	{
		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x1939D60", Offset = "0x1939D60", VA = "0x1939D60")]
		public ES3Type_DateTime()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1939E24", Offset = "0x1939E24", VA = "0x1939E24", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000EEB")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200027F")]
	public class ES3Type_DateTimeArray : ES3ArrayType
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1939F60", Offset = "0x1939F60", VA = "0x1939F60")]
		public ES3Type_DateTimeArray()
		{
		}
	}
	[Token(Token = "0x2000280")]
	[Preserve]
	public class ES3Type_ES3Ref : ES3Type
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1D4B664", Offset = "0x1D4B664", VA = "0x1D4B664")]
		public ES3Type_ES3Ref()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1D4B734", Offset = "0x1D4B734", VA = "0x1D4B734", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000EF0")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000281")]
	public class ES3Type_ES3RefArray : ES3ArrayType
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1D4B840", Offset = "0x1D4B840", VA = "0x1D4B840")]
		public ES3Type_ES3RefArray()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class ES3Type_ES3RefDictionary : ES3DictionaryType
	{
		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1D4B9AC", Offset = "0x1D4B9AC", VA = "0x1D4B9AC")]
		public ES3Type_ES3RefDictionary()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[Preserve]
	public class ES3Type_UIntPtr : ES3Type
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1341534", Offset = "0x1341534", VA = "0x1341534")]
		public ES3Type_UIntPtr()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1341604", Offset = "0x1341604", VA = "0x1341604", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000EF8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000284")]
	public class ES3Type_UIntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x134169C", Offset = "0x134169C", VA = "0x134169C")]
		public ES3Type_UIntPtrArray()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[Preserve]
	public class ES3Type_bool : ES3Type
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1342EFC", Offset = "0x1342EFC", VA = "0x1342EFC")]
		public ES3Type_bool()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1342FCC", Offset = "0x1342FCC", VA = "0x1342FCC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000EFD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000286")]
	public class ES3Type_boolArray : ES3ArrayType
	{
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1343064", Offset = "0x1343064", VA = "0x1343064")]
		public ES3Type_boolArray()
		{
		}
	}
	[Token(Token = "0x2000287")]
	[Preserve]
	public class ES3Type_byte : ES3Type
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x134315C", Offset = "0x134315C", VA = "0x134315C")]
		public ES3Type_byte()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x134322C", Offset = "0x134322C", VA = "0x134322C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F02")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000288")]
	[Preserve]
	public class ES3Type_byteArray : ES3Type
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x13432C4", Offset = "0x13432C4", VA = "0x13432C4")]
		public ES3Type_byteArray()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1343394", Offset = "0x1343394", VA = "0x1343394", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F06")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000289")]
	[Preserve]
	public class ES3Type_char : ES3Type
	{
		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x134342C", Offset = "0x134342C", VA = "0x134342C")]
		public ES3Type_char()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x13434FC", Offset = "0x13434FC", VA = "0x13434FC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F0A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200028A")]
	public class ES3Type_charArray : ES3ArrayType
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1343594", Offset = "0x1343594", VA = "0x1343594")]
		public ES3Type_charArray()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[Preserve]
	public class ES3Type_decimal : ES3Type
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x134368C", Offset = "0x134368C", VA = "0x134368C")]
		public ES3Type_decimal()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x134375C", Offset = "0x134375C", VA = "0x134375C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F0F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200028C")]
	public class ES3Type_decimalArray : ES3ArrayType
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x13437F4", Offset = "0x13437F4", VA = "0x13437F4")]
		public ES3Type_decimalArray()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[Preserve]
	public class ES3Type_double : ES3Type
	{
		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x13438EC", Offset = "0x13438EC", VA = "0x13438EC")]
		public ES3Type_double()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x13439BC", Offset = "0x13439BC", VA = "0x13439BC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F14")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200028E")]
	public class ES3Type_doubleArray : ES3ArrayType
	{
		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1343A54", Offset = "0x1343A54", VA = "0x1343A54")]
		public ES3Type_doubleArray()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[Preserve]
	public class ES3Type_enum : ES3Type
	{
		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Type underlyingType;

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1343B4C", Offset = "0x1343B4C", VA = "0x1343B4C")]
		public ES3Type_enum(Type type)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1343C14", Offset = "0x1343C14", VA = "0x1343C14", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F19")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000290")]
	[Preserve]
	public class ES3Type_float : ES3Type
	{
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x13446D0", Offset = "0x13446D0", VA = "0x13446D0")]
		public ES3Type_float()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x13447A0", Offset = "0x13447A0", VA = "0x13447A0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F1D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000291")]
	public class ES3Type_floatArray : ES3ArrayType
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1344838", Offset = "0x1344838", VA = "0x1344838")]
		public ES3Type_floatArray()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[Preserve]
	public class ES3Type_int : ES3Type
	{
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1344930", Offset = "0x1344930", VA = "0x1344930")]
		public ES3Type_int()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1344A00", Offset = "0x1344A00", VA = "0x1344A00", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F22")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000293")]
	public class ES3Type_intArray : ES3ArrayType
	{
		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1344A98", Offset = "0x1344A98", VA = "0x1344A98")]
		public ES3Type_intArray()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[Preserve]
	public class ES3Type_IntPtr : ES3Type
	{
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1D4F8C0", Offset = "0x1D4F8C0", VA = "0x1D4F8C0")]
		public ES3Type_IntPtr()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1D4F990", Offset = "0x1D4F990", VA = "0x1D4F990", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F27")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000295")]
	public class ES3Type_IntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x1D4FA34", Offset = "0x1D4FA34", VA = "0x1D4FA34")]
		public ES3Type_IntPtrArray()
		{
		}
	}
	[Token(Token = "0x2000296")]
	[Preserve]
	public class ES3Type_long : ES3Type
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x1344B90", Offset = "0x1344B90", VA = "0x1344B90")]
		public ES3Type_long()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1344C60", Offset = "0x1344C60", VA = "0x1344C60", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F2C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000297")]
	public class ES3Type_longArray : ES3ArrayType
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x1344CF8", Offset = "0x1344CF8", VA = "0x1344CF8")]
		public ES3Type_longArray()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[Preserve]
	public class ES3Type_sbyte : ES3Type
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x1344DF0", Offset = "0x1344DF0", VA = "0x1344DF0")]
		public ES3Type_sbyte()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x1344EC0", Offset = "0x1344EC0", VA = "0x1344EC0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F31")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000299")]
	public class ES3Type_sbyteArray : ES3ArrayType
	{
		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x1344F58", Offset = "0x1344F58", VA = "0x1344F58")]
		public ES3Type_sbyteArray()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[Preserve]
	public class ES3Type_short : ES3Type
	{
		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x1345050", Offset = "0x1345050", VA = "0x1345050")]
		public ES3Type_short()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1345120", Offset = "0x1345120", VA = "0x1345120", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F36")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200029B")]
	public class ES3Type_shortArray : ES3ArrayType
	{
		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x13451B8", Offset = "0x13451B8", VA = "0x13451B8")]
		public ES3Type_shortArray()
		{
		}
	}
	[Token(Token = "0x200029C")]
	[Preserve]
	public class ES3Type_string : ES3Type
	{
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x13452B0", Offset = "0x13452B0", VA = "0x13452B0")]
		public ES3Type_string()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x1345380", Offset = "0x1345380", VA = "0x1345380", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F3B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200029D")]
	public class ES3Type_StringArray : ES3ArrayType
	{
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x133E738", Offset = "0x133E738", VA = "0x133E738")]
		public ES3Type_StringArray()
		{
		}
	}
	[Token(Token = "0x200029E")]
	[Preserve]
	public class ES3Type_uint : ES3Type
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x134540C", Offset = "0x134540C", VA = "0x134540C")]
		public ES3Type_uint()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x13454DC", Offset = "0x13454DC", VA = "0x13454DC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F40")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200029F")]
	public class ES3Type_uintArray : ES3ArrayType
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1345574", Offset = "0x1345574", VA = "0x1345574")]
		public ES3Type_uintArray()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[Preserve]
	public class ES3Type_ulong : ES3Type
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x134566C", Offset = "0x134566C", VA = "0x134566C")]
		public ES3Type_ulong()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x134573C", Offset = "0x134573C", VA = "0x134573C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F45")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A1")]
	public class ES3Type_ulongArray : ES3ArrayType
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x13457D4", Offset = "0x13457D4", VA = "0x13457D4")]
		public ES3Type_ulongArray()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[Preserve]
	public class ES3Type_ushort : ES3Type
	{
		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x13458CC", Offset = "0x13458CC", VA = "0x13458CC")]
		public ES3Type_ushort()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x134599C", Offset = "0x134599C", VA = "0x134599C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F4A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A3")]
	public class ES3Type_ushortArray : ES3ArrayType
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1345A34", Offset = "0x1345A34", VA = "0x1345A34")]
		public ES3Type_ushortArray()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	[Preserve]
	internal class ES3ReflectedComponentType : ES3ComponentType
	{
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x192BCC8", Offset = "0x192BCC8", VA = "0x192BCC8")]
		public ES3ReflectedComponentType(Type type)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x192BD0C", Offset = "0x192BD0C", VA = "0x192BD0C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F4F")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[Preserve]
	internal class ES3ReflectedObjectType : ES3ObjectType
	{
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x192BE54", Offset = "0x192BE54", VA = "0x192BE54")]
		public ES3ReflectedObjectType(Type type)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x192BE88", Offset = "0x192BE88", VA = "0x192BE88", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F52")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000F53")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A6")]
	[Preserve]
	internal class ES3ReflectedScriptableObjectType : ES3ScriptableObjectType
	{
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x192BE8C", Offset = "0x192BE8C", VA = "0x192BE8C")]
		public ES3ReflectedScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x192BECC", Offset = "0x192BECC", VA = "0x192BECC", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F56")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[Preserve]
	internal class ES3ReflectedType : ES3Type
	{
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x192BED0", Offset = "0x192BED0", VA = "0x192BED0")]
		public ES3ReflectedType(Type type)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x192BEF8", Offset = "0x192BEF8", VA = "0x192BEF8")]
		public ES3ReflectedType(Type type, string[] members)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x192C0C8", Offset = "0x192C0C8", VA = "0x192C0C8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F5A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[Preserve]
	internal class ES3ReflectedUnityObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x192C4B4", Offset = "0x192C4B4", VA = "0x192C4B4")]
		public ES3ReflectedUnityObjectType(Type type)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x192C4EC", Offset = "0x192C4EC", VA = "0x192C4EC", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F5E")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000F5F")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[Preserve]
	internal class ES3ReflectedValueType : ES3Type
	{
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x192C4F0", Offset = "0x192C4F0", VA = "0x192C4F0")]
		public ES3ReflectedValueType(Type type)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x192C524", Offset = "0x192C524", VA = "0x192C524", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F62")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000F63")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x841BE8", Offset = "0x841BE8")]
	public class ES3Type_BoxCollider : ES3ComponentType
	{
		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1936E2C", Offset = "0x1936E2C", VA = "0x1936E2C")]
		public ES3Type_BoxCollider()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1936EF4", Offset = "0x1936EF4", VA = "0x1936EF4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F66")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x841CBC", Offset = "0x841CBC")]
	[Preserve]
	public class ES3Type_BoxCollider2D : ES3ComponentType
	{
		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x193719C", Offset = "0x193719C", VA = "0x193719C")]
		public ES3Type_BoxCollider2D()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x1937264", Offset = "0x1937264", VA = "0x1937264", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F6A")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x841DA0", Offset = "0x841DA0")]
	[Preserve]
	public class ES3Type_Camera : ES3ComponentType
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x19375AC", Offset = "0x19375AC", VA = "0x19375AC")]
		public ES3Type_Camera()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x1937674", Offset = "0x1937674", VA = "0x1937674", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F6E")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842024", Offset = "0x842024")]
	[Preserve]
	public class ES3Type_CapsuleCollider : ES3ComponentType
	{
		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x1938218", Offset = "0x1938218", VA = "0x1938218")]
		public ES3Type_CapsuleCollider()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x19382E0", Offset = "0x19382E0", VA = "0x19382E0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F72")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[Preserve]
	public class ES3Type_EventSystem : ES3ComponentType
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x1D4BF48", Offset = "0x1D4BF48", VA = "0x1D4BF48")]
		public ES3Type_EventSystem()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1D4C010", Offset = "0x1D4C010", VA = "0x1D4C010", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F76")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842128", Offset = "0x842128")]
	public class ES3Type_Image : ES3ComponentType
	{
		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1D4EA84", Offset = "0x1D4EA84", VA = "0x1D4EA84")]
		public ES3Type_Image()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1D4EB54", Offset = "0x1D4EB54", VA = "0x1D4EB54", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F7A")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class ES3Type_ImageArray : ES3ArrayType
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1D4F40C", Offset = "0x1D4F40C", VA = "0x1D4F40C")]
		public ES3Type_ImageArray()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8422EC", Offset = "0x8422EC")]
	public class ES3Type_MeshCollider : ES3ComponentType
	{
		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1DC5F90", Offset = "0x1DC5F90", VA = "0x1DC5F90")]
		public ES3Type_MeshCollider()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1DC6058", Offset = "0x1DC6058", VA = "0x1DC6058", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F7F")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class ES3Type_MeshColliderArray : ES3ArrayType
	{
		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1DC637C", Offset = "0x1DC637C", VA = "0x1DC637C")]
		public ES3Type_MeshColliderArray()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8423E0", Offset = "0x8423E0")]
	public class ES3Type_MeshFilter : ES3ComponentType
	{
		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1DC6474", Offset = "0x1DC6474", VA = "0x1DC6474")]
		public ES3Type_MeshFilter()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1DC653C", Offset = "0x1DC653C", VA = "0x1DC653C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F84")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class ES3Type_MeshFilterArray : ES3ArrayType
	{
		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1DC65E8", Offset = "0x1DC65E8", VA = "0x1DC65E8")]
		public ES3Type_MeshFilterArray()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842464", Offset = "0x842464")]
	[Preserve]
	public class ES3Type_MeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1DC66E0", Offset = "0x1DC66E0", VA = "0x1DC66E0")]
		public ES3Type_MeshRenderer()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1DC67A8", Offset = "0x1DC67A8", VA = "0x1DC67A8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F89")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class ES3Type_MeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1DC6FB4", Offset = "0x1DC6FB4", VA = "0x1DC6FB4")]
		public ES3Type_MeshRendererArray()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8425E8", Offset = "0x8425E8")]
	[Preserve]
	public class ES3Type_ParticleSystem : ES3ComponentType
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1DC8630", Offset = "0x1DC8630", VA = "0x1DC8630")]
		public ES3Type_ParticleSystem()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x1DC86F8", Offset = "0x1DC86F8", VA = "0x1DC86F8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F8E")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x84280C", Offset = "0x84280C")]
	public class ES3Type_PolygonCollider2D : ES3ComponentType
	{
		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1DC996C", Offset = "0x1DC996C", VA = "0x1DC996C")]
		public ES3Type_PolygonCollider2D()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1DC9A34", Offset = "0x1DC9A34", VA = "0x1DC9A34", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F92")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class ES3Type_PolygonCollider2DArray : ES3ArrayType
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1DC9FBC", Offset = "0x1DC9FBC", VA = "0x1DC9FBC")]
		public ES3Type_PolygonCollider2DArray()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842910", Offset = "0x842910")]
	public class ES3Type_RawImage : ES3ComponentType
	{
		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x1DCA758", Offset = "0x1DCA758", VA = "0x1DCA758")]
		public ES3Type_RawImage()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1DCA828", Offset = "0x1DCA828", VA = "0x1DCA828", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F97")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class ES3Type_RawImageArray : ES3ArrayType
	{
		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x1DCAD84", Offset = "0x1DCAD84", VA = "0x1DCAD84")]
		public ES3Type_RawImageArray()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842A34", Offset = "0x842A34")]
	public class ES3Type_Rigidbody : ES3ComponentType
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x1DCC0C4", Offset = "0x1DCC0C4", VA = "0x1DCC0C4")]
		public ES3Type_Rigidbody()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x1DCC194", Offset = "0x1DCC194", VA = "0x1DCC194", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000F9C")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class ES3UserType_RigidbodyArray : ES3ArrayType
	{
		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x1345FCC", Offset = "0x1345FCC", VA = "0x1345FCC")]
		public ES3UserType_RigidbodyArray()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842C08", Offset = "0x842C08")]
	[Preserve]
	public class ES3Type_SphereCollider : ES3ComponentType
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x133D2F4", Offset = "0x133D2F4", VA = "0x133D2F4")]
		public ES3Type_SphereCollider()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x133D3BC", Offset = "0x133D3BC", VA = "0x133D3BC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FA1")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842CDC", Offset = "0x842CDC")]
	public class ES3Type_Text : ES3ComponentType
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x133EBA8", Offset = "0x133EBA8", VA = "0x133EBA8")]
		public ES3Type_Text()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x133EC70", Offset = "0x133EC70", VA = "0x133EC70", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FA5")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842EC0", Offset = "0x842EC0")]
	public class ES3Type_Transform : ES3ComponentType
	{
		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int countRead;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1340E7C", Offset = "0x1340E7C", VA = "0x1340E7C")]
		public ES3Type_Transform()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1340F44", Offset = "0x1340F44", VA = "0x1340F44", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FA9")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002C1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x842F74", Offset = "0x842F74")]
	public class ES3Type_AnimationCurve : ES3Type
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1935EA4", Offset = "0x1935EA4", VA = "0x1935EA4")]
		public ES3Type_AnimationCurve()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1935F68", Offset = "0x1935F68", VA = "0x1935F68", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FAD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FAE")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843018", Offset = "0x843018")]
	public class ES3Type_AudioClip : ES3UnityObjectType
	{
		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x193610C", Offset = "0x193610C", VA = "0x193610C")]
		public ES3Type_AudioClip()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x19361D4", Offset = "0x19361D4", VA = "0x19361D4", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FB2")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000FB3")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C3")]
	public class ES3Type_AudioClipArray : ES3ArrayType
	{
		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x193641C", Offset = "0x193641C", VA = "0x193641C")]
		public ES3Type_AudioClipArray()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8430DC", Offset = "0x8430DC")]
	public class ES3Type_BoneWeight : ES3Type
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1936514", Offset = "0x1936514", VA = "0x1936514")]
		public ES3Type_BoneWeight()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x19365D8", Offset = "0x19365D8", VA = "0x19365D8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FB8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C5")]
	public class ES3Type_BoneWeightArray : ES3ArrayType
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x19369D4", Offset = "0x19369D4", VA = "0x19369D4")]
		public ES3Type_BoneWeightArray()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8431D0", Offset = "0x8431D0")]
	public class ES3Type_Bounds : ES3Type
	{
		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1936ACC", Offset = "0x1936ACC", VA = "0x1936ACC")]
		public ES3Type_Bounds()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1936B90", Offset = "0x1936B90", VA = "0x1936B90", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FBD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C7")]
	public class ES3Type_BoundsArray : ES3ArrayType
	{
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1936D34", Offset = "0x1936D34", VA = "0x1936D34")]
		public ES3Type_BoundsArray()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843264", Offset = "0x843264")]
	[Preserve]
	public class ES3Type_CollisionModule : ES3Type
	{
		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1938768", Offset = "0x1938768", VA = "0x1938768")]
		public ES3Type_CollisionModule()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x193882C", Offset = "0x193882C", VA = "0x193882C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FC2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FC3")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8433F8", Offset = "0x8433F8")]
	[Preserve]
	public class ES3Type_Color : ES3Type
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1938F2C", Offset = "0x1938F2C", VA = "0x1938F2C")]
		public ES3Type_Color()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1938FF0", Offset = "0x1938FF0", VA = "0x1938FF0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FC7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CA")]
	public class ES3Type_ColorArray : ES3ArrayType
	{
		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1939628", Offset = "0x1939628", VA = "0x1939628")]
		public ES3Type_ColorArray()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8434AC", Offset = "0x8434AC")]
	public class ES3Type_Color32 : ES3Type
	{
		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x193920C", Offset = "0x193920C", VA = "0x193920C")]
		public ES3Type_Color32()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x19392D0", Offset = "0x19392D0", VA = "0x19392D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FCC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x19394E8", Offset = "0x19394E8", VA = "0x19394E8")]
		public static bool Equals(Color32 a, Color32 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002CC")]
	public class ES3Type_Color32Array : ES3ArrayType
	{
		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1939530", Offset = "0x1939530", VA = "0x1939530")]
		public ES3Type_Color32Array()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843560", Offset = "0x843560")]
	[Preserve]
	public class ES3Type_ColorBySpeedModule : ES3Type
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1939720", Offset = "0x1939720", VA = "0x1939720")]
		public ES3Type_ColorBySpeedModule()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x19397E4", Offset = "0x19397E4", VA = "0x19397E4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FD2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FD3")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843604", Offset = "0x843604")]
	[Preserve]
	public class ES3Type_ColorOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1939A90", Offset = "0x1939A90", VA = "0x1939A90")]
		public ES3Type_ColorOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1939B54", Offset = "0x1939B54", VA = "0x1939B54", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FD7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FD8")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843698", Offset = "0x843698")]
	[Preserve]
	public class ES3Type_EmissionModule : ES3Type
	{
		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1D4BB1C", Offset = "0x1D4BB1C", VA = "0x1D4BB1C")]
		public ES3Type_EmissionModule()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1D4BBE4", Offset = "0x1D4BBE4", VA = "0x1D4BBE4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FDC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FDD")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x84375C", Offset = "0x84375C")]
	public class ES3Type_ExternalForcesModule : ES3Type
	{
		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1D4C018", Offset = "0x1D4C018", VA = "0x1D4C018")]
		public ES3Type_ExternalForcesModule()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1D4C0E0", Offset = "0x1D4C0E0", VA = "0x1D4C0E0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FE1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FE2")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8437F0", Offset = "0x8437F0")]
	public class ES3Type_Flare : ES3Type
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1D4C2C0", Offset = "0x1D4C2C0", VA = "0x1D4C2C0")]
		public ES3Type_Flare()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1D4C388", Offset = "0x1D4C388", VA = "0x1D4C388", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FE6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FE7")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class ES3Type_FlareArray : ES3ArrayType
	{
		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1D4C460", Offset = "0x1D4C460", VA = "0x1D4C460")]
		public ES3Type_FlareArray()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843874", Offset = "0x843874")]
	public class ES3Type_Font : ES3UnityObjectType
	{
		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x1D4C558", Offset = "0x1D4C558", VA = "0x1D4C558")]
		public ES3Type_Font()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1D4C620", Offset = "0x1D4C620", VA = "0x1D4C620", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FEC")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000FED")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D4")]
	public class ES3Type_FontArray : ES3ArrayType
	{
		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1D4C74C", Offset = "0x1D4C74C", VA = "0x1D4C74C")]
		public ES3Type_FontArray()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843908", Offset = "0x843908")]
	public class ES3Type_ForceOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1D4C844", Offset = "0x1D4C844", VA = "0x1D4C844")]
		public ES3Type_ForceOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1D4C90C", Offset = "0x1D4C90C", VA = "0x1D4C90C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FF2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FF3")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D6")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843A0C", Offset = "0x843A0C")]
	public class ES3Type_GameObject : ES3UnityObjectType
	{
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x843AF0", Offset = "0x843AF0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<Component> <>9__0;

			[Token(Token = "0x6001000")]
			[Address(RVA = "0xC5FC3C", Offset = "0xC5FC3C", VA = "0xC5FC3C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001001")]
			[Address(RVA = "0xC5FC44", Offset = "0xC5FC44", VA = "0xC5FC44")]
			internal bool <ReadComponents>b__0(Component x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DA5")]
		private const string prefabPropertyName = "es3Prefab";

		[Token(Token = "0x4000DA6")]
		private const string transformPropertyName = "transformID";

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool saveChildren;

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1D4CDFC", Offset = "0x1D4CDFC", VA = "0x1D4CDFC")]
		public ES3Type_GameObject()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x1D4CEC4", Offset = "0x1D4CEC4", VA = "0x1D4CEC4", Slot = "13")]
		public override void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000FF7")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FF8")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1D4D960", Offset = "0x1D4D960", VA = "0x1D4D960")]
		private void ReadComponents(ES3Reader reader, GameObject go)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x1D4DFCC", Offset = "0x1D4DFCC", VA = "0x1D4DFCC")]
		private GameObject CreateNewGameObject(ES3ReferenceMgrBase refMgr, long id)
		{
			return null;
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1D4D644", Offset = "0x1D4D644", VA = "0x1D4D644")]
		public static List<GameObject> GetChildren(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x1D4E060", Offset = "0x1D4E060", VA = "0x1D4E060", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000FFD")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000FFE")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D8")]
	public class ES3Type_GameObjectArray : ES3ArrayType
	{
		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x1D4E068", Offset = "0x1D4E068", VA = "0x1D4E068")]
		public ES3Type_GameObjectArray()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843B00", Offset = "0x843B00")]
	[Preserve]
	public class ES3Type_Gradient : ES3Type
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1D4E160", Offset = "0x1D4E160", VA = "0x1D4E160")]
		public ES3Type_Gradient()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1D4E228", Offset = "0x1D4E228", VA = "0x1D4E228", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001005")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001006")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843BA4", Offset = "0x843BA4")]
	public class ES3Type_GradientAlphaKey : ES3Type
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1D4E3D8", Offset = "0x1D4E3D8", VA = "0x1D4E3D8")]
		public ES3Type_GradientAlphaKey()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1D4E4A0", Offset = "0x1D4E4A0", VA = "0x1D4E4A0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600100A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DB")]
	public class ES3Type_GradientAlphaKeyArray : ES3ArrayType
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x1D4E610", Offset = "0x1D4E610", VA = "0x1D4E610")]
		public ES3Type_GradientAlphaKeyArray()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843C38", Offset = "0x843C38")]
	[Preserve]
	public class ES3Type_GradientColorKey : ES3Type
	{
		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x1D4E708", Offset = "0x1D4E708", VA = "0x1D4E708")]
		public ES3Type_GradientColorKey()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x1D4E7D0", Offset = "0x1D4E7D0", VA = "0x1D4E7D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600100F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DD")]
	public class ES3Type_GradientColorKeyArray : ES3ArrayType
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1D4E98C", Offset = "0x1D4E98C", VA = "0x1D4E98C")]
		public ES3Type_GradientColorKeyArray()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843CCC", Offset = "0x843CCC")]
	public class ES3Type_InheritVelocityModule : ES3Type
	{
		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1D4F504", Offset = "0x1D4F504", VA = "0x1D4F504")]
		public ES3Type_InheritVelocityModule()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1D4F5CC", Offset = "0x1D4F5CC", VA = "0x1D4F5CC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001014")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001015")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843D80", Offset = "0x843D80")]
	public class ES3Type_Keyframe : ES3Type
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1D4FB2C", Offset = "0x1D4FB2C", VA = "0x1D4FB2C")]
		public ES3Type_Keyframe()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1D4FBF4", Offset = "0x1D4FBF4", VA = "0x1D4FBF4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001019")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E0")]
	public class ES3Type_KeyframeArray : ES3ArrayType
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x1D4FE44", Offset = "0x1D4FE44", VA = "0x1D4FE44")]
		public ES3Type_KeyframeArray()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843E34", Offset = "0x843E34")]
	public class ES3Type_LayerMask : ES3Type
	{
		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x1D4FF3C", Offset = "0x1D4FF3C", VA = "0x1D4FF3C")]
		public ES3Type_LayerMask()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1D50004", Offset = "0x1D50004", VA = "0x1D50004", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600101E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x843ED8", Offset = "0x843ED8")]
	[Preserve]
	public class ES3Type_Light : ES3ComponentType
	{
		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1D50138", Offset = "0x1D50138", VA = "0x1D50138")]
		public ES3Type_Light()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1D50200", Offset = "0x1D50200", VA = "0x1D50200", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001022")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8440AC", Offset = "0x8440AC")]
	public class ES3Type_LightsModule : ES3Type
	{
		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1D50AF8", Offset = "0x1D50AF8", VA = "0x1D50AF8")]
		public ES3Type_LightsModule()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1D50BC0", Offset = "0x1D50BC0", VA = "0x1D50BC0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001026")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001027")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8441E0", Offset = "0x8441E0")]
	public class ES3Type_LimitVelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1D511E4", Offset = "0x1D511E4", VA = "0x1D511E4")]
		public ES3Type_LimitVelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1D512AC", Offset = "0x1D512AC", VA = "0x1D512AC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600102B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600102C")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844314", Offset = "0x844314")]
	[Preserve]
	public class ES3Type_MainModule : ES3Type
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x1D518B0", Offset = "0x1D518B0", VA = "0x1D518B0")]
		public ES3Type_MainModule()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x1D51978", Offset = "0x1D51978", VA = "0x1D51978", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001030")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001031")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8445D8", Offset = "0x8445D8")]
	[Preserve]
	public class ES3Type_Material : ES3UnityObjectType
	{
		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x1D52960", Offset = "0x1D52960", VA = "0x1D52960")]
		public ES3Type_Material()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x1D52A28", Offset = "0x1D52A28", VA = "0x1D52A28", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001035")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001036")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class ES3Type_MaterialArray : ES3ArrayType
	{
		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x1DC5328", Offset = "0x1DC5328", VA = "0x1DC5328")]
		public ES3Type_MaterialArray()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x84469C", Offset = "0x84469C")]
	public class ES3Type_Matrix4x4 : ES3Type
	{
		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1DC5420", Offset = "0x1DC5420", VA = "0x1DC5420")]
		public ES3Type_Matrix4x4()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x1DC54E8", Offset = "0x1DC54E8", VA = "0x1DC54E8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600103B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E9")]
	public class ES3Type_Matrix4x4Array : ES3ArrayType
	{
		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1DC575C", Offset = "0x1DC575C", VA = "0x1DC575C")]
		public ES3Type_Matrix4x4Array()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844750", Offset = "0x844750")]
	public class ES3Type_Mesh : ES3UnityObjectType
	{
		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1DC5854", Offset = "0x1DC5854", VA = "0x1DC5854")]
		public ES3Type_Mesh()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1DC591C", Offset = "0x1DC591C", VA = "0x1DC591C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001040")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001041")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002EB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8448A4", Offset = "0x8448A4")]
	public class ES3Type_MinMaxCurve : ES3Type
	{
		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1DC70AC", Offset = "0x1DC70AC", VA = "0x1DC70AC")]
		public ES3Type_MinMaxCurve()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1DC7174", Offset = "0x1DC7174", VA = "0x1DC7174", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001045")]
		[Preserve]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001046")]
		[Preserve]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844998", Offset = "0x844998")]
	public class ES3Type_MinMaxGradient : ES3Type
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1DC7530", Offset = "0x1DC7530", VA = "0x1DC7530")]
		public ES3Type_MinMaxGradient()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1DC75F8", Offset = "0x1DC75F8", VA = "0x1DC75F8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600104A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844A7C", Offset = "0x844A7C")]
	[Preserve]
	public class ES3Type_NoiseModule : ES3Type
	{
		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x1DC7984", Offset = "0x1DC7984", VA = "0x1DC7984")]
		public ES3Type_NoiseModule()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1DC7A4C", Offset = "0x1DC7A4C", VA = "0x1DC7A4C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600104E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600104F")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844CA0", Offset = "0x844CA0")]
	public class ES3Type_PhysicMaterial : ES3ObjectType
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1DC91CC", Offset = "0x1DC91CC", VA = "0x1DC91CC")]
		public ES3Type_PhysicMaterial()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1DC9294", Offset = "0x1DC9294", VA = "0x1DC9294", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001053")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6001054")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EF")]
	public class ES3Type_PhysicMaterialArray : ES3ArrayType
	{
		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1DC953C", Offset = "0x1DC953C", VA = "0x1DC953C")]
		public ES3Type_PhysicMaterialArray()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844D64", Offset = "0x844D64")]
	public class ES3Type_PhysicsMaterial2D : ES3ObjectType
	{
		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1DC9634", Offset = "0x1DC9634", VA = "0x1DC9634")]
		public ES3Type_PhysicsMaterial2D()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1DC96FC", Offset = "0x1DC96FC", VA = "0x1DC96FC", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001059")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x600105A")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F1")]
	public class ES3Type_PhysicsMaterial2DArray : ES3ArrayType
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1DC9874", Offset = "0x1DC9874", VA = "0x1DC9874")]
		public ES3Type_PhysicsMaterial2DArray()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844DF8", Offset = "0x844DF8")]
	public class ES3Type_Quaternion : ES3Type
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1DCA0B4", Offset = "0x1DCA0B4", VA = "0x1DCA0B4")]
		public ES3Type_Quaternion()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1DCA17C", Offset = "0x1DCA17C", VA = "0x1DCA17C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600105F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F3")]
	public class ES3Type_QuaternionArray : ES3ArrayType
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1DCA398", Offset = "0x1DCA398", VA = "0x1DCA398")]
		public ES3Type_QuaternionArray()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844EAC", Offset = "0x844EAC")]
	[Preserve]
	public class ES3Type_Rect : ES3Type
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1DCAE7C", Offset = "0x1DCAE7C", VA = "0x1DCAE7C")]
		public ES3Type_Rect()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1DCAF44", Offset = "0x1DCAF44", VA = "0x1DCAF44", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001064")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x844F60", Offset = "0x844F60")]
	public class ES3Type_RectTransform : ES3ComponentType
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x1DCB184", Offset = "0x1DCB184", VA = "0x1DCB184")]
		public ES3Type_RectTransform()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1DCB24C", Offset = "0x1DCB24C", VA = "0x1DCB24C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001068")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845094", Offset = "0x845094")]
	[Preserve]
	public class ES3Type_RenderTexture : ES3ObjectType
	{
		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1DCB7CC", Offset = "0x1DCB7CC", VA = "0x1DCB7CC")]
		public ES3Type_RenderTexture()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1DCB894", Offset = "0x1DCB894", VA = "0x1DCB894", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600106C")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x600106D")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F7")]
	public class ES3Type_RenderTextureArray : ES3ArrayType
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1DCBFCC", Offset = "0x1DCBFCC", VA = "0x1DCBFCC")]
		public ES3Type_RenderTextureArray()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845308", Offset = "0x845308")]
	[Preserve]
	public class ES3Type_RotationBySpeedModule : ES3Type
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x1DCCBC4", Offset = "0x1DCCBC4", VA = "0x1DCCBC4")]
		public ES3Type_RotationBySpeedModule()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1DCCC8C", Offset = "0x1DCCC8C", VA = "0x1DCCC8C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001072")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001073")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x84540C", Offset = "0x84540C")]
	[Preserve]
	public class ES3Type_RotationOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1DCD1B4", Offset = "0x1DCD1B4", VA = "0x1DCD1B4")]
		public ES3Type_RotationOverLifetimeModule()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x1DCD27C", Offset = "0x1DCD27C", VA = "0x1DCD27C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001077")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001078")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845500", Offset = "0x845500")]
	[Preserve]
	public class ES3Type_Shader : ES3Type
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1DCD710", Offset = "0x1DCD710", VA = "0x1DCD710")]
		public ES3Type_Shader()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1DCD7D8", Offset = "0x1DCD7D8", VA = "0x1DCD7D8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600107C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600107D")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class ES3Type_ShaderArray : ES3ArrayType
	{
		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1DCD978", Offset = "0x1DCD978", VA = "0x1DCD978")]
		public ES3Type_ShaderArray()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845594", Offset = "0x845594")]
	public class ES3Type_ShapeModule : ES3Type
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1DCDA70", Offset = "0x1DCDA70", VA = "0x1DCDA70")]
		public ES3Type_ShapeModule()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1DCDB38", Offset = "0x1DCDB38", VA = "0x1DCDB38", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001082")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001083")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845738", Offset = "0x845738")]
	[Preserve]
	public class ES3Type_SizeBySpeedModule : ES3Type
	{
		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1DCE31C", Offset = "0x1DCE31C", VA = "0x1DCE31C")]
		public ES3Type_SizeBySpeedModule()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1DCE3E4", Offset = "0x1DCE3E4", VA = "0x1DCE3E4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001087")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6001088")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x84585C", Offset = "0x84585C")]
	public class ES3Type_SizeOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x1DCE9CC", Offset = "0x1DCE9CC", VA = "0x1DCE9CC")]
		public ES3Type_SizeOverLifetimeModule()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x1DCEA94", Offset = "0x1DCEA94", VA = "0x1DCEA94", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600108C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600108D")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845970", Offset = "0x845970")]
	public class ES3Type_SkinnedMeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x1DCEFE8", Offset = "0x1DCEFE8", VA = "0x1DCEFE8")]
		public ES3Type_SkinnedMeshRenderer()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1DCF0B0", Offset = "0x1DCF0B0", VA = "0x1DCF0B0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001091")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class ES3Type_SkinnedMeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x133D1FC", Offset = "0x133D1FC", VA = "0x133D1FC")]
		public ES3Type_SkinnedMeshRendererArray()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845B54", Offset = "0x845B54")]
	public class ES3Type_Sprite : ES3UnityObjectType
	{
		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x133D748", Offset = "0x133D748", VA = "0x133D748")]
		public ES3Type_Sprite()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x133D84C", Offset = "0x133D84C", VA = "0x133D84C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001096")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6001097")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845C18", Offset = "0x845C18")]
	[Preserve]
	public class ES3Type_SpriteRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x133DC40", Offset = "0x133DC40", VA = "0x133DC40")]
		public ES3Type_SpriteRenderer()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x133DD08", Offset = "0x133DD08", VA = "0x133DD08", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600109B")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class ES3Type_SpriteRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x133E640", Offset = "0x133E640", VA = "0x133E640")]
		public ES3Type_SpriteRendererArray()
		{
		}
	}
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845DCC", Offset = "0x845DCC")]
	[Preserve]
	public class ES3Type_SubEmittersModule : ES3Type
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x133E830", Offset = "0x133E830", VA = "0x133E830")]
		public ES3Type_SubEmittersModule()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x133E8F8", Offset = "0x133E8F8", VA = "0x133E8F8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010A0")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60010A1")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000305")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845E70", Offset = "0x845E70")]
	public class ES3Type_Texture : ES3Type
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x133F444", Offset = "0x133F444", VA = "0x133F444")]
		public ES3Type_Texture()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x133F50C", Offset = "0x133F50C", VA = "0x133F50C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010A5")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60010A6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000306")]
	public class ES3Type_TextureArray : ES3ArrayType
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x133FDFC", Offset = "0x133FDFC", VA = "0x133FDFC")]
		public ES3Type_TextureArray()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845F34", Offset = "0x845F34")]
	public class ES3Type_Texture2D : ES3UnityObjectType
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x133F6C0", Offset = "0x133F6C0", VA = "0x133F6C0")]
		public ES3Type_Texture2D()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x133F794", Offset = "0x133F794", VA = "0x133F794", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010AB")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60010AC")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x133FC6C", Offset = "0x133FC6C", VA = "0x133FC6C")]
		protected bool IsReadable(Texture2D instance)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000308")]
	public class ES3Type_Texture2DArray : ES3ArrayType
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x133FD04", Offset = "0x133FD04", VA = "0x133FD04")]
		public ES3Type_Texture2DArray()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x845FF8", Offset = "0x845FF8")]
	public class ES3Type_TextureSheetAnimationModule : ES3Type
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x133FEF4", Offset = "0x133FEF4", VA = "0x133FEF4")]
		public ES3Type_TextureSheetAnimationModule()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x133FFBC", Offset = "0x133FFBC", VA = "0x133FFBC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010B2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60010B3")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x84614C", Offset = "0x84614C")]
	[Preserve]
	public class ES3Type_TrailModule : ES3Type
	{
		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x1340608", Offset = "0x1340608", VA = "0x1340608")]
		public ES3Type_TrailModule()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x13406D0", Offset = "0x13406D0", VA = "0x13406D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010B7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60010B8")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200030B")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8462B0", Offset = "0x8462B0")]
	public class ES3Type_TriggerModule : ES3Type
	{
		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1341138", Offset = "0x1341138", VA = "0x1341138")]
		public ES3Type_TriggerModule()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1341200", Offset = "0x1341200", VA = "0x1341200", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010BC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60010BD")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x846384", Offset = "0x846384")]
	[Preserve]
	public class ES3Type_Vector2 : ES3Type
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1341794", Offset = "0x1341794", VA = "0x1341794")]
		public ES3Type_Vector2()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x134185C", Offset = "0x134185C", VA = "0x134185C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010C1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200030D")]
	public class ES3Type_Vector2Array : ES3ArrayType
	{
		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x13419CC", Offset = "0x13419CC", VA = "0x13419CC")]
		public ES3Type_Vector2Array()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x846418", Offset = "0x846418")]
	[Preserve]
	public class ES3Type_Vector2Int : ES3Type
	{
		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1341AC4", Offset = "0x1341AC4", VA = "0x1341AC4")]
		public ES3Type_Vector2Int()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1341B8C", Offset = "0x1341B8C", VA = "0x1341B8C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010C6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200030F")]
	public class ES3Type_Vector2IntArray : ES3ArrayType
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1341D00", Offset = "0x1341D00", VA = "0x1341D00")]
		public ES3Type_Vector2IntArray()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8464AC", Offset = "0x8464AC")]
	public class ES3Type_Vector3 : ES3Type
	{
		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1341DF8", Offset = "0x1341DF8", VA = "0x1341DF8")]
		public ES3Type_Vector3()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1341EC0", Offset = "0x1341EC0", VA = "0x1341EC0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010CB")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000311")]
	public class ES3Type_Vector3Array : ES3ArrayType
	{
		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1342088", Offset = "0x1342088", VA = "0x1342088")]
		public ES3Type_Vector3Array()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x846550", Offset = "0x846550")]
	public class ES3Type_Vector3Int : ES3Type
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1342180", Offset = "0x1342180", VA = "0x1342180")]
		public ES3Type_Vector3Int()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1342248", Offset = "0x1342248", VA = "0x1342248", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010D0")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000313")]
	public class ES3Type_Vector3IntArray : ES3ArrayType
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x1342448", Offset = "0x1342448", VA = "0x1342448")]
		public ES3Type_Vector3IntArray()
		{
		}
	}
	[Token(Token = "0x2000314")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8465F4", Offset = "0x8465F4")]
	public class ES3Type_Vector4 : ES3Type
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1342540", Offset = "0x1342540", VA = "0x1342540")]
		public ES3Type_Vector4()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1342608", Offset = "0x1342608", VA = "0x1342608", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010D5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1342820", Offset = "0x1342820", VA = "0x1342820")]
		public static bool Equals(Vector4 a, Vector4 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000315")]
	public class ES3Type_Vector4Array : ES3ArrayType
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x13428C0", Offset = "0x13428C0", VA = "0x13428C0")]
		public ES3Type_Vector4Array()
		{
		}
	}
	[Token(Token = "0x2000316")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x8466A8", Offset = "0x8466A8")]
	public class ES3Type_VelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x13429B8", Offset = "0x13429B8", VA = "0x13429B8")]
		public ES3Type_VelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1342A80", Offset = "0x1342A80", VA = "0x1342A80", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60010DB")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60010DC")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
}
namespace ES3Internal
{
	[Token(Token = "0x2000317")]
	internal static class ES3Debug
	{
		[Token(Token = "0x4000DEA")]
		private const string disableInfoMsg = "\n<i>To disable these messages from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Info'</i>";

		[Token(Token = "0x4000DEB")]
		private const string disableWarningMsg = "\n<i>To disable warnings from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Warnings'</i>";

		[Token(Token = "0x4000DEC")]
		private const string disableErrorMsg = "\n<i>To disable these error messages from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Errors'</i>";

		[Token(Token = "0x4000DED")]
		private const char indentChar = '-';

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xCCF19C", Offset = "0xCCF19C", VA = "0xCCF19C")]
		public static void Log(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xCC9E44", Offset = "0xCC9E44", VA = "0xCC9E44")]
		public static void LogWarning(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xCCB8F4", Offset = "0xCCB8F4", VA = "0xCCB8F4")]
		public static void LogError(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xCCF388", Offset = "0xCCF388", VA = "0xCCF388")]
		private static string Indent(int size)
		{
			return null;
		}
	}
	[Token(Token = "0x2000318")]
	public static class ES3Hash
	{
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xCD1614", Offset = "0xCD1614", VA = "0xCD1614")]
		public static string SHA1Hash(string input)
		{
			return null;
		}
	}
	[Token(Token = "0x2000319")]
	public abstract class EncryptionAlgorithm
	{
		[Token(Token = "0x60010E3")]
		public abstract byte[] Encrypt(byte[] bytes, string password, int bufferSize);

		[Token(Token = "0x60010E4")]
		public abstract byte[] Decrypt(byte[] bytes, string password, int bufferSize);

		[Token(Token = "0x60010E5")]
		public abstract void Encrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x60010E6")]
		public abstract void Decrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x13489B0", Offset = "0x13489B0", VA = "0x13489B0")]
		protected static void CopyStream(Stream input, Stream output, int bufferSize)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1348A94", Offset = "0x1348A94", VA = "0x1348A94")]
		protected EncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class AESEncryptionAlgorithm : EncryptionAlgorithm
	{
		[Token(Token = "0x4000DEE")]
		private const int ivSize = 16;

		[Token(Token = "0x4000DEF")]
		private const int keySize = 16;

		[Token(Token = "0x4000DF0")]
		private const int pwIterations = 100;

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xD967A4", Offset = "0xD967A4", VA = "0xD967A4", Slot = "4")]
		public override byte[] Encrypt(byte[] bytes, string password, int bufferSize)
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xD96A14", Offset = "0xD96A14", VA = "0xD96A14", Slot = "5")]
		public override byte[] Decrypt(byte[] bytes, string password, int bufferSize)
		{
			return null;
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xD96C84", Offset = "0xD96C84", VA = "0xD96C84", Slot = "6")]
		public override void Encrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xD970D8", Offset = "0xD970D8", VA = "0xD970D8", Slot = "7")]
		public override void Decrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xD97514", Offset = "0xD97514", VA = "0xD97514")]
		public AESEncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class UnbufferedCryptoStream : MemoryStream
	{
		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Stream stream;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly bool isReadStream;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string password;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int bufferSize;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EncryptionAlgorithm alg;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool disposed;

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xBBF464", Offset = "0xBBF464", VA = "0xBBF464")]
		public UnbufferedCryptoStream(Stream stream, bool isReadStream, string password, int bufferSize, EncryptionAlgorithm alg)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xBBF50C", Offset = "0xBBF50C", VA = "0xBBF50C", Slot = "17")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x200031C")]
	public struct ES3Data
	{
		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ES3Type type;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] bytes;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xCCF0CC", Offset = "0xCCF0CC", VA = "0xCCF0CC")]
		public ES3Data(Type type, byte[] bytes)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xCCF194", Offset = "0xCCF194", VA = "0xCCF194")]
		public ES3Data(ES3Type type, byte[] bytes)
		{
		}
	}
	[Token(Token = "0x200031D")]
	public static class ES3IO
	{
		[Token(Token = "0x200031E")]
		public enum ES3FileMode
		{
			[Token(Token = "0x4000DFD")]
			Read,
			[Token(Token = "0x4000DFE")]
			Write,
			[Token(Token = "0x4000DFF")]
			Append
		}

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly string persistentDataPath;

		[Token(Token = "0x4000DFA")]
		internal const string backupFileSuffix = ".bac";

		[Token(Token = "0x4000DFB")]
		internal const string temporaryFileSuffix = ".tmp";

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xCC7880", Offset = "0xCC7880", VA = "0xCC7880")]
		public static DateTime GetTimestamp(string filePath)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xCC1FAC", Offset = "0xCC1FAC", VA = "0xCC1FAC")]
		public static string GetExtension(string path)
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xCC3BC0", Offset = "0xCC3BC0", VA = "0xCC3BC0")]
		public static void DeleteFile(string filePath)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xCC423C", Offset = "0xCC423C", VA = "0xCC423C")]
		public static bool FileExists(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xCC4BBC", Offset = "0xCC4BBC", VA = "0xCC4BBC")]
		public static void MoveFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xCC4244", Offset = "0xCC4244", VA = "0xCC4244")]
		public static void CopyFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xCC5734", Offset = "0xCC5734", VA = "0xCC5734")]
		public static void MoveDirectory(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xCC5104", Offset = "0xCC5104", VA = "0xCC5104")]
		public static void CreateDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xCC56A8", Offset = "0xCC56A8", VA = "0xCC56A8")]
		public static bool DirectoryExists(string directoryPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xCD14C4", Offset = "0xCD14C4", VA = "0xCD14C4")]
		public static string GetDirectoryPath(string path, char seperator = '/')
		{
			return null;
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xCD2104", Offset = "0xCD2104", VA = "0xCD2104")]
		public static bool UsesForwardSlash(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xCC5230", Offset = "0xCC5230", VA = "0xCC5230")]
		public static string CombinePathAndFilename(string directoryPath, string fileOrDirectoryName)
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xCC70C8", Offset = "0xCC70C8", VA = "0xCC70C8")]
		public static string[] GetDirectories(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xCC56B0", Offset = "0xCC56B0", VA = "0xCC56B0")]
		public static void DeleteDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xCC6E84", Offset = "0xCC6E84", VA = "0xCC6E84")]
		public static string[] GetFiles(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xCD215C", Offset = "0xCD215C", VA = "0xCD215C")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xCD2164", Offset = "0xCD2164", VA = "0xCD2164")]
		public static void WriteAllBytes(string path, byte[] bytes)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xCC0FAC", Offset = "0xCC0FAC", VA = "0xCC0FAC")]
		public static void CommitBackup(ES3Settings settings)
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class ES3Prefab : MonoBehaviour
	{
		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long prefabId;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3RefIdDictionary localRefs;

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1925270", Offset = "0x1925270", VA = "0x1925270")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x192594C", Offset = "0x192594C", VA = "0x192594C")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x19259C8", Offset = "0x19259C8", VA = "0x19259C8")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1925B00", Offset = "0x1925B00", VA = "0x1925B00")]
		public Dictionary<string, string> GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x1925D68", Offset = "0x1925D68", VA = "0x1925D68")]
		public void ApplyReferences(Dictionary<long, long> localToGlobal)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x1925AA8", Offset = "0x1925AA8", VA = "0x1925AA8")]
		public static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1926334", Offset = "0x1926334", VA = "0x1926334")]
		public ES3Prefab()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000320")]
	[DisallowMultipleComponent]
	public abstract class ES3ReferenceMgrBase : MonoBehaviour
	{
		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8467AC", Offset = "0x8467AC")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Object obj;

			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<KeyValuePair<long, UnityEngine.Object>, bool> <>9__0;

			[Token(Token = "0x6001127")]
			[Address(RVA = "0xC5F320", Offset = "0xC5F320", VA = "0xC5F320")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001128")]
			[Address(RVA = "0xC5F328", Offset = "0xC5F328", VA = "0xC5F328")]
			internal bool <Remove>b__0(KeyValuePair<long, UnityEngine.Object> kvp)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8467BC", Offset = "0x8467BC")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long referenceID;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<KeyValuePair<UnityEngine.Object, long>, bool> <>9__0;

			[Token(Token = "0x6001129")]
			[Address(RVA = "0xC5F3AC", Offset = "0xC5F3AC", VA = "0xC5F3AC")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x600112A")]
			[Address(RVA = "0xC5F3B4", Offset = "0xC5F3B4", VA = "0xC5F3B4")]
			internal bool <Remove>b__0(KeyValuePair<UnityEngine.Object, long> kvp)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8467CC", Offset = "0x8467CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, bool> <>9__31_0;

			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, long> <>9__31_1;

			[Token(Token = "0x600112C")]
			[Address(RVA = "0xC5F214", Offset = "0xC5F214", VA = "0xC5F214")]
			public <>c()
			{
			}

			[Token(Token = "0x600112D")]
			[Address(RVA = "0xC5F21C", Offset = "0xC5F21C", VA = "0xC5F21C")]
			internal bool <RemoveNullOrInvalidValues>b__31_0(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x600112E")]
			[Address(RVA = "0xC5F2E0", Offset = "0xC5F2E0", VA = "0xC5F2E0")]
			internal long <RemoveNullOrInvalidValues>b__31_1(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(long);
			}
		}

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal object _lock;

		[Token(Token = "0x4000E03")]
		public const string referencePropertyName = "_ES3Ref";

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ES3ReferenceMgrBase _current;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HashSet<ES3ReferenceMgrBase> mgrs;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static System.Random rng;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool openPrefabs;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ES3Prefab> prefabs;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public ES3IdRefDictionary idRef;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ES3RefIdDictionary _refId;

		[Token(Token = "0x1700019E")]
		public static ES3ReferenceMgrBase Current
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x1925454", Offset = "0x1925454", VA = "0x1925454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public bool IsInitialised
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x19292F8", Offset = "0x19292F8", VA = "0x19292F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public ES3RefIdDictionary refId
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x1929358", Offset = "0x1929358", VA = "0x1929358")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x192953C", Offset = "0x192953C", VA = "0x192953C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public ES3GlobalReferences GlobalReferences
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x1929544", Offset = "0x1929544", VA = "0x1929544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x192954C", Offset = "0x192954C", VA = "0x192954C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x192992C", Offset = "0x192992C", VA = "0x192992C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x19297F0", Offset = "0x19297F0", VA = "0x19297F0")]
		public void Merge(ES3ReferenceMgrBase otherMgr)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x19299B8", Offset = "0x19299B8", VA = "0x19299B8")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1929C04", Offset = "0x1929C04", VA = "0x1929C04")]
		internal UnityEngine.Object Get(long id, Type type, bool suppressWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x192A200", Offset = "0x192A200", VA = "0x192A200")]
		public UnityEngine.Object Get(long id, bool suppressWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x192A20C", Offset = "0x192A20C", VA = "0x192A20C")]
		public ES3Prefab GetPrefab(long id, bool suppressWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x192A60C", Offset = "0x192A60C", VA = "0x192A60C")]
		public long GetPrefab(ES3Prefab prefabToFind, bool suppressWarnings = false)
		{
			return default(long);
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1925754", Offset = "0x1925754", VA = "0x1925754")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1925FA0", Offset = "0x1925FA0", VA = "0x1925FA0")]
		public long Add(UnityEngine.Object obj, long id)
		{
			return default(long);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x192AA1C", Offset = "0x192AA1C", VA = "0x192AA1C")]
		public bool AddPrefab(ES3Prefab prefab)
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x192AABC", Offset = "0x192AABC", VA = "0x192AABC")]
		public void Remove(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x192AFB8", Offset = "0x192AFB8", VA = "0x192AFB8")]
		public void Remove(long referenceID)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x192B4C4", Offset = "0x192B4C4", VA = "0x192B4C4")]
		public void RemoveNullOrInvalidValues()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x192B854", Offset = "0x192B854", VA = "0x192B854")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x192B980", Offset = "0x192B980", VA = "0x192B980")]
		public bool Contains(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x192B9E8", Offset = "0x192B9E8", VA = "0x192B9E8")]
		public bool Contains(long referenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x192BA4C", Offset = "0x192BA4C", VA = "0x192BA4C")]
		public void ChangeId(long oldId, long newId)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x192618C", Offset = "0x192618C", VA = "0x192618C")]
		internal static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1925AA0", Offset = "0x1925AA0", VA = "0x1925AA0")]
		internal static bool CanBeSaved(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1929228", Offset = "0x1929228", VA = "0x1929228")]
		protected ES3ReferenceMgrBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000324")]
	public class ES3IdRefDictionary : ES3SerializableDictionary<long, UnityEngine.Object>
	{
		[Token(Token = "0x600112F")]
		[Address(RVA = "0xCD21C0", Offset = "0xCD21C0", VA = "0xCD21C0", Slot = "44")]
		protected override bool KeysAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xCD21CC", Offset = "0xCD21CC", VA = "0xCD21CC", Slot = "45")]
		protected override bool ValuesAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xCD2240", Offset = "0xCD2240", VA = "0xCD2240")]
		public ES3IdRefDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x8467DC", Offset = "0x8467DC")]
	public class ES3RefIdDictionary : ES3SerializableDictionary<UnityEngine.Object, long>
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1929148", Offset = "0x1929148", VA = "0x1929148", Slot = "44")]
		protected override bool KeysAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x19291BC", Offset = "0x19291BC", VA = "0x19291BC", Slot = "45")]
		protected override bool ValuesAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x192639C", Offset = "0x192639C", VA = "0x192639C")]
		public ES3RefIdDictionary()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public static class ES3Reflection
	{
		[Token(Token = "0x2000327")]
		public struct ES3ReflectedMember
		{
			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private FieldInfo fieldInfo;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private PropertyInfo propertyInfo;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isProperty;

			[Token(Token = "0x170001A3")]
			public bool IsNull
			{
				[Token(Token = "0x600115F")]
				[Address(RVA = "0xC5F640", Offset = "0xC5F640", VA = "0xC5F640")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001A4")]
			public string Name
			{
				[Token(Token = "0x6001160")]
				[Address(RVA = "0xC5F68C", Offset = "0xC5F68C", VA = "0xC5F68C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A5")]
			public Type MemberType
			{
				[Token(Token = "0x6001161")]
				[Address(RVA = "0xC5F6C0", Offset = "0xC5F6C0", VA = "0xC5F6C0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A6")]
			public bool IsPublic
			{
				[Token(Token = "0x6001162")]
				[Address(RVA = "0xC5F70C", Offset = "0xC5F70C", VA = "0xC5F70C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001A7")]
			public bool IsProtected
			{
				[Token(Token = "0x6001163")]
				[Address(RVA = "0xC5F7AC", Offset = "0xC5F7AC", VA = "0xC5F7AC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001A8")]
			public bool IsStatic
			{
				[Token(Token = "0x6001164")]
				[Address(RVA = "0xC5F800", Offset = "0xC5F800", VA = "0xC5F800")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0xC5F854", Offset = "0xC5F854", VA = "0xC5F854")]
			public ES3ReflectedMember(object fieldPropertyInfo)
			{
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0xC5F9E4", Offset = "0xC5F9E4", VA = "0xC5F9E4")]
			public void SetValue(object obj, object value)
			{
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0xC5FA2C", Offset = "0xC5FA2C", VA = "0xC5FA2C")]
			public object GetValue(object obj)
			{
				return null;
			}
		}

		[Token(Token = "0x2000328")]
		public class ES3ReflectedMethod
		{
			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MethodInfo method;

			[Token(Token = "0x6001168")]
			[Address(RVA = "0xC5FA7C", Offset = "0xC5FA7C", VA = "0xC5FA7C")]
			public ES3ReflectedMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
			{
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0xC5FAF8", Offset = "0xC5FAF8", VA = "0xC5FAF8")]
			public ES3ReflectedMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes, BindingFlags bindingAttr)
			{
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0xC5FB84", Offset = "0xC5FB84", VA = "0xC5FB84")]
			public object Invoke(object obj, [Optional] object[] parameters)
			{
				return null;
			}
		}

		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8467F0", Offset = "0x8467F0")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type derivedType;

			[Token(Token = "0x600116B")]
			[Address(RVA = "0xC5F560", Offset = "0xC5F560", VA = "0xC5F560")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0xC5F568", Offset = "0xC5F568", VA = "0xC5F568")]
			internal bool <GetDerivedTypes>b__2(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x846800", Offset = "0x846800")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, IEnumerable<Type>> <>9__27_0;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Assembly, Type, <>f__AnonymousType0<Assembly, Type>> <>9__27_1;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<Assembly, Type>, Type> <>9__27_3;

			[Token(Token = "0x600116E")]
			[Address(RVA = "0xC5F468", Offset = "0xC5F468", VA = "0xC5F468")]
			public <>c()
			{
			}

			[Token(Token = "0x600116F")]
			[Address(RVA = "0xC5F470", Offset = "0xC5F470", VA = "0xC5F470")]
			internal IEnumerable<Type> <GetDerivedTypes>b__27_0(Assembly assembly)
			{
				return null;
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0xC5F494", Offset = "0xC5F494", VA = "0xC5F494")]
			internal <>f__AnonymousType0<Assembly, Type> <GetDerivedTypes>b__27_1(Assembly assembly, Type type)
			{
				return null;
			}

			[Token(Token = "0x6001171")]
			[Address(RVA = "0xC5F518", Offset = "0xC5F518", VA = "0xC5F518")]
			internal Type <GetDerivedTypes>b__27_3(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return null;
			}
		}

		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x846810", Offset = "0x846810")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string methodName;

			[Token(Token = "0x6001172")]
			[Address(RVA = "0xC5F5F8", Offset = "0xC5F5F8", VA = "0xC5F5F8")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001173")]
			[Address(RVA = "0xC5F600", Offset = "0xC5F600", VA = "0xC5F600")]
			internal bool <GetMethods>b__0(MethodInfo t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E12")]
		public const string memberFieldPrefix = "m_";

		[Token(Token = "0x4000E13")]
		public const string componentTagFieldName = "tag";

		[Token(Token = "0x4000E14")]
		public const string componentNameFieldName = "name";

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] excludedPropertyNames;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Type serializableAttributeType;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Type serializeFieldAttributeType;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Type obsoleteAttributeType;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Type nonSerializedAttributeType;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Type es3SerializableAttributeType;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Type es3NonSerializableAttributeType;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Type[] EmptyTypes;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Assembly[] _assemblies;

		[Token(Token = "0x170001A2")]
		private static Assembly[] Assemblies
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x192C528", Offset = "0x192C528", VA = "0x192C528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x192C808", Offset = "0x192C808", VA = "0x192C808")]
		public static Type[] GetElementTypes(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x192C9D4", Offset = "0x192C9D4", VA = "0x192C9D4")]
		public static List<FieldInfo> GetSerializableFields(Type type, [Optional] List<FieldInfo> serializableFields, bool safe = true, [Optional] string[] memberNames, BindingFlags bindings = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x192D390", Offset = "0x192D390", VA = "0x192D390")]
		public static List<PropertyInfo> GetSerializableProperties(Type type, [Optional] List<PropertyInfo> serializableProperties, bool safe = true, [Optional] string[] memberNames, BindingFlags bindings = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x192D00C", Offset = "0x192D00C", VA = "0x192D00C")]
		public static bool TypeIsSerializable(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x192405C", Offset = "0x192405C", VA = "0x192405C")]
		public static object CreateInstance(Type type)
		{
			return null;
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x1926B94", Offset = "0x1926B94", VA = "0x1926B94")]
		public static object CreateInstance(Type type, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x192DC7C", Offset = "0x192DC7C", VA = "0x192DC7C")]
		public static Array ArrayCreateInstance(Type type, int length)
		{
			return null;
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x192DD04", Offset = "0x192DD04", VA = "0x192DD04")]
		public static Array ArrayCreateInstance(Type type, int[] dimensions)
		{
			return null;
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1926AD8", Offset = "0x1926AD8", VA = "0x1926AD8")]
		public static Type MakeGenericType(Type type, Type genericParam)
		{
			return null;
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x192DD0C", Offset = "0x192DD0C", VA = "0x192DD0C")]
		public static ES3ReflectedMember[] GetSerializableMembers(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x19281D4", Offset = "0x19281D4", VA = "0x19281D4")]
		public static ES3ReflectedMember GetES3ReflectedProperty(Type type, string propertyName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x19283FC", Offset = "0x19283FC", VA = "0x19283FC")]
		public static ES3ReflectedMember GetES3ReflectedMember(Type type, string fieldName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6001142")]
		public static IList<T> GetInstances<T>()
		{
			return null;
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x192E2F0", Offset = "0x192E2F0", VA = "0x192E2F0")]
		public static IList<Type> GetDerivedTypes(Type derivedType)
		{
			return null;
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x192C494", Offset = "0x192C494", VA = "0x192C494")]
		public static bool IsAssignableFrom(Type a, Type b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x192E6B0", Offset = "0x192E6B0", VA = "0x192E6B0")]
		public static Type GetGenericTypeDefinition(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x192C994", Offset = "0x192C994", VA = "0x192C994")]
		public static Type[] GetGenericArguments(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x192E6D0", Offset = "0x192E6D0", VA = "0x192E6D0")]
		public static int GetArrayRank(Type type)
		{
			return default(int);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x192E6F0", Offset = "0x192E6F0", VA = "0x192E6F0")]
		public static string GetAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x192E710", Offset = "0x192E710", VA = "0x192E710")]
		public static ES3ReflectedMethod GetMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x192DB5C", Offset = "0x192DB5C", VA = "0x192DB5C")]
		public static bool TypeIsArray(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x192C9B4", Offset = "0x192C9B4", VA = "0x192C9B4")]
		public static Type GetElementType(Type type)
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x192E798", Offset = "0x192E798", VA = "0x192E798")]
		public static bool IsAbstract(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x192E7B0", Offset = "0x192E7B0", VA = "0x192E7B0")]
		public static bool IsInterface(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x192C974", Offset = "0x192C974", VA = "0x192C974")]
		public static bool IsGenericType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x192DB44", Offset = "0x192DB44", VA = "0x192DB44")]
		public static bool IsValueType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x192E7C8", Offset = "0x192E7C8", VA = "0x192E7C8")]
		public static bool IsEnum(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x192DB74", Offset = "0x192DB74", VA = "0x192DB74")]
		public static bool HasParameterlessConstructor(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x192E7E8", Offset = "0x192E7E8", VA = "0x192E7E8")]
		public static ConstructorInfo GetParameterlessConstructor(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x192E860", Offset = "0x192E860", VA = "0x192E860")]
		public static string GetShortAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x192E030", Offset = "0x192E030", VA = "0x192E030")]
		public static PropertyInfo GetProperty(Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x192E18C", Offset = "0x192E18C", VA = "0x192E18C")]
		public static FieldInfo GetField(Type type, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x192E94C", Offset = "0x192E94C", VA = "0x192E94C")]
		public static MethodInfo[] GetMethods(Type type, string methodName)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x192DA34", Offset = "0x192DA34", VA = "0x192DA34")]
		public static bool IsPrimitive(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x192D000", Offset = "0x192D000", VA = "0x192D000")]
		public static bool AttributeIsDefined(MemberInfo info, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x192DA10", Offset = "0x192DA10", VA = "0x192DA10")]
		public static bool AttributeIsDefined(Type type, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x192EA68", Offset = "0x192EA68", VA = "0x192EA68")]
		public static bool ImplementsInterface(Type type, Type interfaceType)
		{
			return default(bool);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x1924BD8", Offset = "0x1924BD8", VA = "0x1924BD8")]
		public static Type BaseType(Type type)
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x1927594", Offset = "0x1927594", VA = "0x1927594")]
		public static Type GetType(string typeString)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x192EB10", Offset = "0x192EB10", VA = "0x192EB10")]
		public static string GetTypeString(Type type)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200032C")]
	public abstract class ES3SerializableDictionary<TKey, TVal> : Dictionary<TKey, TVal>, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x846820", Offset = "0x846820")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, bool> <>9__6_0;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, TKey> <>9__6_1;

			[Token(Token = "0x600117C")]
			public <>c()
			{
			}

			[Token(Token = "0x600117D")]
			internal bool <RemoveNullValues>b__6_0(KeyValuePair<TKey, TVal> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x600117E")]
			internal TKey <RemoveNullValues>b__6_1(KeyValuePair<TKey, TVal> pair)
			{
				return (TKey)null;
			}
		}

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> _Keys;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TVal> _Values;

		[Token(Token = "0x6001174")]
		protected abstract bool KeysAreEqual(TKey a, TKey b);

		[Token(Token = "0x6001175")]
		protected abstract bool ValuesAreEqual(TVal a, TVal b);

		[Token(Token = "0x6001176")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001177")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001178")]
		public int RemoveNullValues()
		{
			return default(int);
		}

		[Token(Token = "0x6001179")]
		public bool ChangeKey(TKey oldKey, TKey newKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600117A")]
		protected ES3SerializableDictionary()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class ES3JSONReader : ES3Reader
	{
		[Token(Token = "0x4000E2D")]
		private const char endOfStreamChar = '\uffff';

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StreamReader baseReader;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xCD2294", Offset = "0xCD2294", VA = "0xCD2294")]
		internal ES3JSONReader(Stream stream, ES3Settings settings, bool readHeaderAndFooter = true)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xCD24AC", Offset = "0xCD24AC", VA = "0xCD24AC", Slot = "21")]
		public override string ReadPropertyName()
		{
			return null;
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xCD2A24", Offset = "0xCD2A24", VA = "0xCD2A24", Slot = "22")]
		protected override Type ReadKeyPrefix(bool ignoreType = false)
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xCD2BC8", Offset = "0xCD2BC8", VA = "0xCD2BC8", Slot = "23")]
		protected override void ReadKeySuffix()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xCD2BD8", Offset = "0xCD2BD8", VA = "0xCD2BD8", Slot = "27")]
		internal override bool StartReadObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xCD2EE4", Offset = "0xCD2EE4", VA = "0xCD2EE4", Slot = "28")]
		internal override void EndReadObject()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xCD2F10", Offset = "0xCD2F10", VA = "0xCD2F10", Slot = "29")]
		internal override bool StartReadDictionary()
		{
			return default(bool);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xCD2F20", Offset = "0xCD2F20", VA = "0xCD2F20", Slot = "30")]
		internal override void EndReadDictionary()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xCD2F24", Offset = "0xCD2F24", VA = "0xCD2F24", Slot = "31")]
		internal override bool StartReadDictionaryKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xCD2F68", Offset = "0xCD2F68", VA = "0xCD2F68", Slot = "32")]
		internal override void EndReadDictionaryKey()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xCD2F70", Offset = "0xCD2F70", VA = "0xCD2F70", Slot = "33")]
		internal override void StartReadDictionaryValue()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xCD2F74", Offset = "0xCD2F74", VA = "0xCD2F74", Slot = "34")]
		internal override bool EndReadDictionaryValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xCD303C", Offset = "0xCD303C", VA = "0xCD303C", Slot = "35")]
		internal override bool StartReadCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xCD3044", Offset = "0xCD3044", VA = "0xCD3044", Slot = "36")]
		internal override void EndReadCollection()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xCD3048", Offset = "0xCD3048", VA = "0xCD3048", Slot = "37")]
		internal override bool StartReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xCD308C", Offset = "0xCD308C", VA = "0xCD308C", Slot = "38")]
		internal override bool EndReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xCD3154", Offset = "0xCD3154", VA = "0xCD3154")]
		private void ReadString(StreamWriter writer, bool skip = false)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xCD3294", Offset = "0xCD3294", VA = "0xCD3294", Slot = "24")]
		internal override byte[] ReadElement(bool skip = false)
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xCD322C", Offset = "0xCD322C", VA = "0xCD322C")]
		private char ReadOrSkipChar(StreamWriter writer, bool skip)
		{
			return default(char);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xCD270C", Offset = "0xCD270C", VA = "0xCD270C")]
		private char ReadCharIgnoreWhitespace(bool ignoreTrailingWhitespace = true)
		{
			return default(char);
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xCD2C04", Offset = "0xCD2C04", VA = "0xCD2C04")]
		private bool ReadNullOrCharIgnoreWhitespace(char expectedChar)
		{
			return default(bool);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xCD2818", Offset = "0xCD2818", VA = "0xCD2818")]
		private char ReadCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xCD3810", Offset = "0xCD3810", VA = "0xCD3810")]
		private bool ReadQuotationMarkOrNullIgnoreWhitespace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xCD39F8", Offset = "0xCD39F8", VA = "0xCD39F8")]
		private char PeekCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xCD2678", Offset = "0xCD2678", VA = "0xCD2678")]
		private char PeekCharIgnoreWhitespace()
		{
			return default(char);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xCD3C00", Offset = "0xCD3C00", VA = "0xCD3C00")]
		private void SkipWhiteSpace()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xCD23F8", Offset = "0xCD23F8", VA = "0xCD23F8")]
		private void SkipOpeningBraceOfFile()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xCD37D8", Offset = "0xCD37D8", VA = "0xCD37D8")]
		private static bool IsWhiteSpace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xCD3754", Offset = "0xCD3754", VA = "0xCD3754")]
		private static bool IsOpeningBrace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xCD3768", Offset = "0xCD3768", VA = "0xCD3768")]
		private static bool IsEndOfValue(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xCD26F8", Offset = "0xCD26F8", VA = "0xCD26F8")]
		private static bool IsTerminator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xCD27EC", Offset = "0xCD27EC", VA = "0xCD27EC")]
		private static bool IsQuotationMark(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xCD3C80", Offset = "0xCD3C80", VA = "0xCD3C80")]
		private static bool IsEndOfStream(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xCD3C90", Offset = "0xCD3C90", VA = "0xCD3C90")]
		private string GetValueString()
		{
			return null;
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xCD3D68", Offset = "0xCD3D68", VA = "0xCD3D68", Slot = "18")]
		internal override string Read_string()
		{
			return null;
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xCD3F2C", Offset = "0xCD3F2C", VA = "0xCD3F2C", Slot = "20")]
		internal override long Read_ref()
		{
			return default(long);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xCD4074", Offset = "0xCD4074", VA = "0xCD4074", Slot = "8")]
		internal override char Read_char()
		{
			return default(char);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xCD40F4", Offset = "0xCD40F4", VA = "0xCD40F4", Slot = "6")]
		internal override float Read_float()
		{
			return default(float);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xCD4174", Offset = "0xCD4174", VA = "0xCD4174", Slot = "5")]
		internal override int Read_int()
		{
			return default(int);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xCD418C", Offset = "0xCD418C", VA = "0xCD418C", Slot = "7")]
		internal override bool Read_bool()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xCD4200", Offset = "0xCD4200", VA = "0xCD4200", Slot = "9")]
		internal override decimal Read_decimal()
		{
			return default(decimal);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xCD42B4", Offset = "0xCD42B4", VA = "0xCD42B4", Slot = "10")]
		internal override double Read_double()
		{
			return default(double);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xCD4368", Offset = "0xCD4368", VA = "0xCD4368", Slot = "11")]
		internal override long Read_long()
		{
			return default(long);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xCD4380", Offset = "0xCD4380", VA = "0xCD4380", Slot = "12")]
		internal override ulong Read_ulong()
		{
			return default(ulong);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xCD4398", Offset = "0xCD4398", VA = "0xCD4398", Slot = "17")]
		internal override uint Read_uint()
		{
			return default(uint);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xCD43B0", Offset = "0xCD43B0", VA = "0xCD43B0", Slot = "13")]
		internal override byte Read_byte()
		{
			return default(byte);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xCD43CC", Offset = "0xCD43CC", VA = "0xCD43CC", Slot = "14")]
		internal override sbyte Read_sbyte()
		{
			return default(sbyte);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xCD43E8", Offset = "0xCD43E8", VA = "0xCD43E8", Slot = "15")]
		internal override short Read_short()
		{
			return default(short);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xCD4404", Offset = "0xCD4404", VA = "0xCD4404", Slot = "16")]
		internal override ushort Read_ushort()
		{
			return default(ushort);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xCD4420", Offset = "0xCD4420", VA = "0xCD4420", Slot = "19")]
		internal override byte[] Read_byteArray()
		{
			return null;
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xCD44A0", Offset = "0xCD44A0", VA = "0xCD44A0", Slot = "25")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class ES3GlobalReferences : ScriptableObject
	{
		[Token(Token = "0x170001A9")]
		public static ES3GlobalReferences Instance
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xCD15F0", Offset = "0xCD15F0", VA = "0xCD15F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xCD15F8", Offset = "0xCD15F8", VA = "0xCD15F8")]
		public UnityEngine.Object Get(long id)
		{
			return null;
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xCD1600", Offset = "0xCD1600", VA = "0xCD1600")]
		public long GetOrAdd(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xCD1608", Offset = "0xCD1608", VA = "0xCD1608")]
		public void RemoveInvalidKeys()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xCD160C", Offset = "0xCD160C", VA = "0xCD160C")]
		public ES3GlobalReferences()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class ES3DefaultSettings : MonoBehaviour
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ES3SerializableSettings settings;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoUpdateReferences;

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xCCF3F0", Offset = "0xCCF3F0", VA = "0xCCF3F0")]
		public ES3DefaultSettings()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public enum ES3FileMode
	{
		[Token(Token = "0x4000E32")]
		Read,
		[Token(Token = "0x4000E33")]
		Write,
		[Token(Token = "0x4000E34")]
		Append
	}
	[Token(Token = "0x2000332")]
	public class ES3FileStream : FileStream
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isDisposed;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xCD12B8", Offset = "0xCD12B8", VA = "0xCD12B8")]
		public ES3FileStream(string path, ES3FileMode fileMode, int bufferSize, bool useAsync)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xCD1388", Offset = "0xCD1388", VA = "0xCD1388")]
		protected static string GetPath(string path, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xCD1494", Offset = "0xCD1494", VA = "0xCD1494")]
		protected static FileMode GetFileMode(ES3FileMode fileMode)
		{
			return default(FileMode);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xCD14B4", Offset = "0xCD14B4", VA = "0xCD14B4")]
		protected static FileAccess GetFileAccess(ES3FileMode fileMode)
		{
			return default(FileAccess);
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xCD15D0", Offset = "0xCD15D0", VA = "0xCD15D0", Slot = "17")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x2000333")]
	internal class ES3PlayerPrefsStream : MemoryStream
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string path;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool append;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isWriteStream;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isDisposed;

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1924E40", Offset = "0x1924E40", VA = "0x1924E40")]
		public ES3PlayerPrefsStream(string path)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1924F78", Offset = "0x1924F78", VA = "0x1924F78")]
		public ES3PlayerPrefsStream(string path, int bufferSize, bool append = false)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1924E84", Offset = "0x1924E84", VA = "0x1924E84")]
		private static byte[] GetData(string path, bool isWriteStream)
		{
			return null;
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1924FC4", Offset = "0x1924FC4", VA = "0x1924FC4", Slot = "17")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x2000334")]
	internal class ES3ResourcesStream : MemoryStream
	{
		[Token(Token = "0x170001AA")]
		public bool Exists
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x192F8E4", Offset = "0x192F8E4", VA = "0x192F8E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x192F908", Offset = "0x192F908", VA = "0x192F908")]
		public ES3ResourcesStream(string path)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x192F938", Offset = "0x192F938", VA = "0x192F938")]
		private static byte[] GetData(string path)
		{
			return null;
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x192FA38", Offset = "0x192FA38", VA = "0x192FA38", Slot = "17")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x2000335")]
	public static class ES3Stream
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1928698", Offset = "0x1928698", VA = "0x1928698")]
		public static Stream CreateStream(ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1928C0C", Offset = "0x1928C0C", VA = "0x1928C0C")]
		public static Stream CreateStream(Stream stream, ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x1933340", Offset = "0x1933340", VA = "0x1933340")]
		public static void CopyTo(Stream source, Stream destination)
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class ES3Member
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isProperty;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Reflection.ES3ReflectedMember reflectedMember;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useReflection;

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x1924768", Offset = "0x1924768", VA = "0x1924768")]
		public ES3Member(string name, Type type, bool isProperty)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x19247AC", Offset = "0x19247AC", VA = "0x19247AC")]
		public ES3Member(ES3Reflection.ES3ReflectedMember reflectedMember)
		{
		}
	}
	[Token(Token = "0x2000337")]
	[Preserve]
	public static class ES3TypeMgr
	{
		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84A0A8", Offset = "0x84A0A8")]
		public static Dictionary<Type, ES3Type> types;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ES3Type lastAccessedType;

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1924BF8", Offset = "0x1924BF8", VA = "0x1924BF8")]
		public static ES3Type GetOrCreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1935D18", Offset = "0x1935D18", VA = "0x1935D18")]
		public static ES3Type GetES3Type(Type type)
		{
			return null;
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1933358", Offset = "0x1933358", VA = "0x1933358")]
		internal static void Add(Type type, ES3Type es3Type)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x19352C8", Offset = "0x19352C8", VA = "0x19352C8")]
		internal static ES3Type CreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1935060", Offset = "0x1935060", VA = "0x1935060")]
		internal static void Init()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class ES3WebClass
	{
		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x846840", Offset = "0x846840")]
		private sealed class <SendWebRequest>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3WebClass <>4__this;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest webRequest;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011DE")]
				[Address(RVA = "0xC5FD7C", Offset = "0xC5FD7C", VA = "0xC5FD7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011E0")]
				[Address(RVA = "0xC5FDC4", Offset = "0xC5FDC4", VA = "0xC5FDC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xC5FCD8", Offset = "0xC5FCD8", VA = "0xC5FCD8")]
			[DebuggerHidden]
			public <SendWebRequest>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60011DC")]
			[Address(RVA = "0xC5FD04", Offset = "0xC5FD04", VA = "0xC5FD04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011DD")]
			[Address(RVA = "0xC5FD08", Offset = "0xC5FD08", VA = "0xC5FD08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011DF")]
			[Address(RVA = "0xC5FD84", Offset = "0xC5FD84", VA = "0xC5FD84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string url;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string apiKey;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<KeyValuePair<string, string>> formData;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected UnityWebRequest _webRequest;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isDone;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string error;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long errorCode;

		[Token(Token = "0x170001AB")]
		public float uploadProgress
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x13460C4", Offset = "0x13460C4", VA = "0x13460C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AC")]
		public float downloadProgress
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x13460DC", Offset = "0x13460DC", VA = "0x13460DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AD")]
		public bool isError
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x13460F4", Offset = "0x13460F4", VA = "0x13460F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1346134", Offset = "0x1346134", VA = "0x1346134")]
		public static bool IsNetworkError(UnityWebRequest www)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x134615C", Offset = "0x134615C", VA = "0x134615C")]
		protected ES3WebClass(string url, string apiKey)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x13461EC", Offset = "0x13461EC", VA = "0x13461EC")]
		public void AddPOSTField(string fieldName, string value)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1346290", Offset = "0x1346290", VA = "0x1346290")]
		protected string GetUser(string user, string password)
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1346330", Offset = "0x1346330", VA = "0x1346330")]
		protected WWWForm CreateWWWForm()
		{
			return null;
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1346490", Offset = "0x1346490", VA = "0x1346490")]
		protected bool HandleError(UnityWebRequest webRequest, bool errorIfDataIsDownloaded)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1346668", Offset = "0x1346668", VA = "0x1346668")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84DFF8", Offset = "0x84DFF8")]
		protected IEnumerator SendWebRequest(UnityWebRequest webRequest)
		{
			return null;
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x13466E0", Offset = "0x13466E0", VA = "0x13466E0", Slot = "4")]
		protected virtual void Reset()
		{
		}
	}
	[Token(Token = "0x200033A")]
	internal enum ES3SpecialByte : byte
	{
		[Token(Token = "0x4000E4E")]
		Null = 0,
		[Token(Token = "0x4000E4F")]
		Bool = 1,
		[Token(Token = "0x4000E50")]
		Byte = 2,
		[Token(Token = "0x4000E51")]
		Sbyte = 3,
		[Token(Token = "0x4000E52")]
		Char = 4,
		[Token(Token = "0x4000E53")]
		Decimal = 5,
		[Token(Token = "0x4000E54")]
		Double = 6,
		[Token(Token = "0x4000E55")]
		Float = 7,
		[Token(Token = "0x4000E56")]
		Int = 8,
		[Token(Token = "0x4000E57")]
		Uint = 9,
		[Token(Token = "0x4000E58")]
		Long = 10,
		[Token(Token = "0x4000E59")]
		Ulong = 11,
		[Token(Token = "0x4000E5A")]
		Short = 12,
		[Token(Token = "0x4000E5B")]
		Ushort = 13,
		[Token(Token = "0x4000E5C")]
		String = 14,
		[Token(Token = "0x4000E5D")]
		ByteArray = 15,
		[Token(Token = "0x4000E5E")]
		Collection = 128,
		[Token(Token = "0x4000E5F")]
		Dictionary = 129,
		[Token(Token = "0x4000E60")]
		CollectionItem = 130,
		[Token(Token = "0x4000E61")]
		Object = 254,
		[Token(Token = "0x4000E62")]
		Terminator = byte.MaxValue
	}
	[Token(Token = "0x200033B")]
	internal static class ES3Binary
	{
		[Token(Token = "0x4000E63")]
		internal const string ObjectTerminator = ".";

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly Dictionary<ES3SpecialByte, Type> IdToType;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly Dictionary<Type, ES3SpecialByte> TypeToId;

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xCCAF60", Offset = "0xCCAF60", VA = "0xCCAF60")]
		internal static ES3SpecialByte TypeToByte(Type type)
		{
			return default(ES3SpecialByte);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xCCB010", Offset = "0xCCB010", VA = "0xCCB010")]
		internal static Type ByteToType(ES3SpecialByte b)
		{
			return null;
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xCCB070", Offset = "0xCCB070", VA = "0xCCB070")]
		internal static Type ByteToType(byte b)
		{
			return null;
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xCCB16C", Offset = "0xCCB16C", VA = "0xCCB16C")]
		internal static bool IsPrimitive(ES3SpecialByte b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200033C")]
	internal class ES3CacheWriter : ES3Writer
	{
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ES3File es3File;

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xCCB80C", Offset = "0xCCB80C", VA = "0xCCB80C")]
		internal ES3CacheWriter(ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x60011E7")]
		public override void Write<T>(string key, object value)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xCCB8A8", Offset = "0xCCB8A8", VA = "0xCCB8A8", Slot = "39")]
		internal override void Write(string key, Type type, byte[] value)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xCCBAD8", Offset = "0xCCBAD8", VA = "0xCCBAD8", Slot = "41")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x84E0A8", Offset = "0x84E0A8")]
		public override void Write(Type type, string key, object value)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xCCBB44", Offset = "0xCCBB44", VA = "0xCCBB44", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xCCBB48", Offset = "0xCCBB48", VA = "0xCCBB48", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xCCBB4C", Offset = "0xCCBB4C", VA = "0xCCBB4C", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xCCBB50", Offset = "0xCCBB50", VA = "0xCCBB50", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xCCBB54", Offset = "0xCCBB54", VA = "0xCCBB54", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xCCBB58", Offset = "0xCCBB58", VA = "0xCCBB58", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xCCBB5C", Offset = "0xCCBB5C", VA = "0xCCBB5C", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xCCBB60", Offset = "0xCCBB60", VA = "0xCCBB60", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xCCBB64", Offset = "0xCCBB64", VA = "0xCCBB64", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xCCBB68", Offset = "0xCCBB68", VA = "0xCCBB68", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xCCBB6C", Offset = "0xCCBB6C", VA = "0xCCBB6C", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xCCBB70", Offset = "0xCCBB70", VA = "0xCCBB70", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xCCBB74", Offset = "0xCCBB74", VA = "0xCCBB74", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xCCBB78", Offset = "0xCCBB78", VA = "0xCCBB78", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xCCBB7C", Offset = "0xCCBB7C", VA = "0xCCBB7C", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xCCBB80", Offset = "0xCCBB80", VA = "0xCCBB80", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xCCBB84", Offset = "0xCCBB84", VA = "0xCCBB84")]
		private static bool CharacterRequiresEscaping(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xCCBB8C", Offset = "0xCCBB8C", VA = "0xCCBB8C")]
		private void WriteCommaIfRequired()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xCCBB90", Offset = "0xCCBB90", VA = "0xCCBB90", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xCCBB94", Offset = "0xCCBB94", VA = "0xCCBB94", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xCCBB98", Offset = "0xCCBB98", VA = "0xCCBB98", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xCCBB9C", Offset = "0xCCBB9C", VA = "0xCCBB9C", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xCCBBA4", Offset = "0xCCBBA4", VA = "0xCCBBA4", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xCCBBA8", Offset = "0xCCBBA8", VA = "0xCCBBA8", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xCCBBAC", Offset = "0xCCBBAC", VA = "0xCCBBAC", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xCCBBB0", Offset = "0xCCBBB0", VA = "0xCCBBB0", Slot = "12")]
		internal override void StartWriteCollection()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xCCBBB4", Offset = "0xCCBBB4", VA = "0xCCBBB4", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xCCBBB8", Offset = "0xCCBBB8", VA = "0xCCBBB8", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xCCBBBC", Offset = "0xCCBBBC", VA = "0xCCBBBC", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xCCBBC0", Offset = "0xCCBBC0", VA = "0xCCBBC0", Slot = "16")]
		internal override void StartWriteDictionary()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xCCBBC4", Offset = "0xCCBBC4", VA = "0xCCBBC4", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xCCBBC8", Offset = "0xCCBBC8", VA = "0xCCBBC8", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xCCBBCC", Offset = "0xCCBBCC", VA = "0xCCBBCC", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xCCBBD0", Offset = "0xCCBBD0", VA = "0xCCBBD0", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xCCBBD4", Offset = "0xCCBBD4", VA = "0xCCBBD4", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xCCBBD8", Offset = "0xCCBBD8", VA = "0xCCBBD8", Slot = "22")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x200033D")]
	internal class ES3JSONWriter : ES3Writer
	{
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal StreamWriter baseWriter;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isFirstProperty;

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1922BBC", Offset = "0x1922BBC", VA = "0x1922BBC")]
		public ES3JSONWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1922BC8", Offset = "0x1922BC8", VA = "0x1922BC8")]
		internal ES3JSONWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1922C74", Offset = "0x1922C74", VA = "0x1922C74", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1922C98", Offset = "0x1922C98", VA = "0x1922C98", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x1922D54", Offset = "0x1922D54", VA = "0x1922D54", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x1922DDC", Offset = "0x1922DDC", VA = "0x1922DDC", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x1922E80", Offset = "0x1922E80", VA = "0x1922E80", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1922F3C", Offset = "0x1922F3C", VA = "0x1922F3C", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1922F60", Offset = "0x1922F60", VA = "0x1922F60", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1922F84", Offset = "0x1922F84", VA = "0x1922F84", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x1922FA8", Offset = "0x1922FA8", VA = "0x1922FA8", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x192303C", Offset = "0x192303C", VA = "0x192303C", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x19230D0", Offset = "0x19230D0", VA = "0x19230D0", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1923164", Offset = "0x1923164", VA = "0x1923164", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x19231F8", Offset = "0x19231F8", VA = "0x19231F8", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x192323C", Offset = "0x192323C", VA = "0x192323C", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x19232C4", Offset = "0x19232C4", VA = "0x19232C4", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x19234FC", Offset = "0x19234FC", VA = "0x19234FC", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x192355C", Offset = "0x192355C", VA = "0x192355C")]
		private static bool CharacterRequiresEscaping(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1923590", Offset = "0x1923590", VA = "0x1923590")]
		private void WriteCommaIfRequired()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1923674", Offset = "0x1923674", VA = "0x1923674", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1923710", Offset = "0x1923710", VA = "0x1923710", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x192375C", Offset = "0x192375C", VA = "0x192375C", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x19237B8", Offset = "0x19237B8", VA = "0x19237B8", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1923884", Offset = "0x1923884", VA = "0x1923884", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x192388C", Offset = "0x192388C", VA = "0x192388C", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x19238D4", Offset = "0x19238D4", VA = "0x19238D4", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1923920", Offset = "0x1923920", VA = "0x1923920", Slot = "12")]
		internal override void StartWriteCollection()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1923968", Offset = "0x1923968", VA = "0x1923968", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x19239B0", Offset = "0x19239B0", VA = "0x19239B0", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x19239E0", Offset = "0x19239E0", VA = "0x19239E0", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x19239E4", Offset = "0x19239E4", VA = "0x19239E4", Slot = "16")]
		internal override void StartWriteDictionary()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x19239F4", Offset = "0x19239F4", VA = "0x19239F4", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x1923A04", Offset = "0x1923A04", VA = "0x1923A04", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1923A34", Offset = "0x1923A34", VA = "0x1923A34", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1923A5C", Offset = "0x1923A5C", VA = "0x1923A5C", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1923A60", Offset = "0x1923A60", VA = "0x1923A60", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1923A64", Offset = "0x1923A64", VA = "0x1923A64", Slot = "22")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x19235E0", Offset = "0x19235E0", VA = "0x19235E0")]
		public void WriteNewlineAndTabs()
		{
		}
	}
}
namespace Assets.DuckType.Jiggle
{
	[Token(Token = "0x200033E")]
	public static class Extensions
	{
		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1349C74", Offset = "0x1349C74", VA = "0x1349C74")]
		public static Quaternion Append(this Quaternion source, Quaternion quaternion)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1349CAC", Offset = "0x1349CAC", VA = "0x1349CAC")]
		public static Quaternion FromToRotation(this Quaternion source, Quaternion target)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1349CF8", Offset = "0x1349CF8", VA = "0x1349CF8")]
		public static Quaternion Scale(this Quaternion source, float scale)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1349D60", Offset = "0x1349D60", VA = "0x1349D60")]
		public static Quaternion Inverse(this Quaternion source)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1349D68", Offset = "0x1349D68", VA = "0x1349D68")]
		public static List<Vector3> GetOrthogonalVectors(this Vector3 source, int numVectors)
		{
			return null;
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1349EE8", Offset = "0x1349EE8", VA = "0x1349EE8")]
		public static bool HasLength(this Vector3 source)
		{
			return default(bool);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1349F10", Offset = "0x1349F10", VA = "0x1349F10")]
		public static float Clamp01(this float source)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200033F")]
	public class Jiggle : MonoBehaviour
	{
		[Token(Token = "0x4000E69")]
		private const float TORQUE_FACTOR = 0.001f;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_Initialised;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Quaternion m_RestLocalRotation;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion m_LastWorldRotation;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion m_Torque;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_LastCenterOfMassWorld;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_NoisePhase;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool UpdateWithPhysics;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool UseCenterOfMass;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 CenterOfMass;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float CenterOfMassInertia;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool AddWind;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 WindDirection;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float WindStrength;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool AddNoise;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float NoiseStrength;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float NoiseScale;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float NoiseSpeed;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float RotationInertia;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float Gravity;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float SpringStrength;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float Dampening;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool BlendToOriginalRotation;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool Hinge;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float HingeAngle;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool UseAngleLimit;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float AngleLimit;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool UseSoftLimit;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float SoftLimitInfluence;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float SoftLimitStrength;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool ShowViewportGizmos;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float GizmoScale;

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xCA7C34", Offset = "0xCA7C34", VA = "0xCA7C34")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xCA8100", Offset = "0xCA8100", VA = "0xCA8100")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xCA85E8", Offset = "0xCA85E8", VA = "0xCA85E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xCA87A0", Offset = "0xCA87A0", VA = "0xCA87A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xCA8890", Offset = "0xCA8890", VA = "0xCA8890")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xCA8AD0", Offset = "0xCA8AD0", VA = "0xCA8AD0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xCA8D10", Offset = "0xCA8D10", VA = "0xCA8D10")]
		public void ScheduledUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xCA7EE8", Offset = "0xCA7EE8", VA = "0xCA7EE8")]
		private Vector3 GetHingeNormalWorld()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xCA7E04", Offset = "0xCA7E04", VA = "0xCA7E04")]
		private Quaternion GetRestRotationWorld()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xCA9800", Offset = "0xCA9800", VA = "0xCA9800")]
		private Vector3 GetNoiseVector(Vector3 pos, float scale, float phase)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xCA973C", Offset = "0xCA973C", VA = "0xCA973C")]
		private Quaternion GetClosestRotationFromTo(Vector3 from, Vector3 to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xCA7FE8", Offset = "0xCA7FE8", VA = "0xCA7FE8")]
		private void DrawGizmosArc(Vector3 center, Vector3 startPoint, Vector3 normal, float degrees)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xCA9884", Offset = "0xCA9884", VA = "0xCA9884")]
		public Jiggle()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public static class JiggleScheduler
	{
		[Serializable]
		[Token(Token = "0x2000341")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x846860", Offset = "0x846860")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<Jiggle, int>, int> <>9__7_0;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<Jiggle, int>, Jiggle> <>9__7_1;

			[Token(Token = "0x6001251")]
			[Address(RVA = "0xC61894", Offset = "0xC61894", VA = "0xC61894")]
			public <>c()
			{
			}

			[Token(Token = "0x6001252")]
			[Address(RVA = "0xC6189C", Offset = "0xC6189C", VA = "0xC6189C")]
			internal int <UpdateOrderedRecords>b__7_0(KeyValuePair<Jiggle, int> x)
			{
				return default(int);
			}

			[Token(Token = "0x6001253")]
			[Address(RVA = "0xC618DC", Offset = "0xC618DC", VA = "0xC618DC")]
			internal Jiggle <UpdateOrderedRecords>b__7_1(KeyValuePair<Jiggle, int> x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Jiggle, int> s_Records;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Jiggle> s_OrderedRecords;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Jiggle m_UpdateTriggerJiggle;

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xCA86F4", Offset = "0xCA86F4", VA = "0xCA86F4")]
		public static void Register(Jiggle jiggleBone)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xCA8800", Offset = "0xCA8800", VA = "0xCA8800")]
		public static void Deregister(Jiggle jiggleBone)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xCA88F0", Offset = "0xCA88F0", VA = "0xCA88F0")]
		public static void Update(Jiggle jiggle)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xCA8B30", Offset = "0xCA8B30", VA = "0xCA8B30")]
		public static void FixedUpdate(Jiggle jiggle)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xCA99E0", Offset = "0xCA99E0", VA = "0xCA99E0")]
		private static void UpdateOrderedRecords()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xCA9910", Offset = "0xCA9910", VA = "0xCA9910")]
		private static int GetHierarchyDepth(Transform t)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000342")]
	internal class ProceduralAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_RestPos;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool MoveAlongX;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool ForwardAndBackward;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UpAndDown;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool SideToSide;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Bounce;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float TranslationMultiplier;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool RotateX;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool RotateY;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RotationMultiplier;

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x10F8F44", Offset = "0x10F8F44", VA = "0x10F8F44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x10F8F80", Offset = "0x10F8F80", VA = "0x10F8F80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x10F91B0", Offset = "0x10F91B0", VA = "0x10F91B0")]
		private float GetSineValue(bool bounce, float mult)
		{
			return default(float);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x10F9204", Offset = "0x10F9204", VA = "0x10F9204")]
		public ProceduralAnimation()
		{
		}
	}
}
