using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x4CB8FC", Offset = "0x4CB8FC")]
public class FastList<T>
{
	[Token(Token = "0x200022F")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD14", Offset = "0x4CBD14")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000A8")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60010B8")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010BA")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B5")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60010B6")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010B7")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B9")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000003")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000004")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x6000005")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000006")]
		set
		{
		}
	}

	[Token(Token = "0x6000001")]
	public FastList()
	{
	}

	[Token(Token = "0x6000002")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000007")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000008")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000009")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600000A")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600000B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600000D")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600000E")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600000F")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000010")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000011")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000012")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000014")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000015")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D2C98", Offset = "0x4D2C98")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000017")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000018")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000019")]
	public void Clear()
	{
	}

	[Token(Token = "0x600001A")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000003")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x78550C", Offset = "0x78550C", VA = "0x78550C")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000004")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x7854E0", Offset = "0x7854E0", VA = "0x7854E0")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000005")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600001D")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x76CD6C", Offset = "0x76CD6C", VA = "0x76CD6C")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000006")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC208", Offset = "0x4CC208")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC240", Offset = "0x4CC240")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC278", Offset = "0x4CC278")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x712A38", Offset = "0x712A38", VA = "0x712A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x712A3C", Offset = "0x712A3C", VA = "0x712A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x712ABC", Offset = "0x712ABC", VA = "0x712ABC")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x712D30", Offset = "0x712D30", VA = "0x712D30")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000007")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x712D58", Offset = "0x712D58", VA = "0x712D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x712E9C", Offset = "0x712E9C", VA = "0x712E9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x712F70", Offset = "0x712F70", VA = "0x712F70")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x713394", Offset = "0x713394", VA = "0x713394")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x7133E4", Offset = "0x7133E4", VA = "0x7133E4")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000008")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000003")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000028")]
		[Address(RVA = "0x653EB4", Offset = "0x653EB4", VA = "0x653EB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x654190", Offset = "0x654190", VA = "0x654190")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x6542CC", Offset = "0x6542CC", VA = "0x6542CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x654200", Offset = "0x654200", VA = "0x654200")]
	public void Init()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x651CAC", Offset = "0x651CAC", VA = "0x651CAC")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x654468", Offset = "0x654468", VA = "0x654468")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x651C3C", Offset = "0x651C3C", VA = "0x651C3C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x651D60", Offset = "0x651D60", VA = "0x651D60")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x654364", Offset = "0x654364", VA = "0x654364")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x654510", Offset = "0x654510", VA = "0x654510")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x654554", Offset = "0x654554", VA = "0x654554")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x6547D4", Offset = "0x6547D4", VA = "0x6547D4")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x654564", Offset = "0x654564", VA = "0x654564")]
	private void Display()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x6548B4", Offset = "0x6548B4", VA = "0x6548B4")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4CB934", Offset = "0x4CB934")]
public class OVRLipSyncTestAudio : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x654998", Offset = "0x654998", VA = "0x654998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x654C50", Offset = "0x654C50", VA = "0x654C50")]
	public OVRLipSyncTestAudio()
	{
	}
}
[Token(Token = "0x200000A")]
public delegate void OVRCallback();
[Token(Token = "0x200000B")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x200000C")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x200000D")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x200000E")]
internal static class OVRMessenger
{
	[Token(Token = "0x2000231")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x655BCC", Offset = "0x655BCC", VA = "0x655BCC")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x2000232")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x65578C", Offset = "0x65578C", VA = "0x65578C")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x654C58", Offset = "0x654C58", VA = "0x654C58")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x654CE4", Offset = "0x654CE4", VA = "0x654CE4")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x655170", Offset = "0x655170", VA = "0x655170")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x655514", Offset = "0x655514", VA = "0x655514")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x655804", Offset = "0x655804", VA = "0x655804")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x655A58", Offset = "0x655A58", VA = "0x655A58")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x655B48", Offset = "0x655B48", VA = "0x655B48")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x655B4C", Offset = "0x655B4C", VA = "0x655B4C")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x655C44", Offset = "0x655C44", VA = "0x655C44")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000052")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000053")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000054")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x655DF0", Offset = "0x655DF0", VA = "0x655DF0")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000056")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000057")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000058")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x655FA4", Offset = "0x655FA4", VA = "0x655FA4")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x600005A")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x600005B")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x600005C")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x200000F")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x600005E")]
	[Address(RVA = "0x71BB9C", Offset = "0x71BB9C", VA = "0x71BB9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x71BC18", Offset = "0x71BC18", VA = "0x71BC18")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x71BC78", Offset = "0x71BC78", VA = "0x71BC78")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x2000010")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x65619C", Offset = "0x65619C", VA = "0x65619C")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000011")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000233")]
	public enum TouchEvent
	{
		[Token(Token = "0x4000995")]
		SingleTap,
		[Token(Token = "0x4000996")]
		DoubleTap,
		[Token(Token = "0x4000997")]
		Left,
		[Token(Token = "0x4000998")]
		Right,
		[Token(Token = "0x4000999")]
		Up,
		[Token(Token = "0x400099A")]
		Down
	}

	[Token(Token = "0x2000234")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x650974", Offset = "0x650974", VA = "0x650974")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x65A180", Offset = "0x65A180", VA = "0x65A180")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x65A4B4", Offset = "0x65A4B4", VA = "0x65A4B4")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x65A2F0", Offset = "0x65A2F0", VA = "0x65A2F0")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x651710", Offset = "0x651710", VA = "0x651710")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000012")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000068")]
	[Address(RVA = "0x65A568", Offset = "0x65A568", VA = "0x65A568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x65A5E4", Offset = "0x65A5E4", VA = "0x65A5E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x65A67C", Offset = "0x65A67C", VA = "0x65A67C")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x65A6D8", Offset = "0x65A6D8", VA = "0x65A6D8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x65A73C", Offset = "0x65A73C", VA = "0x65A73C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x65A740", Offset = "0x65A740", VA = "0x65A740")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000013")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000235")]
	public enum Result
	{
		[Token(Token = "0x400099C")]
		Success = 0,
		[Token(Token = "0x400099D")]
		Unknown = -2200,
		[Token(Token = "0x400099E")]
		CannotCreateContext = -2201,
		[Token(Token = "0x400099F")]
		InvalidParam = -2202,
		[Token(Token = "0x40009A0")]
		BadSampleRate = -2203,
		[Token(Token = "0x40009A1")]
		MissingDLL = -2204,
		[Token(Token = "0x40009A2")]
		BadVersion = -2205,
		[Token(Token = "0x40009A3")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000236")]
	public enum AudioDataType
	{
		[Token(Token = "0x40009A5")]
		S16_Mono,
		[Token(Token = "0x40009A6")]
		S16_Stereo,
		[Token(Token = "0x40009A7")]
		F32_Mono,
		[Token(Token = "0x40009A8")]
		F32_Stereo
	}

	[Token(Token = "0x2000237")]
	public enum Viseme
	{
		[Token(Token = "0x40009AA")]
		sil,
		[Token(Token = "0x40009AB")]
		PP,
		[Token(Token = "0x40009AC")]
		FF,
		[Token(Token = "0x40009AD")]
		TH,
		[Token(Token = "0x40009AE")]
		DD,
		[Token(Token = "0x40009AF")]
		kk,
		[Token(Token = "0x40009B0")]
		CH,
		[Token(Token = "0x40009B1")]
		SS,
		[Token(Token = "0x40009B2")]
		nn,
		[Token(Token = "0x40009B3")]
		RR,
		[Token(Token = "0x40009B4")]
		aa,
		[Token(Token = "0x40009B5")]
		E,
		[Token(Token = "0x40009B6")]
		ih,
		[Token(Token = "0x40009B7")]
		oh,
		[Token(Token = "0x40009B8")]
		ou
	}

	[Token(Token = "0x2000238")]
	public enum Signals
	{
		[Token(Token = "0x40009BA")]
		VisemeOn,
		[Token(Token = "0x40009BB")]
		VisemeOff,
		[Token(Token = "0x40009BC")]
		VisemeAmount,
		[Token(Token = "0x40009BD")]
		VisemeSmoothing,
		[Token(Token = "0x40009BE")]
		LaughterAmount
	}

	[Token(Token = "0x2000239")]
	public enum ContextProviders
	{
		[Token(Token = "0x40009C0")]
		Original,
		[Token(Token = "0x40009C1")]
		Enhanced,
		[Token(Token = "0x40009C2")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x200023A")]
	public class Frame
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x651424", Offset = "0x651424", VA = "0x651424")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x6514C4", Offset = "0x6514C4", VA = "0x6514C4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x651554", Offset = "0x651554", VA = "0x651554")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000021")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600006E")]
	[Address(RVA = "0x64FF14", Offset = "0x64FF14", VA = "0x64FF14")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x600006F")]
	[Address(RVA = "0x64FFC0", Offset = "0x64FFC0", VA = "0x64FFC0")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000070")]
	[Address(RVA = "0x65004C", Offset = "0x65004C", VA = "0x65004C")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000071")]
	[Address(RVA = "0x6500FC", Offset = "0x6500FC", VA = "0x6500FC")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000072")]
	[Address(RVA = "0x6501C0", Offset = "0x6501C0", VA = "0x6501C0")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000073")]
	[Address(RVA = "0x6502A8", Offset = "0x6502A8", VA = "0x6502A8")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000074")]
	[Address(RVA = "0x650344", Offset = "0x650344", VA = "0x650344")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000075")]
	[Address(RVA = "0x6503E0", Offset = "0x6503E0", VA = "0x6503E0")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000076")]
	[Address(RVA = "0x6504A4", Offset = "0x6504A4", VA = "0x6504A4")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x6505BC", Offset = "0x6505BC", VA = "0x6505BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x650978", Offset = "0x650978", VA = "0x650978")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x65083C", Offset = "0x65083C", VA = "0x65083C")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x650A58", Offset = "0x650A58", VA = "0x650A58")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x650B6C", Offset = "0x650B6C", VA = "0x650B6C")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x6507D4", Offset = "0x6507D4", VA = "0x6507D4")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x650BDC", Offset = "0x650BDC", VA = "0x650BDC")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x650CC0", Offset = "0x650CC0", VA = "0x650CC0")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x650DAC", Offset = "0x650DAC", VA = "0x650DAC")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x650E40", Offset = "0x650E40", VA = "0x650E40")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x650ED4", Offset = "0x650ED4", VA = "0x650ED4")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x650F98", Offset = "0x650F98", VA = "0x650F98")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x651150", Offset = "0x651150", VA = "0x651150")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x651300", Offset = "0x651300", VA = "0x651300")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000014")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4CB998", Offset = "0x4CB998")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC2B0", Offset = "0x4CC2B0")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC2E8", Offset = "0x4CC2E8")]
	public bool enableTouchInput;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC320", Offset = "0x4CC320")]
	public bool audioLoopback;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC358", Offset = "0x4CC358")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC390", Offset = "0x4CC390")]
	public bool showVisemes;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC3C8", Offset = "0x4CC3C8")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC400", Offset = "0x4CC400")]
	public bool skipAudioSource;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC438", Offset = "0x4CC438")]
	public float gain;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x6515DC", Offset = "0x6515DC", VA = "0x6515DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x651858", Offset = "0x651858", VA = "0x651858")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x651DE4", Offset = "0x651DE4", VA = "0x651DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x6520F8", Offset = "0x6520F8", VA = "0x6520F8")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x652198", Offset = "0x652198", VA = "0x652198")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x65223C", Offset = "0x65223C", VA = "0x65223C")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x6523A4", Offset = "0x6523A4", VA = "0x6523A4")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x652504", Offset = "0x652504", VA = "0x652504")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x6525E8", Offset = "0x6525E8", VA = "0x6525E8")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x651E34", Offset = "0x651E34", VA = "0x651E34")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x651B68", Offset = "0x651B68", VA = "0x651B68")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x6525F8", Offset = "0x6525F8", VA = "0x6525F8")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x652724", Offset = "0x652724", VA = "0x652724")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4CB9FC", Offset = "0x4CB9FC")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC470", Offset = "0x4CC470")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC4A8", Offset = "0x4CC4A8")]
	public bool enableAcceleration;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000004")]
	public int Smoothing
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x6528A4", Offset = "0x6528A4", VA = "0x6528A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x6527B8", Offset = "0x6527B8", VA = "0x6527B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public uint Context
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x65239C", Offset = "0x65239C", VA = "0x65239C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000006")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x651E2C", Offset = "0x651E2C", VA = "0x651E2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x6528AC", Offset = "0x6528AC", VA = "0x6528AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x652A44", Offset = "0x652A44", VA = "0x652A44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x652B68", Offset = "0x652B68", VA = "0x652B68")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x652B70", Offset = "0x652B70", VA = "0x652B70")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x652C64", Offset = "0x652C64", VA = "0x652C64")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x652D2C", Offset = "0x652D2C", VA = "0x652D2C")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x652748", Offset = "0x652748", VA = "0x652748")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4CBA60", Offset = "0x4CBA60")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC4E0", Offset = "0x4CC4E0")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x652DAC", Offset = "0x652DAC", VA = "0x652DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x652FB8", Offset = "0x652FB8", VA = "0x652FB8")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000017")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC518", Offset = "0x4CC518")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC550", Offset = "0x4CC550")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC588", Offset = "0x4CC588")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC5C0", Offset = "0x4CC5C0")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC5F8", Offset = "0x4CC5F8")]
	public KeyCode laughterKey;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC630", Offset = "0x4CC630")]
	public int laughterBlendTarget;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CC668", Offset = "0x4CC668")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC668", Offset = "0x4CC668")]
	public float laughterThreshold;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CC6BC", Offset = "0x4CC6BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC6BC", Offset = "0x4CC6BC")]
	public float laughterMultiplier;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CC710", Offset = "0x4CC710")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC710", Offset = "0x4CC710")]
	public int smoothAmount;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x652FBC", Offset = "0x652FBC", VA = "0x652FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x65310C", Offset = "0x65310C", VA = "0x65310C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x653488", Offset = "0x653488", VA = "0x653488")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x653240", Offset = "0x653240", VA = "0x653240")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x653384", Offset = "0x653384", VA = "0x653384")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x65356C", Offset = "0x65356C", VA = "0x65356C")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x653690", Offset = "0x653690", VA = "0x653690")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x65370C", Offset = "0x65370C", VA = "0x65370C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000018")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC768", Offset = "0x4CC768")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x4CC768", Offset = "0x4CC768")]
	public Texture[] Textures;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CC8E4", Offset = "0x4CC8E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC8E4", Offset = "0x4CC8E4")]
	public int smoothAmount;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x653804", Offset = "0x653804", VA = "0x653804")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x653964", Offset = "0x653964", VA = "0x653964")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x653C08", Offset = "0x653C08", VA = "0x653C08")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x653E08", Offset = "0x653E08", VA = "0x653E08")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Serializable]
[Token(Token = "0x2000019")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x652EC0", Offset = "0x652EC0", VA = "0x652EC0")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x654928", Offset = "0x654928", VA = "0x654928")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200001A")]
public class BufferedAudioStream
{
	[Token(Token = "0x4000048")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x400004C")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x400004D")]
	private const int sampleRate = 48000;

	[Token(Token = "0x400004E")]
	private const int bufferSize = 12000;

	[Token(Token = "0x400004F")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x861170", Offset = "0x861170", VA = "0x861170")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x8612A8", Offset = "0x8612A8", VA = "0x8612A8")]
	public void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x861244", Offset = "0x861244", VA = "0x861244")]
	private void Stop()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x8614AC", Offset = "0x8614AC", VA = "0x8614AC")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x200001B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	public delegate void OnClick();

	[Token(Token = "0x200023C")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200023D")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200023E")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD24", Offset = "0x4CBD24")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x769990", Offset = "0x769990", VA = "0x769990")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x76A4C8", Offset = "0x76A4C8", VA = "0x76A4C8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD34", Offset = "0x4CBD34")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x769C94", Offset = "0x769C94", VA = "0x769C94")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x76A8F4", Offset = "0x76A8F4", VA = "0x76A8F4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD44", Offset = "0x4CBD44")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x769EE0", Offset = "0x769EE0", VA = "0x769EE0")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x76AD80", Offset = "0x76AD80", VA = "0x76AD80")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD54", Offset = "0x4CBD54")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x76A0B4", Offset = "0x76A0B4", VA = "0x76A0B4")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x76B4E4", Offset = "0x76B4E4", VA = "0x76B4E4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD64", Offset = "0x4CBD64")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x76A390", Offset = "0x76A390", VA = "0x76A390")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x76B514", Offset = "0x76B514", VA = "0x76B514")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000052")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000053")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000054")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000061")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000062")]
	private const float marginH = 16f;

	[Token(Token = "0x4000063")]
	private const float marginV = 16f;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x7683A0", Offset = "0x7683A0", VA = "0x7683A0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x7688C8", Offset = "0x7688C8", VA = "0x7688C8")]
	public void Show()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x7690D4", Offset = "0x7690D4", VA = "0x7690D4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x768DD4", Offset = "0x768DD4", VA = "0x768DD4")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x7692C8", Offset = "0x7692C8", VA = "0x7692C8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x769684", Offset = "0x769684", VA = "0x769684")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x769998", Offset = "0x769998", VA = "0x769998")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x769AA0", Offset = "0x769AA0", VA = "0x769AA0")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x769C9C", Offset = "0x769C9C", VA = "0x769C9C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x769D38", Offset = "0x769D38", VA = "0x769D38")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x769EE8", Offset = "0x769EE8", VA = "0x769EE8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x76A0BC", Offset = "0x76A0BC", VA = "0x76A0BC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x76A398", Offset = "0x76A398", VA = "0x76A398")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x76A458", Offset = "0x76A458", VA = "0x76A458")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200001C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x782FA8", Offset = "0x782FA8", VA = "0x782FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x783030", Offset = "0x783030", VA = "0x783030")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x7830B0", Offset = "0x7830B0", VA = "0x7830B0")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x783120", Offset = "0x783120", VA = "0x783120")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200001D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000244")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40009D0")]
		On,
		[Token(Token = "0x40009D1")]
		Off,
		[Token(Token = "0x40009D2")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000007")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x711EE4", Offset = "0x711EE4", VA = "0x711EE4")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x711E88", Offset = "0x711E88", VA = "0x711E88")]
		set
		{
		}
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x711EEC", Offset = "0x711EEC", VA = "0x711EEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x711F44", Offset = "0x711F44", VA = "0x711F44")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x711FE0", Offset = "0x711FE0", VA = "0x711FE0", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x711FFC", Offset = "0x711FFC", VA = "0x711FFC", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x712074", Offset = "0x712074", VA = "0x712074")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x712358", Offset = "0x712358", VA = "0x712358")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x7124B4", Offset = "0x7124B4", VA = "0x7124B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x712550", Offset = "0x712550", VA = "0x712550")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200001E")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x8609C4", Offset = "0x8609C4", VA = "0x8609C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x860C18", Offset = "0x860C18", VA = "0x860C18")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x861150", Offset = "0x861150", VA = "0x861150")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200001F")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x7827BC", Offset = "0x7827BC", VA = "0x7827BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x78293C", Offset = "0x78293C", VA = "0x78293C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x782BA4", Offset = "0x782BA4", VA = "0x782BA4")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000020")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000008")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x782C98", Offset = "0x782C98", VA = "0x782C98")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x782850", Offset = "0x782850", VA = "0x782850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2CFC", Offset = "0x4D2CFC")]
		add
		{
		}
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x782BAC", Offset = "0x782BAC", VA = "0x782BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2D0C", Offset = "0x4D2D0C")]
		remove
		{
		}
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x782CA4", Offset = "0x782CA4", VA = "0x782CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x782DD8", Offset = "0x782DD8", VA = "0x782DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x782F90", Offset = "0x782F90", VA = "0x782F90")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x782F98", Offset = "0x782F98", VA = "0x782F98")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000021")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CC9EC", Offset = "0x4CC9EC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCA24", Offset = "0x4CCA24")]
	public bool EnableCollision;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCA5C", Offset = "0x4CCA5C")]
	public float MaxFade;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCA94", Offset = "0x4CCA94")]
	public float FadeMinDistance;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCACC", Offset = "0x4CCACC")]
	public float FadeMaxDistance;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x86398C", Offset = "0x86398C", VA = "0x86398C")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x863A14", Offset = "0x863A14", VA = "0x863A14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x863A84", Offset = "0x863A84", VA = "0x863A84")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x863A88", Offset = "0x863A88", VA = "0x863A88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x863AC0", Offset = "0x863AC0", VA = "0x863AC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x863AF8", Offset = "0x863AF8", VA = "0x863AF8")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000022")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x7133F4", Offset = "0x7133F4", VA = "0x7133F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x7134A0", Offset = "0x7134A0", VA = "0x7134A0")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000023")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000245")]
	public enum States
	{
		[Token(Token = "0x40009D4")]
		Ready,
		[Token(Token = "0x40009D5")]
		Aim,
		[Token(Token = "0x40009D6")]
		CancelAim,
		[Token(Token = "0x40009D7")]
		PreTeleport,
		[Token(Token = "0x40009D8")]
		CancelTeleport,
		[Token(Token = "0x40009D9")]
		Teleporting,
		[Token(Token = "0x40009DA")]
		PostTeleport
	}

	[Token(Token = "0x2000246")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40009DC")]
		None,
		[Token(Token = "0x40009DD")]
		Aim,
		[Token(Token = "0x40009DE")]
		PreTeleport,
		[Token(Token = "0x40009DF")]
		Teleport
	}

	[Token(Token = "0x2000247")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40009E1")]
		Point,
		[Token(Token = "0x40009E2")]
		Sphere,
		[Token(Token = "0x40009E3")]
		Capsule
	}

	[Token(Token = "0x2000248")]
	public class AimData
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2C88", Offset = "0x4D2C88")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000AA")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x717558", Offset = "0x717558", VA = "0x717558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5724", Offset = "0x4D5724")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x717550", Offset = "0x717550", VA = "0x717550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5734", Offset = "0x4D5734")]
			private set
			{
			}
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x7174DC", Offset = "0x7174DC", VA = "0x7174DC")]
		public AimData()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x717560", Offset = "0x717560", VA = "0x717560")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD74", Offset = "0x4CBD74")]
	private sealed class <ReadyStateCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x7172B8", Offset = "0x7172B8", VA = "0x7172B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x717328", Offset = "0x717328", VA = "0x717328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x714DF0", Offset = "0x714DF0", VA = "0x714DF0")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x71714C", Offset = "0x71714C", VA = "0x71714C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x717150", Offset = "0x717150", VA = "0x717150", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x7172C0", Offset = "0x7172C0", VA = "0x7172C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD84", Offset = "0x4CBD84")]
	private sealed class <AimStateCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x716A88", Offset = "0x716A88", VA = "0x716A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x716AF8", Offset = "0x716AF8", VA = "0x716AF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x71548C", Offset = "0x71548C", VA = "0x71548C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x7168BC", Offset = "0x7168BC", VA = "0x7168BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x7168C0", Offset = "0x7168C0", VA = "0x7168C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x716A90", Offset = "0x716A90", VA = "0x716A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBD94", Offset = "0x4CBD94")]
	private sealed class <CancelAimStateCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x716BDC", Offset = "0x716BDC", VA = "0x716BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x716C4C", Offset = "0x716C4C", VA = "0x716C4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x715704", Offset = "0x715704", VA = "0x715704")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x716B00", Offset = "0x716B00", VA = "0x716B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x716B04", Offset = "0x716B04", VA = "0x716B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x716BE4", Offset = "0x716BE4", VA = "0x716BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBDA4", Offset = "0x4CBDA4")]
	private sealed class <PreTeleportStateCoroutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x7170D4", Offset = "0x7170D4", VA = "0x7170D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x717144", Offset = "0x717144", VA = "0x717144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x71597C", Offset = "0x71597C", VA = "0x71597C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x716F88", Offset = "0x716F88", VA = "0x716F88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x716F8C", Offset = "0x716F8C", VA = "0x716F8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x7170DC", Offset = "0x7170DC", VA = "0x7170DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBDB4", Offset = "0x4CBDB4")]
	private sealed class <CancelTeleportStateCoroutine>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x716D30", Offset = "0x716D30", VA = "0x716D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x716DA0", Offset = "0x716DA0", VA = "0x716DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x715BF4", Offset = "0x715BF4", VA = "0x715BF4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x716C54", Offset = "0x716C54", VA = "0x716C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x716C58", Offset = "0x716C58", VA = "0x716C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x716D38", Offset = "0x716D38", VA = "0x716D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBDC4", Offset = "0x4CBDC4")]
	private sealed class <TeleportingStateCoroutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x717464", Offset = "0x717464", VA = "0x717464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x7174D4", Offset = "0x7174D4", VA = "0x7174D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x715E6C", Offset = "0x715E6C", VA = "0x715E6C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x717330", Offset = "0x717330", VA = "0x717330", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x717334", Offset = "0x717334", VA = "0x717334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x71746C", Offset = "0x71746C", VA = "0x71746C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBDD4", Offset = "0x4CBDD4")]
	private sealed class <PostTeleportStateCoroutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x716F10", Offset = "0x716F10", VA = "0x716F10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x716F80", Offset = "0x716F80", VA = "0x716F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x7160E4", Offset = "0x7160E4", VA = "0x7160E4")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x716DA8", Offset = "0x716DA8", VA = "0x716DA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x716DAC", Offset = "0x716DAC", VA = "0x716DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x716F18", Offset = "0x716F18", VA = "0x716F18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCB04", Offset = "0x4CCB04")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCB3C", Offset = "0x4CCB3C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCB74", Offset = "0x4CCB74")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCBAC", Offset = "0x4CCBAC")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCBE4", Offset = "0x4CCBE4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCC1C", Offset = "0x4CCC1C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCC54", Offset = "0x4CCC54")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCC8C", Offset = "0x4CCC8C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CCCC4", Offset = "0x4CCCC4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCCD4", Offset = "0x4CCCD4")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCD0C", Offset = "0x4CCD0C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CCD54", Offset = "0x4CCD54")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCD64", Offset = "0x4CCD64")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCD9C", Offset = "0x4CCD9C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCDD4", Offset = "0x4CCDD4")]
	public float AimCollisionRadius;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCE0C", Offset = "0x4CCE0C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000009")]
	public States CurrentState
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x714100", Offset = "0x714100", VA = "0x714100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2D1C", Offset = "0x4D2D1C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x714108", Offset = "0x714108", VA = "0x714108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2D2C", Offset = "0x4D2D2C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x7143C8", Offset = "0x7143C8", VA = "0x7143C8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700000B")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x714408", Offset = "0x714408", VA = "0x714408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2D5C", Offset = "0x4D2D5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x714410", Offset = "0x714410", VA = "0x714410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2D6C", Offset = "0x4D2D6C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x714110", Offset = "0x714110", VA = "0x714110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2D3C", Offset = "0x4D2D3C")]
		add
		{
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x7141FC", Offset = "0x7141FC", VA = "0x7141FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2D4C", Offset = "0x4D2D4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x714C18", Offset = "0x714C18", VA = "0x714C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2DB4", Offset = "0x4D2DB4")]
		add
		{
		}
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x714D04", Offset = "0x714D04", VA = "0x714D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2DC4", Offset = "0x4D2DC4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x714E1C", Offset = "0x714E1C", VA = "0x714E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2E38", Offset = "0x4D2E38")]
		add
		{
		}
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x714F08", Offset = "0x714F08", VA = "0x714F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2E48", Offset = "0x4D2E48")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x714FF4", Offset = "0x714FF4", VA = "0x714FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2E58", Offset = "0x4D2E58")]
		add
		{
		}
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x7150E0", Offset = "0x7150E0", VA = "0x7150E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2E68", Offset = "0x4D2E68")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x715240", Offset = "0x715240", VA = "0x715240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2E78", Offset = "0x4D2E78")]
		add
		{
		}
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x71532C", Offset = "0x71532C", VA = "0x71532C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2E88", Offset = "0x4D2E88")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000100")]
		[Address(RVA = "0x7154B8", Offset = "0x7154B8", VA = "0x7154B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2EFC", Offset = "0x4D2EFC")]
		add
		{
		}
		[Token(Token = "0x6000101")]
		[Address(RVA = "0x7155A4", Offset = "0x7155A4", VA = "0x7155A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2F0C", Offset = "0x4D2F0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x715730", Offset = "0x715730", VA = "0x715730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2F80", Offset = "0x4D2F80")]
		add
		{
		}
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x71581C", Offset = "0x71581C", VA = "0x71581C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2F90", Offset = "0x4D2F90")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0x7159A8", Offset = "0x7159A8", VA = "0x7159A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3004", Offset = "0x4D3004")]
		add
		{
		}
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x715A94", Offset = "0x715A94", VA = "0x715A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3014", Offset = "0x4D3014")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x715C20", Offset = "0x715C20", VA = "0x715C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3088", Offset = "0x4D3088")]
		add
		{
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x715D0C", Offset = "0x715D0C", VA = "0x715D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3098", Offset = "0x4D3098")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x715E98", Offset = "0x715E98", VA = "0x715E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D310C", Offset = "0x4D310C")]
		add
		{
		}
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x715F84", Offset = "0x715F84", VA = "0x715F84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D311C", Offset = "0x4D311C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x716110", Offset = "0x716110", VA = "0x716110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3190", Offset = "0x4D3190")]
		add
		{
		}
		[Token(Token = "0x6000110")]
		[Address(RVA = "0x7161FC", Offset = "0x7161FC", VA = "0x7161FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D31A0", Offset = "0x4D31A0")]
		remove
		{
		}
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x713D18", Offset = "0x713D18", VA = "0x713D18")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x713D3C", Offset = "0x713D3C", VA = "0x713D3C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x7142E8", Offset = "0x7142E8", VA = "0x7142E8")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x714418", Offset = "0x714418", VA = "0x714418")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x7147C0", Offset = "0x7147C0", VA = "0x7147C0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4D2D7C", Offset = "0x4D2D7C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x714878", Offset = "0x714878", VA = "0x714878")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x7149A0", Offset = "0x7149A0", VA = "0x7149A0")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x7149D0", Offset = "0x7149D0", VA = "0x7149D0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x714A9C", Offset = "0x714A9C", VA = "0x714A9C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x714B18", Offset = "0x714B18", VA = "0x714B18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x714B74", Offset = "0x714B74", VA = "0x714B74", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x714BA4", Offset = "0x714BA4", VA = "0x714BA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D2DD4", Offset = "0x4D2DD4")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x7151CC", Offset = "0x7151CC", VA = "0x7151CC")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x715418", Offset = "0x715418", VA = "0x715418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D2E98", Offset = "0x4D2E98")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x715690", Offset = "0x715690", VA = "0x715690")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D2F1C", Offset = "0x4D2F1C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x715908", Offset = "0x715908", VA = "0x715908")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D2FA0", Offset = "0x4D2FA0")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x715B80", Offset = "0x715B80", VA = "0x715B80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3024", Offset = "0x4D3024")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x715DF8", Offset = "0x715DF8", VA = "0x715DF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D30A8", Offset = "0x4D30A8")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x716070", Offset = "0x716070", VA = "0x716070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D312C", Offset = "0x4D312C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x7162E8", Offset = "0x7162E8", VA = "0x7162E8")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x71648C", Offset = "0x71648C", VA = "0x71648C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x7164E4", Offset = "0x7164E4", VA = "0x7164E4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x71671C", Offset = "0x71671C", VA = "0x71671C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x7168AC", Offset = "0x7168AC", VA = "0x7168AC")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000024")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x837FD0", Offset = "0x837FD0", VA = "0x837FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D31B0", Offset = "0x4D31B0")]
		add
		{
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x8380BC", Offset = "0x8380BC", VA = "0x8380BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D31C0", Offset = "0x4D31C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x8381A8", Offset = "0x8381A8", VA = "0x8381A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D31D0", Offset = "0x4D31D0")]
		add
		{
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x838294", Offset = "0x838294", VA = "0x838294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D31E0", Offset = "0x4D31E0")]
		remove
		{
		}
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x838380", Offset = "0x838380", VA = "0x838380")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x838428", Offset = "0x838428", VA = "0x838428")]
	private void Start()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x83842C", Offset = "0x83842C", VA = "0x83842C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x8384A0", Offset = "0x8384A0", VA = "0x8384A0")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x8386A8", Offset = "0x8386A8", VA = "0x8386A8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x8389D0", Offset = "0x8389D0", VA = "0x8389D0")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x838BF0", Offset = "0x838BF0", VA = "0x838BF0")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000025")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000121")]
	[Address(RVA = "0x841C98", Offset = "0x841C98", VA = "0x841C98", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x841D38", Offset = "0x841D38", VA = "0x841D38", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000123")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x841E14", Offset = "0x841E14", VA = "0x841E14")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000026")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCF04", Offset = "0x4CCF04")]
	public float Range;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x841E24", Offset = "0x841E24", VA = "0x841E24", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x841FD4", Offset = "0x841FD4", VA = "0x841FD4")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000027")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCF3C", Offset = "0x4CCF3C")]
	public float Range;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCF74", Offset = "0x4CCF74")]
	public float MinimumElevation;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCFAC", Offset = "0x4CCFAC")]
	public float Gravity;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CCFE4", Offset = "0x4CCFE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CCFE4", Offset = "0x4CCFE4")]
	public float AimVelocity;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD040", Offset = "0x4CD040")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CD040", Offset = "0x4CD040")]
	public float AimStep;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x841FE4", Offset = "0x841FE4", VA = "0x841FE4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x842248", Offset = "0x842248", VA = "0x842248")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000028")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD098", Offset = "0x4CD098")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x84225C", Offset = "0x84225C", VA = "0x84225C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x842340", Offset = "0x842340", VA = "0x842340")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x84238C", Offset = "0x84238C", VA = "0x84238C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x8423D8", Offset = "0x8423D8", VA = "0x8423D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x84248C", Offset = "0x84248C", VA = "0x84248C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x84252C", Offset = "0x84252C", VA = "0x84252C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x8425C8", Offset = "0x8425C8", VA = "0x8425C8")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000029")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CD0D0", Offset = "0x4CD0D0")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD0E0", Offset = "0x4CD0E0")]
	public Transform PositionIndicator;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD118", Offset = "0x4CD118")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD150", Offset = "0x4CD150")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700000C")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x842784", Offset = "0x842784", VA = "0x842784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D31F0", Offset = "0x4D31F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x84278C", Offset = "0x84278C", VA = "0x84278C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3200", Offset = "0x4D3200")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x84299C", Offset = "0x84299C", VA = "0x84299C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3210", Offset = "0x4D3210")]
		add
		{
		}
		[Token(Token = "0x6000137")]
		[Address(RVA = "0x842A88", Offset = "0x842A88", VA = "0x842A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3220", Offset = "0x4D3220")]
		remove
		{
		}
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x842798", Offset = "0x842798", VA = "0x842798")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x842828", Offset = "0x842828", VA = "0x842828")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x842944", Offset = "0x842944", VA = "0x842944")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x842998", Offset = "0x842998", VA = "0x842998")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x842B74", Offset = "0x842B74", VA = "0x842B74")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x842BDC", Offset = "0x842BDC", VA = "0x842BDC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x842C14", Offset = "0x842C14", VA = "0x842C14", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200002A")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBDE4", Offset = "0x4CBDE4")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x84346C", Offset = "0x84346C", VA = "0x84346C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x8434DC", Offset = "0x8434DC", VA = "0x8434DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x843184", Offset = "0x843184", VA = "0x843184")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x8433D0", Offset = "0x8433D0", VA = "0x8433D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x8433D4", Offset = "0x8433D4", VA = "0x8433D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x843474", Offset = "0x843474", VA = "0x843474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBDF4", Offset = "0x4CBDF4")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0x843358", Offset = "0x843358", VA = "0x843358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x8433C8", Offset = "0x8433C8", VA = "0x8433C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x843224", Offset = "0x843224", VA = "0x843224")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x8432A8", Offset = "0x8432A8", VA = "0x8432A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x8432AC", Offset = "0x8432AC", VA = "0x8432AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x843360", Offset = "0x843360", VA = "0x843360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x842EF0", Offset = "0x842EF0", VA = "0x842EF0")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x842F9C", Offset = "0x842F9C", VA = "0x842F9C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x843020", Offset = "0x843020", VA = "0x843020", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x843110", Offset = "0x843110", VA = "0x843110")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3230", Offset = "0x4D3230")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x8431B0", Offset = "0x8431B0", VA = "0x8431B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3294", Offset = "0x4D3294")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000141")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x843250", Offset = "0x843250", VA = "0x843250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D32F8", Offset = "0x4D32F8")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x84327C", Offset = "0x84327C", VA = "0x84327C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3308", Offset = "0x4D3308")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200002B")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CD198", Offset = "0x4CD198")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD1A8", Offset = "0x4CD1A8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD1E0", Offset = "0x4CD1E0")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD218", Offset = "0x4CD218")]
	public bool FastTeleport;

	[Token(Token = "0x1700000D")]
	public Transform Pointer
	{
		[Token(Token = "0x6000144")]
		[Address(RVA = "0x8434E4", Offset = "0x8434E4", VA = "0x8434E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3318", Offset = "0x4D3318")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x8434EC", Offset = "0x8434EC", VA = "0x8434EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3328", Offset = "0x4D3328")]
		private set
		{
		}
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x8434F4", Offset = "0x8434F4", VA = "0x8434F4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x84365C", Offset = "0x84365C", VA = "0x84365C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x84374C", Offset = "0x84374C", VA = "0x84374C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200002C")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000252")]
	public enum InputModes
	{
		[Token(Token = "0x4000A05")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000A06")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000A07")]
		ThumbstickTeleport,
		[Token(Token = "0x4000A08")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000253")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000A0A")]
		A,
		[Token(Token = "0x4000A0B")]
		B,
		[Token(Token = "0x4000A0C")]
		LeftTrigger,
		[Token(Token = "0x4000A0D")]
		LeftThumbstick,
		[Token(Token = "0x4000A0E")]
		RightTrigger,
		[Token(Token = "0x4000A0F")]
		RightThumbstick,
		[Token(Token = "0x4000A10")]
		X,
		[Token(Token = "0x4000A11")]
		Y
	}

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD250", Offset = "0x4CD250")]
	public InputModes InputMode;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD288", Offset = "0x4CD288")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD2C0", Offset = "0x4CD2C0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD2F8", Offset = "0x4CD2F8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x843750", Offset = "0x843750", VA = "0x843750")]
	private void Start()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x843754", Offset = "0x843754", VA = "0x843754", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x843C0C", Offset = "0x843C0C", VA = "0x843C0C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x843CDC", Offset = "0x843CDC", VA = "0x843CDC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200002D")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000254")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000A13")]
		HeadRelative,
		[Token(Token = "0x4000A14")]
		ForwardFacing
	}

	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBE04", Offset = "0x4CBE04")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0x84422C", Offset = "0x84422C", VA = "0x84422C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x84429C", Offset = "0x84429C", VA = "0x84429C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x843F94", Offset = "0x843F94", VA = "0x843F94")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x844140", Offset = "0x844140", VA = "0x844140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x844144", Offset = "0x844144", VA = "0x844144", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x844234", Offset = "0x844234", VA = "0x844234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x843D88", Offset = "0x843D88", VA = "0x843D88")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x843E3C", Offset = "0x843E3C", VA = "0x843E3C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x843E44", Offset = "0x843E44", VA = "0x843E44", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x843EB4", Offset = "0x843EB4", VA = "0x843EB4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x843F20", Offset = "0x843F20", VA = "0x843F20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3338", Offset = "0x4D3338")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000153")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x843FC0", Offset = "0x843FC0", VA = "0x843FC0")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x844114", Offset = "0x844114", VA = "0x844114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D339C", Offset = "0x4D339C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200002E")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000156")]
	[Address(RVA = "0x8442A4", Offset = "0x8442A4", VA = "0x8442A4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x8442A8", Offset = "0x8442A8", VA = "0x8442A8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x844364", Offset = "0x844364", VA = "0x844364")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200002F")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD330", Offset = "0x4CD330")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD368", Offset = "0x4CD368")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD3A0", Offset = "0x4CD3A0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD3D8", Offset = "0x4CD3D8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x844368", Offset = "0x844368", VA = "0x844368", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x8443D8", Offset = "0x8443D8", VA = "0x8443D8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x844944", Offset = "0x844944", VA = "0x844944")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000030")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD410", Offset = "0x4CD410")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD448", Offset = "0x4CD448")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD480", Offset = "0x4CD480")]
	public float RotateStickThreshold;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x844948", Offset = "0x844948", VA = "0x844948", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x844994", Offset = "0x844994", VA = "0x844994", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x844E78", Offset = "0x844E78", VA = "0x844E78")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000031")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x844E88", Offset = "0x844E88", VA = "0x844E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x844E8C", Offset = "0x844E8C", VA = "0x844E8C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x844E94", Offset = "0x844E94", VA = "0x844E94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x844F90", Offset = "0x844F90", VA = "0x844F90")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x844FB8", Offset = "0x844FB8", VA = "0x844FB8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000032")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CD4B8", Offset = "0x4CD4B8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700000E")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x841D30", Offset = "0x841D30", VA = "0x841D30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D33AC", Offset = "0x4D33AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x844FD0", Offset = "0x844FD0", VA = "0x844FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D33BC", Offset = "0x4D33BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x841CCC", Offset = "0x841CCC", VA = "0x841CCC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x841DE8", Offset = "0x841DE8", VA = "0x841DE8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x844FD8", Offset = "0x844FD8", VA = "0x844FD8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4D33CC", Offset = "0x4D33CC")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x842520", Offset = "0x842520", VA = "0x842520", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x8425C0", Offset = "0x8425C0", VA = "0x8425C0", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x841E1C", Offset = "0x841E1C", VA = "0x841E1C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000033")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBE14", Offset = "0x4CBE14")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x8457A0", Offset = "0x8457A0", VA = "0x8457A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x845810", Offset = "0x845810", VA = "0x845810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x84525C", Offset = "0x84525C", VA = "0x84525C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x845430", Offset = "0x845430", VA = "0x845430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x845434", Offset = "0x845434", VA = "0x845434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x8457A8", Offset = "0x8457A8", VA = "0x8457A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD4C8", Offset = "0x4CD4C8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40000FB")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x8450A8", Offset = "0x8450A8", VA = "0x8450A8")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x84516C", Offset = "0x84516C", VA = "0x84516C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x8451AC", Offset = "0x8451AC", VA = "0x8451AC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x8451E8", Offset = "0x8451E8", VA = "0x8451E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3404", Offset = "0x4D3404")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x845288", Offset = "0x845288", VA = "0x845288", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000171")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x8452B8", Offset = "0x8452B8", VA = "0x8452B8", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x845404", Offset = "0x845404", VA = "0x845404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3468", Offset = "0x4D3468")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000034")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x845818", Offset = "0x845818", VA = "0x845818")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x845878", Offset = "0x845878", VA = "0x845878", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x845A30", Offset = "0x845A30", VA = "0x845A30", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x845B68", Offset = "0x845B68", VA = "0x845B68")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4D3478", Offset = "0x4D3478")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x845B6C", Offset = "0x845B6C", VA = "0x845B6C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000035")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD500", Offset = "0x4CD500")]
	public float LOSOffset;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD538", Offset = "0x4CD538")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x845B78", Offset = "0x845B78", VA = "0x845B78", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x845E10", Offset = "0x845E10", VA = "0x845E10")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000036")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600017B")]
	[Address(RVA = "0x845E1C", Offset = "0x845E1C", VA = "0x845E1C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x845FD4", Offset = "0x845FD4", VA = "0x845FD4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600017D")]
	[Address(RVA = "0x845FD8", Offset = "0x845FD8", VA = "0x845FD8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x846080", Offset = "0x846080", VA = "0x846080", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600017F")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x846124", Offset = "0x846124", VA = "0x846124")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000038")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBE24", Offset = "0x4CBE24")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x8464F4", Offset = "0x8464F4", VA = "0x8464F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x846564", Offset = "0x846564", VA = "0x846564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x8461CC", Offset = "0x8461CC", VA = "0x8461CC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x8463B8", Offset = "0x8463B8", VA = "0x8463B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x8463BC", Offset = "0x8463BC", VA = "0x8463BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x8464FC", Offset = "0x8464FC", VA = "0x8464FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD570", Offset = "0x4CD570")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CD570", Offset = "0x4CD570")]
	public float TransitionDuration;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD5C8", Offset = "0x4CD5C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CD5C8", Offset = "0x4CD5C8")]
	public float TeleportDelay;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD61C", Offset = "0x4CD61C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x84612C", Offset = "0x84612C", VA = "0x84612C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x846158", Offset = "0x846158", VA = "0x846158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D34B0", Offset = "0x4D34B0")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x8461F8", Offset = "0x8461F8", VA = "0x8461F8")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000039")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000184")]
	[Address(RVA = "0x84656C", Offset = "0x84656C", VA = "0x84656C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x84659C", Offset = "0x84659C", VA = "0x84659C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200003A")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBE34", Offset = "0x4CBE34")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0x846864", Offset = "0x846864", VA = "0x846864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x8468D4", Offset = "0x8468D4", VA = "0x8468D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x846644", Offset = "0x846644", VA = "0x846644")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x8466B8", Offset = "0x8466B8", VA = "0x8466B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x8466BC", Offset = "0x8466BC", VA = "0x8466BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x84686C", Offset = "0x84686C", VA = "0x84686C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD654", Offset = "0x4CD654")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CD654", Offset = "0x4CD654")]
	public float TransitionDuration;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x8465A4", Offset = "0x8465A4", VA = "0x8465A4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x8465D0", Offset = "0x8465D0", VA = "0x8465D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3514", Offset = "0x4D3514")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x846670", Offset = "0x846670", VA = "0x846670")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200003B")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700000F")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x875DB4", Offset = "0x875DB4", VA = "0x875DB4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000010")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x876090", Offset = "0x876090", VA = "0x876090")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000011")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x86C50C", Offset = "0x86C50C", VA = "0x86C50C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000012")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x86D2B4", Offset = "0x86D2B4", VA = "0x86D2B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x86D904", Offset = "0x86D904", VA = "0x86D904")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x86D638", Offset = "0x86D638", VA = "0x86D638")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x86CA14", Offset = "0x86CA14", VA = "0x86CA14")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x86CBA8", Offset = "0x86CBA8", VA = "0x86CBA8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x86D448", Offset = "0x86D448", VA = "0x86D448")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x86DB4C", Offset = "0x86DB4C", VA = "0x86DB4C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x86D0A8", Offset = "0x86D0A8", VA = "0x86D0A8")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200003C")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	public enum VideoShape
	{
		[Token(Token = "0x4000A27")]
		_360,
		[Token(Token = "0x4000A28")]
		_180,
		[Token(Token = "0x4000A29")]
		Quad
	}

	[Token(Token = "0x200025A")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000A2B")]
		Mono,
		[Token(Token = "0x4000A2C")]
		TopBottom,
		[Token(Token = "0x4000A2D")]
		LeftRight
	}

	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBE44", Offset = "0x4CBE44")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x86DE3C", Offset = "0x86DE3C", VA = "0x86DE3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x86DEAC", Offset = "0x86DEAC", VA = "0x86DEAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x86C654", Offset = "0x86C654", VA = "0x86C654")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x86DCA0", Offset = "0x86DCA0", VA = "0x86DCA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x86DCA4", Offset = "0x86DCA4", VA = "0x86DCA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x86DE44", Offset = "0x86DE44", VA = "0x86DE44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBE54", Offset = "0x4CBE54")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x86C968", Offset = "0x86C968", VA = "0x86C968")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x86D81C", Offset = "0x86D81C", VA = "0x86D81C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CD6BC", Offset = "0x4CD6BC")]
	private bool <isPlaying>k__BackingField;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string MovieName;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool LoopVideo;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public VideoShape Shape;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VideoStereo Stereo;

	[Token(Token = "0x17000013")]
	public bool isPlaying
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x86C090", Offset = "0x86C090", VA = "0x86C090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3578", Offset = "0x4D3578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x86C098", Offset = "0x86C098", VA = "0x86C098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3588", Offset = "0x4D3588")]
		private set
		{
		}
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x86C0A4", Offset = "0x86C0A4", VA = "0x86C0A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x86C574", Offset = "0x86C574", VA = "0x86C574")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x86C5E0", Offset = "0x86C5E0", VA = "0x86C5E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3598", Offset = "0x4D3598")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x86C680", Offset = "0x86C680", VA = "0x86C680")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x86C970", Offset = "0x86C970", VA = "0x86C970")]
	public void Play()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x86CB08", Offset = "0x86CB08", VA = "0x86CB08")]
	public void Pause()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x86CC9C", Offset = "0x86CC9C", VA = "0x86CC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x86D3A4", Offset = "0x86D3A4", VA = "0x86D3A4")]
	public void Rewind()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x86D598", Offset = "0x86D598", VA = "0x86D598")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x86D72C", Offset = "0x86D72C", VA = "0x86D72C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x86D814", Offset = "0x86D814", VA = "0x86D814")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200003D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4CBAC4", Offset = "0x4CBAC4")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	private enum CubeFace
	{
		[Token(Token = "0x4000A35")]
		Right,
		[Token(Token = "0x4000A36")]
		Left,
		[Token(Token = "0x4000A37")]
		Top,
		[Token(Token = "0x4000A38")]
		Bottom,
		[Token(Token = "0x4000A39")]
		Front,
		[Token(Token = "0x4000A3A")]
		Back,
		[Token(Token = "0x4000A3B")]
		COUNT
	}

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x6561C8", Offset = "0x6561C8", VA = "0x6561C8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x656354", Offset = "0x656354", VA = "0x656354")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x656510", Offset = "0x656510", VA = "0x656510")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x656A20", Offset = "0x656A20", VA = "0x656A20")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x656DA8", Offset = "0x656DA8", VA = "0x656DA8")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x658328", Offset = "0x658328", VA = "0x658328")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x658388", Offset = "0x658388", VA = "0x658388")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x657128", Offset = "0x657128", VA = "0x657128")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x658470", Offset = "0x658470", VA = "0x658470")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x65865C", Offset = "0x65865C", VA = "0x65865C")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x65769C", Offset = "0x65769C", VA = "0x65769C")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x657AAC", Offset = "0x657AAC", VA = "0x657AAC")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x657EE8", Offset = "0x657EE8", VA = "0x657EE8")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x658848", Offset = "0x658848", VA = "0x658848")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x200003E")]
public static class VectorUtil
{
	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x104AE3C", Offset = "0x104AE3C", VA = "0x104AE3C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200003F")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x76BB20", Offset = "0x76BB20", VA = "0x76BB20")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x76BFBC", Offset = "0x76BFBC", VA = "0x76BFBC")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x76C084", Offset = "0x76C084", VA = "0x76C084")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x76C340", Offset = "0x76C340", VA = "0x76C340")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x76C430", Offset = "0x76C430", VA = "0x76C430")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x76C524", Offset = "0x76C524", VA = "0x76C524")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x76C590", Offset = "0x76C590", VA = "0x76C590")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x76C598", Offset = "0x76C598", VA = "0x76C598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D360C", Offset = "0x4D360C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x76C5F4", Offset = "0x76C5F4", VA = "0x76C5F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D361C", Offset = "0x4D361C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x76C650", Offset = "0x76C650", VA = "0x76C650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D362C", Offset = "0x4D362C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x76C6AC", Offset = "0x76C6AC", VA = "0x76C6AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D363C", Offset = "0x4D363C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000040")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBE64", Offset = "0x4CBE64")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x783634", Offset = "0x783634", VA = "0x783634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x7836A4", Offset = "0x7836A4", VA = "0x7836A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x7834C0", Offset = "0x7834C0", VA = "0x7834C0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x7834F4", Offset = "0x7834F4", VA = "0x7834F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x7834F8", Offset = "0x7834F8", VA = "0x7834F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x78363C", Offset = "0x78363C", VA = "0x78363C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x783128", Offset = "0x783128", VA = "0x783128")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x78322C", Offset = "0x78322C", VA = "0x78322C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x7831B8", Offset = "0x7831B8", VA = "0x7831B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D364C", Offset = "0x4D364C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x7834EC", Offset = "0x7834EC", VA = "0x7834EC")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000041")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CD6DC", Offset = "0x4CD6DC")]
	public int SubdivisionsU;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CD6F8", Offset = "0x4CD6F8")]
	public int SubdivisionsV;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x863E50", Offset = "0x863E50", VA = "0x863E50")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x864DB0", Offset = "0x864DB0", VA = "0x864DB0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000042")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000014")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x7134A8", Offset = "0x7134A8", VA = "0x7134A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x713508", Offset = "0x713508", VA = "0x713508")]
	public void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x7138C8", Offset = "0x7138C8", VA = "0x7138C8")]
	public void Update()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x7139C4", Offset = "0x7139C4", VA = "0x7139C4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4D36B0", Offset = "0x4D36B0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60001C7")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60001C9")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60001CA")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60001CB")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60001CC")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60001CD")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60001CE")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x713A2C", Offset = "0x713A2C", VA = "0x713A2C")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x713A90", Offset = "0x713A90", VA = "0x713A90")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x713B40", Offset = "0x713B40", VA = "0x713B40")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x713D60", Offset = "0x713D60", VA = "0x713D60")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x713E50", Offset = "0x713E50", VA = "0x713E50")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x713774", Offset = "0x713774", VA = "0x713774")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x713F38", Offset = "0x713F38", VA = "0x713F38")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x713FC8", Offset = "0x713FC8", VA = "0x713FC8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x7140F8", Offset = "0x7140F8", VA = "0x7140F8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000043")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBE74", Offset = "0x4CBE74")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x83EFA0", Offset = "0x83EFA0", VA = "0x83EFA0")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x83F098", Offset = "0x83F098", VA = "0x83F098")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x83EDBC", Offset = "0x83EDBC", VA = "0x83EDBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x83EFA8", Offset = "0x83EFA8", VA = "0x83EFA8")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x83F090", Offset = "0x83F090", VA = "0x83F090")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4CBB58", Offset = "0x4CBB58")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000A42")]
		MouseXAndY,
		[Token(Token = "0x4000A43")]
		MouseX,
		[Token(Token = "0x4000A44")]
		MouseY
	}

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x71F104", Offset = "0x71F104", VA = "0x71F104")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x71F388", Offset = "0x71F388", VA = "0x71F388")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x71F450", Offset = "0x71F450", VA = "0x71F450")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000045")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000046")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x643AC4", Offset = "0x643AC4", VA = "0x643AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x643AC8", Offset = "0x643AC8", VA = "0x643AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x643ACC", Offset = "0x643ACC", VA = "0x643ACC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x643C58", Offset = "0x643C58", VA = "0x643C58")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x643B20", Offset = "0x643B20", VA = "0x643B20")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x643BB4", Offset = "0x643BB4", VA = "0x643BB4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x643CAC", Offset = "0x643CAC", VA = "0x643CAC")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x643D4C", Offset = "0x643D4C", VA = "0x643D4C")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x643ED8", Offset = "0x643ED8", VA = "0x643ED8")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x644064", Offset = "0x644064", VA = "0x644064")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000047")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000165")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400016B")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x6C482C", Offset = "0x6C482C", VA = "0x6C482C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x6C4864", Offset = "0x6C4864", VA = "0x6C4864")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x6C4A34", Offset = "0x6C4A34", VA = "0x6C4A34")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x6C4AEC", Offset = "0x6C4AEC", VA = "0x6C4AEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x6C4BFC", Offset = "0x6C4BFC", VA = "0x6C4BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x6C5834", Offset = "0x6C5834", VA = "0x6C5834")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x6C4AC8", Offset = "0x6C4AC8", VA = "0x6C4AC8")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x6C4B50", Offset = "0x6C4B50", VA = "0x6C4B50")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x6C551C", Offset = "0x6C551C", VA = "0x6C551C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x6C55B8", Offset = "0x6C55B8", VA = "0x6C55B8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x6C5658", Offset = "0x6C5658", VA = "0x6C5658")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x6C56F8", Offset = "0x6C56F8", VA = "0x6C56F8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x6C5794", Offset = "0x6C5794", VA = "0x6C5794")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x6C6B9C", Offset = "0x6C6B9C", VA = "0x6C6B9C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x6C6C60", Offset = "0x6C6C60", VA = "0x6C6C60")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x6C6D24", Offset = "0x6C6D24", VA = "0x6C6D24")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000048")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000262")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000A46")]
		Uninitialized = -1,
		[Token(Token = "0x4000A47")]
		NotEnabled,
		[Token(Token = "0x4000A48")]
		Success,
		[Token(Token = "0x4000A49")]
		StreamError,
		[Token(Token = "0x4000A4A")]
		ProcessError,
		[Token(Token = "0x4000A4B")]
		MaxStatValue
	}

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000015")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x87684C", Offset = "0x87684C", VA = "0x87684C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x876854", Offset = "0x876854", VA = "0x876854")]
		set
		{
		}
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x876860", Offset = "0x876860", VA = "0x876860")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x876AB0", Offset = "0x876AB0", VA = "0x876AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x876D3C", Offset = "0x876D3C", VA = "0x876D3C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000049")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	private enum Parameters
	{
		[Token(Token = "0x4000A4D")]
		P_GAIN,
		[Token(Token = "0x4000A4E")]
		P_USEINVSQR,
		[Token(Token = "0x4000A4F")]
		P_NEAR,
		[Token(Token = "0x4000A50")]
		P_FAR,
		[Token(Token = "0x4000A51")]
		P_RADIUS,
		[Token(Token = "0x4000A52")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000A53")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000A54")]
		P_AMBISTAT,
		[Token(Token = "0x4000A55")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000A56")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000A57")]
		P_SENDLEVEL,
		[Token(Token = "0x4000A58")]
		P_NUM
	}

	[Token(Token = "0x4000171")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000016")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x876FD0", Offset = "0x876FD0", VA = "0x876FD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x876FD8", Offset = "0x876FD8", VA = "0x876FD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public float Gain
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x876FE4", Offset = "0x876FE4", VA = "0x876FE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x876FEC", Offset = "0x876FEC", VA = "0x876FEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x877070", Offset = "0x877070", VA = "0x877070")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x877078", Offset = "0x877078", VA = "0x877078")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public float Near
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x877084", Offset = "0x877084", VA = "0x877084")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x87708C", Offset = "0x87708C", VA = "0x87708C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float Far
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x877114", Offset = "0x877114", VA = "0x877114")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x87711C", Offset = "0x87711C", VA = "0x87711C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float VolumetricRadius
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x8771A4", Offset = "0x8771A4", VA = "0x8771A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x8771AC", Offset = "0x8771AC", VA = "0x8771AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float ReverbSend
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x877234", Offset = "0x877234", VA = "0x877234")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x87723C", Offset = "0x87723C", VA = "0x87723C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x8772C4", Offset = "0x8772C4", VA = "0x8772C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x8772CC", Offset = "0x8772CC", VA = "0x8772CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x876DC0", Offset = "0x876DC0", VA = "0x876DC0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x4D36E8", Offset = "0x4D36E8")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000201")]
	[Address(RVA = "0x876ED4", Offset = "0x876ED4", VA = "0x876ED4")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x8772D8", Offset = "0x8772D8", VA = "0x8772D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x8774D8", Offset = "0x8774D8", VA = "0x8774D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x8774DC", Offset = "0x8774DC", VA = "0x8774DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x877344", Offset = "0x877344", VA = "0x877344")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x8775BC", Offset = "0x8775BC", VA = "0x8775BC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x877A90", Offset = "0x877A90", VA = "0x877A90")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000218")]
	[Address(RVA = "0x876E38", Offset = "0x876E38", VA = "0x876E38")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x877B60", Offset = "0x877B60", VA = "0x877B60")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200004A")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400017C")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400017E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x877B80", Offset = "0x877B80", VA = "0x877B80")]
	private void Start()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x877B8C", Offset = "0x877B8C", VA = "0x877B8C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600021D")]
	[Address(RVA = "0x877C60", Offset = "0x877C60", VA = "0x877C60")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x600021E")]
	[Address(RVA = "0x877BC4", Offset = "0x877BC4", VA = "0x877BC4")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x877CFC", Offset = "0x877CFC", VA = "0x877CFC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x200004B")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000265")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000185")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700001E")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x87AC84", Offset = "0x87AC84", VA = "0x87AC84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public string filePath
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x87AD10", Offset = "0x87AD10", VA = "0x87AD10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x87AD88", Offset = "0x87AD88", VA = "0x87AD88")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x87AF00", Offset = "0x87AF00", VA = "0x87AF00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x87AF04", Offset = "0x87AF04", VA = "0x87AF04")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x87B4B4", Offset = "0x87B4B4", VA = "0x87B4B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x87B98C", Offset = "0x87B98C", VA = "0x87B98C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x87BAF0", Offset = "0x87BAF0", VA = "0x87BAF0")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x87C360", Offset = "0x87C360", VA = "0x87C360")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x87C3AC", Offset = "0x87C3AC", VA = "0x87C3AC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x87E078", Offset = "0x87E078", VA = "0x87E078")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x87DF2C", Offset = "0x87DF2C", VA = "0x87DF2C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x87B2C8", Offset = "0x87B2C8", VA = "0x87B2C8")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x87B0E8", Offset = "0x87B0E8", VA = "0x87B0E8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x87E850", Offset = "0x87E850", VA = "0x87E850")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x87ECC4", Offset = "0x87ECC4", VA = "0x87ECC4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x200004C")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000266")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000A5F")]
		Int8,
		[Token(Token = "0x4000A60")]
		UInt8,
		[Token(Token = "0x4000A61")]
		Int16,
		[Token(Token = "0x4000A62")]
		UInt16,
		[Token(Token = "0x4000A63")]
		Int32,
		[Token(Token = "0x4000A64")]
		UInt32,
		[Token(Token = "0x4000A65")]
		Int64,
		[Token(Token = "0x4000A66")]
		UInt64,
		[Token(Token = "0x4000A67")]
		Float16,
		[Token(Token = "0x4000A68")]
		Float32,
		[Token(Token = "0x4000A69")]
		Float64
	}

	[Token(Token = "0x2000267")]
	public class ClientType
	{
		[Token(Token = "0x4000A6A")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000A6B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000A6C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000A6D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000A6E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000A6F")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000A70")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000A71")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000A72")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000A73")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000A74")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000A75")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000A76")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x8781F0", Offset = "0x8781F0", VA = "0x8781F0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000268")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001145")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001146")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001147")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001148")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001149")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600114A")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600114B")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600114C")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600114D")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600114E")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600114F")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001150")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001151")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001152")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001153")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000269")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000A77")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000C9")]
		private IntPtr context
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x878FF0", Offset = "0x878FF0", VA = "0x878FF0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001155")]
		[Address(RVA = "0x879054", Offset = "0x879054", VA = "0x879054")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001156")]
		[Address(RVA = "0x879100", Offset = "0x879100", VA = "0x879100")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x8791AC", Offset = "0x8791AC", VA = "0x8791AC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001158")]
		[Address(RVA = "0x8791D0", Offset = "0x8791D0", VA = "0x8791D0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x87927C", Offset = "0x87927C", VA = "0x87927C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600115A")]
		[Address(RVA = "0x8792A0", Offset = "0x8792A0", VA = "0x8792A0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x879348", Offset = "0x879348", VA = "0x879348", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600115C")]
		[Address(RVA = "0x87936C", Offset = "0x87936C", VA = "0x87936C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x879408", Offset = "0x879408", VA = "0x879408", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600115E")]
		[Address(RVA = "0x879410", Offset = "0x879410", VA = "0x879410")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x879538", Offset = "0x879538", VA = "0x879538", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001160")]
		[Address(RVA = "0x879630", Offset = "0x879630", VA = "0x879630")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x8796E4", Offset = "0x8796E4", VA = "0x8796E4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001162")]
		[Address(RVA = "0x8796F0", Offset = "0x8796F0", VA = "0x8796F0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x879838", Offset = "0x879838", VA = "0x879838", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001164")]
		[Address(RVA = "0x879844", Offset = "0x879844", VA = "0x879844")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x87990C", Offset = "0x87990C", VA = "0x87990C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001166")]
		[Address(RVA = "0x879918", Offset = "0x879918", VA = "0x879918")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x8799E0", Offset = "0x8799E0", VA = "0x8799E0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001168")]
		[Address(RVA = "0x8799EC", Offset = "0x8799EC", VA = "0x8799EC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x879AB4", Offset = "0x879AB4", VA = "0x879AB4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600116A")]
		[Address(RVA = "0x879AC0", Offset = "0x879AC0", VA = "0x879AC0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x879B68", Offset = "0x879B68", VA = "0x879B68", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600116C")]
		[Address(RVA = "0x879B8C", Offset = "0x879B8C", VA = "0x879B8C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x879C28", Offset = "0x879C28", VA = "0x879C28", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600116E")]
		[Address(RVA = "0x879C30", Offset = "0x879C30", VA = "0x879C30")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x879CF4", Offset = "0x879CF4", VA = "0x879CF4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001170")]
		[Address(RVA = "0x879D00", Offset = "0x879D00", VA = "0x879D00")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x879DC4", Offset = "0x879DC4", VA = "0x879DC4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001172")]
		[Address(RVA = "0x879DD4", Offset = "0x879DD4", VA = "0x879DD4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x879E80", Offset = "0x879E80", VA = "0x879E80", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x87819C", Offset = "0x87819C", VA = "0x87819C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200026A")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000A79")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000CA")]
		private IntPtr context
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x879E8C", Offset = "0x879E8C", VA = "0x879E8C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001176")]
		[Address(RVA = "0x877FAC", Offset = "0x877FAC", VA = "0x877FAC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001177")]
		[Address(RVA = "0x879EF0", Offset = "0x879EF0", VA = "0x879EF0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x879F9C", Offset = "0x879F9C", VA = "0x879F9C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001179")]
		[Address(RVA = "0x879FC0", Offset = "0x879FC0", VA = "0x879FC0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x87A06C", Offset = "0x87A06C", VA = "0x87A06C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600117B")]
		[Address(RVA = "0x87A090", Offset = "0x87A090", VA = "0x87A090")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x87A13C", Offset = "0x87A13C", VA = "0x87A13C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600117D")]
		[Address(RVA = "0x87A160", Offset = "0x87A160", VA = "0x87A160")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x87A1FC", Offset = "0x87A1FC", VA = "0x87A1FC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600117F")]
		[Address(RVA = "0x87A204", Offset = "0x87A204", VA = "0x87A204")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x87A32C", Offset = "0x87A32C", VA = "0x87A32C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001181")]
		[Address(RVA = "0x87A424", Offset = "0x87A424", VA = "0x87A424")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x87A4D8", Offset = "0x87A4D8", VA = "0x87A4D8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x87A4E4", Offset = "0x87A4E4", VA = "0x87A4E4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x87A62C", Offset = "0x87A62C", VA = "0x87A62C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001185")]
		[Address(RVA = "0x87A638", Offset = "0x87A638", VA = "0x87A638")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x87A700", Offset = "0x87A700", VA = "0x87A700", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001187")]
		[Address(RVA = "0x87A70C", Offset = "0x87A70C", VA = "0x87A70C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x87A7D4", Offset = "0x87A7D4", VA = "0x87A7D4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001189")]
		[Address(RVA = "0x87A7E0", Offset = "0x87A7E0", VA = "0x87A7E0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x87A8A8", Offset = "0x87A8A8", VA = "0x87A8A8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600118B")]
		[Address(RVA = "0x87A8B4", Offset = "0x87A8B4", VA = "0x87A8B4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x87A960", Offset = "0x87A960", VA = "0x87A960", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600118D")]
		[Address(RVA = "0x87A984", Offset = "0x87A984", VA = "0x87A984")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x87AA20", Offset = "0x87AA20", VA = "0x87AA20", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600118F")]
		[Address(RVA = "0x87AA28", Offset = "0x87AA28", VA = "0x87AA28")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x87AAEC", Offset = "0x87AAEC", VA = "0x87AAEC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001191")]
		[Address(RVA = "0x87AAF8", Offset = "0x87AAF8", VA = "0x87AAF8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x87ABBC", Offset = "0x87ABBC", VA = "0x87ABBC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001193")]
		[Address(RVA = "0x87ABCC", Offset = "0x87ABCC", VA = "0x87ABCC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x87AC78", Offset = "0x87AC78", VA = "0x87AC78", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x878058", Offset = "0x878058", VA = "0x878058")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200026B")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000A7B")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000CB")]
		private IntPtr context
		{
			[Token(Token = "0x6001196")]
			[Address(RVA = "0x8781F8", Offset = "0x8781F8", VA = "0x8781F8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001197")]
		[Address(RVA = "0x8780A4", Offset = "0x8780A4", VA = "0x8780A4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001198")]
		[Address(RVA = "0x87825C", Offset = "0x87825C", VA = "0x87825C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x878308", Offset = "0x878308", VA = "0x878308", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600119A")]
		[Address(RVA = "0x87832C", Offset = "0x87832C", VA = "0x87832C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x8783D8", Offset = "0x8783D8", VA = "0x8783D8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600119C")]
		[Address(RVA = "0x8783FC", Offset = "0x8783FC", VA = "0x8783FC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x8784A8", Offset = "0x8784A8", VA = "0x8784A8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x8784CC", Offset = "0x8784CC", VA = "0x8784CC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x878568", Offset = "0x878568", VA = "0x878568", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x878570", Offset = "0x878570", VA = "0x878570")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x878698", Offset = "0x878698", VA = "0x878698", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x878790", Offset = "0x878790", VA = "0x878790")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x878844", Offset = "0x878844", VA = "0x878844", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x878850", Offset = "0x878850", VA = "0x878850")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x878998", Offset = "0x878998", VA = "0x878998", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x8789A4", Offset = "0x8789A4", VA = "0x8789A4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x878A6C", Offset = "0x878A6C", VA = "0x878A6C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x878A78", Offset = "0x878A78", VA = "0x878A78")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x878B40", Offset = "0x878B40", VA = "0x878B40", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x878B4C", Offset = "0x878B4C", VA = "0x878B4C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x878C14", Offset = "0x878C14", VA = "0x878C14", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x878C20", Offset = "0x878C20", VA = "0x878C20")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x878CCC", Offset = "0x878CCC", VA = "0x878CCC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x878CF0", Offset = "0x878CF0", VA = "0x878CF0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x878D8C", Offset = "0x878D8C", VA = "0x878D8C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x878D94", Offset = "0x878D94", VA = "0x878D94")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x878E58", Offset = "0x878E58", VA = "0x878E58", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x878E64", Offset = "0x878E64", VA = "0x878E64")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x878F28", Offset = "0x878F28", VA = "0x878F28", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x878F38", Offset = "0x878F38", VA = "0x878F38")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x878FE4", Offset = "0x878FE4", VA = "0x878FE4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x878150", Offset = "0x878150", VA = "0x878150")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000020")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x877D0C", Offset = "0x877D0C", VA = "0x877D0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x877D7C", Offset = "0x877D7C", VA = "0x877D7C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x8781E8", Offset = "0x8781E8", VA = "0x8781E8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200004D")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200026C")]
	public enum Preset
	{
		[Token(Token = "0x4000A7E")]
		Custom,
		[Token(Token = "0x4000A7F")]
		AcousticTile,
		[Token(Token = "0x4000A80")]
		Brick,
		[Token(Token = "0x4000A81")]
		BrickPainted,
		[Token(Token = "0x4000A82")]
		Carpet,
		[Token(Token = "0x4000A83")]
		CarpetHeavy,
		[Token(Token = "0x4000A84")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000A85")]
		CeramicTile,
		[Token(Token = "0x4000A86")]
		Concrete,
		[Token(Token = "0x4000A87")]
		ConcreteRough,
		[Token(Token = "0x4000A88")]
		ConcreteBlock,
		[Token(Token = "0x4000A89")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000A8A")]
		Curtain,
		[Token(Token = "0x4000A8B")]
		Foliage,
		[Token(Token = "0x4000A8C")]
		Glass,
		[Token(Token = "0x4000A8D")]
		GlassHeavy,
		[Token(Token = "0x4000A8E")]
		Grass,
		[Token(Token = "0x4000A8F")]
		Gravel,
		[Token(Token = "0x4000A90")]
		GypsumBoard,
		[Token(Token = "0x4000A91")]
		PlasterOnBrick,
		[Token(Token = "0x4000A92")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000A93")]
		Soil,
		[Token(Token = "0x4000A94")]
		SoundProof,
		[Token(Token = "0x4000A95")]
		Snow,
		[Token(Token = "0x4000A96")]
		Steel,
		[Token(Token = "0x4000A97")]
		Water,
		[Token(Token = "0x4000A98")]
		WoodThin,
		[Token(Token = "0x4000A99")]
		WoodThick,
		[Token(Token = "0x4000A9A")]
		WoodFloor,
		[Token(Token = "0x4000A9B")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200026D")]
	public sealed class Point
	{
		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x643370", Offset = "0x643370", VA = "0x643370")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x6433A8", Offset = "0x6433A8", VA = "0x6433A8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x643418", Offset = "0x643418", VA = "0x643418")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x4CBE84", Offset = "0x4CBE84")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC1F8", Offset = "0x4CC1F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x643980", Offset = "0x643980", VA = "0x643980")]
			public <>c()
			{
			}

			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x643988", Offset = "0x643988", VA = "0x643988")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x6439B4", Offset = "0x6439B4", VA = "0x6439B4")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170000CC")]
		public float Item
		{
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x643480", Offset = "0x643480", VA = "0x643480")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x6438A4", Offset = "0x6438A4", VA = "0x6438A4")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD7A4", Offset = "0x4CD7A4")]
	public Spectrum absorption;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD7DC", Offset = "0x4CD7DC")]
	public Spectrum transmission;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4CD814", Offset = "0x4CD814")]
	public Spectrum scattering;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000021")]
	public Preset preset
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x87ED9C", Offset = "0x87ED9C", VA = "0x87ED9C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x87EDA4", Offset = "0x87EDA4", VA = "0x87EDA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x87EDCC", Offset = "0x87EDCC", VA = "0x87EDCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x87E6DC", Offset = "0x87E6DC", VA = "0x87E6DC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x87F4A8", Offset = "0x87F4A8", VA = "0x87F4A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x87F4AC", Offset = "0x87F4AC", VA = "0x87F4AC")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x87EDD0", Offset = "0x87EDD0", VA = "0x87EDD0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x87DD98", Offset = "0x87DD98", VA = "0x87DD98")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x87F590", Offset = "0x87F590", VA = "0x87F590")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x87FB28", Offset = "0x87FB28", VA = "0x87FB28")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x8800C4", Offset = "0x8800C4", VA = "0x8800C4")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x88065C", Offset = "0x88065C", VA = "0x88065C")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x880C08", Offset = "0x880C08", VA = "0x880C08")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x8811A0", Offset = "0x8811A0", VA = "0x8811A0")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x881738", Offset = "0x881738", VA = "0x881738")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x881CD8", Offset = "0x881CD8", VA = "0x881CD8")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x882278", Offset = "0x882278", VA = "0x882278")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x88281C", Offset = "0x88281C", VA = "0x88281C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x882DBC", Offset = "0x882DBC", VA = "0x882DBC")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x883364", Offset = "0x883364", VA = "0x883364")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x8838FC", Offset = "0x8838FC", VA = "0x8838FC")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x883EA0", Offset = "0x883EA0", VA = "0x883EA0")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x884428", Offset = "0x884428", VA = "0x884428")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x8849BC", Offset = "0x8849BC", VA = "0x8849BC")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x884DF8", Offset = "0x884DF8", VA = "0x884DF8")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x88522C", Offset = "0x88522C", VA = "0x88522C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x8857D4", Offset = "0x8857D4", VA = "0x8857D4")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x885D78", Offset = "0x885D78", VA = "0x885D78")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x886314", Offset = "0x886314", VA = "0x886314")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x886754", Offset = "0x886754", VA = "0x886754")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x8868F4", Offset = "0x8868F4", VA = "0x8868F4")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x886D24", Offset = "0x886D24", VA = "0x886D24")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x8872AC", Offset = "0x8872AC", VA = "0x8872AC")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x88784C", Offset = "0x88784C", VA = "0x88784C")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x887DDC", Offset = "0x887DDC", VA = "0x887DDC")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x888374", Offset = "0x888374", VA = "0x888374")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x888914", Offset = "0x888914", VA = "0x888914")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x888EB0", Offset = "0x888EB0", VA = "0x888EB0")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200004E")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x6439E0", Offset = "0x6439E0", VA = "0x6439E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x643AB4", Offset = "0x643AB4", VA = "0x643AB4")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200004F")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000022")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x6440EC", Offset = "0x6440EC", VA = "0x6440EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x644200", Offset = "0x644200", VA = "0x644200")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000050")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000190")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600025E")]
	[Address(RVA = "0x644210", Offset = "0x644210", VA = "0x644210")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x6442C4", Offset = "0x6442C4", VA = "0x6442C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x6443D0", Offset = "0x6443D0", VA = "0x6443D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x6443D4", Offset = "0x6443D4", VA = "0x6443D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x6443D8", Offset = "0x6443D8", VA = "0x6443D8")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000051")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000023")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x64F2F8", Offset = "0x64F2F8", VA = "0x64F2F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x64F5D4", Offset = "0x64F5D4", VA = "0x64F5D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x64F710", Offset = "0x64F710", VA = "0x64F710")]
	private void Update()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x64F644", Offset = "0x64F644", VA = "0x64F644")]
	public void Init()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x64F818", Offset = "0x64F818", VA = "0x64F818")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x64F9D0", Offset = "0x64F9D0", VA = "0x64F9D0")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x64F7A8", Offset = "0x64F7A8", VA = "0x64F7A8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x64FABC", Offset = "0x64FABC", VA = "0x64FABC")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x64F8CC", Offset = "0x64F8CC", VA = "0x64F8CC")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x64FA78", Offset = "0x64FA78", VA = "0x64FA78")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x64FB40", Offset = "0x64FB40", VA = "0x64FB40")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x64FDC0", Offset = "0x64FDC0", VA = "0x64FDC0")]
	private void Prune()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x64FB50", Offset = "0x64FB50", VA = "0x64FB50")]
	private void Display()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x64FEA0", Offset = "0x64FEA0", VA = "0x64FEA0")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x2000052")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x200026F")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x4000AA1")]
		Unknown = -2250,
		[Token(Token = "0x4000AA2")]
		CannotCreateContext = -2251,
		[Token(Token = "0x4000AA3")]
		InvalidParam = -2252,
		[Token(Token = "0x4000AA4")]
		BadSampleRate = -2253,
		[Token(Token = "0x4000AA5")]
		MissingDLL = -2254,
		[Token(Token = "0x4000AA6")]
		BadVersion = -2255,
		[Token(Token = "0x4000AA7")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x2000270")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x4000AA9")]
		None
	}

	[Token(Token = "0x4000197")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x4000198")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000272")]
	[Address(RVA = "0x65A748", Offset = "0x65A748", VA = "0x65A748")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000273")]
	[Address(RVA = "0x65A7F4", Offset = "0x65A7F4", VA = "0x65A7F4")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000274")]
	[Address(RVA = "0x65A880", Offset = "0x65A880", VA = "0x65A880")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000275")]
	[Address(RVA = "0x65A934", Offset = "0x65A934", VA = "0x65A934")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x6000276")]
	[Address(RVA = "0x65A9D0", Offset = "0x65A9D0", VA = "0x65A9D0")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x6000277")]
	[Address(RVA = "0x65AA6C", Offset = "0x65AA6C", VA = "0x65AA6C")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x6000278")]
	[Address(RVA = "0x65AB20", Offset = "0x65AB20", VA = "0x65AB20")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x6000279")]
	[Address(RVA = "0x65ABDC", Offset = "0x65ABDC", VA = "0x65ABDC")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600027A")]
	[Address(RVA = "0x65AC98", Offset = "0x65AC98", VA = "0x65AC98")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x65AD44", Offset = "0x65AD44", VA = "0x65AD44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x65AFE0", Offset = "0x65AFE0", VA = "0x65AFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x65AFE4", Offset = "0x65AFE4", VA = "0x65AFE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x65AFE8", Offset = "0x65AFE8", VA = "0x65AFE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x65B0F4", Offset = "0x65B0F4", VA = "0x65B0F4")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x65B15C", Offset = "0x65B15C", VA = "0x65B15C")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x65B1F0", Offset = "0x65B1F0", VA = "0x65B1F0")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x65B284", Offset = "0x65B284", VA = "0x65B284")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x65B334", Offset = "0x65B334", VA = "0x65B334")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x65B3E0", Offset = "0x65B3E0", VA = "0x65B3E0")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x65B48C", Offset = "0x65B48C", VA = "0x65B48C")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x65B530", Offset = "0x65B530", VA = "0x65B530")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x2000053")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4CBB90", Offset = "0x4CBB90")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x4000AAB")]
		MixInputAudio,
		[Token(Token = "0x4000AAC")]
		PitchInputAudio,
		[Token(Token = "0x4000AAD")]
		SetBands,
		[Token(Token = "0x4000AAE")]
		FormantCorrection,
		[Token(Token = "0x4000AAF")]
		Carrier1_TrackPitch,
		[Token(Token = "0x4000AB0")]
		Carrier1_Type,
		[Token(Token = "0x4000AB1")]
		Carrier1_Gain,
		[Token(Token = "0x4000AB2")]
		Carrier1_Frequency,
		[Token(Token = "0x4000AB3")]
		Carrier1_Note,
		[Token(Token = "0x4000AB4")]
		Carrier1_PulseWidth,
		[Token(Token = "0x4000AB5")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x4000AB6")]
		Carrier2_TrackPitch,
		[Token(Token = "0x4000AB7")]
		Carrier2_Type,
		[Token(Token = "0x4000AB8")]
		Carrier2_Gain,
		[Token(Token = "0x4000AB9")]
		Carrier2_Frequency,
		[Token(Token = "0x4000ABA")]
		Carrier2_Note,
		[Token(Token = "0x4000ABB")]
		Carrier2_PulseWidth,
		[Token(Token = "0x4000ABC")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x4000ABD")]
		Count
	}

	[Token(Token = "0x2000272")]
	public struct VMPreset
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x65B598", Offset = "0x65B598", VA = "0x65B598")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x65B658", Offset = "0x65B658", VA = "0x65B658")]
	private void Start()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x65BBF4", Offset = "0x65BBF4", VA = "0x65BBF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x65BE54", Offset = "0x65BE54", VA = "0x65BE54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x65BF78", Offset = "0x65BF78", VA = "0x65BF78")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x65C1B8", Offset = "0x65C1B8", VA = "0x65C1B8")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x65C26C", Offset = "0x65C26C", VA = "0x65C26C")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x65C790", Offset = "0x65C790", VA = "0x65C790")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x65C7BC", Offset = "0x65C7BC", VA = "0x65C7BC")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x65C858", Offset = "0x65C858", VA = "0x65C858")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x65C8FC", Offset = "0x65C8FC", VA = "0x65C8FC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x65BDB8", Offset = "0x65BDB8", VA = "0x65BDB8")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x65B840", Offset = "0x65B840", VA = "0x65B840")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x65C9DC", Offset = "0x65C9DC", VA = "0x65C9DC")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x2000054")]
public class AppEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000296")]
	[Address(RVA = "0x84B4F8", Offset = "0x84B4F8", VA = "0x84B4F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x84B68C", Offset = "0x84B68C", VA = "0x84B68C")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x84B754", Offset = "0x84B754", VA = "0x84B754")]
	public AppEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000055")]
public class BattleEffectAnimationEvent : CommonBehaviour
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject camera;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip swordSE;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip swordCriticalSE;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip magicSE;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip fireballSE;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip blackHoleSE;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip enemyFireSE;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip recoverySE;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip lightningSE;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip frozenSE;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip barrierSE;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip knightPowerSE;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip shockWaveSE;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystem smallFire;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ParticleSystem blackFire;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ParticleSystem smallCure;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem smallGreen;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private ParticleSystem smallWhite;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private ParticleSystem smallBuff;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private ParticleSystem enemyCure;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AudioSource audioSource;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x84C708", Offset = "0x84C708", VA = "0x84C708")]
	private void Start()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x84C778", Offset = "0x84C778", VA = "0x84C778")]
	public void PlayMagicSE()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x84C7FC", Offset = "0x84C7FC", VA = "0x84C7FC")]
	public void PlayShockWaveSE()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x84C804", Offset = "0x84C804", VA = "0x84C804")]
	public void PlayKnightPowerSE()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x84C80C", Offset = "0x84C80C", VA = "0x84C80C")]
	public void PlayBarrierSE()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x84C814", Offset = "0x84C814", VA = "0x84C814")]
	private void StartSmallFire()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x84C844", Offset = "0x84C844", VA = "0x84C844")]
	private void StartBlackFire()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x84C874", Offset = "0x84C874", VA = "0x84C874")]
	private void PlayFireballSE()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x84C87C", Offset = "0x84C87C", VA = "0x84C87C")]
	private void PlayBlackHoleSE()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x84C884", Offset = "0x84C884", VA = "0x84C884")]
	private void StopSmallFire()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x84C8B4", Offset = "0x84C8B4", VA = "0x84C8B4")]
	private void StopBlackFire()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x84C8E4", Offset = "0x84C8E4", VA = "0x84C8E4")]
	private void StartSmallCure()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x84C920", Offset = "0x84C920", VA = "0x84C920")]
	private void StopSmallCure()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x84C950", Offset = "0x84C950", VA = "0x84C950")]
	private void StartSmallGreen()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x84C98C", Offset = "0x84C98C", VA = "0x84C98C")]
	private void StopSmallGreen()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x84C9BC", Offset = "0x84C9BC", VA = "0x84C9BC")]
	private void StartSmallWhite()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x84C9F8", Offset = "0x84C9F8", VA = "0x84C9F8")]
	private void StopSmallWhite()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x84CA28", Offset = "0x84CA28", VA = "0x84CA28")]
	private void StartSmallEnemyBuff()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x84CA64", Offset = "0x84CA64", VA = "0x84CA64")]
	private void StopSmallEnemyBuff()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x84CA94", Offset = "0x84CA94", VA = "0x84CA94")]
	private void StartEnemyCure()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x84CAD0", Offset = "0x84CAD0", VA = "0x84CAD0")]
	private void StopEnemyCure()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x84CB00", Offset = "0x84CB00", VA = "0x84CB00")]
	private void PlayEnemyFireSE()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x84CB08", Offset = "0x84CB08", VA = "0x84CB08")]
	private void PlaySwordSE()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x84CB90", Offset = "0x84CB90", VA = "0x84CB90")]
	private void PlayLightningSE()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x84CB98", Offset = "0x84CB98", VA = "0x84CB98")]
	private void PlaySwordCriticalSE()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x84CC20", Offset = "0x84CC20", VA = "0x84CC20")]
	private void PlayFrozenSEWithFlash()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x84CC28", Offset = "0x84CC28", VA = "0x84CC28")]
	private void Flash()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x84C780", Offset = "0x84C780", VA = "0x84C780")]
	private void PlaySE(AudioClip clip)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x84CCA0", Offset = "0x84CCA0", VA = "0x84CCA0")]
	public void SetActiveFalse()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x84CCD8", Offset = "0x84CCD8", VA = "0x84CCD8")]
	public BattleEffectAnimationEvent()
	{
	}
}
[Token(Token = "0x2000056")]
public class BattleFlagManager : MonoBehaviour
{
	[Token(Token = "0x2000273")]
	public enum ENCOUNT_TYPE
	{
		[Token(Token = "0x4000AD3")]
		CASTLE_AREA,
		[Token(Token = "0x4000AD4")]
		TEMPLE_VALLEY,
		[Token(Token = "0x4000AD5")]
		VALLEY_TO_CAVE,
		[Token(Token = "0x4000AD6")]
		BOSS_FIRST_TOWN,
		[Token(Token = "0x4000AD7")]
		FIRST_VALLEY,
		[Token(Token = "0x4000AD8")]
		FIRST_CAVE,
		[Token(Token = "0x4000AD9")]
		BOSS_FIRST_CAVE,
		[Token(Token = "0x4000ADA")]
		CAVE_TO_SNOW,
		[Token(Token = "0x4000ADB")]
		SNOW_AREA,
		[Token(Token = "0x4000ADC")]
		ICE_CAVE,
		[Token(Token = "0x4000ADD")]
		BOSS_ICE_CAVE,
		[Token(Token = "0x4000ADE")]
		EVIL_AREA,
		[Token(Token = "0x4000ADF")]
		EVIL_CASTLE,
		[Token(Token = "0x4000AE0")]
		BOSS_EVIL_KING,
		[Token(Token = "0x4000AE1")]
		BOSS_EVIL_KING_TRANSFORMED,
		[Token(Token = "0x4000AE2")]
		BOSS_MYLON_LEE
	}

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ENCOUNT_TYPE currentEncountType;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x84CCE8", Offset = "0x84CCE8", VA = "0x84CCE8")]
	public BattleFlagManager()
	{
	}
}
[Token(Token = "0x2000057")]
public class BattleManager : MessageEventBase
{
	[Token(Token = "0x2000274")]
	public enum PlayerAction
	{
		[Token(Token = "0x4000AE4")]
		Sword,
		[Token(Token = "0x4000AE5")]
		Magic,
		[Token(Token = "0x4000AE6")]
		Item,
		[Token(Token = "0x4000AE7")]
		Flee,
		[Token(Token = "0x4000AE8")]
		NoMagic,
		[Token(Token = "0x4000AE9")]
		ShortageMP,
		[Token(Token = "0x4000AEA")]
		NoItem,
		[Token(Token = "0x4000AEB")]
		NotUse,
		[Token(Token = "0x4000AEC")]
		Stunned,
		[Token(Token = "0x4000AED")]
		None
	}

	[Token(Token = "0x2000275")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000AEF")]
		ShowBattleMenu,
		[Token(Token = "0x4000AF0")]
		DidPlayerAttack,
		[Token(Token = "0x4000AF1")]
		CheckPlayerKilled,
		[Token(Token = "0x4000AF2")]
		PlayerKilled,
		[Token(Token = "0x4000AF3")]
		CheckEnemyKilled,
		[Token(Token = "0x4000AF4")]
		CheckLvUp,
		[Token(Token = "0x4000AF5")]
		DidEnemyAttack,
		[Token(Token = "0x4000AF6")]
		Transported
	}

	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBEBC", Offset = "0x4CBEBC")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleManager <>4__this;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isAttack;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waitToMessage;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitToMessage2;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool transported;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string message2;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__14;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action <>9__13;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x856A08", Offset = "0x856A08", VA = "0x856A08")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x85B484", Offset = "0x85B484", VA = "0x85B484")]
		internal void <ExecAction>b__6()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x85B518", Offset = "0x85B518", VA = "0x85B518")]
		internal void <ExecAction>b__7()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x85B5AC", Offset = "0x85B5AC", VA = "0x85B5AC")]
		internal void <ExecAction>b__12()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x85B640", Offset = "0x85B640", VA = "0x85B640")]
		internal void <ExecAction>b__8()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x85B680", Offset = "0x85B680", VA = "0x85B680")]
		internal void <ExecAction>b__9()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x85B6C0", Offset = "0x85B6C0", VA = "0x85B6C0")]
		internal void <ExecAction>b__10()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x85B700", Offset = "0x85B700", VA = "0x85B700")]
		internal void <ExecAction>b__11()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x85B794", Offset = "0x85B794", VA = "0x85B794")]
		internal void <ExecAction>b__1()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x85B7D4", Offset = "0x85B7D4", VA = "0x85B7D4")]
		internal void <ExecAction>b__2()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x85B814", Offset = "0x85B814", VA = "0x85B814")]
		internal void <ExecAction>b__3()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x85B854", Offset = "0x85B854", VA = "0x85B854")]
		internal void <ExecAction>b__4()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x85B894", Offset = "0x85B894", VA = "0x85B894")]
		internal void <ExecAction>b__5()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x85B928", Offset = "0x85B928", VA = "0x85B928")]
		internal void <ExecAction>b__0()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x85BB44", Offset = "0x85BB44", VA = "0x85BB44")]
		internal void <ExecAction>b__13()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x85BC3C", Offset = "0x85BC3C", VA = "0x85BC3C")]
		internal void <ExecAction>b__14()
		{
		}
	}

	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBECC", Offset = "0x4CBECC")]
	private sealed class <>c__DisplayClass58_0
	{
		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleManager <>4__this;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message2;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message1;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float twoMessageDuration;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int damage;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool willPoisoned;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__5;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x858C40", Offset = "0x858C40", VA = "0x858C40")]
		public <>c__DisplayClass58_0()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x85BCE0", Offset = "0x85BCE0", VA = "0x85BCE0")]
		internal void <ReceiveDamageEffect>b__1()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x85BD28", Offset = "0x85BD28", VA = "0x85BD28")]
		internal void <ReceiveDamageEffect>b__2()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x85BDBC", Offset = "0x85BDBC", VA = "0x85BDBC")]
		internal void <ReceiveDamageEffect>b__3()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x85BE50", Offset = "0x85BE50", VA = "0x85BE50")]
		internal void <ReceiveDamageEffect>b__4()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x85BEE4", Offset = "0x85BEE4", VA = "0x85BEE4")]
		internal void <ReceiveDamageEffect>b__0()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x85C07C", Offset = "0x85C07C", VA = "0x85C07C")]
		internal void <ReceiveDamageEffect>b__5()
		{
		}
	}

	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBEDC", Offset = "0x4CBEDC")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Magic? magic;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BattleManager <>4__this;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string message;

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x859B9C", Offset = "0x859B9C", VA = "0x859B9C")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x85C52C", Offset = "0x85C52C", VA = "0x85C52C")]
		internal void <LvUp>b__0()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBEEC", Offset = "0x4CBEEC")]
	private sealed class <>c__DisplayClass67_0
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleManager <>4__this;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string shieldShortMessage;

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x859DD8", Offset = "0x859DD8", VA = "0x859DD8")]
		public <>c__DisplayClass67_0()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x85C60C", Offset = "0x85C60C", VA = "0x85C60C")]
		internal void <CheckPoisonDamageBeforeEndTurn>b__0()
		{
		}
	}

	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBEFC", Offset = "0x4CBEFC")]
	private sealed class <>c__DisplayClass67_1
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int damage;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass67_0 CS$<>8__locals1;

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x85C7B4", Offset = "0x85C7B4", VA = "0x85C7B4")]
		public <>c__DisplayClass67_1()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x85C7BC", Offset = "0x85C7BC", VA = "0x85C7BC")]
		internal void <CheckPoisonDamageBeforeEndTurn>b__1()
		{
		}
	}

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject battleEffect;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject enemyObject;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Enemy enemy;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private StatusManager statusManager;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private BattleItemMenuManager battleItemMenuManager;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private BattleMagicMenuManager battleMagicMenuManager;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private BattleMenuManager battleMenuManager;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private AudioClip normalBattleAudioClip;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private AudioClip bossBattleAudioClip;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private AudioClip lastBattleAudioClip;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private AudioClip winnerAudioClip;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private AudioClip lastWinnerAudioClip;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private AudioClip escapeAudioClip;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private AudioClip levelUpSE;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private AudioClip debuffSE;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AudioSource audioSource;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool isBoss;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private PlayerAction actionSelected;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool isPlayerAttackFirst;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private EnemyAttack currentEnemyAttack;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool isEnemyPrepared;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int fleeCount;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int DEFAULT_SHIELD_TURN;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private int remainedPlayerShields;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int remainedPlayerResistShields;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private int remainedEnemyShields;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int remainedEnemyResistShields;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int DEFAULT_POWER_TURN;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private int remainedPlayerKnightPower;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool isPlayerStunned;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private string MonsterPath;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x84E9CC", Offset = "0x84E9CC", VA = "0x84E9CC")]
	public new void Start()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x84EC54", Offset = "0x84EC54", VA = "0x84EC54")]
	public new void Update()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x84F360", Offset = "0x84F360", VA = "0x84F360")]
	private void Progress()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x84F3CC", Offset = "0x84F3CC", VA = "0x84F3CC", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x84EF14", Offset = "0x84EF14", VA = "0x84EF14")]
	private void Select()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x84F304", Offset = "0x84F304", VA = "0x84F304")]
	private void ChangeOption(bool isUp)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x84F0E8", Offset = "0x84F0E8", VA = "0x84F0E8")]
	private void Decide()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x84F9D4", Offset = "0x84F9D4", VA = "0x84F9D4")]
	private void DecideFight()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x84FB04", Offset = "0x84FB04", VA = "0x84FB04")]
	private void DecideAction(PlayerAction action)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x850008", Offset = "0x850008", VA = "0x850008")]
	private void NoItemAction()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x850140", Offset = "0x850140", VA = "0x850140")]
	private void NotUseAction()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x84FE10", Offset = "0x84FE10", VA = "0x84FE10")]
	private void NoMagicAction()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x84FF48", Offset = "0x84FF48", VA = "0x84FF48")]
	private void ShortageMPAction()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x8504B4", Offset = "0x8504B4", VA = "0x8504B4")]
	private void CannotFlee()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x850414", Offset = "0x850414", VA = "0x850414")]
	private void DisabledAction(string message)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x850310", Offset = "0x850310", VA = "0x850310")]
	private bool CalcQuick(int playerQuick, int enemyQuick)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x850574", Offset = "0x850574", VA = "0x850574")]
	private void PlayerAttack()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x84F798", Offset = "0x84F798", VA = "0x84F798")]
	private void DidPlayerAttack()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x84F6CC", Offset = "0x84F6CC", VA = "0x84F6CC")]
	private void CheckEnemyKilled()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x855E9C", Offset = "0x855E9C", VA = "0x855E9C")]
	private void DoEnemyAttack()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x84F7BC", Offset = "0x84F7BC", VA = "0x84F7BC")]
	private void DidEnemyAttack()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x84F4AC", Offset = "0x84F4AC", VA = "0x84F4AC")]
	private void CheckPlayerKilled()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x850C10", Offset = "0x850C10", VA = "0x850C10")]
	private void ExecAction()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x85677C", Offset = "0x85677C", VA = "0x85677C")]
	private void ReceiveDamage()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x856B44", Offset = "0x856B44", VA = "0x856B44")]
	private void ReceiveDamageEffect(int damage)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x856A10", Offset = "0x856A10", VA = "0x856A10")]
	private int CalcDamage(int attack, int defense)
	{
		return default(int);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x84F54C", Offset = "0x84F54C", VA = "0x84F54C")]
	private void PlayerKilled()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x856584", Offset = "0x856584", VA = "0x856584")]
	private void EnemyKilled()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x858EDC", Offset = "0x858EDC", VA = "0x858EDC")]
	private void TakeReward()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x84F6EC", Offset = "0x84F6EC", VA = "0x84F6EC")]
	private void CheckLvUp()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x84F7E0", Offset = "0x84F7E0", VA = "0x84F7E0")]
	private void Transported()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x8594FC", Offset = "0x8594FC", VA = "0x8594FC")]
	private void LvUp()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x859C0C", Offset = "0x859C0C", VA = "0x859C0C")]
	private void LearnNewMagic(Magic magic, string message)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x8560AC", Offset = "0x8560AC", VA = "0x8560AC")]
	private void CheckPoisonDamageBeforeEndTurn()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x859DE0", Offset = "0x859DE0", VA = "0x859DE0")]
	private int CalcPoisonDamage()
	{
		return default(int);
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x84F4A0", Offset = "0x84F4A0", VA = "0x84F4A0")]
	private void EndTurn()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x859F28", Offset = "0x859F28", VA = "0x859F28")]
	private bool CanFlee()
	{
		return default(bool);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x84FDB8", Offset = "0x84FDB8", VA = "0x84FDB8")]
	private void DecideFlee()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x85A02C", Offset = "0x85A02C", VA = "0x85A02C")]
	private void WillFlee()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x859E84", Offset = "0x859E84", VA = "0x859E84")]
	private void ShowBattleMenu()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x850358", Offset = "0x850358", VA = "0x850358")]
	private void HideBattleMenu()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x84EB3C", Offset = "0x84EB3C", VA = "0x84EB3C")]
	private void BeginBattle()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x85A3F0", Offset = "0x85A3F0", VA = "0x85A3F0")]
	private void LoadMonster()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x85AB24", Offset = "0x85AB24", VA = "0x85AB24")]
	private void AdjustBattleEffect()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x85A594", Offset = "0x85A594", VA = "0x85A594")]
	private void LoadTrialMonster()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x85A63C", Offset = "0x85A63C", VA = "0x85A63C")]
	private void LoadCastleAreaMonster()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x85A6B0", Offset = "0x85A6B0", VA = "0x85A6B0")]
	private void LoadTempleValleyMonster()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x85A724", Offset = "0x85A724", VA = "0x85A724")]
	private void LoadValleyToCaveMonster()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x85A7A8", Offset = "0x85A7A8", VA = "0x85A7A8")]
	private void LoadFirstValleyMonster()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x85A81C", Offset = "0x85A81C", VA = "0x85A81C")]
	private void LoadFirstCaveMonster()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x85A8A0", Offset = "0x85A8A0", VA = "0x85A8A0")]
	private void LoadCaveToSnowMonster()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x85A914", Offset = "0x85A914", VA = "0x85A914")]
	private void LoadSnowAreaMonster()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x85A988", Offset = "0x85A988", VA = "0x85A988")]
	private void LoadIceCaveMonster()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x85AA0C", Offset = "0x85AA0C", VA = "0x85AA0C")]
	private void LoadEvilValleyMonster()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x85AA80", Offset = "0x85AA80", VA = "0x85AA80")]
	private void LoadEvilCastleMonster()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x85B034", Offset = "0x85B034", VA = "0x85B034")]
	private void LoadMonsterFromEnemyIds(Enemy.EnemyId[] enemyIds)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x85A798", Offset = "0x85A798", VA = "0x85A798")]
	private void LoadBossFirstTown()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x85A890", Offset = "0x85A890", VA = "0x85A890")]
	private void LoadBossFirstCave()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x85A9FC", Offset = "0x85A9FC", VA = "0x85A9FC")]
	private void LoadBossIceCave()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x85AAF4", Offset = "0x85AAF4", VA = "0x85AAF4")]
	private void LoadBossEvilKing()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x85AB04", Offset = "0x85AB04", VA = "0x85AB04")]
	private void LoadBossEvilKingTransformed()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x85AB14", Offset = "0x85AB14", VA = "0x85AB14")]
	private void LoadBossMylonLee()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x85AC60", Offset = "0x85AC60", VA = "0x85AC60")]
	private void InstantiateMonster(Enemy.EnemyId enemyId)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x858C48", Offset = "0x858C48", VA = "0x858C48")]
	private new void UpdateMessage(string message)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x850B98", Offset = "0x850B98", VA = "0x850B98")]
	private new void HideMessageView()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x859BDC", Offset = "0x859BDC", VA = "0x859BDC")]
	private void UpdateStatus()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x859B6C", Offset = "0x859B6C", VA = "0x859B6C")]
	private void EndBattle()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x85B224", Offset = "0x85B224", VA = "0x85B224")]
	private void DeadBattle()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x858D04", Offset = "0x858D04", VA = "0x858D04")]
	private void DoneFlagIfNeeded()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x858E7C", Offset = "0x858E7C", VA = "0x858E7C")]
	public void PlayBGM(AudioClip clip)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x859BA4", Offset = "0x859BA4", VA = "0x859BA4")]
	private void PlayOneShotSE(AudioClip clip)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x85B2B0", Offset = "0x85B2B0", VA = "0x85B2B0")]
	public void StopBGM()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x85B2E0", Offset = "0x85B2E0", VA = "0x85B2E0")]
	public BattleManager()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x85B350", Offset = "0x85B350", VA = "0x85B350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D36FC", Offset = "0x4D36FC")]
	private void <DecideAction>b__42_0()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x85B360", Offset = "0x85B360", VA = "0x85B360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D370C", Offset = "0x4D370C")]
	private void <PlayerKilled>b__60_0()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x85B364", Offset = "0x85B364", VA = "0x85B364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D371C", Offset = "0x4D371C")]
	private void <EnemyKilled>b__61_0()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x85B368", Offset = "0x85B368", VA = "0x85B368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D372C", Offset = "0x4D372C")]
	private void <EnemyKilled>b__61_1()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x85B36C", Offset = "0x85B36C", VA = "0x85B36C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D373C", Offset = "0x4D373C")]
	private void <Transported>b__64_0()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x85B370", Offset = "0x85B370", VA = "0x85B370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D374C", Offset = "0x4D374C")]
	private void <LearnNewMagic>b__66_0()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x85B374", Offset = "0x85B374", VA = "0x85B374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D375C", Offset = "0x4D375C")]
	private void <WillFlee>b__72_0()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x85B378", Offset = "0x85B378", VA = "0x85B378")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D376C", Offset = "0x4D376C")]
	private void <BeginBattle>b__75_0()
	{
	}
}
[Token(Token = "0x2000058")]
public class BeginEncount : MonoBehaviour
{
	[Token(Token = "0x600030A")]
	[Address(RVA = "0x85E2FC", Offset = "0x85E2FC", VA = "0x85E2FC")]
	public BeginEncount()
	{
	}
}
[Token(Token = "0x2000059")]
public class EncountManager : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int encountValue;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x76CD74", Offset = "0x76CD74", VA = "0x76CD74")]
	public void Encount()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x76D0E4", Offset = "0x76D0E4", VA = "0x76D0E4")]
	public void InitEncountValue()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x76D230", Offset = "0x76D230", VA = "0x76D230")]
	private int EncountRandom()
	{
		return default(int);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x76CFE0", Offset = "0x76CFE0", VA = "0x76CFE0")]
	public void BeginBattle()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x76D2C0", Offset = "0x76D2C0", VA = "0x76D2C0")]
	public void BeginEncount()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x76D338", Offset = "0x76D338", VA = "0x76D338")]
	public void EndEncount()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x76D3A0", Offset = "0x76D3A0", VA = "0x76D3A0")]
	public EncountManager()
	{
	}
}
[Token(Token = "0x200005A")]
public class EndEncount : MonoBehaviour
{
	[Token(Token = "0x6000313")]
	[Address(RVA = "0x76D3FC", Offset = "0x76D3FC", VA = "0x76D3FC")]
	public EndEncount()
	{
	}
}
[Token(Token = "0x200005B")]
public struct EnemyAttack
{
	[Token(Token = "0x200027B")]
	public enum AttackId
	{
		[Token(Token = "0x4000B0F")]
		Attack1 = 0,
		[Token(Token = "0x4000B10")]
		Attack2 = 11,
		[Token(Token = "0x4000B11")]
		AttackToDrainMP = 20,
		[Token(Token = "0x4000B12")]
		Critical = 1,
		[Token(Token = "0x4000B13")]
		Heal = 3,
		[Token(Token = "0x4000B14")]
		Healest = 4,
		[Token(Token = "0x4000B15")]
		FireBress = 5,
		[Token(Token = "0x4000B16")]
		IceBress = 6,
		[Token(Token = "0x4000B17")]
		BlackBress = 7,
		[Token(Token = "0x4000B18")]
		PoisonBress = 22,
		[Token(Token = "0x4000B19")]
		Fire = 2,
		[Token(Token = "0x4000B1A")]
		Fire2 = 23,
		[Token(Token = "0x4000B1B")]
		Frozen = 8,
		[Token(Token = "0x4000B1C")]
		BlackFire = 15,
		[Token(Token = "0x4000B1D")]
		BlackLightning = 16,
		[Token(Token = "0x4000B1E")]
		DeathAttack = 9,
		[Token(Token = "0x4000B1F")]
		PoisonAttack = 10,
		[Token(Token = "0x4000B20")]
		PoisonAttack2 = 13,
		[Token(Token = "0x4000B21")]
		Prepare = 12,
		[Token(Token = "0x4000B22")]
		BreakShield = 14,
		[Token(Token = "0x4000B23")]
		Shield = 17,
		[Token(Token = "0x4000B24")]
		ResistBarrier = 18,
		[Token(Token = "0x4000B25")]
		Earthquake = 19,
		[Token(Token = "0x4000B26")]
		ShockWave = 21
	}

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AttackId id;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string desc;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int val;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool forPrepare;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x52E33C", Offset = "0x52E33C", VA = "0x52E33C")]
	public EnemyAttack(AttackId id, string desc, int val, bool forPrepare)
	{
	}
}
[Token(Token = "0x200005C")]
public struct Enemy
{
	[Token(Token = "0x200027C")]
	public enum EnemyId
	{
		[Token(Token = "0x4000B28")]
		FightingBear,
		[Token(Token = "0x4000B29")]
		Bird,
		[Token(Token = "0x4000B2A")]
		Snake,
		[Token(Token = "0x4000B2B")]
		Boar,
		[Token(Token = "0x4000B2C")]
		Poisnake,
		[Token(Token = "0x4000B2D")]
		Fairy,
		[Token(Token = "0x4000B2E")]
		MagicDevil,
		[Token(Token = "0x4000B2F")]
		Woody,
		[Token(Token = "0x4000B30")]
		FireLizard,
		[Token(Token = "0x4000B31")]
		Bee,
		[Token(Token = "0x4000B32")]
		FireBird,
		[Token(Token = "0x4000B33")]
		Caver,
		[Token(Token = "0x4000B34")]
		DrillMole,
		[Token(Token = "0x4000B35")]
		FairyS,
		[Token(Token = "0x4000B36")]
		Smoke,
		[Token(Token = "0x4000B37")]
		KillerBee,
		[Token(Token = "0x4000B38")]
		Snowman,
		[Token(Token = "0x4000B39")]
		SnowBear,
		[Token(Token = "0x4000B3A")]
		SnowWoody,
		[Token(Token = "0x4000B3B")]
		IceLizard,
		[Token(Token = "0x4000B3C")]
		IceSmoke,
		[Token(Token = "0x4000B3D")]
		SkullKnight,
		[Token(Token = "0x4000B3E")]
		Penguin,
		[Token(Token = "0x4000B3F")]
		Drone,
		[Token(Token = "0x4000B40")]
		Springo,
		[Token(Token = "0x4000B41")]
		BlackLizard,
		[Token(Token = "0x4000B42")]
		FairyKing,
		[Token(Token = "0x4000B43")]
		BlackGeorge,
		[Token(Token = "0x4000B44")]
		Robot,
		[Token(Token = "0x4000B45")]
		PoisonSmoke,
		[Token(Token = "0x4000B46")]
		MarinKing,
		[Token(Token = "0x4000B47")]
		ArmourKnight,
		[Token(Token = "0x4000B48")]
		KingGeorge,
		[Token(Token = "0x4000B49")]
		CaverKing,
		[Token(Token = "0x4000B4A")]
		Minotaur,
		[Token(Token = "0x4000B4B")]
		EvilKing,
		[Token(Token = "0x4000B4C")]
		EvilKingTransformed,
		[Token(Token = "0x4000B4D")]
		TrialBird,
		[Token(Token = "0x4000B4E")]
		TrialMonkey,
		[Token(Token = "0x4000B4F")]
		TrialBoar,
		[Token(Token = "0x4000B50")]
		MylonLee
	}

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EnemyId id;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string prefabName;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxHP;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int HP;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int attack;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int defense;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int quick;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnemyAttack.AttackId[] attackIds;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int exp;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int gold;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float battleEffectVerticalDiff;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x52E250", Offset = "0x52E250", VA = "0x52E250")]
	public Enemy(EnemyId id, string name, string prefabName, int maxHP, int HP, int attack, int defense, int quick, EnemyAttack.AttackId[] attackIds, int exp, int gold, float battleEffectVerticalDiff)
	{
	}
}
[Token(Token = "0x200005D")]
public class EnemyManager : MonoBehaviour
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int NO_DAMAGE;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x76D450", Offset = "0x76D450", VA = "0x76D450")]
	public static bool NoDamageByNormalAttack(Enemy enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x76D4C8", Offset = "0x76D4C8", VA = "0x76D4C8")]
	public static Enemy EnemyFromEnemyId(Enemy.EnemyId enemyId)
	{
		return default(Enemy);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x770128", Offset = "0x770128", VA = "0x770128")]
	public static EnemyAttack EnemyAttackFromAttackId(EnemyAttack.AttackId attackId)
	{
		return default(EnemyAttack);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x770CBC", Offset = "0x770CBC", VA = "0x770CBC")]
	public EnemyManager()
	{
	}
}
[Token(Token = "0x200005E")]
public class EnemyStatus : MonoBehaviour
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string nameId;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private new string name;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int MaxHP;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int MaxMP;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int attack;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int defense;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int quick;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int attackVariationCount;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float battleEffectVerticalDiff;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private int Exp;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int Gold;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int HP;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int MP;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x770D18", Offset = "0x770D18", VA = "0x770D18")]
	private void Start()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x770D24", Offset = "0x770D24", VA = "0x770D24")]
	public void UpdateHP(int diff)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x770D34", Offset = "0x770D34", VA = "0x770D34")]
	public void UpdateMP(int diff)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x770D44", Offset = "0x770D44", VA = "0x770D44")]
	public int CurrentHP()
	{
		return default(int);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x770D4C", Offset = "0x770D4C", VA = "0x770D4C")]
	public int CurrentMP()
	{
		return default(int);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x770D54", Offset = "0x770D54", VA = "0x770D54")]
	public string Name()
	{
		return null;
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x770D5C", Offset = "0x770D5C", VA = "0x770D5C")]
	public int AttackVariationCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x770D64", Offset = "0x770D64", VA = "0x770D64")]
	public float YDiff()
	{
		return default(float);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x770D6C", Offset = "0x770D6C", VA = "0x770D6C")]
	public int Defense()
	{
		return default(int);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x770D74", Offset = "0x770D74", VA = "0x770D74")]
	public int Attack()
	{
		return default(int);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x770D7C", Offset = "0x770D7C", VA = "0x770D7C")]
	public int Quick()
	{
		return default(int);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x770D84", Offset = "0x770D84", VA = "0x770D84")]
	public int RewardExp()
	{
		return default(int);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x770D8C", Offset = "0x770D8C", VA = "0x770D8C")]
	public int RewardGold()
	{
		return default(int);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x770D94", Offset = "0x770D94", VA = "0x770D94")]
	public EnemyStatus()
	{
	}
}
[Token(Token = "0x200005F")]
public class MonsterAnimationEvent : CommonBehaviour
{
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF0C", Offset = "0x4CBF0C")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonsterAnimationEvent <>4__this;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectRatio;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float effectDuration;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__8;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__7;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__6;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__5;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action <>9__4;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__3;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__2;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action <>9__1;

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x71CA68", Offset = "0x71CA68", VA = "0x71CA68")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x71CEF4", Offset = "0x71CEF4", VA = "0x71CEF4")]
		internal void <PlayerDamagedEffect>b__0()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x71D0CC", Offset = "0x71D0CC", VA = "0x71D0CC")]
		internal void <PlayerDamagedEffect>b__1()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x71D228", Offset = "0x71D228", VA = "0x71D228")]
		internal void <PlayerDamagedEffect>b__2()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x71D400", Offset = "0x71D400", VA = "0x71D400")]
		internal void <PlayerDamagedEffect>b__3()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x71D55C", Offset = "0x71D55C", VA = "0x71D55C")]
		internal void <PlayerDamagedEffect>b__4()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x71D734", Offset = "0x71D734", VA = "0x71D734")]
		internal void <PlayerDamagedEffect>b__5()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x71D890", Offset = "0x71D890", VA = "0x71D890")]
		internal void <PlayerDamagedEffect>b__6()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x71DA68", Offset = "0x71DA68", VA = "0x71DA68")]
		internal void <PlayerDamagedEffect>b__7()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x71DBC4", Offset = "0x71DBC4", VA = "0x71DBC4")]
		internal void <PlayerDamagedEffect>b__8()
		{
		}
	}

	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF1C", Offset = "0x4CBF1C")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonsterAnimationEvent <>4__this;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectRatio;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float effectDuration;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__4;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__3;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__2;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__1;

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x71CBA4", Offset = "0x71CBA4", VA = "0x71CBA4")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x71DC58", Offset = "0x71DC58", VA = "0x71DC58")]
		internal void <PlayerDamagedEffectOfPoisoned>b__0()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x71DE30", Offset = "0x71DE30", VA = "0x71DE30")]
		internal void <PlayerDamagedEffectOfPoisoned>b__1()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x71DF8C", Offset = "0x71DF8C", VA = "0x71DF8C")]
		internal void <PlayerDamagedEffectOfPoisoned>b__2()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x71E164", Offset = "0x71E164", VA = "0x71E164")]
		internal void <PlayerDamagedEffectOfPoisoned>b__3()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x71E2C0", Offset = "0x71E2C0", VA = "0x71E2C0")]
		internal void <PlayerDamagedEffectOfPoisoned>b__4()
		{
		}
	}

	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF2C", Offset = "0x4CBF2C")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonsterAnimationEvent <>4__this;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectRatio;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float effectDuration;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int repeat;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__8;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__7;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__6;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action <>9__5;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__4;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__3;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action <>9__2;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action <>9__1;

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x71CD88", Offset = "0x71CD88", VA = "0x71CD88")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x71E354", Offset = "0x71E354", VA = "0x71E354")]
		internal void <PlayerDamagedEffectOnce>b__0()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x71E52C", Offset = "0x71E52C", VA = "0x71E52C")]
		internal void <PlayerDamagedEffectOnce>b__1()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x71E688", Offset = "0x71E688", VA = "0x71E688")]
		internal void <PlayerDamagedEffectOnce>b__2()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x71E860", Offset = "0x71E860", VA = "0x71E860")]
		internal void <PlayerDamagedEffectOnce>b__3()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x71E9BC", Offset = "0x71E9BC", VA = "0x71E9BC")]
		internal void <PlayerDamagedEffectOnce>b__4()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x71EB94", Offset = "0x71EB94", VA = "0x71EB94")]
		internal void <PlayerDamagedEffectOnce>b__5()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x71ECF0", Offset = "0x71ECF0", VA = "0x71ECF0")]
		internal void <PlayerDamagedEffectOnce>b__6()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x71EEC8", Offset = "0x71EEC8", VA = "0x71EEC8")]
		internal void <PlayerDamagedEffectOnce>b__7()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x71F024", Offset = "0x71F024", VA = "0x71F024")]
		internal void <PlayerDamagedEffectOnce>b__8()
		{
		}
	}

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip attackSE;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip heavyAttackSE;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip criticalSE;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip fireSE;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip dashSE;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip jumpSE;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip swordSE;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip openDimensionSE;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip rodTeleportSE;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip undergroundAttackSE;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip smokeSE;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip maiLongLeeCriticalSE;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip droneSE;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip droneFadeOutSE;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip canonSE;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip minotaurAppearSE;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject camera;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BattleManager battleManager;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject battleEffect;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 defaultPosition;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AudioSource audioSource;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool isPrepared;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x71C4DC", Offset = "0x71C4DC", VA = "0x71C4DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x71C5F8", Offset = "0x71C5F8", VA = "0x71C5F8")]
	public void SetFlagAfterDamage()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x71C5A0", Offset = "0x71C5A0", VA = "0x71C5A0")]
	private void SetDefaultPosition()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x71C6B8", Offset = "0x71C6B8", VA = "0x71C6B8")]
	private void StartParticle()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x71C72C", Offset = "0x71C72C", VA = "0x71C72C")]
	private void StopParticle()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x71C75C", Offset = "0x71C75C", VA = "0x71C75C")]
	private void EnemyFire()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x71C7E0", Offset = "0x71C7E0", VA = "0x71C7E0")]
	private void EnemyBlackFire()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x71C864", Offset = "0x71C864", VA = "0x71C864")]
	private void PlayerCriticalDamagedEffect()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x71C920", Offset = "0x71C920", VA = "0x71C920")]
	private void PlayerDamagedEffect()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x71CA70", Offset = "0x71CA70", VA = "0x71CA70")]
	public void PlayerDamagedEffectOfPoisoned()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x71C918", Offset = "0x71C918", VA = "0x71C918")]
	private void PlayerDamagedEffectWithouSE()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x71CD54", Offset = "0x71CD54", VA = "0x71CD54")]
	private void MinotaurAppearEffect()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x71CC20", Offset = "0x71CC20", VA = "0x71CC20")]
	private void PlayerDamagedEffectOnce(int repeat)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x71CD90", Offset = "0x71CD90", VA = "0x71CD90")]
	public void MonsterDamagedSE()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x71CD98", Offset = "0x71CD98", VA = "0x71CD98")]
	public void PlayerDamagedSE()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x71CDA0", Offset = "0x71CDA0", VA = "0x71CDA0")]
	public void JumpSE()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x71CDA8", Offset = "0x71CDA8", VA = "0x71CDA8")]
	public void PlayDashSE()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x71CDB0", Offset = "0x71CDB0", VA = "0x71CDB0")]
	public void PlayDroneSE()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x71CDB8", Offset = "0x71CDB8", VA = "0x71CDB8")]
	public void PlayDroneFadeOutSE()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x71CDC0", Offset = "0x71CDC0", VA = "0x71CDC0")]
	public void PlayHeavyAttackSE()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x71CDC8", Offset = "0x71CDC8", VA = "0x71CDC8")]
	public void PlaySwordSE()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x71CDD0", Offset = "0x71CDD0", VA = "0x71CDD0")]
	public void PlayRodTeleportSE()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x71CDD8", Offset = "0x71CDD8", VA = "0x71CDD8")]
	public void PlayUnderGroundAttackSE()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x71CDE0", Offset = "0x71CDE0", VA = "0x71CDE0")]
	public void PlaySmokeSE()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x71CDE8", Offset = "0x71CDE8", VA = "0x71CDE8")]
	public void PlayCanonSE()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x71CDF0", Offset = "0x71CDF0", VA = "0x71CDF0")]
	public void PlayMaiLongLeeSE()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x71C8A4", Offset = "0x71C8A4", VA = "0x71C8A4")]
	private void Flash()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x71CBAC", Offset = "0x71CBAC", VA = "0x71CBAC")]
	private void PoisonFlash()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x71C6F4", Offset = "0x71C6F4", VA = "0x71C6F4")]
	private void PlaySE(AudioClip clip)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x71CEB4", Offset = "0x71CEB4", VA = "0x71CEB4")]
	public void SetActiveFalse()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x71CEEC", Offset = "0x71CEEC", VA = "0x71CEEC")]
	public MonsterAnimationEvent()
	{
	}
}
[Token(Token = "0x2000060")]
public class BattleItemMenuManager : MenuManagerBase
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 cursorDefaultPosition;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject menuView;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject cursor;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject upCaret;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject downCaret;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshPro item0;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro item1;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro item2;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro item3;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro count0;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro count1;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro count2;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro count3;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TextMeshPro[] names;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TextMeshPro[] counts;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int currentOption;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int beginOption;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int endOption;

	[Token(Token = "0x4000233")]
	private const int MenuEndOrder = 3;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x84CCF4", Offset = "0x84CCF4", VA = "0x84CCF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x84D020", Offset = "0x84D020", VA = "0x84D020")]
	public void UpdateView()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x84D05C", Offset = "0x84D05C", VA = "0x84D05C")]
	public void UpdateMenu()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x84D870", Offset = "0x84D870", VA = "0x84D870")]
	public bool CanFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x84D900", Offset = "0x84D900", VA = "0x84D900")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x84DBD8", Offset = "0x84DBD8", VA = "0x84DBD8")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x84D6B0", Offset = "0x84D6B0", VA = "0x84D6B0")]
	public void ChangeOption(bool isUp)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x84DC0C", Offset = "0x84DC0C", VA = "0x84DC0C")]
	public Item SelectedItem()
	{
		return default(Item);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x84DAAC", Offset = "0x84DAAC", VA = "0x84DAAC")]
	private void UpdateCursorPosition()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x84DCCC", Offset = "0x84DCCC", VA = "0x84DCCC")]
	public BattleItemMenuManager()
	{
	}
}
[Token(Token = "0x2000061")]
public class BattleMagicMenuManager : MenuManagerBase
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 cursorDefaultPosition;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject menuView;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject cursor;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject upCaret;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject downCaret;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshPro costLabel;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro costText;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro magic0;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro magic1;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro magic2;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro magic3;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TextMeshPro[] names;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentOption;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int beginOption;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int endOption;

	[Token(Token = "0x4000243")]
	private const int MenuEndOrder = 3;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x84DD2C", Offset = "0x84DD2C", VA = "0x84DD2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x84DF10", Offset = "0x84DF10", VA = "0x84DF10")]
	private void SetUpForLanguage()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x84DFB8", Offset = "0x84DFB8", VA = "0x84DFB8")]
	public void UpdateView()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x84DFFC", Offset = "0x84DFFC", VA = "0x84DFFC")]
	public void UpdateMenu()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x84E370", Offset = "0x84E370", VA = "0x84E370")]
	public void UpdateDesc()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x84E5EC", Offset = "0x84E5EC", VA = "0x84E5EC")]
	public bool CanFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x84E658", Offset = "0x84E658", VA = "0x84E658")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x84E8BC", Offset = "0x84E8BC", VA = "0x84E8BC")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x84E46C", Offset = "0x84E46C", VA = "0x84E46C")]
	public void ChangeOption(bool isUp)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x84E8F0", Offset = "0x84E8F0", VA = "0x84E8F0")]
	public Magic SelectedMagic()
	{
		return default(Magic);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x84E790", Offset = "0x84E790", VA = "0x84E790")]
	private void UpdateCursorPosition()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x84E96C", Offset = "0x84E96C", VA = "0x84E96C")]
	public BattleMagicMenuManager()
	{
	}
}
[Token(Token = "0x2000062")]
public class BattleMenuManager : MenuManagerBase
{
	[Token(Token = "0x2000280")]
	public enum OPTIONS
	{
		[Token(Token = "0x4000B70")]
		FIGHT,
		[Token(Token = "0x4000B71")]
		MAGIC,
		[Token(Token = "0x4000B72")]
		ITEM,
		[Token(Token = "0x4000B73")]
		FLEE
	}

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isDecided;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 cursorDefaultPosition;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject battleMenuView;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject cursorView;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro attackText;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshPro magicText;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshPro itemText;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro escapeText;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OPTIONS currentOption;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BattleItemMenuManager battleItemMenuManager;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private BattleMagicMenuManager battleMagicMenuManager;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x85CEA4", Offset = "0x85CEA4", VA = "0x85CEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x85CF58", Offset = "0x85CF58", VA = "0x85CF58")]
	private void SetUpForLanguage()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x85D800", Offset = "0x85D800", VA = "0x85D800")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x84F938", Offset = "0x84F938", VA = "0x84F938")]
	public void Select()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x84F98C", Offset = "0x84F98C", VA = "0x84F98C")]
	public void ChangeOption(bool isLeft)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x85D87C", Offset = "0x85D87C", VA = "0x85D87C")]
	private void ChangeDetail(bool isLeft)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x85D8F4", Offset = "0x85D8F4", VA = "0x85D8F4")]
	private void UpdateCursorPosition()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x84F9DC", Offset = "0x84F9DC", VA = "0x84F9DC")]
	public BattleManager.PlayerAction DecideMagic()
	{
		return default(BattleManager.PlayerAction);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x84FC7C", Offset = "0x84FC7C", VA = "0x84FC7C")]
	public BattleManager.PlayerAction DecideItem()
	{
		return default(BattleManager.PlayerAction);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x84F2AC", Offset = "0x84F2AC", VA = "0x84F2AC")]
	public void HideDetail()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x85D9CC", Offset = "0x85D9CC", VA = "0x85D9CC")]
	private void ActivateMenuText()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x85D99C", Offset = "0x85D99C", VA = "0x85D99C")]
	private void DeactivateAllMenuTextWithout(TextMeshPro tmPro)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x85D9D4", Offset = "0x85D9D4", VA = "0x85D9D4")]
	private void DeactivateAllMenuText(bool b)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x85DB58", Offset = "0x85DB58", VA = "0x85DB58")]
	private void ActivateMenuText(TextMeshPro tmPro)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x84F9CC", Offset = "0x84F9CC", VA = "0x84F9CC")]
	public OPTIONS Decide()
	{
		return default(OPTIONS);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x85DBCC", Offset = "0x85DBCC", VA = "0x85DBCC")]
	public BattleMenuManager()
	{
	}
}
[Token(Token = "0x2000063")]
public class CanvasManager : MonoBehaviour
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject camera;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject mobileControllerCanvas;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject centerEyeAnchor;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MessageManager messageManager;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isActive;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float collisionCheckDistance;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float MENU_DISTANCE;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x861D88", Offset = "0x861D88", VA = "0x861D88")]
	private void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x861E3C", Offset = "0x861E3C", VA = "0x861E3C")]
	public void SetCanvasPosition()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x862184", Offset = "0x862184", VA = "0x862184")]
	private void ShowCanvas(bool immediately = true)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x8623B0", Offset = "0x8623B0", VA = "0x8623B0")]
	public bool CanShowCanvas()
	{
		return default(bool);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x862518", Offset = "0x862518", VA = "0x862518")]
	private Vector3 CameraDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x8626F4", Offset = "0x8626F4", VA = "0x8626F4")]
	public void MakeDistanceForMessageView(GameObject targetObject)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x8629CC", Offset = "0x8629CC", VA = "0x8629CC")]
	private void LookAtObject(GameObject targetObject)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x862C2C", Offset = "0x862C2C", VA = "0x862C2C")]
	public void FailToShowCanvas()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x85A208", Offset = "0x85A208", VA = "0x85A208")]
	public void ShowBattleMenuView()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x85A2FC", Offset = "0x85A2FC", VA = "0x85A2FC")]
	public void HideBattleMenuView()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x862E88", Offset = "0x862E88", VA = "0x862E88")]
	public void ShowMenuView()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x862F74", Offset = "0x862F74", VA = "0x862F74")]
	public void HideMenuViewForMessage()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x863044", Offset = "0x863044", VA = "0x863044")]
	public void ShowTransporterMenuView()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x8630C4", Offset = "0x8630C4", VA = "0x8630C4")]
	public void HideTransporterMenuView()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x8631D8", Offset = "0x8631D8", VA = "0x8631D8")]
	public void ShowItemShopView()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x863258", Offset = "0x863258", VA = "0x863258")]
	public void HideItemShopView()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x863340", Offset = "0x863340", VA = "0x863340")]
	public void ShowCanvasForSceneView()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x863368", Offset = "0x863368", VA = "0x863368")]
	public void ShowCanvasForOpening()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x863390", Offset = "0x863390", VA = "0x863390")]
	public void HideCanvasForSceneView()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x84C240", Offset = "0x84C240", VA = "0x84C240")]
	public void ShowConfirmView(string question, [Optional] string yes, [Optional] string no)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8633E0", Offset = "0x8633E0", VA = "0x8633E0")]
	public void HideConfirmView()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x863484", Offset = "0x863484", VA = "0x863484")]
	public void HideMenuView()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x86348C", Offset = "0x86348C", VA = "0x86348C")]
	public void ShowMessageView()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x84C2E0", Offset = "0x84C2E0", VA = "0x84C2E0")]
	public void ShowMoneyView()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x8632D4", Offset = "0x8632D4", VA = "0x8632D4")]
	public void HideMoneyView()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x863580", Offset = "0x863580", VA = "0x863580")]
	public void HideMessageView()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x85B130", Offset = "0x85B130", VA = "0x85B130")]
	public void ShowBattleMessageView()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x863138", Offset = "0x863138", VA = "0x863138")]
	private void HideCanvas(bool immediately = true)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x862D60", Offset = "0x862D60", VA = "0x862D60")]
	public void HideCanvasBeforeShow()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x863588", Offset = "0x863588", VA = "0x863588")]
	public CanvasManager()
	{
	}
}
[Token(Token = "0x2000064")]
public class CanvasSoundManager : CommonBehaviour
{
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF3C", Offset = "0x4CBF3C")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audio;

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x86394C", Offset = "0x86394C", VA = "0x86394C")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x86395C", Offset = "0x86395C", VA = "0x86395C")]
		internal void <RestartBGM>b__0()
		{
		}
	}

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AudioClip openMenuSE;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public AudioClip closeMenuSE;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public AudioClip attackSE;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public AudioClip selectSE;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public AudioClip decideSE;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public AudioClip attackStartSE;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public AudioClip cancelSE;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public AudioClip errorSE;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public AudioClip equipmentSE;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public AudioClip dropSE;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public AudioClip saveSE;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public AudioClip paymentSE;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public AudioClip sleepSE;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip recoverySE;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip openTreasureBoxSE;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip getItemSE;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip getSpecialItemSE;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AudioSource audioSource;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject sceneScriptsObject;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x86359C", Offset = "0x86359C", VA = "0x86359C")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x86360C", Offset = "0x86360C", VA = "0x86360C")]
	public void PlayOpenTresureBoxSE()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x863614", Offset = "0x863614", VA = "0x863614")]
	public void PlayGetItemSE()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x86361C", Offset = "0x86361C", VA = "0x86361C")]
	public void PlayGetSpecialItemSE()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x863624", Offset = "0x863624", VA = "0x863624")]
	public void PlayAttackSE()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x86362C", Offset = "0x86362C", VA = "0x86362C")]
	public void PlayOpenMenuSE()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x863634", Offset = "0x863634", VA = "0x863634")]
	public void PlayCloseMenuSE()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x84F930", Offset = "0x84F930", VA = "0x84F930")]
	public void PlaySelectSE()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x86363C", Offset = "0x86363C", VA = "0x86363C")]
	public void PlayEquipmentSE()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x863644", Offset = "0x863644", VA = "0x863644")]
	public void PlayDropSE()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x84C574", Offset = "0x84C574", VA = "0x84C574")]
	public void PlayPaymentSE()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x86364C", Offset = "0x86364C", VA = "0x86364C")]
	public void PlaySleepSE()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x863654", Offset = "0x863654", VA = "0x863654")]
	public void PlayRecoverySE()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x86365C", Offset = "0x86365C", VA = "0x86365C")]
	public void PlayMessageSE()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x863664", Offset = "0x863664", VA = "0x863664")]
	public void PlayDecideSE()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x84F9C4", Offset = "0x84F9C4", VA = "0x84F9C4")]
	public void PlayAttackStartSE()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x84F2A4", Offset = "0x84F2A4", VA = "0x84F2A4")]
	public void PlayCancelSE()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x86366C", Offset = "0x86366C", VA = "0x86366C")]
	public void PlayErrorSE()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x863674", Offset = "0x863674", VA = "0x863674")]
	public void PlaySaveSE()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x84C694", Offset = "0x84C694", VA = "0x84C694")]
	public void PlaySE(AudioClip clip)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x86367C", Offset = "0x86367C", VA = "0x86367C")]
	public void StopSE()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x8636AC", Offset = "0x8636AC", VA = "0x8636AC")]
	public void FadeOutBGM()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x863734", Offset = "0x863734", VA = "0x863734")]
	public void FadeInBGM()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x8637BC", Offset = "0x8637BC", VA = "0x8637BC")]
	public void RestartBGM()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x863954", Offset = "0x863954", VA = "0x863954")]
	public CanvasSoundManager()
	{
	}
}
[Token(Token = "0x2000065")]
public class ConfirmViewManager : ControllerBase
{
	[Token(Token = "0x2000282")]
	public enum OPTIONS
	{
		[Token(Token = "0x4000B76")]
		YES,
		[Token(Token = "0x4000B77")]
		NO
	}

	[Token(Token = "0x400026A")]
	private const float CursorViewHeight = 5f / 128f;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 cursorDefaultPosition;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject confirmView;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject cursorView;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro questionText;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro yesText;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro noText;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OPTIONS currentOption;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CanvasSoundManager soundManager;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x865D34", Offset = "0x865D34", VA = "0x865D34")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x865DCC", Offset = "0x865DCC", VA = "0x865DCC")]
	private void SetUpForLanguage()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x865F38", Offset = "0x865F38", VA = "0x865F38")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x8660FC", Offset = "0x8660FC", VA = "0x8660FC")]
	private void UpdateList(string question, string yes, string no)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x863398", Offset = "0x863398", VA = "0x863398")]
	public void ShowView(string question, string yes, string no)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x863450", Offset = "0x863450", VA = "0x863450")]
	public void HideView()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x86604C", Offset = "0x86604C", VA = "0x86604C")]
	public void Select()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x866088", Offset = "0x866088", VA = "0x866088")]
	public OPTIONS Decide()
	{
		return default(OPTIONS);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x866090", Offset = "0x866090", VA = "0x866090")]
	public void ChangeOption(bool isUp)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x8662CC", Offset = "0x8662CC", VA = "0x8662CC")]
	private void UpdateCursorPosition()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x866374", Offset = "0x866374", VA = "0x866374")]
	public OPTIONS DecidedValue()
	{
		return default(OPTIONS);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x86637C", Offset = "0x86637C", VA = "0x86637C")]
	public ConfirmViewManager()
	{
	}
}
[Token(Token = "0x2000066")]
public class FieldMenuManager : MenuManagerBase
{
	[Token(Token = "0x2000283")]
	public enum OPTIONS
	{
		[Token(Token = "0x4000B79")]
		STATUS,
		[Token(Token = "0x4000B7A")]
		MAGIC,
		[Token(Token = "0x4000B7B")]
		ITEM,
		[Token(Token = "0x4000B7C")]
		SAVE,
		[Token(Token = "0x4000B7D")]
		SETTING
	}

	[Token(Token = "0x2000284")]
	public enum SETTING_OPTIONS
	{
		[Token(Token = "0x4000B7F")]
		REVIEW,
		[Token(Token = "0x4000B80")]
		BUG_REPORT
	}

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string menuMessage;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 cursorDefaultPosition;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject fieldMenuView;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject cursorView;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject detailStatusView;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject detailEquipmentView;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject equipCursor;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject detailSettingView;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject settingCursor;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro settingViewDescText;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro settingViewYesText;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro settingViewNoText;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro statusText;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro magicText;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro itemText;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro equipText;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro saveText;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro settingText;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OPTIONS currentOption;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private SETTING_OPTIONS currentSettingOption;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isDecided;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CanvasSoundManager soundManager;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MessageManager messageManager;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CanvasManager canvasManager;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x776FD8", Offset = "0x776FD8", VA = "0x776FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x7770A0", Offset = "0x7770A0", VA = "0x7770A0")]
	private void SetUpForLanguage()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x777374", Offset = "0x777374", VA = "0x777374")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x777AD4", Offset = "0x777AD4", VA = "0x777AD4")]
	private void ShowMenu()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x777808", Offset = "0x777808", VA = "0x777808")]
	private void HideMenu()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x777658", Offset = "0x777658", VA = "0x777658")]
	private void Decide()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x777FC0", Offset = "0x777FC0", VA = "0x777FC0")]
	private void DeactivateAllMenuText(bool b)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x778160", Offset = "0x778160", VA = "0x778160")]
	private void ActivateMenuText(TextMeshPro tmPro)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x778514", Offset = "0x778514", VA = "0x778514")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x777618", Offset = "0x777618", VA = "0x777618")]
	private void Select()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x777584", Offset = "0x777584", VA = "0x777584")]
	private void ChangeOption(bool isUp)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x77854C", Offset = "0x77854C", VA = "0x77854C")]
	private void ChangeDetailOption(bool isUp)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x7786A8", Offset = "0x7786A8", VA = "0x7786A8")]
	private void ChangeSettingOption(bool isUp)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x777CD8", Offset = "0x777CD8", VA = "0x777CD8")]
	private void UpdateDetailView()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x777C30", Offset = "0x777C30", VA = "0x777C30")]
	private void UpdateCursorPosition()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x7786D4", Offset = "0x7786D4", VA = "0x7786D4")]
	private void UpdateSettingCursorPosition()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x778800", Offset = "0x778800", VA = "0x778800")]
	private void ToggleEncount()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x7778D4", Offset = "0x7778D4", VA = "0x7778D4")]
	private void DecideOnDecided()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x7788DC", Offset = "0x7788DC", VA = "0x7788DC")]
	private void ShowMessage()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x778A48", Offset = "0x778A48", VA = "0x778A48")]
	private void DecideOnSave()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x778CA8", Offset = "0x778CA8", VA = "0x778CA8")]
	private void DecideOnSetting()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x778D88", Offset = "0x778D88", VA = "0x778D88")]
	private void MoveToTitle()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x7779E8", Offset = "0x7779E8", VA = "0x7779E8")]
	private void BackOnDecided()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x7781D4", Offset = "0x7781D4", VA = "0x7781D4")]
	private void FocusMagicMenu()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x778E20", Offset = "0x778E20", VA = "0x778E20")]
	private void BlurMagicMenu()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x778298", Offset = "0x778298", VA = "0x778298")]
	private void FocusSaveMenu()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x778CFC", Offset = "0x778CFC", VA = "0x778CFC")]
	private void BlurSaveMenu()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x778300", Offset = "0x778300", VA = "0x778300")]
	private void FocusSettingMenu()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x778EA8", Offset = "0x778EA8", VA = "0x778EA8")]
	private void BlurSettingMenu()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x778EDC", Offset = "0x778EDC", VA = "0x778EDC")]
	public FieldMenuManager()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x778F98", Offset = "0x778F98", VA = "0x778F98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D377C", Offset = "0x4D377C")]
	private void <ShowMessage>b__44_0()
	{
	}
}
[Token(Token = "0x2000067")]
public class ItemMenuManager : MenuManagerBase
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 itemCursorDefaultPosition;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 descCursorDefaultPosition;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 shieldIconDefaultPos;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject itemCursor;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject itemMenu;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject itemDesc;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject swordIcon;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject shieldIcon;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject itemDescCursor;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro descText;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro effectLabel;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro effectValue;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro descOptionText1;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro descOptionText2;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro item0;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro item1;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshPro item2;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshPro item3;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMeshPro item4;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TextMeshPro item5;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshPro item6;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshPro item7;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshPro item8;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshPro item9;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private TextMeshPro item0Count;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private TextMeshPro item1Count;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private TextMeshPro item2Count;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private TextMeshPro item3Count;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private TextMeshPro item4Count;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private TextMeshPro item5Count;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private TextMeshPro item6Count;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private TextMeshPro item7Count;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private TextMeshPro item8Count;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private TextMeshPro item9Count;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private TextMeshPro[] names;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private TextMeshPro[] counts;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int currentOption;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int currentDescOption;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool isDecided;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private CanvasSoundManager soundManager;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject camera;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x709D20", Offset = "0x709D20", VA = "0x709D20")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x70A4AC", Offset = "0x70A4AC", VA = "0x70A4AC")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x70A4E4", Offset = "0x70A4E4", VA = "0x70A4E4")]
	public void UpdateView()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x70A520", Offset = "0x70A520", VA = "0x70A520")]
	public void UpdateItemList()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x70B700", Offset = "0x70B700", VA = "0x70B700")]
	public bool CanFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x70B790", Offset = "0x70B790", VA = "0x70B790")]
	public void FocusItemMenu()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x70B7FC", Offset = "0x70B7FC", VA = "0x70B7FC")]
	public bool DecideOnItem()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x70B920", Offset = "0x70B920", VA = "0x70B920")]
	private void Use()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x70BEA4", Offset = "0x70BEA4", VA = "0x70BEA4")]
	private void Drop(bool withMessage = false, bool withoutSE = false)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x70C028", Offset = "0x70C028", VA = "0x70C028")]
	public bool CancelOnItem()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x70B6F8", Offset = "0x70B6F8", VA = "0x70B6F8")]
	private bool IsInDesc()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x70BFC0", Offset = "0x70BFC0", VA = "0x70BFC0")]
	private void FocusItemDesc()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x70BF68", Offset = "0x70BF68", VA = "0x70BF68")]
	private void BlurItemMenu()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x70C078", Offset = "0x70C078", VA = "0x70C078")]
	private void BlurItemDesc()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x70C0C8", Offset = "0x70C0C8", VA = "0x70C0C8")]
	private void ActivateDescOptions(bool b)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x70B164", Offset = "0x70B164", VA = "0x70B164")]
	public void UpdateDescView()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x70C1B0", Offset = "0x70C1B0", VA = "0x70C1B0")]
	public void ChangeOption(bool isUp)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x70C1C8", Offset = "0x70C1C8", VA = "0x70C1C8")]
	private void ChangeListOption(bool isUp)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x70C29C", Offset = "0x70C29C", VA = "0x70C29C")]
	private void ChangeDescOption(bool isUp)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x70AFD8", Offset = "0x70AFD8", VA = "0x70AFD8")]
	private void UpdateCursorPosition(GameObject cursor)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x70C2C8", Offset = "0x70C2C8", VA = "0x70C2C8")]
	public ItemMenuManager()
	{
	}
}
[Token(Token = "0x2000068")]
public class ItemShopManager : MenuManagerBase
{
	[Token(Token = "0x2000285")]
	public enum MenuStatus
	{
		[Token(Token = "0x4000B82")]
		Base,
		[Token(Token = "0x4000B83")]
		List,
		[Token(Token = "0x4000B84")]
		Confirm,
		[Token(Token = "0x4000B85")]
		Bought,
		[Token(Token = "0x4000B86")]
		Sold,
		[Token(Token = "0x4000B87")]
		Leave,
		[Token(Token = "0x4000B88")]
		NoItems,
		[Token(Token = "0x4000B89")]
		NoMoney,
		[Token(Token = "0x4000B8A")]
		CannotSell,
		[Token(Token = "0x4000B8B")]
		ItemFull
	}

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isInMenu;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float cursorDefaultPositionY;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 shieldIconDefaultPos;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject itemShopView;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject listView;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject baseCursor;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject listCursor;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject decideCursor;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro buyText;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro sellText;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro leaveText;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro item1;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro item2;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro item3;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro item4;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro item5;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro item6;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro item7;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshPro item8;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshPro item9;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMeshPro item10;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TextMeshPro count1;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshPro count2;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshPro count3;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshPro count4;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshPro count5;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private TextMeshPro count6;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private TextMeshPro count7;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private TextMeshPro count8;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private TextMeshPro count9;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private TextMeshPro count10;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private TextMeshPro descText;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private TextMeshPro effectLabel;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private TextMeshPro effectValue;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private TextMeshPro priceLabel;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private TextMeshPro priceValue;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private TextMeshPro decideText;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject swordIcon;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject shieldIcon;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public MenuStatus menuStatus;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool isSelling;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int validItemCount;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private TextMeshPro[] menuTitles;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private TextMeshPro[] menuCounts;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<BringItem> buyItems;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private List<BringItem> items;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int baseOption;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int listOption;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private CanvasSoundManager soundManager;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x70F388", Offset = "0x70F388", VA = "0x70F388")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x70E50C", Offset = "0x70E50C", VA = "0x70E50C")]
	public void SetBuyItems(Item[] buyItems)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x70FA94", Offset = "0x70FA94", VA = "0x70FA94")]
	private void UpdateItemList(List<BringItem> items)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x71055C", Offset = "0x71055C", VA = "0x71055C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x7106BC", Offset = "0x7106BC", VA = "0x7106BC")]
	private void Decide()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x710864", Offset = "0x710864", VA = "0x710864")]
	private void DecideOnBase()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x710EE0", Offset = "0x710EE0", VA = "0x710EE0")]
	private void NoItems()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x710E40", Offset = "0x710E40", VA = "0x710E40")]
	private void FocusListView()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x710F74", Offset = "0x710F74", VA = "0x710F74")]
	private void LeaveShop()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x7109BC", Offset = "0x7109BC", VA = "0x7109BC")]
	private void DecideOnList()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x710A64", Offset = "0x710A64", VA = "0x710A64")]
	private void DecideOnConfirm()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x71073C", Offset = "0x71073C", VA = "0x71073C")]
	private void Cancel()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x711A8C", Offset = "0x711A8C", VA = "0x711A8C")]
	private void CancelOnList()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x711B20", Offset = "0x711B20", VA = "0x711B20")]
	private void CancelOnConfirm()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x711BC8", Offset = "0x711BC8", VA = "0x711BC8")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x711A84", Offset = "0x711A84", VA = "0x711A84")]
	public void HideView()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x710FF4", Offset = "0x710FF4", VA = "0x710FF4")]
	private void UpdateBase()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x70FB2C", Offset = "0x70FB2C", VA = "0x70FB2C")]
	private void UpdateList()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x7113E4", Offset = "0x7113E4", VA = "0x7113E4")]
	private void UpdateDesc()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x71067C", Offset = "0x71067C", VA = "0x71067C")]
	public void Select()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x7107D8", Offset = "0x7107D8", VA = "0x7107D8")]
	public void ChangeOption(bool isLeft)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x711DCC", Offset = "0x711DCC", VA = "0x711DCC")]
	private void ChangeOptionOnBase(bool isLeft)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x711DF8", Offset = "0x711DF8", VA = "0x711DF8")]
	private void ChangeOptionOnList(bool isLeft)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x711C3C", Offset = "0x711C3C", VA = "0x711C3C")]
	private void UpdateCursorPosition(GameObject cursor)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x711E2C", Offset = "0x711E2C", VA = "0x711E2C")]
	public ItemShopManager()
	{
	}
}
[Token(Token = "0x2000069")]
public class MagicMenuManager : MenuManagerBase
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 magicCursorDefaultPosition;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject magicCursor;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject magicMenu;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject magicDesc;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject magicDescCursor;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshPro descText;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro costLabel;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro costText;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro descOptionText;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro magic0;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro magic1;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro magic2;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro magic3;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro magic4;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro magic5;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro magic6;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro magic7;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshPro magic8;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshPro magic9;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TextMeshPro[] names;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TextMeshPro[] counts;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int currentOption;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool isDecided;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CanvasSoundManager soundManager;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject camera;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x7192E4", Offset = "0x7192E4", VA = "0x7192E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x7196E0", Offset = "0x7196E0", VA = "0x7196E0")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x719718", Offset = "0x719718", VA = "0x719718")]
	public void UpdateView()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x719748", Offset = "0x719748", VA = "0x719748")]
	public void UpdateMagicList()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x71A068", Offset = "0x71A068", VA = "0x71A068")]
	public bool CanFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x71A0D0", Offset = "0x71A0D0", VA = "0x71A0D0")]
	public void FocusMagicMenu()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x71A13C", Offset = "0x71A13C", VA = "0x71A13C")]
	public bool DecideOnMagic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x71A2F8", Offset = "0x71A2F8", VA = "0x71A2F8")]
	private bool CanUseOnField()
	{
		return default(bool);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x71A1C0", Offset = "0x71A1C0", VA = "0x71A1C0")]
	private void Use()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x71A414", Offset = "0x71A414", VA = "0x71A414")]
	public bool CancelOnMagic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x719F3C", Offset = "0x719F3C", VA = "0x719F3C")]
	private bool IsInDesc()
	{
		return default(bool);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x71A3B8", Offset = "0x71A3B8", VA = "0x71A3B8")]
	private void FocusMagicDesc()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x71A4B4", Offset = "0x71A4B4", VA = "0x71A4B4")]
	private void BlurMagicMenu()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x71A464", Offset = "0x71A464", VA = "0x71A464")]
	private void BlurMagicDesc()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x71A50C", Offset = "0x71A50C", VA = "0x71A50C")]
	private void ActivateDescOptions(bool b)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x719BE8", Offset = "0x719BE8", VA = "0x719BE8")]
	public void UpdateDescView()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x71A598", Offset = "0x71A598", VA = "0x71A598")]
	public void ChangeOption(bool isUp)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x71A5AC", Offset = "0x71A5AC", VA = "0x71A5AC")]
	private void ChangeListOption(bool isUp)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x719F44", Offset = "0x719F44", VA = "0x719F44")]
	private void UpdateCursorPosition(GameObject cursor)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x71A658", Offset = "0x71A658", VA = "0x71A658")]
	public MagicMenuManager()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x71A6B4", Offset = "0x71A6B4", VA = "0x71A6B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D378C", Offset = "0x4D378C")]
	private void <Use>b__34_0()
	{
	}
}
[Token(Token = "0x200006A")]
public class MenuManagerBase : ControllerBase
{
	[Token(Token = "0x4000300")]
	protected const float CursorViewHeight = 5f / 128f;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected Color32 activeColor;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Color32 deactiveColor;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Color32 hiddenColor;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x70C384", Offset = "0x70C384", VA = "0x70C384")]
	public MenuManagerBase()
	{
	}
}
[Token(Token = "0x200006B")]
public class MessageManager : ControllerBase
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject messageView;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro messageText;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject messageCaret;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x71B718", Offset = "0x71B718", VA = "0x71B718")]
	private void Start()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x71B7A0", Offset = "0x71B7A0", VA = "0x71B7A0")]
	public void ShowFieldView()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x71B8E0", Offset = "0x71B8E0", VA = "0x71B8E0")]
	public void ShowBattleView()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x71BA20", Offset = "0x71BA20", VA = "0x71BA20")]
	public void ShowFieldMenuView()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x71BB60", Offset = "0x71BB60", VA = "0x71BB60")]
	public void HideView()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x71B768", Offset = "0x71B768", VA = "0x71B768")]
	public void UpdateMessage(string message)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x71B558", Offset = "0x71B558", VA = "0x71B558")]
	public void HideCaret()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x71B4F8", Offset = "0x71B4F8", VA = "0x71B4F8")]
	public void ShowCaret()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x71BB94", Offset = "0x71BB94", VA = "0x71BB94")]
	public MessageManager()
	{
	}
}
[Token(Token = "0x200006C")]
public class MoneyManager : MonoBehaviour
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject moneyView;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro moneyText;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x71C35C", Offset = "0x71C35C", VA = "0x71C35C")]
	private void Start()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x71C488", Offset = "0x71C488", VA = "0x71C488")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x71C360", Offset = "0x71C360", VA = "0x71C360")]
	public void UpdateStatus()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x71C4D4", Offset = "0x71C4D4", VA = "0x71C4D4")]
	public MoneyManager()
	{
	}
}
[Token(Token = "0x200006D")]
public class NameInputManager : MenuManagerBase
{
	[Token(Token = "0x2000286")]
	private enum Type
	{
		[Token(Token = "0x4000B8D")]
		Hiragana,
		[Token(Token = "0x4000B8E")]
		Katakana,
		[Token(Token = "0x4000B8F")]
		Eisu
	}

	[Token(Token = "0x4000309")]
	private const float CursorViewWidth = 0.04783625f;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 cursorDefaultPosition;

	[Token(Token = "0x400030B")]
	private const int OPTION_LINE = 9;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int NAME_MAX_LENGTH;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject nameInputView;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject cursorView;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject hiraganaView;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject katakanaView;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject eisuView;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro titleLabelText;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject hiraganaOptionLabel;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject katakanaOptionLabel;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject eisuOptionLabel;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro backOptionText;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro finishOptionText;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro nameLit1Text;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro nameLit2Text;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro nameLit3Text;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro nameLit4Text;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro nameLit5Text;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject nameLit5UnderScore;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int currentEntering;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] decidedNames;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[,] Hiragana;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[,] Katakana;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string[,] Eisu;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Type currentType;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool forEnglish;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int[] cursorPosition;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private CanvasSoundManager soundManager;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject camera;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x86F7EC", Offset = "0x86F7EC", VA = "0x86F7EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x86F8B8", Offset = "0x86F8B8", VA = "0x86F8B8")]
	private void SetUpForLanguage()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x86F988", Offset = "0x86F988", VA = "0x86F988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x870174", Offset = "0x870174", VA = "0x870174")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x870198", Offset = "0x870198", VA = "0x870198")]
	private void UpdateSelectArea()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x87053C", Offset = "0x87053C", VA = "0x87053C")]
	private void UpdateInputArea()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x8706E8", Offset = "0x8706E8", VA = "0x8706E8")]
	public void ShowView()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x870734", Offset = "0x870734", VA = "0x870734")]
	public void HideView()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x86FAF4", Offset = "0x86FAF4", VA = "0x86FAF4")]
	public void Select()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x86FEC8", Offset = "0x86FEC8", VA = "0x86FEC8")]
	private void CommonSelect(DIRECTION direction)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x86FB20", Offset = "0x86FB20", VA = "0x86FB20")]
	public void Decide()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x86FD04", Offset = "0x86FD04", VA = "0x86FD04")]
	private void DeleteLit()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x870BF4", Offset = "0x870BF4", VA = "0x870BF4")]
	private void DecideFinish()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x870D28", Offset = "0x870D28", VA = "0x870D28")]
	public string CursorPositionString()
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x870768", Offset = "0x870768", VA = "0x870768")]
	private void UpdateCursorPosition()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x870E70", Offset = "0x870E70", VA = "0x870E70")]
	public NameInputManager()
	{
	}
}
[Token(Token = "0x200006E")]
public class SaveMenuManager : MenuManagerBase
{
	[Token(Token = "0x2000287")]
	public enum SAVE_OPTIONS
	{
		[Token(Token = "0x4000B91")]
		DATA_1,
		[Token(Token = "0x4000B92")]
		DATA_2,
		[Token(Token = "0x4000B93")]
		DATA_3
	}

	[Token(Token = "0x2000288")]
	public enum CONFIRM_OPTIONS
	{
		[Token(Token = "0x4000B95")]
		YES,
		[Token(Token = "0x4000B96")]
		NO
	}

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SavedSummary[] summaries;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 detailCursorDefaultPosition;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 confirmCursorDefaultPosition;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject cursor;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject listView;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject confirmView;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject confirmCursor;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro data1UsernameText;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro data1LvText;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro data1PlaceLabelText;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro data1PlaytimeValueText;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject data1ClearedMark;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro data2UsernameText;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro data2LvText;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro data2PlaceLabelText;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro data2PlaytimeValueText;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject data2ClearedMark;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshPro data3UsernameText;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshPro data3LvText;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMeshPro data3PlaceLabelText;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TextMeshPro data3PlaytimeValueText;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject data3ClearedMark;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshPro confirmQuestionText;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshPro yesText;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshPro noText;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private TextMeshPro[] usernameTexts;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private TextMeshPro[] lvTexts;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private TextMeshPro[] placeLabelTexts;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TextMeshPro[] playtimeValueTexts;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject[] clearedMarks;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private SAVE_OPTIONS currentOption;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private CONFIRM_OPTIONS currentConfirmOption;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool inConfirm;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x835984", Offset = "0x835984", VA = "0x835984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x835F68", Offset = "0x835F68", VA = "0x835F68")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x835FA0", Offset = "0x835FA0", VA = "0x835FA0")]
	public void UpdateView()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x835FC8", Offset = "0x835FC8", VA = "0x835FC8")]
	public void UpdateList()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x836950", Offset = "0x836950", VA = "0x836950")]
	public void FocusList()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x836BD4", Offset = "0x836BD4", VA = "0x836BD4")]
	public void FocusConfirm()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x836E08", Offset = "0x836E08", VA = "0x836E08")]
	public bool Decide()
	{
		return default(bool);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x836F60", Offset = "0x836F60", VA = "0x836F60")]
	private void BlurConfirm()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x836FA4", Offset = "0x836FA4", VA = "0x836FA4")]
	public bool Cancel(bool withView = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x837004", Offset = "0x837004", VA = "0x837004")]
	public void ChangeOption(bool isUp)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x837048", Offset = "0x837048", VA = "0x837048")]
	private void ChangeListOption(bool isUp)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x83701C", Offset = "0x83701C", VA = "0x83701C")]
	private void ChangeConfirmOption(bool isUp)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x836A44", Offset = "0x836A44", VA = "0x836A44")]
	private void UpdateCursorPosition(GameObject thisCursor)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x837074", Offset = "0x837074", VA = "0x837074")]
	public int DecidedOption()
	{
		return default(int);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x83707C", Offset = "0x83707C", VA = "0x83707C")]
	public SaveMenuManager()
	{
	}
}
[Token(Token = "0x200006F")]
public class StatusManager : CommonBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string Version;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool IsNewGame;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool IsCleared;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int Lv;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int HP;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int MP;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Place.PlaceId GonePlaceId;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool IsEnglish;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public static bool IsChinese;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string Username;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool IsPoisoned;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int Money;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int TotalExp;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static DateTime BeginDateTime;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int Playtime;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Item equipSword;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static Item equipShield;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int EncountTimes;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public static int WinningTimes;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static int LosingTimes;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public static int EscapingTimes;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject battleStatusView;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro usernameText;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro battleLvText;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject poisonedMark;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro battleHPText;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro battleMPText;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro battleMaxHPText;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshPro battleMaxMPText;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject battleRemainHPGauge;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject battleRemainMPGauge;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro powerLabel;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro magicPowerLabel;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro quickLabel;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro luckLabel;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro attackLabel;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro defenseLabel;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro totalExpLabel;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro nextExpLabel;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro playtimeLabel;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro powerText;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshPro magicPowerText;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshPro quickText;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMeshPro luckText;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TextMeshPro attackText;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshPro defenseText;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshPro totalExpText;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshPro nextExpText;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshPro playtimeText;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x83F0C8", Offset = "0x83F0C8", VA = "0x83F0C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x83F0EC", Offset = "0x83F0EC", VA = "0x83F0EC")]
	private void SetUpForLanguage()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x83FC20", Offset = "0x83FC20", VA = "0x83FC20")]
	public static void InitStatusForNewGame()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x833968", Offset = "0x833968", VA = "0x833968")]
	public static int CurrentPlaytime()
	{
		return default(int);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x82F7C0", Offset = "0x82F7C0", VA = "0x82F7C0")]
	public static string CurrentPlaytimeAsString()
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x83FF50", Offset = "0x83FF50", VA = "0x83FF50")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x836824", Offset = "0x836824", VA = "0x836824")]
	public static string TimeAsString(int time)
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x8400B0", Offset = "0x8400B0", VA = "0x8400B0")]
	public void ShowFieldView()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x840194", Offset = "0x840194", VA = "0x840194")]
	public void ShowBattleView()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x840280", Offset = "0x840280", VA = "0x840280")]
	public void HideView()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x83F5E4", Offset = "0x83F5E4", VA = "0x83F5E4")]
	public void UpdateStatus()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x840384", Offset = "0x840384", VA = "0x840384")]
	private void UpdateGage()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x83794C", Offset = "0x83794C", VA = "0x83794C")]
	public void FullCare()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x8402B4", Offset = "0x8402B4", VA = "0x8402B4")]
	public int MaxHP()
	{
		return default(int);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x840B68", Offset = "0x840B68", VA = "0x840B68")]
	public static int MaxHPForLv(int lv)
	{
		return default(int);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x84031C", Offset = "0x84031C", VA = "0x84031C")]
	public int MaxMP()
	{
		return default(int);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x840B8C", Offset = "0x840B8C", VA = "0x840B8C")]
	public static int MaxMPForLv(int lv)
	{
		return default(int);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x840654", Offset = "0x840654", VA = "0x840654")]
	public int Power()
	{
		return default(int);
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x8406DC", Offset = "0x8406DC", VA = "0x8406DC")]
	public static int MagicPower()
	{
		return default(int);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x840930", Offset = "0x840930", VA = "0x840930")]
	public int Attack()
	{
		return default(int);
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x8409D8", Offset = "0x8409D8", VA = "0x8409D8")]
	public int Defense()
	{
		return default(int);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x840764", Offset = "0x840764", VA = "0x840764")]
	public int Quick()
	{
		return default(int);
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x8407EC", Offset = "0x8407EC", VA = "0x8407EC")]
	public int Luck()
	{
		return default(int);
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x840ABC", Offset = "0x840ABC", VA = "0x840ABC")]
	public int ExpToNextLv()
	{
		return default(int);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x840BB0", Offset = "0x840BB0", VA = "0x840BB0")]
	public StatusManager()
	{
	}
}
[Token(Token = "0x2000070")]
public class TransporterMenuManager : MenuManagerBase
{
	[Token(Token = "0x2000289")]
	public enum MenuStatus
	{
		[Token(Token = "0x4000B98")]
		Base,
		[Token(Token = "0x4000B99")]
		List,
		[Token(Token = "0x4000B9A")]
		Confirm,
		[Token(Token = "0x4000B9B")]
		Decided,
		[Token(Token = "0x4000B9C")]
		Leave,
		[Token(Token = "0x4000B9D")]
		NoMoney
	}

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isInMenu;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float cursorDefaultPositionY;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject transporterMenuView;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject listView;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject descView;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject baseCursor;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject listCursor;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject decideCursor;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro moveText;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro leaveText;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro place1;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro place2;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro place3;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro place4;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro descText;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro priceLabel;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro priceValue;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro decideText;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MenuStatus menuStatus;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private TextMeshPro[] menuTitles;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int baseOption;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int listOption;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int price;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool isFree;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Place> MenuGonePlaces;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int currentPlaceId;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x847920", Offset = "0x847920", VA = "0x847920")]
	public void SetAsFree(bool b)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x848A00", Offset = "0x848A00", VA = "0x848A00")]
	private void Start()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x848BD8", Offset = "0x848BD8", VA = "0x848BD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x848FA8", Offset = "0x848FA8", VA = "0x848FA8")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x848C04", Offset = "0x848C04", VA = "0x848C04")]
	private void SetGonePlaces()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x8488B4", Offset = "0x8488B4", VA = "0x8488B4")]
	private void SetDescViewPos()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x8491FC", Offset = "0x8491FC", VA = "0x8491FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x84935C", Offset = "0x84935C", VA = "0x84935C")]
	private void Decide()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x849584", Offset = "0x849584", VA = "0x849584")]
	private void DecideOnBase()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x849850", Offset = "0x849850", VA = "0x849850")]
	private void FocusListView()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x84990C", Offset = "0x84990C", VA = "0x84990C")]
	private void LeaveShop()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x849598", Offset = "0x849598", VA = "0x849598")]
	private void DecideOnList()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x849640", Offset = "0x849640", VA = "0x849640")]
	private void DecideOnConfirm()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x8485C4", Offset = "0x8485C4", VA = "0x8485C4")]
	public Place DecidedPlace()
	{
		return default(Place);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x849410", Offset = "0x849410", VA = "0x849410")]
	private void Cancel()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x849FBC", Offset = "0x849FBC", VA = "0x849FBC")]
	private void CancelOnList()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x84A050", Offset = "0x84A050", VA = "0x84A050")]
	private void CancelOnConfirm()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x84A0F8", Offset = "0x84A0F8", VA = "0x84A0F8")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x849FB4", Offset = "0x849FB4", VA = "0x849FB4")]
	public void HideView()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x84998C", Offset = "0x84998C", VA = "0x84998C")]
	private void UpdateBase()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x849A6C", Offset = "0x849A6C", VA = "0x849A6C")]
	private void UpdateList()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x849D84", Offset = "0x849D84", VA = "0x849D84")]
	private void UpdateDesc()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x84A2F8", Offset = "0x84A2F8", VA = "0x84A2F8")]
	private void UpdatePrice()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x84931C", Offset = "0x84931C", VA = "0x84931C")]
	public void Select()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x8494C4", Offset = "0x8494C4", VA = "0x8494C4")]
	public void ChangeOption(bool isLeft)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x84A328", Offset = "0x84A328", VA = "0x84A328")]
	private void ChangeOptionOnBase(bool isLeft)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x84A354", Offset = "0x84A354", VA = "0x84A354")]
	private void ChangeOptionOnList(bool isLeft)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x84A168", Offset = "0x84A168", VA = "0x84A168")]
	private void UpdateCursorPosition(GameObject cursor)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x84A3F8", Offset = "0x84A3F8", VA = "0x84A3F8")]
	public TransporterMenuManager()
	{
	}
}
[Token(Token = "0x2000071")]
public class TutorialManager : MonoBehaviour
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject tutorialView;

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x104ADF4", Offset = "0x104ADF4", VA = "0x104ADF4")]
	public void ViewVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x104AE2C", Offset = "0x104AE2C", VA = "0x104AE2C")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x2000072")]
public class ChestSoundEvent : CommonBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip openSE;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x865B30", Offset = "0x865B30", VA = "0x865B30")]
	private void Start()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x865B88", Offset = "0x865B88", VA = "0x865B88")]
	public void OpenSE()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x865B90", Offset = "0x865B90", VA = "0x865B90")]
	private void PlaySE(AudioClip clip)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x865BC8", Offset = "0x865BC8", VA = "0x865BC8")]
	public ChestSoundEvent()
	{
	}
}
[Token(Token = "0x2000073")]
public class CommonBehaviour : MonoBehaviour
{
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF4C", Offset = "0x4CBF4C")]
	private sealed class <DelayMethod>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x865CBC", Offset = "0x865CBC", VA = "0x865CBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x865D2C", Offset = "0x865D2C", VA = "0x865D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x865BD0", Offset = "0x865BD0", VA = "0x865BD0")]
		[DebuggerHidden]
		public <DelayMethod>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x865BFC", Offset = "0x865BFC", VA = "0x865BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x865C00", Offset = "0x865C00", VA = "0x865C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x865CC4", Offset = "0x865CC4", VA = "0x865CC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x84C57C", Offset = "0x84C57C", VA = "0x84C57C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D379C", Offset = "0x4D379C")]
	public IEnumerator DelayMethod(float waitTime, Action action)
	{
		return null;
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x84CCE0", Offset = "0x84CCE0", VA = "0x84CCE0")]
	public CommonBehaviour()
	{
	}
}
[Token(Token = "0x2000074")]
public class ButtonManager : CommonBehaviour
{
	[Token(Token = "0x200028B")]
	public enum ButtonType
	{
		[Token(Token = "0x4000BA3")]
		Up,
		[Token(Token = "0x4000BA4")]
		Left,
		[Token(Token = "0x4000BA5")]
		Right,
		[Token(Token = "0x4000BA6")]
		Down,
		[Token(Token = "0x4000BA7")]
		A,
		[Token(Token = "0x4000BA8")]
		B
	}

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ButtonType buttonType;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x861670", Offset = "0x861670", VA = "0x861670")]
	public void OnPointerDown()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x861804", Offset = "0x861804", VA = "0x861804")]
	public void OnPointerUp()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x861980", Offset = "0x861980", VA = "0x861980")]
	public ButtonManager()
	{
	}
}
[Token(Token = "0x2000075")]
public class ControllerBase : CommonBehaviour
{
	[Token(Token = "0x200028C")]
	public enum DIRECTION
	{
		[Token(Token = "0x4000BAA")]
		LEFT,
		[Token(Token = "0x4000BAB")]
		RIGHT,
		[Token(Token = "0x4000BAC")]
		UP,
		[Token(Token = "0x4000BAD")]
		DOWN,
		[Token(Token = "0x4000BAE")]
		NONE
	}

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool usingCrossKey;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool usingMobileCrossKey;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x85D838", Offset = "0x85D838", VA = "0x85D838")]
	public DIRECTION GetCrossKeyDirection()
	{
		return default(DIRECTION);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x84EDC0", Offset = "0x84EDC0", VA = "0x84EDC0")]
	public bool UseCrossKey(bool forMenu)
	{
		return default(bool);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x866C40", Offset = "0x866C40", VA = "0x866C40")]
	public bool NotUseCrossKey()
	{
		return default(bool);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x866548", Offset = "0x866548", VA = "0x866548")]
	public bool UseMobileCrossKey()
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x866CF8", Offset = "0x866CF8", VA = "0x866CF8")]
	public bool NotUseMobileCrossKey()
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x8663E4", Offset = "0x8663E4", VA = "0x8663E4")]
	private bool UseJoystick()
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x866930", Offset = "0x866930", VA = "0x866930")]
	private DIRECTION GetTouchPadDirection()
	{
		return default(DIRECTION);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x86648C", Offset = "0x86648C", VA = "0x86648C")]
	private DIRECTION GetJoystickDirection()
	{
		return default(DIRECTION);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x866A1C", Offset = "0x866A1C", VA = "0x866A1C")]
	private bool UseOculusTouchDirection()
	{
		return default(bool);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x8666F8", Offset = "0x8666F8", VA = "0x8666F8")]
	private DIRECTION GetOculusTouchDirection()
	{
		return default(DIRECTION);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x86662C", Offset = "0x86662C", VA = "0x86662C")]
	private DIRECTION GetMobileCrossKeyDirection()
	{
		return default(DIRECTION);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x84EF60", Offset = "0x84EF60", VA = "0x84EF60")]
	public bool KeyDownDecide()
	{
		return default(bool);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x84F208", Offset = "0x84F208", VA = "0x84F208")]
	public bool KeyDownCancel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x8663DC", Offset = "0x8663DC", VA = "0x8663DC")]
	public ControllerBase()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x866E68", Offset = "0x866E68", VA = "0x866E68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3800", Offset = "0x4D3800")]
	private void <UseCrossKey>b__4_0()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x866E70", Offset = "0x866E70", VA = "0x866E70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3810", Offset = "0x4D3810")]
	private void <UseCrossKey>b__4_1()
	{
	}
}
[Token(Token = "0x2000076")]
public class ControllerManager : CommonBehaviour
{
	[Token(Token = "0x200028D")]
	public enum TYPE
	{
		[Token(Token = "0x4000BB0")]
		MOVE,
		[Token(Token = "0x4000BB1")]
		SELECT,
		[Token(Token = "0x4000BB2")]
		BATTLE_SELECT,
		[Token(Token = "0x4000BB3")]
		PROGRESS,
		[Token(Token = "0x4000BB4")]
		OPENING_SELECT,
		[Token(Token = "0x4000BB5")]
		CONFIRM,
		[Token(Token = "0x4000BB6")]
		FIELD_SELECT,
		[Token(Token = "0x4000BB7")]
		FIELD_SELECTED,
		[Token(Token = "0x4000BB8")]
		NONE
	}

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TYPE currentType;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool canEncount;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool canBeginEvent;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int stepCount;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool pushedUp;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool pushedDown;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool pushedLeft;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public static bool pushedRight;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool pushedA;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool pushedB;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x866E78", Offset = "0x866E78", VA = "0x866E78")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x866D90", Offset = "0x866D90", VA = "0x866D90")]
	public static bool PushedA()
	{
		return default(bool);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x866DFC", Offset = "0x866DFC", VA = "0x866DFC")]
	public static bool PushedB()
	{
		return default(bool);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x866F38", Offset = "0x866F38", VA = "0x866F38")]
	public ControllerManager()
	{
	}
}
[Token(Token = "0x2000077")]
public class MoveSceneManager : CommonBehaviour
{
	[Token(Token = "0x200028E")]
	public enum SceneName
	{
		[Token(Token = "0x4000BBA")]
		None,
		[Token(Token = "0x4000BBB")]
		Opening,
		[Token(Token = "0x4000BBC")]
		InCastle,
		[Token(Token = "0x4000BBD")]
		CastleArea,
		[Token(Token = "0x4000BBE")]
		Temple,
		[Token(Token = "0x4000BBF")]
		FirstVillage,
		[Token(Token = "0x4000BC0")]
		TempleValley,
		[Token(Token = "0x4000BC1")]
		FirstTown,
		[Token(Token = "0x4000BC2")]
		ValleyToCave,
		[Token(Token = "0x4000BC3")]
		FirstValley,
		[Token(Token = "0x4000BC4")]
		FirstCave,
		[Token(Token = "0x4000BC5")]
		WallCity,
		[Token(Token = "0x4000BC6")]
		CaveToSnow,
		[Token(Token = "0x4000BC7")]
		SnowArea,
		[Token(Token = "0x4000BC8")]
		SnowVillage,
		[Token(Token = "0x4000BC9")]
		IceCave,
		[Token(Token = "0x4000BCA")]
		EvilValley,
		[Token(Token = "0x4000BCB")]
		InEvilCastleLast,
		[Token(Token = "0x4000BCC")]
		TheEnd,
		[Token(Token = "0x4000BCD")]
		StaffRoll,
		[Token(Token = "0x4000BCE")]
		Battle,
		[Token(Token = "0x4000BCF")]
		BattleInCave,
		[Token(Token = "0x4000BD0")]
		BattleInSnow,
		[Token(Token = "0x4000BD1")]
		BattleInIceCave,
		[Token(Token = "0x4000BD2")]
		BattleInEvil,
		[Token(Token = "0x4000BD3")]
		BattleInEvilCastle,
		[Token(Token = "0x4000BD4")]
		Result
	}

	[Token(Token = "0x200028F")]
	public struct PreloadedScene
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SceneName sceneName;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncOperation async;

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x533588", Offset = "0x533588", VA = "0x533588")]
		public PreloadedScene(SceneName sceneName, AsyncOperation async)
		{
		}
	}

	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF5C", Offset = "0x4CBF5C")]
	private sealed class <>c__DisplayClass60_0
	{
		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MoveSceneManager <>4__this;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool wasDead;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool shouldShowTitle;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SceneName sceneName;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x8680AC", Offset = "0x8680AC", VA = "0x8680AC")]
		public <>c__DisplayClass60_0()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x8680B4", Offset = "0x8680B4", VA = "0x8680B4")]
		internal void <ManualStart>b__0()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x8682FC", Offset = "0x8682FC", VA = "0x8682FC")]
		internal void <ManualStart>b__1()
		{
		}
	}

	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF6C", Offset = "0x4CBF6C")]
	private sealed class <ResetCurrentScene>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveSceneManager <>4__this;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool needToShowMessage;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action action;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <needToWait>5__2;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Scene <currentScene>5__3;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SceneName <currentSceneName>5__4;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<SceneName> <absPreloadSceneNames>5__5;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<AsyncOperation> <asyncs>5__6;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<SceneName> <unloadSceneNames>5__7;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SceneName[] <preloadSceneNames>5__8;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SceneName <battleSceneName>5__9;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AsyncOperation <unloadAsync>5__10;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AsyncOperation>.Enumerator <>7__wrap10;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x86C00C", Offset = "0x86C00C", VA = "0x86C00C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0x86C07C", Offset = "0x86C07C", VA = "0x86C07C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x86A918", Offset = "0x86A918", VA = "0x86A918")]
		[DebuggerHidden]
		public <ResetCurrentScene>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x86A944", Offset = "0x86A944", VA = "0x86A944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x86A9B8", Offset = "0x86A9B8", VA = "0x86A9B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x86A960", Offset = "0x86A960", VA = "0x86A960")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x86C014", Offset = "0x86C014", VA = "0x86C014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF7C", Offset = "0x4CBF7C")]
	private sealed class <>c__DisplayClass66_0
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MoveSceneManager <>4__this;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fadeInDuration;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x86832C", Offset = "0x86832C", VA = "0x86832C")]
		public <>c__DisplayClass66_0()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x868334", Offset = "0x868334", VA = "0x868334")]
		internal void <BeginToFadeInAtGoodTiming>b__0()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x8684C4", Offset = "0x8684C4", VA = "0x8684C4")]
		internal void <BeginToFadeInAtGoodTiming>b__1()
		{
		}
	}

	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF8C", Offset = "0x4CBF8C")]
	private sealed class <>c__DisplayClass80_0
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject preloadedRoot;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject currentRoot;

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x8687C0", Offset = "0x8687C0", VA = "0x8687C0")]
		public <>c__DisplayClass80_0()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x8687C8", Offset = "0x8687C8", VA = "0x8687C8")]
		internal void <DoAfterFadeOut>b__0()
		{
		}
	}

	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBF9C", Offset = "0x4CBF9C")]
	private sealed class <DoAfterFadeOut>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveSceneManager <>4__this;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass80_0 <>8__1;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Scene <currentScene>5__2;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<AsyncOperation>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AsyncOperation <async>5__4;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0x86A8A0", Offset = "0x86A8A0", VA = "0x86A8A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x86A910", Offset = "0x86A910", VA = "0x86A910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x869D5C", Offset = "0x869D5C", VA = "0x869D5C")]
		[DebuggerHidden]
		public <DoAfterFadeOut>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x869D88", Offset = "0x869D88", VA = "0x869D88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x869DFC", Offset = "0x869DFC", VA = "0x869DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x869DA4", Offset = "0x869DA4", VA = "0x869DA4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x86A8A8", Offset = "0x86A8A8", VA = "0x86A8A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBFAC", Offset = "0x4CBFAC")]
	private sealed class <>c__DisplayClass89_0
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MoveSceneManager <>4__this;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color color;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__7;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__6;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action <>9__5;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__4;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__3;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action <>9__2;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action <>9__1;

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x8688DC", Offset = "0x8688DC", VA = "0x8688DC")]
		public <>c__DisplayClass89_0()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x8688E4", Offset = "0x8688E4", VA = "0x8688E4")]
		internal void <FlashEffect>b__0()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x8689E8", Offset = "0x8689E8", VA = "0x8689E8")]
		internal void <FlashEffect>b__1()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x868B0C", Offset = "0x868B0C", VA = "0x868B0C")]
		internal void <FlashEffect>b__2()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x868C10", Offset = "0x868C10", VA = "0x868C10")]
		internal void <FlashEffect>b__3()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x868D34", Offset = "0x868D34", VA = "0x868D34")]
		internal void <FlashEffect>b__4()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x868E38", Offset = "0x868E38", VA = "0x868E38")]
		internal void <FlashEffect>b__5()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x868F5C", Offset = "0x868F5C", VA = "0x868F5C")]
		internal void <FlashEffect>b__6()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x869060", Offset = "0x869060", VA = "0x869060")]
		internal void <FlashEffect>b__7()
		{
		}
	}

	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBFBC", Offset = "0x4CBFBC")]
	private sealed class <>c__DisplayClass90_0
	{
		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MoveSceneManager <>4__this;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 defaultPosition;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 distance;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__8;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action <>9__7;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__6;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__5;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action <>9__4;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action <>9__3;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action <>9__2;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action <>9__1;

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x869128", Offset = "0x869128", VA = "0x869128")]
		public <>c__DisplayClass90_0()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x869130", Offset = "0x869130", VA = "0x869130")]
		internal void <ZoomInOutEffect>b__0()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x869268", Offset = "0x869268", VA = "0x869268")]
		internal void <ZoomInOutEffect>b__1()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x869418", Offset = "0x869418", VA = "0x869418")]
		internal void <ZoomInOutEffect>b__2()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x869550", Offset = "0x869550", VA = "0x869550")]
		internal void <ZoomInOutEffect>b__3()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x869700", Offset = "0x869700", VA = "0x869700")]
		internal void <ZoomInOutEffect>b__4()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x869838", Offset = "0x869838", VA = "0x869838")]
		internal void <ZoomInOutEffect>b__5()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x8699E8", Offset = "0x8699E8", VA = "0x8699E8")]
		internal void <ZoomInOutEffect>b__6()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x869B20", Offset = "0x869B20", VA = "0x869B20")]
		internal void <ZoomInOutEffect>b__7()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x869CEC", Offset = "0x869CEC", VA = "0x869CEC")]
		internal void <ZoomInOutEffect>b__8()
		{
		}
	}

	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBFCC", Offset = "0x4CBFCC")]
	private sealed class <>c__DisplayClass105_0
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SceneName sceneName;

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x867FEC", Offset = "0x867FEC", VA = "0x867FEC")]
		public <>c__DisplayClass105_0()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x867FF4", Offset = "0x867FF4", VA = "0x867FF4")]
		internal void <MoveScene>b__0()
		{
		}
	}

	[Token(Token = "0x40003A4")]
	public const float DefaultEyeHeight = 1.95f;

	[Token(Token = "0x40003A5")]
	public const float EyeHeight = 1.95f;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 CameraPosition;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 CameraEulerAngles;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 ReturnPosition;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static Vector3 ReturnEulerAngles;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static SceneName ReturnSceneName;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static SceneName ReviveSceneName;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float alpha;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float encountAlpha;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool needToFadeIn;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool needToWhiteFadeIn;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool needToFadeOut;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool needToEncountFadeOut;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool needToSlowWhiteFadeOut;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool endedFadeIn;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool didFadeIn;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool endedWhiteFadeIn;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool endedFadeOut;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool endedEncountFadeOut;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool endedSlowWhiteFadeOut;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	private bool loaded;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool wasBattle;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private static bool decidedNewGame;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private static bool shouldShowLoading;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject attention;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isEncount;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static ControllerManager.TYPE prevType;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public GameObject centerEyeAnchor;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject trackingSpace;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject blackOut;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject whiteOutBase;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject loadingCanvasWrapper;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject blackOutForLoad;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject messageView;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshPro messageText;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public AudioSource seAudioSource;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public AudioClip moveSE;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public AudioClip encountSE;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject sceneScriptsObject;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject infoCanvas;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static List<PreloadedScene> preloadedScenes;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PreloadedScene preloadedSceneToMove;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private SceneName nextSceneName;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isPreloading;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	public bool isPreloaded;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int currentLoadSpan;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private DateTime beginLoadTime;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int currentLoadDotCount;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x720824", Offset = "0x720824", VA = "0x720824")]
	public static float EyeHeightForSystem(float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x720840", Offset = "0x720840", VA = "0x720840")]
	public static SceneName GetSceneNameFromString(string sceneNameString)
	{
		return default(SceneName);
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x720E24", Offset = "0x720E24", VA = "0x720E24")]
	private void DeleteAsync()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x720EB0", Offset = "0x720EB0", VA = "0x720EB0")]
	public static bool IsBattle()
	{
		return default(bool);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x70C5AC", Offset = "0x70C5AC", VA = "0x70C5AC")]
	public static bool IsInEvilArea()
	{
		return default(bool);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x720F40", Offset = "0x720F40", VA = "0x720F40")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x720F48", Offset = "0x720F48", VA = "0x720F48")]
	public void Start()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x721534", Offset = "0x721534", VA = "0x721534")]
	private void ResetOVRManager()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x721004", Offset = "0x721004", VA = "0x721004")]
	public void ManualStart(bool forceLoad = false, bool shouldShowTitle = true)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x721E60", Offset = "0x721E60", VA = "0x721E60")]
	public static string SceneTitleFromString(string sceneNameString, int dataNum = -1)
	{
		return null;
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x7215F8", Offset = "0x7215F8", VA = "0x7215F8")]
	public static string SceneTitleFromSceneName(SceneName sceneName, int dataNum = -1)
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x721ED8", Offset = "0x721ED8", VA = "0x721ED8")]
	private void UpdateLoadingMessage()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x721DA8", Offset = "0x721DA8", VA = "0x721DA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3820", Offset = "0x4D3820")]
	private IEnumerator ResetCurrentScene(bool needToShowMessage, Action action)
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x722038", Offset = "0x722038", VA = "0x722038")]
	private AsyncOperation UnloadOpeningSceneIfUnused(Scene currentScene)
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x72215C", Offset = "0x72215C", VA = "0x72215C")]
	private void BeginToFadeInAtGoodTiming()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x7222DC", Offset = "0x7222DC", VA = "0x7222DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x722480", Offset = "0x722480", VA = "0x722480")]
	public void PlayMoveSound(bool stopBGM = true)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x72252C", Offset = "0x72252C", VA = "0x72252C")]
	public void BeginToFadeIn()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x722550", Offset = "0x722550", VA = "0x722550")]
	public void BeginToFadeOut()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x722620", Offset = "0x722620", VA = "0x722620")]
	public void BeginToSlowWhiteFadeOut()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x722640", Offset = "0x722640", VA = "0x722640")]
	public void BeginToWhiteFadeIn()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x72265C", Offset = "0x72265C", VA = "0x72265C")]
	public void BeginToEncountFadeOut()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x72267C", Offset = "0x72267C", VA = "0x72267C")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x722768", Offset = "0x722768", VA = "0x722768")]
	private void WhiteFadeIn()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x722854", Offset = "0x722854", VA = "0x722854")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x7229C0", Offset = "0x7229C0", VA = "0x7229C0")]
	private void EncountFadeOut()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x722AC4", Offset = "0x722AC4", VA = "0x722AC4")]
	private void SlowWhiteFadeOut()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x722BB8", Offset = "0x722BB8", VA = "0x722BB8", Slot = "4")]
	public virtual void DoAfterFadeIn()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x722BC4", Offset = "0x722BC4", VA = "0x722BC4", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3884", Offset = "0x4D3884")]
	public virtual IEnumerator DoAfterFadeOut()
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x722C38", Offset = "0x722C38", VA = "0x722C38")]
	private AsyncOperation UnloadScene(Scene scene)
	{
		return null;
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x722318", Offset = "0x722318", VA = "0x722318")]
	public void FadeInIfNeeded()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x7223D4", Offset = "0x7223D4", VA = "0x7223D4")]
	public void WhiteFadeInIfNeeded()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x722354", Offset = "0x722354", VA = "0x722354")]
	public void FadeOutIfNeeded()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x722448", Offset = "0x722448", VA = "0x722448")]
	public void EncountFadeOutIfNeeded()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x722410", Offset = "0x722410", VA = "0x722410")]
	public void SlowWhiteFadeOutIfNeeded()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x722E40", Offset = "0x722E40", VA = "0x722E40")]
	public void PlayEncountSound()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x722EDC", Offset = "0x722EDC", VA = "0x722EDC")]
	public void StopEncountSound()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x722F0C", Offset = "0x722F0C", VA = "0x722F0C")]
	private void FlashEffect(Color color)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x72313C", Offset = "0x72313C", VA = "0x72313C")]
	private void ZoomInOutEffect()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x7233CC", Offset = "0x7233CC", VA = "0x7233CC")]
	private void FlashEffectOnce(Color color)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x723070", Offset = "0x723070", VA = "0x723070")]
	private void ShowFlash(Color color)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x723494", Offset = "0x723494", VA = "0x723494")]
	private void HideFlash()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x723584", Offset = "0x723584", VA = "0x723584")]
	public void YellowFlashEffect()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x719220", Offset = "0x719220", VA = "0x719220")]
	public void BlueFlashEffect()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x719280", Offset = "0x719280", VA = "0x719280")]
	public void GreenFlashEffect()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x7235E4", Offset = "0x7235E4", VA = "0x7235E4")]
	public void PurpleFlashEffect()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x7191C8", Offset = "0x7191C8", VA = "0x7191C8")]
	public void WhiteFlashEffect()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x71CDF8", Offset = "0x71CDF8", VA = "0x71CDF8")]
	public void WhiteFlashEffectOnce()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x71CE50", Offset = "0x71CE50", VA = "0x71CE50")]
	public void PoisonFlashEffect()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x723644", Offset = "0x723644", VA = "0x723644")]
	public void MoveEffect(bool shouldStopBGM = true)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x7236C4", Offset = "0x7236C4", VA = "0x7236C4")]
	private AsyncOperation PreloadNextScene(SceneName sceneName)
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x7238F0", Offset = "0x7238F0", VA = "0x7238F0")]
	private void FirePreloadedScene()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x7238F4", Offset = "0x7238F4", VA = "0x7238F4")]
	private void UpdateEncountType()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x723AF8", Offset = "0x723AF8", VA = "0x723AF8")]
	private void MoveScene(SceneName sceneName)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x723D98", Offset = "0x723D98", VA = "0x723D98")]
	public void MoveToOpening()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x723E90", Offset = "0x723E90", VA = "0x723E90")]
	public void MoveToResult()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x723F88", Offset = "0x723F88", VA = "0x723F88")]
	public void DecideNewGame()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x7240BC", Offset = "0x7240BC", VA = "0x7240BC")]
	public void DecideContinue(string sceneNameString)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x7241F8", Offset = "0x7241F8", VA = "0x7241F8")]
	public AsyncOperation PreloadReturn()
	{
		return null;
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x724260", Offset = "0x724260", VA = "0x724260")]
	private SceneName BattleSceneNameForActiveScene()
	{
		return default(SceneName);
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x71C0A0", Offset = "0x71C0A0", VA = "0x71C0A0")]
	public void BeginBattle(Vector3 position, Vector3 eulerAngles)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x724304", Offset = "0x724304", VA = "0x724304")]
	public void EndBattle()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x724490", Offset = "0x724490", VA = "0x724490")]
	public void WakeUpAtReviveScene(bool withoutMove = false)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x724990", Offset = "0x724990", VA = "0x724990")]
	public void DeadBattle()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x724998", Offset = "0x724998", VA = "0x724998")]
	public void WakeUpAtHotel(bool isSnowVillage = false)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x724C14", Offset = "0x724C14", VA = "0x724C14")]
	private void RecenterPose()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x724EE8", Offset = "0x724EE8", VA = "0x724EE8")]
	public void EnterTemple()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x724884", Offset = "0x724884", VA = "0x724884")]
	public void WakeUpAtInCastle(bool withoutMove = false)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x724FDC", Offset = "0x724FDC", VA = "0x724FDC")]
	public void ExitInCastle()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x71F544", Offset = "0x71F544", VA = "0x71F544")]
	public void To1FInCastle()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x71F638", Offset = "0x71F638", VA = "0x71F638")]
	public void To2FInCastle()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x7250DC", Offset = "0x7250DC", VA = "0x7250DC")]
	private void MoveInSameScene()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x725168", Offset = "0x725168", VA = "0x725168")]
	public void EnterInCastleByTransporter(GameObject attention)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x72526C", Offset = "0x72526C", VA = "0x72526C")]
	public void EnterInCastle()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x725360", Offset = "0x725360", VA = "0x725360")]
	public void EnterCastleAreaFromS()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x72545C", Offset = "0x72545C", VA = "0x72545C")]
	public void EnterCastleAreaFromE()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x72555C", Offset = "0x72555C", VA = "0x72555C")]
	public void EnterTempleValleyFromW()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x724558", Offset = "0x724558", VA = "0x724558")]
	public void WakeUpAtFirstVillage(bool withoutMove = false)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x725658", Offset = "0x725658", VA = "0x725658")]
	public void EnterFirstVillageByTransporter(GameObject attention)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x72575C", Offset = "0x72575C", VA = "0x72575C")]
	public void EnterFirstVillageFromS()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x7258A8", Offset = "0x7258A8", VA = "0x7258A8")]
	public void EnterFirstVillageFromN()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x7259A4", Offset = "0x7259A4", VA = "0x7259A4")]
	public void EnterFirstCave()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x725AA0", Offset = "0x725AA0", VA = "0x725AA0")]
	public void ExitFirstCave()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x725BA0", Offset = "0x725BA0", VA = "0x725BA0")]
	public void EnterEvilValleyFromTemple()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x725CC8", Offset = "0x725CC8", VA = "0x725CC8")]
	public void ExitEvilValleyToTemple()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x724668", Offset = "0x724668", VA = "0x724668")]
	public void WakeUpAtFirstTown(bool withoutMove = false)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x725DEC", Offset = "0x725DEC", VA = "0x725DEC")]
	public void EnterFirstTownByTransporter(GameObject attention)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x725EF0", Offset = "0x725EF0", VA = "0x725EF0")]
	public void EnterTownFromS()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x72603C", Offset = "0x72603C", VA = "0x72603C")]
	public void ExitTownFromS()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x726138", Offset = "0x726138", VA = "0x726138")]
	public void EnterFirstTownFromCave()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x726238", Offset = "0x726238", VA = "0x726238")]
	public void ExitFirstTownToCave()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x726334", Offset = "0x726334", VA = "0x726334")]
	public void EnterTownFromNW()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x726430", Offset = "0x726430", VA = "0x726430")]
	public void ExitTownFromNW()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x724774", Offset = "0x724774", VA = "0x724774")]
	public void WakeUpAtWallCity(bool withoutMove = false)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x72652C", Offset = "0x72652C", VA = "0x72652C")]
	public void EnterWallCityByTransporter(GameObject attention)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x726638", Offset = "0x726638", VA = "0x726638")]
	public void EnterWallCityFromS()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x72678C", Offset = "0x72678C", VA = "0x72678C")]
	public void ExitWallCityFromS()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x726888", Offset = "0x726888", VA = "0x726888")]
	public void EnterWallCityFromN()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x726980", Offset = "0x726980", VA = "0x726980")]
	public void ExitWallCityFromN()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x726A7C", Offset = "0x726A7C", VA = "0x726A7C")]
	public void EnterSnowAreaFromS()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x726B78", Offset = "0x726B78", VA = "0x726B78")]
	public void ExitSnowAreaFromS()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x724B00", Offset = "0x724B00", VA = "0x724B00")]
	public void WakeUpAtSnowVillage(bool withoutMove = false)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x726C70", Offset = "0x726C70", VA = "0x726C70")]
	public void EnterSnowVillageByTransporter(GameObject attention)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x726D80", Offset = "0x726D80", VA = "0x726D80")]
	public void EnterSnowVillage()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x726EB0", Offset = "0x726EB0", VA = "0x726EB0")]
	public void ExitSnowVillage()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x726FA8", Offset = "0x726FA8", VA = "0x726FA8")]
	public void EnterIceCaveByTransporter(GameObject attention)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x7270B4", Offset = "0x7270B4", VA = "0x7270B4")]
	public void EnterIceCave()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x7271B0", Offset = "0x7271B0", VA = "0x7271B0")]
	public void ExitIceCave([Optional] GameObject attention)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x720240", Offset = "0x720240", VA = "0x720240")]
	public void UpB1InIceCave()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x720438", Offset = "0x720438", VA = "0x720438")]
	public void UpB2InIceCave()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x72033C", Offset = "0x72033C", VA = "0x72033C")]
	public void DownB2InIceCave()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x720530", Offset = "0x720530", VA = "0x720530")]
	public void DownB3InIceCave()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x72062C", Offset = "0x72062C", VA = "0x72062C")]
	public void ToFrontOfGateInIceCave()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x720724", Offset = "0x720724", VA = "0x720724")]
	public void ToDeepestInIceCave()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x7272B8", Offset = "0x7272B8", VA = "0x7272B8")]
	public void EnterEvilCastleByTransporter(GameObject attention)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x7273C0", Offset = "0x7273C0", VA = "0x7273C0")]
	public void EnterInEvilCastleLast()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x7274B8", Offset = "0x7274B8", VA = "0x7274B8")]
	public void ExitInEvilCastle()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x71FFD0", Offset = "0x71FFD0", VA = "0x71FFD0")]
	public void Down2FInEC()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x71FCE4", Offset = "0x71FCE4", VA = "0x71FCE4")]
	public void Down1FCenterInEC()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x71F91C", Offset = "0x71F91C", VA = "0x71F91C")]
	public void Up2FCenterInEC()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x71FDD8", Offset = "0x71FDD8", VA = "0x71FDD8")]
	public void Down1FLeftInEC()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x71FA0C", Offset = "0x71FA0C", VA = "0x71FA0C")]
	public void Up2FLeftInEC()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x71FED4", Offset = "0x71FED4", VA = "0x71FED4")]
	public void Down1FRightInEC()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x71FB00", Offset = "0x71FB00", VA = "0x71FB00")]
	public void Up2FRightInEC()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x71FBF4", Offset = "0x71FBF4", VA = "0x71FBF4")]
	public void Up3FInEC()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x7275B0", Offset = "0x7275B0", VA = "0x7275B0")]
	public void MoveToTheEnd()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x7276A0", Offset = "0x7276A0", VA = "0x7276A0")]
	public void MoveToStaffRoll()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x727790", Offset = "0x727790", VA = "0x727790")]
	public MoveSceneManager()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x727960", Offset = "0x727960", VA = "0x727960")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D38E8", Offset = "0x4D38E8")]
	private void <FlashEffectOnce>b__91_0()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x727964", Offset = "0x727964", VA = "0x727964")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D38F8", Offset = "0x4D38F8")]
	private void <BeginBattle>b__112_0()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x72798C", Offset = "0x72798C", VA = "0x72798C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3908", Offset = "0x4D3908")]
	private void <MoveInSameScene>b__123_0()
	{
	}
}
[Token(Token = "0x2000078")]
public class OculusController : ControllerBase
{
	[Token(Token = "0x2000298")]
	public enum MoveState
	{
		[Token(Token = "0x4000C0F")]
		STOP,
		[Token(Token = "0x4000C10")]
		FORWARD,
		[Token(Token = "0x4000C11")]
		BACK,
		[Token(Token = "0x4000C12")]
		R_ROTATE,
		[Token(Token = "0x4000C13")]
		L_ROTATE
	}

	[Token(Token = "0x2000299")]
	private enum PosState
	{
		[Token(Token = "0x4000C15")]
		CanMove,
		[Token(Token = "0x4000C16")]
		CannotMove,
		[Token(Token = "0x4000C17")]
		CanMoveWithoutEncount
	}

	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBFDC", Offset = "0x4CBFDC")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OculusController <>4__this;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 defaultPosition;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float effectDuration;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x6AFB38", Offset = "0x6AFB38", VA = "0x6AFB38")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x6AFB40", Offset = "0x6AFB40", VA = "0x6AFB40")]
		internal void <CannotMoveEffect>b__0()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x6AFC78", Offset = "0x6AFC78", VA = "0x6AFC78")]
		internal void <CannotMoveEffect>b__1()
		{
		}
	}

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject infoCanvas;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public GameObject centerEyeAnchor;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public GameObject trackingSpace;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public GameObject sweepTester;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip step1SE;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip step2SE;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip cannotMoveSE;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DateTime beginVibrationTimeL;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DateTime beginVibrationTimeR;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource audioSource;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isStep1;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public MoveState moveState;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool effectedCannotMove;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float moveSpeed;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody rb;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int TIME_DEFAULT;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int TIME_OUT;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int timeElapsed;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float accelPoint;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CanvasSoundManager soundManager;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x70662C", Offset = "0x70662C", VA = "0x70662C")]
	private void Start()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x7066FC", Offset = "0x7066FC", VA = "0x7066FC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x706708", Offset = "0x706708", VA = "0x706708")]
	private void Update()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x7069F4", Offset = "0x7069F4", VA = "0x7069F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x706A7C", Offset = "0x706A7C", VA = "0x706A7C")]
	private void MoveOrRotateIfNeeded()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x706930", Offset = "0x706930", VA = "0x706930")]
	private void ControllWithKeyboard()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x706890", Offset = "0x706890", VA = "0x706890")]
	private void BeginMoveOrRotate()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x706BA8", Offset = "0x706BA8", VA = "0x706BA8")]
	private void MoveOrRotate()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x706CC4", Offset = "0x706CC4", VA = "0x706CC4")]
	private void Rotate(bool isRight)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x707360", Offset = "0x707360", VA = "0x707360")]
	public void ResetCameraRigPositionToEyeAnchor()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x706F48", Offset = "0x706F48", VA = "0x706F48")]
	public void Move(bool isForward)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x707FE4", Offset = "0x707FE4", VA = "0x707FE4")]
	private void CannotMoveEffect(bool isForward, float radianY)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x7082AC", Offset = "0x7082AC", VA = "0x7082AC")]
	private void PlayStepSE()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x7083C4", Offset = "0x7083C4", VA = "0x7083C4")]
	public void BeginSweepTester(float radianY, float fixedAngleY, bool isForward)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x70871C", Offset = "0x70871C", VA = "0x70871C")]
	public void EndSweepTester()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x707574", Offset = "0x707574", VA = "0x707574")]
	private PosState GetPosState(bool isForward, float radianY, float fixedAngleY)
	{
		return default(PosState);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x7082F0", Offset = "0x7082F0", VA = "0x7082F0")]
	private void Encount()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x708358", Offset = "0x708358", VA = "0x708358")]
	private void PlaySE(AudioClip clip)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x708390", Offset = "0x708390", VA = "0x708390")]
	public void BeginVibration(float vibrationValue = 0.25f)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x7088B4", Offset = "0x7088B4", VA = "0x7088B4")]
	public void BeginVibrationL(float vibrationValue = 0.25f)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x708AA4", Offset = "0x708AA4", VA = "0x708AA4")]
	public void EndVibrationL()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x7089AC", Offset = "0x7089AC", VA = "0x7089AC")]
	private void BeginVibrationR(float vibrationValue = 0.25f)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x708B70", Offset = "0x708B70", VA = "0x708B70")]
	private void EndVibrationR()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x708C3C", Offset = "0x708C3C", VA = "0x708C3C")]
	public OculusController()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x708D18", Offset = "0x708D18", VA = "0x708D18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3918", Offset = "0x4D3918")]
	private void <BeginVibrationL>b__42_0()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x708D1C", Offset = "0x708D1C", VA = "0x708D1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3928", Offset = "0x4D3928")]
	private void <BeginVibrationR>b__44_0()
	{
	}
}
[Token(Token = "0x2000079")]
public class PlayAreaManager : CommonBehaviour
{
	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject camera;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject trackingSpace;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject dummyBody;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 prevPosBeforeFocusLost;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float PrevPosInitialY;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool skipCollisionReflection;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x829D30", Offset = "0x829D30", VA = "0x829D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x829D84", Offset = "0x829D84", VA = "0x829D84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x829E0C", Offset = "0x829E0C", VA = "0x829E0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x829F08", Offset = "0x829F08", VA = "0x829F08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x829FD4", Offset = "0x829FD4", VA = "0x829FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x82A22C", Offset = "0x82A22C", VA = "0x82A22C")]
	private void VrFocusAcquired()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x82A3FC", Offset = "0x82A3FC", VA = "0x82A3FC")]
	private void VrFocusLost()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x82A49C", Offset = "0x82A49C", VA = "0x82A49C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x82A4A0", Offset = "0x82A4A0", VA = "0x82A4A0")]
	private void MoveOpositSideFromContactPoint(Collision collision)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x82A8D0", Offset = "0x82A8D0", VA = "0x82A8D0")]
	public void ResetPlayerHeihgt()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x829FF8", Offset = "0x829FF8", VA = "0x829FF8")]
	private void AdjustPlayerHeightWhenOutOfRange()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x82A1AC", Offset = "0x82A1AC", VA = "0x82A1AC")]
	private void AdjustBodyAngles()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x82A9F4", Offset = "0x82A9F4", VA = "0x82A9F4")]
	public PlayAreaManager()
	{
	}
}
[Token(Token = "0x200007A")]
public class VRButtonManager : CommonBehaviour
{
	[Token(Token = "0x6000545")]
	[Address(RVA = "0x104AE34", Offset = "0x104AE34", VA = "0x104AE34")]
	public VRButtonManager()
	{
	}
}
[Token(Token = "0x200007B")]
public class BedEvent : EventBase
{
	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject sceneScriptsObject;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private new GameObject camera;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip sleepAudioClip;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AudioClip baseAudioClip;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x85DC2C", Offset = "0x85DC2C", VA = "0x85DC2C")]
	private new void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x85DCE4", Offset = "0x85DCE4", VA = "0x85DCE4", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x85DD90", Offset = "0x85DD90", VA = "0x85DD90")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x85DE08", Offset = "0x85DE08", VA = "0x85DE08")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x85DE80", Offset = "0x85DE80", VA = "0x85DE80")]
	private void UpdateHP()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x85DF00", Offset = "0x85DF00", VA = "0x85DF00")]
	private void PlaySleepBGM()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x85DFF4", Offset = "0x85DFF4", VA = "0x85DFF4")]
	private void RestartBGM()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x85E0B0", Offset = "0x85E0B0", VA = "0x85E0B0")]
	public BedEvent()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x85E0B8", Offset = "0x85E0B8", VA = "0x85E0B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3938", Offset = "0x4D3938")]
	private void <BeginEvent>b__5_0()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x85E14C", Offset = "0x85E14C", VA = "0x85E14C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3948", Offset = "0x4D3948")]
	private void <BeginEvent>b__5_1()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x85E264", Offset = "0x85E264", VA = "0x85E264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3958", Offset = "0x4D3958")]
	private void <BeginEvent>b__5_2()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x85E2F8", Offset = "0x85E2F8", VA = "0x85E2F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3968", Offset = "0x4D3968")]
	private void <BeginEvent>b__5_3()
	{
	}
}
[Token(Token = "0x200007C")]
public class EnterCastleAreaFromE : EnterExitBase
{
	[Token(Token = "0x6000552")]
	[Address(RVA = "0x770E20", Offset = "0x770E20", VA = "0x770E20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x770EC4", Offset = "0x770EC4", VA = "0x770EC4")]
	public EnterCastleAreaFromE()
	{
	}
}
[Token(Token = "0x200007D")]
public class EnterCastleAreaFromS : EnterExitBase
{
	[Token(Token = "0x6000554")]
	[Address(RVA = "0x770ED4", Offset = "0x770ED4", VA = "0x770ED4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x770F78", Offset = "0x770F78", VA = "0x770F78")]
	public EnterCastleAreaFromS()
	{
	}
}
[Token(Token = "0x200007E")]
public class EnterInCastle : EnterExitBase
{
	[Token(Token = "0x6000556")]
	[Address(RVA = "0x771200", Offset = "0x771200", VA = "0x771200")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x7712A4", Offset = "0x7712A4", VA = "0x7712A4")]
	public EnterInCastle()
	{
	}
}
[Token(Token = "0x200007F")]
public class EvilGateStoneEvent : MessageEventBase
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject evilGate;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip resonanceSE;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioClip openDimensionSE;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject sceneScriptsObject;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] firstMessages;

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x772DF8", Offset = "0x772DF8", VA = "0x772DF8")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x772E58", Offset = "0x772E58", VA = "0x772E58")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x772EA4", Offset = "0x772EA4", VA = "0x772EA4")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x7731A4", Offset = "0x7731A4", VA = "0x7731A4", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x7731E0", Offset = "0x7731E0", VA = "0x7731E0")]
	private void BeginMessage()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x773214", Offset = "0x773214", VA = "0x773214", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x773368", Offset = "0x773368", VA = "0x773368")]
	private void BeginMoveMessage()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x7733F4", Offset = "0x7733F4", VA = "0x7733F4")]
	private void MoveToEvilValley()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x773500", Offset = "0x773500", VA = "0x773500")]
	private void PlayMoveSE()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x7735BC", Offset = "0x7735BC", VA = "0x7735BC")]
	public EvilGateStoneEvent()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x7735C4", Offset = "0x7735C4", VA = "0x7735C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3978", Offset = "0x4D3978")]
	private void <BeginMoveMessage>b__11_0()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x773744", Offset = "0x773744", VA = "0x773744")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3988", Offset = "0x4D3988")]
	private void <BeginMoveMessage>b__11_1()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x77377C", Offset = "0x77377C", VA = "0x77377C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3998", Offset = "0x4D3998")]
	private void <BeginMoveMessage>b__11_2()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x773814", Offset = "0x773814", VA = "0x773814")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D39A8", Offset = "0x4D39A8")]
	private void <BeginMoveMessage>b__11_3()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x773818", Offset = "0x773818", VA = "0x773818")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D39B8", Offset = "0x4D39B8")]
	private void <MoveToEvilValley>b__12_0()
	{
	}
}
[Token(Token = "0x2000080")]
public class ExitCastleAreaFromE : EnterExitBase
{
	[Token(Token = "0x6000567")]
	[Address(RVA = "0x775DC0", Offset = "0x775DC0", VA = "0x775DC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x775E64", Offset = "0x775E64", VA = "0x775E64")]
	public ExitCastleAreaFromE()
	{
	}
}
[Token(Token = "0x2000081")]
public class ExitCastleAreaFromS : EnterExitBase
{
	[Token(Token = "0x6000569")]
	[Address(RVA = "0x775E6C", Offset = "0x775E6C", VA = "0x775E6C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x775F10", Offset = "0x775F10", VA = "0x775F10")]
	public ExitCastleAreaFromS()
	{
	}
}
[Token(Token = "0x2000082")]
public class ExitInCastle : EnterExitBase
{
	[Token(Token = "0x600056B")]
	[Address(RVA = "0x776278", Offset = "0x776278", VA = "0x776278")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x77631C", Offset = "0x77631C", VA = "0x77631C")]
	public ExitInCastle()
	{
	}
}
[Token(Token = "0x2000083")]
public class FirstGateManEvent : MessageEventBase
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject grillObject;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject innerObject;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool shouldLookAtGate;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool shouldLookAtUser;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float period;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] firstMessages;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] trialMessages;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] openedMessages;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x779D40", Offset = "0x779D40", VA = "0x779D40")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x779D68", Offset = "0x779D68", VA = "0x779D68")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x77A4A4", Offset = "0x77A4A4", VA = "0x77A4A4")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x77A56C", Offset = "0x77A56C", VA = "0x77A56C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x77A6A0", Offset = "0x77A6A0", VA = "0x77A6A0")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x77A744", Offset = "0x77A744", VA = "0x77A744")]
	private void LookAtPositionWithAnim(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x77A618", Offset = "0x77A618", VA = "0x77A618")]
	private void FirstMessage()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x77A9F8", Offset = "0x77A9F8", VA = "0x77A9F8")]
	private void OpenTheGate()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x77AA98", Offset = "0x77AA98", VA = "0x77AA98", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x77AB5C", Offset = "0x77AB5C", VA = "0x77AB5C")]
	private void ToTheEnd()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x77A64C", Offset = "0x77A64C", VA = "0x77A64C")]
	private void AlreadyOpened()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x77ABD4", Offset = "0x77ABD4", VA = "0x77ABD4")]
	private void EndTrial()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x77AC28", Offset = "0x77AC28", VA = "0x77AC28")]
	public FirstGateManEvent()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x77AC38", Offset = "0x77AC38", VA = "0x77AC38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D39C8", Offset = "0x4D39C8")]
	private void <OpenTheGate>b__16_0()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x77AD84", Offset = "0x77AD84", VA = "0x77AD84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D39D8", Offset = "0x4D39D8")]
	private void <OpenTheGate>b__16_1()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x77AE94", Offset = "0x77AE94", VA = "0x77AE94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D39E8", Offset = "0x4D39E8")]
	private void <OpenTheGate>b__16_2()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x77AF30", Offset = "0x77AF30", VA = "0x77AF30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D39F8", Offset = "0x4D39F8")]
	private void <OpenTheGate>b__16_3()
	{
	}
}
[Token(Token = "0x2000084")]
public class ManInCastleEvent : MessageEventBase
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x71AB0C", Offset = "0x71AB0C", VA = "0x71AB0C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x71ABC8", Offset = "0x71ABC8", VA = "0x71ABC8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x71ABEC", Offset = "0x71ABEC", VA = "0x71ABEC")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x71AB3C", Offset = "0x71AB3C", VA = "0x71AB3C")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x71B1AC", Offset = "0x71B1AC", VA = "0x71B1AC")]
	public ManInCastleEvent()
	{
	}
}
[Token(Token = "0x2000085")]
public class MoveInCastle : EnterExitBase
{
	[Token(Token = "0x200029B")]
	public enum MoveType
	{
		[Token(Token = "0x4000C1D")]
		To1F,
		[Token(Token = "0x4000C1E")]
		To2F
	}

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject firstFloorGroupp;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject secondFloorGroupp;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MoveType moveType;

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x71F470", Offset = "0x71F470", VA = "0x71F470")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x71F728", Offset = "0x71F728", VA = "0x71F728")]
	public MoveInCastle()
	{
	}
}
[Token(Token = "0x2000086")]
public class SoldierAtCastleGate2Event : MessageEventBase
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x83C220", Offset = "0x83C220", VA = "0x83C220", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x83C2E8", Offset = "0x83C2E8", VA = "0x83C2E8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x83C310", Offset = "0x83C310", VA = "0x83C310")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x83C254", Offset = "0x83C254", VA = "0x83C254")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x83C908", Offset = "0x83C908", VA = "0x83C908")]
	public SoldierAtCastleGate2Event()
	{
	}
}
[Token(Token = "0x2000087")]
public class SoldierAtCastleGateEvent : MessageEventBase
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x83C910", Offset = "0x83C910", VA = "0x83C910", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x83C9D8", Offset = "0x83C9D8", VA = "0x83C9D8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x83CA00", Offset = "0x83CA00", VA = "0x83CA00")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x83C944", Offset = "0x83C944", VA = "0x83C944")]
	private void Explain()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x83CFF8", Offset = "0x83CFF8", VA = "0x83CFF8")]
	public SoldierAtCastleGateEvent()
	{
	}
}
[Token(Token = "0x2000088")]
public class SoldierAtQueenRoom2Event : MessageEventBase
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x83D000", Offset = "0x83D000", VA = "0x83D000", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x83D0C8", Offset = "0x83D0C8", VA = "0x83D0C8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x83D0F0", Offset = "0x83D0F0", VA = "0x83D0F0")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x83D034", Offset = "0x83D034", VA = "0x83D034")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x83D574", Offset = "0x83D574", VA = "0x83D574")]
	public SoldierAtQueenRoom2Event()
	{
	}
}
[Token(Token = "0x2000089")]
public class SoldierAtQueenRoomEvent : MessageEventBase
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x83D57C", Offset = "0x83D57C", VA = "0x83D57C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x83D644", Offset = "0x83D644", VA = "0x83D644")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x83D66C", Offset = "0x83D66C", VA = "0x83D66C")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x83D5B0", Offset = "0x83D5B0", VA = "0x83D5B0")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x83D9F4", Offset = "0x83D9F4", VA = "0x83D9F4")]
	public SoldierAtQueenRoomEvent()
	{
	}
}
[Token(Token = "0x200008A")]
public class SoldierInTresureRoomEvent : MessageEventBase
{
	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x83E200", Offset = "0x83E200", VA = "0x83E200", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x83E2C8", Offset = "0x83E2C8", VA = "0x83E2C8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x83E2F0", Offset = "0x83E2F0", VA = "0x83E2F0")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x83E234", Offset = "0x83E234", VA = "0x83E234")]
	private void Explain()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x83EDB4", Offset = "0x83EDB4", VA = "0x83EDB4")]
	public SoldierInTresureRoomEvent()
	{
	}
}
[Token(Token = "0x200008B")]
public class WomanInCastleEvent : MessageEventBase
{
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x104C008", Offset = "0x104C008", VA = "0x104C008", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x104C0D0", Offset = "0x104C0D0", VA = "0x104C0D0")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x104C0F8", Offset = "0x104C0F8", VA = "0x104C0F8")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x104C03C", Offset = "0x104C03C", VA = "0x104C03C")]
	private void Explain()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x104C8B0", Offset = "0x104C8B0", VA = "0x104C8B0")]
	public WomanInCastleEvent()
	{
	}
}
[Token(Token = "0x200008C")]
public class CheckThePot : MessageEventBase
{
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBFEC", Offset = "0x4CBFEC")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CheckThePot <>4__this;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] firstMessages;

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x8659B0", Offset = "0x8659B0", VA = "0x8659B0")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x8659C8", Offset = "0x8659C8", VA = "0x8659C8")]
		internal void <GetItem>b__0()
		{
		}
	}

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FlagManager.ItemFlagId itemFlagId;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject itemObject;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Item? item;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isBegin;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string[] beginMessages;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string[] firstMessages;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string[] endingMessages;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string[] itemFullMessages;

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x864DB8", Offset = "0x864DB8", VA = "0x864DB8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x864DE0", Offset = "0x864DE0", VA = "0x864DE0")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x864FBC", Offset = "0x864FBC", VA = "0x864FBC", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x865040", Offset = "0x865040", VA = "0x865040", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x865004", Offset = "0x865004", VA = "0x865004")]
	public void Check()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x8650F0", Offset = "0x8650F0", VA = "0x8650F0")]
	private void GetItem()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x8659B8", Offset = "0x8659B8", VA = "0x8659B8")]
	public CheckThePot()
	{
	}
}
[Token(Token = "0x200008D")]
public class DrinkFromPot : EventBase
{
	[Token(Token = "0x200029D")]
	public enum PotDrinkType
	{
		[Token(Token = "0x4000C22")]
		FullHPMP,
		[Token(Token = "0x4000C23")]
		Damage
	}

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public new GameObject camera;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int drinkType;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x76C708", Offset = "0x76C708", VA = "0x76C708", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x76C834", Offset = "0x76C834", VA = "0x76C834")]
	public void Confirm()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x76C914", Offset = "0x76C914", VA = "0x76C914")]
	private void ConfirmLoop()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x76C9E4", Offset = "0x76C9E4", VA = "0x76C9E4")]
	private void Drink()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x76CB5C", Offset = "0x76CB5C", VA = "0x76CB5C")]
	private void UpdateHP()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x76CBDC", Offset = "0x76CBDC", VA = "0x76CBDC")]
	private void NotDrink()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x76CC84", Offset = "0x76CC84", VA = "0x76CC84")]
	public DrinkFromPot()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x76CC94", Offset = "0x76CC94", VA = "0x76CC94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A08", Offset = "0x4D3A08")]
	private void <Confirm>b__4_0()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x76CD4C", Offset = "0x76CD4C", VA = "0x76CD4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A18", Offset = "0x4D3A18")]
	private void <Confirm>b__4_1()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x76CD50", Offset = "0x76CD50", VA = "0x76CD50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A28", Offset = "0x4D3A28")]
	private void <ConfirmLoop>b__5_0()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x76CD54", Offset = "0x76CD54", VA = "0x76CD54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A38", Offset = "0x4D3A38")]
	private void <Drink>b__6_0()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x76CD60", Offset = "0x76CD60", VA = "0x76CD60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A48", Offset = "0x4D3A48")]
	private void <NotDrink>b__8_0()
	{
	}
}
[Token(Token = "0x200008E")]
public class EnterExitBase : CommonBehaviour
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MoveSceneManager moveSceneManager;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x770F80", Offset = "0x770F80", VA = "0x770F80")]
	public void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x770ECC", Offset = "0x770ECC", VA = "0x770ECC")]
	public EnterExitBase()
	{
	}
}
[Token(Token = "0x200008F")]
public class EventBase : ControllerBase
{
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CBFFC", Offset = "0x4CBFFC")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventBase <>4__this;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float viveDuration;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__4;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__3;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__2;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__1;

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x77223C", Offset = "0x77223C", VA = "0x77223C")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x772244", Offset = "0x772244", VA = "0x772244")]
		internal void <MoveAttension>b__0()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x7723AC", Offset = "0x7723AC", VA = "0x7723AC")]
		internal void <MoveAttension>b__1()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x772510", Offset = "0x772510", VA = "0x772510")]
		internal void <MoveAttension>b__2()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x772678", Offset = "0x772678", VA = "0x772678")]
		internal void <MoveAttension>b__3()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x7727D8", Offset = "0x7727D8", VA = "0x7727D8")]
		internal void <MoveAttension>b__4()
		{
		}
	}

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public GameObject attension;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public GameObject mainObject;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public GameObject visibleTarget;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected GameObject infoCanvas;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject camera;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected GameObject centerEyeAnchor;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer targetRenderer;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isFocused;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool isMovingAttension;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool isInThisEvent;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected CanvasSoundManager soundManager;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected CanvasManager canvasManager;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected MessageManager messageManager;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isBattle;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x771760", Offset = "0x771760", VA = "0x771760")]
	protected void PlayMessageSE()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x771790", Offset = "0x771790", VA = "0x771790")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x771878", Offset = "0x771878", VA = "0x771878")]
	public void Start()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x771B08", Offset = "0x771B08", VA = "0x771B08")]
	public GameObject Camera()
	{
		return null;
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x76CBD4", Offset = "0x76CBD4", VA = "0x76CBD4")]
	public GameObject InfoCanvas()
	{
		return null;
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x771B10", Offset = "0x771B10", VA = "0x771B10")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x771B94", Offset = "0x771B94", VA = "0x771B94")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x771C14", Offset = "0x771C14", VA = "0x771C14")]
	public void Update()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x771DE0", Offset = "0x771DE0", VA = "0x771DE0")]
	private void Decide()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x76C72C", Offset = "0x76C72C", VA = "0x76C72C", Slot = "4")]
	public virtual void BeginEvent()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x771F64", Offset = "0x771F64", VA = "0x771F64", Slot = "5")]
	public virtual void EndEvent()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x772068", Offset = "0x772068", VA = "0x772068", Slot = "6")]
	public virtual void ShowMessageView(string firstMessage)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x76CD40", Offset = "0x76CD40", VA = "0x76CD40")]
	public void ShowConfirmView(string firstMessage)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x7720C8", Offset = "0x7720C8", VA = "0x7720C8", Slot = "7")]
	public virtual void UpdateMessage(string message)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x772100", Offset = "0x772100", VA = "0x772100", Slot = "8")]
	public virtual void LookAtPlayer()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x771E4C", Offset = "0x771E4C", VA = "0x771E4C")]
	private void MoveAttension()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x76CC8C", Offset = "0x76CC8C", VA = "0x76CC8C")]
	public EventBase()
	{
	}
}
[Token(Token = "0x2000090")]
public class CannotGoEvent : MessageEventBase
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x861988", Offset = "0x861988", VA = "0x861988")]
	public new void Start()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x861990", Offset = "0x861990", VA = "0x861990")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x861B70", Offset = "0x861B70", VA = "0x861B70")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x861C38", Offset = "0x861C38", VA = "0x861C38", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x861994", Offset = "0x861994", VA = "0x861994")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x861C78", Offset = "0x861C78", VA = "0x861C78", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x861D80", Offset = "0x861D80", VA = "0x861D80")]
	public CannotGoEvent()
	{
	}
}
[Token(Token = "0x2000091")]
public class EnterInEvilCastle : EnterExitBase
{
	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x7712AC", Offset = "0x7712AC", VA = "0x7712AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x771350", Offset = "0x771350", VA = "0x771350")]
	public EnterInEvilCastle()
	{
	}
}
[Token(Token = "0x2000092")]
public class EvilGateEventInEvilValley : EventBase
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject sceneScriptsObject;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip moveSE;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioClip baseAudioClip;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x772B18", Offset = "0x772B18", VA = "0x772B18")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x772BB0", Offset = "0x772BB0", VA = "0x772BB0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x772CBC", Offset = "0x772CBC", VA = "0x772CBC")]
	private void PlayMoveSE()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x772D78", Offset = "0x772D78", VA = "0x772D78")]
	public EvilGateEventInEvilValley()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x772D80", Offset = "0x772D80", VA = "0x772D80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A58", Offset = "0x4D3A58")]
	private void <BeginEvent>b__4_0()
	{
	}
}
[Token(Token = "0x2000093")]
public class EvilKingEvent : MessageEventBase
{
	[Token(Token = "0x200029F")]
	public enum MessageStatus
	{
		[Token(Token = "0x4000C2B")]
		BeforeBattle,
		[Token(Token = "0x4000C2C")]
		BeforeTransform,
		[Token(Token = "0x4000C2D")]
		Killed,
		[Token(Token = "0x4000C2E")]
		Disappeared
	}

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MessageStatus messageStatus;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject evilKing;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject evilKingTransformed;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private AudioClip transformSE;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioClip disappearSE;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] firstMessages;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string[] secondMessages;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] thirdMessages;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] disappearedMessages;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool isFirst;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x7738C4", Offset = "0x7738C4", VA = "0x7738C4")]
	public new void Start()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x773938", Offset = "0x773938", VA = "0x773938")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x774668", Offset = "0x774668", VA = "0x774668")]
	private void BeginEventAtGoodTiming()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x773AA4", Offset = "0x773AA4", VA = "0x773AA4")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x774780", Offset = "0x774780", VA = "0x774780")]
	private void BeginEventForBeforeBattle()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x7747B4", Offset = "0x7747B4", VA = "0x7747B4")]
	private void BeginEventForTransform()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x7747E8", Offset = "0x7747E8", VA = "0x7747E8")]
	private void BeginEventForKilled()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x77481C", Offset = "0x77481C", VA = "0x77481C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x774864", Offset = "0x774864", VA = "0x774864", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x774A00", Offset = "0x774A00", VA = "0x774A00")]
	private void BeginBattle()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x774B34", Offset = "0x774B34", VA = "0x774B34")]
	public EvilKingEvent()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x774B3C", Offset = "0x774B3C", VA = "0x774B3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A68", Offset = "0x4D3A68")]
	private void <OnEnable>b__13_0()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x774C38", Offset = "0x774C38", VA = "0x774C38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A78", Offset = "0x4D3A78")]
	private void <OnEnable>b__13_1()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x774C3C", Offset = "0x774C3C", VA = "0x774C3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A88", Offset = "0x4D3A88")]
	private void <OnEnable>b__13_2()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x774C64", Offset = "0x774C64", VA = "0x774C64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3A98", Offset = "0x4D3A98")]
	private void <OnEnable>b__13_3()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x774C68", Offset = "0x774C68", VA = "0x774C68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3AA8", Offset = "0x4D3AA8")]
	private void <BeginEventAtGoodTiming>b__14_0()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x774C9C", Offset = "0x774C9C", VA = "0x774C9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3AB8", Offset = "0x4D3AB8")]
	private void <BeginEventAtGoodTiming>b__14_1()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x774CD0", Offset = "0x774CD0", VA = "0x774CD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3AC8", Offset = "0x4D3AC8")]
	private void <BeginEventAtGoodTiming>b__14_2()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x774CD4", Offset = "0x774CD4", VA = "0x774CD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3AD8", Offset = "0x4D3AD8")]
	private void <EndEvent>b__20_0()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x774DA8", Offset = "0x774DA8", VA = "0x774DA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3AE8", Offset = "0x4D3AE8")]
	private void <EndEvent>b__20_3()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x774E90", Offset = "0x774E90", VA = "0x774E90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3AF8", Offset = "0x4D3AF8")]
	private void <EndEvent>b__20_4()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x774E94", Offset = "0x774E94", VA = "0x774E94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B08", Offset = "0x4D3B08")]
	private void <EndEvent>b__20_1()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x774F68", Offset = "0x774F68", VA = "0x774F68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B18", Offset = "0x4D3B18")]
	private void <EndEvent>b__20_5()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x775058", Offset = "0x775058", VA = "0x775058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B28", Offset = "0x4D3B28")]
	private void <EndEvent>b__20_6()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x77508C", Offset = "0x77508C", VA = "0x77508C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B38", Offset = "0x4D3B38")]
	private void <EndEvent>b__20_2()
	{
	}
}
[Token(Token = "0x2000094")]
public class EvilTransporterEvent : MessageEventBase
{
	[Token(Token = "0x20002A0")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000C30")]
		Normal,
		[Token(Token = "0x4000C31")]
		Canceled
	}

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool canTransport;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool isCleared;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject effectiveJwel;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject uneffectiveJwel;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] beforeMessages;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] afterMessages;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string[] clearedMessages;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] firstMessages;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x775090", Offset = "0x775090", VA = "0x775090")]
	public new void Start()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x775100", Offset = "0x775100", VA = "0x775100")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x775244", Offset = "0x775244", VA = "0x775244")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x775848", Offset = "0x775848", VA = "0x775848", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x7758D4", Offset = "0x7758D4", VA = "0x7758D4", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x77586C", Offset = "0x77586C", VA = "0x77586C")]
	private void Explain()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x7758EC", Offset = "0x7758EC", VA = "0x7758EC")]
	private void ShowConfirm()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x775B2C", Offset = "0x775B2C", VA = "0x775B2C", Slot = "10")]
	protected override void Yes()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x775CDC", Offset = "0x775CDC", VA = "0x775CDC", Slot = "11")]
	protected override void No()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x775D10", Offset = "0x775D10", VA = "0x775D10")]
	public EvilTransporterEvent()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x775D18", Offset = "0x775D18", VA = "0x775D18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B48", Offset = "0x4D3B48")]
	private void <Yes>b__18_0()
	{
	}
}
[Token(Token = "0x2000095")]
public class ExitInEvilCastleLast : EnterExitBase
{
	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x776324", Offset = "0x776324", VA = "0x776324")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x7763C8", Offset = "0x7763C8", VA = "0x7763C8")]
	public ExitInEvilCastleLast()
	{
	}
}
[Token(Token = "0x2000096")]
public class MoveInEvilCastle : EnterExitBase
{
	[Token(Token = "0x20002A1")]
	public enum MoveType
	{
		[Token(Token = "0x4000C33")]
		Up2FCenter,
		[Token(Token = "0x4000C34")]
		Up2FLeft,
		[Token(Token = "0x4000C35")]
		Up2FRight,
		[Token(Token = "0x4000C36")]
		Up3F,
		[Token(Token = "0x4000C37")]
		Down1FCenter,
		[Token(Token = "0x4000C38")]
		Down1FLeft,
		[Token(Token = "0x4000C39")]
		Down1FRight,
		[Token(Token = "0x4000C3A")]
		Down2F
	}

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MoveType moveType;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x71F730", Offset = "0x71F730", VA = "0x71F730")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x7200C4", Offset = "0x7200C4", VA = "0x7200C4")]
	public MoveInEvilCastle()
	{
	}
}
[Token(Token = "0x2000097")]
public class EnterFirstCave : EnterExitBase
{
	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x770FF8", Offset = "0x770FF8", VA = "0x770FF8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x77109C", Offset = "0x77109C", VA = "0x77109C")]
	public EnterFirstCave()
	{
	}
}
[Token(Token = "0x2000098")]
public class ExitFirstCave : EnterExitBase
{
	[Token(Token = "0x6000601")]
	[Address(RVA = "0x775F18", Offset = "0x775F18", VA = "0x775F18")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x775FBC", Offset = "0x775FBC", VA = "0x775FBC")]
	public ExitFirstCave()
	{
	}
}
[Token(Token = "0x2000099")]
public class FirstCaveBossEvent : MessageEventBase
{
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC00C", Offset = "0x4CC00C")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FirstCaveBossEvent <>4__this;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float diffEye;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x779778", Offset = "0x779778", VA = "0x779778")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x77992C", Offset = "0x77992C", VA = "0x77992C")]
		internal void <BeginBeforeEvent>b__0()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x779CF4", Offset = "0x779CF4", VA = "0x779CF4")]
		internal void <BeginBeforeEvent>b__1()
		{
		}
	}

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isFinished;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] firstMessages;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject rightEye;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject leftEye;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private AudioClip alertSE;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x77905C", Offset = "0x77905C", VA = "0x77905C")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x779060", Offset = "0x779060", VA = "0x779060")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x77946C", Offset = "0x77946C", VA = "0x77946C")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x77950C", Offset = "0x77950C", VA = "0x77950C", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x7795C0", Offset = "0x7795C0", VA = "0x7795C0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x779124", Offset = "0x779124", VA = "0x779124")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x779668", Offset = "0x779668", VA = "0x779668")]
	private void BeginBeforeEvent()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x779780", Offset = "0x779780", VA = "0x779780")]
	private void BeginMessage()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x7797BC", Offset = "0x7797BC", VA = "0x7797BC")]
	private void BeginBattle()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x779920", Offset = "0x779920", VA = "0x779920")]
	public FirstCaveBossEvent()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x779928", Offset = "0x779928", VA = "0x779928")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B58", Offset = "0x4D3B58")]
	private void <EndEvent>b__8_0()
	{
	}
}
[Token(Token = "0x200009A")]
public class BookManFirstVillageEvent : MessageEventBase
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x85FF48", Offset = "0x85FF48", VA = "0x85FF48", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x85FFC8", Offset = "0x85FFC8", VA = "0x85FFC8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x85FFF0", Offset = "0x85FFF0", VA = "0x85FFF0")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x85FF94", Offset = "0x85FF94", VA = "0x85FF94")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x8609BC", Offset = "0x8609BC", VA = "0x8609BC")]
	public BookManFirstVillageEvent()
	{
	}
}
[Token(Token = "0x200009B")]
public class ExitFirstVillageFromN : EnterExitBase
{
	[Token(Token = "0x6000613")]
	[Address(RVA = "0x776070", Offset = "0x776070", VA = "0x776070")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x776114", Offset = "0x776114", VA = "0x776114")]
	public ExitFirstVillageFromN()
	{
	}
}
[Token(Token = "0x200009C")]
public class ExitFirstVillageFromS : EnterExitBase
{
	[Token(Token = "0x6000615")]
	[Address(RVA = "0x77611C", Offset = "0x77611C", VA = "0x77611C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x7761C0", Offset = "0x7761C0", VA = "0x7761C0")]
	public ExitFirstVillageFromS()
	{
	}
}
[Token(Token = "0x200009D")]
public class ExitTempleValleyFromW : EnterExitBase
{
	[Token(Token = "0x6000617")]
	[Address(RVA = "0x776C7C", Offset = "0x776C7C", VA = "0x776C7C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x776D20", Offset = "0x776D20", VA = "0x776D20")]
	public ExitTempleValleyFromW()
	{
	}
}
[Token(Token = "0x200009E")]
public class ExitTownFromNW : EnterExitBase
{
	[Token(Token = "0x6000619")]
	[Address(RVA = "0x776D28", Offset = "0x776D28", VA = "0x776D28")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x776DCC", Offset = "0x776DCC", VA = "0x776DCC")]
	public ExitTownFromNW()
	{
	}
}
[Token(Token = "0x200009F")]
public class FirstVillageExplainEvent : MessageEventBase
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x77F87C", Offset = "0x77F87C", VA = "0x77F87C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x77F8F8", Offset = "0x77F8F8", VA = "0x77F8F8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x77F920", Offset = "0x77F920", VA = "0x77F920")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x77F8C4", Offset = "0x77F8C4", VA = "0x77F8C4")]
	private void Explain()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x77FB6C", Offset = "0x77FB6C", VA = "0x77FB6C")]
	public FirstVillageExplainEvent()
	{
	}
}
[Token(Token = "0x20000A0")]
public class FirstVillageHumanAEvent : MessageEventBase
{
	[Token(Token = "0x6000620")]
	[Address(RVA = "0x77FB74", Offset = "0x77FB74", VA = "0x77FB74", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x77FBA4", Offset = "0x77FBA4", VA = "0x77FBA4")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x77FC48", Offset = "0x77FC48", VA = "0x77FC48")]
	public FirstVillageHumanAEvent()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x77FC50", Offset = "0x77FC50", VA = "0x77FC50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B68", Offset = "0x4D3B68")]
	private void <Explain>b__1_0()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x77FCF4", Offset = "0x77FCF4", VA = "0x77FCF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B78", Offset = "0x4D3B78")]
	private void <Explain>b__1_1()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x77FD98", Offset = "0x77FD98", VA = "0x77FD98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B88", Offset = "0x4D3B88")]
	private void <Explain>b__1_2()
	{
	}
}
[Token(Token = "0x20000A1")]
public class FirstVillageHumanBEvent : MessageEventBase
{
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC01C", Offset = "0x4CC01C")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FirstVillageHumanBEvent <>4__this;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 defaultScale;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__2;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__1;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x77FFAC", Offset = "0x77FFAC", VA = "0x77FFAC")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x77FFBC", Offset = "0x77FFBC", VA = "0x77FFBC")]
		internal void <Explain>b__0()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x7800C0", Offset = "0x7800C0", VA = "0x7800C0")]
		internal void <Explain>b__1()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x7801C4", Offset = "0x7801C4", VA = "0x7801C4")]
		internal void <Explain>b__2()
		{
		}
	}

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject movingEvent;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x77FDA4", Offset = "0x77FDA4", VA = "0x77FDA4", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x77FE9C", Offset = "0x77FE9C", VA = "0x77FE9C")]
	private void Explain(Vector3 defaultScale)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x77FFB4", Offset = "0x77FFB4", VA = "0x77FFB4")]
	public FirstVillageHumanBEvent()
	{
	}
}
[Token(Token = "0x20000A2")]
public class FirstVillageIntroManEvent : MessageEventBase
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject bedAttension;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x780280", Offset = "0x780280", VA = "0x780280")]
	private new void Start()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x7803B4", Offset = "0x7803B4", VA = "0x7803B4", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x780438", Offset = "0x780438", VA = "0x780438")]
	private void Explain()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x7804DC", Offset = "0x7804DC", VA = "0x7804DC")]
	private void MoveToDefaultPosition()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x7805BC", Offset = "0x7805BC", VA = "0x7805BC")]
	public FirstVillageIntroManEvent()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x7805C4", Offset = "0x7805C4", VA = "0x7805C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3B98", Offset = "0x4D3B98")]
	private void <Start>b__2_0()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x780668", Offset = "0x780668", VA = "0x780668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3BA8", Offset = "0x4D3BA8")]
	private void <Start>b__2_1()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x780674", Offset = "0x780674", VA = "0x780674")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3BB8", Offset = "0x4D3BB8")]
	private void <Explain>b__4_0()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x780718", Offset = "0x780718", VA = "0x780718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3BC8", Offset = "0x4D3BC8")]
	private void <Explain>b__4_1()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x7807BC", Offset = "0x7807BC", VA = "0x7807BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3BD8", Offset = "0x4D3BD8")]
	private void <Explain>b__4_2()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x780860", Offset = "0x780860", VA = "0x780860")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3BE8", Offset = "0x4D3BE8")]
	private void <Explain>b__4_3()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x780904", Offset = "0x780904", VA = "0x780904")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3BF8", Offset = "0x4D3BF8")]
	private void <Explain>b__4_4()
	{
	}
}
[Token(Token = "0x20000A3")]
public class OldestWomanFirstVillageEvent : MessageEventBase
{
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x6C8088", Offset = "0x6C8088", VA = "0x6C8088", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x6C8108", Offset = "0x6C8108", VA = "0x6C8108")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x6C8130", Offset = "0x6C8130", VA = "0x6C8130")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x6C80D4", Offset = "0x6C80D4", VA = "0x6C80D4")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x6C8574", Offset = "0x6C8574", VA = "0x6C8574")]
	public OldestWomanFirstVillageEvent()
	{
	}
}
[Token(Token = "0x20000A4")]
public class SisterAnimationEvent : MonoBehaviour
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject attension;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x838C10", Offset = "0x838C10", VA = "0x838C10")]
	public void ShowAttension()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x838C44", Offset = "0x838C44", VA = "0x838C44")]
	public SisterAnimationEvent()
	{
	}
}
[Token(Token = "0x20000A5")]
public class FlagManager : MonoBehaviour
{
	[Token(Token = "0x20002A4")]
	public enum EventId
	{
		[Token(Token = "0x4000C43")]
		Opening,
		[Token(Token = "0x4000C44")]
		FirstTownLeaderExplain,
		[Token(Token = "0x4000C45")]
		FirstGateOpen,
		[Token(Token = "0x4000C46")]
		FirstTownQuest,
		[Token(Token = "0x4000C47")]
		FirstTownReward,
		[Token(Token = "0x4000C48")]
		AskedOldShield,
		[Token(Token = "0x4000C49")]
		AskedSand,
		[Token(Token = "0x4000C4A")]
		CaverKing,
		[Token(Token = "0x4000C4B")]
		OverNightAfterAskedSand,
		[Token(Token = "0x4000C4C")]
		Minotaur,
		[Token(Token = "0x4000C4D")]
		EvilKing,
		[Token(Token = "0x4000C4E")]
		RivalInTempleValley,
		[Token(Token = "0x4000C4F")]
		RivalInValleyToCave,
		[Token(Token = "0x4000C50")]
		RivalInFirstCave,
		[Token(Token = "0x4000C51")]
		RivalInIceCave,
		[Token(Token = "0x4000C52")]
		RivalInTemple
	}

	[Token(Token = "0x20002A5")]
	public enum ItemFlagId
	{
		[Token(Token = "0x4000C54")]
		OldestManChest = 0,
		[Token(Token = "0x4000C55")]
		InCastleTreasure1 = 1,
		[Token(Token = "0x4000C56")]
		InCastleTreasure2 = 2,
		[Token(Token = "0x4000C57")]
		InCastleTreasure3 = 3,
		[Token(Token = "0x4000C58")]
		InCastlePot1 = 4,
		[Token(Token = "0x4000C59")]
		CastleAreaTreasure1 = 5,
		[Token(Token = "0x4000C5A")]
		CastleAreaTreasure2 = 6,
		[Token(Token = "0x4000C5B")]
		CastleAreaTreasure3 = 31,
		[Token(Token = "0x4000C5C")]
		TempleTreasure1 = 32,
		[Token(Token = "0x4000C5D")]
		FirstVillageTreasure = 7,
		[Token(Token = "0x4000C5E")]
		FirstVillageTreasure2 = 26,
		[Token(Token = "0x4000C5F")]
		TempleValleyTreasure1 = 10,
		[Token(Token = "0x4000C60")]
		TempleValleyTreasure2 = 29,
		[Token(Token = "0x4000C61")]
		TempleValleyTreasure3 = 30,
		[Token(Token = "0x4000C62")]
		FirstTownTreasure1 = 11,
		[Token(Token = "0x4000C63")]
		FirstTownTreasure2 = 12,
		[Token(Token = "0x4000C64")]
		FirstTownTreasure3 = 13,
		[Token(Token = "0x4000C65")]
		FirstTownTreasure4 = 27,
		[Token(Token = "0x4000C66")]
		ValleyToCaveTreasure1 = 14,
		[Token(Token = "0x4000C67")]
		ValleyToCaveTreasure2 = 28,
		[Token(Token = "0x4000C68")]
		ValleyToCaveTreasure3 = 33,
		[Token(Token = "0x4000C69")]
		WallCityTreasure1 = 15,
		[Token(Token = "0x4000C6A")]
		WallCityTreasure2 = 16,
		[Token(Token = "0x4000C6B")]
		WallCityTreasure3 = 17,
		[Token(Token = "0x4000C6C")]
		WallCityTreasure4 = 18,
		[Token(Token = "0x4000C6D")]
		WallCityTreasure5 = 19,
		[Token(Token = "0x4000C6E")]
		WallCityTreasure6 = 20,
		[Token(Token = "0x4000C6F")]
		WallCityTreasure7 = 21,
		[Token(Token = "0x4000C70")]
		FirstValleyTreasure1 = 8,
		[Token(Token = "0x4000C71")]
		FirstValleyTreasure2 = 9,
		[Token(Token = "0x4000C72")]
		FirstCaveTreasure1 = 22,
		[Token(Token = "0x4000C73")]
		FirstCaveTreasure2 = 23,
		[Token(Token = "0x4000C74")]
		FirstCaveTreasure3 = 24,
		[Token(Token = "0x4000C75")]
		FirstCaveTreasure4 = 25,
		[Token(Token = "0x4000C76")]
		SnowAreaTreasure1 = 34,
		[Token(Token = "0x4000C77")]
		SnowAreaTreasure2 = 35,
		[Token(Token = "0x4000C78")]
		SnowAreaTreasure3 = 36,
		[Token(Token = "0x4000C79")]
		SnowVillageTreasure1 = 37,
		[Token(Token = "0x4000C7A")]
		SnowVillageTreasure2 = 38,
		[Token(Token = "0x4000C7B")]
		IceCaveTreasure1 = 39,
		[Token(Token = "0x4000C7C")]
		IceCaveTreasure2 = 40,
		[Token(Token = "0x4000C7D")]
		IceCaveTreasure3 = 41,
		[Token(Token = "0x4000C7E")]
		EvilValleyTreasure1 = 42,
		[Token(Token = "0x4000C7F")]
		EvilCastleTreasure1 = 43,
		[Token(Token = "0x4000C80")]
		EvilCastleTreasure2 = 44,
		[Token(Token = "0x4000C81")]
		EvilCastleTreasure3 = 45,
		[Token(Token = "0x4000C82")]
		EvilCastleTreasure4 = 46,
		[Token(Token = "0x4000C83")]
		EvilCastleTreasure5 = 47,
		[Token(Token = "0x4000C84")]
		CleaningSand = 996,
		[Token(Token = "0x4000C85")]
		OldShield = 997,
		[Token(Token = "0x4000C86")]
		LegendShield = 998,
		[Token(Token = "0x4000C87")]
		Excalibur = 999,
		[Token(Token = "0x4000C88")]
		None = -1
	}

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool[] Events;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool[] Items;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x78098C", Offset = "0x78098C", VA = "0x78098C")]
	public static void ResetFlags()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x76CF40", Offset = "0x76CF40", VA = "0x76CF40")]
	public static bool isDoneEvent(EventId flagId)
	{
		return default(bool);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x77AFDC", Offset = "0x77AFDC", VA = "0x77AFDC")]
	public static void doneEvent(EventId flagId)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x7732C8", Offset = "0x7732C8", VA = "0x7732C8")]
	public static bool isDoneItem(ItemFlagId flagId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x77F3A0", Offset = "0x77F3A0", VA = "0x77F3A0")]
	public static void doneItem(ItemFlagId flagId)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x77EA0C", Offset = "0x77EA0C", VA = "0x77EA0C")]
	public static Item ItemFromFlagId(ItemFlagId flagId)
	{
		return default(Item);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x782738", Offset = "0x782738", VA = "0x782738")]
	public FlagManager()
	{
	}
}
[Token(Token = "0x20000A6")]
public class HotelManEvent : MessageEventBase
{
	[Token(Token = "0x20002A6")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000C8A")]
		Normal,
		[Token(Token = "0x4000C8B")]
		Canceled,
		[Token(Token = "0x4000C8C")]
		NoMoney,
		[Token(Token = "0x4000C8D")]
		WakeUp
	}

	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC02C", Offset = "0x4CC02C")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject mapAndPeople;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HotelManEvent <>4__this;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x784E14", Offset = "0x784E14", VA = "0x784E14")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x78504C", Offset = "0x78504C", VA = "0x78504C")]
		internal void <WakeUp>b__0()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x7851B4", Offset = "0x7851B4", VA = "0x7851B4")]
		internal void <WakeUp>b__1()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x7852FC", Offset = "0x7852FC", VA = "0x7852FC")]
		internal void <WakeUp>b__2()
		{
		}
	}

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int price;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] cancelMessages;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] noMoneyMessages;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] wakeUpMessages;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] fromDeadMessages;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string[] endingMessages;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x7836AC", Offset = "0x7836AC", VA = "0x7836AC")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x78371C", Offset = "0x78371C", VA = "0x78371C")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x783744", Offset = "0x783744", VA = "0x783744")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x784260", Offset = "0x784260", VA = "0x784260", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x7845C8", Offset = "0x7845C8", VA = "0x7845C8")]
	public void BeginEventFromDead()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x784764", Offset = "0x784764", VA = "0x784764", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x784290", Offset = "0x784290", VA = "0x784290")]
	private void Explain()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x784780", Offset = "0x784780", VA = "0x784780")]
	private void ShowHotelConfirm()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x784910", Offset = "0x784910", VA = "0x784910")]
	private void ShowMoneyConfirm(string question)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x7849D4", Offset = "0x7849D4", VA = "0x7849D4", Slot = "10")]
	protected override void Yes()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x7849D8", Offset = "0x7849D8", VA = "0x7849D8")]
	private void CheckMoney()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x784A84", Offset = "0x784A84", VA = "0x784A84")]
	private void CannotPay()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x784C3C", Offset = "0x784C3C", VA = "0x784C3C")]
	private void DoneLegendShieldEventWhenTheTiming()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x784AC0", Offset = "0x784AC0", VA = "0x784AC0")]
	private void GoToSleep()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x784CF0", Offset = "0x784CF0", VA = "0x784CF0")]
	private void WakeUp()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x784E1C", Offset = "0x784E1C", VA = "0x784E1C")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x784E4C", Offset = "0x784E4C", VA = "0x784E4C")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x784E7C", Offset = "0x784E7C", VA = "0x784E7C", Slot = "11")]
	protected override void No()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x7846EC", Offset = "0x7846EC", VA = "0x7846EC")]
	private void FullCare()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x784EB8", Offset = "0x784EB8", VA = "0x784EB8")]
	public HotelManEvent()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x784EC8", Offset = "0x784EC8", VA = "0x784EC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C08", Offset = "0x4D3C08")]
	private void <GoToSleep>b__22_0()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x784F70", Offset = "0x784F70", VA = "0x784F70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C18", Offset = "0x4D3C18")]
	private void <GoToSleep>b__22_1()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x785048", Offset = "0x785048", VA = "0x785048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C28", Offset = "0x4D3C28")]
	private void <GoToSleep>b__22_2()
	{
	}
}
[Token(Token = "0x20000A7")]
public class EnterIceCave : EnterExitBase
{
	[Token(Token = "0x600065B")]
	[Address(RVA = "0x771154", Offset = "0x771154", VA = "0x771154")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x7711F8", Offset = "0x7711F8", VA = "0x7711F8")]
	public EnterIceCave()
	{
	}
}
[Token(Token = "0x20000A8")]
public class EvilGateEvent : EventBase
{
	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject sceneScriptsObject;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip moveSE;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioClip baseAudioClip;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x772804", Offset = "0x772804", VA = "0x772804")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x77289C", Offset = "0x77289C", VA = "0x77289C")]
	private new void Update()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x7728A0", Offset = "0x7728A0", VA = "0x7728A0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x7729A4", Offset = "0x7729A4", VA = "0x7729A4")]
	private void PlayMoveSE()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x772A98", Offset = "0x772A98", VA = "0x772A98")]
	public EvilGateEvent()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x772AA0", Offset = "0x772AA0", VA = "0x772AA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C38", Offset = "0x4D3C38")]
	private void <BeginEvent>b__5_0()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ExitIceCave : EnterExitBase
{
	[Token(Token = "0x6000663")]
	[Address(RVA = "0x7761C8", Offset = "0x7761C8", VA = "0x7761C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x776270", Offset = "0x776270", VA = "0x776270")]
	public ExitIceCave()
	{
	}
}
[Token(Token = "0x20000AA")]
public class ExitMagicCircleEvent : MessageEventBase
{
	[Token(Token = "0x20002A8")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000C93")]
		Normal,
		[Token(Token = "0x4000C94")]
		Canceled
	}

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] firstMessages;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x7763D0", Offset = "0x7763D0", VA = "0x7763D0")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x776440", Offset = "0x776440", VA = "0x776440", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x7764B8", Offset = "0x7764B8", VA = "0x7764B8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x7764E0", Offset = "0x7764E0", VA = "0x7764E0")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x776638", Offset = "0x776638", VA = "0x776638", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x776480", Offset = "0x776480", VA = "0x776480")]
	private void Explain()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x776650", Offset = "0x776650", VA = "0x776650")]
	private void ShowConfirm()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x776890", Offset = "0x776890", VA = "0x776890", Slot = "10")]
	protected override void Yes()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x7768C4", Offset = "0x7768C4", VA = "0x7768C4", Slot = "11")]
	protected override void No()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x776A74", Offset = "0x776A74", VA = "0x776A74")]
	public ExitMagicCircleEvent()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x776A7C", Offset = "0x776A7C", VA = "0x776A7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C48", Offset = "0x4D3C48")]
	private void <No>b__12_0()
	{
	}
}
[Token(Token = "0x20000AB")]
public class MinotaurEvent : MessageEventBase
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isFinished;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x71BC80", Offset = "0x71BC80", VA = "0x71BC80")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x71BC88", Offset = "0x71BC88", VA = "0x71BC88")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x71BD44", Offset = "0x71BD44", VA = "0x71BD44")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x71BDE4", Offset = "0x71BDE4", VA = "0x71BDE4", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x71BE8C", Offset = "0x71BE8C", VA = "0x71BE8C")]
	private void BeginBeforeEvent()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x71BF60", Offset = "0x71BF60", VA = "0x71BF60")]
	private void BeginBattle()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x71C354", Offset = "0x71C354", VA = "0x71C354")]
	public MinotaurEvent()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x71C358", Offset = "0x71C358", VA = "0x71C358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C58", Offset = "0x4D3C58")]
	private void <BeginBeforeEvent>b__5_0()
	{
	}
}
[Token(Token = "0x20000AC")]
public class MoveInIceCave : EnterExitBase
{
	[Token(Token = "0x20002A9")]
	public enum MoveType
	{
		[Token(Token = "0x4000C96")]
		UpB1,
		[Token(Token = "0x4000C97")]
		DownB2,
		[Token(Token = "0x4000C98")]
		UpB2,
		[Token(Token = "0x4000C99")]
		DownB3,
		[Token(Token = "0x4000C9A")]
		ToFrontOfGate,
		[Token(Token = "0x4000C9B")]
		ToDeepest
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MoveType moveType;

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x7200CC", Offset = "0x7200CC", VA = "0x7200CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x72081C", Offset = "0x72081C", VA = "0x72081C")]
	public MoveInIceCave()
	{
	}
}
[Token(Token = "0x20000AD")]
public class SwordEvent : MessageEventBase
{
	[Token(Token = "0x20002AA")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000C9D")]
		Will,
		[Token(Token = "0x4000C9E")]
		After
	}

	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC03C", Offset = "0x4CC03C")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item itemExisted;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SwordEvent <>4__this;

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x841A4C", Offset = "0x841A4C", VA = "0x841A4C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x841A68", Offset = "0x841A68", VA = "0x841A68")]
		internal void <GetItem>b__0()
		{
		}
	}

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject itemObject;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FlagManager.ItemFlagId itemFlagId;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject sword;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AudioClip getSpecialItemSE;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] firstMessages;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x840D38", Offset = "0x840D38", VA = "0x840D38")]
	public new void Start()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x840DE0", Offset = "0x840DE0", VA = "0x840DE0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x840F98", Offset = "0x840F98", VA = "0x840F98")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x840FC0", Offset = "0x840FC0", VA = "0x840FC0")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x841110", Offset = "0x841110", VA = "0x841110", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x8411F8", Offset = "0x8411F8", VA = "0x8411F8")]
	private void StartConfirm()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x841420", Offset = "0x841420", VA = "0x841420", Slot = "10")]
	protected override void Yes()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x8414C4", Offset = "0x8414C4", VA = "0x8414C4", Slot = "11")]
	protected override void No()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x840ECC", Offset = "0x840ECC", VA = "0x840ECC")]
	private void BeginAfterMessage()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x840E98", Offset = "0x840E98", VA = "0x840E98")]
	private void BeginMessage()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x841610", Offset = "0x841610", VA = "0x841610")]
	private void ItemFull()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x841804", Offset = "0x841804", VA = "0x841804")]
	private void GetItem()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x841A54", Offset = "0x841A54", VA = "0x841A54")]
	public SwordEvent()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x841A64", Offset = "0x841A64", VA = "0x841A64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C68", Offset = "0x4D3C68")]
	private void <Yes>b__13_0()
	{
	}
}
[Token(Token = "0x20000AE")]
public class BookMan1Event : MessageEventBase
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x85E304", Offset = "0x85E304", VA = "0x85E304")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x85E32C", Offset = "0x85E32C", VA = "0x85E32C")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x85EBA0", Offset = "0x85EBA0", VA = "0x85EBA0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x85EBD4", Offset = "0x85EBD4", VA = "0x85EBD4")]
	private void Explain()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x85EC68", Offset = "0x85EC68", VA = "0x85EC68")]
	public BookMan1Event()
	{
	}
}
[Token(Token = "0x20000AF")]
public class BookMan2Event : MessageEventBase
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x85EC70", Offset = "0x85EC70", VA = "0x85EC70", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x85ECBC", Offset = "0x85ECBC", VA = "0x85ECBC")]
	private void Explain()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x85ECF0", Offset = "0x85ECF0", VA = "0x85ECF0")]
	public BookMan2Event()
	{
	}
}
[Token(Token = "0x20000B0")]
public class BookMan3Event : MessageEventBase
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x85EE5C", Offset = "0x85EE5C", VA = "0x85EE5C")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x85EE84", Offset = "0x85EE84", VA = "0x85EE84")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x85F4D8", Offset = "0x85F4D8", VA = "0x85F4D8", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x85F50C", Offset = "0x85F50C", VA = "0x85F50C")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x85F5A0", Offset = "0x85F5A0", VA = "0x85F5A0")]
	public BookMan3Event()
	{
	}
}
[Token(Token = "0x20000B1")]
public class QueenEvent : MessageEventBase
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] secondMessages;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] trialMessages;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] defeatedMonkeyMessages;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] gotOldShieldMessages;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] visitedAquaBellaMessages;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] defeatedStoneMessages;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string[] gotBellamondMessages;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] gotShieldMessages;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] gotSwordMessages;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string[] defeatedMinotaurMessages;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string[] savedTheWorldMessages;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool isFirst;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x82AA08", Offset = "0x82AA08", VA = "0x82AA08")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x82AA30", Offset = "0x82AA30", VA = "0x82AA30")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x82EBD4", Offset = "0x82EBD4", VA = "0x82EBD4")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x82ECF0", Offset = "0x82ECF0", VA = "0x82ECF0")]
	private void BeginEventAtGoodTiming()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x82EDC8", Offset = "0x82EDC8", VA = "0x82EDC8", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x82F3B0", Offset = "0x82F3B0", VA = "0x82F3B0", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x82F4C0", Offset = "0x82F4C0", VA = "0x82F4C0")]
	private void ToTheEnd()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x82F068", Offset = "0x82F068", VA = "0x82F068")]
	private void First()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x82F300", Offset = "0x82F300", VA = "0x82F300")]
	private void Second()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x82F12C", Offset = "0x82F12C", VA = "0x82F12C")]
	private void SavedTheWorld()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x82F160", Offset = "0x82F160", VA = "0x82F160")]
	private void GotSword()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x82F1C8", Offset = "0x82F1C8", VA = "0x82F1C8")]
	private void GotShield()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x82F1FC", Offset = "0x82F1FC", VA = "0x82F1FC")]
	private void GotBellamond()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x82F298", Offset = "0x82F298", VA = "0x82F298")]
	private void GotOldShield()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x82F264", Offset = "0x82F264", VA = "0x82F264")]
	private void VisitedAquaBella()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x82F194", Offset = "0x82F194", VA = "0x82F194")]
	private void DefeatedMinotaur()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x82F2CC", Offset = "0x82F2CC", VA = "0x82F2CC")]
	private void DefeatedMonkey()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x82F230", Offset = "0x82F230", VA = "0x82F230")]
	private void DefeatedStone()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x82F538", Offset = "0x82F538", VA = "0x82F538")]
	public QueenEvent()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x82F540", Offset = "0x82F540", VA = "0x82F540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C78", Offset = "0x4D3C78")]
	private void <Start>b__16_0()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x82F544", Offset = "0x82F544", VA = "0x82F544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C88", Offset = "0x4D3C88")]
	private void <BeginEventAtGoodTiming>b__17_0()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x82F574", Offset = "0x82F574", VA = "0x82F574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3C98", Offset = "0x4D3C98")]
	private void <BeginEventAtGoodTiming>b__17_1()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x82F578", Offset = "0x82F578", VA = "0x82F578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3CA8", Offset = "0x4D3CA8")]
	private void <EndEvent>b__19_0()
	{
	}
}
[Token(Token = "0x20000B2")]
public class ItemShopEvent : MessageEventBase
{
	[Token(Token = "0x20002AC")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CA2")]
		Normal,
		[Token(Token = "0x4000CA3")]
		Leave
	}

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Item.ItemId item1;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private Item.ItemId item2;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Item.ItemId item3;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private Item.ItemId item4;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Item.ItemId item5;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private Item.ItemId item6;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Item.ItemId item7;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private Item.ItemId item8;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Item.ItemId item9;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private Item.ItemId item10;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Item[] items;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string[] firstMessages;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] noMoneyMessages;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] noItemsMessages;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string[] cannotSellMessages;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string[] leaveMessages;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string[] boughtMessages;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string[] soldMessages;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string[] itemFullMessages;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private string[] endingMessages;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x70C42C", Offset = "0x70C42C", VA = "0x70C42C")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x70C530", Offset = "0x70C530", VA = "0x70C530")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x70C638", Offset = "0x70C638", VA = "0x70C638")]
	private void SetUpMessagesForEvilShop()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x70D29C", Offset = "0x70D29C", VA = "0x70D29C")]
	private void SetUpMessagesForNormal()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x70E1E4", Offset = "0x70E1E4", VA = "0x70E1E4")]
	public new void Start()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x70E630", Offset = "0x70E630", VA = "0x70E630", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x70E7D8", Offset = "0x70E7D8", VA = "0x70E7D8")]
	private void Explain()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x70EA6C", Offset = "0x70EA6C", VA = "0x70EA6C", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x70EBF8", Offset = "0x70EBF8", VA = "0x70EBF8")]
	private void ShowItemShopView()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x70ECDC", Offset = "0x70ECDC", VA = "0x70ECDC")]
	private void SelectLoop()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x70EDD8", Offset = "0x70EDD8", VA = "0x70EDD8")]
	private void Decided()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x70EED0", Offset = "0x70EED0", VA = "0x70EED0")]
	private void Bought()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x70EF7C", Offset = "0x70EF7C", VA = "0x70EF7C")]
	private void Sold()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x70F028", Offset = "0x70F028", VA = "0x70F028")]
	private void NoItems()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x70F0B8", Offset = "0x70F0B8", VA = "0x70F0B8")]
	private void NoMoney()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x70F148", Offset = "0x70F148", VA = "0x70F148")]
	private void ItemFull()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x70F1D8", Offset = "0x70F1D8", VA = "0x70F1D8")]
	private void CannotSell()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x70F268", Offset = "0x70F268", VA = "0x70F268")]
	private void LeaveShop()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x70F300", Offset = "0x70F300", VA = "0x70F300")]
	public ItemShopEvent()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x70F384", Offset = "0x70F384", VA = "0x70F384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3CB8", Offset = "0x4D3CB8")]
	private void <SelectLoop>b__31_0()
	{
	}
}
[Token(Token = "0x20000B3")]
public class MessageEventBase : EventBase
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public GameObject messageCanvas;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro messageText;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 prevEulerAngles;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Queue<string> messages;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x70C450", Offset = "0x70C450", VA = "0x70C450")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x71B1B0", Offset = "0x71B1B0", VA = "0x71B1B0")]
	public new void ShowMessageView(string firstMessage)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x70EB80", Offset = "0x70EB80", VA = "0x70EB80")]
	public void HideMessageView()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x71B1B8", Offset = "0x71B1B8", VA = "0x71B1B8")]
	public new void UpdateMessage(string message)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x70E660", Offset = "0x70E660", VA = "0x70E660")]
	public new void LookAtPlayer()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x71B1C0", Offset = "0x71B1C0", VA = "0x71B1C0")]
	public void ResetLookAt()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x70EAB0", Offset = "0x70EAB0", VA = "0x70EAB0", Slot = "9")]
	public new virtual void EndEvent()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x71B230", Offset = "0x71B230", VA = "0x71B230")]
	protected void ConfirmLoop()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x71B3EC", Offset = "0x71B3EC", VA = "0x71B3EC", Slot = "10")]
	protected virtual void Yes()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x71B3F0", Offset = "0x71B3F0", VA = "0x71B3F0", Slot = "11")]
	protected virtual void No()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x71B3F4", Offset = "0x71B3F4", VA = "0x71B3F4")]
	protected void ProgressLoop()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x70E95C", Offset = "0x70E95C", VA = "0x70E95C")]
	protected void NextMessage(bool withSE = true)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x71B4CC", Offset = "0x71B4CC", VA = "0x71B4CC")]
	protected void ShowCaret()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x71B52C", Offset = "0x71B52C", VA = "0x71B52C")]
	protected void HideCaret()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x70E870", Offset = "0x70E870", VA = "0x70E870")]
	protected void SetMessages(string[] newMessages)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x71B58C", Offset = "0x71B58C", VA = "0x71B58C")]
	protected void SetMessage(string message)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x71B620", Offset = "0x71B620", VA = "0x71B620")]
	protected string[] MergedMessages(string[] messages1, string[] messages2)
	{
		return null;
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x70F314", Offset = "0x70F314", VA = "0x70F314")]
	public MessageEventBase()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x71B710", Offset = "0x71B710", VA = "0x71B710")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3CC8", Offset = "0x4D3CC8")]
	private void <ConfirmLoop>b__11_0()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x71B714", Offset = "0x71B714", VA = "0x71B714")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3CD8", Offset = "0x4D3CD8")]
	private void <ProgressLoop>b__14_0()
	{
	}
}
[Token(Token = "0x20000B4")]
public class MovingEvent : CommonBehaviour
{
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x86DEB4", Offset = "0x86DEB4", VA = "0x86DEB4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x86DFCC", Offset = "0x86DFCC", VA = "0x86DFCC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x86E0E4", Offset = "0x86E0E4", VA = "0x86E0E4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x86DF44", Offset = "0x86DF44", VA = "0x86DF44")]
	public void PauseAnimation()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x86E05C", Offset = "0x86E05C", VA = "0x86E05C")]
	public void ResumeAnimation()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x86E174", Offset = "0x86E174", VA = "0x86E174")]
	public MovingEvent()
	{
	}
}
[Token(Token = "0x20000B5")]
public class NoticeBoardEvent : MessageEventBase
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Multiline]
	public string message;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Multiline]
	public string messageEnglish;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string messageChinese;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x876490", Offset = "0x876490", VA = "0x876490", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x876580", Offset = "0x876580", VA = "0x876580")]
	private new void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x8765A8", Offset = "0x8765A8", VA = "0x8765A8")]
	private void TranslateIfChinese()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x8764B8", Offset = "0x8764B8", VA = "0x8764B8")]
	private void BeginMessage()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x8767D4", Offset = "0x8767D4", VA = "0x8767D4")]
	public NoticeBoardEvent()
	{
	}
}
[Token(Token = "0x20000B6")]
public class NotImplementedEvent : MessageEventBase
{
	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x876358", Offset = "0x876358", VA = "0x876358")]
	public new void Start()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x8763FC", Offset = "0x8763FC", VA = "0x8763FC", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x876424", Offset = "0x876424", VA = "0x876424")]
	private void BeginMessage()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x876488", Offset = "0x876488", VA = "0x876488")]
	public NotImplementedEvent()
	{
	}
}
[Token(Token = "0x20000B7")]
public class OpenTheChest : MessageEventBase
{
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC04C", Offset = "0x4CC04C")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OpenTheChest <>4__this;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string message;

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x6C8F70", Offset = "0x6C8F70", VA = "0x6C8F70")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x6C9018", Offset = "0x6C9018", VA = "0x6C9018")]
		internal void <GetItem>b__0()
		{
		}
	}

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FlagManager.ItemFlagId itemFlagId;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject itemObject;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Item? item;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private bool isChest;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string[] endingMessages;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string[] itemFullMessages;

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x6C857C", Offset = "0x6C857C", VA = "0x6C857C")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x6C8650", Offset = "0x6C8650", VA = "0x6C8650", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x6C8678", Offset = "0x6C8678", VA = "0x6C8678")]
	public void Open()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x6C8CDC", Offset = "0x6C8CDC", VA = "0x6C8CDC")]
	private void ItemFull()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x6C8970", Offset = "0x6C8970", VA = "0x6C8970")]
	private void GetItem()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x6C8F78", Offset = "0x6C8F78", VA = "0x6C8F78", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x6C9008", Offset = "0x6C9008", VA = "0x6C9008")]
	public OpenTheChest()
	{
	}
}
[Token(Token = "0x20000B8")]
public class OpenTheDoor : CommonBehaviour
{
	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject opositEvent;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject obstacle;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool isOpositSide;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x6C937C", Offset = "0x6C937C", VA = "0x6C937C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x6C93F4", Offset = "0x6C93F4", VA = "0x6C93F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x6C9504", Offset = "0x6C9504", VA = "0x6C9504")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x6C95E4", Offset = "0x6C95E4", VA = "0x6C95E4")]
	private void Open()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x6C9840", Offset = "0x6C9840", VA = "0x6C9840")]
	public OpenTheDoor()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x6C9848", Offset = "0x6C9848", VA = "0x6C9848")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3CE8", Offset = "0x4D3CE8")]
	private void <Open>b__8_0()
	{
	}
}
[Token(Token = "0x20000B9")]
public class RivalInFirstCaveEvent : MessageEventBase
{
	[Token(Token = "0x20002AE")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CA7")]
		Explain,
		[Token(Token = "0x4000CA8")]
		Rewarded,
		[Token(Token = "0x4000CA9")]
		Done
	}

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FlagManager.EventId greetingEvent;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private FlagManager.EventId thisEvent;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private FlagManager.EventId questEvent;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] firstMessages;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] secondMessages;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x82F8A4", Offset = "0x82F8A4", VA = "0x82F8A4", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x82F9AC", Offset = "0x82F9AC", VA = "0x82F9AC")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x82FABC", Offset = "0x82FABC", VA = "0x82FABC")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x82F8D8", Offset = "0x82F8D8", VA = "0x82F8D8")]
	private void Explain()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x830130", Offset = "0x830130", VA = "0x830130")]
	public RivalInFirstCaveEvent()
	{
	}
}
[Token(Token = "0x20000BA")]
public class RivalInIceCaveEvent : MessageEventBase
{
	[Token(Token = "0x20002AF")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CAB")]
		Explain,
		[Token(Token = "0x4000CAC")]
		Rewarded,
		[Token(Token = "0x4000CAD")]
		Done
	}

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FlagManager.EventId greetingEvent;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private FlagManager.EventId thisEvent;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private FlagManager.EventId prevEvent;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] firstMessages;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] secondMessages;

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x83014C", Offset = "0x83014C", VA = "0x83014C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x830254", Offset = "0x830254", VA = "0x830254")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x830364", Offset = "0x830364", VA = "0x830364")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x830180", Offset = "0x830180", VA = "0x830180")]
	private void Explain()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x8309E0", Offset = "0x8309E0", VA = "0x8309E0")]
	public RivalInIceCaveEvent()
	{
	}
}
[Token(Token = "0x20000BB")]
public class RivalInTempleEvent : MessageEventBase
{
	[Token(Token = "0x20002B0")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CAF")]
		Explain,
		[Token(Token = "0x4000CB0")]
		Rewarded,
		[Token(Token = "0x4000CB1")]
		Done
	}

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FlagManager.EventId thisEvent;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private FlagManager.EventId prevEvent;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private FlagManager.ItemFlagId swordFlag;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private FlagManager.ItemFlagId shieldFlag;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] firstMessages;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] secondMessages;

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x8309FC", Offset = "0x8309FC", VA = "0x8309FC", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x830B04", Offset = "0x830B04", VA = "0x830B04")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x830C14", Offset = "0x830C14", VA = "0x830C14")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x830A30", Offset = "0x830A30", VA = "0x830A30")]
	private void Explain()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x83138C", Offset = "0x83138C", VA = "0x83138C")]
	public RivalInTempleEvent()
	{
	}
}
[Token(Token = "0x20000BC")]
public class RivalInTempleValleyEvent : MessageEventBase
{
	[Token(Token = "0x20002B1")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CB3")]
		Explain,
		[Token(Token = "0x4000CB4")]
		Rewarded,
		[Token(Token = "0x4000CB5")]
		Done
	}

	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC05C", Offset = "0x4CC05C")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item item;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RivalInTempleValleyEvent <>4__this;

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x8326EC", Offset = "0x8326EC", VA = "0x8326EC")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x832744", Offset = "0x832744", VA = "0x832744")]
		internal void <GivenReward>b__0()
		{
		}
	}

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject itemObject;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private FlagManager.EventId thisEvent;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] firstMessages;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] secondMessages;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] gotMessages;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x8313A0", Offset = "0x8313A0", VA = "0x8313A0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x8314A8", Offset = "0x8314A8", VA = "0x8314A8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x832068", Offset = "0x832068", VA = "0x832068", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x831554", Offset = "0x831554", VA = "0x831554")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x8313D4", Offset = "0x8313D4", VA = "0x8313D4")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x8321FC", Offset = "0x8321FC", VA = "0x8321FC")]
	private void ItemFull()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x83255C", Offset = "0x83255C", VA = "0x83255C")]
	private void GivenReward()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x832134", Offset = "0x832134", VA = "0x832134")]
	private void Rewarded()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x8326F4", Offset = "0x8326F4", VA = "0x8326F4")]
	public RivalInTempleValleyEvent()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x832704", Offset = "0x832704", VA = "0x832704")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3CF8", Offset = "0x4D3CF8")]
	private void <EndEvent>b__10_0()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x832708", Offset = "0x832708", VA = "0x832708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D08", Offset = "0x4D3D08")]
	private void <Rewarded>b__15_0()
	{
	}
}
[Token(Token = "0x20000BD")]
public class RivalInValleyToCaveEvent : MessageEventBase
{
	[Token(Token = "0x20002B3")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CB9")]
		Explain,
		[Token(Token = "0x4000CBA")]
		Rewarded,
		[Token(Token = "0x4000CBB")]
		Done
	}

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject rootObject;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FlagManager.EventId greetingEvent;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private FlagManager.EventId thisEvent;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private FlagManager.EventId questEvent;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] firstMessages;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] secondMessages;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x8328B0", Offset = "0x8328B0", VA = "0x8328B0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x8329B8", Offset = "0x8329B8", VA = "0x8329B8")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x832AC8", Offset = "0x832AC8", VA = "0x832AC8")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x8328E4", Offset = "0x8328E4", VA = "0x8328E4")]
	private void Explain()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x833144", Offset = "0x833144", VA = "0x833144")]
	public RivalInValleyToCaveEvent()
	{
	}
}
[Token(Token = "0x20000BE")]
public class SimpleBedEvent : MessageEventBase
{
	[Token(Token = "0x20002B4")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CBD")]
		Normal,
		[Token(Token = "0x4000CBE")]
		Canceled,
		[Token(Token = "0x4000CBF")]
		WakeUp
	}

	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC06C", Offset = "0x4CC06C")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject mapAndPeople;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleBedEvent <>4__this;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__2;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__1;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x837B0C", Offset = "0x837B0C", VA = "0x837B0C")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x837D04", Offset = "0x837D04", VA = "0x837D04")]
		internal void <WakeUp>b__0()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x837E48", Offset = "0x837E48", VA = "0x837E48")]
		internal void <WakeUp>b__1()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x837F90", Offset = "0x837F90", VA = "0x837F90")]
		internal void <WakeUp>b__2()
		{
		}
	}

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] firstMessages;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] wakeUpMessages;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x837134", Offset = "0x837134", VA = "0x837134")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x8371A8", Offset = "0x8371A8", VA = "0x8371A8", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x837224", Offset = "0x837224", VA = "0x837224")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x83724C", Offset = "0x83724C", VA = "0x83724C")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x837554", Offset = "0x837554", VA = "0x837554", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x8371EC", Offset = "0x8371EC", VA = "0x8371EC")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x837570", Offset = "0x837570", VA = "0x837570")]
	private void ShowHotelConfirm()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x837798", Offset = "0x837798", VA = "0x837798", Slot = "10")]
	protected override void Yes()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x83788C", Offset = "0x83788C", VA = "0x83788C")]
	private void DoneLegendShieldEventWhenTheTiming()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x83779C", Offset = "0x83779C", VA = "0x83779C")]
	private void GoToSleep()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x8379E8", Offset = "0x8379E8", VA = "0x8379E8")]
	private void WakeUp()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x837B14", Offset = "0x837B14", VA = "0x837B14")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x837B8C", Offset = "0x837B8C", VA = "0x837B8C")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x837C04", Offset = "0x837C04", VA = "0x837C04", Slot = "11")]
	protected override void No()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x837C3C", Offset = "0x837C3C", VA = "0x837C3C")]
	public SimpleBedEvent()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x837C44", Offset = "0x837C44", VA = "0x837C44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D18", Offset = "0x4D3D18")]
	private void <GoToSleep>b__14_0()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x837D00", Offset = "0x837D00", VA = "0x837D00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D28", Offset = "0x4D3D28")]
	private void <GoToSleep>b__14_1()
	{
	}
}
[Token(Token = "0x20000BF")]
public class EnterSnowAreaFromS : EnterExitBase
{
	[Token(Token = "0x6000720")]
	[Address(RVA = "0x771358", Offset = "0x771358", VA = "0x771358")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x7713FC", Offset = "0x7713FC", VA = "0x7713FC")]
	public EnterSnowAreaFromS()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ExitSnowAreaFromS : EnterExitBase
{
	[Token(Token = "0x6000722")]
	[Address(RVA = "0x776B24", Offset = "0x776B24", VA = "0x776B24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x776BC8", Offset = "0x776BC8", VA = "0x776BC8")]
	public ExitSnowAreaFromS()
	{
	}
}
[Token(Token = "0x20000C1")]
public class EnterSnowVillage : EnterExitBase
{
	[Token(Token = "0x6000724")]
	[Address(RVA = "0x771404", Offset = "0x771404", VA = "0x771404")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x7714A8", Offset = "0x7714A8", VA = "0x7714A8")]
	public EnterSnowVillage()
	{
	}
}
[Token(Token = "0x20000C2")]
public class ExitSnowVillage : EnterExitBase
{
	[Token(Token = "0x6000726")]
	[Address(RVA = "0x776BD0", Offset = "0x776BD0", VA = "0x776BD0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x776C74", Offset = "0x776C74", VA = "0x776C74")]
	public ExitSnowVillage()
	{
	}
}
[Token(Token = "0x20000C3")]
public class BookManFirstTownEvent : MessageEventBase
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x85FB50", Offset = "0x85FB50", VA = "0x85FB50", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x85FBD0", Offset = "0x85FBD0", VA = "0x85FBD0")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x85FBF8", Offset = "0x85FBF8", VA = "0x85FBF8")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x85FB9C", Offset = "0x85FB9C", VA = "0x85FB9C")]
	private void Explain()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x85FF40", Offset = "0x85FF40", VA = "0x85FF40")]
	public BookManFirstTownEvent()
	{
	}
}
[Token(Token = "0x20000C4")]
public class EnterFirstTownFromCave : EnterExitBase
{
	[Token(Token = "0x600072D")]
	[Address(RVA = "0x7710A4", Offset = "0x7710A4", VA = "0x7710A4")]
	private new void Start()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x7710A8", Offset = "0x7710A8", VA = "0x7710A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x77114C", Offset = "0x77114C", VA = "0x77114C")]
	public EnterFirstTownFromCave()
	{
	}
}
[Token(Token = "0x20000C5")]
public class EnterTownFromNW : EnterExitBase
{
	[Token(Token = "0x6000730")]
	[Address(RVA = "0x7714B0", Offset = "0x7714B0", VA = "0x7714B0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x771554", Offset = "0x771554", VA = "0x771554")]
	public EnterTownFromNW()
	{
	}
}
[Token(Token = "0x20000C6")]
public class EnterTownFromS : EnterExitBase
{
	[Token(Token = "0x6000732")]
	[Address(RVA = "0x77155C", Offset = "0x77155C", VA = "0x77155C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x771600", Offset = "0x771600", VA = "0x771600")]
	public EnterTownFromS()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ExitFirstTownToCave : EnterExitBase
{
	[Token(Token = "0x6000734")]
	[Address(RVA = "0x775FC4", Offset = "0x775FC4", VA = "0x775FC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x776068", Offset = "0x776068", VA = "0x776068")]
	public ExitFirstTownToCave()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ExitTownFromS : EnterExitBase
{
	[Token(Token = "0x6000736")]
	[Address(RVA = "0x776DD4", Offset = "0x776DD4", VA = "0x776DD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x776E78", Offset = "0x776E78", VA = "0x776E78")]
	public ExitTownFromS()
	{
	}
}
[Token(Token = "0x20000C9")]
public class FirstTownExplainEvent : MessageEventBase
{
	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x77B080", Offset = "0x77B080", VA = "0x77B080", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x77B0FC", Offset = "0x77B0FC", VA = "0x77B0FC")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x77B124", Offset = "0x77B124", VA = "0x77B124")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x77B0C8", Offset = "0x77B0C8", VA = "0x77B0C8")]
	private void Explain()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x77B370", Offset = "0x77B370", VA = "0x77B370")]
	public FirstTownExplainEvent()
	{
	}
}
[Token(Token = "0x20000CA")]
public class FirstTownLeaderEvent : MessageEventBase
{
	[Token(Token = "0x20002B6")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CC5")]
		Explain,
		[Token(Token = "0x4000CC6")]
		Done,
		[Token(Token = "0x4000CC7")]
		Reward,
		[Token(Token = "0x4000CC8")]
		Rewarded,
		[Token(Token = "0x4000CC9")]
		ItemFull
	}

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC07C", Offset = "0x4CC07C")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FirstTownLeaderEvent <>4__this;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Item itemExisted;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x77EA04", Offset = "0x77EA04", VA = "0x77EA04")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x77F1EC", Offset = "0x77F1EC", VA = "0x77F1EC")]
		internal void <GivenReward>b__0()
		{
		}
	}

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject itemObject;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] firstMessages;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] yesMessages;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] noMessages;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] explainedMessages;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] thanksMessages;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string[] thanksWithoutExplainMessages;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] rewardedMessages;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] beforeLegendShieldMessages;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string[] afterLegendShieldMessages;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string[] afterItemFullMessages;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x77B378", Offset = "0x77B378", VA = "0x77B378", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x77B63C", Offset = "0x77B63C", VA = "0x77B63C")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x77B664", Offset = "0x77B664", VA = "0x77B664")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x77B4D0", Offset = "0x77B4D0", VA = "0x77B4D0")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x77E1C8", Offset = "0x77E1C8", VA = "0x77E1C8", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x77B504", Offset = "0x77B504", VA = "0x77B504")]
	private void ExplainAgain()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x77B56C", Offset = "0x77B56C", VA = "0x77B56C")]
	private void MessageAfterRewarded()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x77B538", Offset = "0x77B538", VA = "0x77B538")]
	private void MessageAfterGotLegendShield()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x77B5A0", Offset = "0x77B5A0", VA = "0x77B5A0")]
	private void MessageAfterItemFull()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x77B5D4", Offset = "0x77B5D4", VA = "0x77B5D4")]
	private void Thanks()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x77B608", Offset = "0x77B608", VA = "0x77B608")]
	private void ThanksWithoutExplain()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x77E4EC", Offset = "0x77E4EC", VA = "0x77E4EC")]
	private void Rewarded()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x77E2AC", Offset = "0x77E2AC", VA = "0x77E2AC")]
	private void StartConfirm()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x77E5DC", Offset = "0x77E5DC", VA = "0x77E5DC")]
	private void ItemFull()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x77E848", Offset = "0x77E848", VA = "0x77E848")]
	private void GivenReward()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x77F0E4", Offset = "0x77F0E4", VA = "0x77F0E4", Slot = "10")]
	protected override void Yes()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x77F170", Offset = "0x77F170", VA = "0x77F170", Slot = "11")]
	protected override void No()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x77F1A4", Offset = "0x77F1A4", VA = "0x77F1A4")]
	public FirstTownLeaderEvent()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x77F1AC", Offset = "0x77F1AC", VA = "0x77F1AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D38", Offset = "0x4D3D38")]
	private void <EndEvent>b__17_0()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x77F1B0", Offset = "0x77F1B0", VA = "0x77F1B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D48", Offset = "0x4D3D48")]
	private void <Rewarded>b__24_0()
	{
	}
}
[Token(Token = "0x20000CB")]
public class FirstTownQuestEvent : MessageEventBase
{
	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isFinished;

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x77F444", Offset = "0x77F444", VA = "0x77F444")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x77F448", Offset = "0x77F448", VA = "0x77F448")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x77F4F0", Offset = "0x77F4F0", VA = "0x77F4F0")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x77F590", Offset = "0x77F590", VA = "0x77F590", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x77F638", Offset = "0x77F638", VA = "0x77F638")]
	private void BeginBeforeEvent()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x77F70C", Offset = "0x77F70C", VA = "0x77F70C")]
	private void BeginBattle()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x77F870", Offset = "0x77F870", VA = "0x77F870")]
	public FirstTownQuestEvent()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x77F878", Offset = "0x77F878", VA = "0x77F878")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D58", Offset = "0x4D3D58")]
	private void <BeginBeforeEvent>b__5_0()
	{
	}
}
[Token(Token = "0x20000CC")]
public class MyLonelyEvent : MessageEventBase
{
	[Token(Token = "0x20002B8")]
	public enum MessageStatus
	{
		[Token(Token = "0x4000CCD")]
		Normal,
		[Token(Token = "0x4000CCE")]
		Cleared,
		[Token(Token = "0x4000CCF")]
		Cleared2,
		[Token(Token = "0x4000CD0")]
		Killed,
		[Token(Token = "0x4000CD1")]
		End
	}

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MessageStatus messageStatus;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] firstMessages;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] clearedMessages;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] clearedMessages2;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] killedMessages;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] killedMessages2;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject auraGrave;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x86E17C", Offset = "0x86E17C", VA = "0x86E17C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x86E220", Offset = "0x86E220", VA = "0x86E220")]
	public void BeginEventForKilled()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x86E254", Offset = "0x86E254", VA = "0x86E254")]
	public new void Start()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x86E324", Offset = "0x86E324", VA = "0x86E324")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x86F18C", Offset = "0x86F18C", VA = "0x86F18C")]
	private void BeginEventAtGoodTiming()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x86E51C", Offset = "0x86E51C", VA = "0x86E51C")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x86F264", Offset = "0x86F264", VA = "0x86F264", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x86F3F4", Offset = "0x86F3F4", VA = "0x86F3F4")]
	private void MaiLongMessage()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x86F4BC", Offset = "0x86F4BC", VA = "0x86F4BC")]
	private void GoodbyeMessage()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x86F368", Offset = "0x86F368", VA = "0x86F368")]
	private void BeginBattle()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x86F5D0", Offset = "0x86F5D0", VA = "0x86F5D0")]
	public MyLonelyEvent()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x86F5DC", Offset = "0x86F5DC", VA = "0x86F5DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D68", Offset = "0x4D3D68")]
	private void <OnEnable>b__12_0()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x86F5E4", Offset = "0x86F5E4", VA = "0x86F5E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D78", Offset = "0x4D3D78")]
	private void <OnEnable>b__12_1()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x86F5E8", Offset = "0x86F5E8", VA = "0x86F5E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D88", Offset = "0x4D3D88")]
	private void <BeginEventAtGoodTiming>b__13_0()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x86F61C", Offset = "0x86F61C", VA = "0x86F61C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3D98", Offset = "0x4D3D98")]
	private void <BeginEventAtGoodTiming>b__13_1()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x86F620", Offset = "0x86F620", VA = "0x86F620")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3DA8", Offset = "0x4D3DA8")]
	private void <MaiLongMessage>b__16_0()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x86F654", Offset = "0x86F654", VA = "0x86F654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3DB8", Offset = "0x4D3DB8")]
	private void <GoodbyeMessage>b__17_0()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x86F688", Offset = "0x86F688", VA = "0x86F688")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3DC8", Offset = "0x4D3DC8")]
	private void <BeginBattle>b__18_0()
	{
	}
}
[Token(Token = "0x20000CD")]
public class OldestWomanFirstTownEvent : MessageEventBase
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x6C7C90", Offset = "0x6C7C90", VA = "0x6C7C90", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x6C7D10", Offset = "0x6C7D10", VA = "0x6C7D10")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x6C7D38", Offset = "0x6C7D38", VA = "0x6C7D38")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x6C7CDC", Offset = "0x6C7CDC", VA = "0x6C7CDC")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x6C8080", Offset = "0x6C8080", VA = "0x6C8080")]
	public OldestWomanFirstTownEvent()
	{
	}
}
[Token(Token = "0x20000CE")]
public class SoldierInTrainingEvent : MessageEventBase
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] endingMessages;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x83D9FC", Offset = "0x83D9FC", VA = "0x83D9FC", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x83DAC4", Offset = "0x83DAC4", VA = "0x83DAC4")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x83DAEC", Offset = "0x83DAEC", VA = "0x83DAEC")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x83DA30", Offset = "0x83DA30", VA = "0x83DA30")]
	private void Explain()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x83E1F8", Offset = "0x83E1F8", VA = "0x83E1F8")]
	public SoldierInTrainingEvent()
	{
	}
}
[Token(Token = "0x20000CF")]
public class VillageManAFirstTownEvent : MessageEventBase
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x104AED0", Offset = "0x104AED0", VA = "0x104AED0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x104AF50", Offset = "0x104AF50", VA = "0x104AF50")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x104AF78", Offset = "0x104AF78", VA = "0x104AF78")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x104AF1C", Offset = "0x104AF1C", VA = "0x104AF1C")]
	private void Explain()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x104B2C0", Offset = "0x104B2C0", VA = "0x104B2C0")]
	public VillageManAFirstTownEvent()
	{
	}
}
[Token(Token = "0x20000D0")]
public class WomanBFirstTownEvent : MessageEventBase
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x104B8C0", Offset = "0x104B8C0", VA = "0x104B8C0", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x104B940", Offset = "0x104B940", VA = "0x104B940")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x104B968", Offset = "0x104B968", VA = "0x104B968")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x104B90C", Offset = "0x104B90C", VA = "0x104B90C")]
	private void Explain()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x104C000", Offset = "0x104C000", VA = "0x104C000")]
	public WomanBFirstTownEvent()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TransporterEvent : MessageEventBase
{
	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC08C", Offset = "0x4CC08C")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransporterEvent <>4__this;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MoveSceneManager moveSceneManager;

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x8483D8", Offset = "0x8483D8", VA = "0x8483D8")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x848640", Offset = "0x848640", VA = "0x848640")]
		internal void <MoveScene>b__0()
		{
		}
	}

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool isCanceled;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string[] firstMessages;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x847F8C", Offset = "0x847F8C", VA = "0x847F8C")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x847868", Offset = "0x847868", VA = "0x847868", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x847F94", Offset = "0x847F94", VA = "0x847F94", Slot = "12")]
	protected virtual void SetPrice()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x848010", Offset = "0x848010", VA = "0x848010", Slot = "13")]
	protected virtual void BeginMessage()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x846B30", Offset = "0x846B30", VA = "0x846B30")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x848048", Offset = "0x848048", VA = "0x848048")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x847B1C", Offset = "0x847B1C", VA = "0x847B1C", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x847CC0", Offset = "0x847CC0", VA = "0x847CC0")]
	protected void SelectLoop()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x848198", Offset = "0x848198", VA = "0x848198")]
	private void Decided()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x847C14", Offset = "0x847C14", VA = "0x847C14")]
	protected void ShowPlaceList()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x848248", Offset = "0x848248", VA = "0x848248")]
	protected void MoveScene()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x8483E0", Offset = "0x8483E0", VA = "0x8483E0", Slot = "14")]
	protected virtual void ShowMoveMessage()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x848530", Offset = "0x848530", VA = "0x848530", Slot = "15")]
	protected virtual void NoMoney()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x848344", Offset = "0x848344", VA = "0x848344")]
	protected void Cancel()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x848534", Offset = "0x848534", VA = "0x848534", Slot = "16")]
	protected virtual void ShowCancelMessage()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x848540", Offset = "0x848540", VA = "0x848540")]
	protected Place DecidedValue()
	{
		return default(Place);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x847F84", Offset = "0x847F84", VA = "0x847F84")]
	public TransporterEvent()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x84863C", Offset = "0x84863C", VA = "0x84863C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3DD8", Offset = "0x4D3DD8")]
	private void <SelectLoop>b__9_0()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TransportManEvent : TransporterEvent
{
	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] noPlacesMessages;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] normalMessages;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] cancelMessages;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] endingMessages;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x846B00", Offset = "0x846B00", VA = "0x846B00")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x846B58", Offset = "0x846B58", VA = "0x846B58")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x84781C", Offset = "0x84781C", VA = "0x84781C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x8478A8", Offset = "0x8478A8", VA = "0x8478A8", Slot = "12")]
	protected override void SetPrice()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x84792C", Offset = "0x84792C", VA = "0x84792C", Slot = "13")]
	protected override void BeginMessage()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x847A28", Offset = "0x847A28", VA = "0x847A28", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x847D94", Offset = "0x847D94", VA = "0x847D94", Slot = "14")]
	protected override void ShowMoveMessage()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x847E6C", Offset = "0x847E6C", VA = "0x847E6C", Slot = "15")]
	protected override void NoMoney()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x847F40", Offset = "0x847F40", VA = "0x847F40", Slot = "16")]
	protected override void ShowCancelMessage()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x847F7C", Offset = "0x847F7C", VA = "0x847F7C")]
	public TransportManEvent()
	{
	}
}
[Token(Token = "0x20000D3")]
public class BarMasterAquaBellaEvent : MessageEventBase
{
	[Token(Token = "0x20002BA")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CD5")]
		Normal,
		[Token(Token = "0x4000CD6")]
		Canceled,
		[Token(Token = "0x4000CD7")]
		NoMoney,
		[Token(Token = "0x4000CD8")]
		Drink
	}

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int price;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip drinkSE;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isCanceled;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] cancelMessages;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] noMoneyMessages;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] drinkMessages;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] firstMessages;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x84B75C", Offset = "0x84B75C", VA = "0x84B75C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x84BA88", Offset = "0x84BA88", VA = "0x84BA88")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x84BAB0", Offset = "0x84BAB0", VA = "0x84BAB0")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x84BFD8", Offset = "0x84BFD8", VA = "0x84BFD8", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x84B790", Offset = "0x84B790", VA = "0x84B790")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x84BFF4", Offset = "0x84BFF4", VA = "0x84BFF4")]
	private void ShowBarConfirm()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x84C184", Offset = "0x84C184", VA = "0x84C184")]
	private void ShowMoneyConfirm(string question)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x84C34C", Offset = "0x84C34C", VA = "0x84C34C", Slot = "10")]
	protected override void Yes()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x84C350", Offset = "0x84C350", VA = "0x84C350")]
	private void CheckMoney()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x84C438", Offset = "0x84C438", VA = "0x84C438")]
	private void Drink()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x84C3FC", Offset = "0x84C3FC", VA = "0x84C3FC")]
	private void CannotPay()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x84C614", Offset = "0x84C614", VA = "0x84C614", Slot = "11")]
	protected override void No()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x84C650", Offset = "0x84C650", VA = "0x84C650")]
	public BarMasterAquaBellaEvent()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x84C660", Offset = "0x84C660", VA = "0x84C660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3DE8", Offset = "0x4D3DE8")]
	private void <Drink>b__18_0()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x84C6CC", Offset = "0x84C6CC", VA = "0x84C6CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3DF8", Offset = "0x4D3DF8")]
	private void <Drink>b__18_1()
	{
	}
}
[Token(Token = "0x20000D4")]
public class BookManAquaBellaEvent : MessageEventBase
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x85F5A8", Offset = "0x85F5A8", VA = "0x85F5A8", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x85F628", Offset = "0x85F628", VA = "0x85F628")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x85F650", Offset = "0x85F650", VA = "0x85F650")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x85F5F4", Offset = "0x85F5F4", VA = "0x85F5F4")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x85FB48", Offset = "0x85FB48", VA = "0x85FB48")]
	public BookManAquaBellaEvent()
	{
	}
}
[Token(Token = "0x20000D5")]
public class EnterWallCityFromN : EnterExitBase
{
	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x771608", Offset = "0x771608", VA = "0x771608")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x7716AC", Offset = "0x7716AC", VA = "0x7716AC")]
	public EnterWallCityFromN()
	{
	}
}
[Token(Token = "0x20000D6")]
public class EnterWallCityFromS : EnterExitBase
{
	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x7716B4", Offset = "0x7716B4", VA = "0x7716B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x771758", Offset = "0x771758", VA = "0x771758")]
	public EnterWallCityFromS()
	{
	}
}
[Token(Token = "0x20000D7")]
public class ExitWallCityFromN : EnterExitBase
{
	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x776E80", Offset = "0x776E80", VA = "0x776E80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x776F24", Offset = "0x776F24", VA = "0x776F24")]
	public ExitWallCityFromN()
	{
	}
}
[Token(Token = "0x20000D8")]
public class ExitWallCityFromS : EnterExitBase
{
	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x776F2C", Offset = "0x776F2C", VA = "0x776F2C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x776FD0", Offset = "0x776FD0", VA = "0x776FD0")]
	public ExitWallCityFromS()
	{
	}
}
[Token(Token = "0x20000D9")]
public class LeaderAquaBellaEvent : MessageEventBase
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x712560", Offset = "0x712560", VA = "0x712560", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x7125CC", Offset = "0x7125CC", VA = "0x7125CC")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x7125F0", Offset = "0x7125F0", VA = "0x7125F0")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x7125A0", Offset = "0x7125A0", VA = "0x7125A0")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x712A34", Offset = "0x712A34", VA = "0x712A34")]
	public LeaderAquaBellaEvent()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ManAquaBellaEvent : MessageEventBase
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x71A724", Offset = "0x71A724", VA = "0x71A724", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x71A790", Offset = "0x71A790", VA = "0x71A790")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x71A7B4", Offset = "0x71A7B4", VA = "0x71A7B4")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x71A764", Offset = "0x71A764", VA = "0x71A764")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x71AB08", Offset = "0x71AB08", VA = "0x71AB08")]
	public ManAquaBellaEvent()
	{
	}
}
[Token(Token = "0x20000DB")]
public class OldestManAquaBellaEvent : MessageEventBase
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x6C759C", Offset = "0x6C759C", VA = "0x6C759C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x6C761C", Offset = "0x6C761C", VA = "0x6C761C")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x6C7644", Offset = "0x6C7644", VA = "0x6C7644")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x6C75E8", Offset = "0x6C75E8", VA = "0x6C75E8")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x6C7890", Offset = "0x6C7890", VA = "0x6C7890")]
	public OldestManAquaBellaEvent()
	{
	}
}
[Token(Token = "0x20000DC")]
public class OldestWomanAquaBellaEvent : MessageEventBase
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x6C7898", Offset = "0x6C7898", VA = "0x6C7898", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x6C7918", Offset = "0x6C7918", VA = "0x6C7918")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x6C7940", Offset = "0x6C7940", VA = "0x6C7940")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x6C78E4", Offset = "0x6C78E4", VA = "0x6C78E4")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x6C7C88", Offset = "0x6C7C88", VA = "0x6C7C88")]
	public OldestWomanAquaBellaEvent()
	{
	}
}
[Token(Token = "0x20000DD")]
public class SmithAquaBellaEvent : MessageEventBase
{
	[Token(Token = "0x20002BB")]
	private enum MessageStatus
	{
		[Token(Token = "0x4000CDA")]
		HaveOldShield,
		[Token(Token = "0x4000CDB")]
		AskOldShieldConfirm,
		[Token(Token = "0x4000CDC")]
		Agree,
		[Token(Token = "0x4000CDD")]
		WillGetLegendShield,
		[Token(Token = "0x4000CDE")]
		GotLegendShield,
		[Token(Token = "0x4000CDF")]
		HadLegendShield,
		[Token(Token = "0x4000CE0")]
		Done,
		[Token(Token = "0x4000CE1")]
		ItemFull
	}

	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC09C", Offset = "0x4CC09C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SmithAquaBellaEvent <>4__this;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Item item;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__2;

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x83BD88", Offset = "0x83BD88", VA = "0x83BD88")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x83BED4", Offset = "0x83BED4", VA = "0x83BED4")]
		internal void <GivenReward>b__0()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x83C044", Offset = "0x83C044", VA = "0x83C044")]
		internal void <GivenReward>b__2()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x83C1F4", Offset = "0x83C1F4", VA = "0x83C1F4")]
		internal void <GivenReward>b__1()
		{
		}
	}

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageStatus messageStatus;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject itemObject;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] firstMessages;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string[] noShieldMessages;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string[] haveShieldMessages;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string[] haveShieldMessages2;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string[] cancelMessages;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string[] agreeMessages;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] questMessages;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string[] questMessages2;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string[] gotSandMessages;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string[] gotSandMessages2;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string[] completeMessages;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string[] completeMessages2;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string[] doneEventMessages;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private string[] doneEventMessages2;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string[] afterItemFullMessages;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private AudioClip getSpecialItemSE;

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x838C4C", Offset = "0x838C4C", VA = "0x838C4C", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x8390CC", Offset = "0x8390CC", VA = "0x8390CC")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x8390F4", Offset = "0x8390F4", VA = "0x8390F4")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x83B2E0", Offset = "0x83B2E0", VA = "0x83B2E0", Slot = "9")]
	public override void EndEvent()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x838E28", Offset = "0x838E28", VA = "0x838E28")]
	private void HadLegendShield()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x83B390", Offset = "0x83B390", VA = "0x83B390")]
	private void HadLegendShield2()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x838E64", Offset = "0x838E64", VA = "0x838E64")]
	private void MessageAfterItemFull()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x839034", Offset = "0x839034", VA = "0x839034")]
	private void HadOldShield()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x83B428", Offset = "0x83B428", VA = "0x83B428")]
	private void HadOldShield2()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x83B4C0", Offset = "0x83B4C0", VA = "0x83B4C0")]
	private void ShowAskShieldConfirm()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x83BA3C", Offset = "0x83BA3C", VA = "0x83BA3C", Slot = "10")]
	protected override void Yes()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x83B6E8", Offset = "0x83B6E8", VA = "0x83B6E8")]
	private void AgreeNoSand()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x838FF8", Offset = "0x838FF8", VA = "0x838FF8")]
	private void Quest()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x838F10", Offset = "0x838F10", VA = "0x838F10")]
	private void HadSand()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x838ED4", Offset = "0x838ED4", VA = "0x838ED4")]
	private void AskedSand()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x838E98", Offset = "0x838E98", VA = "0x838E98")]
	private void Complete()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x83BB24", Offset = "0x83BB24", VA = "0x83BB24")]
	private void ItemFull()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x83B780", Offset = "0x83B780", VA = "0x83B780")]
	private void GivenReward()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x83B920", Offset = "0x83B920", VA = "0x83B920")]
	private void GotShield()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x83BD90", Offset = "0x83BD90", VA = "0x83BD90", Slot = "11")]
	protected override void No()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x839080", Offset = "0x839080", VA = "0x839080")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x83BDC4", Offset = "0x83BDC4", VA = "0x83BDC4")]
	public SmithAquaBellaEvent()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x83BDD4", Offset = "0x83BDD4", VA = "0x83BDD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E08", Offset = "0x4D3E08")]
	private void <HadLegendShield2>b__24_0()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x83BE10", Offset = "0x83BE10", VA = "0x83BE10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E18", Offset = "0x4D3E18")]
	private void <HadOldShield2>b__27_0()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x83BE4C", Offset = "0x83BE4C", VA = "0x83BE4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E28", Offset = "0x4D3E28")]
	private void <AgreeNoSand>b__30_0()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x83BE98", Offset = "0x83BE98", VA = "0x83BE98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E38", Offset = "0x4D3E38")]
	private void <GotShield>b__37_0()
	{
	}
}
[Token(Token = "0x20000DE")]
public class WallCityExplainEvent : MessageEventBase
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x104B2C8", Offset = "0x104B2C8", VA = "0x104B2C8", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x104B348", Offset = "0x104B348", VA = "0x104B348")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x104B370", Offset = "0x104B370", VA = "0x104B370")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x104B314", Offset = "0x104B314", VA = "0x104B314")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x104B5BC", Offset = "0x104B5BC", VA = "0x104B5BC")]
	public WallCityExplainEvent()
	{
	}
}
[Token(Token = "0x20000DF")]
public class WomanBAquaBellaEvent : MessageEventBase
{
	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string[] firstMessages;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x104B5C4", Offset = "0x104B5C4", VA = "0x104B5C4", Slot = "4")]
	public override void BeginEvent()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x104B644", Offset = "0x104B644", VA = "0x104B644")]
	public new void OnEnable()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x104B66C", Offset = "0x104B66C", VA = "0x104B66C")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x104B610", Offset = "0x104B610", VA = "0x104B610")]
	private void Explain()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x104B8B8", Offset = "0x104B8B8", VA = "0x104B8B8")]
	public WomanBAquaBellaEvent()
	{
	}
}
[Token(Token = "0x20000E0")]
public class HumanAnimationEvent : CommonBehaviour
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int count;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float duration;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nextBlinkCount;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x78533C", Offset = "0x78533C", VA = "0x78533C")]
	public void Start()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x7853A8", Offset = "0x7853A8", VA = "0x7853A8")]
	private void ResetNextBlinkCount()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x7853D8", Offset = "0x7853D8", VA = "0x7853D8")]
	public void Update()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x78543C", Offset = "0x78543C", VA = "0x78543C")]
	private void Blink()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x7854C8", Offset = "0x7854C8", VA = "0x7854C8")]
	public HumanAnimationEvent()
	{
	}
}
[Token(Token = "0x20000E1")]
public struct Item
{
	[Token(Token = "0x20002BD")]
	public enum ItemId
	{
		[Token(Token = "0x4000CE6")]
		Potion = 0,
		[Token(Token = "0x4000CE7")]
		Antidote = 1,
		[Token(Token = "0x4000CE8")]
		HiPotion = 2,
		[Token(Token = "0x4000CE9")]
		BellaWater = 3,
		[Token(Token = "0x4000CEA")]
		TransportStone = 4,
		[Token(Token = "0x4000CEB")]
		FireStone = 5,
		[Token(Token = "0x4000CEC")]
		FrozenStone = 6,
		[Token(Token = "0x4000CED")]
		GoldCoin = 8,
		[Token(Token = "0x4000CEE")]
		SilverCoin = 9,
		[Token(Token = "0x4000CEF")]
		BronzeCoin = 10,
		[Token(Token = "0x4000CF0")]
		WoodSword = 11,
		[Token(Token = "0x4000CF1")]
		KnightSword = 12,
		[Token(Token = "0x4000CF2")]
		IronSword = 13,
		[Token(Token = "0x4000CF3")]
		AquaSword = 14,
		[Token(Token = "0x4000CF4")]
		KnightShield = 15,
		[Token(Token = "0x4000CF5")]
		IronShield = 16,
		[Token(Token = "0x4000CF6")]
		Elixir = 17,
		[Token(Token = "0x4000CF7")]
		GodShield = 994,
		[Token(Token = "0x4000CF8")]
		GodSword = 995,
		[Token(Token = "0x4000CF9")]
		CleaningSand = 996,
		[Token(Token = "0x4000CFA")]
		OldShield = 997,
		[Token(Token = "0x4000CFB")]
		LegendShield = 998,
		[Token(Token = "0x4000CFC")]
		Excalibur = 999,
		[Token(Token = "0x4000CFD")]
		None = -1
	}

	[Token(Token = "0x20002BE")]
	public enum ItemType
	{
		[Token(Token = "0x4000CFF")]
		Recover,
		[Token(Token = "0x4000D00")]
		MPRecover,
		[Token(Token = "0x4000D01")]
		Support,
		[Token(Token = "0x4000D02")]
		Treasure,
		[Token(Token = "0x4000D03")]
		Sword,
		[Token(Token = "0x4000D04")]
		Shield
	}

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ItemId id;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string desc;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int price;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canUseOnField;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool canUseOnBattle;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool canDrop;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ItemType type;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int val;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string filename;

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x52E4A4", Offset = "0x52E4A4", VA = "0x52E4A4")]
	public Item(ItemId id, string name, string desc, int price, bool canUseOnField, bool canUseOnBattle, bool canDrop, ItemType type, int val, string filename)
	{
	}
}
[Token(Token = "0x20000E2")]
public struct BringItem
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Item item;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int count;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x5334D4", Offset = "0x5334D4", VA = "0x5334D4")]
	public BringItem(Item item, int count)
	{
	}
}
[Token(Token = "0x20000E3")]
public class ItemManager : MonoBehaviour
{
	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<BringItem> BringItems;

	[Token(Token = "0x4000522")]
	public const int MaxBringNum = 10;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Item NullItem;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x785580", Offset = "0x785580", VA = "0x785580")]
	public static void InitBringItemsForNewGame()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x77ECCC", Offset = "0x77ECCC", VA = "0x77ECCC")]
	public static bool GetItem(Item item)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x785734", Offset = "0x785734", VA = "0x785734")]
	public static void SortEquipment()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x785B40", Offset = "0x785B40", VA = "0x785B40")]
	public static bool TrashItem(int orderNum, bool withMessage = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x7860F8", Offset = "0x7860F8", VA = "0x7860F8")]
	public static void DecreaseItem(Item item)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x785F30", Offset = "0x785F30", VA = "0x785F30")]
	private static void RemoveEquipment(Item item)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x780B18", Offset = "0x780B18", VA = "0x780B18")]
	public static Item ItemFromItemId(Item.ItemId itemId)
	{
		return default(Item);
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x786364", Offset = "0x786364", VA = "0x786364")]
	public static bool UseItem(Item item, MoveSceneManager moveSceneManager, CanvasSoundManager soundManager)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x787540", Offset = "0x787540", VA = "0x787540")]
	public static int RandomExecVal(int baseVal)
	{
		return default(int);
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x77EF98", Offset = "0x77EF98", VA = "0x77EF98")]
	public static GameObject GetEffect(string itemFilename, GameObject infoCanvas)
	{
		return null;
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x7875DC", Offset = "0x7875DC", VA = "0x7875DC")]
	private static GameObject InstantiateItem(string itemFilename, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x787764", Offset = "0x787764", VA = "0x787764")]
	public ItemManager()
	{
	}
}
[Token(Token = "0x20000E4")]
public struct Magic
{
	[Token(Token = "0x20002BF")]
	public enum MagicId
	{
		[Token(Token = "0x4000D06")]
		Fireball = 0,
		[Token(Token = "0x4000D07")]
		Heal = 1,
		[Token(Token = "0x4000D08")]
		Shield = 2,
		[Token(Token = "0x4000D09")]
		Antidote = 3,
		[Token(Token = "0x4000D0A")]
		Transport = 4,
		[Token(Token = "0x4000D0B")]
		Healest = 5,
		[Token(Token = "0x4000D0C")]
		Frozen = 6,
		[Token(Token = "0x4000D0D")]
		Lightning = 7,
		[Token(Token = "0x4000D0E")]
		KnightPower = 8,
		[Token(Token = "0x4000D0F")]
		TrialLightning = 9,
		[Token(Token = "0x4000D10")]
		ResistBarrier = 10,
		[Token(Token = "0x4000D11")]
		Healex = 11,
		[Token(Token = "0x4000D12")]
		None = -1
	}

	[Token(Token = "0x20002C0")]
	public enum MagicType
	{
		[Token(Token = "0x4000D14")]
		Attack,
		[Token(Token = "0x4000D15")]
		Recover,
		[Token(Token = "0x4000D16")]
		Support
	}

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MagicId id;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string desc;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cost;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canUseOnField;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MagicType type;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int val;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x52DBCC", Offset = "0x52DBCC", VA = "0x52DBCC")]
	public Magic(MagicId id, string name, string desc, int cost, bool canUseOnField, MagicType type, int val)
	{
	}
}
[Token(Token = "0x20000E5")]
public class MagicManager : MonoBehaviour
{
	[Token(Token = "0x6000805")]
	[Address(RVA = "0x7175E8", Offset = "0x7175E8", VA = "0x7175E8")]
	public static List<Magic> LearnedMagics()
	{
		return null;
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x717734", Offset = "0x717734", VA = "0x717734")]
	public static Magic? LearningMagicAtLv(int lv)
	{
		return null;
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x717A28", Offset = "0x717A28", VA = "0x717A28")]
	public static Magic MagicFromMagicId(Magic.MagicId magicId)
	{
		return default(Magic);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x718820", Offset = "0x718820", VA = "0x718820")]
	public static int MagicExecVal(Magic magic)
	{
		return default(int);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x718914", Offset = "0x718914", VA = "0x718914")]
	public static void UseMagic(Magic magic, MoveSceneManager moveSceneManager, CanvasSoundManager soundManager)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x7192DC", Offset = "0x7192DC", VA = "0x7192DC")]
	public MagicManager()
	{
	}
}
[Token(Token = "0x20000E6")]
public class OpeningManager : MenuManagerBase
{
	[Token(Token = "0x20002C1")]
	public enum BASE_OPTIONS
	{
		[Token(Token = "0x4000D18")]
		NEWGAME,
		[Token(Token = "0x4000D19")]
		CONTINUE
	}

	[Token(Token = "0x20002C2")]
	public enum LANGUAGE_OPTIONS
	{
		[Token(Token = "0x4000D1B")]
		JAPANESE,
		[Token(Token = "0x4000D1C")]
		ENGLISH,
		[Token(Token = "0x4000D1D")]
		CHINESE
	}

	[Token(Token = "0x20002C3")]
	private enum MenuStatus
	{
		[Token(Token = "0x4000D1F")]
		Trigger,
		[Token(Token = "0x4000D20")]
		Base,
		[Token(Token = "0x4000D21")]
		List,
		[Token(Token = "0x4000D22")]
		Language,
		[Token(Token = "0x4000D23")]
		Name
	}

	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC0AC", Offset = "0x4CC0AC")]
	private sealed class <>c__DisplayClass48_0
	{
		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OpeningManager <>4__this;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDuration;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool shouldBeginNewGame;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__7;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action <>9__6;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action <>9__5;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action <>9__4;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action <>9__3;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action <>9__2;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action <>9__1;

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x6CB0C8", Offset = "0x6CB0C8", VA = "0x6CB0C8")]
		public <>c__DisplayClass48_0()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x6CBD48", Offset = "0x6CBD48", VA = "0x6CBD48")]
		internal void <TriggerDecideEffect>b__0()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x6CBE60", Offset = "0x6CBE60", VA = "0x6CBE60")]
		internal void <TriggerDecideEffect>b__1()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x6CBF78", Offset = "0x6CBF78", VA = "0x6CBF78")]
		internal void <TriggerDecideEffect>b__2()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x6CC090", Offset = "0x6CC090", VA = "0x6CC090")]
		internal void <TriggerDecideEffect>b__3()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x6CC1A8", Offset = "0x6CC1A8", VA = "0x6CC1A8")]
		internal void <TriggerDecideEffect>b__4()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x6CC2C0", Offset = "0x6CC2C0", VA = "0x6CC2C0")]
		internal void <TriggerDecideEffect>b__5()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x6CC3D8", Offset = "0x6CC3D8", VA = "0x6CC3D8")]
		internal void <TriggerDecideEffect>b__6()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x6CC4CC", Offset = "0x6CC4CC", VA = "0x6CC4CC")]
		internal void <TriggerDecideEffect>b__7()
		{
		}
	}

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float titleAlpha;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool needToFadeOut;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool endedFadeOut;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool shouldFadeOutPiecenote;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject titleObject;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject triggerCanvas;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro versionText;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject camera;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject infoCanvas;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject baseView;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject baseCursor;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject languageView;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject languageCursor;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject blackOutBigger;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject bgSphere;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Material material1;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Material material2;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Material material3;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Material material4;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Material material5;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Material material6;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Material[] materials;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentMaterial;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject piecenoteLogoCanvas;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject piecenoteLogoImage;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject triggerMessage;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshPro newGameText;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshPro continueText;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private BASE_OPTIONS baseOption;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private LANGUAGE_OPTIONS languageOption;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float cursorDefaultPositionY;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private MenuStatus menuStatus;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private AudioClip decideAudioClip;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private CanvasSoundManager soundManager;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private MoveSceneManager moveSceneManager;

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x6C987C", Offset = "0x6C987C", VA = "0x6C987C")]
	private void Start()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x6C9E44", Offset = "0x6C9E44", VA = "0x6C9E44")]
	private void SetUpForLanguage()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x6CA648", Offset = "0x6CA648", VA = "0x6CA648")]
	private void SetUpLanguageView(bool forNoData = true)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x6CA754", Offset = "0x6CA754", VA = "0x6CA754")]
	private void BeginFadeOutTitle()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x6CA7D8", Offset = "0x6CA7D8", VA = "0x6CA7D8")]
	private void BeginToFadeInAtGoodTiming()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x6CA444", Offset = "0x6CA444", VA = "0x6CA444")]
	private void ForHeavyness()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x6CAA2C", Offset = "0x6CAA2C", VA = "0x6CAA2C")]
	private void ChangeBG()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x6CAAB8", Offset = "0x6CAAB8", VA = "0x6CAAB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x6CA9A0", Offset = "0x6CA9A0", VA = "0x6CA9A0")]
	private void TriggerWaitEffect()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x6CAC64", Offset = "0x6CAC64", VA = "0x6CAC64")]
	private void TriggerDecideEffect()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x6CAEB8", Offset = "0x6CAEB8", VA = "0x6CAEB8")]
	private void Select()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x6CAF98", Offset = "0x6CAF98", VA = "0x6CAF98")]
	private void ChangeOption(bool isLeft)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x6CB148", Offset = "0x6CB148", VA = "0x6CB148")]
	private void ChangeOptionOnBase(bool isLeft)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x6CB174", Offset = "0x6CB174", VA = "0x6CB174")]
	private void ChangeOptionOnLanguage(bool isLeft)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x6CA450", Offset = "0x6CA450", VA = "0x6CA450")]
	private void UpdateCursorPosition()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x6CAD9C", Offset = "0x6CAD9C", VA = "0x6CAD9C")]
	private void Cancel()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x6CB19C", Offset = "0x6CB19C", VA = "0x6CB19C")]
	private void UpdateBase()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x6CAEF8", Offset = "0x6CAEF8", VA = "0x6CAEF8")]
	private void Decide()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x6CB2DC", Offset = "0x6CB2DC", VA = "0x6CB2DC")]
	private void DecideOnBase()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x6CB318", Offset = "0x6CB318", VA = "0x6CB318")]
	private void DecideOnList()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x6CB31C", Offset = "0x6CB31C", VA = "0x6CB31C")]
	private void DecideOnLanguage()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x6CB414", Offset = "0x6CB414", VA = "0x6CB414")]
	private void FocusListView()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x6CB0D0", Offset = "0x6CB0D0", VA = "0x6CB0D0")]
	private void PlaySE(AudioClip clip)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x6CB5D0", Offset = "0x6CB5D0", VA = "0x6CB5D0")]
	private void DecideNewGame()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x6CB7B4", Offset = "0x6CB7B4", VA = "0x6CB7B4")]
	private void DecideNewGameForChinese()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x6CB4D0", Offset = "0x6CB4D0", VA = "0x6CB4D0")]
	private void DecideContinue()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x6CB9B8", Offset = "0x6CB9B8", VA = "0x6CB9B8")]
	public OpeningManager()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x6CB9DC", Offset = "0x6CB9DC", VA = "0x6CB9DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E48", Offset = "0x4D3E48")]
	private void <Start>b__39_0()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x6CB9E0", Offset = "0x6CB9E0", VA = "0x6CB9E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E58", Offset = "0x4D3E58")]
	private void <BeginToFadeInAtGoodTiming>b__43_0()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x6CB9E4", Offset = "0x6CB9E4", VA = "0x6CB9E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E68", Offset = "0x4D3E68")]
	private void <ChangeBG>b__45_0()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x6CBAD0", Offset = "0x6CBAD0", VA = "0x6CBAD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E78", Offset = "0x4D3E78")]
	private void <ChangeBG>b__45_1()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x6CBC10", Offset = "0x6CBC10", VA = "0x6CBC10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E88", Offset = "0x4D3E88")]
	private void <TriggerWaitEffect>b__47_0()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x6CBCA0", Offset = "0x6CBCA0", VA = "0x6CBCA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3E98", Offset = "0x4D3E98")]
	private void <DecideNewGame>b__62_0()
	{
	}
}
[Token(Token = "0x20000E7")]
public class PCVRManager : MonoBehaviour
{
	[Token(Token = "0x400054F")]
	public const bool is6DoF = true;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x8291E0", Offset = "0x8291E0", VA = "0x8291E0")]
	public PCVRManager()
	{
	}
}
[Token(Token = "0x20000E8")]
public struct Place
{
	[Token(Token = "0x20002C5")]
	public enum PlaceId
	{
		[Token(Token = "0x4000D2F")]
		EliseCastle,
		[Token(Token = "0x4000D30")]
		FirstVillage,
		[Token(Token = "0x4000D31")]
		FirstTown,
		[Token(Token = "0x4000D32")]
		AquaBella,
		[Token(Token = "0x4000D33")]
		SnowVillage,
		[Token(Token = "0x4000D34")]
		FirstCave,
		[Token(Token = "0x4000D35")]
		IceCave,
		[Token(Token = "0x4000D36")]
		EvilCastle
	}

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PlaceId id;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string name;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string desc;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x5332A4", Offset = "0x5332A4", VA = "0x5332A4")]
	public Place(PlaceId id, string name, string desc)
	{
	}
}
[Token(Token = "0x20000E9")]
public class PlaceManager : MonoBehaviour
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Place> GonePlaces;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x8291F4", Offset = "0x8291F4", VA = "0x8291F4")]
	public static void AddPlace(Place place)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x829448", Offset = "0x829448", VA = "0x829448")]
	public static Place PlaceFromPlaceId(Place.PlaceId placeId)
	{
		return default(Place);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x829CB4", Offset = "0x829CB4", VA = "0x829CB4")]
	public PlaceManager()
	{
	}
}
[Token(Token = "0x20000EA")]
public class ResultManager : CommonBehaviour
{
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject camera;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro nameText;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshPro lvText;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshPro playtimeText;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro winningText;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro losingText;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro escapingText;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] firstMessages;

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x82F57C", Offset = "0x82F57C", VA = "0x82F57C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x82F628", Offset = "0x82F628", VA = "0x82F628")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x82F820", Offset = "0x82F820", VA = "0x82F820")]
	private void MoveToOpening()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x82F898", Offset = "0x82F898", VA = "0x82F898")]
	public ResultManager()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x82F8A0", Offset = "0x82F8A0", VA = "0x82F8A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3EA8", Offset = "0x4D3EA8")]
	private void <Start>b__8_0()
	{
	}
}
[Token(Token = "0x20000EB")]
public struct SavedSummary
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool canLoad;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string username;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string lv;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int playtime;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sceneTitle;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isCleared;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x533404", Offset = "0x533404", VA = "0x533404")]
	public SavedSummary(bool canLoad, string username, string lv, int playtime, string sceneTitle, bool isCleared)
	{
	}
}
[Token(Token = "0x20000EC")]
public class SaveManager : MonoBehaviour
{
	[Token(Token = "0x4000562")]
	public const string LastPlayedDataNumKey = "LAST_PLAYED_DATA_NUM";

	[Token(Token = "0x4000563")]
	public const string IsClearedKey = "IS_CLEARED";

	[Token(Token = "0x4000564")]
	public const int CAN_LOAD = 1;

	[Token(Token = "0x4000565")]
	public const string CanLoadKey = "CAN_LOAD";

	[Token(Token = "0x4000566")]
	public const string VersionKey = "VERSION";

	[Token(Token = "0x4000567")]
	public const string UsernameKey = "USERNAME";

	[Token(Token = "0x4000568")]
	public const string LvKey = "LV";

	[Token(Token = "0x4000569")]
	public const string HPKey = "HP";

	[Token(Token = "0x400056A")]
	public const string MPKey = "MP";

	[Token(Token = "0x400056B")]
	public const string IsEnglishKey = "IsEnglish";

	[Token(Token = "0x400056C")]
	public const string IsChineseKey = "IsChinese";

	[Token(Token = "0x400056D")]
	public const string IsPoisonedKey = "IsPoisoned";

	[Token(Token = "0x400056E")]
	public const string MoneyKey = "MONEY";

	[Token(Token = "0x400056F")]
	public const string ExpKey = "EXP";

	[Token(Token = "0x4000570")]
	public const string PlaytimeKey = "PLAYTIME";

	[Token(Token = "0x4000571")]
	public const string SwordKey = "SWORD_ITEM_ID";

	[Token(Token = "0x4000572")]
	public const string ShieldKey = "SHIELD_ITEM_ID";

	[Token(Token = "0x4000573")]
	public const string EncountTimesKey = "ENCOUNT_TIMES";

	[Token(Token = "0x4000574")]
	public const string WinningTimesKey = "WINNING_TIMES";

	[Token(Token = "0x4000575")]
	public const string LosingTimesKey = "LOSING_TIMES";

	[Token(Token = "0x4000576")]
	public const string EscapingTimesKey = "ESCAPING_TIMES";

	[Token(Token = "0x4000577")]
	public const string SceneKey = "SCENE";

	[Token(Token = "0x4000578")]
	public const string ReviveSceneKey = "REVIVE_SCENE";

	[Token(Token = "0x4000579")]
	public const string PosXKey = "POSITION_X";

	[Token(Token = "0x400057A")]
	public const string PosYKey = "POSITION_Y";

	[Token(Token = "0x400057B")]
	public const string PosZKey = "POSITION_Z";

	[Token(Token = "0x400057C")]
	public const string AngleXKey = "ANGLE_X";

	[Token(Token = "0x400057D")]
	public const string AngleYKey = "ANGLE_Y";

	[Token(Token = "0x400057E")]
	public const string AngleZKey = "ANGLE_Z";

	[Token(Token = "0x400057F")]
	public const string ReviveKey = "REVIVE";

	[Token(Token = "0x4000580")]
	public const string BringItemIdKey = "BRING_ITEM_ID_";

	[Token(Token = "0x4000581")]
	public const string BringItemCountKey = "BRING_ITEM_COUNT_";

	[Token(Token = "0x4000582")]
	public const string EventFlagKey = "EVENT_FLAG";

	[Token(Token = "0x4000583")]
	public const string ItemFlagKey = "ITEM_FLAG";

	[Token(Token = "0x4000584")]
	public const string GonePlaceKey = "GONE_PLACE";

	[Token(Token = "0x4000585")]
	public const string NoDataSceneName = "NO_DATA";

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x833160", Offset = "0x833160", VA = "0x833160")]
	public static void Save(int dataNum, Vector3 position, Vector3 eulerAngles)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x833A68", Offset = "0x833A68", VA = "0x833A68")]
	private static void SaveBringItems(string DataKey)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x83438C", Offset = "0x83438C", VA = "0x83438C")]
	private static void LoadBringItems(string DataKey)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x833D34", Offset = "0x833D34", VA = "0x833D34")]
	private static void SaveFlags(string DataKey)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x83456C", Offset = "0x83456C", VA = "0x83456C")]
	private static void LoadFlags(string DataKey)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x8338DC", Offset = "0x8338DC", VA = "0x8338DC")]
	private static string GetDataKey(int dataNum)
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x834BB4", Offset = "0x834BB4", VA = "0x834BB4")]
	public static string Load(int dataNum)
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x835500", Offset = "0x835500", VA = "0x835500")]
	public static void LoadSystemData()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x835584", Offset = "0x835584", VA = "0x835584")]
	public static void SaveClearedInfo()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x835650", Offset = "0x835650", VA = "0x835650")]
	public static SavedSummary[] SavedSummaries()
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x8358F4", Offset = "0x8358F4", VA = "0x8358F4")]
	public static bool HasCanLoadData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x835974", Offset = "0x835974", VA = "0x835974")]
	public static void DeleteAllData()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x83597C", Offset = "0x83597C", VA = "0x83597C")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x20000ED")]
public class SystemManager : MonoBehaviour
{
	[Token(Token = "0x20002C6")]
	public enum Platform
	{
		[Token(Token = "0x4000D38")]
		SteamStore,
		[Token(Token = "0x4000D39")]
		RiftStore,
		[Token(Token = "0x4000D3A")]
		GoStore,
		[Token(Token = "0x4000D3B")]
		Switch
	}

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Platform platform;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool FOR_TRIAL_VERSION;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool FOR_DISTRIBUTION;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public static bool CAN_ENCOUNT;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int PlayNewGame;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int LastPlayedDataNum;

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x829AA4", Offset = "0x829AA4", VA = "0x829AA4")]
	public static bool isJapanese(int dataNum = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x829BC4", Offset = "0x829BC4", VA = "0x829BC4")]
	public static bool isChinese(int dataNum = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x841BFC", Offset = "0x841BFC", VA = "0x841BFC")]
	public SystemManager()
	{
	}
}
[Token(Token = "0x20000EE")]
public class TheEndManager : CommonBehaviour
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject camera;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro endMessageText;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] firstMessages;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x8468DC", Offset = "0x8468DC", VA = "0x8468DC")]
	public void Start()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x846934", Offset = "0x846934", VA = "0x846934")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x846938", Offset = "0x846938", VA = "0x846938")]
	private void SetUpMessages()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x846A78", Offset = "0x846A78", VA = "0x846A78")]
	private void MoveToOpening()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x846A7C", Offset = "0x846A7C", VA = "0x846A7C")]
	private void MoveToResult()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x846AF8", Offset = "0x846AF8", VA = "0x846AF8")]
	public TheEndManager()
	{
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20000EF")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000024")]
		public bool Highlight
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x6B151C", Offset = "0x6B151C", VA = "0x6B151C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x6B1524", Offset = "0x6B1524", VA = "0x6B1524")]
			set
			{
			}
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x6B1530", Offset = "0x6B1530", VA = "0x6B1530")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x6B1758", Offset = "0x6B1758", VA = "0x6B1758", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x6B1780", Offset = "0x6B1780", VA = "0x6B1780", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x6B17A8", Offset = "0x6B17A8", VA = "0x6B17A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x6B15FC", Offset = "0x6B15FC", VA = "0x6B15FC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x6B1A50", Offset = "0x6B1A50", VA = "0x6B1A50")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000025")]
		public bool InRange
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x6B23B8", Offset = "0x6B23B8", VA = "0x6B23B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x6B23C0", Offset = "0x6B23C0", VA = "0x6B23C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000026")]
		public bool Targeted
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0x6B25D0", Offset = "0x6B25D0", VA = "0x6B25D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x6B25D8", Offset = "0x6B25D8", VA = "0x6B25D8")]
			set
			{
			}
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x6B25E4", Offset = "0x6B25E4", VA = "0x6B25E4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x6B23CC", Offset = "0x6B23CC", VA = "0x6B23CC")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x6B2844", Offset = "0x6B2844", VA = "0x6B2844")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x6B28DC", Offset = "0x6B28DC", VA = "0x6B28DC")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x6B297C", Offset = "0x6B297C", VA = "0x6B297C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4CBBF4", Offset = "0x4CBBF4")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000027")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0x6B2984", Offset = "0x6B2984", VA = "0x6B2984")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000863")]
			[Address(RVA = "0x6B298C", Offset = "0x6B298C", VA = "0x6B298C")]
			set
			{
			}
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x6B29A8", Offset = "0x6B29A8", VA = "0x6B29A8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x6B2B58", Offset = "0x6B2B58", VA = "0x6B2B58", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x6B3664", Offset = "0x6B3664", VA = "0x6B3664", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x6B3E48", Offset = "0x6B3E48", VA = "0x6B3E48", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x6B42A8", Offset = "0x6B42A8", VA = "0x6B42A8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x6B2E78", Offset = "0x6B2E78", VA = "0x6B2E78")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x6B43A0", Offset = "0x6B43A0", VA = "0x6B43A0")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x6B4838", Offset = "0x6B4838", VA = "0x6B4838", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x6B4850", Offset = "0x6B4850", VA = "0x6B4850", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x6B4858", Offset = "0x6B4858", VA = "0x6B4858")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002C7")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000D3D")]
			Disabled,
			[Token(Token = "0x4000D3E")]
			Enabled,
			[Token(Token = "0x4000D3F")]
			Targeted
		}

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x6B6894", Offset = "0x6B6894", VA = "0x6B6894")]
		private void Start()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x6B2770", Offset = "0x6B2770", VA = "0x6B2770")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x6B6904", Offset = "0x6B6904", VA = "0x6B6904")]
		private void Update()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x6B695C", Offset = "0x6B695C", VA = "0x6B695C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x6B6718", Offset = "0x6B6718", VA = "0x6B6718")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x6B67D4", Offset = "0x6B67D4", VA = "0x6B67D4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x6B688C", Offset = "0x6B688C", VA = "0x6B688C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x6BC79C", Offset = "0x6BC79C", VA = "0x6BC79C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x6BC868", Offset = "0x6BC868", VA = "0x6BC868")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x6BC874", Offset = "0x6BC874", VA = "0x6BC874")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x6BC880", Offset = "0x6BC880", VA = "0x6BC880")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x6AFCFC", Offset = "0x6AFCFC", VA = "0x6AFCFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x6AFD5C", Offset = "0x6AFD5C", VA = "0x6AFD5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x6B0078", Offset = "0x6B0078", VA = "0x6B0078")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x6B0194", Offset = "0x6B0194", VA = "0x6B0194")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x6AFD60", Offset = "0x6AFD60", VA = "0x6AFD60")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x6B02A8", Offset = "0x6B02A8", VA = "0x6B02A8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002C8")]
		public enum ContactTest
		{
			[Token(Token = "0x4000D41")]
			PerpenTest,
			[Token(Token = "0x4000D42")]
			BackwardsPress
		}

		[Token(Token = "0x40005B3")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40005B4")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000028")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600087F")]
			[Address(RVA = "0x6B0340", Offset = "0x6B0340", VA = "0x6B0340", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000029")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000880")]
			[Address(RVA = "0x6B0348", Offset = "0x6B0348", VA = "0x6B0348")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x6B0354", Offset = "0x6B0354", VA = "0x6B0354", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x6B04C8", Offset = "0x6B04C8", VA = "0x6B04C8")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x6B06E4", Offset = "0x6B06E4", VA = "0x6B06E4")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x6B0844", Offset = "0x6B0844", VA = "0x6B0844")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x6B09A4", Offset = "0x6B09A4", VA = "0x6B09A4", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x6B0F10", Offset = "0x6B0F10", VA = "0x6B0F10")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x6B10B0", Offset = "0x6B10B0", VA = "0x6B10B0")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x6B11A8", Offset = "0x6B11A8", VA = "0x6B11A8")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x6B1304", Offset = "0x6B1304", VA = "0x6B1304")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF30C", Offset = "0x4CF30C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF31C", Offset = "0x4CF31C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700002A")]
		public Collider Collider
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0x6B13F8", Offset = "0x6B13F8", VA = "0x6B13F8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3EB8", Offset = "0x4D3EB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x6B1400", Offset = "0x6B1400", VA = "0x6B1400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3EC8", Offset = "0x4D3EC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002B")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0x6B018C", Offset = "0x6B018C", VA = "0x6B018C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3ED8", Offset = "0x4D3ED8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x6B1408", Offset = "0x6B1408", VA = "0x6B1408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3EE8", Offset = "0x4D3EE8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002C")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x6B1410", Offset = "0x6B1410", VA = "0x6B1410", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x6B1494", Offset = "0x6B1494", VA = "0x6B1494")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x6B1514", Offset = "0x6B1514", VA = "0x6B1514")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700002D")]
		Collider Collider
		{
			[Token(Token = "0x6000891")]
			get;
		}

		[Token(Token = "0x1700002E")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000892")]
			get;
		}

		[Token(Token = "0x1700002F")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000893")]
			get;
		}
	}
	[Token(Token = "0x20000F9")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x6B0630", Offset = "0x6B0630", VA = "0x6B0630")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public enum InteractionType
	{
		[Token(Token = "0x40005C8")]
		Enter,
		[Token(Token = "0x40005C9")]
		Stay,
		[Token(Token = "0x40005CA")]
		Exit
	}
	[Token(Token = "0x20000FB")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002C9")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000D44")]
			Mesh,
			[Token(Token = "0x4000D45")]
			Skeleton,
			[Token(Token = "0x4000D46")]
			Both
		}

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC0BC", Offset = "0x4CC0BC")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170000D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600125B")]
				[Address(RVA = "0x6B7B58", Offset = "0x6B7B58", VA = "0x6B7B58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600125D")]
				[Address(RVA = "0x6B7BC8", Offset = "0x6B7BC8", VA = "0x6B7BC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001258")]
			[Address(RVA = "0x6B7504", Offset = "0x6B7504", VA = "0x6B7504")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001259")]
			[Address(RVA = "0x6B78F4", Offset = "0x6B78F4", VA = "0x6B78F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600125A")]
			[Address(RVA = "0x6B78F8", Offset = "0x6B78F8", VA = "0x6B78F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600125C")]
			[Address(RVA = "0x6B7B60", Offset = "0x6B7B60", VA = "0x6B7B60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005CB")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF34C", Offset = "0x4CF34C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000030")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0x6B55DC", Offset = "0x6B55DC", VA = "0x6B55DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000896")]
			[Address(RVA = "0x6B6964", Offset = "0x6B6964", VA = "0x6B6964")]
			private set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0x6B6308", Offset = "0x6B6308", VA = "0x6B6308")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x6B69E0", Offset = "0x6B69E0", VA = "0x6B69E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000032")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000899")]
			[Address(RVA = "0x6B6A5C", Offset = "0x6B6A5C", VA = "0x6B6A5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600089A")]
			[Address(RVA = "0x6B6AA4", Offset = "0x6B6AA4", VA = "0x6B6AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0x6B6B20", Offset = "0x6B6B20", VA = "0x6B6B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600089C")]
			[Address(RVA = "0x6B6B68", Offset = "0x6B6B68", VA = "0x6B6B68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600089D")]
			[Address(RVA = "0x6B6BE4", Offset = "0x6B6BE4", VA = "0x6B6BE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600089E")]
			[Address(RVA = "0x6B6C2C", Offset = "0x6B6C2C", VA = "0x6B6C2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0x6B5598", Offset = "0x6B5598", VA = "0x6B5598")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A0")]
			[Address(RVA = "0x6B6CA8", Offset = "0x6B6CA8", VA = "0x6B6CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0x6B62C4", Offset = "0x6B62C4", VA = "0x6B62C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0x6B6D20", Offset = "0x6B6D20", VA = "0x6B6D20")]
			private set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x6B6D98", Offset = "0x6B6D98", VA = "0x6B6D98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0x6B6DDC", Offset = "0x6B6DDC", VA = "0x6B6DDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x6B6E54", Offset = "0x6B6E54", VA = "0x6B6E54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x6B6E98", Offset = "0x6B6E98", VA = "0x6B6E98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x6B6F10", Offset = "0x6B6F10", VA = "0x6B6F10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0x6B6F54", Offset = "0x6B6F54", VA = "0x6B6F54")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x6B2170", Offset = "0x6B2170", VA = "0x6B2170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3EF8", Offset = "0x4D3EF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0x6B6FCC", Offset = "0x6B6FCC", VA = "0x6B6FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3F08", Offset = "0x4D3F08")]
			private set
			{
			}
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x6B7020", Offset = "0x6B7020", VA = "0x6B7020")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x6B7430", Offset = "0x6B7430", VA = "0x6B7430")]
		private void Update()
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x6B73BC", Offset = "0x6B73BC", VA = "0x6B73BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3F18", Offset = "0x4D3F18")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x6B21C0", Offset = "0x6B21C0", VA = "0x6B21C0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x6B7530", Offset = "0x6B7530", VA = "0x6B7530")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x6B6350", Offset = "0x6B6350", VA = "0x6B6350")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x6B53CC", Offset = "0x6B53CC", VA = "0x6B53CC")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x6B7814", Offset = "0x6B7814", VA = "0x6B7814")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002CB")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x6B8428", Offset = "0x6B8428", VA = "0x6B8428")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700003B")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x6B06DC", Offset = "0x6B06DC", VA = "0x6B06DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0x6B06D4", Offset = "0x6B06D4", VA = "0x6B06D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0x6B0628", Offset = "0x6B0628", VA = "0x6B0628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0x6B7BD0", Offset = "0x6B7BD0", VA = "0x6B7BD0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0x6B7BD8", Offset = "0x6B7BD8", VA = "0x6B7BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3F7C", Offset = "0x4D3F7C")]
			add
			{
			}
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0x6B7CC4", Offset = "0x6B7CC4", VA = "0x6B7CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3F8C", Offset = "0x4D3F8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0x6B7E24", Offset = "0x6B7E24", VA = "0x6B7E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3F9C", Offset = "0x4D3F9C")]
			add
			{
			}
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0x6B7F10", Offset = "0x6B7F10", VA = "0x6B7F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3FAC", Offset = "0x4D3FAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x6B8070", Offset = "0x6B8070", VA = "0x6B8070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3FBC", Offset = "0x4D3FBC")]
			add
			{
			}
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x6B815C", Offset = "0x6B815C", VA = "0x6B815C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D3FCC", Offset = "0x4D3FCC")]
			remove
			{
			}
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x6B7DB0", Offset = "0x6B7DB0", VA = "0x6B7DB0", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x6B7FFC", Offset = "0x6B7FFC", VA = "0x6B7FFC", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x6B8248", Offset = "0x6B8248", VA = "0x6B8248", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60008C0")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x6B0464", Offset = "0x6B0464", VA = "0x6B0464", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x6B8340", Offset = "0x6B8340", VA = "0x6B8340", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x6B13F0", Offset = "0x6B13F0", VA = "0x6B13F0")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40005E3")]
		None,
		[Token(Token = "0x40005E4")]
		Proximity,
		[Token(Token = "0x40005E5")]
		Contact,
		[Token(Token = "0x40005E6")]
		Action
	}
	[Token(Token = "0x20000FE")]
	public enum InteractableState
	{
		[Token(Token = "0x40005E8")]
		Default,
		[Token(Token = "0x40005E9")]
		ProximityState,
		[Token(Token = "0x40005EA")]
		ContactState,
		[Token(Token = "0x40005EB")]
		ActionState
	}
	[Token(Token = "0x20000FF")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x6B100C", Offset = "0x6B100C", VA = "0x6B100C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700003F")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x6B8478", Offset = "0x6B8478", VA = "0x6B8478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x6B82BC", Offset = "0x6B82BC", VA = "0x6B82BC")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x6B83A4", Offset = "0x6B83A4", VA = "0x6B83A4")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x6B84E0", Offset = "0x6B84E0", VA = "0x6B84E0")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC0CC", Offset = "0x4CC0CC")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170000D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001263")]
				[Address(RVA = "0x6B9880", Offset = "0x6B9880", VA = "0x6B9880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001265")]
				[Address(RVA = "0x6B98F0", Offset = "0x6B98F0", VA = "0x6B98F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600125F")]
			[Address(RVA = "0x6B9274", Offset = "0x6B9274", VA = "0x6B9274")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001260")]
			[Address(RVA = "0x6B9420", Offset = "0x6B9420", VA = "0x6B9420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001261")]
			[Address(RVA = "0x6B9494", Offset = "0x6B9494", VA = "0x6B9494", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001262")]
			[Address(RVA = "0x6B943C", Offset = "0x6B943C", VA = "0x6B943C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001264")]
			[Address(RVA = "0x6B9888", Offset = "0x6B9888", VA = "0x6B9888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x6B9144", Offset = "0x6B9144", VA = "0x6B9144")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x6B91C0", Offset = "0x6B91C0", VA = "0x6B91C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D3FDC", Offset = "0x4D3FDC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x6B92A0", Offset = "0x6B92A0", VA = "0x6B92A0")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x6B9418", Offset = "0x6B9418", VA = "0x6B9418")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000040")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x6B4CEC", Offset = "0x6B4CEC", VA = "0x6B4CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x6B4E74", Offset = "0x6B4E74", VA = "0x6B4E74")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x6B98F8", Offset = "0x6B98F8", VA = "0x6B98F8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x6B99CC", Offset = "0x6B99CC", VA = "0x6B99CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x6B9D4C", Offset = "0x6B9D4C", VA = "0x6B9D4C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x6B9D94", Offset = "0x6B9D94", VA = "0x6B9D94")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x6BA138", Offset = "0x6BA138", VA = "0x6BA138")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x6BA284", Offset = "0x6BA284", VA = "0x6BA284")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC0DC", Offset = "0x4CC0DC")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170000D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001269")]
				[Address(RVA = "0x6B65AC", Offset = "0x6B65AC", VA = "0x6B65AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600126B")]
				[Address(RVA = "0x6B661C", Offset = "0x6B661C", VA = "0x6B661C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001266")]
			[Address(RVA = "0x6B4FC4", Offset = "0x6B4FC4", VA = "0x6B4FC4")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001267")]
			[Address(RVA = "0x6B5E80", Offset = "0x6B5E80", VA = "0x6B5E80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001268")]
			[Address(RVA = "0x6B5E84", Offset = "0x6B5E84", VA = "0x6B5E84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600126A")]
			[Address(RVA = "0x6B65B4", Offset = "0x6B65B4", VA = "0x6B65B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005FB")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000041")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x6B4B90", Offset = "0x6B4B90", VA = "0x6B4B90", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000042")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x6B4B98", Offset = "0x6B4B98", VA = "0x6B4B98", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000043")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x6B4BA0", Offset = "0x6B4BA0", VA = "0x6B4BA0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000044")]
		public override bool EnableState
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x6B4BA8", Offset = "0x6B4BA8", VA = "0x6B4BA8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x6B4BF0", Offset = "0x6B4BF0", VA = "0x6B4BF0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x6B4C40", Offset = "0x6B4C40", VA = "0x6B4C40", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x6B4F50", Offset = "0x6B4F50", VA = "0x6B4F50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D5040", Offset = "0x4D5040")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x6B4FF0", Offset = "0x6B4FF0", VA = "0x6B4FF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x6B5638", Offset = "0x6B5638", VA = "0x6B5638")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x6B58F0", Offset = "0x6B58F0", VA = "0x6B58F0")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x6B5A68", Offset = "0x6B5A68", VA = "0x6B5A68", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x6B5D54", Offset = "0x6B5D54", VA = "0x6B5D54", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x6B5D58", Offset = "0x6B5D58", VA = "0x6B5D58", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x6B5D5C", Offset = "0x6B5D5C", VA = "0x6B5D5C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF3DC", Offset = "0x4CF3DC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF3EC", Offset = "0x4CF3EC")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF3FC", Offset = "0x4CF3FC")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000045")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x6B6624", Offset = "0x6B6624", VA = "0x6B6624", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D50A4", Offset = "0x4D50A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x6B4F48", Offset = "0x6B4F48", VA = "0x6B4F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D50B4", Offset = "0x4D50B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public bool EnableState
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x6B662C", Offset = "0x6B662C", VA = "0x6B662C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x6B665C", Offset = "0x6B665C", VA = "0x6B665C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000047")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x6B6694", Offset = "0x6B6694", VA = "0x6B6694", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D50C4", Offset = "0x4D50C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x6B669C", Offset = "0x6B669C", VA = "0x6B669C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D50D4", Offset = "0x4D50D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public float SphereRadius
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x6B5624", Offset = "0x6B5624", VA = "0x6B5624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D50E4", Offset = "0x4D50E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0x6B66A8", Offset = "0x6B66A8", VA = "0x6B66A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D50F4", Offset = "0x4D50F4")]
			private set
			{
			}
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x6B66B0", Offset = "0x6B66B0", VA = "0x6B66B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x6B670C", Offset = "0x6B670C", VA = "0x6B670C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x6B6710", Offset = "0x6B6710", VA = "0x6B6710")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000105")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400060B")]
		None = 0,
		[Token(Token = "0x400060C")]
		Ray = 1,
		[Token(Token = "0x400060D")]
		Poke = 4,
		[Token(Token = "0x400060E")]
		All = -1
	}
	[Token(Token = "0x2000106")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000610")]
		Inactive,
		[Token(Token = "0x4000611")]
		PrimaryInputDown,
		[Token(Token = "0x4000612")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000613")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000107")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x6B5D10", Offset = "0x6B5D10", VA = "0x6B5D10")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000108")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF40C", Offset = "0x4CF40C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF41C", Offset = "0x4CF41C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF42C", Offset = "0x4CF42C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000049")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x6B12F4", Offset = "0x6B12F4", VA = "0x6B12F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x6B12FC", Offset = "0x6B12FC", VA = "0x6B12FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5104", Offset = "0x4D5104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x6B855C", Offset = "0x6B855C", VA = "0x6B855C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5114", Offset = "0x4D5114")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60008F3")]
			get;
		}

		[Token(Token = "0x1700004C")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60008F4")]
			get;
		}

		[Token(Token = "0x1700004D")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60008F5")]
			get;
		}

		[Token(Token = "0x1700004E")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x6B12E8", Offset = "0x6B12E8", VA = "0x6B12E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5124", Offset = "0x4D5124")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0x6B5A5C", Offset = "0x6B5A5C", VA = "0x6B5A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5134", Offset = "0x4D5134")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0x6B1000", Offset = "0x6B1000", VA = "0x6B1000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5144", Offset = "0x4D5144")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0x6B562C", Offset = "0x6B562C", VA = "0x6B562C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5154", Offset = "0x4D5154")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60008FE")]
			get;
			[Token(Token = "0x60008FF")]
			set;
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x6B8568", Offset = "0x6B8568", VA = "0x6B8568")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60008FB")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60008FC")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60008FD")]
		public abstract void DeFocus();

		[Token(Token = "0x6000900")]
		public abstract void Initialize();

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x6B8570", Offset = "0x6B8570", VA = "0x6B8570")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x6B85C0", Offset = "0x6B85C0", VA = "0x6B85C0")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x6B8620", Offset = "0x6B8620", VA = "0x6B8620", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x6B88EC", Offset = "0x6B88EC", VA = "0x6B88EC", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x6B5D70", Offset = "0x6B5D70", VA = "0x6B5D70")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000051")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000906")]
			get;
		}

		[Token(Token = "0x17000052")]
		bool EnableState
		{
			[Token(Token = "0x6000908")]
			get;
			[Token(Token = "0x6000909")]
			set;
		}

		[Token(Token = "0x17000053")]
		bool ToolActivateState
		{
			[Token(Token = "0x600090A")]
			get;
			[Token(Token = "0x600090B")]
			set;
		}

		[Token(Token = "0x6000907")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200010A")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002CE")]
		private enum PinchState
		{
			[Token(Token = "0x4000D57")]
			None,
			[Token(Token = "0x4000D58")]
			PinchDown,
			[Token(Token = "0x4000D59")]
			PinchStay,
			[Token(Token = "0x4000D5A")]
			PinchUp
		}

		[Token(Token = "0x4000620")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000054")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600090C")]
			[Address(RVA = "0x6BC888", Offset = "0x6BC888", VA = "0x6BC888")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000055")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0x6BC914", Offset = "0x6BC914", VA = "0x6BC914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000056")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x6BC9A0", Offset = "0x6BC9A0", VA = "0x6BC9A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x6BCA2C", Offset = "0x6BCA2C", VA = "0x6BCA2C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x6BCA58", Offset = "0x6BCA58", VA = "0x6BCA58")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000623")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000624")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000625")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000626")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000627")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CF44C", Offset = "0x4CF44C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000057")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x6BCD00", Offset = "0x6BCD00", VA = "0x6BCD00", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000058")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x6BCD08", Offset = "0x6BCD08", VA = "0x6BCD08", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000059")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x6BCD90", Offset = "0x6BCD90", VA = "0x6BCD90", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005A")]
		public override bool EnableState
		{
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x6BCD98", Offset = "0x6BCD98", VA = "0x6BCD98", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x6BCDF4", Offset = "0x6BCDF4", VA = "0x6BCDF4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x6BCEA8", Offset = "0x6BCEA8", VA = "0x6BCEA8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x6BCF18", Offset = "0x6BCF18", VA = "0x6BCF18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x6BCFBC", Offset = "0x6BCFBC", VA = "0x6BCFBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x6BD3A4", Offset = "0x6BD3A4", VA = "0x6BD3A4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x6BD4B4", Offset = "0x6BD4B4", VA = "0x6BD4B4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x6BD874", Offset = "0x6BD874", VA = "0x6BD874")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x6BDA34", Offset = "0x6BDA34", VA = "0x6BDA34")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x6BDB64", Offset = "0x6BDB64", VA = "0x6BDB64")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x6BDEC4", Offset = "0x6BDEC4", VA = "0x6BDEC4")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x6BE310", Offset = "0x6BE310", VA = "0x6BE310", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x6BE3FC", Offset = "0x6BE3FC", VA = "0x6BE3FC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x6BE438", Offset = "0x6BE438", VA = "0x6BE438")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000633")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000634")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF4C0", Offset = "0x4CF4C0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700005B")]
		public bool EnableState
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x6BCDC4", Offset = "0x6BCDC4", VA = "0x6BCDC4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x6BCE28", Offset = "0x6BCE28", VA = "0x6BCE28", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x6BE4F0", Offset = "0x6BE4F0", VA = "0x6BE4F0", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x6BD354", Offset = "0x6BD354", VA = "0x6BD354", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x6BE788", Offset = "0x6BE788", VA = "0x6BE788", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5164", Offset = "0x4D5164")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000928")]
			[Address(RVA = "0x6BCF10", Offset = "0x6BCF10", VA = "0x6BCF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5174", Offset = "0x4D5174")]
			set
			{
			}
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x6BE4F8", Offset = "0x6BE4F8", VA = "0x6BE4F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x6BE358", Offset = "0x6BE358", VA = "0x6BE358", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x6BE790", Offset = "0x6BE790", VA = "0x6BE790")]
		private void Update()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x6BEB24", Offset = "0x6BEB24", VA = "0x6BEB24")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x6BED14", Offset = "0x6BED14", VA = "0x6BED14")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700005E")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x6B4878", Offset = "0x6B4878", VA = "0x6B4878")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x6B4880", Offset = "0x6B4880", VA = "0x6B4880")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x6B4938", Offset = "0x6B4938", VA = "0x6B4938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x6B4940", Offset = "0x6B4940", VA = "0x6B4940")]
			set
			{
			}
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x6B49E4", Offset = "0x6B49E4", VA = "0x6B49E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x6B4B68", Offset = "0x6B4B68", VA = "0x6B4B68")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x6B4B78", Offset = "0x6B4B78", VA = "0x6B4B78")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x6B4B88", Offset = "0x6B4B88", VA = "0x6B4B88")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x6B1B4C", Offset = "0x6B1B4C", VA = "0x6B1B4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x6B1B50", Offset = "0x6B1B50", VA = "0x6B1B50")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x6B1BF4", Offset = "0x6B1BF4", VA = "0x6B1BF4")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x6B1D08", Offset = "0x6B1D08", VA = "0x6B1D08")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x6B1E1C", Offset = "0x6B1E1C", VA = "0x6B1E1C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x6B1F44", Offset = "0x6B1F44", VA = "0x6B1F44")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x6B2084", Offset = "0x6B2084", VA = "0x6B2084")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x6B20E8", Offset = "0x6B20E8", VA = "0x6B20E8")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x6B22A8", Offset = "0x6B22A8", VA = "0x6B22A8")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x6B2350", Offset = "0x6B2350", VA = "0x6B2350")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x6B2358", Offset = "0x6B2358", VA = "0x6B2358")]
		private void Start()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x6B235C", Offset = "0x6B235C", VA = "0x6B235C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x6B2300", Offset = "0x6B2300", VA = "0x6B2300")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x6B23B0", Offset = "0x6B23B0", VA = "0x6B23B0")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC0EC", Offset = "0x4CC0EC")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170000D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600126F")]
				[Address(RVA = "0x6BC724", Offset = "0x6BC724", VA = "0x6BC724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001271")]
				[Address(RVA = "0x6BC794", Offset = "0x6BC794", VA = "0x6BC794", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600126C")]
			[Address(RVA = "0x6BC3B4", Offset = "0x6BC3B4", VA = "0x6BC3B4")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600126D")]
			[Address(RVA = "0x6BC498", Offset = "0x6BC498", VA = "0x6BC498", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600126E")]
			[Address(RVA = "0x6BC49C", Offset = "0x6BC49C", VA = "0x6BC49C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001270")]
			[Address(RVA = "0x6BC72C", Offset = "0x6BC72C", VA = "0x6BC72C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000644")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000645")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x6BBF40", Offset = "0x6BBF40", VA = "0x6BBF40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x6BBFE0", Offset = "0x6BBFE0", VA = "0x6BBFE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x6BC2D8", Offset = "0x6BC2D8", VA = "0x6BC2D8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x6BC264", Offset = "0x6BC264", VA = "0x6BC264")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D5184", Offset = "0x4D5184")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x6BC3E0", Offset = "0x6BC3E0", VA = "0x6BC3E0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002D0")]
		public enum SelectionState
		{
			[Token(Token = "0x4000D62")]
			Off,
			[Token(Token = "0x4000D63")]
			Selected,
			[Token(Token = "0x4000D64")]
			Highlighted
		}

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000060")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000948")]
			[Address(RVA = "0x6BED74", Offset = "0x6BED74", VA = "0x6BED74")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x6BED7C", Offset = "0x6BED7C", VA = "0x6BED7C")]
			set
			{
			}
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x6BEF74", Offset = "0x6BEF74", VA = "0x6BEF74")]
		private void Awake()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x6BF1CC", Offset = "0x6BF1CC", VA = "0x6BF1CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x6BEE24", Offset = "0x6BEE24", VA = "0x6BEE24")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x6BF2B8", Offset = "0x6BF2B8", VA = "0x6BF2B8")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002D1")]
		public enum SegmentType
		{
			[Token(Token = "0x4000D66")]
			Straight,
			[Token(Token = "0x4000D67")]
			LeftTurn,
			[Token(Token = "0x4000D68")]
			RightTurn,
			[Token(Token = "0x4000D69")]
			Switch
		}

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x400065A")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400065B")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF5A0", Offset = "0x4CF5A0")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000061")]
		public float StartDistance
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x6BF324", Offset = "0x6BF324", VA = "0x6BF324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D51E8", Offset = "0x4D51E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x6BF32C", Offset = "0x6BF32C", VA = "0x6BF32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D51F8", Offset = "0x4D51F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public float GridSize
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x6BF334", Offset = "0x6BF334", VA = "0x6BF334")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x6BF33C", Offset = "0x6BF33C", VA = "0x6BF33C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public int SubDivCount
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x6BF344", Offset = "0x6BF344", VA = "0x6BF344")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x6BF34C", Offset = "0x6BF34C", VA = "0x6BF34C")]
			set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public SegmentType Type
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x6BF354", Offset = "0x6BF354", VA = "0x6BF354")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000065")]
		public Pose EndPose
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x6BF35C", Offset = "0x6BF35C", VA = "0x6BF35C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		public float Radius
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x6BF86C", Offset = "0x6BF86C", VA = "0x6BF86C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000067")]
		public float SegmentLength
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x6BF3C4", Offset = "0x6BF3C4", VA = "0x6BF3C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x6BF87C", Offset = "0x6BF87C", VA = "0x6BF87C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x6BF894", Offset = "0x6BF894", VA = "0x6BF894")]
		private void Awake()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x6BF404", Offset = "0x6BF404", VA = "0x6BF404")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x6BF898", Offset = "0x6BF898", VA = "0x6BF898")]
		private void Update()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x6BF89C", Offset = "0x6BF89C", VA = "0x6BF89C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x6BF908", Offset = "0x6BF908", VA = "0x6BF908")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x6C05CC", Offset = "0x6C05CC", VA = "0x6C05CC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x6C0974", Offset = "0x6C0974", VA = "0x6C0974")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC0FC", Offset = "0x4CC0FC")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170000DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001275")]
				[Address(RVA = "0x6C1790", Offset = "0x6C1790", VA = "0x6C1790", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001277")]
				[Address(RVA = "0x6C1800", Offset = "0x6C1800", VA = "0x6C1800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001272")]
			[Address(RVA = "0x6C1470", Offset = "0x6C1470", VA = "0x6C1470")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001273")]
			[Address(RVA = "0x6C156C", Offset = "0x6C156C", VA = "0x6C156C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001274")]
			[Address(RVA = "0x6C1570", Offset = "0x6C1570", VA = "0x6C1570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001276")]
			[Address(RVA = "0x6C1798", Offset = "0x6C1798", VA = "0x6C1798", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000661")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000662")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x6C0A18", Offset = "0x6C0A18", VA = "0x6C0A18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x6C0AEC", Offset = "0x6C0AEC", VA = "0x6C0AEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x6C0BA0", Offset = "0x6C0BA0", VA = "0x6C0BA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x6C0CE8", Offset = "0x6C0CE8", VA = "0x6C0CE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x6C0E74", Offset = "0x6C0E74", VA = "0x6C0E74")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x6C1054", Offset = "0x6C1054", VA = "0x6C1054")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x6C137C", Offset = "0x6C137C", VA = "0x6C137C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x6C120C", Offset = "0x6C120C", VA = "0x6C120C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x6C1220", Offset = "0x6C1220", VA = "0x6C1220")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x6C13FC", Offset = "0x6C13FC", VA = "0x6C13FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D5208", Offset = "0x4D5208")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x6C149C", Offset = "0x6C149C", VA = "0x6C149C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000068")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x6C1808", Offset = "0x6C1808", VA = "0x6C1808")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x6C1818", Offset = "0x6C1818", VA = "0x6C1818", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x6C1820", Offset = "0x6C1820", VA = "0x6C1820", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x6C1DEC", Offset = "0x6C1DEC", VA = "0x6C1DEC")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000675")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000676")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF6A0", Offset = "0x4CF6A0")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000069")]
		public float Distance
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x6C1870", Offset = "0x6C1870", VA = "0x6C1870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D526C", Offset = "0x4D526C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x6C1878", Offset = "0x6C1878", VA = "0x6C1878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D527C", Offset = "0x4D527C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public float Scale
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x6C1EE4", Offset = "0x6C1EE4", VA = "0x6C1EE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x6C1EEC", Offset = "0x6C1EEC", VA = "0x6C1EEC")]
			set
			{
			}
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x6C181C", Offset = "0x6C181C", VA = "0x6C181C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x6C1EF4", Offset = "0x6C1EF4", VA = "0x6C1EF4")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x6C1880", Offset = "0x6C1880", VA = "0x6C1880")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x6C1C6C", Offset = "0x6C1C6C", VA = "0x6C1C6C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000978")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x6C1E5C", Offset = "0x6C1E5C", VA = "0x6C1E5C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC10C", Offset = "0x4CC10C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170000DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600127B")]
				[Address(RVA = "0x6C2B24", Offset = "0x6C2B24", VA = "0x6C2B24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600127D")]
				[Address(RVA = "0x6C2B94", Offset = "0x6C2B94", VA = "0x6C2B94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001278")]
			[Address(RVA = "0x6C2668", Offset = "0x6C2668", VA = "0x6C2668")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001279")]
			[Address(RVA = "0x6C2850", Offset = "0x6C2850", VA = "0x6C2850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600127A")]
			[Address(RVA = "0x6C2854", Offset = "0x6C2854", VA = "0x6C2854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600127C")]
			[Address(RVA = "0x6C2B2C", Offset = "0x6C2B2C", VA = "0x6C2B2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x6C21A8", Offset = "0x6C21A8", VA = "0x6C21A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x6C2204", Offset = "0x6C2204", VA = "0x6C2204")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x6C2310", Offset = "0x6C2310", VA = "0x6C2310")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x6C24C0", Offset = "0x6C24C0", VA = "0x6C24C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x6C237C", Offset = "0x6C237C", VA = "0x6C237C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x6C25D0", Offset = "0x6C25D0", VA = "0x6C25D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D528C", Offset = "0x4D528C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x6C2694", Offset = "0x6C2694", VA = "0x6C2694")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x6C275C", Offset = "0x6C275C", VA = "0x6C275C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x6C27F0", Offset = "0x6C27F0", VA = "0x6C27F0")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002D4")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000D7C")]
			Start,
			[Token(Token = "0x4000D7D")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000D7E")]
			Stop
		}

		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC11C", Offset = "0x4CC11C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170000DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001281")]
				[Address(RVA = "0x6C36B0", Offset = "0x6C36B0", VA = "0x6C36B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001283")]
				[Address(RVA = "0x6C3720", Offset = "0x6C3720", VA = "0x6C3720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600127E")]
			[Address(RVA = "0x6C2EBC", Offset = "0x6C2EBC", VA = "0x6C2EBC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600127F")]
			[Address(RVA = "0x6C3364", Offset = "0x6C3364", VA = "0x6C3364", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001280")]
			[Address(RVA = "0x6C3368", Offset = "0x6C3368", VA = "0x6C3368", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001282")]
			[Address(RVA = "0x6C36B8", Offset = "0x6C36B8", VA = "0x6C36B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000689")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400068A")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400068B")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400068C")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4CF700", Offset = "0x4CF700")]
		protected float _initialSpeed;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x6C2B9C", Offset = "0x6C2B9C", VA = "0x6C2B9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x6C2D34", Offset = "0x6C2D34", VA = "0x6C2D34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x6C2D40", Offset = "0x6C2D40", VA = "0x6C2D40", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x6B1BA8", Offset = "0x6B1BA8", VA = "0x6B1BA8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x6C2C98", Offset = "0x6C2C98", VA = "0x6C2C98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D52F0", Offset = "0x4D52F0")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x6C2EE8", Offset = "0x6C2EE8", VA = "0x6C2EE8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x6C2E48", Offset = "0x6C2E48", VA = "0x6C2E48")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x6B1C4C", Offset = "0x6B1C4C", VA = "0x6B1C4C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x6B1D60", Offset = "0x6B1D60", VA = "0x6B1D60")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x6C316C", Offset = "0x6C316C", VA = "0x6C316C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x6C3270", Offset = "0x6C3270", VA = "0x6C3270")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x6B1E74", Offset = "0x6B1E74", VA = "0x6B1E74")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x6B1F9C", Offset = "0x6B1F9C", VA = "0x6B1F9C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x6B20D8", Offset = "0x6B20D8", VA = "0x6B20D8")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x6C32F8", Offset = "0x6C32F8", VA = "0x6C32F8")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700006B")]
		public float TrackLength
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x6C1FD8", Offset = "0x6C1FD8", VA = "0x6C1FD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x6C3728", Offset = "0x6C3728", VA = "0x6C3728")]
			private set
			{
			}
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x6C3730", Offset = "0x6C3730", VA = "0x6C3730")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x6C1FE0", Offset = "0x6C1FE0", VA = "0x6C1FE0")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x6C3734", Offset = "0x6C3734", VA = "0x6C3734")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x6C39C8", Offset = "0x6C39C8", VA = "0x6C39C8")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x6C3B1C", Offset = "0x6C3B1C", VA = "0x6C3B1C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class Pose
	{
		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x6BCBE4", Offset = "0x6BCBE4", VA = "0x6BCBE4")]
		public Pose()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x6BCC90", Offset = "0x6BCC90", VA = "0x6BCC90")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC12C", Offset = "0x4CC12C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170000E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001287")]
				[Address(RVA = "0x6C41F8", Offset = "0x6C41F8", VA = "0x6C41F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001289")]
				[Address(RVA = "0x6C4268", Offset = "0x6C4268", VA = "0x6C4268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001284")]
			[Address(RVA = "0x6C3E08", Offset = "0x6C3E08", VA = "0x6C3E08")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001285")]
			[Address(RVA = "0x6C3FD8", Offset = "0x6C3FD8", VA = "0x6C3FD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001286")]
			[Address(RVA = "0x6C3FDC", Offset = "0x6C3FDC", VA = "0x6C3FDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001288")]
			[Address(RVA = "0x6C4200", Offset = "0x6C4200", VA = "0x6C4200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC13C", Offset = "0x4CC13C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170000E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600128D")]
				[Address(RVA = "0x6C4360", Offset = "0x6C4360", VA = "0x6C4360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600128F")]
				[Address(RVA = "0x6C43D0", Offset = "0x6C43D0", VA = "0x6C43D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600128A")]
			[Address(RVA = "0x6C3F00", Offset = "0x6C3F00", VA = "0x6C3F00")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600128B")]
			[Address(RVA = "0x6C4270", Offset = "0x6C4270", VA = "0x6C4270", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600128C")]
			[Address(RVA = "0x6C4274", Offset = "0x6C4274", VA = "0x6C4274", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600128E")]
			[Address(RVA = "0x6C4368", Offset = "0x6C4368", VA = "0x6C4368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006AF")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CF8E8", Offset = "0x4CF8E8")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700006C")]
		public bool IsMoving
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x6C3B38", Offset = "0x6C3B38", VA = "0x6C3B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5354", Offset = "0x4D5354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x6C3B40", Offset = "0x6C3B40", VA = "0x6C3B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5364", Offset = "0x4D5364")]
			private set
			{
			}
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x6C3B4C", Offset = "0x6C3B4C", VA = "0x6C3B4C")]
		private void Start()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x6C3B90", Offset = "0x6C3B90", VA = "0x6C3B90")]
		private void Update()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x6C3D08", Offset = "0x6C3D08", VA = "0x6C3D08")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x6C3D70", Offset = "0x6C3D70", VA = "0x6C3D70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D5374", Offset = "0x4D5374")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x6C3E34", Offset = "0x6C3E34", VA = "0x6C3E34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D53D8", Offset = "0x4D53D8")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x6C3F2C", Offset = "0x6C3F2C", VA = "0x6C3F2C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x6C3FD0", Offset = "0x6C3FD0", VA = "0x6C3FD0")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x6C43D8", Offset = "0x6C43D8", VA = "0x6C43D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x6C4454", Offset = "0x6C4454", VA = "0x6C4454")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x6C4524", Offset = "0x6C4524", VA = "0x6C4524")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x6C463C", Offset = "0x6C463C", VA = "0x6C463C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x6C470C", Offset = "0x6C470C", VA = "0x6C470C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x6C481C", Offset = "0x6C481C", VA = "0x6C481C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40006C0")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40006C1")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40006C2")]
		EUDT_None,
		[Token(Token = "0x40006C3")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200011D")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC14C", Offset = "0x4CC14C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170000E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001293")]
				[Address(RVA = "0x6BBEC8", Offset = "0x6BBEC8", VA = "0x6BBEC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001295")]
				[Address(RVA = "0x6BBF38", Offset = "0x6BBF38", VA = "0x6BBF38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001290")]
			[Address(RVA = "0x6BB3D4", Offset = "0x6BB3D4", VA = "0x6BB3D4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0x6BBBCC", Offset = "0x6BBBCC", VA = "0x6BBBCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001292")]
			[Address(RVA = "0x6BBBD0", Offset = "0x6BBBD0", VA = "0x6BBBD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001294")]
			[Address(RVA = "0x6BBED0", Offset = "0x6BBED0", VA = "0x6BBED0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40006C5")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40006C6")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40006C7")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4CF928", Offset = "0x4CF928")]
		public GameObject mainCamera;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4CF960", Offset = "0x4CF960")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x6BA344", Offset = "0x6BA344", VA = "0x6BA344")]
		private void Start()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x6BADF4", Offset = "0x6BADF4", VA = "0x6BADF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x6BAF50", Offset = "0x6BAF50", VA = "0x6BAF50")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x6BB0D0", Offset = "0x6BB0D0", VA = "0x6BB0D0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x6BB250", Offset = "0x6BB250", VA = "0x6BB250")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x6BAF24", Offset = "0x6BAF24", VA = "0x6BAF24")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x6BB360", Offset = "0x6BB360", VA = "0x6BB360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D543C", Offset = "0x4D543C")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x6BB400", Offset = "0x6BB400", VA = "0x6BB400")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x6BA764", Offset = "0x6BA764", VA = "0x6BA764")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x6BB564", Offset = "0x6BB564", VA = "0x6BB564")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x6BB43C", Offset = "0x6BB43C", VA = "0x6BB43C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x6BB984", Offset = "0x6BB984", VA = "0x6BB984")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x6BBA60", Offset = "0x6BBA60", VA = "0x6BBA60")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x6BBADC", Offset = "0x6BBADC", VA = "0x6BBADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D54A0", Offset = "0x4D54A0")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x6BBB2C", Offset = "0x6BBB2C", VA = "0x6BBB2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D54B0", Offset = "0x4D54B0")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x6BBB7C", Offset = "0x6BBB7C", VA = "0x6BBB7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D54C0", Offset = "0x4D54C0")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4CBC68", Offset = "0x4CBC68")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC15C", Offset = "0x4CC15C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001297")]
			[Address(RVA = "0x659DA0", Offset = "0x659DA0", VA = "0x659DA0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001298")]
			[Address(RVA = "0x659DA8", Offset = "0x659DA8", VA = "0x659DA8")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40006DC")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40006DD")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40006DE")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40006DF")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40006E0")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40006E1")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40006E2")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40006E3")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40006E4")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40006E5")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40006E6")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x658E74", Offset = "0x658E74", VA = "0x658E74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x658ECC", Offset = "0x658ECC", VA = "0x658ECC")]
		private void Start()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x659374", Offset = "0x659374", VA = "0x659374")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x659494", Offset = "0x659494", VA = "0x659494")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x659874", Offset = "0x659874", VA = "0x659874")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x659A0C", Offset = "0x659A0C", VA = "0x659A0C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x659BBC", Offset = "0x659BBC", VA = "0x659BBC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x659530", Offset = "0x659530", VA = "0x659530")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x6595D0", Offset = "0x6595D0", VA = "0x6595D0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x659138", Offset = "0x659138", VA = "0x659138")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x659D24", Offset = "0x659D24", VA = "0x659D24")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public enum HandPoseId
	{
		[Token(Token = "0x40006F9")]
		Default,
		[Token(Token = "0x40006FA")]
		Generic,
		[Token(Token = "0x40006FB")]
		PingPongBall,
		[Token(Token = "0x40006FC")]
		Controller
	}
	[Token(Token = "0x2000120")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700006D")]
		public bool AllowPointing
		{
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x659D14", Offset = "0x659D14", VA = "0x659D14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006E")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60009C7")]
			[Address(RVA = "0x659D1C", Offset = "0x659D1C", VA = "0x659D1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006F")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x659D0C", Offset = "0x659D0C", VA = "0x659D0C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x659DE4", Offset = "0x659DE4", VA = "0x659DE4")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x659DEC", Offset = "0x659DEC", VA = "0x659DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x65A0B8", Offset = "0x65A0B8", VA = "0x65A0B8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x65A128", Offset = "0x65A128", VA = "0x65A128")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x65A178", Offset = "0x65A178", VA = "0x65A178")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000122")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000704")]
		TRIANGLES,
		[Token(Token = "0x4000705")]
		QUADS
	}
	[Token(Token = "0x2000123")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000707")]
		ABSORPTION,
		[Token(Token = "0x4000708")]
		TRANSMISSION,
		[Token(Token = "0x4000709")]
		SCATTERING
	}
	[Token(Token = "0x2000124")]
	public struct MeshGroup
	{
		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000125")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x65D0EC", Offset = "0x65D0EC", VA = "0x65D0EC")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x65D1F0", Offset = "0x65D1F0", VA = "0x65D1F0")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x65D318", Offset = "0x65D318", VA = "0x65D318")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x65D440", Offset = "0x65D440", VA = "0x65D440")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x65D490", Offset = "0x65D490", VA = "0x65D490", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public enum AbuseReportType
	{
		[Token(Token = "0x4000710")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFA18", Offset = "0x4CFA18")]
		Unknown,
		[Token(Token = "0x4000711")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFA50", Offset = "0x4CFA50")]
		Object,
		[Token(Token = "0x4000712")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFA88", Offset = "0x4CFA88")]
		User
	}
	[Token(Token = "0x2000127")]
	public enum AchievementType
	{
		[Token(Token = "0x4000714")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFAC0", Offset = "0x4CFAC0")]
		Unknown,
		[Token(Token = "0x4000715")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFAF8", Offset = "0x4CFAF8")]
		Simple,
		[Token(Token = "0x4000716")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFB30", Offset = "0x4CFB30")]
		Bitfield,
		[Token(Token = "0x4000717")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFB68", Offset = "0x4CFB68")]
		Count
	}
	[Token(Token = "0x2000128")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x65E570", Offset = "0x65E570", VA = "0x65E570")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x65E6E4", Offset = "0x65E6E4", VA = "0x65E6E4")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x65E88C", Offset = "0x65E88C", VA = "0x65E88C")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x65ED84", Offset = "0x65ED84", VA = "0x65ED84")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x65EE88", Offset = "0x65EE88", VA = "0x65EE88")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x65EAF0", Offset = "0x65EAF0", VA = "0x65EAF0")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x65EFAC", Offset = "0x65EFAC", VA = "0x65EFAC", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public static class Callback
	{
		[Token(Token = "0x20002DA")]
		private class RequestCallback
		{
			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6001299")]
			[Address(RVA = "0x6EBA58", Offset = "0x6EBA58", VA = "0x6EBA58")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x600129A")]
			[Address(RVA = "0x6EB228", Offset = "0x6EB228", VA = "0x6EB228")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x600129B")]
			[Address(RVA = "0x6EBA60", Offset = "0x6EBA60", VA = "0x6EBA60", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20002DB")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x600129C")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x600129D")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x60009DA")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x6EB124", Offset = "0x6EB124", VA = "0x6EB124")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x6EB254", Offset = "0x6EB254", VA = "0x6EB254")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x6EB34C", Offset = "0x6EB34C", VA = "0x6EB34C")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x6EB680", Offset = "0x6EB680", VA = "0x6EB680")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x6EB718", Offset = "0x6EB718", VA = "0x6EB718")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x6EB7C8", Offset = "0x6EB7C8", VA = "0x6EB7C8")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x6EB478", Offset = "0x6EB478", VA = "0x6EB478")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x6EC1A4", Offset = "0x6EC1A4", VA = "0x6EC1A4")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x6EC230", Offset = "0x6EC230", VA = "0x6EC230")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x6EC32C", Offset = "0x6EC32C", VA = "0x6EC32C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x6EC3B8", Offset = "0x6EC3B8", VA = "0x6EC3B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x6EC3BC", Offset = "0x6EC3BC", VA = "0x6EC3BC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x6EC418", Offset = "0x6EC418", VA = "0x6EC418")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class CAPI
	{
		[Token(Token = "0x20002DC")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x600129E")]
			[Address(RVA = "0x52D8EC", Offset = "0x52D8EC", VA = "0x52D8EC")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x600129F")]
			[Address(RVA = "0x52D904", Offset = "0x52D904", VA = "0x52D904")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x52D920", Offset = "0x52D920", VA = "0x52D920")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20002DD")]
		public struct ovrNetSyncVec3
		{
			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;
		}

		[Token(Token = "0x20002DE")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x52D9EC", Offset = "0x52D9EC", VA = "0x52D9EC")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20002DF")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20002E0")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x4CC16C", Offset = "0x4CC16C")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x400071E")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4000720")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x660408", Offset = "0x660408", VA = "0x660408")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x6605CC", Offset = "0x6605CC", VA = "0x6605CC")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x660D3C", Offset = "0x660D3C", VA = "0x660D3C")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x660E00", Offset = "0x660E00", VA = "0x660E00")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x661130", Offset = "0x661130", VA = "0x661130")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x661250", Offset = "0x661250", VA = "0x661250")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x6612DC", Offset = "0x6612DC", VA = "0x6612DC")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x66134C", Offset = "0x66134C", VA = "0x66134C")]
		public static ulong DateTimeToNative(DateTime dt)
		{
			return default(ulong);
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x66143C", Offset = "0x66143C", VA = "0x66143C")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x661534", Offset = "0x661534", VA = "0x661534")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x6615D8", Offset = "0x6615D8", VA = "0x6615D8")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x65E628", Offset = "0x65E628", VA = "0x65E628")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x661778", Offset = "0x661778", VA = "0x661778")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x65E7D4", Offset = "0x65E7D4", VA = "0x65E7D4")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x661818", Offset = "0x661818", VA = "0x661818")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x6618E4", Offset = "0x6618E4", VA = "0x6618E4")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x6619E0", Offset = "0x6619E0", VA = "0x6619E0")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x661AAC", Offset = "0x661AAC", VA = "0x661AAC")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x661B78", Offset = "0x661B78", VA = "0x661B78")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x661C40", Offset = "0x661C40", VA = "0x661C40")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x661CFC", Offset = "0x661CFC", VA = "0x661CFC")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x661D5C", Offset = "0x661D5C", VA = "0x661D5C")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x661DEC", Offset = "0x661DEC", VA = "0x661DEC")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x661E7C", Offset = "0x661E7C", VA = "0x661E7C")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x661F1C", Offset = "0x661F1C", VA = "0x661F1C")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x661FAC", Offset = "0x661FAC", VA = "0x661FAC")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x66204C", Offset = "0x66204C", VA = "0x66204C")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x6620DC", Offset = "0x6620DC", VA = "0x6620DC")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x66217C", Offset = "0x66217C", VA = "0x66217C")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x66223C", Offset = "0x66223C", VA = "0x66223C")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x6622CC", Offset = "0x6622CC", VA = "0x6622CC")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x66236C", Offset = "0x66236C", VA = "0x66236C")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x66240C", Offset = "0x66240C", VA = "0x66240C")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x6624AC", Offset = "0x6624AC", VA = "0x6624AC")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x65E34C", Offset = "0x65E34C", VA = "0x65E34C")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x66253C", Offset = "0x66253C", VA = "0x66253C")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x6625CC", Offset = "0x6625CC", VA = "0x6625CC")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x662670", Offset = "0x662670", VA = "0x662670")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x662724", Offset = "0x662724", VA = "0x662724")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x662AA4", Offset = "0x662AA4", VA = "0x662AA4")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x65EC7C", Offset = "0x65EC7C", VA = "0x65EC7C")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x662B64", Offset = "0x662B64", VA = "0x662B64")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x662C5C", Offset = "0x662C5C", VA = "0x662C5C")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x662DD8", Offset = "0x662DD8", VA = "0x662DD8")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x662EA0", Offset = "0x662EA0", VA = "0x662EA0")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x662F3C", Offset = "0x662F3C", VA = "0x662F3C")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x662FA4", Offset = "0x662FA4", VA = "0x662FA4")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x663044", Offset = "0x663044", VA = "0x663044")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x663104", Offset = "0x663104", VA = "0x663104")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x6631C4", Offset = "0x6631C4", VA = "0x6631C4")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x663284", Offset = "0x663284", VA = "0x663284")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x663344", Offset = "0x663344", VA = "0x663344")]
		public static extern bool ovr_NetSync_GetListenerPosition(long connection_id, ulong sessionId, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x663404", Offset = "0x663404", VA = "0x663404")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamFloatPCM(long connection_id, ulong sessionId, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x6634D4", Offset = "0x6634D4", VA = "0x6634D4")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamInt16PCM(long connection_id, ulong session_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x6635A4", Offset = "0x6635A4", VA = "0x6635A4")]
		public static extern UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();

		[PreserveSig]
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x663634", Offset = "0x663634", VA = "0x663634")]
		public static extern void ovr_NetSync_SetListenerPosition(long connection_id, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x6636E4", Offset = "0x6636E4", VA = "0x6636E4")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x663784", Offset = "0x663784", VA = "0x663784")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x66381C", Offset = "0x66381C", VA = "0x66381C")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x6638BC", Offset = "0x6638BC", VA = "0x6638BC")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x66394C", Offset = "0x66394C", VA = "0x66394C")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x6639EC", Offset = "0x6639EC", VA = "0x6639EC")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x663A94", Offset = "0x663A94", VA = "0x663A94")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x663B34", Offset = "0x663B34", VA = "0x663B34")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x663BC4", Offset = "0x663BC4", VA = "0x663BC4")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x663C9C", Offset = "0x663C9C", VA = "0x663C9C")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x663D64", Offset = "0x663D64", VA = "0x663D64")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x663DF4", Offset = "0x663DF4", VA = "0x663DF4")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x663E84", Offset = "0x663E84", VA = "0x663E84")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x663F1C", Offset = "0x663F1C", VA = "0x663F1C")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x663FAC", Offset = "0x663FAC", VA = "0x663FAC")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x66404C", Offset = "0x66404C", VA = "0x66404C")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x6640EC", Offset = "0x6640EC", VA = "0x6640EC")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x66418C", Offset = "0x66418C", VA = "0x66418C")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x66421C", Offset = "0x66421C", VA = "0x66421C")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x6642DC", Offset = "0x6642DC", VA = "0x6642DC")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x66439C", Offset = "0x66439C", VA = "0x66439C")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x66443C", Offset = "0x66443C", VA = "0x66443C")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x664514", Offset = "0x664514", VA = "0x664514")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x6645EC", Offset = "0x6645EC", VA = "0x6645EC")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x66468C", Offset = "0x66468C", VA = "0x66468C")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x66472C", Offset = "0x66472C", VA = "0x66472C")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x6647DC", Offset = "0x6647DC", VA = "0x6647DC")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x66486C", Offset = "0x66486C", VA = "0x66486C")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x6648FC", Offset = "0x6648FC", VA = "0x6648FC")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x66499C", Offset = "0x66499C", VA = "0x66499C")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x664A3C", Offset = "0x664A3C", VA = "0x664A3C")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x664ADC", Offset = "0x664ADC", VA = "0x664ADC")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x664B7C", Offset = "0x664B7C", VA = "0x664B7C")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x65D6CC", Offset = "0x65D6CC", VA = "0x65D6CC")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x664C1C", Offset = "0x664C1C", VA = "0x664C1C")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x65D860", Offset = "0x65D860", VA = "0x65D860")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x664CCC", Offset = "0x664CCC", VA = "0x664CCC")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x65D9F8", Offset = "0x65D9F8", VA = "0x65D9F8")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x65DB4C", Offset = "0x65DB4C", VA = "0x65DB4C")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x65DCBC", Offset = "0x65DCBC", VA = "0x65DCBC")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x65DF0C", Offset = "0x65DF0C", VA = "0x65DF0C")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x65E148", Offset = "0x65E148", VA = "0x65E148")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x664D7C", Offset = "0x664D7C", VA = "0x664D7C")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x664E1C", Offset = "0x664E1C", VA = "0x664E1C")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x664ECC", Offset = "0x664ECC", VA = "0x664ECC")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x65E958", Offset = "0x65E958", VA = "0x65E958")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x65EB40", Offset = "0x65EB40", VA = "0x65EB40")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x664F5C", Offset = "0x664F5C", VA = "0x664F5C")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x664FEC", Offset = "0x664FEC", VA = "0x664FEC")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x66507C", Offset = "0x66507C", VA = "0x66507C")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x665124", Offset = "0x665124", VA = "0x665124")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x65F1D8", Offset = "0x65F1D8", VA = "0x65F1D8")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x65F344", Offset = "0x65F344", VA = "0x65F344")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x65F4B0", Offset = "0x65F4B0", VA = "0x65F4B0")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x6651C4", Offset = "0x6651C4", VA = "0x6651C4")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x65F624", Offset = "0x65F624", VA = "0x65F624")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x65F790", Offset = "0x65F790", VA = "0x65F790")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x65F8FC", Offset = "0x65F8FC", VA = "0x65F8FC")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x665264", Offset = "0x665264", VA = "0x665264")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x65FA70", Offset = "0x65FA70", VA = "0x65FA70")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x65FBDC", Offset = "0x65FBDC", VA = "0x65FBDC")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x65FD48", Offset = "0x65FD48", VA = "0x65FD48")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x665304", Offset = "0x665304", VA = "0x665304")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x65FEB4", Offset = "0x65FEB4", VA = "0x65FEB4")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x660010", Offset = "0x660010", VA = "0x660010")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x66017C", Offset = "0x66017C", VA = "0x66017C")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x6602E8", Offset = "0x6602E8", VA = "0x6602E8")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x6653A4", Offset = "0x6653A4", VA = "0x6653A4")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x665444", Offset = "0x665444", VA = "0x665444")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x665518", Offset = "0x665518", VA = "0x665518")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x6655C8", Offset = "0x6655C8", VA = "0x6655C8")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x665698", Offset = "0x665698", VA = "0x665698")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x665758", Offset = "0x665758", VA = "0x665758")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x665828", Offset = "0x665828", VA = "0x665828")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x6658FC", Offset = "0x6658FC", VA = "0x6658FC")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x6659AC", Offset = "0x6659AC", VA = "0x6659AC")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x665A80", Offset = "0x665A80", VA = "0x665A80")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x665B30", Offset = "0x665B30", VA = "0x665B30")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x665BD8", Offset = "0x665BD8", VA = "0x665BD8")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x665C78", Offset = "0x665C78", VA = "0x665C78")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x665D4C", Offset = "0x665D4C", VA = "0x665D4C")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x665DFC", Offset = "0x665DFC", VA = "0x665DFC")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x665EA4", Offset = "0x665EA4", VA = "0x665EA4")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x665F44", Offset = "0x665F44", VA = "0x665F44")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x666018", Offset = "0x666018", VA = "0x666018")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x6660C8", Offset = "0x6660C8", VA = "0x6660C8")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x6661BC", Offset = "0x6661BC", VA = "0x6661BC")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x666274", Offset = "0x666274", VA = "0x666274")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x666368", Offset = "0x666368", VA = "0x666368")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x666420", Offset = "0x666420", VA = "0x666420")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x66653C", Offset = "0x66653C", VA = "0x66653C")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x666624", Offset = "0x666624", VA = "0x666624")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x6666B4", Offset = "0x6666B4", VA = "0x6666B4")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x666744", Offset = "0x666744", VA = "0x666744")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x6667EC", Offset = "0x6667EC", VA = "0x6667EC")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x66688C", Offset = "0x66688C", VA = "0x66688C")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x666934", Offset = "0x666934", VA = "0x666934")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x6669D4", Offset = "0x6669D4", VA = "0x6669D4")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x666A64", Offset = "0x666A64", VA = "0x666A64")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x666B0C", Offset = "0x666B0C", VA = "0x666B0C")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x666BAC", Offset = "0x666BAC", VA = "0x666BAC")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x666C54", Offset = "0x666C54", VA = "0x666C54")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x666CF0", Offset = "0x666CF0", VA = "0x666CF0")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x666D98", Offset = "0x666D98", VA = "0x666D98")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x666E38", Offset = "0x666E38", VA = "0x666E38")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x666F0C", Offset = "0x666F0C", VA = "0x666F0C")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x666FBC", Offset = "0x666FBC", VA = "0x666FBC")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x66711C", Offset = "0x66711C", VA = "0x66711C")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x6672C8", Offset = "0x6672C8", VA = "0x6672C8")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x667370", Offset = "0x667370", VA = "0x667370")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x667410", Offset = "0x667410", VA = "0x667410")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x6674B8", Offset = "0x6674B8", VA = "0x6674B8")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x667558", Offset = "0x667558", VA = "0x667558")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x6676C8", Offset = "0x6676C8", VA = "0x6676C8")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x667758", Offset = "0x667758", VA = "0x667758")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x6677E8", Offset = "0x6677E8", VA = "0x6677E8")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x667890", Offset = "0x667890", VA = "0x667890")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x667930", Offset = "0x667930", VA = "0x667930")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x6679C0", Offset = "0x6679C0", VA = "0x6679C0")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x667A68", Offset = "0x667A68", VA = "0x667A68")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x667B08", Offset = "0x667B08", VA = "0x667B08")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x667BD8", Offset = "0x667BD8", VA = "0x667BD8")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x667CA0", Offset = "0x667CA0", VA = "0x667CA0")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x667D60", Offset = "0x667D60", VA = "0x667D60")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x667E18", Offset = "0x667E18", VA = "0x667E18")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x667EB8", Offset = "0x667EB8", VA = "0x667EB8")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x667F58", Offset = "0x667F58", VA = "0x667F58")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x668030", Offset = "0x668030", VA = "0x668030")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x668108", Offset = "0x668108", VA = "0x668108")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x668198", Offset = "0x668198", VA = "0x668198")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x668240", Offset = "0x668240", VA = "0x668240")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x6682E0", Offset = "0x6682E0", VA = "0x6682E0")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x668370", Offset = "0x668370", VA = "0x668370")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x668400", Offset = "0x668400", VA = "0x668400")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x668490", Offset = "0x668490", VA = "0x668490")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x668520", Offset = "0x668520", VA = "0x668520")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x6685B0", Offset = "0x6685B0", VA = "0x6685B0")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x668650", Offset = "0x668650", VA = "0x668650")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x668708", Offset = "0x668708", VA = "0x668708")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x6687B8", Offset = "0x6687B8", VA = "0x6687B8")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x668870", Offset = "0x668870", VA = "0x668870")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x668920", Offset = "0x668920", VA = "0x668920")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x6689F4", Offset = "0x6689F4", VA = "0x6689F4")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x668AA4", Offset = "0x668AA4", VA = "0x668AA4")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x668B34", Offset = "0x668B34", VA = "0x668B34")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x668C04", Offset = "0x668C04", VA = "0x668C04")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x668CCC", Offset = "0x668CCC", VA = "0x668CCC")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x668D84", Offset = "0x668D84", VA = "0x668D84")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x668E34", Offset = "0x668E34", VA = "0x668E34")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x668EF4", Offset = "0x668EF4", VA = "0x668EF4")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x668FAC", Offset = "0x668FAC", VA = "0x668FAC")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x669064", Offset = "0x669064", VA = "0x669064")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x669114", Offset = "0x669114", VA = "0x669114")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x6691CC", Offset = "0x6691CC", VA = "0x6691CC")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x66927C", Offset = "0x66927C", VA = "0x66927C")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x669334", Offset = "0x669334", VA = "0x669334")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x6693E4", Offset = "0x6693E4", VA = "0x6693E4")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x669494", Offset = "0x669494", VA = "0x669494")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x669544", Offset = "0x669544", VA = "0x669544")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x6695D4", Offset = "0x6695D4", VA = "0x6695D4")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x669694", Offset = "0x669694", VA = "0x669694")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x66974C", Offset = "0x66974C", VA = "0x66974C")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x6697FC", Offset = "0x6697FC", VA = "0x6697FC")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x6698B4", Offset = "0x6698B4", VA = "0x6698B4")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x669A30", Offset = "0x669A30", VA = "0x669A30")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x669AD0", Offset = "0x669AD0", VA = "0x669AD0")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x669BAC", Offset = "0x669BAC", VA = "0x669BAC")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x669C64", Offset = "0x669C64", VA = "0x669C64")]
		public static extern ulong ovr_NetSync_Connect(IntPtr connect_options);

		[PreserveSig]
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x669D04", Offset = "0x669D04", VA = "0x669D04")]
		public static extern ulong ovr_NetSync_Disconnect(long connection_id);

		[PreserveSig]
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x669DA4", Offset = "0x669DA4", VA = "0x669DA4")]
		public static extern ulong ovr_NetSync_GetSessions(long connection_id);

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x669E44", Offset = "0x669E44", VA = "0x669E44")]
		public static ulong ovr_NetSync_SetVoipGroup(long connection_id, string group_id)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x669F00", Offset = "0x669F00", VA = "0x669F00")]
		private static extern ulong ovr_NetSync_SetVoipGroup_Native(long connection_id, IntPtr group_id);

		[PreserveSig]
		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x669FB0", Offset = "0x669FB0", VA = "0x669FB0")]
		public static extern ulong ovr_NetSync_SetVoipMicSource(long connection_id, NetSyncVoipMicSource mic_source);

		[PreserveSig]
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x66A060", Offset = "0x66A060", VA = "0x66A060")]
		public static extern ulong ovr_NetSync_SetVoipSessionMuted(long connection_id, ulong session_id, bool muted);

		[PreserveSig]
		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x66A118", Offset = "0x66A118", VA = "0x66A118")]
		public static extern ulong ovr_NetSync_SetVoipStreamMode(long connection_id, ulong sessionId, NetSyncVoipStreamMode streamMode);

		[PreserveSig]
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x66A1D0", Offset = "0x66A1D0", VA = "0x66A1D0")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x66A260", Offset = "0x66A260", VA = "0x66A260")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x66A300", Offset = "0x66A300", VA = "0x66A300")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x66A390", Offset = "0x66A390", VA = "0x66A390")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x66A440", Offset = "0x66A440", VA = "0x66A440")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x66A4E0", Offset = "0x66A4E0", VA = "0x66A4E0")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x66A570", Offset = "0x66A570", VA = "0x66A570")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x66A610", Offset = "0x66A610", VA = "0x66A610")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x66A6BC", Offset = "0x66A6BC", VA = "0x66A6BC")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x66A75C", Offset = "0x66A75C", VA = "0x66A75C")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x66A7FC", Offset = "0x66A7FC", VA = "0x66A7FC")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x66A88C", Offset = "0x66A88C", VA = "0x66A88C")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x66A91C", Offset = "0x66A91C", VA = "0x66A91C")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x66A9BC", Offset = "0x66A9BC", VA = "0x66A9BC")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x66AA74", Offset = "0x66AA74", VA = "0x66AA74")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x66AB2C", Offset = "0x66AB2C", VA = "0x66AB2C")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x66ABCC", Offset = "0x66ABCC", VA = "0x66ABCC")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x66AC5C", Offset = "0x66AC5C", VA = "0x66AC5C")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x66ACFC", Offset = "0x66ACFC", VA = "0x66ACFC")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x66AD8C", Offset = "0x66AD8C", VA = "0x66AD8C")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x66AE2C", Offset = "0x66AE2C", VA = "0x66AE2C")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x66AEBC", Offset = "0x66AEBC", VA = "0x66AEBC")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x66AF5C", Offset = "0x66AF5C", VA = "0x66AF5C")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x66B018", Offset = "0x66B018", VA = "0x66B018")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x66B0C8", Offset = "0x66B0C8", VA = "0x66B0C8")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x66B178", Offset = "0x66B178", VA = "0x66B178")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x66B228", Offset = "0x66B228", VA = "0x66B228")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x66B2DC", Offset = "0x66B2DC", VA = "0x66B2DC")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x66B37C", Offset = "0x66B37C", VA = "0x66B37C")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x66B41C", Offset = "0x66B41C", VA = "0x66B41C")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x66B4D8", Offset = "0x66B4D8", VA = "0x66B4D8")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x66B588", Offset = "0x66B588", VA = "0x66B588")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x66B640", Offset = "0x66B640", VA = "0x66B640")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x66B7B8", Offset = "0x66B7B8", VA = "0x66B7B8")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x66B868", Offset = "0x66B868", VA = "0x66B868")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x66B918", Offset = "0x66B918", VA = "0x66B918")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x66B9C8", Offset = "0x66B9C8", VA = "0x66B9C8")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x66BA68", Offset = "0x66BA68", VA = "0x66BA68")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x66BB08", Offset = "0x66BB08", VA = "0x66BB08")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x66BBB0", Offset = "0x66BBB0", VA = "0x66BBB0")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x66BC50", Offset = "0x66BC50", VA = "0x66BC50")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x66BCF0", Offset = "0x66BCF0", VA = "0x66BCF0")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x66BD80", Offset = "0x66BD80", VA = "0x66BD80")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x66BE20", Offset = "0x66BE20", VA = "0x66BE20")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x66BEB0", Offset = "0x66BEB0", VA = "0x66BEB0")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x66BF40", Offset = "0x66BF40", VA = "0x66BF40")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x66BFD0", Offset = "0x66BFD0", VA = "0x66BFD0")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x66C070", Offset = "0x66C070", VA = "0x66C070")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x66C110", Offset = "0x66C110", VA = "0x66C110")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x66C1A0", Offset = "0x66C1A0", VA = "0x66C1A0")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x66C230", Offset = "0x66C230", VA = "0x66C230")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x66C2D0", Offset = "0x66C2D0", VA = "0x66C2D0")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x66C370", Offset = "0x66C370", VA = "0x66C370")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x66C410", Offset = "0x66C410", VA = "0x66C410")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x66C4B0", Offset = "0x66C4B0", VA = "0x66C4B0")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x66C560", Offset = "0x66C560", VA = "0x66C560")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x66C600", Offset = "0x66C600", VA = "0x66C600")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x66C690", Offset = "0x66C690", VA = "0x66C690")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x66C720", Offset = "0x66C720", VA = "0x66C720")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x66C7B0", Offset = "0x66C7B0", VA = "0x66C7B0")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x66C840", Offset = "0x66C840", VA = "0x66C840")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x66C8FC", Offset = "0x66C8FC", VA = "0x66C8FC")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x66C9AC", Offset = "0x66C9AC", VA = "0x66C9AC")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x66CA70", Offset = "0x66CA70", VA = "0x66CA70")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x66CB28", Offset = "0x66CB28", VA = "0x66CB28")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x66CBE8", Offset = "0x66CBE8", VA = "0x66CBE8")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x66CCA8", Offset = "0x66CCA8", VA = "0x66CCA8")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x66CD48", Offset = "0x66CD48", VA = "0x66CD48")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x66CDB0", Offset = "0x66CDB0", VA = "0x66CDB0")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x66CE50", Offset = "0x66CE50", VA = "0x66CE50")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x66CEF0", Offset = "0x66CEF0", VA = "0x66CEF0")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x66CF58", Offset = "0x66CF58", VA = "0x66CF58")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x66CFF8", Offset = "0x66CFF8", VA = "0x66CFF8")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x66D098", Offset = "0x66D098", VA = "0x66D098")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x66D138", Offset = "0x66D138", VA = "0x66D138")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x66D1E8", Offset = "0x66D1E8", VA = "0x66D1E8")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x66D250", Offset = "0x66D250", VA = "0x66D250")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x66D2F0", Offset = "0x66D2F0", VA = "0x66D2F0")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x66D390", Offset = "0x66D390", VA = "0x66D390")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x66D438", Offset = "0x66D438", VA = "0x66D438")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x66D4A0", Offset = "0x66D4A0", VA = "0x66D4A0")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x66D540", Offset = "0x66D540", VA = "0x66D540")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x66D5E0", Offset = "0x66D5E0", VA = "0x66D5E0")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x66D688", Offset = "0x66D688", VA = "0x66D688")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x66D6F0", Offset = "0x66D6F0", VA = "0x66D6F0")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x66D790", Offset = "0x66D790", VA = "0x66D790")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x66D7F8", Offset = "0x66D7F8", VA = "0x66D7F8")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x66D898", Offset = "0x66D898", VA = "0x66D898")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x66D948", Offset = "0x66D948", VA = "0x66D948")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x66D9B0", Offset = "0x66D9B0", VA = "0x66D9B0")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x66DA50", Offset = "0x66DA50", VA = "0x66DA50")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x66DAF0", Offset = "0x66DAF0", VA = "0x66DAF0")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x66DB98", Offset = "0x66DB98", VA = "0x66DB98")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x66DC40", Offset = "0x66DC40", VA = "0x66DC40")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x66DCA8", Offset = "0x66DCA8", VA = "0x66DCA8")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x66DD48", Offset = "0x66DD48", VA = "0x66DD48")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x66DDE8", Offset = "0x66DDE8", VA = "0x66DDE8")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x66DE88", Offset = "0x66DE88", VA = "0x66DE88")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x66DEF0", Offset = "0x66DEF0", VA = "0x66DEF0")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x66DF90", Offset = "0x66DF90", VA = "0x66DF90")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x66E030", Offset = "0x66E030", VA = "0x66E030")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x66E098", Offset = "0x66E098", VA = "0x66E098")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x66E138", Offset = "0x66E138", VA = "0x66E138")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x66E1D8", Offset = "0x66E1D8", VA = "0x66E1D8")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x66E240", Offset = "0x66E240", VA = "0x66E240")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x66E2E0", Offset = "0x66E2E0", VA = "0x66E2E0")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x66E348", Offset = "0x66E348", VA = "0x66E348")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x66E3E8", Offset = "0x66E3E8", VA = "0x66E3E8")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x66E450", Offset = "0x66E450", VA = "0x66E450")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x66E4F0", Offset = "0x66E4F0", VA = "0x66E4F0")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x66E558", Offset = "0x66E558", VA = "0x66E558")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x66E5F8", Offset = "0x66E5F8", VA = "0x66E5F8")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x66E698", Offset = "0x66E698", VA = "0x66E698")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x66E700", Offset = "0x66E700", VA = "0x66E700")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x66E7A0", Offset = "0x66E7A0", VA = "0x66E7A0")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x66E850", Offset = "0x66E850", VA = "0x66E850")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x66E8F0", Offset = "0x66E8F0", VA = "0x66E8F0")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x66E990", Offset = "0x66E990", VA = "0x66E990")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x66EA30", Offset = "0x66EA30", VA = "0x66EA30")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x66EA98", Offset = "0x66EA98", VA = "0x66EA98")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x66EB38", Offset = "0x66EB38", VA = "0x66EB38")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x66EBE0", Offset = "0x66EBE0", VA = "0x66EBE0")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x66EC80", Offset = "0x66EC80", VA = "0x66EC80")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x66ED20", Offset = "0x66ED20", VA = "0x66ED20")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x66ED88", Offset = "0x66ED88", VA = "0x66ED88")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x66EE28", Offset = "0x66EE28", VA = "0x66EE28")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x66EED0", Offset = "0x66EED0", VA = "0x66EED0")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x66EF70", Offset = "0x66EF70", VA = "0x66EF70")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x66EFD8", Offset = "0x66EFD8", VA = "0x66EFD8")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x66F078", Offset = "0x66F078", VA = "0x66F078")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x66F118", Offset = "0x66F118", VA = "0x66F118")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x66F1B8", Offset = "0x66F1B8", VA = "0x66F1B8")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x66F258", Offset = "0x66F258", VA = "0x66F258")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x66F2F8", Offset = "0x66F2F8", VA = "0x66F2F8")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x66F3A0", Offset = "0x66F3A0", VA = "0x66F3A0")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x66F440", Offset = "0x66F440", VA = "0x66F440")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x66F4E0", Offset = "0x66F4E0", VA = "0x66F4E0")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x66F548", Offset = "0x66F548", VA = "0x66F548")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x66F5E8", Offset = "0x66F5E8", VA = "0x66F5E8")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x66F688", Offset = "0x66F688", VA = "0x66F688")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x66F728", Offset = "0x66F728", VA = "0x66F728")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x66F790", Offset = "0x66F790", VA = "0x66F790")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x66F830", Offset = "0x66F830", VA = "0x66F830")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x66F8E0", Offset = "0x66F8E0", VA = "0x66F8E0")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x66F980", Offset = "0x66F980", VA = "0x66F980")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x66F9E8", Offset = "0x66F9E8", VA = "0x66F9E8")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x66FA88", Offset = "0x66FA88", VA = "0x66FA88")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x66FB28", Offset = "0x66FB28", VA = "0x66FB28")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x66FBC8", Offset = "0x66FBC8", VA = "0x66FBC8")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x66FC30", Offset = "0x66FC30", VA = "0x66FC30")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x66FCD0", Offset = "0x66FCD0", VA = "0x66FCD0")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x66FDEC", Offset = "0x66FDEC", VA = "0x66FDEC")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x66FD4C", Offset = "0x66FD4C", VA = "0x66FD4C")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x66FE8C", Offset = "0x66FE8C", VA = "0x66FE8C")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x66FEF4", Offset = "0x66FEF4", VA = "0x66FEF4")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x66FF94", Offset = "0x66FF94", VA = "0x66FF94")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x66FFFC", Offset = "0x66FFFC", VA = "0x66FFFC")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x67009C", Offset = "0x67009C", VA = "0x67009C")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x67013C", Offset = "0x67013C", VA = "0x67013C")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x6701DC", Offset = "0x6701DC", VA = "0x6701DC")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x670244", Offset = "0x670244", VA = "0x670244")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x6702E4", Offset = "0x6702E4", VA = "0x6702E4")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x67034C", Offset = "0x67034C", VA = "0x67034C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x6703EC", Offset = "0x6703EC", VA = "0x6703EC")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x67048C", Offset = "0x67048C", VA = "0x67048C")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x67052C", Offset = "0x67052C", VA = "0x67052C")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x670594", Offset = "0x670594", VA = "0x670594")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x670634", Offset = "0x670634", VA = "0x670634")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x6706E4", Offset = "0x6706E4", VA = "0x6706E4")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x67074C", Offset = "0x67074C", VA = "0x67074C")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x6707EC", Offset = "0x6707EC", VA = "0x6707EC")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x67088C", Offset = "0x67088C", VA = "0x67088C")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x670934", Offset = "0x670934", VA = "0x670934")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x67099C", Offset = "0x67099C", VA = "0x67099C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x670A3C", Offset = "0x670A3C", VA = "0x670A3C")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x670AA4", Offset = "0x670AA4", VA = "0x670AA4")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x670B44", Offset = "0x670B44", VA = "0x670B44")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x670BE4", Offset = "0x670BE4", VA = "0x670BE4")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x670C4C", Offset = "0x670C4C", VA = "0x670C4C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x670CEC", Offset = "0x670CEC", VA = "0x670CEC")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x670DA8", Offset = "0x670DA8", VA = "0x670DA8")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x660FF8", Offset = "0x660FF8", VA = "0x660FF8")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x670E58", Offset = "0x670E58", VA = "0x670E58")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x660F58", Offset = "0x660F58", VA = "0x660F58")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x661070", Offset = "0x661070", VA = "0x661070")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x670F08", Offset = "0x670F08", VA = "0x670F08")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x670FB8", Offset = "0x670FB8", VA = "0x670FB8")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x671020", Offset = "0x671020", VA = "0x671020")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x6710C0", Offset = "0x6710C0", VA = "0x6710C0")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x671128", Offset = "0x671128", VA = "0x671128")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x6711C8", Offset = "0x6711C8", VA = "0x6711C8")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x671230", Offset = "0x671230", VA = "0x671230")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x6712D0", Offset = "0x6712D0", VA = "0x6712D0")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x671380", Offset = "0x671380", VA = "0x671380")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x6713E8", Offset = "0x6713E8", VA = "0x6713E8")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x671488", Offset = "0x671488", VA = "0x671488")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x671528", Offset = "0x671528", VA = "0x671528")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x6715D0", Offset = "0x6715D0", VA = "0x6715D0")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x67166C", Offset = "0x67166C", VA = "0x67166C")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x6716D4", Offset = "0x6716D4", VA = "0x6716D4")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x671774", Offset = "0x671774", VA = "0x671774")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x671814", Offset = "0x671814", VA = "0x671814")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x67187C", Offset = "0x67187C", VA = "0x67187C")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x67191C", Offset = "0x67191C", VA = "0x67191C")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x6719BC", Offset = "0x6719BC", VA = "0x6719BC")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x671A5C", Offset = "0x671A5C", VA = "0x671A5C")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x671AFC", Offset = "0x671AFC", VA = "0x671AFC")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x671BA4", Offset = "0x671BA4", VA = "0x671BA4")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x671C0C", Offset = "0x671C0C", VA = "0x671C0C")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x671CAC", Offset = "0x671CAC", VA = "0x671CAC")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x671D14", Offset = "0x671D14", VA = "0x671D14")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x671DB4", Offset = "0x671DB4", VA = "0x671DB4")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x671E1C", Offset = "0x671E1C", VA = "0x671E1C")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x671EBC", Offset = "0x671EBC", VA = "0x671EBC")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x671F5C", Offset = "0x671F5C", VA = "0x671F5C")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x671FC4", Offset = "0x671FC4", VA = "0x671FC4")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x672064", Offset = "0x672064", VA = "0x672064")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x672114", Offset = "0x672114", VA = "0x672114")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x6721B4", Offset = "0x6721B4", VA = "0x6721B4")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x67221C", Offset = "0x67221C", VA = "0x67221C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x6722BC", Offset = "0x6722BC", VA = "0x6722BC")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x672324", Offset = "0x672324", VA = "0x672324")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x6723C4", Offset = "0x6723C4", VA = "0x6723C4")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x67242C", Offset = "0x67242C", VA = "0x67242C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x6724CC", Offset = "0x6724CC", VA = "0x6724CC")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x672574", Offset = "0x672574", VA = "0x672574")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x67261C", Offset = "0x67261C", VA = "0x67261C")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x672684", Offset = "0x672684", VA = "0x672684")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x672724", Offset = "0x672724", VA = "0x672724")]
		public static string ovr_LaunchDetails_GetDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x67278C", Offset = "0x67278C", VA = "0x67278C")]
		private static extern IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(IntPtr obj);

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x67282C", Offset = "0x67282C", VA = "0x67282C")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x672894", Offset = "0x672894", VA = "0x672894")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x672934", Offset = "0x672934", VA = "0x672934")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x6729D4", Offset = "0x6729D4", VA = "0x6729D4")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x672A74", Offset = "0x672A74", VA = "0x672A74")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x672B14", Offset = "0x672B14", VA = "0x672B14")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x672BBC", Offset = "0x672BBC", VA = "0x672BBC")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x672C64", Offset = "0x672C64", VA = "0x672C64")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x672D0C", Offset = "0x672D0C", VA = "0x672D0C")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x672DAC", Offset = "0x672DAC", VA = "0x672DAC")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x672E54", Offset = "0x672E54", VA = "0x672E54")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x672EFC", Offset = "0x672EFC", VA = "0x672EFC")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x673018", Offset = "0x673018", VA = "0x673018")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x672F78", Offset = "0x672F78", VA = "0x672F78")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x6730B8", Offset = "0x6730B8", VA = "0x6730B8")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x673158", Offset = "0x673158", VA = "0x673158")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x6731F8", Offset = "0x6731F8", VA = "0x6731F8")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x673260", Offset = "0x673260", VA = "0x673260")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x673300", Offset = "0x673300", VA = "0x673300")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x6733A0", Offset = "0x6733A0", VA = "0x6733A0")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x673450", Offset = "0x673450", VA = "0x673450")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x6734B8", Offset = "0x6734B8", VA = "0x6734B8")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x673558", Offset = "0x673558", VA = "0x673558")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x6735C0", Offset = "0x6735C0", VA = "0x6735C0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x673660", Offset = "0x673660", VA = "0x673660")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x673700", Offset = "0x673700", VA = "0x673700")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x6737A0", Offset = "0x6737A0", VA = "0x6737A0")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x673848", Offset = "0x673848", VA = "0x673848")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x6738F0", Offset = "0x6738F0", VA = "0x6738F0")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x673998", Offset = "0x673998", VA = "0x673998")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x673A00", Offset = "0x673A00", VA = "0x673A00")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x673AA0", Offset = "0x673AA0", VA = "0x673AA0")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x673B40", Offset = "0x673B40", VA = "0x673B40")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x673BA8", Offset = "0x673BA8", VA = "0x673BA8")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x673C48", Offset = "0x673C48", VA = "0x673C48")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x673CF8", Offset = "0x673CF8", VA = "0x673CF8")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x673D98", Offset = "0x673D98", VA = "0x673D98")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x673E40", Offset = "0x673E40", VA = "0x673E40")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x673EE0", Offset = "0x673EE0", VA = "0x673EE0")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x673F88", Offset = "0x673F88", VA = "0x673F88")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x674030", Offset = "0x674030", VA = "0x674030")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x6740D8", Offset = "0x6740D8", VA = "0x6740D8")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x674178", Offset = "0x674178", VA = "0x674178")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x674220", Offset = "0x674220", VA = "0x674220")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x6742C0", Offset = "0x6742C0", VA = "0x6742C0")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x674360", Offset = "0x674360", VA = "0x674360")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x6743C8", Offset = "0x6743C8", VA = "0x6743C8")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x674468", Offset = "0x674468", VA = "0x674468")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x674508", Offset = "0x674508", VA = "0x674508")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x6745A8", Offset = "0x6745A8", VA = "0x6745A8")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x674650", Offset = "0x674650", VA = "0x674650")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x6746F0", Offset = "0x6746F0", VA = "0x6746F0")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x674790", Offset = "0x674790", VA = "0x674790")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x674830", Offset = "0x674830", VA = "0x674830")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x674898", Offset = "0x674898", VA = "0x674898")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x674938", Offset = "0x674938", VA = "0x674938")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x6749E8", Offset = "0x6749E8", VA = "0x6749E8")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x674A88", Offset = "0x674A88", VA = "0x674A88")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x674B28", Offset = "0x674B28", VA = "0x674B28")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x674BC8", Offset = "0x674BC8", VA = "0x674BC8")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x674C30", Offset = "0x674C30", VA = "0x674C30")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x674CD0", Offset = "0x674CD0", VA = "0x674CD0")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x674D70", Offset = "0x674D70", VA = "0x674D70")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x674E20", Offset = "0x674E20", VA = "0x674E20")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x674E88", Offset = "0x674E88", VA = "0x674E88")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x674F28", Offset = "0x674F28", VA = "0x674F28")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x674FC8", Offset = "0x674FC8", VA = "0x674FC8")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x675070", Offset = "0x675070", VA = "0x675070")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x675110", Offset = "0x675110", VA = "0x675110")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x6751B0", Offset = "0x6751B0", VA = "0x6751B0")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x675250", Offset = "0x675250", VA = "0x675250")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x6752F0", Offset = "0x6752F0", VA = "0x6752F0")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x675358", Offset = "0x675358", VA = "0x675358")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x6753F8", Offset = "0x6753F8", VA = "0x6753F8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x675498", Offset = "0x675498", VA = "0x675498")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x675500", Offset = "0x675500", VA = "0x675500")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x6755A0", Offset = "0x6755A0", VA = "0x6755A0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x675640", Offset = "0x675640", VA = "0x675640")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x6756E0", Offset = "0x6756E0", VA = "0x6756E0")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x675790", Offset = "0x675790", VA = "0x675790")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x675830", Offset = "0x675830", VA = "0x675830")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x6758D0", Offset = "0x6758D0", VA = "0x6758D0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x675970", Offset = "0x675970", VA = "0x675970")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x675A20", Offset = "0x675A20", VA = "0x675A20")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x675AC0", Offset = "0x675AC0", VA = "0x675AC0")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x675B60", Offset = "0x675B60", VA = "0x675B60")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x675C00", Offset = "0x675C00", VA = "0x675C00")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x675C68", Offset = "0x675C68", VA = "0x675C68")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x675D08", Offset = "0x675D08", VA = "0x675D08")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x675DA8", Offset = "0x675DA8", VA = "0x675DA8")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x675E48", Offset = "0x675E48", VA = "0x675E48")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x675EF0", Offset = "0x675EF0", VA = "0x675EF0")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x675FA0", Offset = "0x675FA0", VA = "0x675FA0")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x676040", Offset = "0x676040", VA = "0x676040")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x6760E0", Offset = "0x6760E0", VA = "0x6760E0")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x676180", Offset = "0x676180", VA = "0x676180")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x676220", Offset = "0x676220", VA = "0x676220")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x6762C0", Offset = "0x6762C0", VA = "0x6762C0")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x676360", Offset = "0x676360", VA = "0x676360")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x676400", Offset = "0x676400", VA = "0x676400")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x6764A0", Offset = "0x6764A0", VA = "0x6764A0")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x676540", Offset = "0x676540", VA = "0x676540")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x6765E0", Offset = "0x6765E0", VA = "0x6765E0")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x676680", Offset = "0x676680", VA = "0x676680")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x676720", Offset = "0x676720", VA = "0x676720")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x6767C0", Offset = "0x6767C0", VA = "0x6767C0")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x676860", Offset = "0x676860", VA = "0x676860")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x676900", Offset = "0x676900", VA = "0x676900")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x6769A0", Offset = "0x6769A0", VA = "0x6769A0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x676A40", Offset = "0x676A40", VA = "0x676A40")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x676AE0", Offset = "0x676AE0", VA = "0x676AE0")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x676B80", Offset = "0x676B80", VA = "0x676B80")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x676C20", Offset = "0x676C20", VA = "0x676C20")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x676CC0", Offset = "0x676CC0", VA = "0x676CC0")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x676D60", Offset = "0x676D60", VA = "0x676D60")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x676E00", Offset = "0x676E00", VA = "0x676E00")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x676EA0", Offset = "0x676EA0", VA = "0x676EA0")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x676F40", Offset = "0x676F40", VA = "0x676F40")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x676FE0", Offset = "0x676FE0", VA = "0x676FE0")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x677080", Offset = "0x677080", VA = "0x677080")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x677120", Offset = "0x677120", VA = "0x677120")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x6771C0", Offset = "0x6771C0", VA = "0x6771C0")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x677260", Offset = "0x677260", VA = "0x677260")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x677300", Offset = "0x677300", VA = "0x677300")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x6773A0", Offset = "0x6773A0", VA = "0x6773A0")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x677440", Offset = "0x677440", VA = "0x677440")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x6774E0", Offset = "0x6774E0", VA = "0x6774E0")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x677580", Offset = "0x677580", VA = "0x677580")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x677620", Offset = "0x677620", VA = "0x677620")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x6776C0", Offset = "0x6776C0", VA = "0x6776C0")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x677760", Offset = "0x677760", VA = "0x677760")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x677800", Offset = "0x677800", VA = "0x677800")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x6778A0", Offset = "0x6778A0", VA = "0x6778A0")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x677940", Offset = "0x677940", VA = "0x677940")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x6779E0", Offset = "0x6779E0", VA = "0x6779E0")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x677A80", Offset = "0x677A80", VA = "0x677A80")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x677B20", Offset = "0x677B20", VA = "0x677B20")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x677BC0", Offset = "0x677BC0", VA = "0x677BC0")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x677C60", Offset = "0x677C60", VA = "0x677C60")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x677D00", Offset = "0x677D00", VA = "0x677D00")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x677DA0", Offset = "0x677DA0", VA = "0x677DA0")]
		public static extern IntPtr ovr_Message_GetNetSyncConnection(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x677E40", Offset = "0x677E40", VA = "0x677E40")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x677EE0", Offset = "0x677EE0", VA = "0x677EE0")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x677F80", Offset = "0x677F80", VA = "0x677F80")]
		public static extern IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x678020", Offset = "0x678020", VA = "0x678020")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x6780C0", Offset = "0x6780C0", VA = "0x6780C0")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x678160", Offset = "0x678160", VA = "0x678160")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x678200", Offset = "0x678200", VA = "0x678200")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x6782A0", Offset = "0x6782A0", VA = "0x6782A0")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x678340", Offset = "0x678340", VA = "0x678340")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x6783E0", Offset = "0x6783E0", VA = "0x6783E0")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x678480", Offset = "0x678480", VA = "0x678480")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x678520", Offset = "0x678520", VA = "0x678520")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x6785C0", Offset = "0x6785C0", VA = "0x6785C0")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x678660", Offset = "0x678660", VA = "0x678660")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x678700", Offset = "0x678700", VA = "0x678700")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x6787A0", Offset = "0x6787A0", VA = "0x6787A0")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x678840", Offset = "0x678840", VA = "0x678840")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x6788E0", Offset = "0x6788E0", VA = "0x6788E0")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x678980", Offset = "0x678980", VA = "0x678980")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x678A20", Offset = "0x678A20", VA = "0x678A20")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x678AC0", Offset = "0x678AC0", VA = "0x678AC0")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x678B60", Offset = "0x678B60", VA = "0x678B60")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x678BC8", Offset = "0x678BC8", VA = "0x678BC8")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x678C68", Offset = "0x678C68", VA = "0x678C68")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x678D08", Offset = "0x678D08", VA = "0x678D08")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x678DA8", Offset = "0x678DA8", VA = "0x678DA8")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x678E48", Offset = "0x678E48", VA = "0x678E48")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x678EE8", Offset = "0x678EE8", VA = "0x678EE8")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x678F88", Offset = "0x678F88", VA = "0x678F88")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x679028", Offset = "0x679028", VA = "0x679028")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x6790C8", Offset = "0x6790C8", VA = "0x6790C8")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x679168", Offset = "0x679168", VA = "0x679168")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x679210", Offset = "0x679210", VA = "0x679210")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x6792B0", Offset = "0x6792B0", VA = "0x6792B0")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x679350", Offset = "0x679350", VA = "0x679350")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x679410", Offset = "0x679410", VA = "0x679410")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x6794D0", Offset = "0x6794D0", VA = "0x6794D0")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x679590", Offset = "0x679590", VA = "0x679590")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x679640", Offset = "0x679640", VA = "0x679640")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x6796E0", Offset = "0x6796E0", VA = "0x6796E0")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x679780", Offset = "0x679780", VA = "0x679780")]
		public static extern long ovr_NetSyncConnection_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x679820", Offset = "0x679820", VA = "0x679820")]
		public static extern NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x6798C0", Offset = "0x6798C0", VA = "0x6798C0")]
		public static extern ulong ovr_NetSyncConnection_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x679960", Offset = "0x679960", VA = "0x679960")]
		public static extern NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(IntPtr obj);

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x679A00", Offset = "0x679A00", VA = "0x679A00")]
		public static string ovr_NetSyncConnection_GetZoneId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x679A68", Offset = "0x679A68", VA = "0x679A68")]
		private static extern IntPtr ovr_NetSyncConnection_GetZoneId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x679B08", Offset = "0x679B08", VA = "0x679B08")]
		public static extern long ovr_NetSyncSession_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x679BA8", Offset = "0x679BA8", VA = "0x679BA8")]
		public static extern bool ovr_NetSyncSession_GetMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x679C50", Offset = "0x679C50", VA = "0x679C50")]
		public static extern ulong ovr_NetSyncSession_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x679CF0", Offset = "0x679CF0", VA = "0x679CF0")]
		public static extern ulong ovr_NetSyncSession_GetUserId(IntPtr obj);

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x679D90", Offset = "0x679D90", VA = "0x679D90")]
		public static string ovr_NetSyncSession_GetVoipGroup(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x679DF8", Offset = "0x679DF8", VA = "0x679DF8")]
		private static extern IntPtr ovr_NetSyncSession_GetVoipGroup_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x679E98", Offset = "0x679E98", VA = "0x679E98")]
		public static extern IntPtr ovr_NetSyncSessionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x679F48", Offset = "0x679F48", VA = "0x679F48")]
		public static extern UIntPtr ovr_NetSyncSessionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x679FE8", Offset = "0x679FE8", VA = "0x679FE8")]
		public static extern long ovr_NetSyncSessionsChangedNotification_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x67A088", Offset = "0x67A088", VA = "0x67A088")]
		public static extern IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x67A128", Offset = "0x67A128", VA = "0x67A128")]
		public static extern IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x67A1C8", Offset = "0x67A1C8", VA = "0x67A1C8")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x67A268", Offset = "0x67A268", VA = "0x67A268")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x67A308", Offset = "0x67A308", VA = "0x67A308")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x67A3A8", Offset = "0x67A3A8", VA = "0x67A3A8")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x67A448", Offset = "0x67A448", VA = "0x67A448")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x67A4E8", Offset = "0x67A4E8", VA = "0x67A4E8")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x67A588", Offset = "0x67A588", VA = "0x67A588")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x67A628", Offset = "0x67A628", VA = "0x67A628")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x67A6C8", Offset = "0x67A6C8", VA = "0x67A6C8")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x67A768", Offset = "0x67A768", VA = "0x67A768")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x67A808", Offset = "0x67A808", VA = "0x67A808")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x67A8A8", Offset = "0x67A8A8", VA = "0x67A8A8")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x67A944", Offset = "0x67A944", VA = "0x67A944")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x67A9E4", Offset = "0x67A9E4", VA = "0x67A9E4")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x67AA80", Offset = "0x67AA80", VA = "0x67AA80")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x67AB20", Offset = "0x67AB20", VA = "0x67AB20")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x67ABC0", Offset = "0x67ABC0", VA = "0x67ABC0")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x67AC60", Offset = "0x67AC60", VA = "0x67AC60")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x67ACC8", Offset = "0x67ACC8", VA = "0x67ACC8")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x67AD68", Offset = "0x67AD68", VA = "0x67AD68")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x67ADD0", Offset = "0x67ADD0", VA = "0x67ADD0")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x67AE70", Offset = "0x67AE70", VA = "0x67AE70")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x67AF10", Offset = "0x67AF10", VA = "0x67AF10")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x67AF78", Offset = "0x67AF78", VA = "0x67AF78")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x67B018", Offset = "0x67B018", VA = "0x67B018")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x67B080", Offset = "0x67B080", VA = "0x67B080")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x67B120", Offset = "0x67B120", VA = "0x67B120")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x67B1D0", Offset = "0x67B1D0", VA = "0x67B1D0")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x67B270", Offset = "0x67B270", VA = "0x67B270")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x67B310", Offset = "0x67B310", VA = "0x67B310")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x67B3B0", Offset = "0x67B3B0", VA = "0x67B3B0")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x67B458", Offset = "0x67B458", VA = "0x67B458")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x67B4F8", Offset = "0x67B4F8", VA = "0x67B4F8")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x67B598", Offset = "0x67B598", VA = "0x67B598")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x67B600", Offset = "0x67B600", VA = "0x67B600")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x67B6A0", Offset = "0x67B6A0", VA = "0x67B6A0")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x67B708", Offset = "0x67B708", VA = "0x67B708")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x67B7A8", Offset = "0x67B7A8", VA = "0x67B7A8")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x67B810", Offset = "0x67B810", VA = "0x67B810")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x67B8B0", Offset = "0x67B8B0", VA = "0x67B8B0")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x67B918", Offset = "0x67B918", VA = "0x67B918")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x67B9B8", Offset = "0x67B9B8", VA = "0x67B9B8")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x67BA20", Offset = "0x67BA20", VA = "0x67BA20")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x67BAC0", Offset = "0x67BAC0", VA = "0x67BAC0")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x67BB28", Offset = "0x67BB28", VA = "0x67BB28")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x67BBC8", Offset = "0x67BBC8", VA = "0x67BBC8")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x67BC78", Offset = "0x67BC78", VA = "0x67BC78")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x67BCE0", Offset = "0x67BCE0", VA = "0x67BCE0")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x67BD80", Offset = "0x67BD80", VA = "0x67BD80")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x67BE20", Offset = "0x67BE20", VA = "0x67BE20")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x67BEC8", Offset = "0x67BEC8", VA = "0x67BEC8")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x67BF30", Offset = "0x67BF30", VA = "0x67BF30")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x67BFD0", Offset = "0x67BFD0", VA = "0x67BFD0")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x67C038", Offset = "0x67C038", VA = "0x67C038")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x67C0D8", Offset = "0x67C0D8", VA = "0x67C0D8")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x67C178", Offset = "0x67C178", VA = "0x67C178")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x67C1E0", Offset = "0x67C1E0", VA = "0x67C1E0")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x67C280", Offset = "0x67C280", VA = "0x67C280")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x67C330", Offset = "0x67C330", VA = "0x67C330")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x67C398", Offset = "0x67C398", VA = "0x67C398")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x67C438", Offset = "0x67C438", VA = "0x67C438")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x67C4D8", Offset = "0x67C4D8", VA = "0x67C4D8")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x67C580", Offset = "0x67C580", VA = "0x67C580")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x67C620", Offset = "0x67C620", VA = "0x67C620")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x67C6C0", Offset = "0x67C6C0", VA = "0x67C6C0")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x67C728", Offset = "0x67C728", VA = "0x67C728")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x67C7C8", Offset = "0x67C7C8", VA = "0x67C7C8")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x67C868", Offset = "0x67C868", VA = "0x67C868")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x67C908", Offset = "0x67C908", VA = "0x67C908")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x67C9B0", Offset = "0x67C9B0", VA = "0x67C9B0")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x67CA50", Offset = "0x67CA50", VA = "0x67CA50")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x67CAF0", Offset = "0x67CAF0", VA = "0x67CAF0")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x67CB90", Offset = "0x67CB90", VA = "0x67CB90")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x67CC30", Offset = "0x67CC30", VA = "0x67CC30")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x67CC98", Offset = "0x67CC98", VA = "0x67CC98")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x67CD38", Offset = "0x67CD38", VA = "0x67CD38")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x67CDD4", Offset = "0x67CDD4", VA = "0x67CDD4")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x67CE70", Offset = "0x67CE70", VA = "0x67CE70")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x67CF10", Offset = "0x67CF10", VA = "0x67CF10")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x67CFAC", Offset = "0x67CFAC", VA = "0x67CFAC")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x67D04C", Offset = "0x67D04C", VA = "0x67D04C")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x67D0FC", Offset = "0x67D0FC", VA = "0x67D0FC")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x67D164", Offset = "0x67D164", VA = "0x67D164")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x67D204", Offset = "0x67D204", VA = "0x67D204")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x67D2A4", Offset = "0x67D2A4", VA = "0x67D2A4")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x67D34C", Offset = "0x67D34C", VA = "0x67D34C")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x67D3EC", Offset = "0x67D3EC", VA = "0x67D3EC")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x67D48C", Offset = "0x67D48C", VA = "0x67D48C")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x67D52C", Offset = "0x67D52C", VA = "0x67D52C")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x67D594", Offset = "0x67D594", VA = "0x67D594")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x67D634", Offset = "0x67D634", VA = "0x67D634")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x67D6E4", Offset = "0x67D6E4", VA = "0x67D6E4")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x67D74C", Offset = "0x67D74C", VA = "0x67D74C")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x67D7EC", Offset = "0x67D7EC", VA = "0x67D7EC")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x67D88C", Offset = "0x67D88C", VA = "0x67D88C")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x67D934", Offset = "0x67D934", VA = "0x67D934")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x67D9D4", Offset = "0x67D9D4", VA = "0x67D9D4")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x67DA74", Offset = "0x67DA74", VA = "0x67DA74")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x67DB24", Offset = "0x67DB24", VA = "0x67DB24")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x67DBC4", Offset = "0x67DBC4", VA = "0x67DBC4")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x67DC64", Offset = "0x67DC64", VA = "0x67DC64")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x67DD0C", Offset = "0x67DD0C", VA = "0x67DD0C")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x67DDAC", Offset = "0x67DDAC", VA = "0x67DDAC")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x67DE4C", Offset = "0x67DE4C", VA = "0x67DE4C")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x67DEEC", Offset = "0x67DEEC", VA = "0x67DEEC")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x67DF8C", Offset = "0x67DF8C", VA = "0x67DF8C")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x67E02C", Offset = "0x67E02C", VA = "0x67E02C")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x67E0CC", Offset = "0x67E0CC", VA = "0x67E0CC")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x67E134", Offset = "0x67E134", VA = "0x67E134")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x67E1D4", Offset = "0x67E1D4", VA = "0x67E1D4")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x67E284", Offset = "0x67E284", VA = "0x67E284")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x67E324", Offset = "0x67E324", VA = "0x67E324")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x67E38C", Offset = "0x67E38C", VA = "0x67E38C")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x67E42C", Offset = "0x67E42C", VA = "0x67E42C")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x67E4CC", Offset = "0x67E4CC", VA = "0x67E4CC")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x67E56C", Offset = "0x67E56C", VA = "0x67E56C")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x67E5D4", Offset = "0x67E5D4", VA = "0x67E5D4")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x67E674", Offset = "0x67E674", VA = "0x67E674")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x67E714", Offset = "0x67E714", VA = "0x67E714")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x67E77C", Offset = "0x67E77C", VA = "0x67E77C")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x67E81C", Offset = "0x67E81C", VA = "0x67E81C")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x67E8BC", Offset = "0x67E8BC", VA = "0x67E8BC")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x67E95C", Offset = "0x67E95C", VA = "0x67E95C")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x67E9C4", Offset = "0x67E9C4", VA = "0x67E9C4")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x67EA64", Offset = "0x67EA64", VA = "0x67EA64")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x67EB04", Offset = "0x67EB04", VA = "0x67EB04")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x67EBA4", Offset = "0x67EBA4", VA = "0x67EBA4")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x67EC54", Offset = "0x67EC54", VA = "0x67EC54")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x67ECF4", Offset = "0x67ECF4", VA = "0x67ECF4")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x67ED94", Offset = "0x67ED94", VA = "0x67ED94")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x67EDFC", Offset = "0x67EDFC", VA = "0x67EDFC")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x67EE9C", Offset = "0x67EE9C", VA = "0x67EE9C")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x67EF04", Offset = "0x67EF04", VA = "0x67EF04")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x67EFA4", Offset = "0x67EFA4", VA = "0x67EFA4")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x67F00C", Offset = "0x67F00C", VA = "0x67F00C")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x67F0AC", Offset = "0x67F0AC", VA = "0x67F0AC")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x67F114", Offset = "0x67F114", VA = "0x67F114")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x67F1B4", Offset = "0x67F1B4", VA = "0x67F1B4")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x67F21C", Offset = "0x67F21C", VA = "0x67F21C")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x67F2BC", Offset = "0x67F2BC", VA = "0x67F2BC")]
		public static string ovr_User_GetPresenceDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x67F324", Offset = "0x67F324", VA = "0x67F324")]
		private static extern IntPtr ovr_User_GetPresenceDestinationApiName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x67F3C4", Offset = "0x67F3C4", VA = "0x67F3C4")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x67F464", Offset = "0x67F464", VA = "0x67F464")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x67F4CC", Offset = "0x67F4CC", VA = "0x67F4CC")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x67F56C", Offset = "0x67F56C", VA = "0x67F56C")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x67F60C", Offset = "0x67F60C", VA = "0x67F60C")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x67F6AC", Offset = "0x67F6AC", VA = "0x67F6AC")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x67F75C", Offset = "0x67F75C", VA = "0x67F75C")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x67F7C4", Offset = "0x67F7C4", VA = "0x67F7C4")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x67F864", Offset = "0x67F864", VA = "0x67F864")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x67F904", Offset = "0x67F904", VA = "0x67F904")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x67F9AC", Offset = "0x67F9AC", VA = "0x67F9AC")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x67FA5C", Offset = "0x67FA5C", VA = "0x67FA5C")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x67FAC4", Offset = "0x67FAC4", VA = "0x67FAC4")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x67FB64", Offset = "0x67FB64", VA = "0x67FB64")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x67FC04", Offset = "0x67FC04", VA = "0x67FC04")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x67FCAC", Offset = "0x67FCAC", VA = "0x67FCAC")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x67FD14", Offset = "0x67FD14", VA = "0x67FD14")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x67FDB4", Offset = "0x67FDB4", VA = "0x67FDB4")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x67FE5C", Offset = "0x67FE5C", VA = "0x67FE5C")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x67FEFC", Offset = "0x67FEFC", VA = "0x67FEFC")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x67FFBC", Offset = "0x67FFBC", VA = "0x67FFBC")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x68007C", Offset = "0x68007C", VA = "0x68007C")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x68013C", Offset = "0x68013C", VA = "0x68013C")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x6801FC", Offset = "0x6801FC", VA = "0x6801FC")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x65D160", Offset = "0x65D160", VA = "0x65D160")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x65D550", Offset = "0x65D550", VA = "0x65D550")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x65D268", Offset = "0x65D268", VA = "0x65D268")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x65D390", Offset = "0x65D390", VA = "0x65D390")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x65EDF8", Offset = "0x65EDF8", VA = "0x65EDF8")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x65F06C", Offset = "0x65F06C", VA = "0x65F06C")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x65EF00", Offset = "0x65EF00", VA = "0x65EF00")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x68029C", Offset = "0x68029C", VA = "0x68029C")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x68034C", Offset = "0x68034C", VA = "0x68034C")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x6803DC", Offset = "0x6803DC", VA = "0x6803DC")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x68047C", Offset = "0x68047C", VA = "0x68047C")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x680548", Offset = "0x680548", VA = "0x680548")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x680600", Offset = "0x680600", VA = "0x680600")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x6806A0", Offset = "0x6806A0", VA = "0x6806A0")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x680750", Offset = "0x680750", VA = "0x680750")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x680800", Offset = "0x680800", VA = "0x680800")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x6808B0", Offset = "0x6808B0", VA = "0x6808B0")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x680950", Offset = "0x680950", VA = "0x680950")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x680A04", Offset = "0x680A04", VA = "0x680A04")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x680ABC", Offset = "0x680ABC", VA = "0x680ABC")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x680B78", Offset = "0x680B78", VA = "0x680B78")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x680C38", Offset = "0x680C38", VA = "0x680C38")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x680D04", Offset = "0x680D04", VA = "0x680D04")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x680DBC", Offset = "0x680DBC", VA = "0x680DBC")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x680E5C", Offset = "0x680E5C", VA = "0x680E5C")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x680F0C", Offset = "0x680F0C", VA = "0x680F0C")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x680FB8", Offset = "0x680FB8", VA = "0x680FB8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x681068", Offset = "0x681068", VA = "0x681068")]
		public static extern IntPtr ovr_NetSyncOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x6810F8", Offset = "0x6810F8", VA = "0x6810F8")]
		public static extern void ovr_NetSyncOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x681198", Offset = "0x681198", VA = "0x681198")]
		public static void ovr_NetSyncOptions_SetVoipGroup(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x681244", Offset = "0x681244", VA = "0x681244")]
		private static extern void ovr_NetSyncOptions_SetVoipGroup_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x6812F4", Offset = "0x6812F4", VA = "0x6812F4")]
		public static extern void ovr_NetSyncOptions_SetVoipStreamDefault(IntPtr handle, NetSyncVoipStreamMode value);

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x6813A4", Offset = "0x6813A4", VA = "0x6813A4")]
		public static void ovr_NetSyncOptions_SetZoneId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x681450", Offset = "0x681450", VA = "0x681450")]
		private static extern void ovr_NetSyncOptions_SetZoneId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x681500", Offset = "0x681500", VA = "0x681500")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x681590", Offset = "0x681590", VA = "0x681590")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x681630", Offset = "0x681630", VA = "0x681630")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x6816DC", Offset = "0x6816DC", VA = "0x6816DC")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x68178C", Offset = "0x68178C", VA = "0x68178C")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x681858", Offset = "0x681858", VA = "0x681858")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x681910", Offset = "0x681910", VA = "0x681910")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x6819B0", Offset = "0x6819B0", VA = "0x6819B0")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x681A60", Offset = "0x681A60", VA = "0x681A60")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x681B0C", Offset = "0x681B0C", VA = "0x681B0C")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x681BBC", Offset = "0x681BBC", VA = "0x681BBC")]
		public static void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x681C38", Offset = "0x681C38", VA = "0x681C38")]
		private static extern void ovr_RichPresenceOptions_SetEndTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x681CE8", Offset = "0x681CE8", VA = "0x681CE8")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x681D98", Offset = "0x681D98", VA = "0x681D98")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x681E48", Offset = "0x681E48", VA = "0x681E48")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x681EF8", Offset = "0x681EF8", VA = "0x681EF8")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x681FA4", Offset = "0x681FA4", VA = "0x681FA4")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x682054", Offset = "0x682054", VA = "0x682054")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x682104", Offset = "0x682104", VA = "0x682104")]
		public static void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x682180", Offset = "0x682180", VA = "0x682180")]
		private static extern void ovr_RichPresenceOptions_SetStartTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x682230", Offset = "0x682230", VA = "0x682230")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x6822C0", Offset = "0x6822C0", VA = "0x6822C0")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x682360", Offset = "0x682360", VA = "0x682360")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x68242C", Offset = "0x68242C", VA = "0x68242C")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x6824E4", Offset = "0x6824E4", VA = "0x6824E4")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x682584", Offset = "0x682584", VA = "0x682584")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x682634", Offset = "0x682634", VA = "0x682634")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x6826E4", Offset = "0x6826E4", VA = "0x6826E4")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x682794", Offset = "0x682794", VA = "0x682794")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x682844", Offset = "0x682844", VA = "0x682844")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x6828F4", Offset = "0x6828F4", VA = "0x6828F4")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x6829A4", Offset = "0x6829A4", VA = "0x6829A4")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x682A34", Offset = "0x682A34", VA = "0x682A34")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x682AD4", Offset = "0x682AD4", VA = "0x682AD4")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x682B84", Offset = "0x682B84", VA = "0x682B84")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x682C34", Offset = "0x682C34", VA = "0x682C34")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x682CD4", Offset = "0x682CD4", VA = "0x682CD4")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x682D84", Offset = "0x682D84", VA = "0x682D84")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x682E14", Offset = "0x682E14", VA = "0x682E14")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x682EB4", Offset = "0x682EB4", VA = "0x682EB4")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x682F64", Offset = "0x682F64", VA = "0x682F64")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x683014", Offset = "0x683014", VA = "0x683014")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4000722")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFBA0", Offset = "0x4CFBA0")]
		Unknown,
		[Token(Token = "0x4000723")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFBD8", Offset = "0x4CFBD8")]
		InSync,
		[Token(Token = "0x4000724")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFC10", Offset = "0x4CFC10")]
		NeedsDownload,
		[Token(Token = "0x4000725")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFC48", Offset = "0x4CFC48")]
		RemoteDownloading,
		[Token(Token = "0x4000726")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFC80", Offset = "0x4CFC80")]
		NeedsUpload,
		[Token(Token = "0x4000727")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFCB8", Offset = "0x4CFCB8")]
		LocalUploading,
		[Token(Token = "0x4000728")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFCF0", Offset = "0x4CFCF0")]
		InConflict
	}
	[Token(Token = "0x200012E")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x400072A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFD28", Offset = "0x4CFD28")]
		Unknown,
		[Token(Token = "0x400072B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFD60", Offset = "0x4CFD60")]
		Ok,
		[Token(Token = "0x400072C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFD98", Offset = "0x4CFD98")]
		BetterVersionStored,
		[Token(Token = "0x400072D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFDD0", Offset = "0x4CFDD0")]
		ManualMergeRequired
	}
	[Token(Token = "0x200012F")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6000D6E")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6000D6F")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6000D70")]
		void Update();

		[Token(Token = "0x6000D71")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000130")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x400072F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFE08", Offset = "0x4CFE08")]
		String,
		[Token(Token = "0x4000730")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFE40", Offset = "0x4CFE40")]
		Int,
		[Token(Token = "0x4000731")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFE78", Offset = "0x4CFE78")]
		Double,
		[Token(Token = "0x4000732")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFEB0", Offset = "0x4CFEB0")]
		Unknown
	}
	[Token(Token = "0x2000131")]
	public enum LaunchType
	{
		[Token(Token = "0x4000734")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFEE8", Offset = "0x4CFEE8")]
		Unknown,
		[Token(Token = "0x4000735")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFF20", Offset = "0x4CFF20")]
		Normal,
		[Token(Token = "0x4000736")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFF58", Offset = "0x4CFF58")]
		Invite,
		[Token(Token = "0x4000737")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFF90", Offset = "0x4CFF90")]
		Coordinated,
		[Token(Token = "0x4000738")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4CFFC8", Offset = "0x4CFFC8")]
		Deeplink
	}
	[Token(Token = "0x2000132")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x400073A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0000", Offset = "0x4D0000")]
		None,
		[Token(Token = "0x400073B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0038", Offset = "0x4D0038")]
		Friends,
		[Token(Token = "0x400073C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0070", Offset = "0x4D0070")]
		Unknown
	}
	[Token(Token = "0x2000133")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x400073E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D00A8", Offset = "0x4D00A8")]
		Top,
		[Token(Token = "0x400073F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D00E0", Offset = "0x4D00E0")]
		CenteredOnViewer,
		[Token(Token = "0x4000740")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0118", Offset = "0x4D0118")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4000741")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0150", Offset = "0x4D0150")]
		Unknown
	}
	[Token(Token = "0x2000134")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4000743")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0188", Offset = "0x4D0188")]
		Unknown,
		[Token(Token = "0x4000744")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D01C0", Offset = "0x4D01C0")]
		Public,
		[Token(Token = "0x4000745")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D01F8", Offset = "0x4D01F8")]
		Friends,
		[Token(Token = "0x4000746")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0230", Offset = "0x4D0230")]
		OnlyMe
	}
	[Token(Token = "0x2000135")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4000748")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0268", Offset = "0x4D0268")]
		Success = 1,
		[Token(Token = "0x4000749")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D02A0", Offset = "0x4D02A0")]
		Unknown = 0,
		[Token(Token = "0x400074A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D02D8", Offset = "0x4D02D8")]
		NoPackageSet = -1,
		[Token(Token = "0x400074B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0310", Offset = "0x4D0310")]
		NoFbConnect = -2,
		[Token(Token = "0x400074C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0348", Offset = "0x4D0348")]
		NoSessionId = -3,
		[Token(Token = "0x400074D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0380", Offset = "0x4D0380")]
		MissingParameters = -4
	}
	[Token(Token = "0x2000136")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x400074F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D03B8", Offset = "0x4D03B8")]
		Required,
		[Token(Token = "0x4000750")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D03F0", Offset = "0x4D03F0")]
		High,
		[Token(Token = "0x4000751")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0428", Offset = "0x4D0428")]
		Medium,
		[Token(Token = "0x4000752")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0460", Offset = "0x4D0460")]
		Low,
		[Token(Token = "0x4000753")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0498", Offset = "0x4D0498")]
		Unknown
	}
	[Token(Token = "0x2000137")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x6F0310", Offset = "0x6F0310", VA = "0x6F0310")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x6F0388", Offset = "0x6F0388", VA = "0x6F0388")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x6F040C", Offset = "0x6F040C", VA = "0x6F040C")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x6F0478", Offset = "0x6F0478", VA = "0x6F0478")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x6F04F4", Offset = "0x6F04F4", VA = "0x6F04F4")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x6F0570", Offset = "0x6F0570", VA = "0x6F0570")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x6F05EC", Offset = "0x6F05EC", VA = "0x6F05EC")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x6F0658", Offset = "0x6F0658", VA = "0x6F0658")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x6F06DC", Offset = "0x6F06DC", VA = "0x6F06DC")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x6F0768", Offset = "0x6F0768", VA = "0x6F0768")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x6F07EC", Offset = "0x6F07EC", VA = "0x6F07EC")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x6F0858", Offset = "0x6F0858", VA = "0x6F0858")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x6F08D4", Offset = "0x6F08D4", VA = "0x6F08D4")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x6EF628", Offset = "0x6EF628", VA = "0x6EF628")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x6F0950", Offset = "0x6F0950", VA = "0x6F0950", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4000756")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D04D0", Offset = "0x4D04D0")]
		Unknown,
		[Token(Token = "0x4000757")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0508", Offset = "0x4D0508")]
		Trailing,
		[Token(Token = "0x4000758")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0540", Offset = "0x4D0540")]
		Swingy
	}
	[Token(Token = "0x2000139")]
	public enum MediaContentType
	{
		[Token(Token = "0x400075A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0578", Offset = "0x4D0578")]
		Unknown,
		[Token(Token = "0x400075B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D05B0", Offset = "0x4D05B0")]
		Photo
	}
	[Token(Token = "0x200013A")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20002E2")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000070")]
		public T Data
		{
			[Token(Token = "0x6000D82")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000D81")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000D83")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x200013B")]
	public class Message
	{
		[Token(Token = "0x20002E3")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20002E4")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4000DB1")]
			Unknown = 0u,
			[Token(Token = "0x4000DB2")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4000DB3")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4000DB4")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4000DB5")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4000DB6")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4000DB7")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4000DB8")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4000DB9")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4000DBA")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4000DBB")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4000DBC")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4000DBD")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4000DBE")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4000DBF")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4000DC0")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4000DC1")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4000DC2")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4000DC3")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4000DC4")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4000DC5")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4000DC6")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4000DC7")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4000DC8")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4000DC9")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4000DCA")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4000DCB")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4000DCC")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4000DCD")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4000DCE")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4000DCF")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4000DD0")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4000DD1")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4000DD2")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4000DD3")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4000DD4")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4000DD5")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4000DD6")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4000DD7")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4000DD8")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4000DD9")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4000DDA")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4000DDB")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4000DDC")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4000DDD")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4000DDE")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x4000DDF")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4000DE0")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4000DE1")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4000DE2")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4000DE3")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4000DE4")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4000DE5")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4000DE6")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4000DE7")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4000DE8")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4000DE9")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4000DEA")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4000DEB")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4000DEC")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4000DED")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4000DEE")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4000DEF")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4000DF0")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4000DF1")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4000DF2")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4000DF3")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4000DF4")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4000DF5")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4000DF6")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4000DF7")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4000DF8")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4000DF9")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4000DFA")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4000DFB")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4000DFC")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4000DFD")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4000DFE")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4000DFF")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4000E00")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4000E01")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x4000E02")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x4000E03")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4000E04")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4000E05")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4000E06")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4000E07")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4000E08")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4000E09")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4000E0A")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4000E0B")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4000E0C")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4000E0D")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4000E0E")]
			Room_Join = 382373641u,
			[Token(Token = "0x4000E0F")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4000E10")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4000E11")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4000E12")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4000E13")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4000E14")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4000E15")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4000E16")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4000E17")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4000E18")]
			User_Get = 1808768583u,
			[Token(Token = "0x4000E19")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4000E1A")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4000E1B")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4000E1C")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4000E1D")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4000E1E")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4000E1F")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4000E20")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4000E21")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4000E22")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4000E23")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4000E24")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4000E25")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4000E26")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4000E27")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4000E28")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4000E29")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4000E2A")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4000E2B")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4000E2C")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4000E2D")]
			Notification_NetSync_ConnectionStatusChanged = 120882378u,
			[Token(Token = "0x4000E2E")]
			Notification_NetSync_SessionsChanged = 947814198u,
			[Token(Token = "0x4000E2F")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4000E30")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4000E31")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4000E32")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4000E33")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4000E34")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4000E35")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4000E36")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4000E37")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4000E38")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4000E39")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4000E3A")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4000E3B")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4000E3C")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20002E5")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D05E8", Offset = "0x4D05E8")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000071")]
		public MessageType Type
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x6EB974", Offset = "0x6EB974", VA = "0x6EB974")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000072")]
		public bool IsError
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x6F0D7C", Offset = "0x6F0D7C", VA = "0x6F0D7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000073")]
		public ulong RequestID
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x6EB96C", Offset = "0x6EB96C", VA = "0x6EB96C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000074")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x6F41E4", Offset = "0x6F41E4", VA = "0x6F41E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D54E0", Offset = "0x4D54E0")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x6F4190", Offset = "0x6F4190", VA = "0x6F4190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D54D0", Offset = "0x4D54D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x6F0AFC", Offset = "0x6F0AFC", VA = "0x6F0AFC")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x6F0D74", Offset = "0x6F0D74", VA = "0x6F0D74", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x6F0D8C", Offset = "0x6F0D8C", VA = "0x6F0D8C", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x6F0D94", Offset = "0x6F0D94", VA = "0x6F0D94", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x6F0D9C", Offset = "0x6F0D9C", VA = "0x6F0D9C", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x6F0DA4", Offset = "0x6F0DA4", VA = "0x6F0DA4", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x6F0DAC", Offset = "0x6F0DAC", VA = "0x6F0DAC", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x6F0DB4", Offset = "0x6F0DB4", VA = "0x6F0DB4", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x6F0DBC", Offset = "0x6F0DBC", VA = "0x6F0DBC", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x6F0DC4", Offset = "0x6F0DC4", VA = "0x6F0DC4", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x6F0DCC", Offset = "0x6F0DCC", VA = "0x6F0DCC", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x6F0DD4", Offset = "0x6F0DD4", VA = "0x6F0DD4", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x6F0DDC", Offset = "0x6F0DDC", VA = "0x6F0DDC", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x6F0DE4", Offset = "0x6F0DE4", VA = "0x6F0DE4", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x6F0DEC", Offset = "0x6F0DEC", VA = "0x6F0DEC", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x6F0DF4", Offset = "0x6F0DF4", VA = "0x6F0DF4", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x6F0DFC", Offset = "0x6F0DFC", VA = "0x6F0DFC", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x6F0E04", Offset = "0x6F0E04", VA = "0x6F0E04", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x6F0E0C", Offset = "0x6F0E0C", VA = "0x6F0E0C", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x6F0E14", Offset = "0x6F0E14", VA = "0x6F0E14", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x6F0E1C", Offset = "0x6F0E1C", VA = "0x6F0E1C", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x6F0E24", Offset = "0x6F0E24", VA = "0x6F0E24", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x6F0E2C", Offset = "0x6F0E2C", VA = "0x6F0E2C", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x6F0E34", Offset = "0x6F0E34", VA = "0x6F0E34", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x6F0E3C", Offset = "0x6F0E3C", VA = "0x6F0E3C", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x6F0E44", Offset = "0x6F0E44", VA = "0x6F0E44", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x6F0E4C", Offset = "0x6F0E4C", VA = "0x6F0E4C", Slot = "28")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x6F0E54", Offset = "0x6F0E54", VA = "0x6F0E54", Slot = "29")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x6F0E5C", Offset = "0x6F0E5C", VA = "0x6F0E5C", Slot = "30")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x6F0E64", Offset = "0x6F0E64", VA = "0x6F0E64", Slot = "31")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x6F0E6C", Offset = "0x6F0E6C", VA = "0x6F0E6C", Slot = "32")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x6F0E74", Offset = "0x6F0E74", VA = "0x6F0E74", Slot = "33")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x6F0E7C", Offset = "0x6F0E7C", VA = "0x6F0E7C", Slot = "34")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x6F0E84", Offset = "0x6F0E84", VA = "0x6F0E84", Slot = "35")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x6F0E8C", Offset = "0x6F0E8C", VA = "0x6F0E8C", Slot = "36")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x6F0E94", Offset = "0x6F0E94", VA = "0x6F0E94", Slot = "37")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x6F0E9C", Offset = "0x6F0E9C", VA = "0x6F0E9C", Slot = "38")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x6F0EA4", Offset = "0x6F0EA4", VA = "0x6F0EA4", Slot = "39")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x6F0EAC", Offset = "0x6F0EAC", VA = "0x6F0EAC", Slot = "40")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x6F0EB4", Offset = "0x6F0EB4", VA = "0x6F0EB4", Slot = "41")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x6F0EBC", Offset = "0x6F0EBC", VA = "0x6F0EBC", Slot = "42")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x6F0EC4", Offset = "0x6F0EC4", VA = "0x6F0EC4", Slot = "43")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x6F0ECC", Offset = "0x6F0ECC", VA = "0x6F0ECC", Slot = "44")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x6F0ED4", Offset = "0x6F0ED4", VA = "0x6F0ED4", Slot = "45")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x6F0EDC", Offset = "0x6F0EDC", VA = "0x6F0EDC", Slot = "46")]
		public virtual NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x6F0EE4", Offset = "0x6F0EE4", VA = "0x6F0EE4", Slot = "47")]
		public virtual NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x6F0EEC", Offset = "0x6F0EEC", VA = "0x6F0EEC", Slot = "48")]
		public virtual NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x6F0EF4", Offset = "0x6F0EF4", VA = "0x6F0EF4", Slot = "49")]
		public virtual NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x6F0EFC", Offset = "0x6F0EFC", VA = "0x6F0EFC", Slot = "50")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x6F0F04", Offset = "0x6F0F04", VA = "0x6F0F04", Slot = "51")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x6F0F0C", Offset = "0x6F0F0C", VA = "0x6F0F0C", Slot = "52")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x6F0F14", Offset = "0x6F0F14", VA = "0x6F0F14", Slot = "53")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x6F0F1C", Offset = "0x6F0F1C", VA = "0x6F0F1C", Slot = "54")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x6F0F24", Offset = "0x6F0F24", VA = "0x6F0F24", Slot = "55")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x6F0F2C", Offset = "0x6F0F2C", VA = "0x6F0F2C", Slot = "56")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x6F0F34", Offset = "0x6F0F34", VA = "0x6F0F34", Slot = "57")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x6F0F3C", Offset = "0x6F0F3C", VA = "0x6F0F3C", Slot = "58")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x6F0F44", Offset = "0x6F0F44", VA = "0x6F0F44", Slot = "59")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x6F0F4C", Offset = "0x6F0F4C", VA = "0x6F0F4C", Slot = "60")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x6F0F54", Offset = "0x6F0F54", VA = "0x6F0F54", Slot = "61")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x6F0F5C", Offset = "0x6F0F5C", VA = "0x6F0F5C", Slot = "62")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x6F0F64", Offset = "0x6F0F64", VA = "0x6F0F64", Slot = "63")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x6F0F6C", Offset = "0x6F0F6C", VA = "0x6F0F6C", Slot = "64")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x6F0F74", Offset = "0x6F0F74", VA = "0x6F0F74", Slot = "65")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x6F0F7C", Offset = "0x6F0F7C", VA = "0x6F0F7C", Slot = "66")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x6F0F84", Offset = "0x6F0F84", VA = "0x6F0F84", Slot = "67")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x6F0F8C", Offset = "0x6F0F8C", VA = "0x6F0F8C", Slot = "68")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x6F0F94", Offset = "0x6F0F94", VA = "0x6F0F94", Slot = "69")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x6F0F9C", Offset = "0x6F0F9C", VA = "0x6F0F9C", Slot = "70")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x6F0FA4", Offset = "0x6F0FA4", VA = "0x6F0FA4", Slot = "71")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x6F0FAC", Offset = "0x6F0FAC", VA = "0x6F0FAC")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x6EB3C8", Offset = "0x6EB3C8", VA = "0x6EB3C8")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x200013C")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x6F47C4", Offset = "0x6F47C4", VA = "0x6F47C4")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x6F4824", Offset = "0x6F4824", VA = "0x6F4824", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x6F4874", Offset = "0x6F4874", VA = "0x6F4874", Slot = "72")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013D")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x6F2500", Offset = "0x6F2500", VA = "0x6F2500")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x6F4998", Offset = "0x6F4998", VA = "0x6F4998", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x6F49E8", Offset = "0x6F49E8", VA = "0x6F49E8", Slot = "72")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013E")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x6F2560", Offset = "0x6F2560", VA = "0x6F2560")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x6F4C8C", Offset = "0x6F4C8C", VA = "0x6F4C8C", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x6F4CDC", Offset = "0x6F4CDC", VA = "0x6F4CDC", Slot = "72")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200013F")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x6F25C0", Offset = "0x6F25C0", VA = "0x6F25C0")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x6F4F80", Offset = "0x6F4F80", VA = "0x6F4F80", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x6F4FD0", Offset = "0x6F4FD0", VA = "0x6F4FD0", Slot = "72")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000140")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x6F2620", Offset = "0x6F2620", VA = "0x6F2620")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x6F5108", Offset = "0x6F5108", VA = "0x6F5108", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x6F5158", Offset = "0x6F5158", VA = "0x6F5158", Slot = "72")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000141")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x6F2680", Offset = "0x6F2680", VA = "0x6F2680")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x6F52AC", Offset = "0x6F52AC", VA = "0x6F52AC", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x6F52FC", Offset = "0x6F52FC", VA = "0x6F52FC", Slot = "72")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000142")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x6F26E0", Offset = "0x6F26E0", VA = "0x6F26E0")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x6F54E4", Offset = "0x6F54E4", VA = "0x6F54E4", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x6F5534", Offset = "0x6F5534", VA = "0x6F5534", Slot = "72")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x6F2740", Offset = "0x6F2740", VA = "0x6F2740")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x6F57A8", Offset = "0x6F57A8", VA = "0x6F57A8", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x6F57F8", Offset = "0x6F57F8", VA = "0x6F57F8", Slot = "72")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000144")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x6F27A0", Offset = "0x6F27A0", VA = "0x6F27A0")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x6F5950", Offset = "0x6F5950", VA = "0x6F5950", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x6F59A0", Offset = "0x6F59A0", VA = "0x6F59A0", Slot = "72")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000145")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x6F2800", Offset = "0x6F2800", VA = "0x6F2800")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x6F5AF8", Offset = "0x6F5AF8", VA = "0x6F5AF8", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x6F5B48", Offset = "0x6F5B48", VA = "0x6F5B48", Slot = "72")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000146")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x6F2860", Offset = "0x6F2860", VA = "0x6F2860")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x6F5C7C", Offset = "0x6F5C7C", VA = "0x6F5C7C", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x6F5CCC", Offset = "0x6F5CCC", VA = "0x6F5CCC", Slot = "72")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000147")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x6F28C0", Offset = "0x6F28C0", VA = "0x6F28C0")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x6F5E34", Offset = "0x6F5E34", VA = "0x6F5E34", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x6F5E84", Offset = "0x6F5E84", VA = "0x6F5E84", Slot = "72")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000148")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x6F2920", Offset = "0x6F2920", VA = "0x6F2920")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x6F5FC8", Offset = "0x6F5FC8", VA = "0x6F5FC8", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x6F6018", Offset = "0x6F6018", VA = "0x6F6018", Slot = "72")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000149")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x6F613C", Offset = "0x6F613C", VA = "0x6F613C")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x6F619C", Offset = "0x6F619C", VA = "0x6F619C", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x6F61EC", Offset = "0x6F61EC", VA = "0x6F61EC", Slot = "72")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014A")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x6F2980", Offset = "0x6F2980", VA = "0x6F2980")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x6F6460", Offset = "0x6F6460", VA = "0x6F6460", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x6F64B0", Offset = "0x6F64B0", VA = "0x6F64B0", Slot = "72")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014B")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x6F29E0", Offset = "0x6F29E0", VA = "0x6F29E0")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x6F662C", Offset = "0x6F662C", VA = "0x6F662C", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x6F667C", Offset = "0x6F667C", VA = "0x6F667C", Slot = "72")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014C")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x6F2A40", Offset = "0x6F2A40", VA = "0x6F2A40")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x6F6AC4", Offset = "0x6F6AC4", VA = "0x6F6AC4", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x6F6B14", Offset = "0x6F6B14", VA = "0x6F6B14", Slot = "72")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014D")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x6F2AA0", Offset = "0x6F2AA0", VA = "0x6F2AA0")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x6F67D0", Offset = "0x6F67D0", VA = "0x6F67D0", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x6F6820", Offset = "0x6F6820", VA = "0x6F6820", Slot = "72")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014E")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x6F2B00", Offset = "0x6F2B00", VA = "0x6F2B00")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x6F6CA8", Offset = "0x6F6CA8", VA = "0x6F6CA8", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x6F6CF8", Offset = "0x6F6CF8", VA = "0x6F6CF8", Slot = "72")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200014F")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x6F2B60", Offset = "0x6F2B60", VA = "0x6F2B60")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x6F6E4C", Offset = "0x6F6E4C", VA = "0x6F6E4C", Slot = "28")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x6F6E9C", Offset = "0x6F6E9C", VA = "0x6F6E9C", Slot = "72")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x6F7374", Offset = "0x6F7374", VA = "0x6F7374")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x6F73D4", Offset = "0x6F73D4", VA = "0x6F73D4", Slot = "29")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x6F7424", Offset = "0x6F7424", VA = "0x6F7424", Slot = "72")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000151")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x6F7698", Offset = "0x6F7698", VA = "0x6F7698")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x6F76F8", Offset = "0x6F76F8", VA = "0x6F76F8", Slot = "30")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x6F7748", Offset = "0x6F7748", VA = "0x6F7748", Slot = "72")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000152")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x6F2BC0", Offset = "0x6F2BC0", VA = "0x6F2BC0")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x6F7884", Offset = "0x6F7884", VA = "0x6F7884", Slot = "31")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x6F78D4", Offset = "0x6F78D4", VA = "0x6F78D4", Slot = "72")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000153")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x6F7A10", Offset = "0x6F7A10", VA = "0x6F7A10")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x6F7A70", Offset = "0x6F7A70", VA = "0x6F7A70", Slot = "32")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x6F7AC0", Offset = "0x6F7AC0", VA = "0x6F7AC0", Slot = "72")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000154")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x6F7BF8", Offset = "0x6F7BF8", VA = "0x6F7BF8")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x6F7C58", Offset = "0x6F7C58", VA = "0x6F7C58", Slot = "33")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x6F7CA8", Offset = "0x6F7CA8", VA = "0x6F7CA8", Slot = "72")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000155")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x6F2C20", Offset = "0x6F2C20", VA = "0x6F2C20")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x6F7EAC", Offset = "0x6F7EAC", VA = "0x6F7EAC", Slot = "35")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x6F7EFC", Offset = "0x6F7EFC", VA = "0x6F7EFC", Slot = "72")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000156")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x6F81C0", Offset = "0x6F81C0", VA = "0x6F81C0")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x6F8220", Offset = "0x6F8220", VA = "0x6F8220", Slot = "36")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x6F8270", Offset = "0x6F8270", VA = "0x6F8270", Slot = "72")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x6F84E4", Offset = "0x6F84E4", VA = "0x6F84E4")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x6F8544", Offset = "0x6F8544", VA = "0x6F8544", Slot = "37")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x6F8594", Offset = "0x6F8594", VA = "0x6F8594", Slot = "72")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000158")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x6F86BC", Offset = "0x6F86BC", VA = "0x6F86BC")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x6F871C", Offset = "0x6F871C", VA = "0x6F871C", Slot = "38")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x6F876C", Offset = "0x6F876C", VA = "0x6F876C", Slot = "72")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x6F2CE0", Offset = "0x6F2CE0", VA = "0x6F2CE0")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x6F8890", Offset = "0x6F8890", VA = "0x6F8890", Slot = "39")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x6F88E0", Offset = "0x6F88E0", VA = "0x6F88E0", Slot = "72")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200015A")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x6F8A54", Offset = "0x6F8A54", VA = "0x6F8A54")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x6F8AB4", Offset = "0x6F8AB4", VA = "0x6F8AB4", Slot = "40")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x6F8B04", Offset = "0x6F8B04", VA = "0x6F8B04", Slot = "72")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200015B")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x6F2D40", Offset = "0x6F2D40", VA = "0x6F2D40")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x6F8C48", Offset = "0x6F8C48", VA = "0x6F8C48", Slot = "41")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x6F8C98", Offset = "0x6F8C98", VA = "0x6F8C98", Slot = "72")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200015C")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x6F2E00", Offset = "0x6F2E00", VA = "0x6F2E00")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x6F9034", Offset = "0x6F9034", VA = "0x6F9034", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x6F9084", Offset = "0x6F9084", VA = "0x6F9084", Slot = "72")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200015D")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x6F2E60", Offset = "0x6F2E60", VA = "0x6F2E60")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x6F926C", Offset = "0x6F926C", VA = "0x6F926C", Slot = "44")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x6F92BC", Offset = "0x6F92BC", VA = "0x6F92BC", Slot = "72")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200015E")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x6F2EC0", Offset = "0x6F2EC0", VA = "0x6F2EC0")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x6F9874", Offset = "0x6F9874", VA = "0x6F9874", Slot = "45")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x6F98C4", Offset = "0x6F98C4", VA = "0x6F98C4", Slot = "72")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200015F")]
	public class MessageWithNetSyncConnection : Message<NetSyncConnection>
	{
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x6F2F20", Offset = "0x6F2F20", VA = "0x6F2F20")]
		public MessageWithNetSyncConnection(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x6F9A38", Offset = "0x6F9A38", VA = "0x6F9A38", Slot = "46")]
		public override NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x6F9A88", Offset = "0x6F9A88", VA = "0x6F9A88", Slot = "72")]
		protected override NetSyncConnection GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000160")]
	public class MessageWithNetSyncSessionList : Message<NetSyncSessionList>
	{
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x6F9BEC", Offset = "0x6F9BEC", VA = "0x6F9BEC")]
		public MessageWithNetSyncSessionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x6F9C4C", Offset = "0x6F9C4C", VA = "0x6F9C4C", Slot = "47")]
		public override NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x6F9C9C", Offset = "0x6F9C9C", VA = "0x6F9C9C", Slot = "72")]
		protected override NetSyncSessionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000161")]
	public class MessageWithNetSyncSessionsChangedNotification : Message<NetSyncSessionsChangedNotification>
	{
		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x6F2F80", Offset = "0x6F2F80", VA = "0x6F2F80")]
		public MessageWithNetSyncSessionsChangedNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x6F9F10", Offset = "0x6F9F10", VA = "0x6F9F10", Slot = "48")]
		public override NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x6F9F60", Offset = "0x6F9F60", VA = "0x6F9F60", Slot = "72")]
		protected override NetSyncSessionsChangedNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000162")]
	public class MessageWithNetSyncSetSessionPropertyResult : Message<NetSyncSetSessionPropertyResult>
	{
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x6FA0B8", Offset = "0x6FA0B8", VA = "0x6FA0B8")]
		public MessageWithNetSyncSetSessionPropertyResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x6FA118", Offset = "0x6FA118", VA = "0x6FA118", Slot = "49")]
		public override NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x6FA168", Offset = "0x6FA168", VA = "0x6FA168", Slot = "72")]
		protected override NetSyncSetSessionPropertyResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000163")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x6F2FE0", Offset = "0x6F2FE0", VA = "0x6F2FE0")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x6FA3FC", Offset = "0x6FA3FC", VA = "0x6FA3FC", Slot = "50")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x6FA44C", Offset = "0x6FA44C", VA = "0x6FA44C", Slot = "72")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000164")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x6FA570", Offset = "0x6FA570", VA = "0x6FA570")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x6FA5D0", Offset = "0x6FA5D0", VA = "0x6FA5D0", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x6FA620", Offset = "0x6FA620", VA = "0x6FA620", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000165")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x6F3040", Offset = "0x6F3040", VA = "0x6F3040")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x6FAAB0", Offset = "0x6FAAB0", VA = "0x6FAAB0", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x6FAB00", Offset = "0x6FAB00", VA = "0x6FAB00", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000166")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x6FA8DC", Offset = "0x6FA8DC", VA = "0x6FA8DC")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x6FA93C", Offset = "0x6FA93C", VA = "0x6FA93C", Slot = "52")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x6FA98C", Offset = "0x6FA98C", VA = "0x6FA98C", Slot = "72")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000167")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x6F30A0", Offset = "0x6F30A0", VA = "0x6F30A0")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x6FAB9C", Offset = "0x6FAB9C", VA = "0x6FAB9C", Slot = "53")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x6FABEC", Offset = "0x6FABEC", VA = "0x6FABEC", Slot = "72")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000168")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x6F3100", Offset = "0x6F3100", VA = "0x6F3100")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x6FAD70", Offset = "0x6FAD70", VA = "0x6FAD70", Slot = "54")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x6FADC0", Offset = "0x6FADC0", VA = "0x6FADC0", Slot = "72")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000169")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x6F3160", Offset = "0x6F3160", VA = "0x6F3160")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x6FB354", Offset = "0x6FB354", VA = "0x6FB354", Slot = "55")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x6FB3A4", Offset = "0x6FB3A4", VA = "0x6FB3A4", Slot = "72")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200016A")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x6F31C0", Offset = "0x6F31C0", VA = "0x6F31C0")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x6FB648", Offset = "0x6FB648", VA = "0x6FB648", Slot = "56")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x6FB698", Offset = "0x6FB698", VA = "0x6FB698", Slot = "72")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200016B")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x6F3220", Offset = "0x6F3220", VA = "0x6F3220")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x6FB7EC", Offset = "0x6FB7EC", VA = "0x6FB7EC", Slot = "57")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x6FB83C", Offset = "0x6FB83C", VA = "0x6FB83C", Slot = "72")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200016C")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x6F3280", Offset = "0x6F3280", VA = "0x6F3280")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x6FBAE0", Offset = "0x6FBAE0", VA = "0x6FBAE0", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x6FBB30", Offset = "0x6FBB30", VA = "0x6FBB30", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200016D")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x6F32E0", Offset = "0x6F32E0", VA = "0x6F32E0")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x6FC358", Offset = "0x6FC358", VA = "0x6FC358", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x6FC3A8", Offset = "0x6FC3A8", VA = "0x6FC3A8", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200016E")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x6F3340", Offset = "0x6F3340", VA = "0x6F3340")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x6FC444", Offset = "0x6FC444", VA = "0x6FC444", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x6FC494", Offset = "0x6FC494", VA = "0x6FC494", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x6F33A0", Offset = "0x6F33A0", VA = "0x6F33A0")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x6FC064", Offset = "0x6FC064", VA = "0x6FC064", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x6FC0B4", Offset = "0x6FC0B4", VA = "0x6FC0B4", Slot = "72")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000170")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x6F3400", Offset = "0x6F3400", VA = "0x6F3400")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x6FBBCC", Offset = "0x6FBBCC", VA = "0x6FBBCC", Slot = "59")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x6FBC1C", Offset = "0x6FBC1C", VA = "0x6FBC1C", Slot = "72")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000171")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x6F3460", Offset = "0x6F3460", VA = "0x6F3460")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x6FBD70", Offset = "0x6FBD70", VA = "0x6FBD70", Slot = "60")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x6FBDC0", Offset = "0x6FBDC0", VA = "0x6FBDC0", Slot = "72")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000172")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x6F34C0", Offset = "0x6F34C0", VA = "0x6F34C0")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x6FC530", Offset = "0x6FC530", VA = "0x6FC530", Slot = "62")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x6FC580", Offset = "0x6FC580", VA = "0x6FC580", Slot = "72")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000173")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x6F3520", Offset = "0x6F3520", VA = "0x6F3520")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x6FC7F4", Offset = "0x6FC7F4", VA = "0x6FC7F4", Slot = "63")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x6FC844", Offset = "0x6FC844", VA = "0x6FC844", Slot = "72")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000174")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x6F3580", Offset = "0x6F3580", VA = "0x6F3580")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x6FC968", Offset = "0x6FC968", VA = "0x6FC968", Slot = "64")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x6FC9B8", Offset = "0x6FC9B8", VA = "0x6FC9B8", Slot = "72")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000175")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x6FCA20", Offset = "0x6FCA20", VA = "0x6FCA20")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x6FCA80", Offset = "0x6FCA80", VA = "0x6FCA80", Slot = "65")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x6FCAD0", Offset = "0x6FCAD0", VA = "0x6FCAD0", Slot = "72")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000176")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x6F35E0", Offset = "0x6F35E0", VA = "0x6F35E0")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x6FCC08", Offset = "0x6FCC08", VA = "0x6FCC08", Slot = "66")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x6FCC58", Offset = "0x6FCC58", VA = "0x6FCC58", Slot = "72")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000177")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x6F3640", Offset = "0x6F3640", VA = "0x6F3640")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x6FCD8C", Offset = "0x6FCD8C", VA = "0x6FCD8C", Slot = "67")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x6FCDDC", Offset = "0x6FCDDC", VA = "0x6FCDDC", Slot = "72")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000178")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x6F36A0", Offset = "0x6F36A0", VA = "0x6F36A0")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x6FCF80", Offset = "0x6FCF80", VA = "0x6FCF80", Slot = "68")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x6FCFD0", Offset = "0x6FCFD0", VA = "0x6FCFD0", Slot = "72")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000179")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x6F3700", Offset = "0x6F3700", VA = "0x6F3700")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x6FD274", Offset = "0x6FD274", VA = "0x6FD274", Slot = "69")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x6FD2C4", Offset = "0x6FD2C4", VA = "0x6FD2C4", Slot = "72")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200017A")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x6F3760", Offset = "0x6F3760", VA = "0x6F3760")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x6FD568", Offset = "0x6FD568", VA = "0x6FD568", Slot = "70")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x6FD5B8", Offset = "0x6FD5B8", VA = "0x6FD5B8", Slot = "72")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200017B")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x6FD6DC", Offset = "0x6FD6DC", VA = "0x6FD6DC")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x6FD73C", Offset = "0x6FD73C", VA = "0x6FD73C", Slot = "71")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x6FD78C", Offset = "0x6FD78C", VA = "0x6FD78C", Slot = "72")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x6F37C0", Offset = "0x6F37C0", VA = "0x6F37C0")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x6FA2B0", Offset = "0x6FA2B0", VA = "0x6FA2B0", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x6FA300", Offset = "0x6FA300", VA = "0x6FA300", Slot = "72")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200017D")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x6F3820", Offset = "0x6F3820", VA = "0x6F3820")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x6FB034", Offset = "0x6FB034", VA = "0x6FB034", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x6FB084", Offset = "0x6FB084", VA = "0x6FB084", Slot = "72")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200017E")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x6F2C80", Offset = "0x6F2C80", VA = "0x6F2C80")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x6F7DE4", Offset = "0x6F7DE4", VA = "0x6F7DE4", Slot = "34")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x6F7E34", Offset = "0x6F7E34", VA = "0x6F7E34", Slot = "72")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017F")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x6F3880", Offset = "0x6F3880", VA = "0x6F3880")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x6F9438", Offset = "0x6F9438", VA = "0x6F9438", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x6F9488", Offset = "0x6F9488", VA = "0x6F9488", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000180")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x6F2DA0", Offset = "0x6F2DA0", VA = "0x6F2DA0")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x6F8DF0", Offset = "0x6F8DF0", VA = "0x6F8DF0", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x6F8E54", Offset = "0x6F8E54", VA = "0x6F8E54", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x6F8EB8", Offset = "0x6F8EB8", VA = "0x6F8EB8", Slot = "72")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000181")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x6F38E0", Offset = "0x6F38E0", VA = "0x6F38E0")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x6F7140", Offset = "0x6F7140", VA = "0x6F7140", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x6F7190", Offset = "0x6F7190", VA = "0x6F7190", Slot = "72")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000182")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x6F3940", Offset = "0x6F3940", VA = "0x6F3940")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x6FB1E0", Offset = "0x6FB1E0", VA = "0x6FB1E0", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x6FB230", Offset = "0x6FB230", VA = "0x6FB230", Slot = "72")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000183")]
	public enum NetSyncConnectionStatus
	{
		[Token(Token = "0x4000762")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D05F8", Offset = "0x4D05F8")]
		Unknown,
		[Token(Token = "0x4000763")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0630", Offset = "0x4D0630")]
		Connecting,
		[Token(Token = "0x4000764")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0668", Offset = "0x4D0668")]
		Disconnected,
		[Token(Token = "0x4000765")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D06A0", Offset = "0x4D06A0")]
		Connected
	}
	[Token(Token = "0x2000184")]
	public enum NetSyncDisconnectReason
	{
		[Token(Token = "0x4000767")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D06D8", Offset = "0x4D06D8")]
		Unknown,
		[Token(Token = "0x4000768")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0710", Offset = "0x4D0710")]
		LocalTerminated,
		[Token(Token = "0x4000769")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0748", Offset = "0x4D0748")]
		ServerTerminated,
		[Token(Token = "0x400076A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0780", Offset = "0x4D0780")]
		Failed,
		[Token(Token = "0x400076B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D07B8", Offset = "0x4D07B8")]
		Lost
	}
	[Token(Token = "0x2000185")]
	public class NetSyncOptions
	{
		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x6FF6D4", Offset = "0x6FF6D4", VA = "0x6FF6D4")]
		public NetSyncOptions()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x6FF74C", Offset = "0x6FF74C", VA = "0x6FF74C")]
		public void SetVoipGroup(string value)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x6FF7C8", Offset = "0x6FF7C8", VA = "0x6FF7C8")]
		public void SetVoipStreamDefault(NetSyncVoipStreamMode value)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x6FF844", Offset = "0x6FF844", VA = "0x6FF844")]
		public void SetZoneId(string value)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x6FF8C0", Offset = "0x6FF8C0", VA = "0x6FF8C0")]
		public static explicit operator IntPtr(NetSyncOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x6FF910", Offset = "0x6FF910", VA = "0x6FF910", Slot = "1")]
		~NetSyncOptions()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public enum NetSyncVoipMicSource
	{
		[Token(Token = "0x400076E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D07F0", Offset = "0x4D07F0")]
		Unknown,
		[Token(Token = "0x400076F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0828", Offset = "0x4D0828")]
		None,
		[Token(Token = "0x4000770")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0860", Offset = "0x4D0860")]
		Internal
	}
	[Token(Token = "0x2000187")]
	public enum NetSyncVoipStreamMode
	{
		[Token(Token = "0x4000772")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0898", Offset = "0x4D0898")]
		Unknown,
		[Token(Token = "0x4000773")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D08D0", Offset = "0x4D08D0")]
		Ambisonic,
		[Token(Token = "0x4000774")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0908", Offset = "0x4D0908")]
		Mono
	}
	[Token(Token = "0x2000188")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000075")]
		public ulong SenderID
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x6FFE1C", Offset = "0x6FFE1C", VA = "0x6FFE1C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000076")]
		public ulong Size
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x6FFE88", Offset = "0x6FFE88", VA = "0x6FFE88")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000077")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x6FFE90", Offset = "0x6FFE90", VA = "0x6FFE90")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x6FED54", Offset = "0x6FED54", VA = "0x6FED54")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x6FFCBC", Offset = "0x6FFCBC", VA = "0x6FFCBC")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x6FFEFC", Offset = "0x6FFEFC", VA = "0x6FFEFC", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x6FFF70", Offset = "0x6FFF70", VA = "0x6FFF70", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000778")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0940", Offset = "0x4D0940")]
		Unknown,
		[Token(Token = "0x4000779")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0978", Offset = "0x4D0978")]
		Join,
		[Token(Token = "0x400077A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D09B0", Offset = "0x4D09B0")]
		Leave,
		[Token(Token = "0x400077B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D09E8", Offset = "0x4D09E8")]
		Invite,
		[Token(Token = "0x400077C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0A20", Offset = "0x4D0A20")]
		Uninvite
	}
	[Token(Token = "0x200018A")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x400077E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0A58", Offset = "0x4D0A58")]
		Unknown,
		[Token(Token = "0x400077F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0A90", Offset = "0x4D0A90")]
		Connected,
		[Token(Token = "0x4000780")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0AC8", Offset = "0x4D0AC8")]
		Timeout,
		[Token(Token = "0x4000781")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0B00", Offset = "0x4D0B00")]
		Closed
	}
	[Token(Token = "0x200018B")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000783")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0B38", Offset = "0x4D0B38")]
		Unknown,
		[Token(Token = "0x4000784")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0B70", Offset = "0x4D0B70")]
		Granted,
		[Token(Token = "0x4000785")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0BA8", Offset = "0x4D0BA8")]
		Denied,
		[Token(Token = "0x4000786")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0BE0", Offset = "0x4D0BE0")]
		Blocked
	}
	[Token(Token = "0x200018C")]
	public enum PermissionType
	{
		[Token(Token = "0x4000788")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0C18", Offset = "0x4D0C18")]
		Unknown,
		[Token(Token = "0x4000789")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0C50", Offset = "0x4D0C50")]
		Microphone,
		[Token(Token = "0x400078A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0C88", Offset = "0x4D0C88")]
		WriteExternalStorage
	}
	[Token(Token = "0x200018D")]
	public sealed class Core
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x6EC508", Offset = "0x6EC508", VA = "0x6EC508")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x6ECEB4", Offset = "0x6ECEB4", VA = "0x6ECEB4")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x6ECF20", Offset = "0x6ECF20", VA = "0x6ECF20")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x6ED110", Offset = "0x6ED110", VA = "0x6ED110")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x6ED658", Offset = "0x6ED658", VA = "0x6ED658")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x6ED0E8", Offset = "0x6ED0E8", VA = "0x6ED0E8")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x6EDAB4", Offset = "0x6EDAB4", VA = "0x6EDAB4")]
		public Core()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x65EBF0", Offset = "0x65EBF0", VA = "0x65EBF0")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x65ED0C", Offset = "0x65ED0C", VA = "0x65ED0C")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200018F")]
	public static class Rooms
	{
		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x701AF0", Offset = "0x701AF0", VA = "0x701AF0")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x701D7C", Offset = "0x701D7C", VA = "0x701D7C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D54F0", Offset = "0x4D54F0")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x701DF8", Offset = "0x701DF8", VA = "0x701DF8")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x701EE0", Offset = "0x701EE0", VA = "0x701EE0")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x701FF4", Offset = "0x701FF4", VA = "0x701FF4")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x7020C4", Offset = "0x7020C4", VA = "0x7020C4")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x70218C", Offset = "0x70218C", VA = "0x70218C")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x70225C", Offset = "0x70225C", VA = "0x70225C")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x702324", Offset = "0x702324", VA = "0x702324")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x702420", Offset = "0x702420", VA = "0x702420")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x7024E8", Offset = "0x7024E8", VA = "0x7024E8")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x7025C8", Offset = "0x7025C8", VA = "0x7025C8")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x7026A8", Offset = "0x7026A8", VA = "0x7026A8")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x7027B4", Offset = "0x7027B4", VA = "0x7027B4")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x70289C", Offset = "0x70289C", VA = "0x70289C")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x702964", Offset = "0x702964", VA = "0x702964")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x702A34", Offset = "0x702A34", VA = "0x702A34")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x702B14", Offset = "0x702B14", VA = "0x702B14")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x702BF4", Offset = "0x702BF4", VA = "0x702BF4")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x702CCC", Offset = "0x702CCC", VA = "0x702CCC")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x701D80", Offset = "0x701D80", VA = "0x701D80")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x702DAC", Offset = "0x702DAC", VA = "0x702DAC")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x702E24", Offset = "0x702E24", VA = "0x702E24")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x702E9C", Offset = "0x702E9C", VA = "0x702E9C")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000190")]
	public static class Matchmaking
	{
		[Token(Token = "0x20002E6")]
		public class CustomQuery
		{
			[Token(Token = "0x20002FC")]
			public struct Criterion
			{
				[Token(Token = "0x4000EA1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4000EA2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4000EA3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x60012DC")]
				[Address(RVA = "0x52DA98", Offset = "0x52DA98", VA = "0x52DA98")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x6EF074", Offset = "0x6EF074", VA = "0x6EF074")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x6F02F8", Offset = "0x6F02F8", VA = "0x6F02F8")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x6EEC0C", Offset = "0x6EEC0C", VA = "0x6EEC0C")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x6EEE9C", Offset = "0x6EEE9C", VA = "0x6EEE9C")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x6EEF84", Offset = "0x6EEF84", VA = "0x6EEF84")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x6EF51C", Offset = "0x6EF51C", VA = "0x6EF51C")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x6EF678", Offset = "0x6EF678", VA = "0x6EF678")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x6EF750", Offset = "0x6EF750", VA = "0x6EF750")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x6EF810", Offset = "0x6EF810", VA = "0x6EF810")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x6EF918", Offset = "0x6EF918", VA = "0x6EF918")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x6EFA24", Offset = "0x6EFA24", VA = "0x6EFA24")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x6EFB0C", Offset = "0x6EFB0C", VA = "0x6EFB0C")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x6EFC18", Offset = "0x6EFC18", VA = "0x6EFC18")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x6EFD08", Offset = "0x6EFD08", VA = "0x6EFD08")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x6EFE14", Offset = "0x6EFE14", VA = "0x6EFE14")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x6EFF04", Offset = "0x6EFF04", VA = "0x6EFF04")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x6F0010", Offset = "0x6F0010", VA = "0x6F0010")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x6F00D8", Offset = "0x6F00D8", VA = "0x6F00D8")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x6F01B8", Offset = "0x6F01B8", VA = "0x6F01B8")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x6F0280", Offset = "0x6F0280", VA = "0x6F0280")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000191")]
	public static class Net
	{
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x6FEC88", Offset = "0x6FEC88", VA = "0x6FEC88")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x6FEE14", Offset = "0x6FEE14", VA = "0x6FEE14")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x6FEF14", Offset = "0x6FEF14", VA = "0x6FEF14")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x6FEFB0", Offset = "0x6FEFB0", VA = "0x6FEFB0")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x6FF04C", Offset = "0x6FF04C", VA = "0x6FF04C")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x6FF0E8", Offset = "0x6FF0E8", VA = "0x6FF0E8")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x6FF188", Offset = "0x6FF188", VA = "0x6FF188")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x6FF280", Offset = "0x6FF280", VA = "0x6FF280")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x6FF318", Offset = "0x6FF318", VA = "0x6FF318")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x6FF3AC", Offset = "0x6FF3AC", VA = "0x6FF3AC")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x6FF47C", Offset = "0x6FF47C", VA = "0x6FF47C")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x6FF4F4", Offset = "0x6FF4F4", VA = "0x6FF4F4")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x6FF56C", Offset = "0x6FF56C", VA = "0x6FF56C")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000192")]
	public static class Leaderboards
	{
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x6EE450", Offset = "0x6EE450", VA = "0x6EE450")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x6EE550", Offset = "0x6EE550", VA = "0x6EE550")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x6EE650", Offset = "0x6EE650", VA = "0x6EE650")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x6EE748", Offset = "0x6EE748", VA = "0x6EE748")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x6EE830", Offset = "0x6EE830", VA = "0x6EE830")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000193")]
	public static class Voip
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x7043D8", Offset = "0x7043D8", VA = "0x7043D8")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x704474", Offset = "0x704474", VA = "0x704474")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x704510", Offset = "0x704510", VA = "0x704510")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x7045AC", Offset = "0x7045AC", VA = "0x7045AC")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x704680", Offset = "0x704680", VA = "0x704680")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x70471C", Offset = "0x70471C", VA = "0x70471C")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x7047B4", Offset = "0x7047B4", VA = "0x7047B4")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x70484C", Offset = "0x70484C", VA = "0x70484C")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x7048EC", Offset = "0x7048EC", VA = "0x7048EC")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x70498C", Offset = "0x70498C", VA = "0x70498C")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x704A2C", Offset = "0x704A2C", VA = "0x704A2C")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x704B44", Offset = "0x704B44", VA = "0x704B44")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x704C14", Offset = "0x704C14", VA = "0x704C14")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x704C8C", Offset = "0x704C8C", VA = "0x704C8C")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x704D04", Offset = "0x704D04", VA = "0x704D04")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000194")]
	public static class Achievements
	{
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x65D5F0", Offset = "0x65D5F0", VA = "0x65D5F0")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x65D784", Offset = "0x65D784", VA = "0x65D784")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x65D934", Offset = "0x65D934", VA = "0x65D934")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x65DA88", Offset = "0x65DA88", VA = "0x65DA88")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x65DBDC", Offset = "0x65DBDC", VA = "0x65DBDC")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x65DE2C", Offset = "0x65DE2C", VA = "0x65DE2C")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x65E07C", Offset = "0x65E07C", VA = "0x65E07C")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x65E1F0", Offset = "0x65E1F0", VA = "0x65E1F0")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x65E414", Offset = "0x65E414", VA = "0x65E414")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000195")]
	public static class Application
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x65E894", Offset = "0x65E894", VA = "0x65E894")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x65E9E8", Offset = "0x65E9E8", VA = "0x65E9E8")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000196")]
	public static class AssetFile
	{
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x65F10C", Offset = "0x65F10C", VA = "0x65F10C")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x65F278", Offset = "0x65F278", VA = "0x65F278")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x65F3E4", Offset = "0x65F3E4", VA = "0x65F3E4")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x65F558", Offset = "0x65F558", VA = "0x65F558")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x65F6C4", Offset = "0x65F6C4", VA = "0x65F6C4")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x65F830", Offset = "0x65F830", VA = "0x65F830")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x65F9A4", Offset = "0x65F9A4", VA = "0x65F9A4")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x65FB10", Offset = "0x65FB10", VA = "0x65FB10")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x65FC7C", Offset = "0x65FC7C", VA = "0x65FC7C")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x65FDF0", Offset = "0x65FDF0", VA = "0x65FDF0")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x65FF44", Offset = "0x65FF44", VA = "0x65FF44")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x6600B0", Offset = "0x6600B0", VA = "0x6600B0")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x66021C", Offset = "0x66021C", VA = "0x66021C")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x660390", Offset = "0x660390", VA = "0x660390")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000197")]
	public static class Avatar
	{
	}
	[Token(Token = "0x2000198")]
	public static class Cal
	{
	}
	[Token(Token = "0x2000199")]
	public static class CloudStorage
	{
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x6EC428", Offset = "0x6EC428", VA = "0x6EC428")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x6EC570", Offset = "0x6EC570", VA = "0x6EC570")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x6EC650", Offset = "0x6EC650", VA = "0x6EC650")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x6EC720", Offset = "0x6EC720", VA = "0x6EC720")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x6EC800", Offset = "0x6EC800", VA = "0x6EC800")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x6EC8D0", Offset = "0x6EC8D0", VA = "0x6EC8D0")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x6EC9B0", Offset = "0x6EC9B0", VA = "0x6EC9B0")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x6ECA98", Offset = "0x6ECA98", VA = "0x6ECA98")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x6ECB80", Offset = "0x6ECB80", VA = "0x6ECB80")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x6ECC94", Offset = "0x6ECC94", VA = "0x6ECC94")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200019A")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x6ECDEC", Offset = "0x6ECDEC", VA = "0x6ECDEC")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x200019B")]
	public static class Colocation
	{
	}
	[Token(Token = "0x200019C")]
	public static class Entitlements
	{
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x6EDAC0", Offset = "0x6EDAC0", VA = "0x6EDAC0")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x200019D")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x200019E")]
	public static class HTTP
	{
	}
	[Token(Token = "0x200019F")]
	public static class IAP
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x6EDBAC", Offset = "0x6EDBAC", VA = "0x6EDBAC")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x6EDC74", Offset = "0x6EDC74", VA = "0x6EDC74")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x6EDD58", Offset = "0x6EDD58", VA = "0x6EDD58")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x6EDE20", Offset = "0x6EDE20", VA = "0x6EDE20")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x6EDEE8", Offset = "0x6EDEE8", VA = "0x6EDEE8")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x6EE008", Offset = "0x6EE008", VA = "0x6EE008")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x6EE160", Offset = "0x6EE160", VA = "0x6EE160")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A0")]
	public static class LanguagePack
	{
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x6EE2B8", Offset = "0x6EE2B8", VA = "0x6EE2B8")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x6EE380", Offset = "0x6EE380", VA = "0x6EE380")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A1")]
	public static class Livestreaming
	{
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x6EE93C", Offset = "0x6EE93C", VA = "0x6EE93C")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x6EEA04", Offset = "0x6EEA04", VA = "0x6EEA04")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x6EEACC", Offset = "0x6EEACC", VA = "0x6EEACC")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x6EEB94", Offset = "0x6EEB94", VA = "0x6EEB94")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public static class Media
	{
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x6F0A14", Offset = "0x6F0A14", VA = "0x6F0A14")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A3")]
	public static class NetSync
	{
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x6FF5E4", Offset = "0x6FF5E4", VA = "0x6FF5E4")]
		public static void SetConnectionStatusChangedNotificationCallback(Message<NetSyncConnection>.Callback callback)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x6FF65C", Offset = "0x6FF65C", VA = "0x6FF65C")]
		public static void SetSessionsChangedNotificationCallback(Message<NetSyncSessionsChangedNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public static class Notifications
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x6FF9D4", Offset = "0x6FF9D4", VA = "0x6FF9D4")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x6FFA9C", Offset = "0x6FFA9C", VA = "0x6FFA9C")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x6FFB64", Offset = "0x6FFB64", VA = "0x6FFB64")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A5")]
	public static class Parties
	{
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x700008", Offset = "0x700008", VA = "0x700008")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x7000D0", Offset = "0x7000D0", VA = "0x7000D0")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public static class RichPresence
	{
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x700A64", Offset = "0x700A64", VA = "0x700A64")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x700B24", Offset = "0x700B24", VA = "0x700B24")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x700BEC", Offset = "0x700BEC", VA = "0x700BEC")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x700D30", Offset = "0x700D30", VA = "0x700D30")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A7")]
	public static class Users
	{
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x703844", Offset = "0x703844", VA = "0x703844")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x703914", Offset = "0x703914", VA = "0x703914")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x7039DC", Offset = "0x7039DC", VA = "0x7039DC")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x703AA4", Offset = "0x703AA4", VA = "0x703AA4")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x703B6C", Offset = "0x703B6C", VA = "0x703B6C")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x703C34", Offset = "0x703C34", VA = "0x703C34")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x703D30", Offset = "0x703D30", VA = "0x703D30")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x703E00", Offset = "0x703E00", VA = "0x703E00")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x703EC8", Offset = "0x703EC8", VA = "0x703EC8")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x703F90", Offset = "0x703F90", VA = "0x703F90")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x704060", Offset = "0x704060", VA = "0x704060")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x704128", Offset = "0x704128", VA = "0x704128")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x704280", Offset = "0x704280", VA = "0x704280")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A8")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x400078E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0CC0", Offset = "0x4D0CC0")]
		Success = 0,
		[Token(Token = "0x400078F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0CF8", Offset = "0x4D0CF8")]
		Uninitialized = -1,
		[Token(Token = "0x4000790")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0D30", Offset = "0x4D0D30")]
		PreLoaded = -2,
		[Token(Token = "0x4000791")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0D68", Offset = "0x4D0D68")]
		FileInvalid = -3,
		[Token(Token = "0x4000792")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0DA0", Offset = "0x4D0DA0")]
		SignatureInvalid = -4,
		[Token(Token = "0x4000793")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0DD8", Offset = "0x4D0DD8")]
		UnableToVerify = -5,
		[Token(Token = "0x4000794")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0E10", Offset = "0x4D0E10")]
		VersionMismatch = -6,
		[Token(Token = "0x4000795")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0E48", Offset = "0x4D0E48")]
		Unknown = -7,
		[Token(Token = "0x4000796")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0E80", Offset = "0x4D0E80")]
		InvalidCredentials = -8,
		[Token(Token = "0x4000797")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0EB8", Offset = "0x4D0EB8")]
		NotEntitled = -9
	}
	[Token(Token = "0x20001A9")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20002E7")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4000E40")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4000E41")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4000E42")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4000E43")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4000E44")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4000E45")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4000E46")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x4000E47")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x4000E48")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x4000E49")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4000E4A")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4000E4B")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4000E4C")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4000E4D")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4000E4E")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4000E4F")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4000E50")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4000E51")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4000E52")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4000E53")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4000E54")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4000E55")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4000E56")]
			NetSync_Connect = 1684899167u,
			[Token(Token = "0x4000E57")]
			NetSync_Disconnect = 359268021u,
			[Token(Token = "0x4000E58")]
			NetSync_GetSessions = 1859521077u,
			[Token(Token = "0x4000E59")]
			NetSync_SetVoipGroup = 1477614734u,
			[Token(Token = "0x4000E5A")]
			NetSync_SetVoipMicSource = 855832432u,
			[Token(Token = "0x4000E5B")]
			NetSync_SetVoipSessionMuted = 1434844938u,
			[Token(Token = "0x4000E5C")]
			NetSync_SetVoipStreamMode = 1742839095u,
			[Token(Token = "0x4000E5D")]
			Party_Create = 450042703u,
			[Token(Token = "0x4000E5E")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4000E5F")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4000E60")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4000E61")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4000E62")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4000E63")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4000E64")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4000E65")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4000E66")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4000E67")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4000E68")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4000E69")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4000E6A")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4000E6B")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4000E6C")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4000E6D")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4000E6E")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4000E6F")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4000E70")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4000E71")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4000E72")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4000E73")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4000E74")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4000E75")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20002E8")]
		public static class HTTP
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x7003A8", Offset = "0x7003A8", VA = "0x7003A8")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x20002E9")]
		public static class Users
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x700420", Offset = "0x700420", VA = "0x700420")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x700148", Offset = "0x700148", VA = "0x700148")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x6F39A0", Offset = "0x6F39A0", VA = "0x6F39A0")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x7001A8", Offset = "0x7001A8", VA = "0x7001A8")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AA")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000078")]
		public static string AppID
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x6EDA88", Offset = "0x6EDA88", VA = "0x6EDA88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x7007FC", Offset = "0x7007FC", VA = "0x7007FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public static string MobileAppID
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x6EDA5C", Offset = "0x6EDA5C", VA = "0x6EDA5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x70082C", Offset = "0x70082C", VA = "0x70082C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x6ED3C0", Offset = "0x6ED3C0", VA = "0x6ED3C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x70085C", Offset = "0x70085C", VA = "0x70085C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x7006E8", Offset = "0x7006E8", VA = "0x7006E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x700890", Offset = "0x700890", VA = "0x700890")]
			set
			{
			}
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x7008E4", Offset = "0x7008E4", VA = "0x7008E4")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x6000F60")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000F61")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000F62")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class Request
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D0F20", Offset = "0x4D0F20")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700007C")]
		public ulong RequestID
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x6EB344", Offset = "0x6EB344", VA = "0x6EB344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5528", Offset = "0x4D5528")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x700944", Offset = "0x700944", VA = "0x700944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5538", Offset = "0x4D5538")]
			set
			{
			}
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x6EDB80", Offset = "0x6EDB80", VA = "0x6EDB80")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x70094C", Offset = "0x70094C", VA = "0x70094C")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x7009C8", Offset = "0x7009C8", VA = "0x7009C8", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x6EC334", Offset = "0x6EC334", VA = "0x6EC334")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x40007A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0F30", Offset = "0x4D0F30")]
		Unknown,
		[Token(Token = "0x40007A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0F68", Offset = "0x4D0F68")]
		None,
		[Token(Token = "0x40007A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0FA0", Offset = "0x4D0FA0")]
		CurrentCapacity,
		[Token(Token = "0x40007A3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D0FD8", Offset = "0x4D0FD8")]
		StartedAgo,
		[Token(Token = "0x40007A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1010", Offset = "0x4D1010")]
		EndingIn,
		[Token(Token = "0x40007A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1048", Offset = "0x4D1048")]
		LookingForAMatch
	}
	[Token(Token = "0x20001AE")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x700E88", Offset = "0x700E88", VA = "0x700E88")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x700F00", Offset = "0x700F00", VA = "0x700F00")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x700F7C", Offset = "0x700F7C", VA = "0x700F7C")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x701000", Offset = "0x701000", VA = "0x701000")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x70106C", Offset = "0x70106C", VA = "0x70106C")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x7010E8", Offset = "0x7010E8", VA = "0x7010E8")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x701164", Offset = "0x701164", VA = "0x701164")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x7011E0", Offset = "0x7011E0", VA = "0x7011E0")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x70125C", Offset = "0x70125C", VA = "0x70125C")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x7012D8", Offset = "0x7012D8", VA = "0x7012D8")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x701354", Offset = "0x701354", VA = "0x701354")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x7013D0", Offset = "0x7013D0", VA = "0x7013D0")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x70144C", Offset = "0x70144C", VA = "0x70144C")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x700CE0", Offset = "0x700CE0", VA = "0x700CE0")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x7014C8", Offset = "0x7014C8", VA = "0x7014C8", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public enum RoomJoinability
	{
		[Token(Token = "0x40007A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1080", Offset = "0x4D1080")]
		Unknown,
		[Token(Token = "0x40007A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D10B8", Offset = "0x4D10B8")]
		AreIn,
		[Token(Token = "0x40007AA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D10F0", Offset = "0x4D10F0")]
		AreKicked,
		[Token(Token = "0x40007AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1128", Offset = "0x4D1128")]
		CanJoin,
		[Token(Token = "0x40007AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1160", Offset = "0x4D1160")]
		IsFull,
		[Token(Token = "0x40007AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1198", Offset = "0x4D1198")]
		NoViewer,
		[Token(Token = "0x40007AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D11D0", Offset = "0x4D11D0")]
		PolicyPrevents
	}
	[Token(Token = "0x20001B0")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x40007B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1208", Offset = "0x4D1208")]
		None,
		[Token(Token = "0x40007B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1240", Offset = "0x4D1240")]
		Everyone,
		[Token(Token = "0x40007B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1278", Offset = "0x4D1278")]
		FriendsOfMembers,
		[Token(Token = "0x40007B3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D12B0", Offset = "0x4D12B0")]
		FriendsOfOwner,
		[Token(Token = "0x40007B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D12E8", Offset = "0x4D12E8")]
		InvitedUsers,
		[Token(Token = "0x40007B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1320", Offset = "0x4D1320")]
		Unknown
	}
	[Token(Token = "0x20001B1")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x40007B7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1358", Offset = "0x4D1358")]
		Unknown,
		[Token(Token = "0x40007B8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1390", Offset = "0x4D1390")]
		Lock,
		[Token(Token = "0x40007B9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D13C8", Offset = "0x4D13C8")]
		Unlock
	}
	[Token(Token = "0x20001B2")]
	public class RoomOptions
	{
		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x70158C", Offset = "0x70158C", VA = "0x70158C")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x701604", Offset = "0x701604", VA = "0x701604")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x701688", Offset = "0x701688", VA = "0x701688")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x7016F4", Offset = "0x7016F4", VA = "0x7016F4")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x701770", Offset = "0x701770", VA = "0x701770")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x7017EC", Offset = "0x7017EC", VA = "0x7017EC")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x701868", Offset = "0x701868", VA = "0x701868")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x7018E4", Offset = "0x7018E4", VA = "0x7018E4")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x701960", Offset = "0x701960", VA = "0x701960")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x7019DC", Offset = "0x7019DC", VA = "0x7019DC")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x701A2C", Offset = "0x701A2C", VA = "0x701A2C", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public enum RoomType
	{
		[Token(Token = "0x40007BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1400", Offset = "0x4D1400")]
		Unknown,
		[Token(Token = "0x40007BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1438", Offset = "0x4D1438")]
		Matchmaking,
		[Token(Token = "0x40007BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1470", Offset = "0x4D1470")]
		Moderated,
		[Token(Token = "0x40007BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D14A8", Offset = "0x4D14A8")]
		Private,
		[Token(Token = "0x40007C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D14E0", Offset = "0x4D14E0")]
		Solo
	}
	[Token(Token = "0x20001B4")]
	public enum SdkAccountType
	{
		[Token(Token = "0x40007C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1518", Offset = "0x4D1518")]
		Unknown,
		[Token(Token = "0x40007C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1550", Offset = "0x4D1550")]
		Oculus,
		[Token(Token = "0x40007C4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1588", Offset = "0x4D1588")]
		FacebookGameroom
	}
	[Token(Token = "0x20001B5")]
	public enum SendPolicy
	{
		[Token(Token = "0x40007C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D15C0", Offset = "0x4D15C0")]
		Unreliable,
		[Token(Token = "0x40007C7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D15F8", Offset = "0x4D15F8")]
		Reliable,
		[Token(Token = "0x40007C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1630", Offset = "0x4D1630")]
		Unknown
	}
	[Token(Token = "0x20001B6")]
	public enum ServiceProvider
	{
		[Token(Token = "0x40007CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1668", Offset = "0x4D1668")]
		Unknown,
		[Token(Token = "0x40007CB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D16A0", Offset = "0x4D16A0")]
		Dropbox,
		[Token(Token = "0x40007CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D16D8", Offset = "0x4D16D8")]
		Facebook,
		[Token(Token = "0x40007CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1710", Offset = "0x4D1710")]
		Google,
		[Token(Token = "0x40007CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1748", Offset = "0x4D1748")]
		Instagram,
		[Token(Token = "0x40007CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1780", Offset = "0x4D1780")]
		RemoteMedia
	}
	[Token(Token = "0x20001B7")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x40007D1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D17B8", Offset = "0x4D17B8")]
		Unknown,
		[Token(Token = "0x40007D2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D17F0", Offset = "0x4D17F0")]
		Shared,
		[Token(Token = "0x40007D3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1828", Offset = "0x4D1828")]
		Canceled
	}
	[Token(Token = "0x20001B8")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x4CC180", Offset = "0x4CC180")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x6ED3F4", Offset = "0x6ED3F4", VA = "0x6ED3F4")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x7002E4", Offset = "0x7002E4", VA = "0x7002E4")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x6ED3EC", Offset = "0x6ED3EC", VA = "0x6ED3EC")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700007D")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x703568", Offset = "0x703568", VA = "0x703568")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x7035B8", Offset = "0x7035B8", VA = "0x7035B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x7035BC", Offset = "0x7035BC", VA = "0x7035BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x70360C", Offset = "0x70360C", VA = "0x70360C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x702FF4", Offset = "0x702FF4", VA = "0x702FF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x703610", Offset = "0x703610", VA = "0x703610")]
			set
			{
			}
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x703614", Offset = "0x703614", VA = "0x703614")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x40007D5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1860", Offset = "0x4D1860")]
		Unknown,
		[Token(Token = "0x40007D6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1898", Offset = "0x4D1898")]
		Unavailable,
		[Token(Token = "0x40007D7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D18D0", Offset = "0x4D18D0")]
		Suppressed,
		[Token(Token = "0x40007D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1908", Offset = "0x4D1908")]
		Active
	}
	[Token(Token = "0x20001BB")]
	public enum TimeWindow
	{
		[Token(Token = "0x40007DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1940", Offset = "0x4D1940")]
		Unknown,
		[Token(Token = "0x40007DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1978", Offset = "0x4D1978")]
		OneHour,
		[Token(Token = "0x40007DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D19B0", Offset = "0x4D19B0")]
		OneDay,
		[Token(Token = "0x40007DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D19E8", Offset = "0x4D19E8")]
		OneWeek,
		[Token(Token = "0x40007DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1A20", Offset = "0x4D1A20")]
		ThirtyDays,
		[Token(Token = "0x40007DF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1A58", Offset = "0x4D1A58")]
		NinetyDays
	}
	[Token(Token = "0x20001BC")]
	public class UserOptions
	{
		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x7005A4", Offset = "0x7005A4", VA = "0x7005A4")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x70361C", Offset = "0x70361C", VA = "0x70361C")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x70061C", Offset = "0x70061C", VA = "0x70061C")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x703698", Offset = "0x703698", VA = "0x703698")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x703704", Offset = "0x703704", VA = "0x703704")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x700698", Offset = "0x700698", VA = "0x700698")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x703780", Offset = "0x703780", VA = "0x703780", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public enum UserOrdering
	{
		[Token(Token = "0x40007E2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1A90", Offset = "0x4D1A90")]
		Unknown,
		[Token(Token = "0x40007E3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1AC8", Offset = "0x4D1AC8")]
		None,
		[Token(Token = "0x40007E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1B00", Offset = "0x4D1B00")]
		PresenceAlphabetical
	}
	[Token(Token = "0x20001BE")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40007E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1B38", Offset = "0x4D1B38")]
		Unknown,
		[Token(Token = "0x40007E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1B70", Offset = "0x4D1B70")]
		Online,
		[Token(Token = "0x40007E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1BA8", Offset = "0x4D1BA8")]
		Offline
	}
	[Token(Token = "0x20001BF")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x20002EB")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x7055C0", Offset = "0x7055C0", VA = "0x7055C0")]
			private void Awake()
			{
			}

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x705678", Offset = "0x705678", VA = "0x705678")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x705C48", Offset = "0x705C48", VA = "0x705C48")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x17000080")]
		public ulong senderID
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x704D7C", Offset = "0x704D7C", VA = "0x704D7C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x704E44", Offset = "0x704E44", VA = "0x704E44")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x704E48", Offset = "0x704E48", VA = "0x704E48")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x704E84", Offset = "0x704E84", VA = "0x704E84")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x705180", Offset = "0x705180", VA = "0x705180")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x7051B0", Offset = "0x7051B0", VA = "0x7051B0", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x705218", Offset = "0x705218", VA = "0x705218")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x7052A0", Offset = "0x7052A0", VA = "0x7052A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x7055B4", Offset = "0x7055B4", VA = "0x7055B4")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40007F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1BE0", Offset = "0x4D1BE0")]
		Unknown,
		[Token(Token = "0x40007F1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1C18", Offset = "0x4D1C18")]
		B16000,
		[Token(Token = "0x40007F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1C50", Offset = "0x4D1C50")]
		B24000,
		[Token(Token = "0x40007F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1C88", Offset = "0x4D1C88")]
		B32000,
		[Token(Token = "0x40007F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1CC0", Offset = "0x4D1CC0")]
		B64000,
		[Token(Token = "0x40007F5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1CF8", Offset = "0x4D1CF8")]
		B96000,
		[Token(Token = "0x40007F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1D30", Offset = "0x4D1D30")]
		B128000
	}
	[Token(Token = "0x20001C1")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40007F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1D68", Offset = "0x4D1D68")]
		Unknown,
		[Token(Token = "0x40007F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1DA0", Offset = "0x4D1DA0")]
		Enabled,
		[Token(Token = "0x40007FA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1DD8", Offset = "0x4D1DD8")]
		Disabled
	}
	[Token(Token = "0x20001C2")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40007FC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1E10", Offset = "0x4D1E10")]
		Unknown,
		[Token(Token = "0x40007FD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1E48", Offset = "0x4D1E48")]
		Muted,
		[Token(Token = "0x40007FE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1E80", Offset = "0x4D1E80")]
		Unmuted
	}
	[Token(Token = "0x20001C3")]
	public class VoipOptions
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x705C50", Offset = "0x705C50", VA = "0x705C50")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x705CC8", Offset = "0x705CC8", VA = "0x705CC8")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x705D44", Offset = "0x705D44", VA = "0x705D44")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x704AF4", Offset = "0x704AF4", VA = "0x704AF4")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x705DC0", Offset = "0x705DC0", VA = "0x705DC0", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x705E84", Offset = "0x705E84", VA = "0x705E84", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x705F44", Offset = "0x705F44", VA = "0x705F44", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x705F4C", Offset = "0x705F4C", VA = "0x705F4C", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x705FEC", Offset = "0x705FEC", VA = "0x705FEC", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x705210", Offset = "0x705210", VA = "0x705210")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4000802")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1EB8", Offset = "0x4D1EB8")]
		Unknown,
		[Token(Token = "0x4000803")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1EF0", Offset = "0x4D1EF0")]
		HZ24000,
		[Token(Token = "0x4000804")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1F28", Offset = "0x4D1F28")]
		HZ44100,
		[Token(Token = "0x4000805")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x4D1F60", Offset = "0x4D1F60")]
		HZ48000
	}
	[Token(Token = "0x20001C6")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x4CC194", Offset = "0x4CC194")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x705FF0", Offset = "0x705FF0", VA = "0x705FF0")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x7060C8", Offset = "0x7060C8", VA = "0x7060C8")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x6ED970", Offset = "0x6ED970", VA = "0x6ED970")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x6ED53C", Offset = "0x6ED53C", VA = "0x6ED53C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x6ED534", Offset = "0x6ED534", VA = "0x6ED534")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x20001C7")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x6F4910", Offset = "0x6F4910", VA = "0x6F4910")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class AchievementDefinition
	{
		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x6FD8C4", Offset = "0x6FD8C4", VA = "0x6FD8C4")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x6F4A84", Offset = "0x6F4A84", VA = "0x6F4A84")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class AchievementProgress
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x6FD97C", Offset = "0x6FD97C", VA = "0x6FD97C")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x6F4D78", Offset = "0x6F4D78", VA = "0x6F4D78")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class AchievementUpdate
	{
		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x6F506C", Offset = "0x6F506C", VA = "0x6F506C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x6F51F4", Offset = "0x6F51F4", VA = "0x6F51F4")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class AssetDetails
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D1F98", Offset = "0x4D1F98")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x6F5398", Offset = "0x6F5398", VA = "0x6F5398")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x6F55D0", Offset = "0x6F55D0", VA = "0x6F55D0")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x6F5894", Offset = "0x6F5894", VA = "0x6F5894")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x6F5A3C", Offset = "0x6F5A3C", VA = "0x6F5A3C")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x6F5BE4", Offset = "0x6F5BE4", VA = "0x6F5BE4")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x6F5D68", Offset = "0x6F5D68", VA = "0x6F5D68")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x6F5F20", Offset = "0x6F5F20", VA = "0x6F5F20")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x6F60B4", Offset = "0x6F60B4", VA = "0x6F60B4")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x6FDAF0", Offset = "0x6FDAF0", VA = "0x6FDAF0")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x6F6288", Offset = "0x6F6288", VA = "0x6F6288")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x6F654C", Offset = "0x6F654C", VA = "0x6F654C")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class CloudStorageData
	{
		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x6F6718", Offset = "0x6F6718", VA = "0x6F6718")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x6F6BB0", Offset = "0x6F6BB0", VA = "0x6F6BB0")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x6F68BC", Offset = "0x6F68BC", VA = "0x6F68BC")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x6F6D94", Offset = "0x6F6D94", VA = "0x6F6D94")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x4CBCCC", Offset = "0x4CBCCC")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x17000081")]
		public int Count
		{
			[Token(Token = "0x6000FC3")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000082")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000FC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public T Item
		{
			[Token(Token = "0x6000FC6")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000FC7")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D60F4", Offset = "0x4D60F4")]
		public List<T> Data
		{
			[Token(Token = "0x6000FD2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000FD3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000FD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		public string NextUrl
		{
			[Token(Token = "0x6000FD5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000FD6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC5")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000FC8")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000FC9")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000FCA")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCB")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000FCC")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FCD")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000FCE")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCF")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000FD0")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000FD1")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FD7")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class Destination
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x6FDB88", Offset = "0x6FDB88", VA = "0x6FDB88")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x6F6F38", Offset = "0x6F6F38", VA = "0x6F6F38")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class Error
	{
		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x6F0D34", Offset = "0x6F0D34", VA = "0x6F0D34")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x6F722C", Offset = "0x6F722C", VA = "0x6F722C")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x6FDC30", Offset = "0x6FDC30", VA = "0x6FDC30")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x6F74C0", Offset = "0x6F74C0", VA = "0x6F74C0")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x6FDA48", Offset = "0x6FDA48", VA = "0x6FDA48")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x6F77E4", Offset = "0x6F77E4", VA = "0x6F77E4")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class LaunchDetails
	{
		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DestinationApiName;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchSource;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D1FD0", Offset = "0x4D1FD0")]
		public readonly UserList Users;

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x6FDCF8", Offset = "0x6FDCF8", VA = "0x6FDCF8")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x6F7970", Offset = "0x6F7970", VA = "0x6F7970")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x6F7B5C", Offset = "0x6F7B5C", VA = "0x6F7B5C")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x6F7D44", Offset = "0x6F7D44", VA = "0x6F7D44")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x6FDE14", Offset = "0x6FDE14", VA = "0x6FDE14")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x6F7F98", Offset = "0x6F7F98", VA = "0x6F7F98")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class LinkedAccount
	{
		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x6FDF00", Offset = "0x6FDF00", VA = "0x6FDF00")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x6F830C", Offset = "0x6F830C", VA = "0x6F830C")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x6F8630", Offset = "0x6F8630", VA = "0x6F8630")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x6F8808", Offset = "0x6F8808", VA = "0x6F8808")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x6F897C", Offset = "0x6F897C", VA = "0x6F897C")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x6F8BA0", Offset = "0x6F8BA0", VA = "0x6F8BA0")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x6F8D34", Offset = "0x6F8D34", VA = "0x6F8D34")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x6FE180", Offset = "0x6FE180", VA = "0x6FE180")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x6FDFA8", Offset = "0x6FDFA8", VA = "0x6FDFA8")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x6F8F54", Offset = "0x6F8F54", VA = "0x6F8F54")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D2008", Offset = "0x4D2008")]
		public readonly User User;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x6FE24C", Offset = "0x6FE24C", VA = "0x6FE24C")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x6FE330", Offset = "0x6FE330", VA = "0x6FE330")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D2040", Offset = "0x4D2040")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x6F9120", Offset = "0x6F9120", VA = "0x6F9120")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x6F9358", Offset = "0x6F9358", VA = "0x6F9358")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x6F9960", Offset = "0x6F9960", VA = "0x6F9960")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class NetSyncConnection
	{
		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncDisconnectReason DisconnectReason;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly NetSyncConnectionStatus Status;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string ZoneId;

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x6F9B24", Offset = "0x6F9B24", VA = "0x6F9B24")]
		public NetSyncConnection(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class NetSyncSession
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool Muted;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VoipGroup;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x6FE508", Offset = "0x6FE508", VA = "0x6FE508")]
		public NetSyncSession(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class NetSyncSessionList : DeserializableList<NetSyncSession>
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x6F9D38", Offset = "0x6F9D38", VA = "0x6F9D38")]
		public NetSyncSessionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class NetSyncSessionsChangedNotification
	{
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncSessionList Sessions;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x6F9FFC", Offset = "0x6F9FFC", VA = "0x6F9FFC")]
		public NetSyncSessionsChangedNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class NetSyncSetSessionPropertyResult
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly NetSyncSession Session;

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x6FA204", Offset = "0x6FA204", VA = "0x6FA204")]
		public NetSyncSetSessionPropertyResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class NetworkingPeer
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2078", Offset = "0x4D2078")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2088", Offset = "0x4D2088")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x17000089")]
		public ulong ID
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x6FE5E4", Offset = "0x6FE5E4", VA = "0x6FE5E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5548", Offset = "0x4D5548")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x6FE5D4", Offset = "0x6FE5D4", VA = "0x6FE5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5558", Offset = "0x4D5558")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x6FE5EC", Offset = "0x6FE5EC", VA = "0x6FE5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5568", Offset = "0x4D5568")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x6FE5DC", Offset = "0x6FE5DC", VA = "0x6FE5DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5578", Offset = "0x4D5578")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x6FA3C0", Offset = "0x6FA3C0", VA = "0x6FA3C0")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class OrgScopedID
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x6FA4E8", Offset = "0x6FA4E8", VA = "0x6FA4E8")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class Party
	{
		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D2098", Offset = "0x4D2098")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D20D0", Offset = "0x4D20D0")]
		public readonly User Leader;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D2108", Offset = "0x4D2108")]
		public readonly Room Room;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D2140", Offset = "0x4D2140")]
		public readonly UserList Users;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x6FA6BC", Offset = "0x6FA6BC", VA = "0x6FA6BC")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class PartyID
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x6FAA28", Offset = "0x6FAA28", VA = "0x6FAA28")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x6FAC88", Offset = "0x6FAC88", VA = "0x6FAC88")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class Pid
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x6FE5F4", Offset = "0x6FE5F4", VA = "0x6FE5F4")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x6FAE5C", Offset = "0x6FAE5C", VA = "0x6FAE5C")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class PingResult
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D2178", Offset = "0x4D2178")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x1700008B")]
		public ulong ID
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x6FE684", Offset = "0x6FE684", VA = "0x6FE684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5588", Offset = "0x4D5588")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x6FE67C", Offset = "0x6FE67C", VA = "0x6FE67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4D5598", Offset = "0x4D5598")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6001008")]
			[Address(RVA = "0x6FE68C", Offset = "0x6FE68C", VA = "0x6FE68C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700008D")]
		public bool IsTimeout
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x6FE708", Offset = "0x6FE708", VA = "0x6FE708")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x6FB1A0", Offset = "0x6FB1A0", VA = "0x6FB1A0")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class PlatformInitialize
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x6FB2CC", Offset = "0x6FB2CC", VA = "0x6FB2CC")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class Product
	{
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x6FE764", Offset = "0x6FE764", VA = "0x6FE764")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x600100C")]
		[Address(RVA = "0x6FB440", Offset = "0x6FB440", VA = "0x6FB440")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class Purchase
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x6FB734", Offset = "0x6FB734", VA = "0x6FB734")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x600100E")]
		[Address(RVA = "0x6FB8D8", Offset = "0x6FB8D8", VA = "0x6FB8D8")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class Room
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D2188", Offset = "0x4D2188")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D21C0", Offset = "0x4D21C0")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D21F8", Offset = "0x4D21F8")]
		public readonly User Owner;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D2230", Offset = "0x4D2230")]
		public readonly TeamList Teams;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D2268", Offset = "0x4D2268")]
		public readonly UserList Users;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x6F9524", Offset = "0x6F9524", VA = "0x6F9524")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x6FC150", Offset = "0x6FC150", VA = "0x6FC150")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x6FBCB8", Offset = "0x6FBCB8", VA = "0x6FBCB8")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6001012")]
		[Address(RVA = "0x6FBE5C", Offset = "0x6FBE5C", VA = "0x6FBE5C")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class SdkAccount
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x6FE9F4", Offset = "0x6FE9F4", VA = "0x6FE9F4")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6001014")]
		[Address(RVA = "0x6FC61C", Offset = "0x6FC61C", VA = "0x6FC61C")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class ShareMediaResult
	{
		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x6FC8E0", Offset = "0x6FC8E0", VA = "0x6FC8E0")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class SystemPermission
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x6FCB6C", Offset = "0x6FCB6C", VA = "0x6FCB6C")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class SystemVoipState
	{
		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x6FCCF4", Offset = "0x6FCCF4", VA = "0x6FCCF4")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class Team
	{
		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x6FEA8C", Offset = "0x6FEA8C", VA = "0x6FEA8C")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6001019")]
		[Address(RVA = "0x6FE81C", Offset = "0x6FE81C", VA = "0x6FE81C")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class User
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string PresenceDestinationApiName;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x6FCE78", Offset = "0x6FCE78", VA = "0x6FCE78")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x600101B")]
		[Address(RVA = "0x6FD360", Offset = "0x6FD360", VA = "0x6FD360")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class UserAndRoom
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4D22A0", Offset = "0x4D22A0")]
		public readonly Room Room;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x6FEB68", Offset = "0x6FEB68", VA = "0x6FEB68")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x600101D")]
		[Address(RVA = "0x6FD06C", Offset = "0x6FD06C", VA = "0x6FD06C")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class UserProof
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x6FD654", Offset = "0x6FD654", VA = "0x6FD654")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class UserReportID
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x6FD828", Offset = "0x6FD828", VA = "0x6FD828")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200021E")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x4D22D8", Offset = "0x4D22D8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x64ED94", Offset = "0x64ED94", VA = "0x64ED94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x64ED98", Offset = "0x64ED98", VA = "0x64ED98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x64EEA0", Offset = "0x64EEA0", VA = "0x64EEA0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2324", Offset = "0x4D2324")]
		public bool autoRetrigger;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4D235C", Offset = "0x4D235C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2380", Offset = "0x4D2380")]
		public Transform[] playPositions;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x6443E0", Offset = "0x6443E0", VA = "0x6443E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x64455C", Offset = "0x64455C", VA = "0x64455C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x6447E0", Offset = "0x6447E0", VA = "0x6447E0")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x6445BC", Offset = "0x6445BC", VA = "0x6445BC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x644948", Offset = "0x644948", VA = "0x644948")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x644ADC", Offset = "0x644ADC", VA = "0x644ADC")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000904")]
		Default,
		[Token(Token = "0x4000905")]
		Preload,
		[Token(Token = "0x4000906")]
		ManualPreload
	}
	[Token(Token = "0x2000221")]
	public enum Fade
	{
		[Token(Token = "0x4000908")]
		In,
		[Token(Token = "0x4000909")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public class SoundGroup
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4D23B8", Offset = "0x4D23B8")]
		public int maxPlayingSounds;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x64EC74", Offset = "0x64EC74", VA = "0x64EC74")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x64ED08", Offset = "0x64ED08", VA = "0x64ED08")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x64D468", Offset = "0x64D468", VA = "0x64D468")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x64D5A0", Offset = "0x64D5A0", VA = "0x64D5A0")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x64E230", Offset = "0x64E230", VA = "0x64E230")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000223")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002ED")]
		public enum Fade
		{
			[Token(Token = "0x4000E79")]
			In,
			[Token(Token = "0x4000E7A")]
			Out
		}

		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC1A8", Offset = "0x4CC1A8")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x649C00", Offset = "0x649C00", VA = "0x649C00")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x64CD98", Offset = "0x64CD98", VA = "0x64CD98")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC1B8", Offset = "0x4CC1B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x64CCFC", Offset = "0x64CCFC", VA = "0x64CCFC")]
			public <>c()
			{
			}

			[Token(Token = "0x60012C5")]
			[Address(RVA = "0x64CD04", Offset = "0x64CD04", VA = "0x64CD04")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D23E4", Offset = "0x4D23E4")]
		public bool makePersistent;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D241C", Offset = "0x4D241C")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2454", Offset = "0x4D2454")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D248C", Offset = "0x4D248C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D24C4", Offset = "0x4D24C4")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D24FC", Offset = "0x4D24FC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2534", Offset = "0x4D2534")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D256C", Offset = "0x4D256C")]
		public bool verboseLogging;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D25A4", Offset = "0x4D25A4")]
		public int maxSoundEmitters;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D25DC", Offset = "0x4D25DC")]
		public float volumeSoundFX;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2614", Offset = "0x4D2614")]
		public float soundFxFadeSecs;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700008E")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x644B98", Offset = "0x644B98", VA = "0x644B98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008F")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x644C7C", Offset = "0x644C7C", VA = "0x644C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x644CE4", Offset = "0x644CE4", VA = "0x644CE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000091")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x644D5C", Offset = "0x644D5C", VA = "0x644D5C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000092")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x644DD4", Offset = "0x644DD4", VA = "0x644DD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x644E4C", Offset = "0x644E4C", VA = "0x644E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x644EC4", Offset = "0x644EC4", VA = "0x644EC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x647524", Offset = "0x647524", VA = "0x647524")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x644F3C", Offset = "0x644F3C", VA = "0x644F3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x645174", Offset = "0x645174", VA = "0x645174")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x644F40", Offset = "0x644F40", VA = "0x644F40")]
		private void Init()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x646318", Offset = "0x646318", VA = "0x646318")]
		private void Update()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x6452CC", Offset = "0x6452CC", VA = "0x6452CC")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x646AAC", Offset = "0x646AAC", VA = "0x646AAC")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x646C5C", Offset = "0x646C5C", VA = "0x646C5C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x646E14", Offset = "0x646E14", VA = "0x646E14")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x646F1C", Offset = "0x646F1C", VA = "0x646F1C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x646FE0", Offset = "0x646FE0", VA = "0x646FE0")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x645AB8", Offset = "0x645AB8", VA = "0x645AB8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x64631C", Offset = "0x64631C", VA = "0x64631C")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x647804", Offset = "0x647804", VA = "0x647804")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x647900", Offset = "0x647900", VA = "0x647900")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x647A00", Offset = "0x647A00", VA = "0x647A00")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x647684", Offset = "0x647684", VA = "0x647684")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x647BE0", Offset = "0x647BE0", VA = "0x647BE0")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x647D68", Offset = "0x647D68", VA = "0x647D68")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x647FA0", Offset = "0x647FA0", VA = "0x647FA0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x644878", Offset = "0x644878", VA = "0x644878")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x644A0C", Offset = "0x644A0C", VA = "0x644A0C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x64817C", Offset = "0x64817C", VA = "0x64817C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x648260", Offset = "0x648260", VA = "0x648260")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x64832C", Offset = "0x64832C", VA = "0x64832C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x648458", Offset = "0x648458", VA = "0x648458")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x648518", Offset = "0x648518", VA = "0x648518")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x648630", Offset = "0x648630", VA = "0x648630")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x649418", Offset = "0x649418", VA = "0x649418")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x649C08", Offset = "0x649C08", VA = "0x649C08")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x649DB4", Offset = "0x649DB4", VA = "0x649DB4")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x64AF98", Offset = "0x64AF98", VA = "0x64AF98")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x648804", Offset = "0x648804", VA = "0x648804")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x64B0BC", Offset = "0x64B0BC", VA = "0x64B0BC")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x64B1D0", Offset = "0x64B1D0", VA = "0x64B1D0")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x64B2F0", Offset = "0x64B2F0", VA = "0x64B2F0")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x64B798", Offset = "0x64B798", VA = "0x64B798")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x64B9E8", Offset = "0x64B9E8", VA = "0x64B9E8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x64BB14", Offset = "0x64BB14", VA = "0x64BB14")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x64BD04", Offset = "0x64BD04", VA = "0x64BD04")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x64BDE0", Offset = "0x64BDE0", VA = "0x64BDE0")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x64BF30", Offset = "0x64BF30", VA = "0x64BF30")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x64C3EC", Offset = "0x64C3EC", VA = "0x64C3EC")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000931")]
		None = -1,
		[Token(Token = "0x4000932")]
		Reserved,
		[Token(Token = "0x4000933")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000225")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x64CE98", Offset = "0x64CE98", VA = "0x64CE98")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x64CE3C", Offset = "0x64CE3C", VA = "0x64CE3C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002F0")]
		public enum FadeState
		{
			[Token(Token = "0x4000E7F")]
			Null,
			[Token(Token = "0x4000E80")]
			FadingIn,
			[Token(Token = "0x4000E81")]
			FadingOut,
			[Token(Token = "0x4000E82")]
			Ducking
		}

		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC1C8", Offset = "0x4CC1C8")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170000E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C9")]
				[Address(RVA = "0x64DB60", Offset = "0x64DB60", VA = "0x64DB60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012CB")]
				[Address(RVA = "0x64DBD0", Offset = "0x64DBD0", VA = "0x64DBD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x64D79C", Offset = "0x64D79C", VA = "0x64D79C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x64DA48", Offset = "0x64DA48", VA = "0x64DA48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x64DA4C", Offset = "0x64DA4C", VA = "0x64DA4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x64DB68", Offset = "0x64DB68", VA = "0x64DB68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC1D8", Offset = "0x4CC1D8")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170000E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012CF")]
				[Address(RVA = "0x64E0CC", Offset = "0x64E0CC", VA = "0x64E0CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012D1")]
				[Address(RVA = "0x64E13C", Offset = "0x64E13C", VA = "0x64E13C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x64D9D8", Offset = "0x64D9D8", VA = "0x64D9D8")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x64DF28", Offset = "0x64DF28", VA = "0x64DF28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x64DF2C", Offset = "0x64DF2C", VA = "0x64DF2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x64E0D4", Offset = "0x64E0D4", VA = "0x64E0D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4CC1E8", Offset = "0x4CC1E8")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170000EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D5")]
				[Address(RVA = "0x64DEB0", Offset = "0x64DEB0", VA = "0x64DEB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012D7")]
				[Address(RVA = "0x64DF20", Offset = "0x64DF20", VA = "0x64DF20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x64DA04", Offset = "0x64DA04", VA = "0x64DA04")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x64DBD8", Offset = "0x64DBD8", VA = "0x64DBD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x64DBDC", Offset = "0x64DBDC", VA = "0x64DBDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x64DEB8", Offset = "0x64DEB8", VA = "0x64DEB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000096")]
		public float volume
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x64AF68", Offset = "0x64AF68", VA = "0x64AF68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x64CF38", Offset = "0x64CF38", VA = "0x64CF38")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public float pitch
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x64CF78", Offset = "0x64CF78", VA = "0x64CF78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x64CFA8", Offset = "0x64CFA8", VA = "0x64CFA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public AudioClip clip
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x64CFE8", Offset = "0x64CFE8", VA = "0x64CFE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x64D018", Offset = "0x64D018", VA = "0x64D018")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public float time
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x64D050", Offset = "0x64D050", VA = "0x64D050")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x6485F0", Offset = "0x6485F0", VA = "0x6485F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public float length
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x64D080", Offset = "0x64D080", VA = "0x64D080")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700009B")]
		public bool loop
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x64D158", Offset = "0x64D158", VA = "0x64D158")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x64D188", Offset = "0x64D188", VA = "0x64D188")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public bool mute
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x64D1C0", Offset = "0x64D1C0", VA = "0x64D1C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x64D1F0", Offset = "0x64D1F0", VA = "0x64D1F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0x64D228", Offset = "0x64D228", VA = "0x64D228")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001071")]
			[Address(RVA = "0x64D258", Offset = "0x64D258", VA = "0x64D258")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public bool isPlaying
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x64D290", Offset = "0x64D290", VA = "0x64D290")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x64D2C0", Offset = "0x64D2C0", VA = "0x64D2C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x64AF54", Offset = "0x64AF54", VA = "0x64AF54")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x64B1C8", Offset = "0x64B1C8", VA = "0x64B1C8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x64B2E8", Offset = "0x64B2E8", VA = "0x64B2E8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x647594", Offset = "0x647594", VA = "0x647594")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x64758C", Offset = "0x64758C", VA = "0x64758C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x64BC54", Offset = "0x64BC54", VA = "0x64BC54")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x64779C", Offset = "0x64779C", VA = "0x64779C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x64D4F8", Offset = "0x64D4F8", VA = "0x64D4F8")]
		public void Play()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x64D560", Offset = "0x64D560", VA = "0x64D560")]
		public void Pause()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x64759C", Offset = "0x64759C", VA = "0x64759C")]
		public void Stop()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x64D630", Offset = "0x64D630", VA = "0x64D630")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x64B688", Offset = "0x64B688", VA = "0x64B688")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x64B904", Offset = "0x64B904", VA = "0x64B904")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x647B90", Offset = "0x647B90", VA = "0x647B90")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x64D6A4", Offset = "0x64D6A4", VA = "0x64D6A4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x64D6D0", Offset = "0x64D6D0", VA = "0x64D6D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D55A8", Offset = "0x4D55A8")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x64D7C8", Offset = "0x64D7C8", VA = "0x64D7C8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x648078", Offset = "0x648078", VA = "0x648078")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x6480FC", Offset = "0x6480FC", VA = "0x6480FC")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x647EF4", Offset = "0x647EF4", VA = "0x647EF4")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x647CB8", Offset = "0x647CB8", VA = "0x647CB8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x64D840", Offset = "0x64D840", VA = "0x64D840")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D560C", Offset = "0x4D560C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x64D8EC", Offset = "0x64D8EC", VA = "0x64D8EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4D5670", Offset = "0x4D5670")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x64DA30", Offset = "0x64DA30", VA = "0x64DA30")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public enum SoundFXNext
	{
		[Token(Token = "0x400094A")]
		Random,
		[Token(Token = "0x400094B")]
		Sequential
	}
	[Token(Token = "0x2000229")]
	public enum FreqHint
	{
		[Token(Token = "0x400094D")]
		None,
		[Token(Token = "0x400094E")]
		Wide,
		[Token(Token = "0x400094F")]
		Narrow
	}
	[Token(Token = "0x200022A")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000951")]
		VeryLow = -2,
		[Token(Token = "0x4000952")]
		Low,
		[Token(Token = "0x4000953")]
		Default,
		[Token(Token = "0x4000954")]
		High,
		[Token(Token = "0x4000955")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200022B")]
	public class OSPProps
	{
		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D26FC", Offset = "0x4D26FC")]
		public bool enableSpatialization;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2734", Offset = "0x4D2734")]
		public bool useFastOverride;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D276C", Offset = "0x4D276C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4D276C", Offset = "0x4D276C")]
		public float gain;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D27C0", Offset = "0x4D27C0")]
		public bool enableInvSquare;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D27F8", Offset = "0x4D27F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4D27F8", Offset = "0x4D27F8")]
		public float volumetric;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2850", Offset = "0x4D2850")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4D2850", Offset = "0x4D2850")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x64CEA8", Offset = "0x64CEA8", VA = "0x64CEA8")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022C")]
	public class SoundFX
	{
		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D28B0", Offset = "0x4D28B0")]
		public string name;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D28E8", Offset = "0x4D28E8")]
		public SoundFXNext playback;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2920", Offset = "0x4D2920")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4D2920", Offset = "0x4D2920")]
		public float volume;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2974", Offset = "0x4D2974")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4D2974", Offset = "0x4D2974")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D29D0", Offset = "0x4D29D0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4D29D0", Offset = "0x4D29D0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2A30", Offset = "0x4D2A30")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2A68", Offset = "0x4D2A68")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2AA0", Offset = "0x4D2AA0")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2AD8", Offset = "0x4D2AD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4D2AD8", Offset = "0x4D2AD8")]
		public float spread;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2B30", Offset = "0x4D2B30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4D2B30", Offset = "0x4D2B30")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2B84", Offset = "0x4D2B84")]
		public SoundPriority priority;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2BBC", Offset = "0x4D2BBC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x4D2BBC", Offset = "0x4D2BBC")]
		public Vector2 delay;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2C18", Offset = "0x4D2C18")]
		public bool looping;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4D2C50", Offset = "0x4D2C50")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700009F")]
		public int Length
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x64E144", Offset = "0x64E144", VA = "0x64E144")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A0")]
		public bool IsValid
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x64E170", Offset = "0x64E170", VA = "0x64E170")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A1")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0x64AF4C", Offset = "0x64AF4C", VA = "0x64AF4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x646AA4", Offset = "0x646AA4", VA = "0x646AA4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0x64AE50", Offset = "0x64AE50", VA = "0x64AE50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A3")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0x64AE84", Offset = "0x64AE84", VA = "0x64AE84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x64C724", Offset = "0x64C724", VA = "0x64C724")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x64ACD8", Offset = "0x64ACD8", VA = "0x64ACD8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x64AEA8", Offset = "0x64AEA8", VA = "0x64AEA8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x64AE5C", Offset = "0x64AE5C", VA = "0x64AE5C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x64E250", Offset = "0x64E250", VA = "0x64E250")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x64AE9C", Offset = "0x64AE9C", VA = "0x64AE9C")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x64E3A0", Offset = "0x64E3A0", VA = "0x64E3A0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x64E47C", Offset = "0x64E47C", VA = "0x64E47C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x64E590", Offset = "0x64E590", VA = "0x64E590")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x64E61C", Offset = "0x64E61C", VA = "0x64E61C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x64E6B0", Offset = "0x64E6B0", VA = "0x64E6B0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x64E73C", Offset = "0x64E73C", VA = "0x64E73C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x64E7C8", Offset = "0x64E7C8", VA = "0x64E7C8")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022D")]
	public class SoundFXRef
	{
		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000A4")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x64E840", Offset = "0x64E840", VA = "0x64E840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		public string name
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x64E934", Offset = "0x64E934", VA = "0x64E934")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x64E93C", Offset = "0x64E93C", VA = "0x64E93C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public int Length
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x64E944", Offset = "0x64E944", VA = "0x64E944")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A7")]
		public bool IsValid
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0x64E994", Offset = "0x64E994", VA = "0x64E994")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x64E870", Offset = "0x64E870", VA = "0x64E870")]
		private void Init()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x64E9D4", Offset = "0x64E9D4", VA = "0x64E9D4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x64EA14", Offset = "0x64EA14", VA = "0x64EA14")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x64EA5C", Offset = "0x64EA5C", VA = "0x64EA5C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x6447F0", Offset = "0x6447F0", VA = "0x6447F0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x64EAAC", Offset = "0x64EAAC", VA = "0x64EAAC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x64EAF4", Offset = "0x64EAF4", VA = "0x64EAF4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x64EB4C", Offset = "0x64EB4C", VA = "0x64EB4C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x64EB8C", Offset = "0x64EB8C", VA = "0x64EB8C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x64EBD4", Offset = "0x64EBD4", VA = "0x64EBD4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x64EC14", Offset = "0x64EC14", VA = "0x64EC14")]
		public SoundFXRef()
		{
		}
	}
}
