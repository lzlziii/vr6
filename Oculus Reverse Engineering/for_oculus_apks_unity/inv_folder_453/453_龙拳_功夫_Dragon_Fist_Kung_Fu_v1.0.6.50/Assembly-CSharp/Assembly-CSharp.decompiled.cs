using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using BeautifyEffect;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using RootMotion.Demos;
using RootMotion.Dynamics;
using RootMotion.FinalIK;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityStandardAssets.Cameras;
using VolumetricFogAndMist;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class Random_movement : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 dir;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x7CF6B8", Offset = "0x7CF6B8", VA = "0x7CF6B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x7CF750", Offset = "0x7CF750", VA = "0x7CF750")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x7CF798", Offset = "0x7CF798", VA = "0x7CF798")]
	public Random_movement()
	{
	}
}
[Token(Token = "0x2000003")]
public class demo_scene_control : MonoBehaviour
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform c_point;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform c_point1;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform f_point;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] style1;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] style2;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] style3;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] style4;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject current;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int style;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int cur_effect;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int max_n;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x75A25C", Offset = "0x75A25C", VA = "0x75A25C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x75A834", Offset = "0x75A834", VA = "0x75A834")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x75A8CC", Offset = "0x75A8CC", VA = "0x75A8CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x75A260", Offset = "0x75A260", VA = "0x75A260")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x75AC84", Offset = "0x75AC84", VA = "0x75AC84")]
	public demo_scene_control()
	{
	}
}
[Token(Token = "0x2000004")]
public class AIController : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	public enum AIStyle
	{
		[Token(Token = "0x400005D")]
		Default,
		[Token(Token = "0x400005E")]
		Timid,
		[Token(Token = "0x400005F")]
		Aggressive,
		[Token(Token = "0x4000060")]
		Reckless,
		[Token(Token = "0x4000061")]
		Relentless
	}

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter gameCharacter;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform aiTrackerContainer;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] aiTrackers;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trackerContainer;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] trackers;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] ikTrackers;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] followTrackers;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] defaultPositions;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion[] defaultRotations;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool debug;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform moveToDebug;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float minDist;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float minAttackHeight;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float tryAttackTime;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float resetTime;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float nextStanceTime;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float impatientTimer;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool doneImpatience;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float facingAngle;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 walkTarget;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 walkSpeedTarget;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 playerTarget;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 playerLookTarget;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool doingSpecial;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int doingMove;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int specialMoveMove;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int stance;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float heightAdjust;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float enemyHeadY;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float targetHeightAdjust;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float heightAdjustTimer;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float angleDiff;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float dodgeTimer;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int lastMove;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float sameMoveTimer;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public MoveWithController playerController;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public MoveReplayer replayer;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int fightAI_chargeIn;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool fightAI_targetPlayer;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string fightAI_keepAway;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool fightAI_considerAbandonMove;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	public bool fightAI_pathClear;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float fightAI_sizeupTime;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float fightAI_keepAwayTime;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float fightAI_sizeupSpeedPerc;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float tauntTime;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float tauntSpeed;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool doneTaunt;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float blindPerc;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float changeTargetTimer;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public LayerMask pathRayMask;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public LayerMask dodgeDetectLayers;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Vector3 stanceOffset;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float minHandRadius;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float dodgeDist;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float dodgeMinSpeed;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool verbose;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ChamberFighter chamberArea;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 lastRHandPos;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 lastLHandPos;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Vector3 walk;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public int attacksDone;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float headTurnTimer;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float headLookPerc;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float nextJumpTime;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public bool stayStillForMove;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
	public bool dontTurnForMove;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float rangeBias;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public MinMax rangeBiasRange;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float walkSpeedMod;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float walkSpeedChange;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float dashTimer;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float clampDiv;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float landOffset;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float turnSpeed;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private NavMeshPath path;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float navTimer;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public string navState;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AIStyle aiStyle;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xAADA04", Offset = "0xAADA04", VA = "0xAADA04")]
	private void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xAADEC8", Offset = "0xAADEC8", VA = "0xAADEC8")]
	public void sizeUp(float mod)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xAADF7C", Offset = "0xAADF7C", VA = "0xAADF7C")]
	public void reset()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xAAE0B0", Offset = "0xAAE0B0", VA = "0xAAE0B0")]
	public int chargeIn()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xAAE368", Offset = "0xAAE368", VA = "0xAAE368")]
	private void gotoDefaultPositions()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xAAE538", Offset = "0xAAE538", VA = "0xAAE538")]
	private void walkTowards(Vector3 targetPos, float speedPerc = 1f, bool clamp = true)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xAAE9C8", Offset = "0xAAE9C8", VA = "0xAAE9C8")]
	private void turnToPlayer()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xAADFF8", Offset = "0xAADFF8", VA = "0xAADFF8")]
	public FightingStyle fightingStyle()
	{
		return null;
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xAAEE34", Offset = "0xAAEE34", VA = "0xAAEE34")]
	public float taunt(float delay)
	{
		return default(float);
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xAAEE9C", Offset = "0xAAEE9C", VA = "0xAAEE9C")]
	public float taunt()
	{
		return default(float);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xAAEECC", Offset = "0xAAEECC", VA = "0xAAEECC")]
	public float taunt(bool speak)
	{
		return default(float);
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xAAF0AC", Offset = "0xAAF0AC", VA = "0xAAF0AC")]
	public void FinalWinVoice()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xAAF100", Offset = "0xAAF100", VA = "0xAAF100")]
	private void OnWinVoice()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xAAF178", Offset = "0xAAF178", VA = "0xAAF178")]
	private void switchStance(float switchTime, string note)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xAAED84", Offset = "0xAAED84", VA = "0xAAED84")]
	public Vector3 diffToTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xAAFAC8", Offset = "0xAAFAC8", VA = "0xAAFAC8")]
	public FightingStyle_Stance currentStance()
	{
		return null;
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xAAFB40", Offset = "0xAAFB40", VA = "0xAAFB40")]
	public SpecialMove specialMove()
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xAAFB68", Offset = "0xAAFB68", VA = "0xAAFB68")]
	public RecordAction currentAttack()
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xAAFCBC", Offset = "0xAAFCBC", VA = "0xAAFCBC")]
	public bool pathClear(Vector3 to, RigidBodies target)
	{
		return default(bool);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xAAFFF0", Offset = "0xAAFFF0", VA = "0xAAFFF0")]
	public void onHit()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xAB03A4", Offset = "0xAB03A4", VA = "0xAB03A4")]
	private void counters()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xAAF9C0", Offset = "0xAAF9C0", VA = "0xAAF9C0")]
	private void resetThink()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xAB0D84", Offset = "0xAB0D84", VA = "0xAB0D84")]
	private void specialNext()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xAB0FA0", Offset = "0xAB0FA0", VA = "0xAB0FA0")]
	private void specialNext2()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xAB1294", Offset = "0xAB1294", VA = "0xAB1294")]
	private void specialKick()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xAB0F00", Offset = "0xAB0F00", VA = "0xAB0F00")]
	private float specialMoveSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xAAF090", Offset = "0xAAF090", VA = "0xAAF090")]
	private float moveSpeedMod()
	{
		return default(float);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xAB0020", Offset = "0xAB0020", VA = "0xAB0020")]
	private void updatePlayerTarget(bool ignoreBlind = false)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xAB12D4", Offset = "0xAB12D4", VA = "0xAB12D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xAB5248", Offset = "0xAB5248", VA = "0xAB5248")]
	public AIController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class AIMode
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fightMode;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool editMode;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xAB529C", Offset = "0xAB529C", VA = "0xAB529C")]
	public AIMode()
	{
	}
}
[Serializable]
[Token(Token = "0x2000007")]
public class AchievementData : Exportable
{
	[Token(Token = "0x2000008")]
	public enum Category
	{
		[Token(Token = "0x4000070")]
		Easy,
		[Token(Token = "0x4000071")]
		Medium,
		[Token(Token = "0x4000072")]
		Hard,
		[Token(Token = "0x4000073")]
		Completion,
		[Token(Token = "0x4000074")]
		Wacky,
		[Token(Token = "0x4000075")]
		Total
	}

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasHardVersion;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool skipModeCheck;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Category category;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DifficultyLevel.Level done;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public DifficultyLevel.Level confirmed;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite icon;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BA7BC", Offset = "0x4BA7BC")]
	public string notes;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useLowestDifficulty;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xAB52A4", Offset = "0xAB52A4", VA = "0xAB52A4")]
	public void localise()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xAB5320", Offset = "0xAB5320", VA = "0xAB5320")]
	public string getName(string difficulty, bool localise = false)
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xAB53FC", Offset = "0xAB53FC", VA = "0xAB53FC")]
	public string getID(DifficultyLevel.Level diff)
	{
		return null;
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xAB5484", Offset = "0xAB5484", VA = "0xAB5484")]
	public string getDifficultySuffix(DifficultyLevel.Level diff)
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xAB5534", Offset = "0xAB5534", VA = "0xAB5534")]
	public string getDescription(string difficulty, bool localise = false)
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xAB562C", Offset = "0xAB562C", VA = "0xAB562C")]
	public bool complete(DifficultyLevel.Level difficultyLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xAB56F8", Offset = "0xAB56F8", VA = "0xAB56F8")]
	public bool complete()
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xAB57DC", Offset = "0xAB57DC", VA = "0xAB57DC")]
	public AchievementData()
	{
	}
}
[Token(Token = "0x2000009")]
public class AchievementsController : MonoBehaviour
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AchievementsController instance;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementData[] achievements;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameStat> statsToCheck;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float checkTimer;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] difficultyOverlays;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite placeHolder;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BA7D4", Offset = "0x4BA7D4")]
	public bool hasHitHead;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool hasHitOther;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool hasUsedLeftArm;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool hasUsedRightArm;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool perfect;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<AchievementData> queue;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float queueTimer;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool notify;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] completionistProgress;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xAB57E4", Offset = "0xAB57E4", VA = "0xAB57E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xAB5A34", Offset = "0xAB5A34", VA = "0xAB5A34")]
	private int countID(string id, List<string> baseIDs)
	{
		return default(int);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xAB5B60", Offset = "0xAB5B60", VA = "0xAB5B60")]
	public void export()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xAB6124", Offset = "0xAB6124", VA = "0xAB6124")]
	public void fightReset()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xAB612C", Offset = "0xAB612C", VA = "0xAB612C")]
	public void onWinChecks()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xAB6640", Offset = "0xAB6640", VA = "0xAB6640")]
	public void checkFullMarks()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xAB674C", Offset = "0xAB674C", VA = "0xAB674C")]
	public void checkCompletionist()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xAB6A88", Offset = "0xAB6A88", VA = "0xAB6A88")]
	public void onCompleteChecks()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xAB6BA8", Offset = "0xAB6BA8", VA = "0xAB6BA8")]
	public void checkStat(GameStat stat)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xAB6C44", Offset = "0xAB6C44", VA = "0xAB6C44")]
	public void addToQueue(AchievementData achievement)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xAB64AC", Offset = "0xAB64AC", VA = "0xAB64AC")]
	public static void achievement(string name)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xAB6910", Offset = "0xAB6910", VA = "0xAB6910")]
	public static void achievement(string name, DifficultyLevel.Level level)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xAB6CB4", Offset = "0xAB6CB4", VA = "0xAB6CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xAB70F4", Offset = "0xAB70F4", VA = "0xAB70F4")]
	public AchievementsController()
	{
	}
}
[Token(Token = "0x200000A")]
public class AdvancedCalibrateController : StandButtonsController
{
	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject bigMirror;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject bigMirror2;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject oldMirror;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public StandPositionIndicator continueButton;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xAB7174", Offset = "0xAB7174", VA = "0xAB7174")]
	private void Start()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xAB7370", Offset = "0xAB7370", VA = "0xAB7370")]
	private void Update()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xAB74D4", Offset = "0xAB74D4", VA = "0xAB74D4")]
	public AdvancedCalibrateController()
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class AdvancedCalibrateOption
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string instruction;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool requiresFBT;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool active;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xAB74DC", Offset = "0xAB74DC", VA = "0xAB74DC")]
	public AdvancedCalibrateOption()
	{
	}
}
[Token(Token = "0x200000C")]
public class AltCostume : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material[] originalMaterials;

	[NonSerialized]
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RigidBodies rb;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hide;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool hideIfMain;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xAB74E4", Offset = "0xAB74E4", VA = "0xAB74E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xAB74E8", Offset = "0xAB74E8", VA = "0xAB74E8")]
	public void refresh()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xAB77C8", Offset = "0xAB77C8", VA = "0xAB77C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xAB77CC", Offset = "0xAB77CC", VA = "0xAB77CC")]
	public AltCostume()
	{
	}
}
[Token(Token = "0x200000D")]
public class AmbientSoundController : MonoBehaviour
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AmbientSoundController instance;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeTarget;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float onPerc;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xAB77D4", Offset = "0xAB77D4", VA = "0xAB77D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xAB7858", Offset = "0xAB7858", VA = "0xAB7858")]
	public static void fade(bool fadeOut, float fadeTime)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xAB78E0", Offset = "0xAB78E0", VA = "0xAB78E0")]
	public static void fadeIn(float fadeTime, AudioClip clip)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xAB7A18", Offset = "0xAB7A18", VA = "0xAB7A18")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xAB7BE8", Offset = "0xAB7BE8", VA = "0xAB7BE8")]
	public AmbientSoundController()
	{
	}
}
[Token(Token = "0x200000E")]
public class AreaOfEffect : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MinMax radius;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterEffect.Effect effect;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxAmount;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VestHapticClip hitHaptic;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xF61E84", Offset = "0xF61E84", VA = "0xF61E84")]
	private void Start()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xF62188", Offset = "0xF62188", VA = "0xF62188")]
	private void Update()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xF6218C", Offset = "0xF6218C", VA = "0xF6218C")]
	public AreaOfEffect()
	{
	}
}
[Token(Token = "0x200000F")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x9B99C8", Offset = "0x9B99C8", VA = "0x9B99C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x9B99CC", Offset = "0x9B99CC", VA = "0x9B99CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x9B9B30", Offset = "0x9B9B30", VA = "0x9B9B30")]
	public Billboard()
	{
	}
}
[Token(Token = "0x2000010")]
public class BillboardMaker : MonoBehaviour
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2Int size;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fileName;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string direction;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x9B9B38", Offset = "0x9B9B38", VA = "0x9B9B38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x9B9BD4", Offset = "0x9B9BD4", VA = "0x9B9BD4")]
	private void takePic()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x9B9E48", Offset = "0x9B9E48", VA = "0x9B9E48")]
	public void DumpRenderTexture(RenderTexture rt, string pngOutPath)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x9B9FA8", Offset = "0x9B9FA8", VA = "0x9B9FA8")]
	public BillboardMaker()
	{
	}
}
[Token(Token = "0x2000011")]
public class BlockSwingController : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody toRelease;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float radius;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float onProb;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool on;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool pressed;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x9BA72C", Offset = "0x9BA72C", VA = "0x9BA72C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x9BA760", Offset = "0x9BA760", VA = "0x9BA760")]
	private void Update()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x9BA910", Offset = "0x9BA910", VA = "0x9BA910")]
	public BlockSwingController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class BodyPartData
{
	[Token(Token = "0x2000013")]
	public enum Source
	{
		[Token(Token = "0x40000B8")]
		Any,
		[Token(Token = "0x40000B9")]
		LeftHand,
		[Token(Token = "0x40000BA")]
		RightHand
	}

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string friendlyName;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float weaponForce;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Hittable.HitType hitType;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float hapticAmount;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float knockDownPerc;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Hittable hittable;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Source source;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isHandOrLowerArm;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool isHead;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool isChest;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool isRightHand;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isLeftHand;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool isFoot;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool isArm;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x9BA924", Offset = "0x9BA924", VA = "0x9BA924")]
	public void setDefaults()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x9BADF0", Offset = "0x9BADF0", VA = "0x9BADF0")]
	public BodyPartData()
	{
	}
}
[Token(Token = "0x2000014")]
public class Breakable : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	public enum BreakLimitation
	{
		[Token(Token = "0x40000DC")]
		Any,
		[Token(Token = "0x40000DD")]
		HandOnly,
		[Token(Token = "0x40000DE")]
		SpecialMove,
		[Token(Token = "0x40000DF")]
		FootOnly,
		[Token(Token = "0x40000E0")]
		HandOrfoot,
		[Token(Token = "0x40000E1")]
		NewGameOnly
	}

	[Token(Token = "0x2000016")]
	public delegate void OnNext();

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float smashForce;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minHitPower;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hurtsPlayer;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BreakLimitation breakLimitation;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject background;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody leftPrefab;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody rightPrefab;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject singlePrefab;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Breakable masterBlock;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip breakSound;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip hitSound;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem[] particles;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audioSource;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float createTime;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool disabled;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool unbreakable;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool broken;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool hasFailed;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] fragments;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public OnNext onNext;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnNext onHurt;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OnNext onSmash;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool addSideWaysForce;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool notInDemo;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Rigidbody rb;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float minHealth;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool hitBody;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool kinematicForSec;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	public bool impactDisabled;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float hitTime;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MeshRenderer mesh;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string unbreakableText;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x9BB478", Offset = "0x9BB478", VA = "0x9BB478")]
	private void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x9BB624", Offset = "0x9BB624", VA = "0x9BB624")]
	private void clearFragments()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x9BB72C", Offset = "0x9BB72C", VA = "0x9BB72C")]
	public void reset()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x9BB768", Offset = "0x9BB768", VA = "0x9BB768")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x9BB76C", Offset = "0x9BB76C", VA = "0x9BB76C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x9BB834", Offset = "0x9BB834", VA = "0x9BB834")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x9BCFC0", Offset = "0x9BCFC0", VA = "0x9BCFC0")]
	protected void doNext()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x9BC378", Offset = "0x9BC378", VA = "0x9BC378")]
	public void hit(float force, bool special, Vector3 dir, Vector3 hitPoint, string error, bool wasPlayer)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x9BCFD4", Offset = "0x9BCFD4", VA = "0x9BCFD4")]
	public Breakable()
	{
	}
}
[Token(Token = "0x2000017")]
public class BronzeDummiesController : MonoBehaviour
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BronzeDummyHitArea[] dummies;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChamberController chamber;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x9BD030", Offset = "0x9BD030", VA = "0x9BD030")]
	private void Start()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x9BD0A8", Offset = "0x9BD0A8", VA = "0x9BD0A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x9BD128", Offset = "0x9BD128", VA = "0x9BD128")]
	public BronzeDummiesController()
	{
	}
}
[Token(Token = "0x2000018")]
public class BronzeDummyHitArea : MonoBehaviour
{
	[Token(Token = "0x2000019")]
	public delegate void OnHit(Vector3 position);

	[Token(Token = "0x200001A")]
	public delegate void OnBlock();

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip hitSound;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip hitLiteSound;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minHitTime;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minHitPower;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hitTime;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool sidewaysHit;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool done;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion offset;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnHit onHit;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OnBlock onBlock;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool disableKnockdown;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool bouncePlayer;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool kicked;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion downRotation;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Collider lastHit;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x9BD130", Offset = "0x9BD130", VA = "0x9BD130")]
	private void Start()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x9BD16C", Offset = "0x9BD16C", VA = "0x9BD16C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x9BDB10", Offset = "0x9BDB10", VA = "0x9BDB10")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x9BDC38", Offset = "0x9BDC38", VA = "0x9BDC38")]
	public BronzeDummyHitArea()
	{
	}
}
[Token(Token = "0x200001B")]
public class BronzeDummyHitTypes : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip hitSound;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip hitLiteSound;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minHitTime;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minHitPower;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hitTime;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DummyHitType[] headHits;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DummyHitType[] torsoHits;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DummyHitType onTarget;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ChamberController chamber;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x9BDC54", Offset = "0x9BDC54", VA = "0x9BDC54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x9BDD28", Offset = "0x9BDD28", VA = "0x9BDD28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x9BDDF4", Offset = "0x9BDDF4", VA = "0x9BDDF4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x9BE724", Offset = "0x9BE724", VA = "0x9BE724")]
	public BronzeDummyHitTypes()
	{
	}
}
[Token(Token = "0x200001C")]
public class ButtonAvoider : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float angle;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float magnitude;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minAngle;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxMagnitude;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotateSpeed;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x9BECF4", Offset = "0x9BECF4", VA = "0x9BECF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x9BECF8", Offset = "0x9BECF8", VA = "0x9BECF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x9BF014", Offset = "0x9BF014", VA = "0x9BF014")]
	public ButtonAvoider()
	{
	}
}
[Token(Token = "0x200001D")]
public class ButtonPositionDisplayController : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button key;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string boneName;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool billboard;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bone;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool positionFromBone;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initScale;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x9BFD4C", Offset = "0x9BFD4C", VA = "0x9BFD4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x9BFD88", Offset = "0x9BFD88", VA = "0x9BFD88")]
	public void updateScale(float perc)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x9BFE38", Offset = "0x9BFE38", VA = "0x9BFE38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x9BFFAC", Offset = "0x9BFFAC", VA = "0x9BFFAC")]
	public ButtonPositionDisplayController()
	{
	}
}
[Token(Token = "0x200001E")]
public class ButtonPositionsController : MonoBehaviour
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ButtonPositionDisplayController[] buttons;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ButtonPositionDisplayController> showingButtons;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinnedMeshRenderer[] meshRenderers;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] roots;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material menuMaterial;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material tutorialMaterial;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform root;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool inBody;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool setup;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float displayScalePerc;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float showTime;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x9BFFBC", Offset = "0x9BFFBC", VA = "0x9BFFBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x9C0050", Offset = "0x9C0050", VA = "0x9C0050")]
	public Vector3 highlightedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x9C0024", Offset = "0x9C0024", VA = "0x9C0024")]
	public void clear()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x9C01F4", Offset = "0x9C01F4", VA = "0x9C01F4")]
	public void show(OVRInput.Button actions, float showTime = 0f)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x9C0464", Offset = "0x9C0464", VA = "0x9C0464")]
	public void refresh()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x9C0750", Offset = "0x9C0750", VA = "0x9C0750")]
	public bool showing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x9C07B8", Offset = "0x9C07B8", VA = "0x9C07B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x9C0A54", Offset = "0x9C0A54", VA = "0x9C0A54")]
	public ButtonPositionsController()
	{
	}
}
[Token(Token = "0x200001F")]
public class CPUvsCPUCameraController : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CPUvsCPUCameraController instance;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotation;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRNonPlayerCamActions vrActions;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int setupScene;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float moveSpeed;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float turnAmount;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool canTurn;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layerMask;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool singleOnly;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float addTimer;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameController.FightState fightState;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int chosen;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int winner;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CharacterData char1;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CharacterData char2;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int wins;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x89EDE0", Offset = "0x89EDE0", VA = "0x89EDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x89EE54", Offset = "0x89EE54", VA = "0x89EE54")]
	public Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x89EED0", Offset = "0x89EED0", VA = "0x89EED0")]
	public void chooseChar(int team)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x89EF8C", Offset = "0x89EF8C", VA = "0x89EF8C")]
	public void checkWin()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x89F378", Offset = "0x89F378", VA = "0x89F378")]
	private void ask()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x89F48C", Offset = "0x89F48C", VA = "0x89F48C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x89FFF4", Offset = "0x89FFF4", VA = "0x89FFF4")]
	public CPUvsCPUCameraController()
	{
	}
}
[Token(Token = "0x2000020")]
public class CalibrateButtonsController : MonoBehaviour
{
	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CalibrateButtonsController instance;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuButtonContoller buttonPrefab;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StandPositionIndicator fbtPracticeButton;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StandPositionIndicator practiceButton;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonContainer;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AdvancedCalibrateOption[] options;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string instruct;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float spacing;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI txt;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string turnAction;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string waitAction;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FBTGhostController fbtGhost;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject fbtCircle;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool awaitingConfirm;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool holdingSpectate;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Camera miniCam;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject miniCamPic;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 miniCamOfffset_feet;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 miniCamOfffset_waist;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float textAlpha;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float adjusted;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x8A0008", Offset = "0x8A0008", VA = "0x8A0008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x8A034C", Offset = "0x8A034C", VA = "0x8A034C")]
	public void confirm(bool cancel = false)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x8A0C9C", Offset = "0x8A0C9C", VA = "0x8A0C9C")]
	private string replaceInstruct(string instruct)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x8A0FFC", Offset = "0x8A0FFC", VA = "0x8A0FFC")]
	private void buttonAction(MenuButtonContoller button)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x8A1670", Offset = "0x8A1670", VA = "0x8A1670")]
	public static bool showControllers()
	{
		return default(bool);
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x8A17E0", Offset = "0x8A17E0", VA = "0x8A17E0")]
	public void doTurnAction(float action)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x8A1F3C", Offset = "0x8A1F3C", VA = "0x8A1F3C")]
	public static bool doingFBTCalibrate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x8A0BE8", Offset = "0x8A0BE8", VA = "0x8A0BE8")]
	private void fadeInText()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x8A200C", Offset = "0x8A200C", VA = "0x8A200C")]
	private void doMiniCam()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x8A2458", Offset = "0x8A2458", VA = "0x8A2458")]
	private void Update()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x8A2AD4", Offset = "0x8A2AD4", VA = "0x8A2AD4")]
	public CalibrateButtonsController()
	{
	}
}
[Token(Token = "0x2000021")]
public class CalibrationData : MonoBehaviour
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float calibrateScale;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float calibrateArms;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float floorHeight;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float safetyCircleSize;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool notCalibrated;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 realignLeft;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 realignRight;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 realignLeft_rotation;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 realignRight_rotation;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x8A2B34", Offset = "0x8A2B34", VA = "0x8A2B34")]
	public void reset()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x8A2CC4", Offset = "0x8A2CC4", VA = "0x8A2CC4")]
	public string heightDisplay()
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x8A2E50", Offset = "0x8A2E50", VA = "0x8A2E50")]
	public string calibrateMessage()
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x8A2EAC", Offset = "0x8A2EAC", VA = "0x8A2EAC")]
	public CalibrationData()
	{
	}
}
[Token(Token = "0x2000022")]
public class CameraEyeLidsController : MonoBehaviour
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA80C", Offset = "0x4BA80C")]
	public float closedPerc;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float openAmount;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform topLid;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bottomLid;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA824", Offset = "0x4BA824")]
	public float blurAmount;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color concussColour;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color sicknessColour;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA83C", Offset = "0x4BA83C")]
	public float vignetteAmount;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA854", Offset = "0x4BA854")]
	public float redAmount;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA86C", Offset = "0x4BA86C")]
	public float sicknessAmount;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA884", Offset = "0x4BA884")]
	public float slowMoAmount;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color slowMoColor;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool bloodEnabled;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float bloodAngle;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshRenderer vignette;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshRenderer red;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer sickness;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer slowMo;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MeshRenderer concuss;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MeshRenderer blood;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x8A2F1C", Offset = "0x8A2F1C", VA = "0x8A2F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x8A2FA8", Offset = "0x8A2FA8", VA = "0x8A2FA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x8A3588", Offset = "0x8A3588", VA = "0x8A3588")]
	public CameraEyeLidsController()
	{
	}
}
[Token(Token = "0x2000023")]
public class CameraMirrorController : MonoBehaviour
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mirrorCam;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera following;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yOffset;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x8A3598", Offset = "0x8A3598", VA = "0x8A3598")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x8A359C", Offset = "0x8A359C", VA = "0x8A359C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x8A36D4", Offset = "0x8A36D4", VA = "0x8A36D4")]
	public CameraMirrorController()
	{
	}
}
[Token(Token = "0x2000024")]
public class CameraStabilize : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float moveSpeed;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float rotateSpeed;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion lastRotation;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera parentCam;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera thisCam;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool rotation;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool movement;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float speedMod;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x8A3850", Offset = "0x8A3850", VA = "0x8A3850")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x8A39A0", Offset = "0x8A39A0", VA = "0x8A39A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x8A3DD8", Offset = "0x8A3DD8", VA = "0x8A3DD8")]
	public CameraStabilize()
	{
	}
}
[Token(Token = "0x2000025")]
public class CameraSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CameraSwitcher instance;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpectateCanvasController canvas;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera spectateCamera;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpectateCamera[] cameras;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas spectatorCanvas;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI canvasLabel;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float labelAlpha;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int onCam;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int spectateMode;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float changeInterval;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 inBodyPos;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion inBodyRotation;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 oobBodyPos;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion oobBodyRotation;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool inBody;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA89C", Offset = "0x4BA89C")]
	public float inBodyPerc;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA8B4", Offset = "0x4BA8B4")]
	public float miniGamePerc;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float fadeTime;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform miniGamePosition;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool quick;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x8A3E44", Offset = "0x8A3E44", VA = "0x8A3E44")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x8A3EB0", Offset = "0x8A3EB0", VA = "0x8A3EB0")]
	private void switchCam()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x8A4174", Offset = "0x8A4174", VA = "0x8A4174")]
	public bool fixedAsPOV()
	{
		return default(bool);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x8A4258", Offset = "0x8A4258", VA = "0x8A4258")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x8A4D08", Offset = "0x8A4D08", VA = "0x8A4D08")]
	public CameraSwitcher()
	{
	}
}
[Token(Token = "0x2000026")]
public class CanvasController : MonoBehaviour
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CanvasController instance;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatingTextNew floatingTextNewPrefab;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<FloatingTextNew> floatingTexts;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float spacing;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x8A4D18", Offset = "0x8A4D18", VA = "0x8A4D18")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x8A0EFC", Offset = "0x8A0EFC", VA = "0x8A0EFC")]
	public static void addText(bool localise, string text, Vector3 position, Color color, float displayTime, [Optional] Transform attachTo)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x8A4D68", Offset = "0x8A4D68", VA = "0x8A4D68")]
	protected void addFloatingText(string text, Vector3 position, Color color, float displayTime, Transform attachTo)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x8A5034", Offset = "0x8A5034", VA = "0x8A5034")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x8A519C", Offset = "0x8A519C", VA = "0x8A519C")]
	public CanvasController()
	{
	}
}
[Token(Token = "0x2000027")]
public class ChamberController : MonoBehaviour
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject contents;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject contentsPrefab;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ChamberDoorController exit;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StandPositionIndicator resetButton;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isComplete;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool skip;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool perfect;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BA8CC", Offset = "0x4BA8CC")]
	public bool leftHandMeter;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool rightHandMeter;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int observerPosition;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x8A51B0", Offset = "0x8A51B0", VA = "0x8A51B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x8A52E0", Offset = "0x8A52E0", VA = "0x8A52E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x8A5340", Offset = "0x8A5340", VA = "0x8A5340")]
	public bool inChamber()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x8A53A8", Offset = "0x8A53A8", VA = "0x8A53A8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x8A5484", Offset = "0x8A5484", VA = "0x8A5484")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x8A5488", Offset = "0x8A5488", VA = "0x8A5488")]
	public ChamberController()
	{
	}
}
[Token(Token = "0x2000028")]
public class ChamberDoorController : MonoBehaviour
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float openZ;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float closedZ;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool open;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool exit;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float openSpeed;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform door;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ChamberController chamber;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool openOnProximity;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem particles;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x8A5498", Offset = "0x8A5498", VA = "0x8A5498")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x8A5594", Offset = "0x8A5594", VA = "0x8A5594")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x8A5598", Offset = "0x8A5598", VA = "0x8A5598")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x8A59F0", Offset = "0x8A59F0", VA = "0x8A59F0")]
	public ChamberDoorController()
	{
	}
}
[Token(Token = "0x2000029")]
public class ChamberExit : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timer;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool hasQuit;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x8A5A10", Offset = "0x8A5A10", VA = "0x8A5A10")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x8A5A8C", Offset = "0x8A5A8C", VA = "0x8A5A8C")]
	private void quit()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x8A5C0C", Offset = "0x8A5C0C", VA = "0x8A5C0C")]
	public ChamberExit()
	{
	}
}
[Token(Token = "0x200002A")]
public class ChamberFighter : MonoBehaviour
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChamberController chamber;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int characterID;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameCharacter character;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool setup;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float showDistance;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fighterHealth;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x8A5C1C", Offset = "0x8A5C1C", VA = "0x8A5C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x8A5C20", Offset = "0x8A5C20", VA = "0x8A5C20")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x8A5F24", Offset = "0x8A5F24", VA = "0x8A5F24")]
	public ChamberFighter()
	{
	}
}
[Token(Token = "0x200002B")]
public class ChambersController : MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ChambersController instance;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChamberController[] chambers;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasEntered;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool hasQuit;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool refreshTips;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int playerInChamber;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int prevChamber;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int completed;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] instructionSounds;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject observer;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] observerPositions;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool hasJumped;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool hasTurned;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ChamberDoorController startDoor;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ChamberDoorController endDoor;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TipCanvasController[] tips;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpawnPointController spawnPoint;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x8A5F38", Offset = "0x8A5F38", VA = "0x8A5F38")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x8A60A8", Offset = "0x8A60A8", VA = "0x8A60A8")]
	public void setup()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x8A63C4", Offset = "0x8A63C4", VA = "0x8A63C4")]
	private void checkDuplicate(MeshRenderer mesh, MeshRenderer[] mr)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x8A6264", Offset = "0x8A6264", VA = "0x8A6264")]
	public void setObserverPosition(int pos)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x8A67C0", Offset = "0x8A67C0", VA = "0x8A67C0")]
	public void StartTip()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x8A687C", Offset = "0x8A687C", VA = "0x8A687C")]
	private void startVoice()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x8A6A74", Offset = "0x8A6A74", VA = "0x8A6A74")]
	public void completeVoice()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x8A6B04", Offset = "0x8A6B04", VA = "0x8A6B04")]
	private void doCompleteVoice()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x8A6C80", Offset = "0x8A6C80", VA = "0x8A6C80")]
	public void nextVoice()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x8A6CD4", Offset = "0x8A6CD4", VA = "0x8A6CD4")]
	private void doNextVoice()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x8A6E74", Offset = "0x8A6E74", VA = "0x8A6E74")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x8A7478", Offset = "0x8A7478", VA = "0x8A7478")]
	public ChambersController()
	{
	}
}
[Token(Token = "0x200002C")]
public class CharacterButtonController : MonoBehaviour
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mesh;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int materialID;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture defaultTexture;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string textureName;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RawImage pic;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image circle;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image tick;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite tick_green;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite tick_grey;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite circle_green;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite circle_grey;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MenuButtonContoller menuButton;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x8A7488", Offset = "0x8A7488", VA = "0x8A7488")]
	public void setTo(CharacterData character)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x8A7D48", Offset = "0x8A7D48", VA = "0x8A7D48")]
	public void setTo(LocationData location)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x8A7E48", Offset = "0x8A7E48", VA = "0x8A7E48")]
	public void setTo(Material material)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x8A7EE4", Offset = "0x8A7EE4", VA = "0x8A7EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x8A7F38", Offset = "0x8A7F38", VA = "0x8A7F38")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x8A8064", Offset = "0x8A8064", VA = "0x8A8064")]
	public CharacterButtonController()
	{
	}
}
[Token(Token = "0x200002D")]
public class CharacterCustomiser : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomisableMaterial[] materials;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject meshContainer;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CustomizableCharacterItem[] items;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer[] skinnedMeshRenderers;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x8A96A4", Offset = "0x8A96A4", VA = "0x8A96A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x8A9960", Offset = "0x8A9960", VA = "0x8A9960")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x8A9A1C", Offset = "0x8A9A1C", VA = "0x8A9A1C")]
	public CharacterCustomiser()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class CharacterData : Exportable
{
	[Token(Token = "0x200002F")]
	public enum Race
	{
		[Token(Token = "0x40001EE")]
		Chinese,
		[Token(Token = "0x40001EF")]
		Japanese,
		[Token(Token = "0x40001F0")]
		Western
	}

	[Token(Token = "0x2000030")]
	public enum DifficultyTier
	{
		[Token(Token = "0x40001F2")]
		Easy,
		[Token(Token = "0x40001F3")]
		Medium,
		[Token(Token = "0x40001F4")]
		Hard,
		[Token(Token = "0x40001F5")]
		Boss,
		[Token(Token = "0x40001F6")]
		SubBoss,
		[Token(Token = "0x40001F7")]
		FinalBoss
	}

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pluralName;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int id;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool lockedByDefault;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int characterPack;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool live;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool wacky;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BA904", Offset = "0x4BA904")]
	public bool female;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool young;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Race race;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BA93C", Offset = "0x4BA93C")]
	public string bio;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BA954", Offset = "0x4BA954")]
	public string ending;

	[NonSerialized]
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture thumbnail;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RigidBodies puppet;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BA96C", Offset = "0x4BA96C")]
	public int amount;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA9A4", Offset = "0x4BA9A4")]
	public float willgoLow;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float heightScale;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float healthPerc;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string friend;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string otherFriend;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LocationData.HomeLocation home;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public LocationData.HomeLocation defaultHome;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool includeInDemo;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string fightStyleName;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HandPosition.Position secondaryPalmPosition;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CustomHandPosition[] customHandPositions;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string specialMoveName;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string perkName;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string weaknessName;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public PerkData perk;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PerkData weakness;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BA9BC", Offset = "0x4BA9BC")]
	public DifficultyTier difficultyTier;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BA9F4", Offset = "0x4BA9F4")]
	public float kickFrequency;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int unlockDifficultyRequirement;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string requiresCustomUnlock;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string onlyInMode;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool includeInMainGame;

	[NonSerialized]
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int fightingStyle;

	[NonSerialized]
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int specialMove;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Color healthBarColour;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool test;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public CharacterVoice voice;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int fightsFinished;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int sessionFights;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool playedAs;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BAA0C", Offset = "0x4BAA0C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAA0C", Offset = "0x4BAA0C")]
	public float difficulty;

	[NonSerialized]
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float rndOrder;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int hasStars;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool unlocked;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public int unlockStars;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int completedAllLevel;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int beatenBossLevel;

	[NonSerialized]
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SavedCompletedGame completedGameData;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x8A9A24", Offset = "0x8A9A24", VA = "0x8A9A24")]
	public void checkLocalise()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x8A7C38", Offset = "0x8A7C38", VA = "0x8A7C38")]
	public string unlockMessage()
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x8A9BD4", Offset = "0x8A9BD4", VA = "0x8A9BD4")]
	public string pluralIfNeeded()
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x8A9C44", Offset = "0x8A9C44", VA = "0x8A9C44")]
	public void localise()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x8A9E04", Offset = "0x8A9E04", VA = "0x8A9E04")]
	private void doCleanUp()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x8A9E38", Offset = "0x8A9E38", VA = "0x8A9E38")]
	private string cleanUp(string txt)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x8A9F48", Offset = "0x8A9F48", VA = "0x8A9F48")]
	public void setup(GameData data, MoveRecorder recorder)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x8AA2FC", Offset = "0x8AA2FC", VA = "0x8AA2FC")]
	public string imgName()
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x8AA378", Offset = "0x8AA378", VA = "0x8AA378")]
	public int getUnlockStars()
	{
		return default(int);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x8AA438", Offset = "0x8AA438", VA = "0x8AA438")]
	public bool hasPerk(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x8AA484", Offset = "0x8AA484", VA = "0x8AA484")]
	public bool isNinja()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x8AA4D4", Offset = "0x8AA4D4", VA = "0x8AA4D4")]
	public float perkMod(string name, string characterName)
	{
		return default(float);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x8AA75C", Offset = "0x8AA75C", VA = "0x8AA75C")]
	public float perkMod(string name, Vector3 hitPoint)
	{
		return default(float);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x8AAB20", Offset = "0x8AAB20", VA = "0x8AAB20")]
	public CharacterData getFriend(bool other)
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x8AABE4", Offset = "0x8AABE4", VA = "0x8AABE4")]
	public bool seeable()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x8A7888", Offset = "0x8A7888", VA = "0x8A7888")]
	public bool playable(bool allowUnlockedBosses, bool blockLevelLocked, bool allowSpecials = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x8AAD74", Offset = "0x8AAD74", VA = "0x8AAD74")]
	public LocationData getLocation()
	{
		return null;
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x8AADF8", Offset = "0x8AADF8", VA = "0x8AADF8")]
	public bool beaten()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x8AAE08", Offset = "0x8AAE08", VA = "0x8AAE08")]
	public int getFightingStyleID()
	{
		return default(int);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x8AAE10", Offset = "0x8AAE10", VA = "0x8AAE10")]
	public int getSpecialMoveID()
	{
		return default(int);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x8AAE18", Offset = "0x8AAE18", VA = "0x8AAE18")]
	public float moveSpeedPerc()
	{
		return default(float);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x8AAE28", Offset = "0x8AAE28", VA = "0x8AAE28")]
	public float getRndOrder()
	{
		return default(float);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x8AAF68", Offset = "0x8AAF68", VA = "0x8AAF68")]
	public SpecialMoveData specialMoveData(bool isPlayer)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x8AB004", Offset = "0x8AB004", VA = "0x8AB004")]
	public void getThumb()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x8AB19C", Offset = "0x8AB19C", VA = "0x8AB19C")]
	public void reset()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x8AB1DC", Offset = "0x8AB1DC", VA = "0x8AB1DC")]
	public CharacterData()
	{
	}
}
[Token(Token = "0x2000031")]
public class CharacterEditor : StandButtonsController
{
	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x8AB240", Offset = "0x8AB240", VA = "0x8AB240")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x8AB33C", Offset = "0x8AB33C", VA = "0x8AB33C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x8AB340", Offset = "0x8AB340", VA = "0x8AB340")]
	public CharacterEditor()
	{
	}
}
[Token(Token = "0x2000032")]
public class CharacterEditorButtons : MonoBehaviour
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterEditorPanel panel;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MiniButtonController miniButtonPrefab;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform buttonContainer;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MiniButtonController backButton;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 spacing;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 rows;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<MiniButtonController> buttons;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string onMenu;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int onID;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x8AB348", Offset = "0x8AB348", VA = "0x8AB348")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x8AB414", Offset = "0x8AB414", VA = "0x8AB414")]
	public void showMenu(string name = "")
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x8AC2B0", Offset = "0x8AC2B0", VA = "0x8AC2B0")]
	private void layoutButtons()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x8AC130", Offset = "0x8AC130", VA = "0x8AC130")]
	private MiniButtonController addButton(string label, int id, string action, bool selected)
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x8AC400", Offset = "0x8AC400", VA = "0x8AC400")]
	private void onPress(MiniButtonController button)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x8AC9F0", Offset = "0x8AC9F0", VA = "0x8AC9F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x8AC9F4", Offset = "0x8AC9F4", VA = "0x8AC9F4")]
	public CharacterEditorButtons()
	{
	}
}
[Token(Token = "0x2000033")]
public class CharacterEditorPanel : MonoBehaviour
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CharacterEditorPanel instance;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacterForPlinthController miniPuppet;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterEditorButtons buttonPanel;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI info;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshCollider backPanel;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterData customCharacter;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterCustomiser characterCustomiser;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CharacterCustomiser characterCustomiserPlayer;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip clickSound;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] pointFingers;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float[] pressFingers;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float pressTimer;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x7967FC", Offset = "0x7967FC", VA = "0x7967FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x796A90", Offset = "0x796A90", VA = "0x796A90")]
	public static bool pointing(int hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x796B74", Offset = "0x796B74", VA = "0x796B74")]
	private void setup()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x796BE4", Offset = "0x796BE4", VA = "0x796BE4")]
	private void setup2()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x796CB0", Offset = "0x796CB0", VA = "0x796CB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x797128", Offset = "0x797128", VA = "0x797128")]
	public CharacterEditorPanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class CharacterEffect
{
	[Token(Token = "0x2000035")]
	public enum Effect
	{
		[Token(Token = "0x400021D")]
		None,
		[Token(Token = "0x400021E")]
		IronArmor,
		[Token(Token = "0x400021F")]
		Sickness,
		[Token(Token = "0x4000220")]
		Weakness,
		[Token(Token = "0x4000221")]
		L_ArmDisabled,
		[Token(Token = "0x4000222")]
		R_ArmDisabled,
		[Token(Token = "0x4000223")]
		Slowness,
		[Token(Token = "0x4000224")]
		Blinded,
		[Token(Token = "0x4000225")]
		Paralysed,
		[Token(Token = "0x4000226")]
		SpeedHands,
		[Token(Token = "0x4000227")]
		CantWalk,
		[Token(Token = "0x4000228")]
		QuickWalk,
		[Token(Token = "0x4000229")]
		Pain,
		[Token(Token = "0x400022A")]
		Ghost,
		[Token(Token = "0x400022B")]
		Winded,
		[Token(Token = "0x400022C")]
		L_ArmNumb,
		[Token(Token = "0x400022D")]
		R_ArmNumb,
		[Token(Token = "0x400022E")]
		BlindLite,
		[Token(Token = "0x400022F")]
		SlowWalk,
		[Token(Token = "0x4000230")]
		SpeedKick,
		[Token(Token = "0x4000231")]
		InterceptingFist,
		[Token(Token = "0x4000232")]
		Strength,
		[Token(Token = "0x4000233")]
		ViperLeavesCave,
		[Token(Token = "0x4000234")]
		ScissorKick,
		[Token(Token = "0x4000235")]
		Drunk,
		[Token(Token = "0x4000236")]
		TigerClaws,
		[Token(Token = "0x4000237")]
		ShadowBoxing,
		[Token(Token = "0x4000238")]
		IronFists,
		[Token(Token = "0x4000239")]
		Stunned,
		[Token(Token = "0x400023A")]
		RapidPunch,
		[Token(Token = "0x400023B")]
		HighImpact,
		[Token(Token = "0x400023C")]
		HardHands,
		[Token(Token = "0x400023D")]
		OneHitKO,
		[Token(Token = "0x400023E")]
		Cursed
	}

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Effect effect;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amount;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SlowMo slowMo;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startTime;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CharacterEffectData effectData;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpecialMoveAttachedEffect visualEffect;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool timeReduce;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool preventSpecialCharge;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public HandPosition.Position l_handPosition;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandPosition.Position r_handPosition;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 startPos;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float perc;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool notified;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x797130", Offset = "0x797130", VA = "0x797130")]
	public CharacterEffect(Vector3 startPos, Effect effect, float amount, bool isTest)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x797274", Offset = "0x797274", VA = "0x797274")]
	public string dontDeplete(bool isPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x7972E4", Offset = "0x7972E4", VA = "0x7972E4")]
	public float edgePerc(float smoothTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x79733C", Offset = "0x79733C", VA = "0x79733C")]
	public float edgePerc(float smoothTime, bool start, bool end)
	{
		return default(float);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x7973B0", Offset = "0x7973B0", VA = "0x7973B0")]
	public float existed()
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class CharacterEffectData
{
	[Token(Token = "0x2000037")]
	public enum ExtraHaptics
	{
		[Token(Token = "0x4000253")]
		None,
		[Token(Token = "0x4000254")]
		Arms,
		[Token(Token = "0x4000255")]
		Feet
	}

	[Token(Token = "0x2000038")]
	public enum AIType
	{
		[Token(Token = "0x4000257")]
		Normal,
		[Token(Token = "0x4000258")]
		ChargeIn,
		[Token(Token = "0x4000259")]
		RunAway
	}

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterEffect.Effect effect;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite icon;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpecialMoveAttachedEffect onStartEffect;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpecialMoveAttachedEffect onEndEffect;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip startSound;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip endSound;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip hitSound;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VestHapticClip activateHaptic;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ExtraHaptics extraHaptics;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip overrideSwipeSound;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimeSlow timeSlow;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool endViaHit;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public AIType whenHasEffect;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AIType whenOpponentHasEffect;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string dontDepleteIfHasCheat;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string dontDepleteIfHasCheat_enemy;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool capped;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x7973DC", Offset = "0x7973DC", VA = "0x7973DC")]
	public void setup()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x7973E0", Offset = "0x7973E0", VA = "0x7973E0")]
	public void localise()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x797434", Offset = "0x797434", VA = "0x797434")]
	public bool kickEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x797454", Offset = "0x797454", VA = "0x797454")]
	public CharacterEffectData()
	{
	}
}
[Token(Token = "0x2000039")]
public class CharacterGridController : MonoBehaviour
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterGridPicController picPrefab;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 size;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x79745C", Offset = "0x79745C", VA = "0x79745C")]
	private void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x797684", Offset = "0x797684", VA = "0x797684")]
	private void Update()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x797688", Offset = "0x797688", VA = "0x797688")]
	public CharacterGridController()
	{
	}
}
[Token(Token = "0x200003A")]
public class CharacterGridPicController : MonoBehaviour
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI label;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage pic;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x797630", Offset = "0x797630", VA = "0x797630")]
	public void SetTo(CharacterData character)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x797690", Offset = "0x797690", VA = "0x797690")]
	public CharacterGridPicController()
	{
	}
}
[Token(Token = "0x200003B")]
public class CharacterHaptics : MonoBehaviour
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CharacterHaptics instance;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAA60", Offset = "0x4BAA60")]
	public VestHapticClip haptic_break_l;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VestHapticClip haptic_break_r;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VestHapticClip dash;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VestHapticClip jump;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VestHapticClip collapse;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VestHapticClip knockDown;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VestHapticClip heartBeat;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VestHapticClip heartBeatFast;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VestHapticClip headHit_body;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VestHapticClip kicked;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VestHapticClip punched;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAA98", Offset = "0x4BAA98")]
	public FeetHapticClip[] kick;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FeetHapticClip[] kick_miss;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FeetHapticClip[] step;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FeetHapticClip[] jumpFeet;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FeetHapticClip[] landFeet;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public FeetHapticClip[] feet_specialActivate;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ArmsHapticClip[] feet_effectHaptics;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAAD0", Offset = "0x4BAAD0")]
	public HeadHapticClip[] headHit_headFront;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public HeadHapticClip headHit_headBack;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAB08", Offset = "0x4BAB08")]
	public ArmsHapticClip[] arms_click;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ArmsHapticClip[] arms_outerBlock;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ArmsHapticClip[] arms_middleBlock;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ArmsHapticClip[] arms_innerBlock;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ArmsHapticClip[] arms_punch;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ArmsHapticClip[] arms_break;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ArmsHapticClip arms_death;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ArmsHapticClip[] arms_specialActivate;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ArmsHapticClip[] arms_specialActivate_projectile;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ArmsHapticClip[] arms_specialHit;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ArmsHapticClip[] arms_effectHaptics;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool alwaysHaptics;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float yOffsetMultiplier;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float heartBeatTimer;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BAB40", Offset = "0x4BAB40")]
	public float heartBeatPerc;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string connected;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool hasHead;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x797698", Offset = "0x797698", VA = "0x797698")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x79770C", Offset = "0x79770C", VA = "0x79770C")]
	public void checkConnected()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x797948", Offset = "0x797948", VA = "0x797948")]
	public void headHaptic(float power, float angle)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x797A44", Offset = "0x797A44", VA = "0x797A44")]
	public static bool allowHaptics(GameCharacter gameCharacter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x797AC4", Offset = "0x797AC4", VA = "0x797AC4")]
	public static void hitAngle(out float angle, out float height, Hittable generalHitPoint, Vector3 hitLocation)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x797CD4", Offset = "0x797CD4", VA = "0x797CD4")]
	public static void hitAngle(out float angle, Hittable headHitPoint, Vector3 hitLocation)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x797E20", Offset = "0x797E20", VA = "0x797E20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x797F9C", Offset = "0x797F9C", VA = "0x797F9C")]
	public CharacterHaptics()
	{
	}
}
[Token(Token = "0x200003C")]
public class CharacterMover : MonoBehaviour
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter gameCharacter;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAB58", Offset = "0x4BAB58")]
	public float walkSpeed;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float dashSpeed;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dashDuration;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float dashTime;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float nextDashTime;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 dashDirection;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAB90", Offset = "0x4BAB90")]
	public Vector3 velocity;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 moving;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 actuallyMoving;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 slide;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float colliderPerc;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float centreY;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask scenery;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool debug;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject debugGameObject;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float y;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public LayerMask floorMask;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x797FB0", Offset = "0x797FB0", VA = "0x797FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x798004", Offset = "0x798004", VA = "0x798004")]
	private void reduceEffects()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x7981A8", Offset = "0x7981A8", VA = "0x7981A8")]
	public bool dashing()
	{
		return default(bool);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x7981B8", Offset = "0x7981B8", VA = "0x7981B8")]
	public bool canDash()
	{
		return default(bool);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x79822C", Offset = "0x79822C", VA = "0x79822C")]
	public void dash(Vector3 direction)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x798318", Offset = "0x798318", VA = "0x798318")]
	private void updateColliderSize()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x7984F4", Offset = "0x7984F4", VA = "0x7984F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x798A3C", Offset = "0x798A3C", VA = "0x798A3C")]
	public CharacterMover()
	{
	}
}
[Token(Token = "0x200003D")]
public class CharacterNumDependant : MonoBehaviour
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodies rigidbodies;

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x798A68", Offset = "0x798A68", VA = "0x798A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x798BF8", Offset = "0x798BF8", VA = "0x798BF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x798BFC", Offset = "0x798BFC", VA = "0x798BFC")]
	public CharacterNumDependant()
	{
	}
}
[Token(Token = "0x200003E")]
public class CharacterPickerController : StandButtonsController
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MenuButtonContoller buttonPrefab;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MenuButtonContoller buttonPrefab_text;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float radius;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float arc;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool setup;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int rows;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform buttonContainer;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<MenuButtonContoller> buttons;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Material disabledMaterial;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public StoryController story;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool showingButtons;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float rotationSpeed;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject heading;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioSource audioSource;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioClip disabledHitSound;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float nextVoice;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int perRow;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool randomCostume;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool doneMusic;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	public bool instantMove;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x798C04", Offset = "0x798C04", VA = "0x798C04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x799A8C", Offset = "0x799A8C", VA = "0x799A8C")]
	private void doMusic()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x799AD4", Offset = "0x799AD4", VA = "0x799AD4")]
	private void randomCharacter(MenuButtonContoller button)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x799BCC", Offset = "0x799BCC", VA = "0x799BCC")]
	private int doSort(CharacterData char1, CharacterData char2)
	{
		return default(int);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x799CD8", Offset = "0x799CD8", VA = "0x799CD8")]
	private void voice()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x799D34", Offset = "0x799D34", VA = "0x799D34")]
	private void disableAll()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x799D38", Offset = "0x799D38", VA = "0x799D38")]
	private void enableAll()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x799E4C", Offset = "0x799E4C", VA = "0x799E4C")]
	private void cancel(MenuButtonContoller b)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x799E74", Offset = "0x799E74", VA = "0x799E74")]
	private void selectChar(MenuButtonContoller button)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x79A080", Offset = "0x79A080", VA = "0x79A080")]
	private void Update()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x79A5C0", Offset = "0x79A5C0", VA = "0x79A5C0")]
	public CharacterPickerController()
	{
	}
}
[Token(Token = "0x200003F")]
public class CharacterPortraitController : StandButtonsController
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float timer;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int onChar;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int onStage;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int onCam;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameCharacter character;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int onPath;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string[] paths;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int[] sizes;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TakePhoto[] cameras;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool done;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<CharacterData> queue;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string folder;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x79A5E8", Offset = "0x79A5E8", VA = "0x79A5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x79A8FC", Offset = "0x79A8FC", VA = "0x79A8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x79AE94", Offset = "0x79AE94", VA = "0x79AE94")]
	public CharacterPortraitController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class CharacterVoice
{
	[Serializable]
	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9850", Offset = "0x4B9850")]
	private sealed class <>c
	{
		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<VoiceData> <>9__3_0;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<VoiceData> <>9__4_0;

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x75ECEC", Offset = "0x75ECEC", VA = "0x75ECEC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x75ECF4", Offset = "0x75ECF4", VA = "0x75ECF4")]
		internal int <IntroPhrase>b__3_0(VoiceData v1, VoiceData v2)
		{
			return default(int);
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x75EDA8", Offset = "0x75EDA8", VA = "0x75EDA8")]
		internal int <PhraseOfType>b__4_0(VoiceData v1, VoiceData v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BABC8", Offset = "0x4BABC8")]
	public float volume;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VoiceData[] phrases;

	[NonSerialized]
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterData characterData;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x79AF0C", Offset = "0x79AF0C", VA = "0x79AF0C")]
	public VoiceData IntroPhrase(bool returning)
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x79B1D4", Offset = "0x79B1D4", VA = "0x79B1D4")]
	public VoiceData PhraseOfType(VoiceData.Type type, float randomAmount)
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x79B534", Offset = "0x79B534", VA = "0x79B534")]
	public CharacterVoice()
	{
	}
}
[Token(Token = "0x2000042")]
public class ChiBallController : ProjectileController
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Light light;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float intensity;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform[] transforms;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float forwardDist;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ParticleSystem summon;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public ParticleSystem[] handSummon;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public ParticleSystem burst;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform scalable;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform handParticles;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float life;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Quaternion lastAngle;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float nextImpact;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 lastPos;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool released;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Collider lastCollider;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x79B5B8", Offset = "0x79B5B8", VA = "0x79B5B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x79B8B4", Offset = "0x79B8B4", VA = "0x79B8B4", Slot = "4")]
	public override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x79B9BC", Offset = "0x79B9BC", VA = "0x79B9BC")]
	public Vector3 targetPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x79BAE4", Offset = "0x79BAE4", VA = "0x79BAE4")]
	public void earlyRelease(Vector3 fwd)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x79BBFC", Offset = "0x79BBFC", VA = "0x79BBFC")]
	private bool inView()
	{
		return default(bool);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x79BCE0", Offset = "0x79BCE0", VA = "0x79BCE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x79C614", Offset = "0x79C614", VA = "0x79C614")]
	public ChiBallController()
	{
	}
}
[Token(Token = "0x2000043")]
public class DelayedPlay : MonoBehaviour
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x7A8EB0", Offset = "0x7A8EB0", VA = "0x7A8EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x7A8F04", Offset = "0x7A8F04", VA = "0x7A8F04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x7A8F6C", Offset = "0x7A8F6C", VA = "0x7A8F6C")]
	public DelayedPlay()
	{
	}
}
[Token(Token = "0x2000044")]
public class FadeEffect : MonoBehaviour
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer renderer;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string mainTexture;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mainOffset;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float multiply;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 mainSpeed;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x84B3CC", Offset = "0x84B3CC", VA = "0x84B3CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x84B3D0", Offset = "0x84B3D0", VA = "0x84B3D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x84B498", Offset = "0x84B498", VA = "0x84B498")]
	public FadeEffect()
	{
	}
}
[Token(Token = "0x2000045")]
public class FadeInEmmision : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string colorName;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color onColor;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fadeOutDelay;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float changeSpeed;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fadeOutSpeed;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool fadingIn;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BABE0", Offset = "0x4BABE0")]
	public float glow;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x84B4F4", Offset = "0x84B4F4", VA = "0x84B4F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x84B5B4", Offset = "0x84B5B4", VA = "0x84B5B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x84B6F8", Offset = "0x84B6F8", VA = "0x84B6F8")]
	public FadeInEmmision()
	{
	}
}
[Token(Token = "0x2000046")]
public class FadeInLight : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light light;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeOutDelay;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxIntensity;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float changeSpeed;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeOutSpeed;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool fadingIn;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x84B758", Offset = "0x84B758", VA = "0x84B758")]
	private void Start()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x84B7B4", Offset = "0x84B7B4", VA = "0x84B7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x84B8B8", Offset = "0x84B8B8", VA = "0x84B8B8")]
	public FadeInLight()
	{
	}
}
[Token(Token = "0x2000047")]
public class GoToScene : MonoBehaviour
{
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sceneID;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float nextSceneDelay;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x9306C0", Offset = "0x9306C0", VA = "0x9306C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x930714", Offset = "0x930714", VA = "0x930714")]
	private void nextScene()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x93077C", Offset = "0x93077C", VA = "0x93077C")]
	public GoToScene()
	{
	}
}
[Token(Token = "0x2000048")]
public class ReflectionProbeFlicker : MonoBehaviour
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxIntensity;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float onTime;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x7D2BD8", Offset = "0x7D2BD8", VA = "0x7D2BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x7D2C2C", Offset = "0x7D2C2C", VA = "0x7D2C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x7D2D14", Offset = "0x7D2D14", VA = "0x7D2D14")]
	public ReflectionProbeFlicker()
	{
	}
}
[Token(Token = "0x2000049")]
public class SpinTransform : MonoBehaviour
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 spin;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x8E3EAC", Offset = "0x8E3EAC", VA = "0x8E3EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x8E3EB0", Offset = "0x8E3EB0", VA = "0x8E3EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x8E3F70", Offset = "0x8E3F70", VA = "0x8E3F70")]
	public SpinTransform()
	{
	}
}
[Token(Token = "0x200004A")]
public class TurnWithCamera : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mainCamera;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion targetAngle;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 targetPosition;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float rotateSpeed;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float moveSpeed;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x769EB4", Offset = "0x769EB4", VA = "0x769EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x769FD0", Offset = "0x769FD0", VA = "0x769FD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x76A294", Offset = "0x76A294", VA = "0x76A294")]
	public TurnWithCamera()
	{
	}
}
[Token(Token = "0x200004B")]
public class ColliderCheck : MonoBehaviour
{
	[Token(Token = "0x6000158")]
	[Address(RVA = "0x79C630", Offset = "0x79C630", VA = "0x79C630")]
	public ColliderCheck()
	{
	}
}
[Token(Token = "0x200004C")]
public class ContentBreakAllController : MonoBehaviour
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ChamberController chamber;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Breakable[] breakables;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool allBroken;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool r_showPointer;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool l_showPointer;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x79CF88", Offset = "0x79CF88", VA = "0x79CF88")]
	private void Start()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x79D054", Offset = "0x79D054", VA = "0x79D054")]
	private void Update()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x79D908", Offset = "0x79D908", VA = "0x79D908")]
	public ContentBreakAllController()
	{
	}
}
[Token(Token = "0x200004D")]
public class ControllerArrowController : MonoBehaviour
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] arrows;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x79D910", Offset = "0x79D910", VA = "0x79D910")]
	private void Start()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x79D914", Offset = "0x79D914", VA = "0x79D914")]
	public void show(bool up, bool down, bool left, bool right)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x79DA08", Offset = "0x79DA08", VA = "0x79DA08")]
	public void hide()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x79DA30", Offset = "0x79DA30", VA = "0x79DA30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x79DA34", Offset = "0x79DA34", VA = "0x79DA34")]
	public ControllerArrowController()
	{
	}
}
[Token(Token = "0x200004E")]
public class ControllerRealign : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 origPos;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion origRot;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastPos;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion lastRotation;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isLeft;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float maxDist;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x79DC7C", Offset = "0x79DC7C", VA = "0x79DC7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x79DE3C", Offset = "0x79DE3C", VA = "0x79DE3C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x79DF58", Offset = "0x79DF58", VA = "0x79DF58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x79E3CC", Offset = "0x79E3CC", VA = "0x79E3CC")]
	public ControllerRealign()
	{
	}
}
[Token(Token = "0x200004F")]
public class ControllerTipController : MonoBehaviour
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hide;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color onColour;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float colourPerc;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform head;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ButtonPositionsController rController;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ButtonPositionsController lController;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRRig rig;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string currentLabel;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string showingName;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VRControlTip showing;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OVRInput.Button fistTipActions;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x79E41C", Offset = "0x79E41C", VA = "0x79E41C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x79E470", Offset = "0x79E470", VA = "0x79E470")]
	public void refresh()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x79E54C", Offset = "0x79E54C", VA = "0x79E54C")]
	public void showLeftArrows(bool up, bool down, bool left, bool right)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x79E550", Offset = "0x79E550", VA = "0x79E550")]
	public void showRightArrows(bool up, bool down, bool left, bool right)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x79E554", Offset = "0x79E554", VA = "0x79E554")]
	public void tip(VRControlTip controlTip, float time)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x79E648", Offset = "0x79E648", VA = "0x79E648")]
	private void clearArrows()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x79E81C", Offset = "0x79E81C", VA = "0x79E81C")]
	public void clearFistTip()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x79E918", Offset = "0x79E918", VA = "0x79E918")]
	public void clearShowing()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x79EA04", Offset = "0x79EA04", VA = "0x79EA04")]
	public void fistTip()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x79E64C", Offset = "0x79E64C", VA = "0x79E64C")]
	public void tip(OVRInput.Button actions, OVRInput.Button lh_actions, string label, float time = 10f)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x79E820", Offset = "0x79E820", VA = "0x79E820")]
	public void clearTip()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x79EA5C", Offset = "0x79EA5C", VA = "0x79EA5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x79F454", Offset = "0x79F454", VA = "0x79F454")]
	public ControllerTipController()
	{
	}
}
[Token(Token = "0x2000050")]
public class ControllerTipTextController : MonoBehaviour
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ControllerTipTextController instance;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI tip;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer[] lines;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x79F490", Offset = "0x79F490", VA = "0x79F490")]
	private void Start()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x79ED54", Offset = "0x79ED54", VA = "0x79ED54")]
	public void UpdatePosition(ControllerTipController tip)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x79F4E0", Offset = "0x79F4E0", VA = "0x79F4E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x79F4E4", Offset = "0x79F4E4", VA = "0x79F4E4")]
	public ControllerTipTextController()
	{
	}
}
[Token(Token = "0x2000051")]
public class CopyBlinkFromActive : MonoBehaviour
{
	[Token(Token = "0x6000176")]
	[Address(RVA = "0x79F4EC", Offset = "0x79F4EC", VA = "0x79F4EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x79F4F0", Offset = "0x79F4F0", VA = "0x79F4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x79F610", Offset = "0x79F610", VA = "0x79F610")]
	public CopyBlinkFromActive()
	{
	}
}
[Token(Token = "0x2000052")]
public class CopyPuppets : MonoBehaviour
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodies source;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RigidBodies[] copyTo;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MaterialSwap[] materials;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip swipe;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] hideFromVRCam;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x79F618", Offset = "0x79F618", VA = "0x79F618")]
	private void Start()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x7A0810", Offset = "0x7A0810", VA = "0x7A0810")]
	private void swapMaterials(RigidBodies target)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x7A117C", Offset = "0x7A117C", VA = "0x7A117C")]
	private string norm(string name)
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x7A1360", Offset = "0x7A1360", VA = "0x7A1360")]
	private Muscle getMuscleByName(Muscle[] muscles, string name, string puppetName)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x7A1768", Offset = "0x7A1768", VA = "0x7A1768")]
	private void removeSwooshes(GameObject go, string name)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x79F78C", Offset = "0x79F78C", VA = "0x79F78C")]
	private void copy(RigidBodies target)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x7A1988", Offset = "0x7A1988", VA = "0x7A1988")]
	public CopyPuppets()
	{
	}
}
[Token(Token = "0x2000053")]
public class CreditTyper : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] credits;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txt;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int perPage;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int onPage;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BABF8", Offset = "0x4BABF8")]
	public float timer;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float interval;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int typePos;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float typeTimer;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string toType;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x7A19DC", Offset = "0x7A19DC", VA = "0x7A19DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x7A1AA4", Offset = "0x7A1AA4", VA = "0x7A1AA4")]
	private void showPage(int page)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x7A1BE0", Offset = "0x7A1BE0", VA = "0x7A1BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x7A1F20", Offset = "0x7A1F20", VA = "0x7A1F20")]
	public CreditTyper()
	{
	}
}
[Token(Token = "0x2000054")]
public class CrowdAnimation : MonoBehaviour
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float clapTime;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int idle;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool setup;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer billboard;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bodyParts;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CrowdPersonMaterials materials;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x7A1F38", Offset = "0x7A1F38", VA = "0x7A1F38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x7A2070", Offset = "0x7A2070", VA = "0x7A2070")]
	private void fr()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x7A221C", Offset = "0x7A221C", VA = "0x7A221C")]
	public void clap()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x7A2250", Offset = "0x7A2250", VA = "0x7A2250")]
	private void Update()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x7A22DC", Offset = "0x7A22DC", VA = "0x7A22DC")]
	public CrowdAnimation()
	{
	}
}
[Token(Token = "0x2000055")]
public class CrowdArray : MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CrowdAnimation prefab;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 spacing;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 randomise;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int amount;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 size;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float likelihood;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CrowdAnimation[] people;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CrowdPersonMaterials> queue;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float picTimer;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x7A22E4", Offset = "0x7A22E4", VA = "0x7A22E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x7A2AF4", Offset = "0x7A2AF4", VA = "0x7A2AF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x7A2DD8", Offset = "0x7A2DD8", VA = "0x7A2DD8")]
	public void ShowAngle(Transform head)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x7A2FE0", Offset = "0x7A2FE0", VA = "0x7A2FE0")]
	public void clap()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x7A3080", Offset = "0x7A3080", VA = "0x7A3080")]
	public CrowdArray()
	{
	}
}
[Token(Token = "0x2000056")]
public class CrowdController : MonoBehaviour
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CrowdController instance;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clapSound;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CrowdArray[] crowd;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doClap;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int showAngle;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x7A30A0", Offset = "0x7A30A0", VA = "0x7A30A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x7A3114", Offset = "0x7A3114", VA = "0x7A3114")]
	public static void applause()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x7A31C0", Offset = "0x7A31C0", VA = "0x7A31C0")]
	public void clap()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x7A3240", Offset = "0x7A3240", VA = "0x7A3240")]
	private void Update()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x7A3430", Offset = "0x7A3430", VA = "0x7A3430")]
	public CrowdController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000057")]
public class CrowdMaterial
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material material;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BAC10", Offset = "0x4BAC10")]
	public float likelihood;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x7A3438", Offset = "0x7A3438", VA = "0x7A3438")]
	public CrowdMaterial()
	{
	}
}
[Token(Token = "0x2000058")]
public class CrowdPersonMaterials : MonoBehaviour
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material hairMaterial;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mainMaterial;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material trimMaterial;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CrowdMaterial[] hairMaterials;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CrowdMaterial[] mainMaterials;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CrowdMaterial[] trimMaterials;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CrowdPersonMesh[] meshes;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool setupOnLoad;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string direction;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string code;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool takePic;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BillboardMaker billboardMaker;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture billBoardTexture;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int onTexture;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x7A3448", Offset = "0x7A3448", VA = "0x7A3448")]
	private void Start()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x7A2604", Offset = "0x7A2604", VA = "0x7A2604")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x7A3458", Offset = "0x7A3458", VA = "0x7A3458")]
	private Material randomMaterial(CrowdMaterial[] mats)
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x7A3960", Offset = "0x7A3960", VA = "0x7A3960")]
	private void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x7A3964", Offset = "0x7A3964", VA = "0x7A3964")]
	public CrowdPersonMaterials()
	{
	}
}
[Token(Token = "0x2000059")]
public class CrowdPersonMesh : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CrowdPersonMesh ifNot;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float likelihood;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float random;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string debug;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CrowdPersonMeshMaterial.Type[] setMaterials;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hidden;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x7A396C", Offset = "0x7A396C", VA = "0x7A396C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x7A3690", Offset = "0x7A3690", VA = "0x7A3690")]
	public void Setup(CrowdPersonMaterials crowdMaterials)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x7A3970", Offset = "0x7A3970", VA = "0x7A3970")]
	private void Update()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x7A3974", Offset = "0x7A3974", VA = "0x7A3974")]
	public CrowdPersonMesh()
	{
	}
}
[Token(Token = "0x200005A")]
public class CrowdPersonMeshMaterial : MonoBehaviour
{
	[Token(Token = "0x200005B")]
	public enum Type
	{
		[Token(Token = "0x4000347")]
		None,
		[Token(Token = "0x4000348")]
		Hair,
		[Token(Token = "0x4000349")]
		Main,
		[Token(Token = "0x400034A")]
		Trim
	}

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int materialNum;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x7A397C", Offset = "0x7A397C", VA = "0x7A397C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x7A3980", Offset = "0x7A3980", VA = "0x7A3980")]
	private void Update()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x7A3984", Offset = "0x7A3984", VA = "0x7A3984")]
	public CrowdPersonMeshMaterial()
	{
	}
}
[Token(Token = "0x200005C")]
public class CustomCharacterData : MonoBehaviour
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomCharacterData instance;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterData customCharacter;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x7A398C", Offset = "0x7A398C", VA = "0x7A398C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x7968F0", Offset = "0x7968F0", VA = "0x7968F0")]
	public void newCharacterSettings()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x7A39DC", Offset = "0x7A39DC", VA = "0x7A39DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x7A39E0", Offset = "0x7A39E0", VA = "0x7A39E0")]
	public CustomCharacterData()
	{
	}
}
[Token(Token = "0x200005D")]
public class CustomHandPose : MonoBehaviour
{
	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x7A3ED4", Offset = "0x7A3ED4", VA = "0x7A3ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x7A3ED8", Offset = "0x7A3ED8", VA = "0x7A3ED8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x7A3EDC", Offset = "0x7A3EDC", VA = "0x7A3EDC")]
	public CustomHandPose()
	{
	}
}
[Serializable]
[Token(Token = "0x200005E")]
public class CustomHandPosition
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string gripName;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minAngle;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAngle;

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x7A3EE4", Offset = "0x7A3EE4", VA = "0x7A3EE4")]
	public CustomHandPosition()
	{
	}
}
[Token(Token = "0x200005F")]
public class CustomPointerController : MonoBehaviour
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomPointerController instance;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject r_crossHair;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer r_line;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject l_crossHair;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer l_line;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float hideTime;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x7A3EF8", Offset = "0x7A3EF8", VA = "0x7A3EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x79D558", Offset = "0x79D558", VA = "0x79D558")]
	public static void pointAt(Collider collider, Vector3 rightHandPosition, Vector3 leftHandPosition, Vector3 fromHead, bool rightHand, bool leftHand)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x7A3F64", Offset = "0x7A3F64", VA = "0x7A3F64")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x7A3FBC", Offset = "0x7A3FBC", VA = "0x7A3FBC")]
	public CustomPointerController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000060")]
public class CustomisableMaterial
{
	[Token(Token = "0x2000061")]
	public enum ColourType
	{
		[Token(Token = "0x4000365")]
		None,
		[Token(Token = "0x4000366")]
		Clothing,
		[Token(Token = "0x4000367")]
		Skin,
		[Token(Token = "0x4000368")]
		Hair
	}

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] extraMaterials;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAC28", Offset = "0x4BAC28")]
	public string colourName;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ColourType colourType;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color[] skinColours;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color[] colorOptions;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int colourIndex;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool nextColour;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BAC60", Offset = "0x4BAC60")]
	public Texture[] imageOptions;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool allowNoTexture;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int onTexture;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool nextTexture;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x7A3FC4", Offset = "0x7A3FC4", VA = "0x7A3FC4")]
	public CustomisableMaterial(string name, Material material)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x7A40A4", Offset = "0x7A40A4", VA = "0x7A40A4")]
	public bool hasColours()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x7A40C8", Offset = "0x7A40C8", VA = "0x7A40C8")]
	public bool hasTextures()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x7A40EC", Offset = "0x7A40EC", VA = "0x7A40EC")]
	private void setupColours()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x7A4310", Offset = "0x7A4310", VA = "0x7A4310")]
	public void refresh()
	{
	}
}
[Token(Token = "0x2000062")]
public class CustomizableCharacterItem : MonoBehaviour
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] items;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowNone;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int itemIndex;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool nextItem;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x7A453C", Offset = "0x7A453C", VA = "0x7A453C")]
	public void refresh()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x7A4658", Offset = "0x7A4658", VA = "0x7A4658")]
	public CustomizableCharacterItem()
	{
	}
}
[Token(Token = "0x2000063")]
public class DaggerGameController : MonoBehaviour
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DaggerGameController instance;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leaderBoardAnchor;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform innerContainer;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrabSpecialMove[] daggers;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int score;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int best;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int daggerCount;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool over;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light spotLight;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float restartTimer;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float finishTime;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform spectateCameraPoint;

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x7A4660", Offset = "0x7A4660", VA = "0x7A4660")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x7A4720", Offset = "0x7A4720", VA = "0x7A4720")]
	public static bool isPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x7A47E8", Offset = "0x7A47E8", VA = "0x7A47E8")]
	private void Restart()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x7A486C", Offset = "0x7A486C", VA = "0x7A486C")]
	public static Transform spectateCameraPosition()
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x7A4918", Offset = "0x7A4918", VA = "0x7A4918")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x7A52BC", Offset = "0x7A52BC", VA = "0x7A52BC")]
	public DaggerGameController()
	{
	}
}
[Token(Token = "0x2000064")]
public class DamageWithinCone : MonoBehaviour
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpecialMoveController specialMoveController;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float angle;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MinMax range;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x7A52CC", Offset = "0x7A52CC", VA = "0x7A52CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x7A58C0", Offset = "0x7A58C0", VA = "0x7A58C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x7A58C4", Offset = "0x7A58C4", VA = "0x7A58C4")]
	public DamageWithinCone()
	{
	}
}
[Token(Token = "0x2000065")]
public class Dangler : MonoBehaviour
{
	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x7A58D4", Offset = "0x7A58D4", VA = "0x7A58D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x7A58D8", Offset = "0x7A58D8", VA = "0x7A58D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x7A591C", Offset = "0x7A591C", VA = "0x7A591C")]
	public Dangler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000066")]
public class Date
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int day;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int month;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x7A5924", Offset = "0x7A5924", VA = "0x7A5924")]
	public Date()
	{
	}
}
[Serializable]
[Token(Token = "0x2000067")]
public class DateRestriction
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool restricted;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int firstYear;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Date fromDate;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Date toDate;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Date currentDate;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x7A592C", Offset = "0x7A592C", VA = "0x7A592C")]
	public bool isTesting()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x7A59AC", Offset = "0x7A59AC", VA = "0x7A59AC")]
	public bool began()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x7A5B10", Offset = "0x7A5B10", VA = "0x7A5B10")]
	public bool withinDate(bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x7A5D74", Offset = "0x7A5D74", VA = "0x7A5D74")]
	public DateRestriction()
	{
	}
}
[Token(Token = "0x2000068")]
public class DebugLine : MonoBehaviour
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer line;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material lineMaterial;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color toColour;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x7A5D84", Offset = "0x7A5D84", VA = "0x7A5D84")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x7A5DB0", Offset = "0x7A5DB0", VA = "0x7A5DB0")]
	public void SetColor(Color toColour)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x7A5DBC", Offset = "0x7A5DBC", VA = "0x7A5DBC")]
	public void LineTo(Vector3 to)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x7A5E1C", Offset = "0x7A5E1C", VA = "0x7A5E1C")]
	public void LineTo(Vector3 from, Vector3 to)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x7A6068", Offset = "0x7A6068", VA = "0x7A6068")]
	public DebugLine()
	{
	}
}
[Serializable]
[Token(Token = "0x2000069")]
public class DifficultyLevel : Exportable
{
	[Token(Token = "0x200006A")]
	public enum Level
	{
		[Token(Token = "0x400039F")]
		None,
		[Token(Token = "0x40003A0")]
		Easy,
		[Token(Token = "0x40003A1")]
		Medium,
		[Token(Token = "0x40003A2")]
		Hard,
		[Token(Token = "0x40003A3")]
		Harder,
		[Token(Token = "0x40003A4")]
		Master
	}

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Level level;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enemyHealthBar;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool yourHealthBar;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool yourQiBar;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float unlockRequirementMod;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MinMax minDistance;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MinMax aiThinkTime;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MinMax aiSpeed;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MinMax aiTurnSpeed;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MinMax aiWalkSpeed;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MinMax aiChangeDirSpeed;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MinMax aiCaution;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MinMax aiSpecialMoveSpeed;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MinMax aiMoveChoiceVariance;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MinMax aiDodgeLikelihood;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MinMax aiDashFrequency;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MinMax enemyMuscleWeight;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MinMax massMultiplyBySpeed;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MinMax handOffsetPauseTime;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MinMax handOffsetRecoveryTime;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float slowMoDuration;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MinMax damageAutobalance;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x93D664", Offset = "0x93D664", VA = "0x93D664")]
	public void localise()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x93D6B8", Offset = "0x93D6B8", VA = "0x93D6B8")]
	public string moreDifficultThan(DifficultyLevel other)
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x93DBE0", Offset = "0x93DBE0", VA = "0x93DBE0")]
	public bool isMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x93DC30", Offset = "0x93DC30", VA = "0x93DC30")]
	public DifficultyLevel()
	{
	}
}
[Token(Token = "0x200006B")]
public class DifficultyPickerController : StandButtonsController
{
	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9860", Offset = "0x4B9860")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Breakable b;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DifficultyPickerController <>4__this;

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x7600D8", Offset = "0x7600D8", VA = "0x7600D8")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x7600E0", Offset = "0x7600E0", VA = "0x7600E0")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Breakable[] breakBoards;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool setup;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int doneChoice;

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x93DCB0", Offset = "0x93DCB0", VA = "0x93DCB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x93DE60", Offset = "0x93DE60", VA = "0x93DE60")]
	private void choose(Breakable b)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x93DFD0", Offset = "0x93DFD0", VA = "0x93DFD0")]
	private void gotoNext()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x93E030", Offset = "0x93E030", VA = "0x93E030")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x93E1F8", Offset = "0x93E1F8", VA = "0x93E1F8")]
	public DifficultyPickerController()
	{
	}
}
[Token(Token = "0x200006D")]
public class DisableShadows : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer[] meshRenderers;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer[] skinnedMeshRenderer;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuButtonContoller[] buttons;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x93E208", Offset = "0x93E208", VA = "0x93E208")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x93E31C", Offset = "0x93E31C", VA = "0x93E31C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x93E320", Offset = "0x93E320", VA = "0x93E320")]
	public DisableShadows()
	{
	}
}
[Token(Token = "0x200006E")]
public class DisplayLevel : MonoBehaviour
{
	[Token(Token = "0x200006F")]
	public enum Level
	{
		[Token(Token = "0x40003B1")]
		Full,
		[Token(Token = "0x40003B2")]
		Reduced,
		[Token(Token = "0x40003B3")]
		Minimal
	}

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level level;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particles;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x93E328", Offset = "0x93E328", VA = "0x93E328")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x93E43C", Offset = "0x93E43C", VA = "0x93E43C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x93E5CC", Offset = "0x93E5CC", VA = "0x93E5CC")]
	public DisplayLevel()
	{
	}
}
[Token(Token = "0x2000070")]
public class DontDestroy : MonoBehaviour
{
	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x94040C", Offset = "0x94040C", VA = "0x94040C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x940470", Offset = "0x940470", VA = "0x940470")]
	public DontDestroy()
	{
	}
}
[Serializable]
[Token(Token = "0x2000071")]
public class DummyHitType
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hittable.HandHitType handHitType;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI label;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool done;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image image;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float perc;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float wait;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float initX;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int flashCount;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool flashOn;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float flashInverval;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color baseColor;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x940FE8", Offset = "0x940FE8", VA = "0x940FE8")]
	public bool complete()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x9410BC", Offset = "0x9410BC", VA = "0x9410BC")]
	public void setup()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x9411C4", Offset = "0x9411C4", VA = "0x9411C4")]
	public void Update()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x9412B8", Offset = "0x9412B8", VA = "0x9412B8")]
	public void UpdateImage()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x9413E8", Offset = "0x9413E8", VA = "0x9413E8")]
	public DummyHitType()
	{
	}
}
[Token(Token = "0x2000072")]
public class DynamicBoneDemo1 : MonoBehaviour
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Player;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_weight;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_sleepTime;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x9440D4", Offset = "0x9440D4", VA = "0x9440D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x94421C", Offset = "0x94421C", VA = "0x94421C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x944630", Offset = "0x944630", VA = "0x944630")]
	public DynamicBoneDemo1()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4B9870", Offset = "0x4B9870")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	public enum UpdateMode
	{
		[Token(Token = "0x40003E6")]
		Normal,
		[Token(Token = "0x40003E7")]
		AnimatePhysics,
		[Token(Token = "0x40003E8")]
		UnscaledTime,
		[Token(Token = "0x40003E9")]
		Default
	}

	[Token(Token = "0x2000075")]
	public enum FreezeAxis
	{
		[Token(Token = "0x40003EB")]
		None,
		[Token(Token = "0x40003EC")]
		X,
		[Token(Token = "0x40003ED")]
		Y,
		[Token(Token = "0x40003EE")]
		Z
	}

	[Token(Token = "0x2000076")]
	private class Particle
	{
		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Friction;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_Radius;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_BoneLength;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_isCollide;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 m_Position;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x760ABC", Offset = "0x760ABC", VA = "0x760ABC")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAC98", Offset = "0x4BAC98")]
	public Transform m_Root;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BACD0", Offset = "0x4BACD0")]
	public float m_UpdateRate;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAD08", Offset = "0x4BAD08")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BAD08", Offset = "0x4BAD08")]
	public float m_Damping;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAD5C", Offset = "0x4BAD5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BAD5C", Offset = "0x4BAD5C")]
	public float m_Elasticity;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BADB0", Offset = "0x4BADB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BADB0", Offset = "0x4BADB0")]
	public float m_Stiffness;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BAE04", Offset = "0x4BAE04")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAE04", Offset = "0x4BAE04")]
	public float m_Inert;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAE58", Offset = "0x4BAE58")]
	public float m_Friction;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_FrictionDistrib;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAE90", Offset = "0x4BAE90")]
	public float m_Radius;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAEC8", Offset = "0x4BAEC8")]
	public float m_EndLength;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAF00", Offset = "0x4BAF00")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAF38", Offset = "0x4BAF38")]
	public Vector3 m_Gravity;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAF70", Offset = "0x4BAF70")]
	public Vector3 m_Force;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAFA8", Offset = "0x4BAFA8")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BAFE0", Offset = "0x4BAFE0")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB018", Offset = "0x4BB018")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB050", Offset = "0x4BB050")]
	public bool m_DistantDisable;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_DistanceToObject;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float m_ObjectScale;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float m_Time;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_Weight;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_DistantDisabled;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<Particle> m_Particles;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x9413FC", Offset = "0x9413FC", VA = "0x9413FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x941534", Offset = "0x941534", VA = "0x941534")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x941588", Offset = "0x941588", VA = "0x941588")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x9415B8", Offset = "0x9415B8", VA = "0x9415B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x941564", Offset = "0x941564", VA = "0x941564")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x941630", Offset = "0x941630", VA = "0x941630")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x941C44", Offset = "0x941C44", VA = "0x941C44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x941C48", Offset = "0x941C48", VA = "0x941C48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x941C4C", Offset = "0x941C4C", VA = "0x941C4C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x941D28", Offset = "0x941D28", VA = "0x941D28")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x941EE0", Offset = "0x941EE0", VA = "0x941EE0")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x941F3C", Offset = "0x941F3C", VA = "0x941F3C")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x9417E8", Offset = "0x9417E8", VA = "0x9417E8")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x941400", Offset = "0x941400", VA = "0x941400")]
	public void SetupParticles()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x942D4C", Offset = "0x942D4C", VA = "0x942D4C")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x943228", Offset = "0x943228", VA = "0x943228")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x9419BC", Offset = "0x9419BC", VA = "0x9419BC")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x941AD0", Offset = "0x941AD0", VA = "0x941AD0")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x941F44", Offset = "0x941F44", VA = "0x941F44")]
	private void UpdateParticles1(float timeVar)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x942144", Offset = "0x942144", VA = "0x942144")]
	private void UpdateParticles2(float timeVar)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x9426F4", Offset = "0x9426F4", VA = "0x9426F4")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x943550", Offset = "0x943550", VA = "0x943550")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x942B08", Offset = "0x942B08", VA = "0x942B08")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x943584", Offset = "0x943584", VA = "0x943584")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x2000077")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4B98A8", Offset = "0x4B98A8")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB088", Offset = "0x4BB088")]
	public float m_Radius;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB0C0", Offset = "0x4BB0C0")]
	public float m_Height;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x943690", Offset = "0x943690", VA = "0x943690")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x9436D8", Offset = "0x9436D8", VA = "0x9436D8", Slot = "4")]
	public override bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x9438E4", Offset = "0x9438E4", VA = "0x9438E4")]
	private static bool OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x9439AC", Offset = "0x9439AC", VA = "0x9439AC")]
	private static bool InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x943A68", Offset = "0x943A68", VA = "0x943A68")]
	private static bool OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x943C98", Offset = "0x943C98", VA = "0x943C98")]
	private static bool InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x943EB0", Offset = "0x943EB0", VA = "0x943EB0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x94404C", Offset = "0x94404C", VA = "0x94404C")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x2000078")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x2000079")]
	public enum Direction
	{
		[Token(Token = "0x4000404")]
		X,
		[Token(Token = "0x4000405")]
		Y,
		[Token(Token = "0x4000406")]
		Z
	}

	[Token(Token = "0x200007A")]
	public enum Bound
	{
		[Token(Token = "0x4000408")]
		Outside,
		[Token(Token = "0x4000409")]
		Inside
	}

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB0F8", Offset = "0x4BB0F8")]
	public Direction m_Direction;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB130", Offset = "0x4BB130")]
	public Vector3 m_Center;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB168", Offset = "0x4BB168")]
	public Bound m_Bound;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x9440CC", Offset = "0x9440CC", VA = "0x9440CC", Slot = "4")]
	public virtual bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x944090", Offset = "0x944090", VA = "0x944090")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x200007B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4B98E0", Offset = "0x4B98E0")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x6000207")]
	[Address(RVA = "0x944640", Offset = "0x944640", VA = "0x944640")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x944644", Offset = "0x944644", VA = "0x944644", Slot = "4")]
	public override bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x9447A4", Offset = "0x9447A4", VA = "0x9447A4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x9448C4", Offset = "0x9448C4", VA = "0x9448C4")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x200007C")]
public class DynamicTracker : MonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLeft;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MoveWithController playerController;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider collider;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layerMask;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastMag;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speedPerc;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool stuck;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float enableTime;

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x84431C", Offset = "0x84431C", VA = "0x84431C")]
	private void Start()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x84434C", Offset = "0x84434C", VA = "0x84434C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x8448CC", Offset = "0x8448CC", VA = "0x8448CC")]
	public DynamicTracker()
	{
	}
}
[Token(Token = "0x200007D")]
public class EffectCircleController : MonoBehaviour
{
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterEffectData effectData;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[NonSerialized]
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 targetPos;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x8448DC", Offset = "0x8448DC", VA = "0x8448DC")]
	public void setup(CharacterEffectData effectData)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x844988", Offset = "0x844988", VA = "0x844988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x84498C", Offset = "0x84498C", VA = "0x84498C")]
	public EffectCircleController()
	{
	}
}
[Token(Token = "0x200007E")]
public class EffectCirclesController : MonoBehaviour
{
	[Token(Token = "0x200007F")]
	public enum Type
	{
		[Token(Token = "0x400041D")]
		Line,
		[Token(Token = "0x400041E")]
		Radial
	}

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter player;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EffectCircleController effectCirclePrefab;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<EffectCircleController> circles;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Type type;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool targetEnemy;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxScale;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minScale;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x844994", Offset = "0x844994", VA = "0x844994")]
	private void Start()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x844C68", Offset = "0x844C68", VA = "0x844C68")]
	private EffectCircleController getCircle(CharacterEffect.Effect effect)
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x844EE0", Offset = "0x844EE0", VA = "0x844EE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x845878", Offset = "0x845878", VA = "0x845878")]
	public EffectCirclesController()
	{
	}
}
[Token(Token = "0x2000080")]
public class ExplosionController : MonoBehaviour
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light fadeLight;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float life;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxLife;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x84597C", Offset = "0x84597C", VA = "0x84597C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x8459B8", Offset = "0x8459B8", VA = "0x8459B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x845A80", Offset = "0x845A80", VA = "0x845A80")]
	public ExplosionController()
	{
	}
}
[Token(Token = "0x2000081")]
public class Exportable
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x845A88", Offset = "0x845A88", VA = "0x845A88")]
	public string exportString()
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x845F4C", Offset = "0x845F4C", VA = "0x845F4C")]
	public string replaceChars(string inStr)
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x845FF8", Offset = "0x845FF8", VA = "0x845FF8")]
	public string replaceCharsBack(string inStr)
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x8460A4", Offset = "0x8460A4", VA = "0x8460A4")]
	public void importFromString(string importString)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x846974", Offset = "0x846974", VA = "0x846974")]
	public Exportable()
	{
	}
}
[Token(Token = "0x2000082")]
public class Eyelid : MonoBehaviour
{
	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 openPos;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oldOpenPos;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 closedPos;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float openPerc;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x84697C", Offset = "0x84697C", VA = "0x84697C")]
	private void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x8469E8", Offset = "0x8469E8", VA = "0x8469E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x846A98", Offset = "0x846A98", VA = "0x846A98")]
	public Eyelid()
	{
	}
}
[Serializable]
[Token(Token = "0x2000083")]
public class FBTConnectionData
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool connected;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TransformData positionOffset;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TransformData trackerPosition;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TransformData target;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Quaternion rotationOffset;

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x846AA8", Offset = "0x846AA8", VA = "0x846AA8")]
	public void SetTo(TrackerConnectController trackerConnect)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x846B18", Offset = "0x846B18", VA = "0x846B18")]
	public void SetupTracker(TrackerConnectController trackerConnect)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x846B88", Offset = "0x846B88", VA = "0x846B88")]
	public FBTConnectionData()
	{
	}
}
[Token(Token = "0x2000084")]
public class FBTConnections : MonoBehaviour
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FBTConnections instance;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int characterID;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FBTConnectionData waistConnection;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FBTConnectionData leftFootConnection;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FBTConnectionData rightFootConnection;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ontoNextOnSkip;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool declined;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x846B90", Offset = "0x846B90", VA = "0x846B90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x846BE8", Offset = "0x846BE8", VA = "0x846BE8")]
	public bool doFBTAsk(bool ontoNextOnSkip)
	{
		return default(bool);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x846F4C", Offset = "0x846F4C", VA = "0x846F4C")]
	public void clear()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x846F84", Offset = "0x846F84", VA = "0x846F84")]
	public bool legsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x847004", Offset = "0x847004", VA = "0x847004")]
	public static void Save(TrackerConnectController waist, TrackerConnectController leftFoot, TrackerConnectController rightFoot)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x8470C8", Offset = "0x8470C8", VA = "0x8470C8")]
	public static bool SetupTrackers(TrackerConnectController waist, TrackerConnectController leftFoot, TrackerConnectController rightFoot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x8471AC", Offset = "0x8471AC", VA = "0x8471AC")]
	public FBTConnections()
	{
	}
}
[Token(Token = "0x2000085")]
public class FBTGhostController : MonoBehaviour
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer[] skins;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x8471BC", Offset = "0x8471BC", VA = "0x8471BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x8471C0", Offset = "0x8471C0", VA = "0x8471C0")]
	public void setup()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x8472E8", Offset = "0x8472E8", VA = "0x8472E8")]
	public void done()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x8474D4", Offset = "0x8474D4", VA = "0x8474D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x8474D8", Offset = "0x8474D8", VA = "0x8474D8")]
	public FBTGhostController()
	{
	}
}
[Token(Token = "0x2000086")]
public class FBTTracker : MonoBehaviour
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RandomIndicator tip;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool trackerActive;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrackerHighlight trackerHighlight;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x8474E0", Offset = "0x8474E0", VA = "0x8474E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x847580", Offset = "0x847580", VA = "0x847580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x847584", Offset = "0x847584", VA = "0x847584")]
	public FBTTracker()
	{
	}
}
[Token(Token = "0x2000087")]
public class FBTTrackers : MonoBehaviour
{
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hideTrackersOnConnect;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameCharacter character;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRIK vrik;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrackerConnectController leftFoot;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrackerConnectController rightFoot;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackerConnectController waist;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float weight;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float walkWeight;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lWeight;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float rWeight;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool connected;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x84758C", Offset = "0x84758C", VA = "0x84758C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x847600", Offset = "0x847600", VA = "0x847600")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x84772C", Offset = "0x84772C", VA = "0x84772C")]
	public void connectTrackers()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x847988", Offset = "0x847988", VA = "0x847988")]
	public bool trackersActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x8479F0", Offset = "0x8479F0", VA = "0x8479F0")]
	private void testConnect()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x846E20", Offset = "0x846E20", VA = "0x846E20")]
	public void disconnectTrackers()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x847A00", Offset = "0x847A00", VA = "0x847A00")]
	private void footCollider(Hittable foot, TrackerConnectController connect)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x847A9C", Offset = "0x847A9C", VA = "0x847A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x848248", Offset = "0x848248", VA = "0x848248")]
	public FBTTrackers()
	{
	}
}
[Token(Token = "0x2000088")]
public class FaceCanvasController : MonoBehaviour
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FaceCanvasController instance;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x848274", Offset = "0x848274", VA = "0x848274")]
	private void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x8482D8", Offset = "0x8482D8", VA = "0x8482D8")]
	public static void addText(string message)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x848418", Offset = "0x848418", VA = "0x848418")]
	private void Update()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x8484B8", Offset = "0x8484B8", VA = "0x8484B8")]
	public FaceCanvasController()
	{
	}
}
[Token(Token = "0x2000089")]
public class FaceController : MonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodies puppet;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Eyelid[] eyelids;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] eyes;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform lookTarget;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3[] eyesRotated;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float closeTime;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool blinking;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blinkSpeed;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float blinkFrequency;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float blinkAmount;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float nextBlinkTime;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 eyeLimits;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform jaw;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float closedX;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float openX;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float targetX;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource audioSource;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float minLoudness;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float maxLoudness;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float clipLoudness;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] clipSampleData;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float mouthSpeed;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float updateStep;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int sampleDataLength;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float audioSourcePitch;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float openMouthTimer;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float currentUpdateTime;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool justLookForward;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int lastHurt;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool setup;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject dazedEffect;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float changeLooktimer;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool isSetup;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float openPerc;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x8484C0", Offset = "0x8484C0", VA = "0x8484C0")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x848C98", Offset = "0x848C98", VA = "0x848C98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x848D48", Offset = "0x848D48", VA = "0x848D48")]
	private void getLookTarget()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x849444", Offset = "0x849444", VA = "0x849444")]
	private void updateJaw()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x849880", Offset = "0x849880", VA = "0x849880")]
	public float say(VoiceData voice)
	{
		return default(float);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x849938", Offset = "0x849938", VA = "0x849938")]
	public float say(AudioClip clip, bool halfSpacial, string sayText, bool onlyInterupt)
	{
		return default(float);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x849C88", Offset = "0x849C88", VA = "0x849C88")]
	public float hurt(bool female)
	{
		return default(float);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x849D6C", Offset = "0x849D6C", VA = "0x849D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x84AA74", Offset = "0x84AA74", VA = "0x84AA74")]
	public FaceController()
	{
	}
}
[Token(Token = "0x200008A")]
public class FaceDirection : MonoBehaviour
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldRotation;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x84AAC4", Offset = "0x84AAC4", VA = "0x84AAC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x84AAC8", Offset = "0x84AAC8", VA = "0x84AAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x84AB10", Offset = "0x84AB10", VA = "0x84AB10")]
	public FaceDirection()
	{
	}
}
[Token(Token = "0x200008B")]
public class FaceHitEffect : MonoBehaviour
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraEyeLidsController[] eyeLids;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float brightness;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blur;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bloodHitPerc;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float bloodAngle;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 hitRotation;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float flashSpeed;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float flashMax;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color staminaBest;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color staminaWorst;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB1A0", Offset = "0x4BB1A0")]
	public float blinkPerc;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float startDelay;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB1B8", Offset = "0x4BB1B8")]
	public float blurAmount;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB1D0", Offset = "0x4BB1D0")]
	public float vignetteAmount;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB1E8", Offset = "0x4BB1E8")]
	public float redAmount;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB200", Offset = "0x4BB200")]
	public float sicknessAmount;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB218", Offset = "0x4BB218")]
	public float slowMoAmount;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool updateFromCharacter;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float throb;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float throbAngle;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material bloodMaterial;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x84AB18", Offset = "0x84AB18", VA = "0x84AB18")]
	private void Start()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x84AB1C", Offset = "0x84AB1C", VA = "0x84AB1C")]
	public void hit(float knockBackPerc, float damagePerc, Vector3 hitPos, bool isHead)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x84ACE8", Offset = "0x84ACE8", VA = "0x84ACE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x84B3B0", Offset = "0x84B3B0", VA = "0x84B3B0")]
	public FaceHitEffect()
	{
	}
}
[Token(Token = "0x200008C")]
public class FadeOutLight : MonoBehaviour
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fadeOut;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light light;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float intensity;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x84B8D4", Offset = "0x84B8D4", VA = "0x84B8D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x84B954", Offset = "0x84B954", VA = "0x84B954")]
	private void Update()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x84BA08", Offset = "0x84BA08", VA = "0x84BA08")]
	public FadeOutLight()
	{
	}
}
[Token(Token = "0x200008D")]
public class Fader : MonoBehaviour
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Fader instance;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool fading;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool fadeOut;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool paused;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float vignettingBlink;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool display_fading;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool display_fadeOut;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool display_paused;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float display_vignettingBlink;

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x84BA20", Offset = "0x84BA20", VA = "0x84BA20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x84BA94", Offset = "0x84BA94", VA = "0x84BA94")]
	public static void fade(bool fadeOut, float fadeTime = 3f)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x84BBE8", Offset = "0x84BBE8", VA = "0x84BBE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x84BE3C", Offset = "0x84BE3C", VA = "0x84BE3C")]
	public Fader()
	{
	}
}
[Token(Token = "0x200008E")]
public class FallAndGetUp : MonoBehaviour
{
	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameCharacter character;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool falling;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool fallen;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool gotUp;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PuppetMaster puppetMaster;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRIK ik;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float unpinnedTimer;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float getUpTimer;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 hipsForward;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 hipsUp;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 getUpPosition;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float getupAnimationBlendWeight;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float getupAnimationBlendWeightV;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool getUpTargetFixed;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask groundLayers;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform ikTrackerContainer;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float speedMod;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool recovering;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float canRecoverMin;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float recoverHealth;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float stuckTimer;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool feetSet;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x84BEB8", Offset = "0x84BEB8", VA = "0x84BEB8")]
	public void Setup(GameCharacter character, PuppetMaster puppetMaster, VRIK ik)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x84C074", Offset = "0x84C074", VA = "0x84C074")]
	private void Start()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x84C1C8", Offset = "0x84C1C8", VA = "0x84C1C8")]
	public bool willRecover()
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x84C2B8", Offset = "0x84C2B8", VA = "0x84C2B8")]
	private void keepInBounds()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x84C6D4", Offset = "0x84C6D4", VA = "0x84C6D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x84D3F0", Offset = "0x84D3F0", VA = "0x84D3F0")]
	public void updateFeet(bool feetEnabled)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x84D58C", Offset = "0x84D58C", VA = "0x84D58C")]
	public void Fall()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x84D6BC", Offset = "0x84D6BC", VA = "0x84D6BC")]
	public void GetUp()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x84DC9C", Offset = "0x84DC9C", VA = "0x84DC9C")]
	protected bool IsProne()
	{
		return default(bool);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x84DD54", Offset = "0x84DD54", VA = "0x84DD54")]
	protected void GroundTarget(LayerMask layers)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x84DD2C", Offset = "0x84DD2C", VA = "0x84DD2C")]
	protected void RotateTarget(Quaternion rotation)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x84DF60", Offset = "0x84DF60", VA = "0x84DF60")]
	protected void MoveTarget(Vector3 position)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x84DF88", Offset = "0x84DF88", VA = "0x84DF88")]
	public FallAndGetUp()
	{
	}
}
[Serializable]
[Token(Token = "0x200008F")]
public class FightingStyle
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecordAction idle;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RecordAction taunt;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<FightingStyle_Stance> stances;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x84DFB4", Offset = "0x84DFB4", VA = "0x84DFB4")]
	public static FightingStyle createNew()
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x84E0E8", Offset = "0x84E0E8", VA = "0x84E0E8")]
	public void setup(bool clean)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x84E770", Offset = "0x84E770", VA = "0x84E770")]
	public bool randomAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x84E0E0", Offset = "0x84E0E0", VA = "0x84E0E0")]
	public FightingStyle()
	{
	}
}
[Serializable]
[Token(Token = "0x2000090")]
public class FightingStyleCounter
{
	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecordAction action;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool left;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool right;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool frontLeft;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool frontRight;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool head;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool body;

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x84E824", Offset = "0x84E824", VA = "0x84E824")]
	public FightingStyleCounter(string name)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x84E8A4", Offset = "0x84E8A4", VA = "0x84E8A4")]
	public void setup(bool clean, string defaultName)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x84E8C4", Offset = "0x84E8C4", VA = "0x84E8C4")]
	public bool kickViable()
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x84E8EC", Offset = "0x84E8EC", VA = "0x84E8EC")]
	public bool viable(float angle, float hitHeight, float headHeight)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000091")]
public class FightingStyle_Stance
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RecordAction stance;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<RecordAction> attacks;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<FightingStyleCounter> counters;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float stanceAngle;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isSetup;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x84E2A8", Offset = "0x84E2A8", VA = "0x84E2A8")]
	public void setup(FightingStyle style, bool clean, int num)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x84EAC0", Offset = "0x84EAC0", VA = "0x84EAC0")]
	public FightingStyle_Stance()
	{
	}
}
[Token(Token = "0x2000092")]
public class FinalStoryController : StandButtonsController
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI storyText;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform charSpawnPos;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameCharacter storyChar;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool setup;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x84F244", Offset = "0x84F244", VA = "0x84F244")]
	private void Start()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x84F320", Offset = "0x84F320", VA = "0x84F320")]
	private void Update()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x84F624", Offset = "0x84F624", VA = "0x84F624")]
	public FinalStoryController()
	{
	}
}
[Token(Token = "0x2000093")]
public class FireOnSqueeze : MonoBehaviour
{
	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpecialMoveController move;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shotSpawn;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particles;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProjectileController bulletPrefab;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimeSlow timeSlow;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool done;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float doneTimer;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Hittable following;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x8500B8", Offset = "0x8500B8", VA = "0x8500B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x85011C", Offset = "0x85011C", VA = "0x85011C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x850444", Offset = "0x850444", VA = "0x850444")]
	public FireOnSqueeze()
	{
	}
}
[Token(Token = "0x2000094")]
public class FlameController : MonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 offset;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float offsetTimer;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform flameInner;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject smokeOnPutOut;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x85044C", Offset = "0x85044C", VA = "0x85044C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x850450", Offset = "0x850450", VA = "0x850450")]
	private void checkSpeed(Hittable hittable, float putOutSpeed)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x850640", Offset = "0x850640", VA = "0x850640")]
	private void putOut()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x850688", Offset = "0x850688", VA = "0x850688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x850AF0", Offset = "0x850AF0", VA = "0x850AF0")]
	public FlameController()
	{
	}
}
[Token(Token = "0x2000095")]
public class FlickerLight : MonoBehaviour
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light light;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 startPos;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 move;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minIntensity;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxIntensity;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float heightSpeed;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float intensitySpeed;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float targetIntensity;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float heightPerc;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x851D24", Offset = "0x851D24", VA = "0x851D24")]
	private void Start()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x851DB8", Offset = "0x851DB8", VA = "0x851DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x851EBC", Offset = "0x851EBC", VA = "0x851EBC")]
	private float rnd()
	{
		return default(float);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x851EE0", Offset = "0x851EE0", VA = "0x851EE0")]
	public FlickerLight()
	{
	}
}
[Token(Token = "0x2000096")]
public class FloatingCanvasController : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float angleThreshold;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotateSpeed;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion targetRotation;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI text;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image ring;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 origScale;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x11FC46C", Offset = "0x11FC46C", VA = "0x11FC46C")]
	private void Start()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x11FC4A8", Offset = "0x11FC4A8", VA = "0x11FC4A8")]
	public void show(string message, float perc, float scale)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x11FC7C4", Offset = "0x11FC7C4", VA = "0x11FC7C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x11FC7C8", Offset = "0x11FC7C8", VA = "0x11FC7C8")]
	public FloatingCanvasController()
	{
	}
}
[Token(Token = "0x2000097")]
public class FloatingHealthBarController : MonoBehaviour
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject contents;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HealthBarController healthBar;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameCharacter target;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x11FC7DC", Offset = "0x11FC7DC", VA = "0x11FC7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x11FC7E0", Offset = "0x11FC7E0", VA = "0x11FC7E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x11FCD24", Offset = "0x11FCD24", VA = "0x11FCD24")]
	public FloatingHealthBarController()
	{
	}
}
[Token(Token = "0x2000098")]
public class FloatingPointerController : MonoBehaviour
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FloatingPointerController instance;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI info;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LineRenderer line;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject contents;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pointingAt;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 pointingForward;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string displayText;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x11FCD2C", Offset = "0x11FCD2C", VA = "0x11FCD2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x11FCDA0", Offset = "0x11FCDA0", VA = "0x11FCDA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x11FD41C", Offset = "0x11FD41C", VA = "0x11FD41C")]
	public FloatingPointerController()
	{
	}
}
[Token(Token = "0x2000099")]
public class FloatingText : MonoBehaviour
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float floatUpSpeed;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float displayTime;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txt;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 anchorPos;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 moved;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 moveVelocity;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float forwardSpeed;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform attachTo;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 origPos;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color color;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float alpha;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x11FD424", Offset = "0x11FD424", VA = "0x11FD424")]
	private void Start()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x11FD508", Offset = "0x11FD508", VA = "0x11FD508")]
	private void Update()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x11FD840", Offset = "0x11FD840", VA = "0x11FD840")]
	public FloatingText()
	{
	}
}
[Token(Token = "0x200009A")]
public class FloatingTextNew : MonoBehaviour
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float displayTime;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txt;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 moveVelocity;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float startSpeed;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxMoveSpeed;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float viewInFront;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject attachTo;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 origPos;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color color;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float alpha;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float moveUp;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isAttached;

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x11FD864", Offset = "0x11FD864", VA = "0x11FD864")]
	private void Start()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x11FD914", Offset = "0x11FD914", VA = "0x11FD914")]
	private void Update()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x11FDDF8", Offset = "0x11FDDF8", VA = "0x11FDDF8")]
	public FloatingTextNew()
	{
	}
}
[Token(Token = "0x200009B")]
public class FloorController : MonoBehaviour
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FootstepController.Surface surface;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hasCreaks;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool outOfBounds;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChamberController chamber;

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x11FDE24", Offset = "0x11FDE24", VA = "0x11FDE24")]
	private void Start()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x11FDF6C", Offset = "0x11FDF6C", VA = "0x11FDF6C")]
	public void chamberStep()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x11FE018", Offset = "0x11FE018", VA = "0x11FE018")]
	public FloorController()
	{
	}
}
[Token(Token = "0x200009C")]
public class FolloMainCamera : MonoBehaviour
{
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ignoreHeight;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x11FF410", Offset = "0x11FF410", VA = "0x11FF410")]
	private void Start()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x11FF414", Offset = "0x11FF414", VA = "0x11FF414")]
	private void Update()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x11FF594", Offset = "0x11FF594", VA = "0x11FF594")]
	public FolloMainCamera()
	{
	}
}
[Token(Token = "0x200009D")]
public class FollowMainCamera : MonoBehaviour
{
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ignoreHeight;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x11FF59C", Offset = "0x11FF59C", VA = "0x11FF59C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x11FF5D8", Offset = "0x11FF5D8", VA = "0x11FF5D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x11FF6DC", Offset = "0x11FF6DC", VA = "0x11FF6DC")]
	public FollowMainCamera()
	{
	}
}
[Token(Token = "0x200009E")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform follow;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x11FF6E4", Offset = "0x11FF6E4", VA = "0x11FF6E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x11FF6E8", Offset = "0x11FF6E8", VA = "0x11FF6E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x11FF768", Offset = "0x11FF768", VA = "0x11FF768")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x200009F")]
public class FootstepController : MonoBehaviour
{
	[Token(Token = "0x20000A0")]
	public enum Surface
	{
		[Token(Token = "0x4000518")]
		Concrete,
		[Token(Token = "0x4000519")]
		Carpet,
		[Token(Token = "0x400051A")]
		Wood,
		[Token(Token = "0x400051B")]
		Grass,
		[Token(Token = "0x400051C")]
		Leaf,
		[Token(Token = "0x400051D")]
		Wet,
		[Token(Token = "0x400051E")]
		Snow
	}

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterMover mover;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] concrete;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] carpet;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] wood;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] grass;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] leaf;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] wet;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] snow;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] floorboardCreak;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip jumpSound;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip landSound;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int rnd;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastStepTime;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 lastStepPos;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float minTime;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float minMagnitude;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float volumeVarianceBySpeed;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float volumeVarianceRandom;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float pitchVarianceRandom;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float lastCreak;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x11FF770", Offset = "0x11FF770", VA = "0x11FF770")]
	private void Start()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x11FF7DC", Offset = "0x11FF7DC", VA = "0x11FF7DC")]
	private AudioClip[] getSurfaceSounds(FloorController floor)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x11FF8B0", Offset = "0x11FF8B0", VA = "0x11FF8B0")]
	private void creak()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x11FF918", Offset = "0x11FF918", VA = "0x11FF918")]
	public void playJumpSound(bool start)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x11FF94C", Offset = "0x11FF94C", VA = "0x11FF94C")]
	public void footstepSound(bool isPlayer, bool left)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x11FFE38", Offset = "0x11FFE38", VA = "0x11FFE38")]
	public FootstepController()
	{
	}
}
[Token(Token = "0x20000A1")]
public class GameCharacter : MonoBehaviour
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int team;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int standingIndex;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int fightingStyle;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpecialMoveData specialMove;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpecialMoveData doingSpecialData;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool specialHandSwapped;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterData data;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB230", Offset = "0x4BB230")]
	public float difficulty;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float wasDifficulty;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CharacterEffect> effects;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MoveWithController playerController;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AIController aiControl;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RigidBodies rigidBodies;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public KickController kickController;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HandPositions hands;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameCharacter closestEnemy;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameCharacter targetEnemy;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public VRTrackerContainer trackers;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int maxLives;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int lives;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int puppetId;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector3 standPosition;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FaceHitEffect faceHit;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float doingSpecial;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float pinWeight;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject handForwardPrefab;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float nextTargetTime;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public HeadRecoil headRecoil;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip specialMoveFailSound;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip specialMoveFailHitSound;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public CharacterMover mover;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public HandMeterController rightHandMeterPrefab;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public HandMeterController leftHandMeterPrefab;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public RuntimeAnimatorController animatorController;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public PressurePointData[] pressurePoints;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform effectParticleContainer;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public DynamicTracker[] dynamicTrackers;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float damageAutobalance;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float comboDamage;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public int comboCount;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float comboTimer;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 comboPosition;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool switchSpecial;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public VRCharacterController vrCharacterController;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float nextStyleSwitch;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool specialRechargeAllowed;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float sicknessAmount;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float blockSpecialTime;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public HandPosition.Position override_l_handPosition;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public HandPosition.Position override_r_handPosition;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioClip overrideSwipeSound;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MinMax muscleSpring;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float[] sidePins;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float[] legPins;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1200D38", Offset = "0x1200D38", VA = "0x1200D38")]
	public void setup(int id, int team, CharacterData characterData)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x12013D0", Offset = "0x12013D0", VA = "0x12013D0")]
	public bool kickingMove()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1201534", Offset = "0x1201534", VA = "0x1201534")]
	public void teleport(Vector3 to)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x12015A4", Offset = "0x12015A4", VA = "0x12015A4")]
	public void toggleIndicators(bool on)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x12012CC", Offset = "0x12012CC", VA = "0x12012CC")]
	public void randomFightingStyle()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x120160C", Offset = "0x120160C", VA = "0x120160C")]
	public float getDamageAutoBalance()
	{
		return default(float);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1201868", Offset = "0x1201868", VA = "0x1201868")]
	public void addToCombo(float damage, Vector3 position)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1201918", Offset = "0x1201918", VA = "0x1201918")]
	private void endCombo()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1201BF4", Offset = "0x1201BF4", VA = "0x1201BF4")]
	public void reset()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1201D78", Offset = "0x1201D78", VA = "0x1201D78")]
	public void clearEffects()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x12026B0", Offset = "0x12026B0", VA = "0x12026B0")]
	public void removeEffect(CharacterEffect.Effect effect)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x12027E0", Offset = "0x12027E0", VA = "0x12027E0")]
	public bool hasVisibleEffect()
	{
		return default(bool);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x11FCD08", Offset = "0x11FCD08", VA = "0x11FCD08")]
	public bool hasEffect(CharacterEffect.Effect effect)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1202984", Offset = "0x1202984", VA = "0x1202984")]
	public CharacterEffect getEffect(CharacterEffect.Effect effect)
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1202AC8", Offset = "0x1202AC8", VA = "0x1202AC8")]
	public void knockedOutEarly()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1202B0C", Offset = "0x1202B0C", VA = "0x1202B0C")]
	public void knockedOutFall()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1204758", Offset = "0x1204758", VA = "0x1204758")]
	public void backStanding()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1204B8C", Offset = "0x1204B8C", VA = "0x1204B8C")]
	public void ProjectileHitVoice()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1204BEC", Offset = "0x1204BEC", VA = "0x1204BEC")]
	public void SpecialMoveHit(string specialMoveName)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1204C80", Offset = "0x1204C80", VA = "0x1204C80")]
	private void restartVoice()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1204CD8", Offset = "0x1204CD8", VA = "0x1204CD8")]
	private void updateCheatEffects()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1201F20", Offset = "0x1201F20", VA = "0x1201F20")]
	public void updateEffects()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1205BD0", Offset = "0x1205BD0", VA = "0x1205BD0")]
	public void addEffect(Vector3 hitPoint, SpecialMoveData specialMove, bool preventSpecialCharge, bool isTest)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1205BFC", Offset = "0x1205BFC", VA = "0x1205BFC")]
	public float kickSpeedMod()
	{
		return default(float);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1205D3C", Offset = "0x1205D3C", VA = "0x1205D3C")]
	public float moveSpeedMod()
	{
		return default(float);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1205EC4", Offset = "0x1205EC4", VA = "0x1205EC4")]
	public float walkSpeedMod()
	{
		return default(float);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1205368", Offset = "0x1205368", VA = "0x1205368")]
	public void addEffect(Vector3 addPoint, CharacterEffect.Effect effect, float amount, bool preventSpecialRecharge, bool isTest, HandPosition.Position l_handPosition = HandPosition.Position.None, HandPosition.Position r_handPosition = HandPosition.Position.None)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1205A00", Offset = "0x1205A00", VA = "0x1205A00")]
	private void refreshMaterials()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1206014", Offset = "0x1206014", VA = "0x1206014")]
	public void doSpecial()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1201238", Offset = "0x1201238", VA = "0x1201238")]
	public bool isPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1206BC8", Offset = "0x1206BC8", VA = "0x1206BC8")]
	public void setDifficulty(float newDiff)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1206D70", Offset = "0x1206D70", VA = "0x1206D70")]
	public void refreshPowers()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1208254", Offset = "0x1208254", VA = "0x1208254")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1208808", Offset = "0x1208808", VA = "0x1208808")]
	public GameCharacter()
	{
	}
}
[Token(Token = "0x20000A2")]
public class GameCharacterForPlinthController : MonoBehaviour
{
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodies rigidBodies;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandPositions hands;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRTrackerContainer trackers;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CharacterData characterData;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MoveReplayer replayer;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isSetup;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FightingStyle fightingStyle;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float heightOffset;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1208828", Offset = "0x1208828", VA = "0x1208828")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x12088F0", Offset = "0x12088F0", VA = "0x12088F0")]
	public void setup(CharacterData characterData)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1208D80", Offset = "0x1208D80", VA = "0x1208D80")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1208E6C", Offset = "0x1208E6C", VA = "0x1208E6C")]
	public GameCharacterForPlinthController()
	{
	}
}
[Token(Token = "0x20000A3")]
public class GameController : MonoBehaviour
{
	[Token(Token = "0x20000A4")]
	public enum FightState
	{
		[Token(Token = "0x40005A4")]
		Pre,
		[Token(Token = "0x40005A5")]
		Ready,
		[Token(Token = "0x40005A6")]
		During,
		[Token(Token = "0x40005A7")]
		Over
	}

	[Token(Token = "0x20000A5")]
	public enum GameMode
	{
		[Token(Token = "0x40005A9")]
		None,
		[Token(Token = "0x40005AA")]
		Normal,
		[Token(Token = "0x40005AB")]
		Edit,
		[Token(Token = "0x40005AC")]
		No_Fight,
		[Token(Token = "0x40005AD")]
		Chambers,
		[Token(Token = "0x40005AE")]
		Quick,
		[Token(Token = "0x40005AF")]
		cpuVScpu,
		[Token(Token = "0x40005B0")]
		CharacterEditor
	}

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fps;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB248", Offset = "0x4BB248")]
	public float timeScale;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameCharacter> players;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameCharacter player;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameCharacter characterPrefab;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameData gameData;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int selectedLevel;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ninjaCount;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatingCanvasController floatingCanvas;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameController instance;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FightState fightState;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float healthDamage;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float healthRecharge;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int firstTo;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int selectedPos;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int characterID;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int costume;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int aiMode;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AIMode[] ai_Modes;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public DifficultyLevel difficultyLevel;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int lowestDifficultyLevel;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool hasCheated;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameMode gameMode;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameModeData specialMode;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string customUnlock;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SceneController scenes;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public KeyCode nextAIModeKey;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MenuController menu;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public StandButtonsController standButtons;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SwooshIfFast swooshPrefab;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FootstepController footstepPrefab;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float fightOverTime;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioMixer mixer;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public NoPlayerControl noPlayer;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public WinLoseDisplay winLose;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public PortraitCameraController portraitCamera;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool movingAllowed;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public CharacterData[] levelCharacters;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject debugSphere;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int[] teamCounts;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool initSetup;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool wereAllDown;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	public bool calibrating;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	public bool calibrateReset;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float quitTimer;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float fpsTime;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<ProjectileController> projectiles;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool canGetUp;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public LayerMask groundLayers;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool paused;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool indicatorsOn;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float headY;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float specialModeTimer;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float specialModeDifficulty;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int specialModeScore;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int specialModeSpawnCount;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public int specialModeSpawnCountTotal;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int pressurePointCount;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool finalBoss;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool winner;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int m_frameCounter;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float m_timeCounter;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float m_refreshTime;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float uberHitTimer;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float startTime;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool doAdvancedCalibrate;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	public bool goBackToMain;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string quitTimerText;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int retryCount;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1208E7C", Offset = "0x1208E7C", VA = "0x1208E7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x11FCC08", Offset = "0x11FCC08", VA = "0x11FCC08")]
	public static bool realismMode(bool includeCustom)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1209030", Offset = "0x1209030", VA = "0x1209030")]
	public static bool customBool(string name, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1201E90", Offset = "0x1201E90", VA = "0x1201E90")]
	public static int customInt(string name, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1209144", Offset = "0x1209144", VA = "0x1209144")]
	public void cpuVsCpu()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1205800", Offset = "0x1205800", VA = "0x1205800")]
	public static float customMod(string name)
	{
		return default(float);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x12090C8", Offset = "0x12090C8", VA = "0x12090C8")]
	public static bool isCustom()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1209690", Offset = "0x1209690", VA = "0x1209690")]
	private void fpsCounter()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x11FF554", Offset = "0x11FF554", VA = "0x11FF554")]
	public static Vector3 flatVector(Vector3 inVector, bool normalize = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x12096FC", Offset = "0x12096FC", VA = "0x12096FC")]
	public void toggleIndicators()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1209820", Offset = "0x1209820", VA = "0x1209820")]
	public void unpause()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x12098FC", Offset = "0x12098FC", VA = "0x12098FC")]
	public void calibrate(bool reset)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x120992C", Offset = "0x120992C", VA = "0x120992C")]
	public bool outOfBounds(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x12099CC", Offset = "0x12099CC", VA = "0x12099CC")]
	public string difficultyText(float difficulty)
	{
		return null;
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1209AC0", Offset = "0x1209AC0", VA = "0x1209AC0")]
	public void setAudioMixerGroup(AudioSource audioSource, string group = "Sound Effects")
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1209C70", Offset = "0x1209C70", VA = "0x1209C70")]
	private void startFight()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x12047FC", Offset = "0x12047FC", VA = "0x12047FC")]
	public void beginAgain()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x120A180", Offset = "0x120A180", VA = "0x120A180")]
	public void smashAction(StandPositionIndicator standPos)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x120A034", Offset = "0x120A034", VA = "0x120A034")]
	private void resetCharacters()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x120A1FC", Offset = "0x120A1FC", VA = "0x120A1FC")]
	public void buttonAction(StandPositionIndicator standPos)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x120B5C4", Offset = "0x120B5C4", VA = "0x120B5C4")]
	public int getNextCharacterID()
	{
		return default(int);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x120B75C", Offset = "0x120B75C", VA = "0x120B75C")]
	public void standAction(StandPositionIndicator standPos, bool on)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x120C628", Offset = "0x120C628", VA = "0x120C628")]
	public GameCharacter addFighter(int fighterID, CharacterData character, int teamIndex, Vector3 position, float rotation, float difficultyMod, bool aboveGround)
	{
		return null;
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1201734", Offset = "0x1201734", VA = "0x1201734")]
	public int teamLives(int team)
	{
		return default(int);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x120B66C", Offset = "0x120B66C", VA = "0x120B66C")]
	public void removeFighter(GameCharacter fighter)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x120C8F0", Offset = "0x120C8F0", VA = "0x120C8F0")]
	public GameCharacter addFighter(int fighterID, int characterIndex, int teamIndex, Vector3 position, float rotation, float difficultyMod, bool aboveGround)
	{
		return null;
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x120C4D4", Offset = "0x120C4D4", VA = "0x120C4D4")]
	public void clearEnemies()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1209270", Offset = "0x1209270", VA = "0x1209270")]
	public void clearFighters()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x120C938", Offset = "0x120C938", VA = "0x120C938")]
	public CharacterData selectedCharacter()
	{
		return null;
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x120C990", Offset = "0x120C990", VA = "0x120C990")]
	public LocationData selectedLevelData()
	{
		return null;
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x120C9D8", Offset = "0x120C9D8", VA = "0x120C9D8")]
	public void retry()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x120CAAC", Offset = "0x120CAAC", VA = "0x120CAAC")]
	public void addPlayer(int spawnPoint = 0)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x120D120", Offset = "0x120D120", VA = "0x120D120")]
	public void joinGame(float difficulty)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x120D2BC", Offset = "0x120D2BC", VA = "0x120D2BC")]
	private void resetGetUp()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x120D2C8", Offset = "0x120D2C8", VA = "0x120D2C8")]
	public void getStandingIndeces(int team)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x120A148", Offset = "0x120A148", VA = "0x120A148")]
	public void getAllStandingIndeces()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1202D50", Offset = "0x1202D50", VA = "0x1202D50")]
	public void checkWin()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x120D49C", Offset = "0x120D49C", VA = "0x120D49C")]
	private void zoomOut()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x120D548", Offset = "0x120D548", VA = "0x120D548")]
	public GameCharacter getToFollow(bool prioritizePlayer)
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1208488", Offset = "0x1208488", VA = "0x1208488")]
	public GameCharacter getClosestEnemy(GameCharacter to)
	{
		return null;
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x120D638", Offset = "0x120D638", VA = "0x120D638")]
	public AIMode currentAIMode()
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x120D678", Offset = "0x120D678", VA = "0x120D678")]
	public void init()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x120D6F8", Offset = "0x120D6F8", VA = "0x120D6F8")]
	public void addMenuFighters()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x120DFB4", Offset = "0x120DFB4", VA = "0x120DFB4")]
	private void taunts()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x120E0E0", Offset = "0x120E0E0", VA = "0x120E0E0")]
	private int getFreeFighterID()
	{
		return default(int);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x120E2D8", Offset = "0x120E2D8", VA = "0x120E2D8")]
	public void abandonFight()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x120E4D4", Offset = "0x120E4D4", VA = "0x120E4D4")]
	private void updateSpecialMode()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x120F6C0", Offset = "0x120F6C0", VA = "0x120F6C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1210A38", Offset = "0x1210A38", VA = "0x1210A38")]
	public GameController()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1210A6C", Offset = "0x1210A6C", VA = "0x1210A6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C33D4", Offset = "0x4C33D4")]
	private void <Update>b__118_0()
	{
	}
}
[Token(Token = "0x20000A6")]
public class GameData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9918", Offset = "0x4B9918")]
	private sealed class <>c
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<CharacterData> <>9__73_0;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<CharacterData> <>9__74_0;

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x761958", Offset = "0x761958", VA = "0x761958")]
		public <>c()
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x761960", Offset = "0x761960", VA = "0x761960")]
		internal int <setupNewGame>b__73_0(CharacterData c1, CharacterData c2)
		{
			return default(int);
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x761988", Offset = "0x761988", VA = "0x761988")]
		internal int <reshuffle>b__74_0(CharacterData c1, CharacterData c2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameData instance;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Version version;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool audioTest;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int audioTestNum;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool devModeEnabled;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool testModeEnabled;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CalibrationData calibration;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OptionCategory[] options;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OptionCategory[] customGameOptions;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CharacterData[] characters;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpecialMoveData[] specialMoves;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PerkData[] perks;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PerkData[] weaknesses;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LocationData[] locations;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PressurePointData[] pressurePoints;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CharacterEffectData[] characterEffects;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CharacterVoice practiceVoices;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string[] tips;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameModeData[] specialModes;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string[] ignoreErrors;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB260", Offset = "0x4BB260")]
	public bool isKnuckles;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool fingerTracking;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool fbtTrackersPresent;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VRProfile vrProfile;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VRProfile[] vrProfileOverrides;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VRControlTip[] vrControlTips;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRManager ovrManager;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB298", Offset = "0x4BB298")]
	public int characterID;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int stars;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CharacterData nextCharacter;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public CharacterData[] characterOrder;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int totalStars;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int finalStars;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int difficultyLevelCompleted;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB2D0", Offset = "0x4BB2D0")]
	public int increaseStart;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int increaseDiffAfter;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public MoveRecorder moveRecorder;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool defaultDevsOn;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int onTip;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool chooseDifficulty;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	public bool demoVersion;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	public bool arcadeVersion;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
	public bool fbtEnabled;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool exportData;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	public bool importData;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string webPageFolderPath;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float nextErrorTime;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string loggedProfile;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float logOptions;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool cheatsEnabled;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public QuickFightSettings quickFightSettings;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x9263B0", Offset = "0x9263B0", VA = "0x9263B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x926D00", Offset = "0x926D00", VA = "0x926D00")]
	public int promotedSpecial()
	{
		return default(int);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x926D84", Offset = "0x926D84", VA = "0x926D84")]
	public string optionsLog()
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x926FCC", Offset = "0x926FCC", VA = "0x926FCC")]
	public CharacterData unlockLocationChar(LocationData.HomeLocation location)
	{
		return null;
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x9270AC", Offset = "0x9270AC", VA = "0x9270AC")]
	public StreamReader readFile(string filename)
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x927148", Offset = "0x927148", VA = "0x927148")]
	public void exportWebPage(string filename, string toWrite, string extenstion = "htm", bool andOpen = false)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x927338", Offset = "0x927338", VA = "0x927338")]
	public GameModeData getSpecialModeByName(string name)
	{
		return null;
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x926BA0", Offset = "0x926BA0", VA = "0x926BA0")]
	public PerkData getPerkByName(string name)
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x926958", Offset = "0x926958", VA = "0x926958")]
	public void resetOptions()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x92742C", Offset = "0x92742C", VA = "0x92742C")]
	public void ShowVRTip(int index)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x9274D8", Offset = "0x9274D8", VA = "0x9274D8")]
	public void ClearVRTip(int index)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x92757C", Offset = "0x92757C", VA = "0x92757C")]
	public void ShowVRTip()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x9276C0", Offset = "0x9276C0", VA = "0x9276C0")]
	public CharacterData getCharactersByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x9277C8", Offset = "0x9277C8", VA = "0x9277C8")]
	public CharacterEffectData getCharacterEffect(CharacterEffect.Effect effect)
	{
		return null;
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x927830", Offset = "0x927830", VA = "0x927830")]
	public void vrProfileSearch(string modelName)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x927984", Offset = "0x927984", VA = "0x927984")]
	public SpecialMoveData randomSpecialMove(bool isPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x927BCC", Offset = "0x927BCC", VA = "0x927BCC")]
	public string getTip()
	{
		return null;
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x927C68", Offset = "0x927C68", VA = "0x927C68")]
	public void unlockChars()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x9285A8", Offset = "0x9285A8", VA = "0x9285A8")]
	public void getNextFighter()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x928744", Offset = "0x928744", VA = "0x928744")]
	private int sortByNextFight(CharacterData c1, CharacterData c2)
	{
		return default(int);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x9288E0", Offset = "0x9288E0", VA = "0x9288E0")]
	public void getCompleted(bool anyMode)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x928ACC", Offset = "0x928ACC", VA = "0x928ACC")]
	public void setupNewGame(int slot)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x929644", Offset = "0x929644", VA = "0x929644")]
	public void reshuffle()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x929AF4", Offset = "0x929AF4", VA = "0x929AF4")]
	public int remainingStars()
	{
		return default(int);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x929B70", Offset = "0x929B70", VA = "0x929B70")]
	public void setupCharacters()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x9293F8", Offset = "0x9293F8", VA = "0x9293F8")]
	public void setupUnlocks()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x92A01C", Offset = "0x92A01C", VA = "0x92A01C")]
	private void ReceivedLog(string logString, string stackTrace, LogType logType)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x92A418", Offset = "0x92A418", VA = "0x92A418")]
	public CharacterData[] getLevelCharacters(LocationData.HomeLocation level)
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x9279C4", Offset = "0x9279C4", VA = "0x9279C4")]
	public CharacterData randomCharacter(bool allowUnlockedBosses, bool allowSpecials, bool tests = true, bool allowWacky = true)
	{
		return null;
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x92A534", Offset = "0x92A534", VA = "0x92A534")]
	public SpecialMoveData getSpecialMoveByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x92A5C0", Offset = "0x92A5C0", VA = "0x92A5C0")]
	public OptionCategory GetOptionCategory(bool custom, string name)
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x92A65C", Offset = "0x92A65C", VA = "0x92A65C")]
	private void importOptions(bool customGameOptions)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x92ACD0", Offset = "0x92ACD0", VA = "0x92ACD0")]
	private void exportOptions(bool customGame)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x92B010", Offset = "0x92B010", VA = "0x92B010")]
	private void exportPerks()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x92B1B8", Offset = "0x92B1B8", VA = "0x92B1B8")]
	private void exportSpecialMoves()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x92B2CC", Offset = "0x92B2CC", VA = "0x92B2CC")]
	private void exportAchievements()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x92B404", Offset = "0x92B404", VA = "0x92B404")]
	private void exportPressurePoints()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x92B518", Offset = "0x92B518", VA = "0x92B518")]
	private void exportDifficultyLevels()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x92BCD8", Offset = "0x92BCD8", VA = "0x92BCD8")]
	private void importSpecialMoves()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x92BF90", Offset = "0x92BF90", VA = "0x92BF90")]
	private void importAchievements()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x92C1D0", Offset = "0x92C1D0", VA = "0x92C1D0")]
	private void importPerks()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x92C56C", Offset = "0x92C56C", VA = "0x92C56C")]
	private void importPressurePoints()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x92C844", Offset = "0x92C844", VA = "0x92C844")]
	private void importDifficultyLevels()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x92CA84", Offset = "0x92CA84", VA = "0x92CA84")]
	private void importCharacters()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x92CCA0", Offset = "0x92CCA0", VA = "0x92CCA0")]
	private void exportGracDoc()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x92D3D4", Offset = "0x92D3D4", VA = "0x92D3D4")]
	private void exportCharacters()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x92DB60", Offset = "0x92DB60", VA = "0x92DB60")]
	private string boolTableCell(bool value)
	{
		return null;
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x92DBF8", Offset = "0x92DBF8", VA = "0x92DBF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x92E058", Offset = "0x92E058", VA = "0x92E058")]
	public GameData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A8")]
public class GameModeData
{
	[Token(Token = "0x20000A9")]
	public enum Status
	{
		[Token(Token = "0x40005FF")]
		Live,
		[Token(Token = "0x4000600")]
		Beta,
		[Token(Token = "0x4000601")]
		EditorOnly,
		[Token(Token = "0x4000602")]
		Hidden
	}

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string description;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite icon;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string unlockInfo;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] tips;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string presenceText;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool saves;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int fixedLevel;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Status status;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DateRestriction promotionDate;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip activateSound;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool specialCharacters;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool hideHealthBar;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool hasDifficultyLevels;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool singleRound;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string specialType;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool centralSpawn;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool showEnemyPerks;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture thumbnail;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int best;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool unlocked;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool unlockedByDefault;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x92E0C0", Offset = "0x92E0C0", VA = "0x92E0C0")]
	public void localise()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x92E2AC", Offset = "0x92E2AC", VA = "0x92E2AC")]
	public bool canUnlock()
	{
		return default(bool);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x92E5F8", Offset = "0x92E5F8", VA = "0x92E5F8")]
	public bool tryUnlock()
	{
		return default(bool);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x92E82C", Offset = "0x92E82C", VA = "0x92E82C")]
	public string getUnlockInfo()
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x92ECE4", Offset = "0x92ECE4", VA = "0x92ECE4")]
	public bool isPromoted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x92ED58", Offset = "0x92ED58", VA = "0x92ED58")]
	public bool canShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x92E630", Offset = "0x92E630", VA = "0x92E630")]
	public string unlock()
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x92EE28", Offset = "0x92EE28", VA = "0x92EE28")]
	public string summary()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x92EED8", Offset = "0x92EED8", VA = "0x92EED8")]
	public GameModeData()
	{
	}
}
[Token(Token = "0x20000AA")]
public class GameOverBoard : MonoBehaviour
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI lostReason;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI finalScore;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI best;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x92EEE8", Offset = "0x92EEE8", VA = "0x92EEE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x92EEEC", Offset = "0x92EEEC", VA = "0x92EEEC")]
	public void show(string message)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x92F0C8", Offset = "0x92F0C8", VA = "0x92F0C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x92F0CC", Offset = "0x92F0CC", VA = "0x92F0CC")]
	public GameOverBoard()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AB")]
public class GameStat
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float value;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string suffix;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string difficulty;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x92F0D4", Offset = "0x92F0D4", VA = "0x92F0D4")]
	public GameStat(string name)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x92F100", Offset = "0x92F100", VA = "0x92F100")]
	public string display()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000AC")]
public class GameStats
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameStat[] stats;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float saveTimer;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x92F130", Offset = "0x92F130", VA = "0x92F130")]
	public void incrementStat(string name, bool checkAchievement)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x9284D8", Offset = "0x9284D8", VA = "0x9284D8")]
	public void maxStat(string name, float value, bool checkAchievement, bool isInt, string suffix = "")
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x92F3C4", Offset = "0x92F3C4", VA = "0x92F3C4")]
	public void minStat(string name, float value, bool checkAchievement, bool isInt)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x92E4EC", Offset = "0x92E4EC", VA = "0x92E4EC")]
	public GameStat getStat(string name, float defaultValue = 0f)
	{
		return null;
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x92F488", Offset = "0x92F488", VA = "0x92F488")]
	public GameStat updateStat(string name, float defaultValue = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x92F1DC", Offset = "0x92F1DC", VA = "0x92F1DC")]
	private GameStat GetOrAddStat(string name)
	{
		return null;
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x92939C", Offset = "0x92939C", VA = "0x92939C")]
	public void clear()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x92F4C8", Offset = "0x92F4C8", VA = "0x92F4C8")]
	public GameStats()
	{
	}
}
[Token(Token = "0x20000AD")]
public class GauntletTrackController : MonoBehaviour
{
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody block;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float accel;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSpeed;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDistance;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float threshHold;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x92F4D0", Offset = "0x92F4D0", VA = "0x92F4D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x92F554", Offset = "0x92F554", VA = "0x92F554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x92F858", Offset = "0x92F858", VA = "0x92F858")]
	public GauntletTrackController()
	{
	}
}
[Token(Token = "0x20000AE")]
public class GeneralCameraController : MonoBehaviour
{
	[Token(Token = "0x6000346")]
	[Address(RVA = "0x92FEC8", Offset = "0x92FEC8", VA = "0x92FEC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x92FECC", Offset = "0x92FECC", VA = "0x92FECC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x92FED0", Offset = "0x92FED0", VA = "0x92FED0")]
	public GeneralCameraController()
	{
	}
}
[Token(Token = "0x20000AF")]
public class GeneralChamberController : MonoBehaviour
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GeneralChamberController instance;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StandButtonsController[] chamberContents;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] desc;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BronzeDummyHitArea[] dummies;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int onEnableSound;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int onDisableSound;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x92FED8", Offset = "0x92FED8", VA = "0x92FED8")]
	private void Start()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x9300A4", Offset = "0x9300A4", VA = "0x9300A4")]
	public void showNextTip()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x9300F8", Offset = "0x9300F8", VA = "0x9300F8")]
	private void showTip()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x930220", Offset = "0x930220", VA = "0x930220")]
	private void Update()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x9303B8", Offset = "0x9303B8", VA = "0x9303B8")]
	public GeneralChamberController()
	{
	}
}
[Token(Token = "0x20000B0")]
public class GeneralSounds : MonoBehaviour
{
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GeneralSounds instance;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AudioSource audioSource;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB308", Offset = "0x4BB308")]
	public AudioClip[] sounds;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB340", Offset = "0x4BB340")]
	public VoiceData[] femaleHurt_voice;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VoiceData[] maleHurt_voice;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip grab;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip release;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x9303CC", Offset = "0x9303CC", VA = "0x9303CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x930448", Offset = "0x930448", VA = "0x930448")]
	public static void playSound(AudioClip clip, float volume = 1f)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x92A2DC", Offset = "0x92A2DC", VA = "0x92A2DC")]
	public static void playSound(int clip, float volume = 1f)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x930508", Offset = "0x930508", VA = "0x930508")]
	public GeneralSounds()
	{
	}
}
[Token(Token = "0x20000B1")]
public class GlassesController : MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LensController leftLens;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LensController rightLens;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool test;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource audioSource;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool done;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x930510", Offset = "0x930510", VA = "0x930510")]
	public void Start()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x930514", Offset = "0x930514", VA = "0x930514")]
	public void smash(bool left)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x930614", Offset = "0x930614", VA = "0x930614")]
	public void show(bool visible)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x930674", Offset = "0x930674", VA = "0x930674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x9306B0", Offset = "0x9306B0", VA = "0x9306B0")]
	public GlassesController()
	{
	}
}
[Token(Token = "0x20000B2")]
public class GrabSpecialMove : Grabbable
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string specialMoveName;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string specialMoveName_left;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SpecialMoveData specialMove;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SpecialMoveData specialMove_Left;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x9309BC", Offset = "0x9309BC", VA = "0x9309BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x930B3C", Offset = "0x930B3C", VA = "0x930B3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x930C28", Offset = "0x930C28", VA = "0x930C28")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x930D14", Offset = "0x930D14", VA = "0x930D14", Slot = "4")]
	public override void grab(Muscle muscle)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x930E80", Offset = "0x930E80", VA = "0x930E80", Slot = "5")]
	public override void release()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x930E84", Offset = "0x930E84", VA = "0x930E84")]
	public GrabSpecialMove()
	{
	}
}
[Token(Token = "0x20000B3")]
public class Grabbable : MonoBehaviour
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gripName;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform originalParent;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider mainCollider;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SphereCollider grabCollider;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 velocity;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 lastPos;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float bounceSpeed;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float smashSpeed;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GrabbleSmashEffect smashEffect;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] bounceSounds;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioSource;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float smashTime;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool smashed;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool isCrockery;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Hittable thrower;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x930E94", Offset = "0x930E94", VA = "0x930E94")]
	private void Start()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x9311A4", Offset = "0x9311A4", VA = "0x9311A4")]
	public void reset()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x9311DC", Offset = "0x9311DC", VA = "0x9311DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x9312F4", Offset = "0x9312F4", VA = "0x9312F4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x9313E0", Offset = "0x9313E0", VA = "0x9313E0", Slot = "4")]
	public virtual void grab(Muscle muscle)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x9314D8", Offset = "0x9314D8", VA = "0x9314D8", Slot = "5")]
	public virtual void release()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x931564", Offset = "0x931564", VA = "0x931564")]
	private void smash()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x9316CC", Offset = "0x9316CC", VA = "0x9316CC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x931C54", Offset = "0x931C54", VA = "0x931C54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x930E8C", Offset = "0x930E8C", VA = "0x930E8C")]
	public Grabbable()
	{
	}
}
[Token(Token = "0x20000B4")]
public class GrabbleSmashEffect : MonoBehaviour
{
	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] sounds;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lifeTime;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x931E38", Offset = "0x931E38", VA = "0x931E38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x932224", Offset = "0x932224", VA = "0x932224")]
	public GrabbleSmashEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B5")]
public class GripCode
{
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string objectName;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string code;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gripping;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x932234", Offset = "0x932234", VA = "0x932234")]
	public GripCode()
	{
	}
}
[Token(Token = "0x20000B6")]
public class GripController : MonoBehaviour
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB378", Offset = "0x4BB378")]
	public Collider toGrip;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int gripID;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int wasGrip;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Grips grips;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB3B0", Offset = "0x4BB3B0")]
	public bool setFromCode;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GripFinger[] fingers;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3[] gripRotations;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 relativePosition;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 relativeRotation;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool done;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GripCode gc;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool flip;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x93223C", Offset = "0x93223C", VA = "0x93223C")]
	private void Start()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x932DC4", Offset = "0x932DC4", VA = "0x932DC4")]
	public void SetGripFromCode(string code)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x932F80", Offset = "0x932F80", VA = "0x932F80")]
	public static Vector3 stringToVect(string s, bool flip)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x933220", Offset = "0x933220", VA = "0x933220")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x933FC8", Offset = "0x933FC8", VA = "0x933FC8")]
	public GripController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B7")]
public class GripFinger
{
	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] joints;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] rotations;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 gripRotation;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB3E8", Offset = "0x4BB3E8")]
	public float gripPerc;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float curling;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool isThumb;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string code;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform downDirection;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x932A70", Offset = "0x932A70", VA = "0x932A70")]
	public GripFinger(Transform root, Vector3 gripRotation)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x932CB4", Offset = "0x932CB4", VA = "0x932CB4")]
	public void addDownTransform(GameObject newDir)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x933104", Offset = "0x933104", VA = "0x933104")]
	public void SetFromCode(string code, bool flip)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x9338D0", Offset = "0x9338D0", VA = "0x9338D0")]
	public void Update(float delta, Collider collider)
	{
	}
}
[Serializable]
[Token(Token = "0x20000B8")]
public class GripFingerSimple
{
	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] joints;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] rotations;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 gripRotation;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isThumb;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x933FD8", Offset = "0x933FD8", VA = "0x933FD8")]
	public GripFingerSimple(Transform root, Vector3 gripRotation)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x934214", Offset = "0x934214", VA = "0x934214")]
	public void SetFromCode(string code, bool flip, float perc)
	{
	}
}
[Token(Token = "0x20000B9")]
public class Grips : MonoBehaviour
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GripCode> codes;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] gripRotations;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB400", Offset = "0x4BB400")]
	private Transform leftHand;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform rightHand;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 r_relativePosition;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 r_relativeRotation;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 l_relativePosition;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 l_relativeRotation;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GripFingerSimple[] l_fingers;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GripFingerSimple[] r_fingers;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x9343CC", Offset = "0x9343CC", VA = "0x9343CC")]
	public void Setup(Transform leftHand, Transform rightHand)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x934AE8", Offset = "0x934AE8", VA = "0x934AE8")]
	public void SetFromCode(string name, bool rightHand, float perc, [Optional] Grabbable itemGrab)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x934E70", Offset = "0x934E70", VA = "0x934E70")]
	public GripCode GetCodeByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x935020", Offset = "0x935020", VA = "0x935020")]
	public static Vector3 stringToVect(string s, bool flip)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x9351A4", Offset = "0x9351A4", VA = "0x9351A4")]
	public Grips()
	{
	}
}
[Token(Token = "0x20000BA")]
public class GuillotineController : ProjectileController
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform blades;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float bladeSpinPerc;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float bladeSpinWindupTime;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float bladeSpinSpeed;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameCharacter target;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float targetTimer;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float maxSpeed;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float accelerate;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float nextHitTime;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x9351AC", Offset = "0x9351AC", VA = "0x9351AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x9351B0", Offset = "0x9351B0", VA = "0x9351B0")]
	private void getTarget()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x935494", Offset = "0x935494", VA = "0x935494", Slot = "4")]
	public override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x935604", Offset = "0x935604", VA = "0x935604", Slot = "6")]
	public override void OnHit(Hittable hittable, Collider collider, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x93589C", Offset = "0x93589C", VA = "0x93589C", Slot = "7")]
	public override void flyingMovement()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x935BEC", Offset = "0x935BEC", VA = "0x935BEC")]
	public GuillotineController()
	{
	}
}
[Token(Token = "0x20000BB")]
public class HUDController : MonoBehaviour
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameController game;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HealthBarController healthBarPrefab;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float healthBarSpacing;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HealthBarController[] healthBars;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI fps;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x935C08", Offset = "0x935C08", VA = "0x935C08")]
	public void setup()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x935EA4", Offset = "0x935EA4", VA = "0x935EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x936058", Offset = "0x936058", VA = "0x936058")]
	public HUDController()
	{
	}
}
[Token(Token = "0x20000BC")]
public class HandMeterController : MonoBehaviour
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rot;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas container;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image bar;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image maxBar;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image kickBar;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI scoreText;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image[] otherImages;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isHealth;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RigidBodies rigidBodies;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color offColour;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color highlightColour;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float highlightPerc;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI fps;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EffectCirclesController circles;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool moveReady;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float fpsInterval;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float pulseTime;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float showTimer;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x86CD38", Offset = "0x86CD38", VA = "0x86CD38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x86CDA0", Offset = "0x86CDA0", VA = "0x86CDA0")]
	public void reposition()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x86CDF8", Offset = "0x86CDF8", VA = "0x86CDF8")]
	private void doRepo()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x86CE7C", Offset = "0x86CE7C", VA = "0x86CE7C")]
	public void setup(RigidBodies rigidBodies, bool isHealth)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x86CF68", Offset = "0x86CF68", VA = "0x86CF68")]
	public void setToHealth()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x86D444", Offset = "0x86D444", VA = "0x86D444")]
	public void highlight(Color highlightColour)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x86D458", Offset = "0x86D458", VA = "0x86D458")]
	public void setToQi()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x86DA70", Offset = "0x86DA70", VA = "0x86DA70")]
	public void Update()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x86DEFC", Offset = "0x86DEFC", VA = "0x86DEFC")]
	public HandMeterController()
	{
	}
}
[Token(Token = "0x20000BD")]
public class HandOrFootEffect : SpecialMoveAttachedEffect
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hands;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] toAttach;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool done;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x86DF0C", Offset = "0x86DF0C", VA = "0x86DF0C", Slot = "4")]
	public override void setup(GameCharacter character)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x86E16C", Offset = "0x86E16C", VA = "0x86E16C", Slot = "5")]
	public override void end()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x86E264", Offset = "0x86E264", VA = "0x86E264")]
	public HandOrFootEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BE")]
public class HandPosition
{
	[Token(Token = "0x20000BF")]
	public enum Position
	{
		[Token(Token = "0x4000697")]
		None,
		[Token(Token = "0x4000698")]
		Open,
		[Token(Token = "0x4000699")]
		Fist,
		[Token(Token = "0x400069A")]
		Claw,
		[Token(Token = "0x400069B")]
		Finger,
		[Token(Token = "0x400069C")]
		TwoFinger,
		[Token(Token = "0x400069D")]
		Knuckle,
		[Token(Token = "0x400069E")]
		SnakeTakeToad,
		[Token(Token = "0x400069F")]
		Custom
	}

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Position position;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB438", Offset = "0x4BB438")]
	public bool update_l;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool update_r;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool copyRtoL;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool copyLtoR;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool test;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB470", Offset = "0x4BB470")]
	public bool replacesPalm;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool replacesFist;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool replacesClaw;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool index;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool middle;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool ring;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool pinky;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB4A8", Offset = "0x4BB4A8")]
	public Vector3[] r_rotations;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] l_rotations;

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x86E28C", Offset = "0x86E28C", VA = "0x86E28C")]
	public bool match(int pos, float indexCurl, float middleCurl, float ringCurl, float pinkyCurl)
	{
		return default(bool);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x86E328", Offset = "0x86E328", VA = "0x86E328")]
	public HandPosition()
	{
	}
}
[Token(Token = "0x20000C0")]
public class HandPositions : MonoBehaviour
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] curlTest;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RigidBodies puppet;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterData characterData;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHand;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform leftHand;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool active;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] r_bones;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] l_bones;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] indexFingers;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HandPosition[] handPositions;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int setTo;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VRCharacterActions vrActions;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool useSkeleton;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float r_squeezeAmount;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float l_squeezeAmount;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float r_squeezeAmount_secondary;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float l_squeezeAmount_secondary;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PuppetTrackerHandOffset l_offset;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PuppetTrackerHandOffset r_offset;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float squeezeSensitivity;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float rotateSpeed;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 r_handRotation_Offset;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 r_handRotation;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 l_handRotation_Offset;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Vector3 l_handRotation;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Grips grips;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] customLerps;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x86E330", Offset = "0x86E330", VA = "0x86E330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x86E6D4", Offset = "0x86E6D4", VA = "0x86E6D4")]
	public void setup(RigidBodies puppet, PuppetMaster puppetMaster, CharacterData characterData)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x86E52C", Offset = "0x86E52C", VA = "0x86E52C")]
	private Transform[] getBones(Transform hand)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x86E8D4", Offset = "0x86E8D4", VA = "0x86E8D4")]
	private float snapSqueeze(float squeeze, bool index = false)
	{
		return default(float);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x86E9C4", Offset = "0x86E9C4", VA = "0x86E9C4")]
	public float skeletonTrigger(bool isLeft)
	{
		return default(float);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x86E9CC", Offset = "0x86E9CC", VA = "0x86E9CC")]
	public bool skeletonPunch(bool isLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x86E9D4", Offset = "0x86E9D4", VA = "0x86E9D4")]
	private Quaternion fingerBoneTarget(float handSqueeze, int i, Transform[] bones, bool isLeft)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x86ED24", Offset = "0x86ED24", VA = "0x86ED24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x8704AC", Offset = "0x8704AC", VA = "0x8704AC")]
	public HandPositions()
	{
	}
}
[Token(Token = "0x20000C1")]
public class HeadRecoil : MonoBehaviour
{
	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 recoilDirection;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 offset;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 angleOffset;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float recoilSpeed;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float recoilDist;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minRecoilPower;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float recoilMaxAngle;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB4E0", Offset = "0x4BB4E0")]
	public float recoilTarget;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float recoverySpeed;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float recoilTargetAngle;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float wobbleTimer;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float wobblePin;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float wobbleMuscle;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x875118", Offset = "0x875118", VA = "0x875118")]
	private void Start()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x87511C", Offset = "0x87511C", VA = "0x87511C")]
	public void hit(Vector3 direction, float hitPower)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x8751CC", Offset = "0x8751CC", VA = "0x8751CC")]
	public float recoilPerc()
	{
		return default(float);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x875200", Offset = "0x875200", VA = "0x875200")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x875360", Offset = "0x875360", VA = "0x875360")]
	public HeadRecoil()
	{
	}
}
[Token(Token = "0x20000C2")]
public class HealthBarController : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image bar;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image maxBar;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image specialBar;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image bgBar;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI playerName;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool aiDisplay;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image aiTargetPlayer;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image aiKeepAway;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image aiSizeUp;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image[] hearts;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EffectCirclesController circle;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color bgBar_off;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color bgBar_on;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float barPerc;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float pulseTime;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool showPluralIfMultiple;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x875384", Offset = "0x875384", VA = "0x875384")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x875388", Offset = "0x875388", VA = "0x875388")]
	public void update(GameCharacter player)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x875C10", Offset = "0x875C10", VA = "0x875C10")]
	public HealthBarController()
	{
	}
}
[Token(Token = "0x20000C3")]
public class HideInChambers : MonoBehaviour
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToHide;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectShow;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x875C18", Offset = "0x875C18", VA = "0x875C18")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x875C1C", Offset = "0x875C1C", VA = "0x875C1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x875D38", Offset = "0x875D38", VA = "0x875D38")]
	public HideInChambers()
	{
	}
}
[Token(Token = "0x20000C4")]
public class HitEffect : MonoBehaviour
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem dust;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minDust;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxDust;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem sparks;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minSparks;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxSparks;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color minColor;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color maxColor;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem presureDisplay;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x875D40", Offset = "0x875D40", VA = "0x875D40")]
	public void setup(bool success, float perc, bool pressurePoint)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x876084", Offset = "0x876084", VA = "0x876084")]
	public HitEffect()
	{
	}
}
[Token(Token = "0x20000C5")]
public class HitEffects : MonoBehaviour
{
	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SlowMo> slowMos;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeSlowTarget;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeSlowPerc;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HitEffects instance;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minHitPower;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HitEffect hitEffectPrefab;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeSlowAmount;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minPitch;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float echoAmount;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float echoAmountRecharge;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float muffleAmount;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float muffleMinFreq;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimeSlow sloModeTimeSlow;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x87608C", Offset = "0x87608C", VA = "0x87608C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x8760DC", Offset = "0x8760DC", VA = "0x8760DC")]
	public bool doingSlowMo(bool isPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x86D91C", Offset = "0x86D91C", VA = "0x86D91C")]
	public bool sloMoExists()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x876250", Offset = "0x876250", VA = "0x876250")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x876788", Offset = "0x876788", VA = "0x876788")]
	public static SlowMo timeSlow(float perc, float changeSpeed, bool instant = false, bool tieToQi = false)
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x876974", Offset = "0x876974", VA = "0x876974")]
	public static void addHitEffect(bool success, float hitPerc, Vector3 hitPoint, Vector3 hitNormal, bool showPerc)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x876C24", Offset = "0x876C24", VA = "0x876C24")]
	public static void addHitEffect(bool success, float hitPerc, float damagePerc, Vector3 hitPoint, Vector3 hitNormal, string bodyPart, GameCharacter character, bool showPerc, bool wasPressurePoint = false)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x876E8C", Offset = "0x876E8C", VA = "0x876E8C")]
	public HitEffects()
	{
	}
}
[Token(Token = "0x20000C6")]
public class HitSoundsController : MonoBehaviour
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HitSoundsController instance;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] stoneSounds;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] woodSounds;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] metalSounds;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] bodySounds;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] armSounds;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] headSounds;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] fallSounds;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] clangSounds;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x876EB8", Offset = "0x876EB8", VA = "0x876EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x876F08", Offset = "0x876F08", VA = "0x876F08")]
	public static void playSound(AudioSource src, Hittable.HitType hitType, float volume)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x877174", Offset = "0x877174", VA = "0x877174")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x877178", Offset = "0x877178", VA = "0x877178")]
	public HitSoundsController()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4B9928", Offset = "0x4B9928")]
public class HitSurface : MonoBehaviour
{
	[Token(Token = "0x20000C8")]
	public delegate void HitDummy(Vector3 point, Hittable.HandHitType hitType, HitSurface surface);

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hittable.HitType surface;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] overrideSounds;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bounce;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float hitTime;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] sideHits;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lastRnd;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HitDummy onSuccessHit;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider lastHit;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool skipMinPower;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Collider> colliding;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x877180", Offset = "0x877180", VA = "0x877180")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x8771B0", Offset = "0x8771B0", VA = "0x8771B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x87743C", Offset = "0x87743C", VA = "0x87743C", Slot = "4")]
	public virtual void OnHit(Hittable hitBy, Hittable.HandHitType hitType, float force, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x87763C", Offset = "0x87763C", VA = "0x87763C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x877700", Offset = "0x877700", VA = "0x877700")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x8780F8", Offset = "0x8780F8", VA = "0x8780F8", Slot = "5")]
	public virtual void ProjectileHit(ProjectileController projectile, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x87750C", Offset = "0x87750C", VA = "0x87750C")]
	public void PlaySound(AudioSource audioSource)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x8780FC", Offset = "0x8780FC", VA = "0x8780FC")]
	public bool bouncesProjectiles()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x87811C", Offset = "0x87811C", VA = "0x87811C")]
	public HitSurface()
	{
	}
}
[Token(Token = "0x20000C9")]
public class Hittable : MonoBehaviour
{
	[Token(Token = "0x20000CA")]
	public enum HitType
	{
		[Token(Token = "0x400071D")]
		Stone,
		[Token(Token = "0x400071E")]
		Wood,
		[Token(Token = "0x400071F")]
		Metal,
		[Token(Token = "0x4000720")]
		Body,
		[Token(Token = "0x4000721")]
		Head,
		[Token(Token = "0x4000722")]
		Arm,
		[Token(Token = "0x4000723")]
		Leg,
		[Token(Token = "0x4000724")]
		FallToGround,
		[Token(Token = "0x4000725")]
		Clang
	}

	[Token(Token = "0x20000CB")]
	public enum HandHitType
	{
		[Token(Token = "0x4000727")]
		General,
		[Token(Token = "0x4000728")]
		Punch,
		[Token(Token = "0x4000729")]
		FingerJab,
		[Token(Token = "0x400072A")]
		Palm,
		[Token(Token = "0x400072B")]
		Foot,
		[Token(Token = "0x400072C")]
		Blade,
		[Token(Token = "0x400072D")]
		Shin,
		[Token(Token = "0x400072E")]
		Knee
	}

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodies rb;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rigidBody;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider collider;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Muscle muscle;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BodyPartData bodyPart;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSource;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float speed;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float l_nextHitTime;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float r_nextHitTime;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpecialMoveController specialMove;

	[NonSerialized]
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform forwardAngle;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool isHand;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int collisionCount;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool grabbing;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Grabbable grabbed;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Grabbable> grabbables;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Hittable> grabLimbs;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Hittable grabHittable;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float grabTimer;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ConfigurableJoint grabJoint;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float grabDist;

	[Token(Token = "0x4000718")]
	private const float grabMassMlp = 5f;

	[Token(Token = "0x4000719")]
	private const int solverIterationMlp = 10;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float baseMass;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float massPerc;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x8781A4", Offset = "0x8781A4", VA = "0x8781A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x878230", Offset = "0x878230", VA = "0x878230")]
	public bool canGrab()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x8782C4", Offset = "0x8782C4", VA = "0x8782C4")]
	public bool speedCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x8784CC", Offset = "0x8784CC", VA = "0x8784CC")]
	public float getSqueeze(bool includeSecondary = false)
	{
		return default(float);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x87861C", Offset = "0x87861C", VA = "0x87861C")]
	public bool damageTimeCheck(bool left)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x8786C0", Offset = "0x8786C0", VA = "0x8786C0")]
	public void updateGrab()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x878DA4", Offset = "0x878DA4", VA = "0x878DA4")]
	private void releaseLimbGrab()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x878FF8", Offset = "0x878FF8", VA = "0x878FF8")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x879228", Offset = "0x879228", VA = "0x879228")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x877ED0", Offset = "0x877ED0", VA = "0x877ED0")]
	public HandHitType handHitType(Collision collision)
	{
		return default(HandHitType);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x87C060", Offset = "0x87C060", VA = "0x87C060")]
	public void hitSound(HitType hitType, float volume, AudioSource audioSource)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x87BFB4", Offset = "0x87BFB4", VA = "0x87BFB4")]
	public void hitSound(HitType hitType, float volume)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x87BEE8", Offset = "0x87BEE8", VA = "0x87BEE8")]
	public void hitSound(AudioClip clip, float volume)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x87C108", Offset = "0x87C108", VA = "0x87C108")]
	public Hittable()
	{
	}
}
[Token(Token = "0x20000CC")]
public class MaterialAlteration : MonoBehaviour
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB4F8", Offset = "0x4BB4F8")]
	public Vector4 makeUp1;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 makeUp2;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 makeUp3;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BB530", Offset = "0x4BB530")]
	public Vector3 colorPower;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x681D44", Offset = "0x681D44", VA = "0x681D44")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x681E90", Offset = "0x681E90", VA = "0x681E90")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x681FC0", Offset = "0x681FC0", VA = "0x681FC0")]
	public MaterialAlteration()
	{
	}
}
[Token(Token = "0x20000CD")]
public class IdlePoseCharacter : MonoBehaviour
{
	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FaceController face;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuppetMaster pm;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x87C1C8", Offset = "0x87C1C8", VA = "0x87C1C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x87C20C", Offset = "0x87C20C", VA = "0x87C20C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x87C210", Offset = "0x87C210", VA = "0x87C210")]
	public IdlePoseCharacter()
	{
	}
}
[Token(Token = "0x20000CE")]
public class ItemArray : MonoBehaviour
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject itemPrefab;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 spacing;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spacingVariance;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int count;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 offset;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 random;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x673E2C", Offset = "0x673E2C", VA = "0x673E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x6741D0", Offset = "0x6741D0", VA = "0x6741D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x6741D4", Offset = "0x6741D4", VA = "0x6741D4")]
	public ItemArray()
	{
	}
}
[Token(Token = "0x20000CF")]
public class Jig : MonoBehaviour
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] bones;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] lookTarget;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] pTarget;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] restPositions;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 rotateOffset;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 speed;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float accelerate;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float dampen;

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x6741E4", Offset = "0x6741E4", VA = "0x6741E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x67436C", Offset = "0x67436C", VA = "0x67436C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x674690", Offset = "0x674690", VA = "0x674690")]
	public Jig()
	{
	}
}
[Token(Token = "0x20000D0")]
public class KickController : MonoBehaviour
{
	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter gameCharacter;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRIK ik;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool kickingHeld;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KickLegController[] legs;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rig;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform aimAt;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform head;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] stageSpeeds;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float speedMod;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float aimDist;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float abandonSpeed;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float abandonPause;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool kicking;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float kickStamina;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float kickPause;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float kickSpeed;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool wasSpecial;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float pause;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip kickStartSound;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip kickSound;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool doneSound;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public LayerMask layerMask;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x6746A4", Offset = "0x6746A4", VA = "0x6746A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x6746A8", Offset = "0x6746A8", VA = "0x6746A8")]
	public void Kick()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x674F40", Offset = "0x674F40", VA = "0x674F40")]
	private void doKick(int legID, bool sideKick, float delay, bool specialBoost)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x674FFC", Offset = "0x674FFC", VA = "0x674FFC")]
	public void abandon(bool isLeft)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x675088", Offset = "0x675088", VA = "0x675088")]
	public bool hitCheck(bool isLeft, bool andAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x675158", Offset = "0x675158", VA = "0x675158")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x675C60", Offset = "0x675C60", VA = "0x675C60")]
	public KickController()
	{
	}
}
[Token(Token = "0x20000D1")]
public class KickLegController : MonoBehaviour
{
	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool play;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform chamberPosition;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform kickPosition;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform jumpPosition;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform chamberRotation;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform kickRotation;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rotate;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB568", Offset = "0x4BB568")]
	public float totalLerp;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool abandon;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool specialBoost;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int onStage;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float stageLerp;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float speed;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float delay;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Muscle foot;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float nextHitTime;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x675C7C", Offset = "0x675C7C", VA = "0x675C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x675C80", Offset = "0x675C80", VA = "0x675C80")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x675C84", Offset = "0x675C84", VA = "0x675C84")]
	public KickLegController()
	{
	}
}
[Token(Token = "0x20000D2")]
public class LeaderBoardDisplayController : MonoBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI heading;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leaderboardRowPrefab;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rowContainer;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string showOnStart;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isMiniGame;

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x676E34", Offset = "0x676E34", VA = "0x676E34")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x676F8C", Offset = "0x676F8C", VA = "0x676F8C")]
	public void show(string title, string leaderboardName, Vector3 position, Quaternion rotation, bool isMiniGame)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x677B2C", Offset = "0x677B2C", VA = "0x677B2C")]
	public void hide(bool miniGame)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x6779E4", Offset = "0x6779E4", VA = "0x6779E4")]
	private string nth(int rank)
	{
		return null;
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x677BFC", Offset = "0x677BFC", VA = "0x677BFC")]
	private string GetOrdinalSuffix(int num)
	{
		return null;
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x677DA4", Offset = "0x677DA4", VA = "0x677DA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x677DA8", Offset = "0x677DA8", VA = "0x677DA8")]
	public LeaderBoardDisplayController()
	{
	}
}
[Token(Token = "0x20000D3")]
public class LensController : MonoBehaviour
{
	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gone;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int onStage;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] stages;

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x677DB0", Offset = "0x677DB0", VA = "0x677DB0")]
	public void Start()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x677E28", Offset = "0x677E28", VA = "0x677E28")]
	public void nextStage()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x677EC0", Offset = "0x677EC0", VA = "0x677EC0")]
	public LensController()
	{
	}
}
[Token(Token = "0x20000D4")]
public class LevelPickerController : StandButtonsController
{
	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI heading;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI lowest;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameOverBoard gameOverDisplay;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public StandPositionIndicator standPosPrefab;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private StandPositionIndicator[] standPositions;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public StandPositionIndicator changeChar;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public StandPositionIndicator practiceMove;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public StandPositionIndicator advancedCalibrateButton;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public StandPositionIndicator fbtTrainingButton;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public StandPositionIndicator[] skipButtons;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float radius;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float arc;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Material disabledMaterial;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color gotAllColour;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool setup;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float prevStars;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x677EC8", Offset = "0x677EC8", VA = "0x677EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x67A3FC", Offset = "0x67A3FC", VA = "0x67A3FC")]
	public int SortByID(LocationData l1, LocationData l2)
	{
		return default(int);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x67A428", Offset = "0x67A428", VA = "0x67A428")]
	public int SortByLinearUnlock(LocationData l1, LocationData l2)
	{
		return default(int);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x67A454", Offset = "0x67A454", VA = "0x67A454")]
	public int SortByUnlockStars(LocationData l1, LocationData l2)
	{
		return default(int);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x67A5B8", Offset = "0x67A5B8", VA = "0x67A5B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x67A838", Offset = "0x67A838", VA = "0x67A838")]
	public LevelPickerController()
	{
	}
}
[Token(Token = "0x20000D5")]
public class LevelStarDisplay : MonoBehaviour
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite onSprite;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite offSprite;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite disabledSprite;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform starContainer;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StarPortraitController starPrefab;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 spacing;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool set;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x679FB4", Offset = "0x679FB4", VA = "0x679FB4")]
	public void setTo(LocationData location)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x67A850", Offset = "0x67A850", VA = "0x67A850")]
	public void setTo(CharacterData character)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x67ABB8", Offset = "0x67ABB8", VA = "0x67ABB8")]
	public LevelStarDisplay()
	{
	}
}
[Token(Token = "0x20000D6")]
public class LoadScene : MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sceneID;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x67ABC0", Offset = "0x67ABC0", VA = "0x67ABC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x67AC9C", Offset = "0x67AC9C", VA = "0x67AC9C")]
	private void delayedStart()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x67AD04", Offset = "0x67AD04", VA = "0x67AD04")]
	public LoadScene()
	{
	}
}
[Token(Token = "0x20000D7")]
public class LoadingTextLanguage : MonoBehaviour
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI txt;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset chineseFont;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset englishFont;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string englishText;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string chineseText;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x67AD0C", Offset = "0x67AD0C", VA = "0x67AD0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x67ADE4", Offset = "0x67ADE4", VA = "0x67ADE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x67ADE8", Offset = "0x67ADE8", VA = "0x67ADE8")]
	public LoadingTextLanguage()
	{
	}
}
[Token(Token = "0x20000D8")]
public class LocalisationController : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	public enum Language
	{
		[Token(Token = "0x40007A3")]
		English,
		[Token(Token = "0x40007A4")]
		Test,
		[Token(Token = "0x40007A5")]
		Chinese
	}

	[Token(Token = "0x20000DA")]
	public enum Action
	{
		[Token(Token = "0x40007A7")]
		None,
		[Token(Token = "0x40007A8")]
		ImportChinese,
		[Token(Token = "0x40007A9")]
		Validate
	}

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocalisationController instance;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Language language;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool refresh;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameData gameData;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] extraPhrases;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BB580", Offset = "0x4BB580")]
	public string[] extraPhrases_Long;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LocaliseText> added;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocalisationData data;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, LocaliseText> localised;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string filePath;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB598", Offset = "0x4BB598")]
	public float saveTimer;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audioSource;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action action;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_FontAsset defaultFont;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_FontAsset chineseFont;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BB5B0", Offset = "0x4BB5B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB5B0", Offset = "0x4BB5B0")]
	public string chineseCharacters;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool addingEnabled;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool bannedWords;

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x67ADF0", Offset = "0x67ADF0", VA = "0x67ADF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x67B340", Offset = "0x67B340", VA = "0x67B340")]
	private void Update()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x67B054", Offset = "0x67B054", VA = "0x67B054")]
	private void Load()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x67B5AC", Offset = "0x67B5AC", VA = "0x67B5AC")]
	private void Save()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x67C640", Offset = "0x67C640", VA = "0x67C640")]
	public string[] parseText(string allText)
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x67B6C0", Offset = "0x67B6C0", VA = "0x67B6C0")]
	public void importChinese(string webPageFolderPath)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x67C8DC", Offset = "0x67C8DC", VA = "0x67C8DC")]
	public void exportCSV(string webPageFolderPath)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x67CBEC", Offset = "0x67CBEC", VA = "0x67CBEC")]
	public void localiseData()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x67D49C", Offset = "0x67D49C", VA = "0x67D49C")]
	private int sortAdded(LocaliseText t1, LocaliseText t2)
	{
		return default(int);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x677A28", Offset = "0x677A28", VA = "0x677A28")]
	public static void getText(string category, TextMeshProUGUI textMesh)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x67D27C", Offset = "0x67D27C", VA = "0x67D27C")]
	public static void clearText(string category)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x679B34", Offset = "0x679B34", VA = "0x679B34")]
	public static string replaceText(string category, string text, string replace)
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x67D57C", Offset = "0x67D57C", VA = "0x67D57C")]
	public static string getChinese(string text)
	{
		return null;
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x67D854", Offset = "0x67D854", VA = "0x67D854")]
	public static string replaceBanned(string phrase)
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x679594", Offset = "0x679594", VA = "0x679594")]
	public static string getText(string category, string text, bool suppressError = false)
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x67D964", Offset = "0x67D964", VA = "0x67D964")]
	public LocalisationController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DB")]
public class LocalisationData
{
	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocaliseText[] phrases;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x67D9DC", Offset = "0x67D9DC", VA = "0x67D9DC")]
	public LocalisationData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DC")]
public class LocaliseText
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BB604", Offset = "0x4BB604")]
	public string englishPhrase;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string category;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BB61C", Offset = "0x4BB61C")]
	public string chinesePhrase;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x67C590", Offset = "0x67C590", VA = "0x67C590")]
	public void getName()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x67C8D4", Offset = "0x67C8D4", VA = "0x67C8D4")]
	public LocaliseText()
	{
	}
}
[Token(Token = "0x20000DD")]
public class LocaliseThis : MonoBehaviour
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string category;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalisationController.Language language;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x67D9E4", Offset = "0x67D9E4", VA = "0x67D9E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x67DBC4", Offset = "0x67DBC4", VA = "0x67DBC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x67DE18", Offset = "0x67DE18", VA = "0x67DE18")]
	public LocaliseThis()
	{
	}
}
[Token(Token = "0x20000DE")]
public class LocalisedFont : MonoBehaviour
{
	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] txt;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] origSize;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool overrideLanguage;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LocalisationController.Language overrideLanguageWith;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LocalisationController.Language language;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool debug;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x67DE20", Offset = "0x67DE20", VA = "0x67DE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x67DEEC", Offset = "0x67DEEC", VA = "0x67DEEC")]
	private void setFont()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x67E140", Offset = "0x67E140", VA = "0x67E140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x67E324", Offset = "0x67E324", VA = "0x67E324")]
	public LocalisedFont()
	{
	}
}
[Token(Token = "0x20000DF")]
public class LocalisedImage : MonoBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalisationController.Language language;

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x67E32C", Offset = "0x67E32C", VA = "0x67E32C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x67E3A8", Offset = "0x67E3A8", VA = "0x67E3A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x67E3AC", Offset = "0x67E3AC", VA = "0x67E3AC")]
	public LocalisedImage()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E0")]
public class LocationData
{
	[Token(Token = "0x20000E1")]
	public enum HomeLocation
	{
		[Token(Token = "0x40007C7")]
		ShaolinTemple,
		[Token(Token = "0x40007C8")]
		BambooForest,
		[Token(Token = "0x40007C9")]
		Restaurant,
		[Token(Token = "0x40007CA")]
		Dojo,
		[Token(Token = "0x40007CB")]
		Cult,
		[Token(Token = "0x40007CC")]
		WingChunSchool,
		[Token(Token = "0x40007CD")]
		ChengSchool,
		[Token(Token = "0x40007CE")]
		BoxingRing,
		[Token(Token = "0x40007CF")]
		ImperialPalace,
		[Token(Token = "0x40007D0")]
		LeiTai,
		[Token(Token = "0x40007D1")]
		NinjaCamp,
		[Token(Token = "0x40007D2")]
		ChamberOfDespair,
		[Token(Token = "0x40007D3")]
		SnowyMountain,
		[Token(Token = "0x40007D4")]
		DragonTemple,
		[Token(Token = "0x40007D5")]
		NinjaDojo,
		[Token(Token = "0x40007D6")]
		ShaolinTempleNight
	}

	[Token(Token = "0x20000E2")]
	public enum SpecialRequirement
	{
		[Token(Token = "0x40007D8")]
		None,
		[Token(Token = "0x40007D9")]
		BeatOthers,
		[Token(Token = "0x40007DA")]
		BeatFengXiu,
		[Token(Token = "0x40007DB")]
		BeatHighPriest
	}

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB634", Offset = "0x4BB634")]
	public string name;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int sceneIndex;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpecialRequirement specialRequirement;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture thumbnail;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB66C", Offset = "0x4BB66C")]
	public bool unlocked;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int toUnlock;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int nextUnlock;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool includeInDemo;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int linearOrder;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int gotStars;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int availableStars;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int totalStars;

	[NonSerialized]
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool charactersUnlocked;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x67D22C", Offset = "0x67D22C", VA = "0x67D22C")]
	public void localise()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x67943C", Offset = "0x67943C", VA = "0x67943C")]
	public CharacterData[] characters()
	{
		return null;
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x67E3B4", Offset = "0x67E3B4", VA = "0x67E3B4")]
	public void reset()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x679584", Offset = "0x679584", VA = "0x679584")]
	public bool includeInQuickFight()
	{
		return default(bool);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x679BAC", Offset = "0x679BAC", VA = "0x679BAC")]
	public string specialRequirementError()
	{
		return null;
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x67A4EC", Offset = "0x67A4EC", VA = "0x67A4EC")]
	public float minDifficulty()
	{
		return default(float);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x67A4DC", Offset = "0x67A4DC", VA = "0x67A4DC")]
	public int starOrder()
	{
		return default(int);
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x67E3C4", Offset = "0x67E3C4", VA = "0x67E3C4")]
	public LocationData()
	{
	}
}
[Token(Token = "0x20000E3")]
public class MLPForceSaveProbes : MonoBehaviour
{
	[Token(Token = "0x6000423")]
	[Address(RVA = "0x680A90", Offset = "0x680A90", VA = "0x680A90")]
	public MLPForceSaveProbes()
	{
	}
}
[Token(Token = "0x20000E4")]
public class MaterialColourByDifficulty : MonoBehaviour
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodies rb;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int materialIndex;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int index;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool showIfMain;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool showIfAlt;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float difficulty;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color setToColor;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x681FC8", Offset = "0x681FC8", VA = "0x681FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x681FCC", Offset = "0x681FCC", VA = "0x681FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x682220", Offset = "0x682220", VA = "0x682220")]
	public MaterialColourByDifficulty()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E5")]
public class MaterialSwap
{
	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x682238", Offset = "0x682238", VA = "0x682238")]
	public MaterialSwap()
	{
	}
}
[Token(Token = "0x20000E6")]
public class MenuButtonContoller : Breakable
{
	[Token(Token = "0x20000E7")]
	public delegate void OnPress(MenuButtonContoller button);

	[Serializable]
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9988", Offset = "0x4B9988")]
	private sealed class <>c
	{
		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnNext <>9__21_1;

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xDB2964", Offset = "0xDB2964", VA = "0xDB2964")]
		public <>c()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xDB296C", Offset = "0xDB296C", VA = "0xDB296C")]
		internal void <setup>b__21_1()
		{
		}
	}

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshProUGUI label;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshProUGUI englishLabel;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool allowPointer;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Color offColour;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Color hoverColour;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float highlight;

	[NonSerialized]
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RecordAction hoverAction;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string hoverText;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string action;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int id;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public KeyCode shortcutKey;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material emphasizeMaterial;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OnPress onPress;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<MenuButtonContoller> allButtons;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool extraSpaceBefore;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject slotDisplay;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Image slotBorder;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Image specialModeIcon;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public RawImage slotPic;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Sprite[] borders;

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x683768", Offset = "0x683768", VA = "0x683768")]
	public void setup(bool localise, string labelText, string englishText, string action, OnPress onPress, int id = 0, bool empty = false)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x683B70", Offset = "0x683B70", VA = "0x683B70")]
	public void showGameMode(GameModeData mode)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x683D90", Offset = "0x683D90", VA = "0x683D90")]
	public void showSlot(SaveGame slot, bool greyed)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x683F90", Offset = "0x683F90", VA = "0x683F90")]
	public void emphasize()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x683FD8", Offset = "0x683FD8", VA = "0x683FD8")]
	public bool highLight()
	{
		return default(bool);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x68403C", Offset = "0x68403C", VA = "0x68403C")]
	public void smash()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x6840DC", Offset = "0x6840DC", VA = "0x6840DC")]
	public static void disableAllButtons(bool disable)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x6842CC", Offset = "0x6842CC", VA = "0x6842CC")]
	private void resetButton()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x684384", Offset = "0x684384", VA = "0x684384")]
	private void delayedEnable()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x6843E0", Offset = "0x6843E0", VA = "0x6843E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x684628", Offset = "0x684628", VA = "0x684628")]
	public MenuButtonContoller()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x6846B8", Offset = "0x6846B8", VA = "0x6846B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C33E4", Offset = "0x4C33E4")]
	private void <setup>b__21_0()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x6846BC", Offset = "0x6846BC", VA = "0x6846BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C33F4", Offset = "0x4C33F4")]
	private void <showGameMode>b__22_0()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x6846EC", Offset = "0x6846EC", VA = "0x6846EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3404", Offset = "0x4C3404")]
	private void <showSlot>b__23_0()
	{
	}
}
[Token(Token = "0x20000E9")]
public class MenuController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9998", Offset = "0x4B9998")]
	private sealed class <>c
	{
		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Breakable.OnNext <>9__55_0;

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xDB2DE0", Offset = "0xDB2DE0", VA = "0xDB2DE0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xDB2DE8", Offset = "0xDB2DE8", VA = "0xDB2DE8")]
		internal void <showMenu>b__55_0()
		{
		}
	}

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject title;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject title_chinese;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI heading;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI extra;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI version;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRMenuActions vrActions;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MenuButtonContoller menuButtonPrefab;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MenuButtonContoller> buttons;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float spacing;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool showing;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool fixedInPlace;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float disablePress;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LineRenderer pointer;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform pointerFollowing;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask layerPress;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ModalController modal;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MenuButtonContoller hover;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int selectedStyle;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int selectedStance;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int selectedSpecialMove;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FightingStyle style;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float dist;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Color steamColour;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public LayerMask layerMask;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int selectedOptionCat;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int selectedOption;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string onMenu;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string prevMenu;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int prevMenuID;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool firstTime;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool mainMenu;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool holding;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MenuMessageController message;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Collider colliding;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int debugModeCount;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string defaultText;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string defaultToMenu;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool checkedCheats;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string showingMenuType;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int showingExtraID;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x68471C", Offset = "0x68471C", VA = "0x68471C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x684A98", Offset = "0x684A98", VA = "0x684A98")]
	private void checkVersion()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x684B7C", Offset = "0x684B7C", VA = "0x684B7C")]
	private void checkCheats()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x684D20", Offset = "0x684D20", VA = "0x684D20")]
	public void mainMenuPosition()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x68500C", Offset = "0x68500C", VA = "0x68500C")]
	private void initShow()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x68AF38", Offset = "0x68AF38", VA = "0x68AF38")]
	private void showFail()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x68AFD4", Offset = "0x68AFD4", VA = "0x68AFD4")]
	public void fadeIn()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x68B11C", Offset = "0x68B11C", VA = "0x68B11C")]
	public void hide()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x684864", Offset = "0x684864", VA = "0x684864")]
	private void clear()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x684DD0", Offset = "0x684DD0", VA = "0x684DD0")]
	public void setPos(float scale, float yOffset, Vector3 menuPosition)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x68B120", Offset = "0x68B120", VA = "0x68B120")]
	public void toggle(float scale)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x68B1CC", Offset = "0x68B1CC", VA = "0x68B1CC")]
	private MenuButtonContoller addButton(bool localise, string label, string englishLabel, string action, int id = 0, bool empty = false, [Optional] RecordAction hoverAction, string hoverText = "")
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x68B408", Offset = "0x68B408", VA = "0x68B408")]
	private void chamberStart()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x68B518", Offset = "0x68B518", VA = "0x68B518")]
	private bool specialsUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x68B6AC", Offset = "0x68B6AC", VA = "0x68B6AC")]
	public void refreshMenu()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x68508C", Offset = "0x68508C", VA = "0x68508C")]
	public void showMenu(string type, int extraID = 0)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x68C1E4", Offset = "0x68C1E4", VA = "0x68C1E4")]
	private void checkModeUnlocks()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x68BE2C", Offset = "0x68BE2C", VA = "0x68BE2C")]
	private void pauseMenuText()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x68B8F0", Offset = "0x68B8F0", VA = "0x68B8F0")]
	public void refreshDefaultMenuText()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x68C3F8", Offset = "0x68C3F8", VA = "0x68C3F8")]
	public void recordMove(RecordAction action, [Optional] RecordAction fromStance)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x68B830", Offset = "0x68B830", VA = "0x68B830")]
	public SpecialMove currentSpecialMove()
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x68B6B8", Offset = "0x68B6B8", VA = "0x68B6B8")]
	public FightingStyle currentStyle()
	{
		return null;
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x68B778", Offset = "0x68B778", VA = "0x68B778")]
	public FightingStyle_Stance currentStance()
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x68C6B0", Offset = "0x68C6B0", VA = "0x68C6B0")]
	public void pressButton(MenuButtonContoller button)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x68C758", Offset = "0x68C758", VA = "0x68C758")]
	public void overwriteSlot(int slot)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x68C8D4", Offset = "0x68C8D4", VA = "0x68C8D4")]
	public void reloadLevel()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x68C98C", Offset = "0x68C98C", VA = "0x68C98C")]
	public void pressButtonNext(MenuButtonContoller button)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x68F5B8", Offset = "0x68F5B8", VA = "0x68F5B8")]
	public void quitGame()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x68F630", Offset = "0x68F630", VA = "0x68F630")]
	public void openLink(string strURL, string heading, string message)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x68F6E4", Offset = "0x68F6E4", VA = "0x68F6E4")]
	private void quit()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x68F7A4", Offset = "0x68F7A4", VA = "0x68F7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x6904FC", Offset = "0x6904FC", VA = "0x6904FC")]
	public MenuController()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x69055C", Offset = "0x69055C", VA = "0x69055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3414", Offset = "0x4C3414")]
	private void <checkCheats>b__42_0()
	{
	}
}
[Token(Token = "0x20000EB")]
public class MenuMessageController : MonoBehaviour
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuButtonContoller quitButton;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MenuButtonContoller discordButton;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuButtonContoller emailButton;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x8ADA6C", Offset = "0x8ADA6C", VA = "0x8ADA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x8ADB9C", Offset = "0x8ADB9C", VA = "0x8ADB9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x8ADBA0", Offset = "0x8ADBA0", VA = "0x8ADBA0")]
	public MenuMessageController()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x8ADBA8", Offset = "0x8ADBA8", VA = "0x8ADBA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3424", Offset = "0x4C3424")]
	private void <Start>b__3_0()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x8ADC28", Offset = "0x8ADC28", VA = "0x8ADC28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3434", Offset = "0x4C3434")]
	private void <Start>b__3_1()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x8ADCF0", Offset = "0x8ADCF0", VA = "0x8ADCF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3444", Offset = "0x4C3444")]
	private void <Start>b__3_2()
	{
	}
}
[Token(Token = "0x20000EC")]
public class MicrophoneController : MonoBehaviour
{
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MicrophoneController instance;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioClip microphoneInput;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool microphoneInitialized;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string device;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int samples;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB6A4", Offset = "0x4BB6A4")]
	public float level;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minThreshold;

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x8ADDB8", Offset = "0x8ADDB8", VA = "0x8ADDB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x8ADE68", Offset = "0x8ADE68", VA = "0x8ADE68")]
	private void Update()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x8AE0C4", Offset = "0x8AE0C4", VA = "0x8AE0C4")]
	public MicrophoneController()
	{
	}
}
[Token(Token = "0x20000ED")]
public class MiniButtonController : MonoBehaviour
{
	[Token(Token = "0x20000EE")]
	public delegate void OnPress(MiniButtonController button);

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI label;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image colour;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image colour_skin;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int id;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string action;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color offColour;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color hoverColour;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float highlight;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool selected;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OnPress onPress;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float localY;

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x8AE0E0", Offset = "0x8AE0E0", VA = "0x8AE0E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x8AE118", Offset = "0x8AE118", VA = "0x8AE118")]
	public void setup(string label, int id, string action, bool selected, OnPress onPress)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x8AE1B8", Offset = "0x8AE1B8", VA = "0x8AE1B8")]
	public void press(Hittable h, AudioClip click)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x8AE24C", Offset = "0x8AE24C", VA = "0x8AE24C")]
	public void SetColour(Color colour, CustomisableMaterial.ColourType colourType)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x8AE32C", Offset = "0x8AE32C", VA = "0x8AE32C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x8AE44C", Offset = "0x8AE44C", VA = "0x8AE44C")]
	public MiniButtonController()
	{
	}
}
[Token(Token = "0x20000EF")]
public class MinimumLevelHeight : MonoBehaviour
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MinimumLevelHeight instance;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform testPos;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform rayPos;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform minPos;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider floor;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rayHeight;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private LayerMask layerMask;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool testing;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x8AE454", Offset = "0x8AE454", VA = "0x8AE454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x8AE680", Offset = "0x8AE680", VA = "0x8AE680")]
	public static float getMinHeight(StandButtonsController standButtons, Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x8AE8DC", Offset = "0x8AE8DC", VA = "0x8AE8DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x8AEA60", Offset = "0x8AEA60", VA = "0x8AEA60")]
	public MinimumLevelHeight()
	{
	}
}
[Token(Token = "0x20000F0")]
public class Movement : MonoBehaviour
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 movementVector;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x8B6B40", Offset = "0x8B6B40", VA = "0x8B6B40")]
	private void Update()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x8B6BCC", Offset = "0x8B6BCC", VA = "0x8B6BCC")]
	public Movement()
	{
	}
}
[Token(Token = "0x20000F1")]
[ExecuteInEditMode]
public class MobilePostProcessing : MonoBehaviour
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Blur;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB6BC", Offset = "0x4BB6BC")]
	public float BlurAmount;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D BlurMask;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Bloom;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color BloomColor;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB6D4", Offset = "0x4BB6D4")]
	public float BloomAmount;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB6EC", Offset = "0x4BB6EC")]
	public float BloomDiffuse;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB704", Offset = "0x4BB704")]
	public float BloomThreshold;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB71C", Offset = "0x4BB71C")]
	public float BloomSoftness;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool LUT;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB734", Offset = "0x4BB734")]
	public float LutAmount;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D SourceLut;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ImageFiltering;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color Color;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB74C", Offset = "0x4BB74C")]
	public float Contrast;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB764", Offset = "0x4BB764")]
	public float Brightness;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB77C", Offset = "0x4BB77C")]
	public float Saturation;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB794", Offset = "0x4BB794")]
	public float Exposure;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB7AC", Offset = "0x4BB7AC")]
	public float Gamma;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB7C4", Offset = "0x4BB7C4")]
	public float Sharpness;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool ChromaticAberration;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float Offset;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB7DC", Offset = "0x4BB7DC")]
	public float FishEyeDistortion;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB7F4", Offset = "0x4BB7F4")]
	public float GlitchAmount;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool Distortion;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB80C", Offset = "0x4BB80C")]
	public float LensDistortion;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool Vignette;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color VignetteColor;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB824", Offset = "0x4BB824")]
	public float VignetteAmount;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB83C", Offset = "0x4BB83C")]
	public float VignetteSoftness;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int blurTexString;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int maskTextureString;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int blurAmountString;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int bloomColorString;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int blDiffuseString;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int blDataString;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int lutTextureString;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int lutAmountString;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int colorString;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int contrastString;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int brightnessString;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int saturationString;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int centralFactorString;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int sideFactorString;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly int offsetString;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly int fishEyeString;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly int lensdistortionString;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static readonly int vignetteColorString;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly int vignetteAmountString;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static readonly int vignetteSoftnessString;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly string bloomKeyword;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly string blurKeyword;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly string chromaKeyword;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static readonly string lutKeyword;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly string filterKeyword;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static readonly string shaprenKeyword;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly string distortionKeyword;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material material;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D previous;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Texture3D converted3D;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float t;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float a;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float knee;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int numberOfPasses;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x8AEA70", Offset = "0x8AEA70", VA = "0x8AEA70")]
	public void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x8AEB5C", Offset = "0x8AEB5C", VA = "0x8AEB5C")]
	public void Update()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x8AEDE0", Offset = "0x8AEDE0", VA = "0x8AEDE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x8AEBF8", Offset = "0x8AEBF8", VA = "0x8AEBF8")]
	private void Convert3D(Texture2D temp3DTex)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x8AEE88", Offset = "0x8AEE88", VA = "0x8AEE88")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x8AFE04", Offset = "0x8AFE04", VA = "0x8AFE04")]
	public MobilePostProcessing()
	{
	}
}
[Token(Token = "0x20000F2")]
public class ModalController : MonoBehaviour
{
	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MenuButtonContoller okButton;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuButtonContoller cancelButton;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI label;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI note;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x8B030C", Offset = "0x8B030C", VA = "0x8B030C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x8B0310", Offset = "0x8B0310", VA = "0x8B0310")]
	public void hideModal()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x8B0364", Offset = "0x8B0364", VA = "0x8B0364")]
	public void showMessage(string message, string okButtonText, string closeButtonText, Breakable.OnNext onOK, Breakable.OnNext onCancel)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x8B0500", Offset = "0x8B0500", VA = "0x8B0500")]
	public void showOverwriteMessage()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x8B075C", Offset = "0x8B075C", VA = "0x8B075C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x8B0760", Offset = "0x8B0760", VA = "0x8B0760")]
	public ModalController()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x8B0768", Offset = "0x8B0768", VA = "0x8B0768")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3454", Offset = "0x4C3454")]
	private void <showOverwriteMessage>b__8_0()
	{
	}
}
[Token(Token = "0x20000F3")]
public class MoveRecorder : MonoBehaviour
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MoveRecorder instance;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool recording;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float recordStep;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float recordingElapsed;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RecordTracker[] trackDisplays;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer leftHandStartPos;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer rightHandStartPos;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RecordedActions actions;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float playBackSpeed;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lookPerc;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool alwaysLoop;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startTimer;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int announced;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool readyToGo;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AIController ai;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RecordAction recordingFromStance;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RecordAction recordingAction;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SavedFightingStyles saved;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x8B07D8", Offset = "0x8B07D8", VA = "0x8B07D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x8B08F0", Offset = "0x8B08F0", VA = "0x8B08F0")]
	public void playback(MoveReplayer replayer, float speed, float heightOffset, float heightPerc, HeadRecoil headRecoil, HandPositions hands, float headLookPerc)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x8B16B4", Offset = "0x8B16B4", VA = "0x8B16B4")]
	private void limitHand(Transform hand, MoveReplayer replayer, float amount, float minLocalZ)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x8B1884", Offset = "0x8B1884", VA = "0x8B1884")]
	public void setToRecord(RecordAction recordAction, RecordAction fromStance)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x8B18F8", Offset = "0x8B18F8", VA = "0x8B18F8")]
	private bool checkHandsInPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x8B1CAC", Offset = "0x8B1CAC", VA = "0x8B1CAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x8B256C", Offset = "0x8B256C", VA = "0x8B256C")]
	public MoveRecorder()
	{
	}
}
[Token(Token = "0x20000F4")]
public class MoveReplayer : MonoBehaviour
{
	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter character;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform l_hand;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform r_hand;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PuppetTrackerHandOffset l_offset;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PuppetTrackerHandOffset r_offset;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float playbackElapsed;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RecordAction currentAction;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RecordAction transitionTo;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionPerc;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float transitionTime;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float transitionElapsed;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string transitionNote;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool looping;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool offsetHeight;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool verbose;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public DebugLine debugLine;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Collider[] keepOutside;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 unoffset_lPos;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 unoffset_rPos;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x8B258C", Offset = "0x8B258C", VA = "0x8B258C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8B2708", Offset = "0x8B2708", VA = "0x8B2708")]
	public bool isTransitioning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x8B2780", Offset = "0x8B2780", VA = "0x8B2780")]
	public void forceAction(RecordAction action)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x8B2234", Offset = "0x8B2234", VA = "0x8B2234")]
	public bool doAction(RecordAction action, bool loop, bool offsetHeight, float time, string note)
	{
		return default(bool);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x8B27E0", Offset = "0x8B27E0", VA = "0x8B27E0")]
	public MoveReplayer()
	{
	}
}
[Token(Token = "0x20000F5")]
public class MoveWithController : MonoBehaviour
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB858", Offset = "0x4BB858")]
	public VRCharacterActions vrActions;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FBTTrackers fbtTrackers;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB890", Offset = "0x4BB890")]
	public float jumpForce;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameCharacter character;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer[] debugShapes;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 dir;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] scaledTrackers;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VRRig activeRig;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform leanCentre;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float leanCentreTime;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform menuPointer;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool inBody;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float moveSpeedMod;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HealthBarController healthBar;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CharacterEffect.Effect testEffect;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float nextPause;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ControllerTipController controllerTips;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private VRRunController runController;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float turnAmount;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SafetyCircleController safetyCircle;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float targetTime;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool canTurn;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float samePosTimer;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 lastPos;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool doneLeanTip;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool spectateHeld;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	public bool spectateToggle;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x8B27F0", Offset = "0x8B27F0", VA = "0x8B27F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x8B30BC", Offset = "0x8B30BC", VA = "0x8B30BC")]
	private void doubleCheck()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x8B2A8C", Offset = "0x8B2A8C", VA = "0x8B2A8C")]
	public void refreshScale()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x8B30C0", Offset = "0x8B30C0", VA = "0x8B30C0")]
	private void turning()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x8B35EC", Offset = "0x8B35EC", VA = "0x8B35EC")]
	private void leanTip()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x8B3700", Offset = "0x8B3700", VA = "0x8B3700")]
	public bool canPause(bool incState)
	{
		return default(bool);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x8B37B4", Offset = "0x8B37B4", VA = "0x8B37B4")]
	public void outOfBody(bool inBody)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x8B45D0", Offset = "0x8B45D0", VA = "0x8B45D0")]
	private void testButtonAction()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x8B4B54", Offset = "0x8B4B54", VA = "0x8B4B54")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x8B6AEC", Offset = "0x8B6AEC", VA = "0x8B6AEC")]
	public MoveWithController()
	{
	}
}
[Token(Token = "0x20000F6")]
public class MovingDummyController : MonoBehaviour
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChamberController chamber;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hitCount;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BronzeDummyHitArea dummy;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float squareSize;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 targetPos;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float targetRotation;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float moveSpeed;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rotateSpeed;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float waitTime;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float wait;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int hitRequire;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x8B97DC", Offset = "0x8B97DC", VA = "0x8B97DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x8B98DC", Offset = "0x8B98DC", VA = "0x8B98DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x8BA27C", Offset = "0x8BA27C", VA = "0x8BA27C")]
	public MovingDummyController()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x8BA2A4", Offset = "0x8BA2A4", VA = "0x8BA2A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3464", Offset = "0x4C3464")]
	private void <Start>b__11_0(Vector3 pos)
	{
	}
}
[Token(Token = "0x20000F7")]
public class MusicController : MonoBehaviour
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MusicController instance;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] tracks;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip menu;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip chooseCharacter;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip chooseLevel;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip chooseDifficulty;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip credits;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip complete;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioSource;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float pauseTime;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fadePerc;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool doFade;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool playingMenu;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x8BA3F4", Offset = "0x8BA3F4", VA = "0x8BA3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x8BA468", Offset = "0x8BA468", VA = "0x8BA468")]
	public static void playMusic()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x8BA5B4", Offset = "0x8BA5B4", VA = "0x8BA5B4")]
	public static void playMusic(string trackName)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x8BA820", Offset = "0x8BA820", VA = "0x8BA820")]
	public static void fadeOutMusic()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x8BA8A0", Offset = "0x8BA8A0", VA = "0x8BA8A0")]
	public static void stopMusic()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x8BA900", Offset = "0x8BA900", VA = "0x8BA900")]
	public static void pause()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8BA970", Offset = "0x8BA970", VA = "0x8BA970")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x8BAB04", Offset = "0x8BAB04", VA = "0x8BAB04")]
	public MusicController()
	{
	}
}
[Token(Token = "0x20000F8")]
public class NewBehaviourScript : MonoBehaviour
{
	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x8BB61C", Offset = "0x8BB61C", VA = "0x8BB61C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x8BB620", Offset = "0x8BB620", VA = "0x8BB620")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x8BB624", Offset = "0x8BB624", VA = "0x8BB624")]
	public NewBehaviourScript()
	{
	}
}
[Token(Token = "0x20000F9")]
public class NoPlayerControl : MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRNonPlayerCamActions vrActions;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnAmount;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRRig activeRig;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float defaultY;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float headY;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxArmLength;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] materialOptions;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int rndMaterial;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float withinAngle;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 positionOffset;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rotationOffset;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float refreshTimer;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int onCam;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask viewObstruction;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 spectatePos;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 lastHeadPos;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool canTurn;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float viewDist;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x8BB62C", Offset = "0x8BB62C", VA = "0x8BB62C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8BB678", Offset = "0x8BB678", VA = "0x8BB678")]
	public void initSetup()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x8BB788", Offset = "0x8BB788", VA = "0x8BB788")]
	public void resetCalibration()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8BB830", Offset = "0x8BB830", VA = "0x8BB830")]
	public void setScale()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8BBADC", Offset = "0x8BBADC", VA = "0x8BBADC")]
	public void calibrate()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8BC1B4", Offset = "0x8BC1B4", VA = "0x8BC1B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x8BC5EC", Offset = "0x8BC5EC", VA = "0x8BC5EC")]
	public void delayedActivate()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x8B3A74", Offset = "0x8B3A74", VA = "0x8B3A74")]
	public void setupCameraPositions()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x8BC630", Offset = "0x8BC630", VA = "0x8BC630")]
	private void turnWithin(float within)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x8BC8AC", Offset = "0x8BC8AC", VA = "0x8BC8AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x8BC8C8", Offset = "0x8BC8C8", VA = "0x8BC8C8")]
	public void setFog(VolumetricFogProfile fogProfile)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x8BC228", Offset = "0x8BC228", VA = "0x8BC228")]
	private void refreshPausedPos()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x8BC8CC", Offset = "0x8BC8CC", VA = "0x8BC8CC")]
	public Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x8BC948", Offset = "0x8BC948", VA = "0x8BC948")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x8BD760", Offset = "0x8BD760", VA = "0x8BD760")]
	public NoPlayerControl()
	{
	}
}
[Token(Token = "0x20000FA")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x6BE2A8", Offset = "0x6BE2A8", VA = "0x6BE2A8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x6BE40C", Offset = "0x6BE40C", VA = "0x6BE40C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x6BE7A8", Offset = "0x6BE7A8", VA = "0x6BE7A8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x6BE94C", Offset = "0x6BE94C", VA = "0x6BE94C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x6BE97C", Offset = "0x6BE97C", VA = "0x6BE97C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x20000FB")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x6C7B30", Offset = "0x6C7B30", VA = "0x6C7B30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x6C7BB8", Offset = "0x6C7BB8", VA = "0x6C7BB8")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x6C7D2C", Offset = "0x6C7D2C", VA = "0x6C7D2C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x20000FC")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000001")]
	public bool IsVisible
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x92FBA0", Offset = "0x92FBA0", VA = "0x92FBA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x92FBA8", Offset = "0x92FBA8", VA = "0x92FBA8")]
		set
		{
		}
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x92FCE4", Offset = "0x92FCE4", VA = "0x92FCE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x92FEAC", Offset = "0x92FEAC", VA = "0x92FEAC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x92FEB4", Offset = "0x92FEB4", VA = "0x92FEB4")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x20000FD")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xDB66A8", Offset = "0xDB66A8", VA = "0xDB66A8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000FF")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB8D8", Offset = "0x4BB8D8")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB8F0", Offset = "0x4BB8F0")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB908", Offset = "0x4BB908")]
		public float LatencyWeight;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BB920", Offset = "0x4BB920")]
		public int MaxSamples;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xDB66B0", Offset = "0xDB66B0", VA = "0xDB66B0")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xDB67E8", Offset = "0xDB67E8", VA = "0xDB67E8")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x7D2D2C", Offset = "0x7D2D2C", VA = "0x7D2D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x7D2E70", Offset = "0x7D2E70", VA = "0x7D2E70")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x7D3248", Offset = "0x7D3248", VA = "0x7D3248")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x7D31A0", Offset = "0x7D31A0", VA = "0x7D31A0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x7D3578", Offset = "0x7D3578", VA = "0x7D3578")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x7D3860", Offset = "0x7D3860", VA = "0x7D3860")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000100")]
public class P2PManager
{
	[Token(Token = "0x2000101")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400090A")]
		Update = 1
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x6BF7E8", Offset = "0x6BF7E8", VA = "0x6BF7E8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x6BF8C8", Offset = "0x6BF8C8", VA = "0x6BF8C8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x6BF9AC", Offset = "0x6BF9AC", VA = "0x6BF9AC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x6BFA2C", Offset = "0x6BFA2C", VA = "0x6BFA2C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x6BFB9C", Offset = "0x6BFB9C", VA = "0x6BFB9C")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x6BFDDC", Offset = "0x6BFDDC", VA = "0x6BFDDC")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x6C01CC", Offset = "0x6C01CC", VA = "0x6C01CC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x6C0488", Offset = "0x6C0488", VA = "0x6C0488")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x6BFFA8", Offset = "0x6BFFA8", VA = "0x6BFFA8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x6C03BC", Offset = "0x6C03BC", VA = "0x6C03BC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x6C008C", Offset = "0x6C008C", VA = "0x6C008C")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x6C06C0", Offset = "0x6C06C0", VA = "0x6C06C0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x6BFFF0", Offset = "0x6BFFF0", VA = "0x6BFFF0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x6C0400", Offset = "0x6C0400", VA = "0x6C0400")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x6C0130", Offset = "0x6C0130", VA = "0x6C0130")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x6C0748", Offset = "0x6C0748", VA = "0x6C0748")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000102")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x6C4908", Offset = "0x6C4908", VA = "0x6C4908", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x6C4944", Offset = "0x6C4944", VA = "0x6C4944", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x6C497C", Offset = "0x6C497C", VA = "0x6C497C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x6C49A4", Offset = "0x6C49A4", VA = "0x6C49A4")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x6C4B40", Offset = "0x6C4B40", VA = "0x6C4B40")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x6C4BC0", Offset = "0x6C4BC0", VA = "0x6C4BC0")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x6C4C14", Offset = "0x6C4C14", VA = "0x6C4C14")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000103")]
public class RemotePlayer
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x7D3904", Offset = "0x7D3904", VA = "0x7D3904")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000104")]
public class RoomManager
{
	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x82CD4C", Offset = "0x82CD4C", VA = "0x82CD4C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x82CE50", Offset = "0x82CE50", VA = "0x82CE50")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x82D140", Offset = "0x82D140", VA = "0x82D140")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x82D278", Offset = "0x82D278", VA = "0x82D278")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x82D34C", Offset = "0x82D34C", VA = "0x82D34C")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x82D8FC", Offset = "0x82D8FC", VA = "0x82D8FC")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x82D170", Offset = "0x82D170", VA = "0x82D170")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x82D980", Offset = "0x82D980", VA = "0x82D980")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x82E0B0", Offset = "0x82E0B0", VA = "0x82E0B0")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x82E3A8", Offset = "0x82E3A8", VA = "0x82E3A8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x82DC5C", Offset = "0x82DC5C", VA = "0x82DC5C")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000105")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000106")]
	public enum State
	{
		[Token(Token = "0x4000942")]
		INITIALIZING,
		[Token(Token = "0x4000943")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000944")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000945")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000946")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000947")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000948")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000949")]
		SHUTDOWN
	}

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000002")]
	public static State CurrentState
	{
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x83CA1C", Offset = "0x83CA1C", VA = "0x83CA1C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000003")]
	public static ulong MyID
	{
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x82D478", Offset = "0x82D478", VA = "0x82D478")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000004")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x83CA8C", Offset = "0x83CA8C", VA = "0x83CA8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x83B078", Offset = "0x83B078", VA = "0x83B078", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x83B408", Offset = "0x83B408", VA = "0x83B408", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x83B850", Offset = "0x83B850", VA = "0x83B850")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x83B9F8", Offset = "0x83B9F8", VA = "0x83B9F8", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x83B9FC", Offset = "0x83B9FC", VA = "0x83B9FC")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x83BB1C", Offset = "0x83BB1C", VA = "0x83BB1C")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x83C230", Offset = "0x83C230", VA = "0x83C230")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x83C61C", Offset = "0x83C61C", VA = "0x83C61C")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x83C82C", Offset = "0x83C82C", VA = "0x83C82C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x83C9B0", Offset = "0x83C9B0", VA = "0x83C9B0")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x83B79C", Offset = "0x83B79C", VA = "0x83B79C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x82CFC8", Offset = "0x82CFC8", VA = "0x82CFC8")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x82D558", Offset = "0x82D558", VA = "0x82D558")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x83CBB4", Offset = "0x83CBB4", VA = "0x83CBB4")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x82D818", Offset = "0x82D818", VA = "0x82D818")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x82E41C", Offset = "0x82E41C", VA = "0x82E41C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x82E7FC", Offset = "0x82E7FC", VA = "0x82E7FC")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x82E8E0", Offset = "0x82E8E0", VA = "0x82E8E0")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x82D080", Offset = "0x82D080", VA = "0x82D080")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x82E578", Offset = "0x82E578", VA = "0x82E578")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x82E60C", Offset = "0x82E60C", VA = "0x82E60C")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x83CD30", Offset = "0x83CD30", VA = "0x83CD30")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x83CF44", Offset = "0x83CF44", VA = "0x83CF44")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x83AFF4", Offset = "0x83AFF4", VA = "0x83AFF4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x4C3474", Offset = "0x4C3474")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x83D088", Offset = "0x83D088", VA = "0x83D088")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x83D164", Offset = "0x83D164", VA = "0x83D164")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000107")]
public class VoipManager
{
	[Token(Token = "0x6000516")]
	[Address(RVA = "0x7704B0", Offset = "0x7704B0", VA = "0x7704B0")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x770590", Offset = "0x770590", VA = "0x770590")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x770674", Offset = "0x770674", VA = "0x770674")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x7706F4", Offset = "0x7706F4", VA = "0x7706F4")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x770864", Offset = "0x770864", VA = "0x770864")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000108")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x92F86C", Offset = "0x92F86C", VA = "0x92F86C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x92F8E4", Offset = "0x92F8E4", VA = "0x92F8E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x92FA58", Offset = "0x92FA58", VA = "0x92FA58")]
	private void Update()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x92FABC", Offset = "0x92FABC", VA = "0x92FABC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x92F920", Offset = "0x92F920", VA = "0x92F920")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x92FB80", Offset = "0x92FB80", VA = "0x92FB80")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x92FB98", Offset = "0x92FB98", VA = "0x92FB98")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000109")]
public class AvatarLayer
{
	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xF62944", Offset = "0xF62944", VA = "0xF62944")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200010A")]
public class PacketRecordSettings
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x6C0E08", Offset = "0x6C0E08", VA = "0x6C0E08")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200010B")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200010C")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xDB40C0", Offset = "0xDB40C0", VA = "0xDB40C0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200010D")]
	public enum HandType
	{
		[Token(Token = "0x40009AB")]
		Right,
		[Token(Token = "0x40009AC")]
		Left,
		[Token(Token = "0x40009AD")]
		Max
	}

	[Token(Token = "0x200010E")]
	public enum HandJoint
	{
		[Token(Token = "0x40009AF")]
		HandBase,
		[Token(Token = "0x40009B0")]
		IndexBase,
		[Token(Token = "0x40009B1")]
		IndexTip,
		[Token(Token = "0x40009B2")]
		ThumbBase,
		[Token(Token = "0x40009B3")]
		ThumbTip,
		[Token(Token = "0x40009B4")]
		Max
	}

	[Token(Token = "0x200010F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B99B8", Offset = "0x4B99B8")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600055C")]
			[Address(RVA = "0xDB4070", Offset = "0xDB4070", VA = "0xDB4070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600055E")]
			[Address(RVA = "0xDB40B8", Offset = "0xDB40B8", VA = "0xDB40B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xDB3EA0", Offset = "0xDB3EA0", VA = "0xDB3EA0")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xDB3ECC", Offset = "0xDB3ECC", VA = "0xDB3ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xDB3ED0", Offset = "0xDB3ED0", VA = "0xDB3ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xDB4078", Offset = "0xDB4078", VA = "0xDB4078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB938", Offset = "0x4BB938")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB970", Offset = "0x4BB970")]
	public bool EnableBody;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB9A8", Offset = "0x4BB9A8")]
	public bool RecordPackets;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BB9E0", Offset = "0x4BB9E0")]
	public bool StartWithControllers;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BBA18", Offset = "0x4BBA18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBA18", Offset = "0x4BBA18")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBA88", Offset = "0x4BBA88")]
	private bool CombineMeshes;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBAC0", Offset = "0x4BBAC0")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BBAF8", Offset = "0x4BBAF8")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BBB30", Offset = "0x4BBB30")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBB68", Offset = "0x4BBB68")]
	public bool EnableLaughter;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400098B")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400098D")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400098E")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400098F")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000990")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000991")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x91A058", Offset = "0x91A058", VA = "0x91A058")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x91A444", Offset = "0x91A444", VA = "0x91A444")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x91A4D8", Offset = "0x91A4D8", VA = "0x91A4D8")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x91A540", Offset = "0x91A540", VA = "0x91A540")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x91A670", Offset = "0x91A670", VA = "0x91A670")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x91A750", Offset = "0x91A750", VA = "0x91A750")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x91A82C", Offset = "0x91A82C", VA = "0x91A82C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x91AA10", Offset = "0x91AA10", VA = "0x91AA10")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x91AAEC", Offset = "0x91AAEC", VA = "0x91AAEC")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x91AB64", Offset = "0x91AB64", VA = "0x91AB64")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x91AC4C", Offset = "0x91AC4C", VA = "0x91AC4C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x91ACD8", Offset = "0x91ACD8", VA = "0x91ACD8")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x91AD60", Offset = "0x91AD60", VA = "0x91AD60")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x91AD78", Offset = "0x91AD78", VA = "0x91AD78")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000532")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x91B228", Offset = "0x91B228", VA = "0x91B228")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x91B5A8", Offset = "0x91B5A8", VA = "0x91B5A8")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x91B750", Offset = "0x91B750", VA = "0x91B750")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x91B99C", Offset = "0x91B99C", VA = "0x91B99C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x91BA90", Offset = "0x91BA90", VA = "0x91BA90")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x91C0FC", Offset = "0x91C0FC", VA = "0x91C0FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x91C428", Offset = "0x91C428", VA = "0x91C428")]
	private void Update()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x91CE4C", Offset = "0x91CE4C", VA = "0x91CE4C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x91CEA0", Offset = "0x91CEA0", VA = "0x91CEA0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x91BD4C", Offset = "0x91BD4C", VA = "0x91BD4C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x91BDF0", Offset = "0x91BDF0", VA = "0x91BDF0")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x91CED0", Offset = "0x91CED0", VA = "0x91CED0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x91C800", Offset = "0x91C800", VA = "0x91C800")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x91D144", Offset = "0x91D144", VA = "0x91D144")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x91CF34", Offset = "0x91CF34", VA = "0x91CF34")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x91D3F4", Offset = "0x91D3F4", VA = "0x91D3F4")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x91D870", Offset = "0x91D870", VA = "0x91D870")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x91DC74", Offset = "0x91DC74", VA = "0x91DC74")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x91DDC8", Offset = "0x91DDC8", VA = "0x91DDC8")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x91DFAC", Offset = "0x91DFAC", VA = "0x91DFAC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x91C9CC", Offset = "0x91C9CC", VA = "0x91C9CC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x91E080", Offset = "0x91E080", VA = "0x91E080")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x91C810", Offset = "0x91C810", VA = "0x91C810")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x91E170", Offset = "0x91E170", VA = "0x91E170")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x91E7C8", Offset = "0x91E7C8", VA = "0x91E7C8")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x91ECAC", Offset = "0x91ECAC", VA = "0x91ECAC")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x91ECD4", Offset = "0x91ECD4", VA = "0x91ECD4")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x91ECFC", Offset = "0x91ECFC", VA = "0x91ECFC")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x91CCD8", Offset = "0x91CCD8", VA = "0x91CCD8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x91E234", Offset = "0x91E234", VA = "0x91E234")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x91F11C", Offset = "0x91F11C", VA = "0x91F11C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C34D4", Offset = "0x4C34D4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x91F188", Offset = "0x91F188", VA = "0x91F188")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x91EFDC", Offset = "0x91EFDC", VA = "0x91EFDC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x91F24C", Offset = "0x91F24C", VA = "0x91F24C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x91F334", Offset = "0x91F334", VA = "0x91F334")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x91ED38", Offset = "0x91ED38", VA = "0x91ED38")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x91F41C", Offset = "0x91F41C", VA = "0x91F41C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000110")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x91F5DC", Offset = "0x91F5DC", VA = "0x91F5DC")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000111")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x91F6A0", Offset = "0x91F6A0", VA = "0x91F6A0")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x920924", Offset = "0x920924", VA = "0x920924")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x9204F8", Offset = "0x9204F8", VA = "0x9204F8")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x920288", Offset = "0x920288", VA = "0x920288")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x920364", Offset = "0x920364", VA = "0x920364")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x920BB4", Offset = "0x920BB4", VA = "0x920BB4")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000112")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40009BD")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x92113C", Offset = "0x92113C", VA = "0x92113C")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000113")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x9213A8", Offset = "0x9213A8", VA = "0x9213A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x9217FC", Offset = "0x9217FC", VA = "0x9217FC")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000114")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x91DB04", Offset = "0x91DB04", VA = "0x91DB04")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x921914", Offset = "0x921914", VA = "0x921914")]
	private void Update()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x921A38", Offset = "0x921A38", VA = "0x921A38")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000115")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x921A98", Offset = "0x921A98", VA = "0x921A98")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x9214CC", Offset = "0x9214CC", VA = "0x9214CC")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x921AA0", Offset = "0x921AA0", VA = "0x921AA0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x921B00", Offset = "0x921B00", VA = "0x921B00")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x9222B4", Offset = "0x9222B4", VA = "0x9222B4")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x92185C", Offset = "0x92185C", VA = "0x92185C")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000116")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000117")]
	public enum PacketMode
	{
		[Token(Token = "0x40009D1")]
		SDK,
		[Token(Token = "0x40009D2")]
		Unity
	}

	[Token(Token = "0x2000118")]
	public struct ControllerPose
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xDB4138", Offset = "0xDB4138", VA = "0xDB4138")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000119")]
	public struct PoseFrame
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xDB4214", Offset = "0xDB4214", VA = "0xDB4214")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x923718", Offset = "0x923718", VA = "0x923718")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000574")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x923728", Offset = "0x923728", VA = "0x923728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x91BE94", Offset = "0x91BE94", VA = "0x91BE94")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x9237B0", Offset = "0x9237B0", VA = "0x9237B0")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x9237B8", Offset = "0x9237B8", VA = "0x9237B8")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200011A")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x9237C8", Offset = "0x9237C8", VA = "0x9237C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x92392C", Offset = "0x92392C", VA = "0x92392C")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200011B")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x923994", Offset = "0x923994", VA = "0x923994")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x923AF8", Offset = "0x923AF8", VA = "0x923AF8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x923E94", Offset = "0x923E94", VA = "0x923E94")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x9240B8", Offset = "0x9240B8", VA = "0x9240B8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x9240E4", Offset = "0x9240E4", VA = "0x9240E4")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200011C")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200011D")]
	public enum TextureType
	{
		[Token(Token = "0x4000A08")]
		DiffuseTextures,
		[Token(Token = "0x4000A09")]
		NormalMaps,
		[Token(Token = "0x4000A0A")]
		RoughnessMaps,
		[Token(Token = "0x4000A0B")]
		Count
	}

	[Token(Token = "0x200011E")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200011F")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000120")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000121")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xDB4C10", Offset = "0xDB4C10", VA = "0xDB4C10")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B99C8", Offset = "0x4B99C8")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0xDB4BC0", Offset = "0xDB4BC0", VA = "0xDB4BC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0xDB4C08", Offset = "0xDB4C08", VA = "0xDB4C08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xDB4518", Offset = "0xDB4518", VA = "0xDB4518")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xDB4544", Offset = "0xDB4544", VA = "0xDB4544", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xDB4548", Offset = "0xDB4548", VA = "0xDB4548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xDB4BC8", Offset = "0xDB4BC8", VA = "0xDB4BC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000A03")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000A04")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000A05")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000A06")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x924130", Offset = "0x924130", VA = "0x924130")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x9242BC", Offset = "0x9242BC", VA = "0x9242BC")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x9242E4", Offset = "0x9242E4", VA = "0x9242E4")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x924A40", Offset = "0x924A40", VA = "0x924A40")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x924AAC", Offset = "0x924AAC", VA = "0x924AAC")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x924380", Offset = "0x924380", VA = "0x924380")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x924B00", Offset = "0x924B00", VA = "0x924B00")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x9247B8", Offset = "0x9247B8", VA = "0x9247B8")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x924BF0", Offset = "0x924BF0", VA = "0x924BF0")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x924E94", Offset = "0x924E94", VA = "0x924E94")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x924FBC", Offset = "0x924FBC", VA = "0x924FBC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x924FF4", Offset = "0x924FF4", VA = "0x924FF4")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x9249C8", Offset = "0x9249C8", VA = "0x9249C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C3584", Offset = "0x4C3584")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x925E6C", Offset = "0x925E6C", VA = "0x925E6C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000123")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000009")]
	public float Duration
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x6B8F18", Offset = "0x6B8F18", VA = "0x6B8F18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x6B8F8C", Offset = "0x6B8F8C", VA = "0x6B8F8C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x6B901C", Offset = "0x6B901C", VA = "0x6B901C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x6B9124", Offset = "0x6B9124", VA = "0x6B9124")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x6B92C0", Offset = "0x6B92C0", VA = "0x6B92C0")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x6B93E0", Offset = "0x6B93E0", VA = "0x6B93E0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x6B94B8", Offset = "0x6B94B8", VA = "0x6B94B8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x6B96E8", Offset = "0x6B96E8", VA = "0x6B96E8")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x6B99C4", Offset = "0x6B99C4", VA = "0x6B99C4")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000124")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x9BA418", Offset = "0x9BA418", VA = "0x9BA418")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x9BA52C", Offset = "0x9BA52C", VA = "0x9BA52C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x9BA6D8", Offset = "0x9BA6D8", VA = "0x9BA6D8")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x9BA59C", Offset = "0x9BA59C", VA = "0x9BA59C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x9BA630", Offset = "0x9BA630", VA = "0x9BA630")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000125")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x9BA018", Offset = "0x9BA018", VA = "0x9BA018")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x9BA3BC", Offset = "0x9BA3BC", VA = "0x9BA3BC")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x9BA1B8", Offset = "0x9BA1B8", VA = "0x9BA1B8")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x9BA230", Offset = "0x9BA230", VA = "0x9BA230")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x9BA2CC", Offset = "0x9BA2CC", VA = "0x9BA2CC")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000126")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000A2D")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000A2E")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x6B9BEC", Offset = "0x6B9BEC", VA = "0x6B9BEC")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x6B9C74", Offset = "0x6B9C74", VA = "0x6B9C74", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x6B9C90", Offset = "0x6B9C90", VA = "0x6B9C90")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x6B9E34", Offset = "0x6B9E34", VA = "0x6B9E34")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x6B9FE8", Offset = "0x6B9FE8", VA = "0x6B9FE8")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000127")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x6BA074", Offset = "0x6BA074", VA = "0x6BA074")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x6BA158", Offset = "0x6BA158", VA = "0x6BA158")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x6BA5A0", Offset = "0x6BA5A0", VA = "0x6BA5A0")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x6BA960", Offset = "0x6BA960", VA = "0x6BA960")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x6BAA6C", Offset = "0x6BAA6C", VA = "0x6BAA6C")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000128")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000A37")]
	Body = 1,
	[Token(Token = "0x4000A38")]
	Hands = 2,
	[Token(Token = "0x4000A39")]
	Base = 4,
	[Token(Token = "0x4000A3A")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000A3B")]
	Expressive = 0x20,
	[Token(Token = "0x4000A3C")]
	All = -1
}
[Token(Token = "0x2000129")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000A3E")]
	AvatarSpecification,
	[Token(Token = "0x4000A3F")]
	AssetLoaded,
	[Token(Token = "0x4000A40")]
	Count
}
[Token(Token = "0x200012A")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200012B")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200012C")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000A46")]
	Mesh,
	[Token(Token = "0x4000A47")]
	Texture,
	[Token(Token = "0x4000A48")]
	Pose,
	[Token(Token = "0x4000A49")]
	Material,
	[Token(Token = "0x4000A4A")]
	CombinedMesh,
	[Token(Token = "0x4000A4B")]
	PBSMaterial,
	[Token(Token = "0x4000A4C")]
	FailedLoad,
	[Token(Token = "0x4000A4D")]
	Count
}
[Token(Token = "0x200012D")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200012E")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200012F")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000130")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000131")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000132")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000A82")]
	RGB24,
	[Token(Token = "0x4000A83")]
	DXT1,
	[Token(Token = "0x4000A84")]
	DXT5,
	[Token(Token = "0x4000A85")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000A86")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000A87")]
	Count
}
[Token(Token = "0x2000133")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000134")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000A8F")]
	SkinnedMeshRender,
	[Token(Token = "0x4000A90")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000A91")]
	ProjectorRender,
	[Token(Token = "0x4000A92")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000A93")]
	Count
}
[Token(Token = "0x2000135")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000A95")]
	Unknown,
	[Token(Token = "0x4000A96")]
	Default,
	[Token(Token = "0x4000A97")]
	Verbose,
	[Token(Token = "0x4000A98")]
	Debug,
	[Token(Token = "0x4000A99")]
	Info,
	[Token(Token = "0x4000A9A")]
	Warn,
	[Token(Token = "0x4000A9B")]
	Error,
	[Token(Token = "0x4000A9C")]
	Fatal,
	[Token(Token = "0x4000A9D")]
	Silent
}
[Token(Token = "0x2000136")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000137")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000AA2")]
	One = 1,
	[Token(Token = "0x4000AA3")]
	Two = 2,
	[Token(Token = "0x4000AA4")]
	Three = 4,
	[Token(Token = "0x4000AA5")]
	Joystick = 8
}
[Token(Token = "0x2000138")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000AA7")]
	One = 1,
	[Token(Token = "0x4000AA8")]
	Two = 2,
	[Token(Token = "0x4000AA9")]
	Joystick = 4,
	[Token(Token = "0x4000AAA")]
	ThumbRest = 8,
	[Token(Token = "0x4000AAB")]
	Index = 0x10,
	[Token(Token = "0x4000AAC")]
	Pointing = 0x40,
	[Token(Token = "0x4000AAD")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000139")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200013A")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200013B")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200013C")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200013D")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200013E")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200013F")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000140")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000141")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000ACD")]
	Add,
	[Token(Token = "0x4000ACE")]
	Multiply,
	[Token(Token = "0x4000ACF")]
	Count
}
[Token(Token = "0x2000142")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000AD1")]
	Color,
	[Token(Token = "0x4000AD2")]
	Texture,
	[Token(Token = "0x4000AD3")]
	TextureSingleChannel,
	[Token(Token = "0x4000AD4")]
	Parallax,
	[Token(Token = "0x4000AD5")]
	Count
}
[Token(Token = "0x2000143")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000AD7")]
	None,
	[Token(Token = "0x4000AD8")]
	Positional,
	[Token(Token = "0x4000AD9")]
	ViewReflection,
	[Token(Token = "0x4000ADA")]
	Fresnel,
	[Token(Token = "0x4000ADB")]
	Pulse,
	[Token(Token = "0x4000ADC")]
	Count
}
[Token(Token = "0x2000144")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000ADE")]
	Touch,
	[Token(Token = "0x4000ADF")]
	Malibu,
	[Token(Token = "0x4000AE0")]
	Go,
	[Token(Token = "0x4000AE1")]
	Quest,
	[Token(Token = "0x4000AE2")]
	Count
}
[Token(Token = "0x2000145")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000AE4")]
	Lowest = 1,
	[Token(Token = "0x4000AE5")]
	Medium = 3,
	[Token(Token = "0x4000AE6")]
	Highest = 5
}
[Token(Token = "0x2000146")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000AE8")]
	Unknown = -1,
	[Token(Token = "0x4000AE9")]
	One,
	[Token(Token = "0x4000AEA")]
	Two
}
[Token(Token = "0x2000147")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x75BC98", Offset = "0x75BC98", VA = "0x75BC98")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x75BCC8", Offset = "0x75BCC8", VA = "0x75BCC8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x75BEE4", Offset = "0x75BEE4", VA = "0x75BEE4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000148")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x75BFC8", Offset = "0x75BFC8", VA = "0x75BFC8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x75BFF8", Offset = "0x75BFF8", VA = "0x75BFF8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x75C394", Offset = "0x75C394", VA = "0x75C394", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000149")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x75B228", Offset = "0x75B228", VA = "0x75B228")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x75B258", Offset = "0x75B258", VA = "0x75B258", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x75B4E8", Offset = "0x75B4E8", VA = "0x75B4E8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200014A")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x75C4FC", Offset = "0x75C4FC", VA = "0x75C4FC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x75C52C", Offset = "0x75C52C", VA = "0x75C52C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x75C71C", Offset = "0x75C71C", VA = "0x75C71C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200014B")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x91F5E4", Offset = "0x91F5E4", VA = "0x91F5E4")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200014C")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200014D")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000B1F")]
	FirstPerson = 1,
	[Token(Token = "0x4000B20")]
	ThirdPerson = 2,
	[Token(Token = "0x4000B21")]
	SelfOccluding = 4
}
[Token(Token = "0x200014E")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200014F")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000150")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000151")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000152")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000B37")]
	Default,
	[Token(Token = "0x4000B38")]
	GripSphere,
	[Token(Token = "0x4000B39")]
	GripCube,
	[Token(Token = "0x4000B3A")]
	Count
}
[Token(Token = "0x2000153")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000B3C")]
	Body,
	[Token(Token = "0x4000B3D")]
	Clothing,
	[Token(Token = "0x4000B3E")]
	Eyewear,
	[Token(Token = "0x4000B3F")]
	Hair,
	[Token(Token = "0x4000B40")]
	Beard,
	[Token(Token = "0x4000B41")]
	Count
}
[Token(Token = "0x2000154")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000155")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000156")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000157")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000158")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000B4B")]
	AvatarHead,
	[Token(Token = "0x4000B4C")]
	AvatarHand,
	[Token(Token = "0x4000B4D")]
	Object,
	[Token(Token = "0x4000B4E")]
	ObjectStatic,
	[Token(Token = "0x4000B4F")]
	Count
}
[Token(Token = "0x2000159")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200015A")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200015B")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200015C")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200015D")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000B5B")]
	Point,
	[Token(Token = "0x4000B5C")]
	Direction,
	[Token(Token = "0x4000B5D")]
	Spot,
	[Token(Token = "0x4000B5E")]
	Count
}
[Token(Token = "0x200015E")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200015F")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000160")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000161")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000162")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000B74")]
	None = 0u,
	[Token(Token = "0x4000B75")]
	GazeTarget = 1u,
	[Token(Token = "0x4000B76")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000163")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000164")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000165")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000166")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000167")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000168")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xDB4C18", Offset = "0xDB4C18", VA = "0xDB4C18")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000B8B")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x6BA350", Offset = "0x6BA350", VA = "0x6BA350")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x6BAA7C", Offset = "0x6BAA7C", VA = "0x6BAA7C")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x6BAD84", Offset = "0x6BAD84", VA = "0x6BAD84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x6BADF4", Offset = "0x6BADF4", VA = "0x6BADF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x6BB7D4", Offset = "0x6BB7D4", VA = "0x6BB7D4")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x6BB828", Offset = "0x6BB828", VA = "0x6BB828")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x6BB87C", Offset = "0x6BB87C", VA = "0x6BB87C")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x6BB8E0", Offset = "0x6BB8E0", VA = "0x6BB8E0")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x6BB944", Offset = "0x6BB944", VA = "0x6BB944")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x6BB5D4", Offset = "0x6BB5D4", VA = "0x6BB5D4")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x6BBA20", Offset = "0x6BBA20", VA = "0x6BBA20")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x6BBB74", Offset = "0x6BBB74", VA = "0x6BBB74")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x6BA524", Offset = "0x6BA524", VA = "0x6BA524")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x6BBC68", Offset = "0x6BBC68", VA = "0x6BBC68")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x6BAD38", Offset = "0x6BAD38", VA = "0x6BAD38")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x6BBD48", Offset = "0x6BBD48", VA = "0x6BBD48")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x6BBDC8", Offset = "0x6BBDC8", VA = "0x6BBDC8")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200016A")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000C")]
	public static string AppID
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x6BBD08", Offset = "0x6BBD08", VA = "0x6BBD08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x6BBF20", Offset = "0x6BBF20", VA = "0x6BBF20")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MobileAppID
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x6BBD28", Offset = "0x6BBD28", VA = "0x6BBD28")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x6BBF4C", Offset = "0x6BBF4C", VA = "0x6BBF4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x6BBDE0", Offset = "0x6BBDE0", VA = "0x6BBDE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x6BBF78", Offset = "0x6BBF78", VA = "0x6BBF78")]
		set
		{
		}
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x6BBFC8", Offset = "0x6BBFC8", VA = "0x6BBFC8")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200016B")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x6BDA6C", Offset = "0x6BDA6C", VA = "0x6BDA6C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x6BDD2C", Offset = "0x6BDD2C", VA = "0x6BDD2C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x6BDBC4", Offset = "0x6BDBC4", VA = "0x6BDBC4")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x6BDF6C", Offset = "0x6BDF6C", VA = "0x6BDF6C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200016C")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x6BDF7C", Offset = "0x6BDF7C", VA = "0x6BDF7C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x6BE0C0", Offset = "0x6BE0C0", VA = "0x6BE0C0")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x6BE298", Offset = "0x6BE298", VA = "0x6BE298")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200016D")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000BA2")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000BA3")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000BA4")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x6BC01C", Offset = "0x6BC01C", VA = "0x6BC01C")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x6BCF98", Offset = "0x6BCF98", VA = "0x6BCF98")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x6BD1D4", Offset = "0x6BD1D4", VA = "0x6BD1D4")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x6BC6EC", Offset = "0x6BC6EC", VA = "0x6BC6EC")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x6BC410", Offset = "0x6BC410", VA = "0x6BC410")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x6BC574", Offset = "0x6BC574", VA = "0x6BC574")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x6BDA5C", Offset = "0x6BDA5C", VA = "0x6BDA5C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200016E")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200016F")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000170")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xDB52AC", Offset = "0xDB52AC", VA = "0xDB52AC")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000171")]
	public struct TextureSet
	{
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xDB52BC", Offset = "0xDB52BC", VA = "0xDB52BC")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9A48", Offset = "0x4B9A48")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0xDB525C", Offset = "0xDB525C", VA = "0xDB525C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060E")]
			[Address(RVA = "0xDB52A4", Offset = "0xDB52A4", VA = "0xDB52A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xDB4C44", Offset = "0xDB4C44", VA = "0xDB4C44")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xDB4C70", Offset = "0xDB4C70", VA = "0xDB4C70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xDB4C74", Offset = "0xDB4C74", VA = "0xDB4C74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xDB5264", Offset = "0xDB5264", VA = "0xDB5264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000BA8")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000BA9")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000BAC")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000BAD")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000BAE")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000BAF")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000BB0")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000BB1")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000BB2")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x6BE9C0", Offset = "0x6BE9C0", VA = "0x6BE9C0")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x6BEDA8", Offset = "0x6BEDA8", VA = "0x6BEDA8")]
	public void Update()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x6BEFA8", Offset = "0x6BEFA8", VA = "0x6BEFA8")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x6BEFF4", Offset = "0x6BEFF4", VA = "0x6BEFF4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x6BEF1C", Offset = "0x6BEF1C", VA = "0x6BEF1C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x6BF1A0", Offset = "0x6BF1A0", VA = "0x6BF1A0")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x6BF3A8", Offset = "0x6BF3A8", VA = "0x6BF3A8")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x6BF44C", Offset = "0x6BF44C", VA = "0x6BF44C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C36D4", Offset = "0x4C36D4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x6BB9D4", Offset = "0x6BB9D4", VA = "0x6BB9D4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x6BF4DC", Offset = "0x6BF4DC", VA = "0x6BF4DC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000173")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x6BF614", Offset = "0x6BF614", VA = "0x6BF614")]
	private void Update()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x6BF77C", Offset = "0x6BF77C", VA = "0x6BF77C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000174")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000175")]
	public delegate void OnClick();

	[Token(Token = "0x2000176")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000177")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000178")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9A58", Offset = "0x4B9A58")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x75F4C0", Offset = "0x75F4C0", VA = "0x75F4C0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x75F4C8", Offset = "0x75F4C8", VA = "0x75F4C8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9A68", Offset = "0x4B9A68")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x75F6EC", Offset = "0x75F6EC", VA = "0x75F6EC")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x75F6F4", Offset = "0x75F6F4", VA = "0x75F6F4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9A78", Offset = "0x4B9A78")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x75F940", Offset = "0x75F940", VA = "0x75F940")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x75F948", Offset = "0x75F948", VA = "0x75F948")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9A88", Offset = "0x4B9A88")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x75FCDC", Offset = "0x75FCDC", VA = "0x75FCDC")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x75FCE4", Offset = "0x75FCE4", VA = "0x75FCE4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9A98", Offset = "0x4B9A98")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x75FD04", Offset = "0x75FD04", VA = "0x75FD04")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x75FD0C", Offset = "0x75FD0C", VA = "0x75FD0C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000BC4")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000BC5")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000BC6")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x7A6070", Offset = "0x7A6070", VA = "0x7A6070")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x7A6528", Offset = "0x7A6528", VA = "0x7A6528")]
	public void Show()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x7A68DC", Offset = "0x7A68DC", VA = "0x7A68DC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x7A6A98", Offset = "0x7A6A98", VA = "0x7A6A98")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x7A6CD8", Offset = "0x7A6CD8", VA = "0x7A6CD8")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x7A68CC", Offset = "0x7A68CC", VA = "0x7A68CC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x7A7008", Offset = "0x7A7008", VA = "0x7A7008")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x7A72E0", Offset = "0x7A72E0", VA = "0x7A72E0")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x7A7698", Offset = "0x7A7698", VA = "0x7A7698")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x7A779C", Offset = "0x7A779C", VA = "0x7A779C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x7A7974", Offset = "0x7A7974", VA = "0x7A7974")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x7A7A18", Offset = "0x7A7A18", VA = "0x7A7A18")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x7A7BE8", Offset = "0x7A7BE8", VA = "0x7A7BE8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x7A7DD0", Offset = "0x7A7DD0", VA = "0x7A7DD0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x7A80B8", Offset = "0x7A80B8", VA = "0x7A80B8")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x7A81B4", Offset = "0x7A81B4", VA = "0x7A81B4")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x7A8260", Offset = "0x7A8260", VA = "0x7A8260")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200017E")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x870548", Offset = "0x870548", VA = "0x870548")]
	private void Start()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x8705E4", Offset = "0x8705E4", VA = "0x8705E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x8706A4", Offset = "0x8706A4", VA = "0x8706A4")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x8706E0", Offset = "0x8706E0", VA = "0x8706E0")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200017F")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000180")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000BF6")]
		On,
		[Token(Token = "0x4000BF7")]
		Off,
		[Token(Token = "0x4000BF8")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000011")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x675CD8", Offset = "0x675CD8", VA = "0x675CD8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x675C94", Offset = "0x675C94", VA = "0x675C94")]
		set
		{
		}
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x675CE0", Offset = "0x675CE0", VA = "0x675CE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x675D34", Offset = "0x675D34", VA = "0x675D34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x675E78", Offset = "0x675E78", VA = "0x675E78", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x675E94", Offset = "0x675E94", VA = "0x675E94", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x675EE8", Offset = "0x675EE8", VA = "0x675EE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x6760A4", Offset = "0x6760A4", VA = "0x6760A4")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x6761B8", Offset = "0x6761B8", VA = "0x6761B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x676248", Offset = "0x676248", VA = "0x676248")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x676314", Offset = "0x676314", VA = "0x676314")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x6763C8", Offset = "0x6763C8", VA = "0x6763C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x6764B4", Offset = "0x6764B4", VA = "0x6764B4")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000181")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000BF9")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000BFA")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000BFB")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBC80", Offset = "0x4BBC80")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBCB8", Offset = "0x4BBCB8")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBCF0", Offset = "0x4BBCF0")]
	public float HeightOffset;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBD28", Offset = "0x4BBD28")]
	public float MinimumHeight;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBD60", Offset = "0x4BBD60")]
	public float MaximumHeight;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x8A80C0", Offset = "0x8A80C0", VA = "0x8A80C0")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x8A80C8", Offset = "0x8A80C8", VA = "0x8A80C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x8A8140", Offset = "0x8A8140", VA = "0x8A8140")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x8A81D4", Offset = "0x8A81D4", VA = "0x8A81D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x8A8268", Offset = "0x8A8268", VA = "0x8A8268")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x8A8594", Offset = "0x8A8594", VA = "0x8A8594")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x8A87C4", Offset = "0x8A87C4", VA = "0x8A87C4")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000182")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x67E3CC", Offset = "0x67E3CC", VA = "0x67E3CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x67E480", Offset = "0x67E480", VA = "0x67E480")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000183")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	public enum States
	{
		[Token(Token = "0x4000C29")]
		Ready,
		[Token(Token = "0x4000C2A")]
		Aim,
		[Token(Token = "0x4000C2B")]
		CancelAim,
		[Token(Token = "0x4000C2C")]
		PreTeleport,
		[Token(Token = "0x4000C2D")]
		CancelTeleport,
		[Token(Token = "0x4000C2E")]
		Teleporting,
		[Token(Token = "0x4000C2F")]
		PostTeleport
	}

	[Token(Token = "0x2000185")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000C31")]
		None,
		[Token(Token = "0x4000C32")]
		Aim,
		[Token(Token = "0x4000C33")]
		PreTeleport,
		[Token(Token = "0x4000C34")]
		Teleport
	}

	[Token(Token = "0x2000186")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000C36")]
		Point,
		[Token(Token = "0x4000C37")]
		Sphere,
		[Token(Token = "0x4000C38")]
		Capsule
	}

	[Token(Token = "0x2000187")]
	public class AimData
	{
		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BC178", Offset = "0x4BC178")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000015")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0xDB2828", Offset = "0xDB2828", VA = "0xDB2828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3BFC", Offset = "0x4C3BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600068C")]
			[Address(RVA = "0xDB2830", Offset = "0xDB2830", VA = "0xDB2830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3C0C", Offset = "0x4C3C0C")]
			private set
			{
			}
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xDB27AC", Offset = "0xDB27AC", VA = "0xDB27AC")]
		public AimData()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xDB2838", Offset = "0xDB2838", VA = "0xDB2838")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9AA8", Offset = "0x4B9AA8")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xDB2604", Offset = "0xDB2604", VA = "0xDB2604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0xDB264C", Offset = "0xDB264C", VA = "0xDB264C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xDB24E8", Offset = "0xDB24E8", VA = "0xDB24E8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xDB2514", Offset = "0xDB2514", VA = "0xDB2514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xDB2518", Offset = "0xDB2518", VA = "0xDB2518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xDB260C", Offset = "0xDB260C", VA = "0xDB260C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9AB8", Offset = "0x4B9AB8")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000697")]
			[Address(RVA = "0x7634CC", Offset = "0x7634CC", VA = "0x7634CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0x763514", Offset = "0x763514", VA = "0x763514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x76335C", Offset = "0x76335C", VA = "0x76335C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x763388", Offset = "0x763388", VA = "0x763388", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x76338C", Offset = "0x76338C", VA = "0x76338C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x7634D4", Offset = "0x7634D4", VA = "0x7634D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9AC8", Offset = "0x4B9AC8")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069D")]
			[Address(RVA = "0x7635EC", Offset = "0x7635EC", VA = "0x7635EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069F")]
			[Address(RVA = "0x763634", Offset = "0x763634", VA = "0x763634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x76351C", Offset = "0x76351C", VA = "0x76351C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x763548", Offset = "0x763548", VA = "0x763548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x76354C", Offset = "0x76354C", VA = "0x76354C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x7635F4", Offset = "0x7635F4", VA = "0x7635F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9AD8", Offset = "0x4B9AD8")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A3")]
			[Address(RVA = "0xDB2498", Offset = "0xDB2498", VA = "0xDB2498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0xDB24E0", Offset = "0xDB24E0", VA = "0xDB24E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xDB2388", Offset = "0xDB2388", VA = "0xDB2388")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xDB23B4", Offset = "0xDB23B4", VA = "0xDB23B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xDB23B8", Offset = "0xDB23B8", VA = "0xDB23B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xDB24A0", Offset = "0xDB24A0", VA = "0xDB24A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9AE8", Offset = "0x4B9AE8")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A9")]
			[Address(RVA = "0x76370C", Offset = "0x76370C", VA = "0x76370C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0x763754", Offset = "0x763754", VA = "0x763754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x76363C", Offset = "0x76363C", VA = "0x76363C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x763668", Offset = "0x763668", VA = "0x763668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x76366C", Offset = "0x76366C", VA = "0x76366C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x763714", Offset = "0x763714", VA = "0x763714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9AF8", Offset = "0x4B9AF8")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0xDB275C", Offset = "0xDB275C", VA = "0xDB275C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B1")]
			[Address(RVA = "0xDB27A4", Offset = "0xDB27A4", VA = "0xDB27A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xDB2654", Offset = "0xDB2654", VA = "0xDB2654")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xDB2680", Offset = "0xDB2680", VA = "0xDB2680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xDB2684", Offset = "0xDB2684", VA = "0xDB2684", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xDB2764", Offset = "0xDB2764", VA = "0xDB2764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B08", Offset = "0x4B9B08")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B5")]
			[Address(RVA = "0xDB2338", Offset = "0xDB2338", VA = "0xDB2338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0xDB2380", Offset = "0xDB2380", VA = "0xDB2380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xDB2220", Offset = "0xDB2220", VA = "0xDB2220")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xDB224C", Offset = "0xDB224C", VA = "0xDB224C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xDB2250", Offset = "0xDB2250", VA = "0xDB2250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xDB2340", Offset = "0xDB2340", VA = "0xDB2340", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBD98", Offset = "0x4BBD98")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBDD0", Offset = "0x4BBDD0")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBE08", Offset = "0x4BBE08")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBE40", Offset = "0x4BBE40")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBE78", Offset = "0x4BBE78")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBEB0", Offset = "0x4BBEB0")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBEE8", Offset = "0x4BBEE8")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBF20", Offset = "0x4BBF20")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BBF58", Offset = "0x4BBF58")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBF68", Offset = "0x4BBF68")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBFA0", Offset = "0x4BBFA0")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BBFE8", Offset = "0x4BBFE8")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BBFF8", Offset = "0x4BBFF8")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC030", Offset = "0x4BC030")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC068", Offset = "0x4BC068")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC0A0", Offset = "0x4BC0A0")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000012")]
	public States CurrentState
	{
		[Token(Token = "0x6000658")]
		[Address(RVA = "0x67EF70", Offset = "0x67EF70", VA = "0x67EF70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3784", Offset = "0x4C3784")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000659")]
		[Address(RVA = "0x67EF78", Offset = "0x67EF78", VA = "0x67EF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3794", Offset = "0x4C3794")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600065D")]
		[Address(RVA = "0x67F19C", Offset = "0x67F19C", VA = "0x67F19C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000014")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x67F1C4", Offset = "0x67F1C4", VA = "0x67F1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C37C4", Offset = "0x4C37C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x67F1CC", Offset = "0x67F1CC", VA = "0x67F1CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C37D4", Offset = "0x4C37D4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600065A")]
		[Address(RVA = "0x67EF80", Offset = "0x67EF80", VA = "0x67EF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C37A4", Offset = "0x4C37A4")]
		add
		{
		}
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x67F020", Offset = "0x67F020", VA = "0x67F020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C37B4", Offset = "0x4C37B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x67F7C4", Offset = "0x67F7C4", VA = "0x67F7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C381C", Offset = "0x4C381C")]
		add
		{
		}
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x67F864", Offset = "0x67F864", VA = "0x67F864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C382C", Offset = "0x4C382C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x67F904", Offset = "0x67F904", VA = "0x67F904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C389C", Offset = "0x4C389C")]
		add
		{
		}
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x67F9A4", Offset = "0x67F9A4", VA = "0x67F9A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C38AC", Offset = "0x4C38AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600066E")]
		[Address(RVA = "0x67FA44", Offset = "0x67FA44", VA = "0x67FA44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C38BC", Offset = "0x4C38BC")]
		add
		{
		}
		[Token(Token = "0x600066F")]
		[Address(RVA = "0x67FAE4", Offset = "0x67FAE4", VA = "0x67FAE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C38CC", Offset = "0x4C38CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x67FBF4", Offset = "0x67FBF4", VA = "0x67FBF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C38DC", Offset = "0x4C38DC")]
		add
		{
		}
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x67FC94", Offset = "0x67FC94", VA = "0x67FC94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C38EC", Offset = "0x4C38EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x67FDA0", Offset = "0x67FDA0", VA = "0x67FDA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C395C", Offset = "0x4C395C")]
		add
		{
		}
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x67FE40", Offset = "0x67FE40", VA = "0x67FE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C396C", Offset = "0x4C396C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x67FF4C", Offset = "0x67FF4C", VA = "0x67FF4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C39DC", Offset = "0x4C39DC")]
		add
		{
		}
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x67FFEC", Offset = "0x67FFEC", VA = "0x67FFEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C39EC", Offset = "0x4C39EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x6800F8", Offset = "0x6800F8", VA = "0x6800F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3A5C", Offset = "0x4C3A5C")]
		add
		{
		}
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x680198", Offset = "0x680198", VA = "0x680198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3A6C", Offset = "0x4C3A6C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x6802A4", Offset = "0x6802A4", VA = "0x6802A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3ADC", Offset = "0x4C3ADC")]
		add
		{
		}
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x680344", Offset = "0x680344", VA = "0x680344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3AEC", Offset = "0x4C3AEC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x680450", Offset = "0x680450", VA = "0x680450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3B5C", Offset = "0x4C3B5C")]
		add
		{
		}
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x6804F0", Offset = "0x6804F0", VA = "0x6804F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3B6C", Offset = "0x4C3B6C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x6805FC", Offset = "0x6805FC", VA = "0x6805FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3BDC", Offset = "0x4C3BDC")]
		add
		{
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x68069C", Offset = "0x68069C", VA = "0x68069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3BEC", Offset = "0x4C3BEC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x67EC1C", Offset = "0x67EC1C", VA = "0x67EC1C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x67EC40", Offset = "0x67EC40", VA = "0x67EC40")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x67F0C0", Offset = "0x67F0C0", VA = "0x67F0C0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x67F1D4", Offset = "0x67F1D4", VA = "0x67F1D4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x67F420", Offset = "0x67F420", VA = "0x67F420")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C37E4", Offset = "0x4C37E4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x67F4D4", Offset = "0x67F4D4", VA = "0x67F4D4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x67F5A4", Offset = "0x67F5A4", VA = "0x67F5A4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x67F5C0", Offset = "0x67F5C0", VA = "0x67F5C0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x67F684", Offset = "0x67F684", VA = "0x67F684")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x67F6C8", Offset = "0x67F6C8", VA = "0x67F6C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x67F720", Offset = "0x67F720", VA = "0x67F720", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x67F7BC", Offset = "0x67F7BC", VA = "0x67F7BC", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x67F750", Offset = "0x67F750", VA = "0x67F750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C383C", Offset = "0x4C383C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x67FB84", Offset = "0x67FB84", VA = "0x67FB84")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x67FD34", Offset = "0x67FD34", VA = "0x67FD34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C38FC", Offset = "0x4C38FC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x67FEE0", Offset = "0x67FEE0", VA = "0x67FEE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C397C", Offset = "0x4C397C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x68008C", Offset = "0x68008C", VA = "0x68008C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C39FC", Offset = "0x4C39FC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x680238", Offset = "0x680238", VA = "0x680238")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C3A7C", Offset = "0x4C3A7C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x6803E4", Offset = "0x6803E4", VA = "0x6803E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C3AFC", Offset = "0x4C3AFC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x680590", Offset = "0x680590", VA = "0x680590")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C3B7C", Offset = "0x4C3B7C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x68073C", Offset = "0x68073C", VA = "0x68073C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x68087C", Offset = "0x68087C", VA = "0x68087C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x6808B0", Offset = "0x6808B0", VA = "0x6808B0")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x680978", Offset = "0x680978", VA = "0x680978")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x680A70", Offset = "0x680A70", VA = "0x680A70")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200018F")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x838F78", Offset = "0x838F78", VA = "0x838F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3E4C", Offset = "0x4C3E4C")]
		add
		{
		}
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x839018", Offset = "0x839018", VA = "0x839018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3E5C", Offset = "0x4C3E5C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x8390B8", Offset = "0x8390B8", VA = "0x8390B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3E6C", Offset = "0x4C3E6C")]
		add
		{
		}
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x839158", Offset = "0x839158", VA = "0x839158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3E7C", Offset = "0x4C3E7C")]
		remove
		{
		}
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x8391F8", Offset = "0x8391F8", VA = "0x8391F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x8392B4", Offset = "0x8392B4", VA = "0x8392B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x8392B8", Offset = "0x8392B8", VA = "0x8392B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x83932C", Offset = "0x83932C", VA = "0x83932C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x839450", Offset = "0x839450", VA = "0x839450")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x839638", Offset = "0x839638", VA = "0x839638")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x839840", Offset = "0x839840", VA = "0x839840")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000190")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x8EA6B0", Offset = "0x8EA6B0", VA = "0x8EA6B0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x8EA740", Offset = "0x8EA740", VA = "0x8EA740", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60006C5")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x8EA80C", Offset = "0x8EA80C", VA = "0x8EA80C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000191")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC1A8", Offset = "0x4BC1A8")]
	public float Range;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x8EA81C", Offset = "0x8EA81C", VA = "0x8EA81C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x8EA918", Offset = "0x8EA918", VA = "0x8EA918")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000192")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC1E0", Offset = "0x4BC1E0")]
	public float Range;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC218", Offset = "0x4BC218")]
	public float MinimumElevation;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC250", Offset = "0x4BC250")]
	public float Gravity;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC288", Offset = "0x4BC288")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BC288", Offset = "0x4BC288")]
	public float AimVelocity;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC2E4", Offset = "0x4BC2E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BC2E4", Offset = "0x4BC2E4")]
	public float AimStep;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x8EA928", Offset = "0x8EA928", VA = "0x8EA928", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x8EAAB8", Offset = "0x8EAAB8", VA = "0x8EAAB8")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000193")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC33C", Offset = "0x4BC33C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x8EAACC", Offset = "0x8EAACC", VA = "0x8EAACC")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x8EABE8", Offset = "0x8EABE8", VA = "0x8EABE8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x8EAC18", Offset = "0x8EAC18", VA = "0x8EAC18")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x8EAC48", Offset = "0x8EAC48", VA = "0x8EAC48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x8EACF0", Offset = "0x8EACF0", VA = "0x8EACF0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x8EAD5C", Offset = "0x8EAD5C", VA = "0x8EAD5C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x8EADC4", Offset = "0x8EADC4", VA = "0x8EADC4")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000194")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BC374", Offset = "0x4BC374")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC384", Offset = "0x4BC384")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC3BC", Offset = "0x4BC3BC")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC3F4", Offset = "0x4BC3F4")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000024")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x8EAEE8", Offset = "0x8EAEE8", VA = "0x8EAEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3E8C", Offset = "0x4C3E8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x8EAEF0", Offset = "0x8EAEF0", VA = "0x8EAEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3E9C", Offset = "0x4C3E9C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x8EB0A4", Offset = "0x8EB0A4", VA = "0x8EB0A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3EAC", Offset = "0x4C3EAC")]
		add
		{
		}
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x8EB144", Offset = "0x8EB144", VA = "0x8EB144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3EBC", Offset = "0x4C3EBC")]
		remove
		{
		}
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x8EAEFC", Offset = "0x8EAEFC", VA = "0x8EAEFC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x8EAF8C", Offset = "0x8EAF8C", VA = "0x8EAF8C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x8EB060", Offset = "0x8EB060", VA = "0x8EB060")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x8EB0A0", Offset = "0x8EB0A0", VA = "0x8EB0A0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x8EB1E4", Offset = "0x8EB1E4", VA = "0x8EB1E4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x8EB248", Offset = "0x8EB248", VA = "0x8EB248")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x8EB268", Offset = "0x8EB268", VA = "0x8EB268", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000195")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B18", Offset = "0x4B9B18")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0xDB7930", Offset = "0xDB7930", VA = "0xDB7930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006EB")]
			[Address(RVA = "0xDB7978", Offset = "0xDB7978", VA = "0xDB7978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xDB7874", Offset = "0xDB7874", VA = "0xDB7874")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xDB78A0", Offset = "0xDB78A0", VA = "0xDB78A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xDB78A4", Offset = "0xDB78A4", VA = "0xDB78A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xDB7938", Offset = "0xDB7938", VA = "0xDB7938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B28", Offset = "0x4B9B28")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0xDB7824", Offset = "0xDB7824", VA = "0xDB7824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0xDB786C", Offset = "0xDB786C", VA = "0xDB786C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xDB7764", Offset = "0xDB7764", VA = "0xDB7764")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xDB7790", Offset = "0xDB7790", VA = "0xDB7790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xDB7794", Offset = "0xDB7794", VA = "0xDB7794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xDB782C", Offset = "0xDB782C", VA = "0xDB782C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x8EB474", Offset = "0x8EB474", VA = "0x8EB474")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x8EB534", Offset = "0x8EB534", VA = "0x8EB534", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x8EB58C", Offset = "0x8EB58C", VA = "0x8EB58C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x8EB644", Offset = "0x8EB644", VA = "0x8EB644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C3ECC", Offset = "0x4C3ECC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x8EB6B0", Offset = "0x8EB6B0", VA = "0x8EB6B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C3F2C", Offset = "0x4C3F2C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60006E3")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x8EB71C", Offset = "0x8EB71C", VA = "0x8EB71C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3F8C", Offset = "0x4C3F8C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x8EB748", Offset = "0x8EB748", VA = "0x8EB748")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C3F9C", Offset = "0x4C3F9C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000198")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BC43C", Offset = "0x4BC43C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC44C", Offset = "0x4BC44C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC484", Offset = "0x4BC484")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC4BC", Offset = "0x4BC4BC")]
	public bool FastTeleport;

	[Token(Token = "0x17000029")]
	public Transform Pointer
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x8EB774", Offset = "0x8EB774", VA = "0x8EB774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C404C", Offset = "0x4C404C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x8EB77C", Offset = "0x8EB77C", VA = "0x8EB77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C405C", Offset = "0x4C405C")]
		private set
		{
		}
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x8EB784", Offset = "0x8EB784", VA = "0x8EB784", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x8EB8DC", Offset = "0x8EB8DC", VA = "0x8EB8DC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x8EB994", Offset = "0x8EB994", VA = "0x8EB994")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000199")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200019A")]
	public enum InputModes
	{
		[Token(Token = "0x4000C89")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000C8A")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000C8B")]
		ThumbstickTeleport,
		[Token(Token = "0x4000C8C")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200019B")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000C8E")]
		A,
		[Token(Token = "0x4000C8F")]
		B,
		[Token(Token = "0x4000C90")]
		LeftTrigger,
		[Token(Token = "0x4000C91")]
		LeftThumbstick,
		[Token(Token = "0x4000C92")]
		RightTrigger,
		[Token(Token = "0x4000C93")]
		RightThumbstick,
		[Token(Token = "0x4000C94")]
		X,
		[Token(Token = "0x4000C95")]
		Y
	}

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC4F4", Offset = "0x4BC4F4")]
	public InputModes InputMode;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC52C", Offset = "0x4BC52C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC564", Offset = "0x4BC564")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC59C", Offset = "0x4BC59C")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x8EB998", Offset = "0x8EB998", VA = "0x8EB998")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x8EB99C", Offset = "0x8EB99C", VA = "0x8EB99C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x8EBD84", Offset = "0x8EBD84", VA = "0x8EBD84", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x8EBE44", Offset = "0x8EBE44", VA = "0x8EBE44")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200019C")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200019D")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000C9A")]
		HeadRelative,
		[Token(Token = "0x4000C9B")]
		ForwardFacing
	}

	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B38", Offset = "0x4B9B38")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0xDB7A54", Offset = "0xDB7A54", VA = "0xDB7A54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0xDB7A9C", Offset = "0xDB7A9C", VA = "0xDB7A9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xDB7980", Offset = "0xDB7980", VA = "0xDB7980")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xDB79AC", Offset = "0xDB79AC", VA = "0xDB79AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xDB79B0", Offset = "0xDB79B0", VA = "0xDB79B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xDB7A5C", Offset = "0xDB7A5C", VA = "0xDB7A5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x8EBF10", Offset = "0x8EBF10", VA = "0x8EBF10")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x8EBFF0", Offset = "0x8EBFF0", VA = "0x8EBFF0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x8EBFF8", Offset = "0x8EBFF8", VA = "0x8EBFF8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x8EC044", Offset = "0x8EC044", VA = "0x8EC044", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x8EC08C", Offset = "0x8EC08C", VA = "0x8EC08C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C406C", Offset = "0x4C406C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000701")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x8EC0F8", Offset = "0x8EC0F8", VA = "0x8EC0F8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x8EC1B4", Offset = "0x8EC1B4", VA = "0x8EC1B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C40CC", Offset = "0x4C40CC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200019F")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600070A")]
	[Address(RVA = "0x8EC1E0", Offset = "0x8EC1E0", VA = "0x8EC1E0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x8EC1E4", Offset = "0x8EC1E4", VA = "0x8EC1E4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x8EC260", Offset = "0x8EC260", VA = "0x8EC260")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20001A0")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC5D4", Offset = "0x4BC5D4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC60C", Offset = "0x4BC60C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC644", Offset = "0x4BC644")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC67C", Offset = "0x4BC67C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x8EC264", Offset = "0x8EC264", VA = "0x8EC264", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x8EC290", Offset = "0x8EC290", VA = "0x8EC290", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x8EC640", Offset = "0x8EC640", VA = "0x8EC640")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20001A1")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC6B4", Offset = "0x4BC6B4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC6EC", Offset = "0x4BC6EC")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC724", Offset = "0x4BC724")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x8EC644", Offset = "0x8EC644", VA = "0x8EC644", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x8EC688", Offset = "0x8EC688", VA = "0x8EC688", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x8ECA30", Offset = "0x8ECA30", VA = "0x8ECA30")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20001A2")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x8ECA40", Offset = "0x8ECA40", VA = "0x8ECA40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x8ECA44", Offset = "0x8ECA44", VA = "0x8ECA44")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x8ECA4C", Offset = "0x8ECA4C", VA = "0x8ECA4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x8ECB08", Offset = "0x8ECB08", VA = "0x8ECB08")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x8ECB30", Offset = "0x8ECB30", VA = "0x8ECB30")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20001A3")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BC75C", Offset = "0x4BC75C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002C")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x8ECB48", Offset = "0x8ECB48", VA = "0x8ECB48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C412C", Offset = "0x4C412C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x8ECB50", Offset = "0x8ECB50", VA = "0x8ECB50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C413C", Offset = "0x4C413C")]
		private set
		{
		}
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x8EA6E0", Offset = "0x8EA6E0", VA = "0x8EA6E0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x8EA7E0", Offset = "0x8EA7E0", VA = "0x8EA7E0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x8ECB58", Offset = "0x8ECB58", VA = "0x8ECB58")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C414C", Offset = "0x4C414C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x8EAD50", Offset = "0x8EAD50", VA = "0x8EAD50", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x8EADBC", Offset = "0x8EADBC", VA = "0x8EADBC", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x8EA814", Offset = "0x8EA814", VA = "0x8EA814")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20001A4")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B48", Offset = "0x4B9B48")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xDB7D68", Offset = "0xDB7D68", VA = "0xDB7D68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0xDB7DB0", Offset = "0xDB7DB0", VA = "0xDB7DB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xDB7AA4", Offset = "0xDB7AA4", VA = "0xDB7AA4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xDB7AD0", Offset = "0xDB7AD0", VA = "0xDB7AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xDB7AD4", Offset = "0xDB7AD4", VA = "0xDB7AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xDB7D70", Offset = "0xDB7D70", VA = "0xDB7D70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC76C", Offset = "0x4BC76C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000CB5")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x8ECC34", Offset = "0x8ECC34", VA = "0x8ECC34")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x8ECD24", Offset = "0x8ECD24", VA = "0x8ECD24", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x8ECD50", Offset = "0x8ECD50", VA = "0x8ECD50", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x8ECD78", Offset = "0x8ECD78", VA = "0x8ECD78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4184", Offset = "0x4C4184")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x8ECDE4", Offset = "0x8ECDE4", VA = "0x8ECDE4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000725")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x8ECE00", Offset = "0x8ECE00", VA = "0x8ECE00", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x8ECF20", Offset = "0x8ECF20", VA = "0x8ECF20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C41E4", Offset = "0x4C41E4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001A6")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x8ECF4C", Offset = "0x8ECF4C", VA = "0x8ECF4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x8ECFA8", Offset = "0x8ECFA8", VA = "0x8ECFA8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x8ED0A0", Offset = "0x8ED0A0", VA = "0x8ED0A0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x8ED198", Offset = "0x8ED198", VA = "0x8ED198")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C4244", Offset = "0x4C4244")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x8ED19C", Offset = "0x8ED19C", VA = "0x8ED19C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20001A7")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC7A4", Offset = "0x4BC7A4")]
	public float LOSOffset;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC7DC", Offset = "0x4BC7DC")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x8ED1A8", Offset = "0x8ED1A8", VA = "0x8ED1A8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x8ED3B4", Offset = "0x8ED3B4", VA = "0x8ED3B4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20001A8")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000735")]
	[Address(RVA = "0x8ED3C0", Offset = "0x8ED3C0", VA = "0x8ED3C0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x8ED4B8", Offset = "0x8ED4B8", VA = "0x8ED4B8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20001A9")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000737")]
	[Address(RVA = "0x8ED4BC", Offset = "0x8ED4BC", VA = "0x8ED4BC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x8ED550", Offset = "0x8ED550", VA = "0x8ED550", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000739")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x8ED5E0", Offset = "0x8ED5E0", VA = "0x8ED5E0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20001AA")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B58", Offset = "0x4B9B58")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000741")]
			[Address(RVA = "0xDB7EE4", Offset = "0xDB7EE4", VA = "0xDB7EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xDB7F2C", Offset = "0xDB7F2C", VA = "0xDB7F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xDB7DB8", Offset = "0xDB7DB8", VA = "0xDB7DB8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xDB7DE4", Offset = "0xDB7DE4", VA = "0xDB7DE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xDB7DE8", Offset = "0xDB7DE8", VA = "0xDB7DE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xDB7EEC", Offset = "0xDB7EEC", VA = "0xDB7EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC814", Offset = "0x4BC814")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BC814", Offset = "0x4BC814")]
	public float TransitionDuration;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC86C", Offset = "0x4BC86C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BC86C", Offset = "0x4BC86C")]
	public float TeleportDelay;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC8C0", Offset = "0x4BC8C0")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x8ED5E8", Offset = "0x8ED5E8", VA = "0x8ED5E8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x8ED614", Offset = "0x8ED614", VA = "0x8ED614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C427C", Offset = "0x4C427C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x8ED680", Offset = "0x8ED680", VA = "0x8ED680")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20001AC")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000744")]
	[Address(RVA = "0x8ED820", Offset = "0x8ED820", VA = "0x8ED820", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x8ED83C", Offset = "0x8ED83C", VA = "0x8ED83C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20001AD")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B68", Offset = "0x4B9B68")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0xDB8094", Offset = "0xDB8094", VA = "0xDB8094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0xDB80DC", Offset = "0xDB80DC", VA = "0xDB80DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xDB7F34", Offset = "0xDB7F34", VA = "0xDB7F34")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xDB7F60", Offset = "0xDB7F60", VA = "0xDB7F60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xDB7F64", Offset = "0xDB7F64", VA = "0xDB7F64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xDB809C", Offset = "0xDB809C", VA = "0xDB809C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BC8F8", Offset = "0x4BC8F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BC8F8", Offset = "0x4BC8F8")]
	public float TransitionDuration;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x8ED844", Offset = "0x8ED844", VA = "0x8ED844", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x8ED870", Offset = "0x8ED870", VA = "0x8ED870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C432C", Offset = "0x4C432C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x8ED8DC", Offset = "0x8ED8DC", VA = "0x8ED8DC")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20001AF")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20001B0")]
	public enum PlabackState
	{
		[Token(Token = "0x4000CE5")]
		Idle = 1,
		[Token(Token = "0x4000CE6")]
		Preparing,
		[Token(Token = "0x4000CE7")]
		Buffering,
		[Token(Token = "0x4000CE8")]
		Ready,
		[Token(Token = "0x4000CE9")]
		Ended
	}

	[Token(Token = "0x20001B1")]
	public enum StereoMode
	{
		[Token(Token = "0x4000CEB")]
		Unknown = -1,
		[Token(Token = "0x4000CEC")]
		Mono,
		[Token(Token = "0x4000CED")]
		TopBottom,
		[Token(Token = "0x4000CEE")]
		LeftRight,
		[Token(Token = "0x4000CEF")]
		Mesh
	}

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000033")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x8BAB0C", Offset = "0x8BAB0C", VA = "0x8BAB0C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000034")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x8BAE3C", Offset = "0x8BAE3C", VA = "0x8BAE3C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000035")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x8B6E7C", Offset = "0x8B6E7C", VA = "0x8B6E7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000752")]
		[Address(RVA = "0x8B860C", Offset = "0x8B860C", VA = "0x8B860C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x8BB10C", Offset = "0x8BB10C", VA = "0x8BB10C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000038")]
	public static long Duration
	{
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x8B8830", Offset = "0x8B8830", VA = "0x8B8830")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000039")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x8B74A4", Offset = "0x8B74A4", VA = "0x8B74A4")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700003A")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000756")]
		[Address(RVA = "0x8B727C", Offset = "0x8B727C", VA = "0x8B727C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003B")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x8B7390", Offset = "0x8B7390", VA = "0x8B7390")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x8B871C", Offset = "0x8B871C", VA = "0x8B871C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000759")]
		[Address(RVA = "0x8B7D0C", Offset = "0x8B7D0C", VA = "0x8B7D0C")]
		set
		{
		}
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x8BB220", Offset = "0x8BB220", VA = "0x8BB220")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x8B8BF8", Offset = "0x8B8BF8", VA = "0x8B8BF8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x8B7958", Offset = "0x8B7958", VA = "0x8B7958")]
	public static void Play()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x8B7AF8", Offset = "0x8B7AF8", VA = "0x8B7AF8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x8B89F8", Offset = "0x8B89F8", VA = "0x8B89F8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x8BB440", Offset = "0x8BB440", VA = "0x8BB440")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x8B8424", Offset = "0x8B8424", VA = "0x8B8424")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20001B2")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000762")]
		[Address(RVA = "0x9BFBF0", Offset = "0x9BFBF0", VA = "0x9BFBF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C43DC", Offset = "0x4C43DC")]
		add
		{
		}
		[Token(Token = "0x6000763")]
		[Address(RVA = "0x9BFC90", Offset = "0x9BFC90", VA = "0x9BFC90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C43EC", Offset = "0x4C43EC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x9BFD30", Offset = "0x9BFD30", VA = "0x9BFD30", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x9BFD44", Offset = "0x9BFD44", VA = "0x9BFD44")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20001B3")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20001B4")]
	public enum ButtonType
	{
		[Token(Token = "0x4000CF3")]
		Play,
		[Token(Token = "0x4000CF4")]
		Pause,
		[Token(Token = "0x4000CF5")]
		FastForward,
		[Token(Token = "0x4000CF6")]
		Rewind,
		[Token(Token = "0x4000CF7")]
		SkipForward,
		[Token(Token = "0x4000CF8")]
		SkipBack,
		[Token(Token = "0x4000CF9")]
		Stop
	}

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003D")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000766")]
		[Address(RVA = "0x682240", Offset = "0x682240", VA = "0x682240")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x682248", Offset = "0x682248", VA = "0x682248")]
		set
		{
		}
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x68226C", Offset = "0x68226C", VA = "0x68226C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x683704", Offset = "0x683704", VA = "0x683704")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20001B5")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	public enum VideoShape
	{
		[Token(Token = "0x4000D0E")]
		_360,
		[Token(Token = "0x4000D0F")]
		_180,
		[Token(Token = "0x4000D10")]
		Quad
	}

	[Token(Token = "0x20001B7")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000D12")]
		Mono,
		[Token(Token = "0x4000D13")]
		TopBottom,
		[Token(Token = "0x4000D14")]
		LeftRight,
		[Token(Token = "0x4000D15")]
		BottomTop
	}

	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B78", Offset = "0x4B9B78")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0xDB3524", Offset = "0xDB3524", VA = "0xDB3524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0xDB356C", Offset = "0xDB356C", VA = "0xDB356C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xDB333C", Offset = "0xDB333C", VA = "0xDB333C")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xDB3368", Offset = "0xDB3368", VA = "0xDB3368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xDB336C", Offset = "0xDB336C", VA = "0xDB336C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xDB352C", Offset = "0xDB352C", VA = "0xDB352C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9B88", Offset = "0x4B9B88")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xDB3244", Offset = "0xDB3244", VA = "0xDB3244")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xDB324C", Offset = "0xDB324C", VA = "0xDB324C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BC980", Offset = "0x4BC980")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BC990", Offset = "0x4BC990")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BC9A0", Offset = "0x4BC9A0")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700003E")]
	public bool IsPlaying
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0x8B6BD4", Offset = "0x8B6BD4", VA = "0x8B6BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C43FC", Offset = "0x4C43FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600076B")]
		[Address(RVA = "0x8B6BDC", Offset = "0x8B6BDC", VA = "0x8B6BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C440C", Offset = "0x4C440C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public long Duration
	{
		[Token(Token = "0x600076C")]
		[Address(RVA = "0x8B6BE8", Offset = "0x8B6BE8", VA = "0x8B6BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C441C", Offset = "0x4C441C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x8B6BF0", Offset = "0x8B6BF0", VA = "0x8B6BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C442C", Offset = "0x4C442C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x8B6BF8", Offset = "0x8B6BF8", VA = "0x8B6BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C443C", Offset = "0x4C443C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600076F")]
		[Address(RVA = "0x8B6C00", Offset = "0x8B6C00", VA = "0x8B6C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C444C", Offset = "0x4C444C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x8B6C08", Offset = "0x8B6C08", VA = "0x8B6C08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x8B6EEC", Offset = "0x8B6EEC", VA = "0x8B6EEC")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x8B6F50", Offset = "0x8B6F50", VA = "0x8B6F50")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x8B75B8", Offset = "0x8B75B8", VA = "0x8B75B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C445C", Offset = "0x4C445C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x8B7624", Offset = "0x8B7624", VA = "0x8B7624")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x8B78C8", Offset = "0x8B78C8", VA = "0x8B78C8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x8B7A6C", Offset = "0x8B7A6C", VA = "0x8B7A6C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x8B7C0C", Offset = "0x8B7C0C", VA = "0x8B7C0C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x8B7E78", Offset = "0x8B7E78", VA = "0x8B7E78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x8B8944", Offset = "0x8B8944", VA = "0x8B8944")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x8B8B6C", Offset = "0x8B8B6C", VA = "0x8B8B6C")]
	public void Stop()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x8B8D0C", Offset = "0x8B8D0C", VA = "0x8B8D0C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x8B8DF8", Offset = "0x8B8DF8", VA = "0x8B8DF8")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20001BA")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20001BB")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000D32")]
		Playing,
		[Token(Token = "0x4000D33")]
		Paused,
		[Token(Token = "0x4000D34")]
		Rewinding,
		[Token(Token = "0x4000D35")]
		FastForwarding
	}

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x8B8E08", Offset = "0x8B8E08", VA = "0x8B8E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x8B9114", Offset = "0x8B9114", VA = "0x8B9114")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x8B9240", Offset = "0x8B9240", VA = "0x8B9240")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x8B934C", Offset = "0x8B934C", VA = "0x8B934C")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x8B942C", Offset = "0x8B942C", VA = "0x8B942C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x8B9320", Offset = "0x8B9320", VA = "0x8B9320")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x8B948C", Offset = "0x8B948C", VA = "0x8B948C")]
	private void Update()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x8B9000", Offset = "0x8B9000", VA = "0x8B9000")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x8B97CC", Offset = "0x8B97CC", VA = "0x8B97CC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20001BC")]
public static class VectorUtil
{
	[Token(Token = "0x600078E")]
	[Address(RVA = "0x76F310", Offset = "0x76F310", VA = "0x76F310")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20001BD")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000D36")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000D37")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xF613C4", Offset = "0xF613C4", VA = "0xF613C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xF61784", Offset = "0xF61784", VA = "0xF61784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xF61A10", Offset = "0xF61A10", VA = "0xF61A10")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xF61B78", Offset = "0xF61B78", VA = "0xF61B78")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xF61CE4", Offset = "0xF61CE4", VA = "0xF61CE4")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xF61E74", Offset = "0xF61E74", VA = "0xF61E74")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20001BE")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000D40")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x7A39E8", Offset = "0x7A39E8", VA = "0x7A39E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x7A3A38", Offset = "0x7A3A38", VA = "0x7A3A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x7A3A3C", Offset = "0x7A3A3C", VA = "0x7A3A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x7A3A40", Offset = "0x7A3A40", VA = "0x7A3A40")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x7A3C9C", Offset = "0x7A3C9C", VA = "0x7A3C9C")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x7A3ECC", Offset = "0x7A3ECC", VA = "0x7A3ECC")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20001BF")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x7A82E8", Offset = "0x7A82E8", VA = "0x7A82E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x7A87F4", Offset = "0x7A87F4", VA = "0x7A87F4")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x7A88B4", Offset = "0x7A88B4", VA = "0x7A88B4")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x7A8AE0", Offset = "0x7A8AE0", VA = "0x7A8AE0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x7A8BC0", Offset = "0x7A8BC0", VA = "0x7A8BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x7A8CA4", Offset = "0x7A8CA4", VA = "0x7A8CA4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x7A8D18", Offset = "0x7A8D18", VA = "0x7A8D18")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x7A8D20", Offset = "0x7A8D20", VA = "0x7A8D20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C451C", Offset = "0x4C451C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x7A8D84", Offset = "0x7A8D84", VA = "0x7A8D84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C452C", Offset = "0x4C452C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x7A8DE8", Offset = "0x7A8DE8", VA = "0x7A8DE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C453C", Offset = "0x4C453C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x7A8E4C", Offset = "0x7A8E4C", VA = "0x7A8E4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C454C", Offset = "0x4C454C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20001C0")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xAB7C00", Offset = "0xAB7C00", VA = "0xAB7C00")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20001C1")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x82F72C", Offset = "0x82F72C", VA = "0x82F72C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x82F7D0", Offset = "0x82F7D0", VA = "0x82F7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x82F8BC", Offset = "0x82F8BC", VA = "0x82F8BC")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x82F91C", Offset = "0x82F91C", VA = "0x82F91C")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20001C2")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x8E6F54", Offset = "0x8E6F54", VA = "0x8E6F54")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20001C3")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9BA8", Offset = "0x4B9BA8")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x762404", Offset = "0x762404", VA = "0x762404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x76244C", Offset = "0x76244C", VA = "0x76244C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x7622B4", Offset = "0x7622B4", VA = "0x7622B4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x7622E0", Offset = "0x7622E0", VA = "0x7622E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x7622E4", Offset = "0x7622E4", VA = "0x7622E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x76240C", Offset = "0x76240C", VA = "0x76240C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x8706E8", Offset = "0x8706E8", VA = "0x8706E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x8707EC", Offset = "0x8707EC", VA = "0x8707EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x870780", Offset = "0x870780", VA = "0x870780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C455C", Offset = "0x4C455C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x870998", Offset = "0x870998", VA = "0x870998")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20001C5")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BC9D0", Offset = "0x4BC9D0")]
	public int SubdivisionsU;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BC9EC", Offset = "0x4BC9EC")]
	public int SubdivisionsV;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x8A8C90", Offset = "0x8A8C90", VA = "0x8A8C90")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x8A969C", Offset = "0x8A969C", VA = "0x8A969C")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20001C6")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000045")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x67E488", Offset = "0x67E488", VA = "0x67E488")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x67E4DC", Offset = "0x67E4DC", VA = "0x67E4DC")]
	public void Start()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x67E8F8", Offset = "0x67E8F8", VA = "0x67E8F8")]
	public void Update()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x67E9E4", Offset = "0x67E9E4", VA = "0x67E9E4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C460C", Offset = "0x4C460C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60007BC")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60007BD")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60007BE")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60007BF")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60007C0")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60007C1")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60007C2")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60007C3")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x67EA48", Offset = "0x67EA48", VA = "0x67EA48")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x67EA84", Offset = "0x67EA84", VA = "0x67EA84")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x67EAF4", Offset = "0x67EAF4", VA = "0x67EAF4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x67EC64", Offset = "0x67EC64", VA = "0x67EC64")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x67ED40", Offset = "0x67ED40", VA = "0x67ED40")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x67E7F0", Offset = "0x67E7F0", VA = "0x67E7F0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x67EE08", Offset = "0x67EE08", VA = "0x67EE08")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x67EE70", Offset = "0x67EE70", VA = "0x67EE70")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x67EF68", Offset = "0x67EF68", VA = "0x67EF68")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20001C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4B9BC8", Offset = "0x4B9BC8")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	public enum DrawMode
	{
		[Token(Token = "0x4000D6F")]
		Opaque,
		[Token(Token = "0x4000D70")]
		OpaqueWithClip,
		[Token(Token = "0x4000D71")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000D72")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000046")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x911C1C", Offset = "0x911C1C", VA = "0x911C1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x911CAC", Offset = "0x911CAC", VA = "0x911CAC")]
		set
		{
		}
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x910754", Offset = "0x910754", VA = "0x910754")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x911288", Offset = "0x911288", VA = "0x911288")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x911308", Offset = "0x911308", VA = "0x911308")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x9113F8", Offset = "0x9113F8", VA = "0x9113F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x9114E8", Offset = "0x9114E8", VA = "0x9114E8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x9116F4", Offset = "0x9116F4", VA = "0x9116F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x911D78", Offset = "0x911D78", VA = "0x911D78")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20001C9")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xF625F0", Offset = "0xF625F0", VA = "0xF625F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xF627A4", Offset = "0xF627A4", VA = "0xF627A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xF6292C", Offset = "0xF6292C", VA = "0xF6292C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xF62934", Offset = "0xF62934", VA = "0xF62934")]
	public void Release()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xF6291C", Offset = "0xF6291C", VA = "0xF6291C")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xF6293C", Offset = "0xF6293C", VA = "0xF6293C")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20001CA")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C28", Offset = "0x4B9C28")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x75E614", Offset = "0x75E614", VA = "0x75E614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x75E65C", Offset = "0x75E65C", VA = "0x75E65C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x75E4F0", Offset = "0x75E4F0", VA = "0x75E4F0")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x75E51C", Offset = "0x75E51C", VA = "0x75E51C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x75E520", Offset = "0x75E520", VA = "0x75E520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x75E61C", Offset = "0x75E61C", VA = "0x75E61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C38", Offset = "0x4B9C38")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0x75E810", Offset = "0x75E810", VA = "0x75E810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0x75E858", Offset = "0x75E858", VA = "0x75E858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x75E664", Offset = "0x75E664", VA = "0x75E664")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x75E690", Offset = "0x75E690", VA = "0x75E690", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x75E694", Offset = "0x75E694", VA = "0x75E694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x75E818", Offset = "0x75E818", VA = "0x75E818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x9BE738", Offset = "0x9BE738", VA = "0x9BE738")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x9BE9CC", Offset = "0x9BE9CC", VA = "0x9BE9CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x9BEA28", Offset = "0x9BEA28", VA = "0x9BEA28")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x9BEB8C", Offset = "0x9BEB8C", VA = "0x9BEB8C")]
	public void Release()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x9BEC50", Offset = "0x9BEC50", VA = "0x9BEC50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4644", Offset = "0x4C4644")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x9BEAD4", Offset = "0x9BEAD4", VA = "0x9BEAD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C46A4", Offset = "0x4C46A4")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x9BECEC", Offset = "0x9BECEC", VA = "0x9BECEC")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20001CD")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x845888", Offset = "0x845888", VA = "0x845888")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x8458E8", Offset = "0x8458E8", VA = "0x8458E8")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20001CE")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x850AF8", Offset = "0x850AF8", VA = "0x850AF8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x850C2C", Offset = "0x850C2C", VA = "0x850C2C")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x850CC0", Offset = "0x850CC0", VA = "0x850CC0")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x850D28", Offset = "0x850D28", VA = "0x850D28")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20001CF")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C48", Offset = "0x4B9C48")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x7618A8", Offset = "0x7618A8", VA = "0x7618A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x7618F0", Offset = "0x7618F0", VA = "0x7618F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x7616A8", Offset = "0x7616A8", VA = "0x7616A8")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x7616D4", Offset = "0x7616D4", VA = "0x7616D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x7616D8", Offset = "0x7616D8", VA = "0x7616D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x7618B0", Offset = "0x7618B0", VA = "0x7618B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x850D30", Offset = "0x850D30", VA = "0x850D30")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x850FBC", Offset = "0x850FBC", VA = "0x850FBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x85130C", Offset = "0x85130C", VA = "0x85130C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x851638", Offset = "0x851638", VA = "0x851638")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x85193C", Offset = "0x85193C", VA = "0x85193C")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x851A30", Offset = "0x851A30", VA = "0x851A30")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x851BF0", Offset = "0x851BF0", VA = "0x851BF0")]
	public void Release()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x851B48", Offset = "0x851B48", VA = "0x851B48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C47A4", Offset = "0x4C47A4")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x851CD8", Offset = "0x851CD8", VA = "0x851CD8")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20001D1")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000DA7")]
		Default,
		[Token(Token = "0x4000DA8")]
		ForcedHand,
		[Token(Token = "0x4000DA9")]
		DollyHand,
		[Token(Token = "0x4000DAA")]
		DollyAttached,
		[Token(Token = "0x4000DAB")]
		HorizontalScaled,
		[Token(Token = "0x4000DAC")]
		VerticalScaled,
		[Token(Token = "0x4000DAD")]
		Menu
	}

	[Token(Token = "0x20001D3")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20001D4")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20001D5")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BCA78", Offset = "0x4BCA78")]
	public string ObjectName;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BCA88", Offset = "0x4BCA88")]
	public string ObjectInstructions;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x930904", Offset = "0x930904", VA = "0x930904")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x930960", Offset = "0x930960", VA = "0x930960")]
	public void Release()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x930974", Offset = "0x930974", VA = "0x930974")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x930988", Offset = "0x930988", VA = "0x930988")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20001D6")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BCAA8", Offset = "0x4BCAA8")]
	public int radialDivisions;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BCAE0", Offset = "0x4BCAE0")]
	public float borderSize;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BCB18", Offset = "0x4BCB18")]
	public float fingerTaper;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BCB50", Offset = "0x4BCB50")]
	public float fingerTipLength;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BCB88", Offset = "0x4BCB88")]
	public float webOffset;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x936E2C", Offset = "0x936E2C", VA = "0x936E2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x937004", Offset = "0x937004", VA = "0x937004")]
	private void Update()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x937210", Offset = "0x937210", VA = "0x937210")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x93784C", Offset = "0x93784C", VA = "0x93784C")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x937E7C", Offset = "0x937E7C", VA = "0x937E7C")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x93A4F8", Offset = "0x93A4F8", VA = "0x93A4F8")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x93A5B4", Offset = "0x93A5B4", VA = "0x93A5B4")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20001D7")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x86C110", Offset = "0x86C110", VA = "0x86C110")]
	private void Start()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x86C448", Offset = "0x86C448", VA = "0x86C448")]
	private void Update()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x86C1B8", Offset = "0x86C1B8", VA = "0x86C1B8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x86C838", Offset = "0x86C838", VA = "0x86C838")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x86CD28", Offset = "0x86CD28", VA = "0x86CD28")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20001D8")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C58", Offset = "0x4B9C58")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0xDB3A9C", Offset = "0xDB3A9C", VA = "0xDB3A9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0xDB3AE4", Offset = "0xDB3AE4", VA = "0xDB3AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xDB37D8", Offset = "0xDB37D8", VA = "0xDB37D8")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xDB3804", Offset = "0xDB3804", VA = "0xDB3804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xDB3808", Offset = "0xDB3808", VA = "0xDB3808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xDB3AA4", Offset = "0xDB3AA4", VA = "0xDB3AA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x91324C", Offset = "0x91324C", VA = "0x91324C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x913478", Offset = "0x913478", VA = "0x913478")]
	private void Update()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x914090", Offset = "0x914090", VA = "0x914090")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x914C98", Offset = "0x914C98", VA = "0x914C98")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x91340C", Offset = "0x91340C", VA = "0x91340C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4854", Offset = "0x4C4854")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x9136DC", Offset = "0x9136DC", VA = "0x9136DC")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x914354", Offset = "0x914354", VA = "0x914354")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x914F50", Offset = "0x914F50", VA = "0x914F50")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x914FDC", Offset = "0x914FDC", VA = "0x914FDC")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x91500C", Offset = "0x91500C", VA = "0x91500C")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x914E18", Offset = "0x914E18", VA = "0x914E18")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x915130", Offset = "0x915130", VA = "0x915130")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20001DA")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x919DFC", Offset = "0x919DFC", VA = "0x919DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x919F88", Offset = "0x919F88", VA = "0x919F88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x91A050", Offset = "0x91A050", VA = "0x91A050")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20001DB")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20001DC")]
	public enum BrushState
	{
		[Token(Token = "0x4000DEA")]
		Idle,
		[Token(Token = "0x4000DEB")]
		Inking
	}

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x6C1B7C", Offset = "0x6C1B7C", VA = "0x6C1B7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x6C1B84", Offset = "0x6C1B84", VA = "0x6C1B84")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x6C1E6C", Offset = "0x6C1E6C", VA = "0x6C1E6C")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x6C2048", Offset = "0x6C2048", VA = "0x6C2048")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x6C21F0", Offset = "0x6C21F0", VA = "0x6C21F0")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x6C1D78", Offset = "0x6C1D78", VA = "0x6C1D78")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x6C22CC", Offset = "0x6C22CC", VA = "0x6C22CC")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20001DD")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x6C2358", Offset = "0x6C2358", VA = "0x6C2358")]
	private void Start()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x6C24E4", Offset = "0x6C24E4", VA = "0x6C24E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x6C2648", Offset = "0x6C2648", VA = "0x6C2648")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20001DE")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x6C2650", Offset = "0x6C2650", VA = "0x6C2650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x6C2844", Offset = "0x6C2844", VA = "0x6C2844")]
	private void Update()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x6C2A14", Offset = "0x6C2A14", VA = "0x6C2A14")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20001DF")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C68", Offset = "0x4B9C68")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0xDB63F0", Offset = "0xDB63F0", VA = "0xDB63F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0xDB6438", Offset = "0xDB6438", VA = "0xDB6438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xDB6218", Offset = "0xDB6218", VA = "0xDB6218")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xDB6244", Offset = "0xDB6244", VA = "0xDB6244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xDB6248", Offset = "0xDB6248", VA = "0xDB6248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xDB63F8", Offset = "0xDB63F8", VA = "0xDB63F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C78", Offset = "0x4B9C78")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0xDB6658", Offset = "0xDB6658", VA = "0xDB6658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0xDB66A0", Offset = "0xDB66A0", VA = "0xDB66A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xDB6440", Offset = "0xDB6440", VA = "0xDB6440")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xDB646C", Offset = "0xDB646C", VA = "0xDB646C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xDB6470", Offset = "0xDB6470", VA = "0xDB6470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xDB6660", Offset = "0xDB6660", VA = "0xDB6660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x6C2A1C", Offset = "0x6C2A1C", VA = "0x6C2A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x6C2D20", Offset = "0x6C2D20", VA = "0x6C2D20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x6C2F78", Offset = "0x6C2F78", VA = "0x6C2F78")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x6C30E0", Offset = "0x6C30E0", VA = "0x6C30E0")]
	public void Release()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x6C3064", Offset = "0x6C3064", VA = "0x6C3064")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4904", Offset = "0x4C4904")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x6C31C0", Offset = "0x6C31C0", VA = "0x6C31C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4964", Offset = "0x4C4964")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x6C323C", Offset = "0x6C323C", VA = "0x6C323C")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x6C325C", Offset = "0x6C325C", VA = "0x6C325C")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x6C327C", Offset = "0x6C327C", VA = "0x6C327C")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x6C329C", Offset = "0x6C329C", VA = "0x6C329C")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x6C2CA4", Offset = "0x6C2CA4", VA = "0x6C2CA4")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x6C3300", Offset = "0x6C3300", VA = "0x6C3300")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x6C330C", Offset = "0x6C330C", VA = "0x6C330C")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x6C2D38", Offset = "0x6C2D38", VA = "0x6C2D38")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x6C3318", Offset = "0x6C3318", VA = "0x6C3318")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20001E2")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x6C335C", Offset = "0x6C335C", VA = "0x6C335C")]
	private void Start()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x6C341C", Offset = "0x6C341C", VA = "0x6C341C")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20001E3")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x82ED0C", Offset = "0x82ED0C", VA = "0x82ED0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x82EF14", Offset = "0x82EF14", VA = "0x82EF14")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x82EF6C", Offset = "0x82EF6C", VA = "0x82EF6C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x82EFB8", Offset = "0x82EFB8", VA = "0x82EFB8")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20001E4")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x83660C", Offset = "0x83660C", VA = "0x83660C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x836684", Offset = "0x836684", VA = "0x836684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x8369A8", Offset = "0x8369A8", VA = "0x8369A8")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20001E5")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x837430", Offset = "0x837430", VA = "0x837430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x8378B8", Offset = "0x8378B8", VA = "0x8378B8")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20001E6")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x17000053")]
	public ulong anchorHandle
	{
		[Token(Token = "0x6000869")]
		[Address(RVA = "0xAB7C08", Offset = "0xAB7C08", VA = "0xAB7C08")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xAB7C10", Offset = "0xAB7C10", VA = "0xAB7C10")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xAB7CE0", Offset = "0xAB7CE0", VA = "0xAB7CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xAB7F48", Offset = "0xAB7F48", VA = "0xAB7F48")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xAB7FB0", Offset = "0xAB7FB0", VA = "0xAB7FB0")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xAB8014", Offset = "0xAB8014", VA = "0xAB8014")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xAB8078", Offset = "0xAB8078", VA = "0xAB8078")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xAB8180", Offset = "0xAB8180", VA = "0xAB8180")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xAB82A0", Offset = "0xAB82A0", VA = "0xAB82A0")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xAB83B4", Offset = "0xAB83B4", VA = "0xAB83B4")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xAB8448", Offset = "0xAB8448", VA = "0xAB8448")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xAB7D24", Offset = "0xAB7D24", VA = "0xAB7D24")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xAB7E38", Offset = "0xAB7E38", VA = "0xAB7E38")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xAB8468", Offset = "0xAB8468", VA = "0xAB8468")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xAB8570", Offset = "0xAB8570", VA = "0xAB8570")]
	public Anchor()
	{
	}
}
[Token(Token = "0x20001E7")]
public class AnchorHelpers
{
	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x17000054")]
	private static Camera MainCamera
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xAB8578", Offset = "0xAB8578", VA = "0xAB8578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xAB8624", Offset = "0xAB8624", VA = "0xAB8624")]
	public static OVRPlugin.Posef UnityWorldSpacePoseToTrackingSpacePose(Transform pose)
	{
		return default(OVRPlugin.Posef);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xAB86A0", Offset = "0xAB86A0", VA = "0xAB86A0")]
	public static OVRPose TrackingSpacePoseToUnityWorldSpacePose(OVRPlugin.Posef pose)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xAB8714", Offset = "0xAB8714", VA = "0xAB8714")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x600087C")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xAB876C", Offset = "0xAB876C", VA = "0xAB876C")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xAB8A10", Offset = "0xAB8A10", VA = "0xAB8A10")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xAB8B88", Offset = "0xAB8B88", VA = "0xAB8B88")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xAB8C4C", Offset = "0xAB8C4C", VA = "0xAB8C4C")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x20001E8")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x20001E9")]
	public enum StorageLocation
	{
		[Token(Token = "0x4000E33")]
		LOCAL
	}

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x4000E2D")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x4000E2F")]
	protected const int maxEvents = 5;

	[Token(Token = "0x4000E30")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xAB8C54", Offset = "0xAB8C54", VA = "0xAB8C54", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xAB8980", Offset = "0xAB8980", VA = "0xAB8980")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xAB8D50", Offset = "0xAB8D50", VA = "0xAB8D50")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000884")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x6000885")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x6000886")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x6000887")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x6000888")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xAB8D5C", Offset = "0xAB8D5C", VA = "0xAB8D5C")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x20001EA")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x17000055")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x600088A")]
		[Address(RVA = "0xAB8DD4", Offset = "0xAB8DD4", VA = "0xAB8DD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xAB8DDC", Offset = "0xAB8DDC", VA = "0xAB8DDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xAB8ED4", Offset = "0xAB8ED4", VA = "0xAB8ED4")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xAB9108", Offset = "0xAB9108", VA = "0xAB9108")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x20001EB")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x20001EC")]
	public enum AnchorMode
	{
		[Token(Token = "0x4000E49")]
		Create,
		[Token(Token = "0x4000E4A")]
		Select
	}

	[Token(Token = "0x20001ED")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Button selectedButton_;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xAB9110", Offset = "0xAB9110", VA = "0xAB9110")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xAB91E4", Offset = "0xAB91E4", VA = "0xAB91E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xAB9330", Offset = "0xAB9330", VA = "0xAB9330")]
	private void Update()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xAB9788", Offset = "0xAB9788", VA = "0xAB9788")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xAB97F8", Offset = "0xAB97F8", VA = "0xAB97F8")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xAB92D0", Offset = "0xAB92D0", VA = "0xAB92D0")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xAB9878", Offset = "0xAB9878", VA = "0xAB9878")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xAB98F8", Offset = "0xAB98F8", VA = "0xAB98F8")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xAB991C", Offset = "0xAB991C", VA = "0xAB991C")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xAB9854", Offset = "0xAB9854", VA = "0xAB9854")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xAB9678", Offset = "0xAB9678", VA = "0xAB9678")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xAB9A50", Offset = "0xAB9A50", VA = "0xAB9A50")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xAB999C", Offset = "0xAB999C", VA = "0xAB999C")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xAB99BC", Offset = "0xAB99BC", VA = "0xAB99BC")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xAB9B58", Offset = "0xAB9B58", VA = "0xAB9B58")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xAB99DC", Offset = "0xAB99DC", VA = "0xAB99DC")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xAB9A18", Offset = "0xAB9A18", VA = "0xAB9A18")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xAB943C", Offset = "0xAB943C", VA = "0xAB943C")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xAB9BB4", Offset = "0xAB9BB4", VA = "0xAB9BB4")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xAB9BD0", Offset = "0xAB9BD0", VA = "0xAB9BD0")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xAB9C58", Offset = "0xAB9C58", VA = "0xAB9C58")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xAB9DAC", Offset = "0xAB9DAC", VA = "0xAB9DAC")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x20001EE")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x4000E4C")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x83D3C0", Offset = "0x83D3C0", VA = "0x83D3C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x83D60C", Offset = "0x83D60C", VA = "0x83D60C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x83D858", Offset = "0x83D858", VA = "0x83D858")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x83DA68", Offset = "0x83DA68", VA = "0x83DA68")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x83DEE8", Offset = "0x83DEE8", VA = "0x83DEE8")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x83E1A8", Offset = "0x83E1A8", VA = "0x83E1A8")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x83E834", Offset = "0x83E834", VA = "0x83E834")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x83DE0C", Offset = "0x83DE0C", VA = "0x83DE0C")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x83E44C", Offset = "0x83E44C", VA = "0x83E44C")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x83D948", Offset = "0x83D948", VA = "0x83D948")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x83EA34", Offset = "0x83EA34", VA = "0x83EA34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x83ECE4", Offset = "0x83ECE4", VA = "0x83ECE4", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x83EE84", Offset = "0x83EE84", VA = "0x83EE84", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x83F040", Offset = "0x83F040", VA = "0x83F040", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x83F20C", Offset = "0x83F20C", VA = "0x83F20C")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x83F498", Offset = "0x83F498", VA = "0x83F498", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x83F588", Offset = "0x83F588", VA = "0x83F588", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x83F6F8", Offset = "0x83F6F8", VA = "0x83F6F8")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x20001EF")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9C88", Offset = "0x4B9C88")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xDB7738", Offset = "0xDB7738", VA = "0xDB7738")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xDB7740", Offset = "0xDB7740", VA = "0xDB7740")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x8E6F5C", Offset = "0x8E6F5C", VA = "0x8E6F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x8E7168", Offset = "0x8E7168", VA = "0x8E7168")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x8E7278", Offset = "0x8E7278", VA = "0x8E7278")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20001F1")]
public class OculusBuzz
{
	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float time;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float freq;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float amplitude;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool left;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x9151CC", Offset = "0x9151CC", VA = "0x9151CC")]
	public OculusBuzz(float time, float freq, float amplitude, bool left)
	{
	}
}
[Token(Token = "0x20001F2")]
public class OculusHapticsController : MonoBehaviour
{
	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OculusHapticsController instance;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<OculusBuzz> haptics;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x915220", Offset = "0x915220", VA = "0x915220")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x915270", Offset = "0x915270", VA = "0x915270")]
	public static void buzz(float time, float amount, bool left, float freqMod = 1f)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x9153DC", Offset = "0x9153DC", VA = "0x9153DC")]
	private void refreshHaptics(bool reduce, bool left)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x915640", Offset = "0x915640", VA = "0x915640")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x915674", Offset = "0x915674", VA = "0x915674")]
	public OculusHapticsController()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F3")]
public class OculusLeaderboard
{
	[Token(Token = "0x20001F4")]
	public delegate void OnLeaderboardLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isTime;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OculusLeaderboardScore[] scores;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int showAmount;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnLeaderboardLeaderboardUpdated m_leaderboardCallback;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SortedDictionary<int, LeaderboardEntry> m_leaderboard;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_foundLocalUserLeaderboardEntry;

	[Token(Token = "0x17000056")]
	public OnLeaderboardLeaderboardUpdated LeaderboardLeaderboardUpdatedCallback
	{
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x9158F4", Offset = "0x9158F4", VA = "0x9158F4")]
		set
		{
		}
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x9156EC", Offset = "0x9156EC", VA = "0x9156EC")]
	public void Init()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x91580C", Offset = "0x91580C", VA = "0x91580C")]
	public void UpdateScore(long score)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x9158FC", Offset = "0x9158FC", VA = "0x9158FC")]
	private void LeaderboardGetEntriesCallback(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x915E48", Offset = "0x915E48", VA = "0x915E48")]
	public OculusLeaderboard()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F5")]
public class OculusLeaderboardScore
{
	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isYou;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string username;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rank;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public long score;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x915DF0", Offset = "0x915DF0", VA = "0x915DF0")]
	public OculusLeaderboardScore(bool isYou, string username, int rank, long score)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x915E58", Offset = "0x915E58", VA = "0x915E58", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20001F6")]
public class OculusLeaderboards : MonoBehaviour
{
	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OculusLeaderboards instance;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OculusLeaderboard[] leaderboards;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool init;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string lastUpdated;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x915FF4", Offset = "0x915FF4", VA = "0x915FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x916310", Offset = "0x916310", VA = "0x916310")]
	public OculusLeaderboard getLeaderBoardByName(string name)
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x916418", Offset = "0x916418", VA = "0x916418")]
	public void UpdateScore(string name, long score)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x9164B0", Offset = "0x9164B0", VA = "0x9164B0")]
	private void refreshLeaderboard()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x9164D4", Offset = "0x9164D4", VA = "0x9164D4")]
	private void callbackMethod(Message msg)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x916638", Offset = "0x916638", VA = "0x916638")]
	private void getLeaderboard(Message msg)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x916704", Offset = "0x916704", VA = "0x916704")]
	private void getLoggedInUserComplete(Message msg)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x916A1C", Offset = "0x916A1C", VA = "0x916A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x916A20", Offset = "0x916A20", VA = "0x916A20")]
	public OculusLeaderboards()
	{
	}
}
[Token(Token = "0x20001F7")]
public class OnOVRAction : MonoBehaviour
{
	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button button;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent action;

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x916D28", Offset = "0x916D28", VA = "0x916D28")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x916D2C", Offset = "0x916D2C", VA = "0x916D2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x916DBC", Offset = "0x916DBC", VA = "0x916DBC")]
	public OnOVRAction()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F8")]
public class OptionCategory
{
	[Token(Token = "0x20001F9")]
	public enum Show
	{
		[Token(Token = "0x4000E6D")]
		Always,
		[Token(Token = "0x4000E6E")]
		Never,
		[Token(Token = "0x4000E6F")]
		DevOnly,
		[Token(Token = "0x4000E70")]
		NotAndroid,
		[Token(Token = "0x4000E71")]
		CheatMenu,
		[Token(Token = "0x4000E72")]
		Quest1,
		[Token(Token = "0x4000E73")]
		Testing,
		[Token(Token = "0x4000E74")]
		HiddenButSaves
	}

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OptionData[] options;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Show show;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x916DC4", Offset = "0x916DC4", VA = "0x916DC4")]
	public bool showOnMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x916EE8", Offset = "0x916EE8", VA = "0x916EE8")]
	public string toolTip()
	{
		return null;
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x91702C", Offset = "0x91702C", VA = "0x91702C")]
	public void localise()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x9171A4", Offset = "0x9171A4", VA = "0x9171A4")]
	public void AddOption(OptionData newOption)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x9172A4", Offset = "0x9172A4", VA = "0x9172A4")]
	public void reset()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x91781C", Offset = "0x91781C", VA = "0x91781C")]
	public OptionCategory()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FA")]
public class OptionData
{
	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool changed;

	[NonSerialized]
	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OptionCategory category;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] values;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string mainHoverText;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] hoverTexts;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int value;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int defaultValue;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hideFromMenu;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool devModeOnly;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string showIfCustomNotDefault;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, OptionData> lookup;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x9170D4", Offset = "0x9170D4", VA = "0x9170D4")]
	public void localise()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x917824", Offset = "0x917824", VA = "0x917824")]
	public void validate()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x917854", Offset = "0x917854", VA = "0x917854")]
	public bool isMulti()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x917878", Offset = "0x917878", VA = "0x917878")]
	public static OptionData fromExportString(string inStr)
	{
		return null;
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x917AAC", Offset = "0x917AAC", VA = "0x917AAC")]
	public string exportString()
	{
		return null;
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x917C08", Offset = "0x917C08", VA = "0x917C08")]
	public string getOptionTooltip(bool overview, int value = -1)
	{
		return null;
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x917DCC", Offset = "0x917DCC", VA = "0x917DCC")]
	public void doAction()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x91731C", Offset = "0x91731C", VA = "0x91731C")]
	public void reset(OptionCategory category)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x918414", Offset = "0x918414", VA = "0x918414")]
	public void next()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x91879C", Offset = "0x91879C", VA = "0x91879C")]
	public void prev()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x9187A8", Offset = "0x9187A8", VA = "0x9187A8")]
	public bool isDefault()
	{
		return default(bool);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x9187B8", Offset = "0x9187B8", VA = "0x9187B8")]
	public string displayValue()
	{
		return null;
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x918838", Offset = "0x918838", VA = "0x918838")]
	public void setFromString(string v)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x918420", Offset = "0x918420", VA = "0x918420")]
	public void setValue(int value)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x91895C", Offset = "0x91895C", VA = "0x91895C")]
	public static OptionData getOption(string optionName, bool customGame = false)
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x9188C8", Offset = "0x9188C8", VA = "0x9188C8")]
	public static float getPerc(string optionName)
	{
		return default(float);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x918CF4", Offset = "0x918CF4", VA = "0x918CF4")]
	public static bool getCheat(string cheatName, string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x918F6C", Offset = "0x918F6C", VA = "0x918F6C")]
	public static void disableCheats()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x919078", Offset = "0x919078", VA = "0x919078")]
	public static bool cheatsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x91916C", Offset = "0x91916C", VA = "0x91916C")]
	public static int getInt(string optionName, bool customGame = false)
	{
		return default(int);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x919558", Offset = "0x919558", VA = "0x919558")]
	public static bool rightHanded(bool isSpecial, bool isPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x918EFC", Offset = "0x918EFC", VA = "0x918EFC")]
	public static bool getBool(string optionName)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x917AA4", Offset = "0x917AA4", VA = "0x917AA4")]
	public OptionData()
	{
	}
}
[Token(Token = "0x20001FB")]
public class OrbitalSphereController : ProjectileController
{
	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float angle;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float distance;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float height;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float life;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float impact;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x919650", Offset = "0x919650", VA = "0x919650", Slot = "7")]
	public override void flyingMovement()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x919AB4", Offset = "0x919AB4", VA = "0x919AB4")]
	private void hitEffect()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x919C0C", Offset = "0x919C0C", VA = "0x919C0C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x919DE8", Offset = "0x919DE8", VA = "0x919DE8")]
	public OrbitalSphereController()
	{
	}
}
[Token(Token = "0x20001FC")]
public class POVSwitchCam : SpectateCamera
{
	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float offset;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 noEnemyOffset;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 noEnemyRotationOffset;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 whenDownOffset;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float baseSpeed;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x6C07D0", Offset = "0x6C07D0", VA = "0x6C07D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x6C07D4", Offset = "0x6C07D4", VA = "0x6C07D4")]
	private void change()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x6C0928", Offset = "0x6C0928", VA = "0x6C0928", Slot = "5")]
	public override void updatePosition()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x6C0D8C", Offset = "0x6C0D8C", VA = "0x6C0D8C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x6C0DEC", Offset = "0x6C0DEC", VA = "0x6C0DEC")]
	public POVSwitchCam()
	{
	}
}
[Token(Token = "0x20001FD")]
public class ParalysedEffect : HandOrFootEffect
{
	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] fixedPositions;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float forwardAngle;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float origHeight;

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x6C11A8", Offset = "0x6C11A8", VA = "0x6C11A8", Slot = "4")]
	public override void setup(GameCharacter character)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x6C1388", Offset = "0x6C1388", VA = "0x6C1388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x6C16B4", Offset = "0x6C16B4", VA = "0x6C16B4")]
	public ParalysedEffect()
	{
	}
}
[Token(Token = "0x20001FE")]
public class ParticlesAfterIK : MonoBehaviour
{
	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IK ik;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem p;

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x6C1A20", Offset = "0x6C1A20", VA = "0x6C1A20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x6C1B1C", Offset = "0x6C1B1C", VA = "0x6C1B1C")]
	private void OnPostUpdate()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x6C1B74", Offset = "0x6C1B74", VA = "0x6C1B74")]
	public ParticlesAfterIK()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FF")]
public class PerkData : Exportable
{
	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string description;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float perc;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int used;

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x6C404C", Offset = "0x6C404C", VA = "0x6C404C")]
	public void localise(string label)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x6C411C", Offset = "0x6C411C", VA = "0x6C411C")]
	public string getDescription(bool withName, bool isPerk)
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x6C43C8", Offset = "0x6C43C8", VA = "0x6C43C8")]
	public PerkData()
	{
	}
}
[Token(Token = "0x2000200")]
public class PlantPosition : MonoBehaviour
{
	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] potPrefabs;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MinMax scale;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float positionVariance;

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x6C4704", Offset = "0x6C4704", VA = "0x6C4704")]
	private void Start()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x6C4888", Offset = "0x6C4888", VA = "0x6C4888")]
	private void Update()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x6C488C", Offset = "0x6C488C", VA = "0x6C488C")]
	public PlantPosition()
	{
	}
}
[Token(Token = "0x2000201")]
public class PlaySpecificMusic : MonoBehaviour
{
	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string trackName;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x6C4894", Offset = "0x6C4894", VA = "0x6C4894")]
	private void Start()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x6C4898", Offset = "0x6C4898", VA = "0x6C4898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x6C4900", Offset = "0x6C4900", VA = "0x6C4900")]
	public PlaySpecificMusic()
	{
	}
}
[Token(Token = "0x2000202")]
public class PlayerPositionOffset : MonoBehaviour
{
	[Token(Token = "0x6000912")]
	[Address(RVA = "0x6C4C80", Offset = "0x6C4C80", VA = "0x6C4C80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x6C4C84", Offset = "0x6C4C84", VA = "0x6C4C84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x6C4C88", Offset = "0x6C4C88", VA = "0x6C4C88")]
	public PlayerPositionOffset()
	{
	}
}
[Token(Token = "0x2000203")]
public class PortraitCameraController : MonoBehaviour
{
	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform following;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 posOffset;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 lookOffset;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int size;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cam;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string charName;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float takePicTime;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int picNum;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion offsetRot;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip photoSound;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioSource;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x6C4CD0", Offset = "0x6C4CD0", VA = "0x6C4CD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x6C4D80", Offset = "0x6C4D80", VA = "0x6C4D80")]
	public void setToFollow(CharacterData character, Transform t)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x6C4EB4", Offset = "0x6C4EB4", VA = "0x6C4EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x6C505C", Offset = "0x6C505C", VA = "0x6C505C")]
	private void takePic()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x6C5378", Offset = "0x6C5378", VA = "0x6C5378")]
	public void DumpRenderTexture(RenderTexture rt, string pngOutPath)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x6C54D8", Offset = "0x6C54D8", VA = "0x6C54D8")]
	public PortraitCameraController()
	{
	}
}
[Token(Token = "0x2000204")]
public class PoseDisplay : MonoBehaviour
{
	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PoseDisplay instance;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject headPos;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftHandStartPos;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rightHandStartPos;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpecialMoveInstructionController instruction;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SkinnedMeshRenderer skinMesh;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRIK ik;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float showTimer;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool rCorrect;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool lCorrect;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxDist;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxAngle;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color showColour;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool alwaysOn;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color onColour;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color offColour;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color failColour;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameCharacter character;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform ghostContainer;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject ghostRig;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCD10", Offset = "0x4BCD10")]
	public Transform rightHand;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform leftHand;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform[] r_bones;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform[] l_bones;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material ghostMaterial;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float forwardOffset;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x6C55A4", Offset = "0x6C55A4", VA = "0x6C55A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x6C55F4", Offset = "0x6C55F4", VA = "0x6C55F4")]
	public Transform findHand(string handName)
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x6C56C4", Offset = "0x6C56C4", VA = "0x6C56C4")]
	private Transform[] getBones(Transform hand)
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x6C5A78", Offset = "0x6C5A78", VA = "0x6C5A78")]
	private void showHandPoses(bool flipped)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x6C61AC", Offset = "0x6C61AC", VA = "0x6C61AC")]
	public bool showPose(GameCharacter character, RecordAction pose)
	{
		return default(bool);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x6C70DC", Offset = "0x6C70DC", VA = "0x6C70DC")]
	private void updatePosition(bool setup)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x6C7858", Offset = "0x6C7858", VA = "0x6C7858")]
	private void Update()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x6C7B1C", Offset = "0x6C7B1C", VA = "0x6C7B1C")]
	public PoseDisplay()
	{
	}
}
[Token(Token = "0x2000205")]
public class PositionDebugger : MonoBehaviour
{
	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color colour;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer sphere;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer line;

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x6C7D34", Offset = "0x6C7D34", VA = "0x6C7D34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x6C812C", Offset = "0x6C812C", VA = "0x6C812C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x6C823C", Offset = "0x6C823C", VA = "0x6C823C")]
	public PositionDebugger()
	{
	}
}
[Token(Token = "0x2000206")]
public class PotSwingerController : MonoBehaviour
{
	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody[] pots;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool active;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minInterval;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxInterval;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timer;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int onPot;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip releaseSound;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StandPositionIndicator standPos;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Breakable current;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ChamberController chamber;

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x6C8278", Offset = "0x6C8278", VA = "0x6C8278")]
	private void Start()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x6C854C", Offset = "0x6C854C", VA = "0x6C854C")]
	private void onHurt()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x6C85A0", Offset = "0x6C85A0", VA = "0x6C85A0")]
	private void startGame(StandPositionIndicator standPos)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x6C85D8", Offset = "0x6C85D8", VA = "0x6C85D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x6C8848", Offset = "0x6C8848", VA = "0x6C8848")]
	public PotSwingerController()
	{
	}
}
[Token(Token = "0x2000207")]
public class PracticeMoveController : StandButtonsController
{
	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PracticeMoveController instance;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform headingContainer;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI heading;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshProUGUI desc;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool setup;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string[] practiceModes;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int practiceMode;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int onPressurePoint;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameCharacter practiceCharacter;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public StandPositionIndicator nextCharButton;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public StandPositionIndicator practiceButton;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public StandPositionIndicator practiceButton_ai;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public StandPositionIndicator practiceButton_pressurePoints;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float tipTimer;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public OVRInput.Button specialMoveActions;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float sayTimer;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private VoiceData toSay;

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x6C8860", Offset = "0x6C8860", VA = "0x6C8860")]
	public static bool isActive(int mode)
	{
		return default(bool);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x6C8930", Offset = "0x6C8930", VA = "0x6C8930")]
	public static void promptVoice(VoiceData.Type type)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x6C8C8C", Offset = "0x6C8C8C", VA = "0x6C8C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x6C9430", Offset = "0x6C9430", VA = "0x6C9430")]
	public void nextPracticeMode()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x6C9130", Offset = "0x6C9130", VA = "0x6C9130")]
	public void refreshFreePracticeButtons()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x6C96D8", Offset = "0x6C96D8", VA = "0x6C96D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x6CA3FC", Offset = "0x6CA3FC", VA = "0x6CA3FC")]
	public PracticeMoveController()
	{
	}
}
[Token(Token = "0x2000208")]
public class PresenceUpdater : MonoBehaviour
{
	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PresenceUpdater instance;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x6CA410", Offset = "0x6CA410", VA = "0x6CA410")]
	private void Start()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x6CA460", Offset = "0x6CA460", VA = "0x6CA460")]
	public static void update(string state, CharacterData opponent)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x6CA464", Offset = "0x6CA464", VA = "0x6CA464")]
	public PresenceUpdater()
	{
	}
}
[Token(Token = "0x2000209")]
public class PressurePoint : MonoBehaviour
{
	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PressurePointData data;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastHit;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject display;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x6CA46C", Offset = "0x6CA46C", VA = "0x6CA46C")]
	public void setup(PressurePointData data)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x6CA550", Offset = "0x6CA550", VA = "0x6CA550")]
	public bool hit(Hittable.HandHitType handHit, bool showFailReason)
	{
		return default(bool);
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x6CA3C4", Offset = "0x6CA3C4", VA = "0x6CA3C4")]
	public bool allowTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x6CA68C", Offset = "0x6CA68C", VA = "0x6CA68C")]
	public PressurePoint()
	{
	}
}
[Serializable]
[Token(Token = "0x200020A")]
public class PressurePointData : Exportable
{
	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCD48", Offset = "0x4BCD48")]
	public string instruction;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string failedText;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCD80", Offset = "0x4BCD80")]
	public string boneName;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string altBoneName;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 position;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCDB8", Offset = "0x4BCDB8")]
	public float radius;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool maleOnly;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Hittable.HandHitType[] hitType;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float damageMod;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float slideMod;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CharacterEffect.Effect addEffect;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string effectName;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float effectTime;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool instaKillZombies;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] soundOverrides;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool hitInRound;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x6CA694", Offset = "0x6CA694", VA = "0x6CA694")]
	public void localise()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x6CA738", Offset = "0x6CA738", VA = "0x6CA738")]
	public string summary()
	{
		return null;
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x6CA868", Offset = "0x6CA868", VA = "0x6CA868")]
	public PressurePointData()
	{
	}
}
[Token(Token = "0x200020B")]
public class PressurePointDummy : MonoBehaviour
{
	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip hitSound;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip hitLiteSound;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minHitTime;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minHitPower;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hitTime;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ChamberController chamber;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform boneContainer;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform colliderContainer;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider[] allColliders;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PressurePointData[] pressurePoints;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PressurePoint[] pressurePointDisplays;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int onPressurePoint;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x6CA88C", Offset = "0x6CA88C", VA = "0x6CA88C")]
	private void Start()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x6CAFCC", Offset = "0x6CAFCC", VA = "0x6CAFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x6CB220", Offset = "0x6CB220", VA = "0x6CB220")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x6CB908", Offset = "0x6CB908", VA = "0x6CB908")]
	public PressurePointDummy()
	{
	}
}
[Token(Token = "0x200020C")]
public class ProjectileController : MonoBehaviour
{
	[Token(Token = "0x200020D")]
	public enum HitCheck
	{
		[Token(Token = "0x4000F21")]
		None,
		[Token(Token = "0x4000F22")]
		Angle,
		[Token(Token = "0x4000F23")]
		Ray
	}

	[Token(Token = "0x200020E")]
	public enum MovementType
	{
		[Token(Token = "0x4000F25")]
		Default,
		[Token(Token = "0x4000F26")]
		Straighten,
		[Token(Token = "0x4000F27")]
		Spin
	}

	[Token(Token = "0x200020F")]
	public enum HitType
	{
		[Token(Token = "0x4000F29")]
		None,
		[Token(Token = "0x4000F2A")]
		StickIn,
		[Token(Token = "0x4000F2B")]
		Explode,
		[Token(Token = "0x4000F2C")]
		Bounce
	}

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hitEffectPrefab;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedMult;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedMin;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool gravity;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float revertTimer;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Rigidbody rb;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 velocity;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float startTime;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool hasHit;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool fromGrab;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip hitSound;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip hitFloorSound;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource continualAudio;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected AudioSource audioSource;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Collider collider;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float deleteTimer;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool provokesVoice;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string givesAchievement;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HitCheck hitCheckType;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameCharacter firer;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float damage;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float damageMod;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float impactMod;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform inner;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MovementType movementType;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public HitType hitType;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private SpecialMoveData specialMoveData;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SpecialMoveController following;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool useRBVelocity;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool unblockable;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject hitPersonEffect;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool inMotion;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public LayerMask layerMask;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float minTime;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool doRayCast;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform stuckIn;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x6CB91C", Offset = "0x6CB91C", VA = "0x6CB91C")]
	public void setup(GameCharacter firer, Vector3 position, Quaternion rotation, Vector3 direction, bool fromGrab, float speed = -1f)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x6CBBF8", Offset = "0x6CBBF8", VA = "0x6CBBF8")]
	protected void explode(bool isPerson)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x6CBE3C", Offset = "0x6CBE3C", VA = "0x6CBE3C")]
	public void collideWith(Collider collider, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x6CC5B4", Offset = "0x6CC5B4", VA = "0x6CC5B4", Slot = "4")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x6CC6B8", Offset = "0x6CC6B8", VA = "0x6CC6B8", Slot = "5")]
	public virtual void OnHit(Hittable hittable, Collision collision)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x6CC798", Offset = "0x6CC798", VA = "0x6CC798", Slot = "6")]
	public virtual void OnHit(Hittable hittable, Collider collider, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x6CC79C", Offset = "0x6CC79C", VA = "0x6CC79C")]
	public void HitObject(Hittable hittable, Collider collider, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x6CCF0C", Offset = "0x6CCF0C", VA = "0x6CCF0C")]
	public void stick(Transform into, Vector3 normal, RigidBodies person, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x6CC4B0", Offset = "0x6CC4B0", VA = "0x6CC4B0")]
	public void bounce(Vector3 normal)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x6CD170", Offset = "0x6CD170", VA = "0x6CD170")]
	public void unstick()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x6CD2B4", Offset = "0x6CD2B4", VA = "0x6CD2B4", Slot = "7")]
	public virtual void flyingMovement()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x6CD7A4", Offset = "0x6CD7A4", VA = "0x6CD7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x6CDAFC", Offset = "0x6CDAFC", VA = "0x6CDAFC")]
	public ProjectileController()
	{
	}
}
[Token(Token = "0x2000210")]
public class ProjectileSpawner : MonoBehaviour
{
	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProjectileController projectilePrefab;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProjectileController projectile;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnIfOutsideRadius;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spawnRadius;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float interval;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timer;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x7CC258", Offset = "0x7CC258", VA = "0x7CC258")]
	private void Start()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x7CC264", Offset = "0x7CC264", VA = "0x7CC264")]
	private void Update()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x7CC720", Offset = "0x7CC720", VA = "0x7CC720")]
	public ProjectileSpawner()
	{
	}
}
[Token(Token = "0x2000211")]
public class PropGrab : MonoBehaviour
{
	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuppetMasterProp prop;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x7CC73C", Offset = "0x7CC73C", VA = "0x7CC73C")]
	public void grab(PropMuscle muscle)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x7CC768", Offset = "0x7CC768", VA = "0x7CC768")]
	public PropGrab()
	{
	}
}
[Token(Token = "0x2000212")]
public class PunchPadController : MonoBehaviour
{
	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PunchPadController instance;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leaderBoardAnchor;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HitSurface pad;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshCollider meshCollider;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hitPointContainer;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] hitPoints;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] hitPoints_l;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] hitPoints_r;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject current;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI time;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeLeft;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int best;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int score;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float totalTime;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float readyTimer;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool started;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform spectateCameraPoint;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool left;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string blankText;

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x7CC770", Offset = "0x7CC770", VA = "0x7CC770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x7CCB68", Offset = "0x7CCB68", VA = "0x7CCB68")]
	private void hitPad(Vector3 point, Hittable.HandHitType hitType, HitSurface surface)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x7CCB3C", Offset = "0x7CCB3C", VA = "0x7CCB3C")]
	private void reset()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x7CD048", Offset = "0x7CD048", VA = "0x7CD048")]
	private void hideAll()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x7CCE24", Offset = "0x7CCE24", VA = "0x7CCE24")]
	private void showStep()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x7CD0BC", Offset = "0x7CD0BC", VA = "0x7CD0BC")]
	private void finish()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x7CD348", Offset = "0x7CD348", VA = "0x7CD348")]
	public static Transform spectateCameraPosition()
	{
		return null;
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x7CD3F4", Offset = "0x7CD3F4", VA = "0x7CD3F4")]
	public static bool isPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x7CD4BC", Offset = "0x7CD4BC", VA = "0x7CD4BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x7CD9D8", Offset = "0x7CD9D8", VA = "0x7CD9D8")]
	public PunchPadController()
	{
	}
}
[Token(Token = "0x2000213")]
public class PuppetTrackerHandOffset : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BCDF0", Offset = "0x4BCDF0")]
	public float massPerc;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameCharacter gameCharacter;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLeft;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform offsetDisplay;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Hittable hand;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform target;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 offsetSpeed;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 offset;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float offsetPerc;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxOffsetAchieved;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Quaternion rotationOffset;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool doRotation;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LineRenderer line;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float recoverPause;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float recoverTime;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float pause;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float perc;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float startTime;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float maxOffset;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minMass;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float maxMass;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 lastPos;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool showLine;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool isOffset;

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x7CDA34", Offset = "0x7CDA34", VA = "0x7CDA34")]
	private void Start()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x7CDA9C", Offset = "0x7CDA9C", VA = "0x7CDA9C")]
	public static Quaternion ClampRotation(Quaternion q, Vector3 bounds)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x7CDB7C", Offset = "0x7CDB7C", VA = "0x7CDB7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x7CE798", Offset = "0x7CE798", VA = "0x7CE798")]
	public PuppetTrackerHandOffset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000214")]
public class QuickFightSettings
{
	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int playerCharacter;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int enemyCharacter;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int location;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x7CE7C4", Offset = "0x7CE7C4", VA = "0x7CE7C4")]
	public void Begin()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x7CE870", Offset = "0x7CE870", VA = "0x7CE870")]
	public void quickFightNext()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x7CEBA4", Offset = "0x7CEBA4", VA = "0x7CEBA4")]
	public QuickFightSettings()
	{
	}
}
[Token(Token = "0x2000215")]
public class RainDrops : MonoBehaviour
{
	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer renderer;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string mainTexture;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string detailTexture;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 mainOffset;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 detailOffset;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timer1;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer2;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float interval;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float interval2;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x7CEBAC", Offset = "0x7CEBAC", VA = "0x7CEBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x7CEC00", Offset = "0x7CEC00", VA = "0x7CEC00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x7CECF8", Offset = "0x7CECF8", VA = "0x7CECF8")]
	public RainDrops()
	{
	}
}
[Token(Token = "0x2000216")]
public class RandomHide : MonoBehaviour
{
	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BCE08", Offset = "0x4BCE08")]
	public float showLikelihood;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string onlyInMode;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool showByDefault;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x7CEFEC", Offset = "0x7CEFEC", VA = "0x7CEFEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x7CF0D0", Offset = "0x7CF0D0", VA = "0x7CF0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x7CF0D4", Offset = "0x7CF0D4", VA = "0x7CF0D4")]
	public RandomHide()
	{
	}
}
[Token(Token = "0x2000217")]
public class RandomIndicator : MonoBehaviour
{
	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string text;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txt;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer line;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 worldPos;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x7CF0E8", Offset = "0x7CF0E8", VA = "0x7CF0E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x7CF114", Offset = "0x7CF114", VA = "0x7CF114")]
	private void Update()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x7CF508", Offset = "0x7CF508", VA = "0x7CF508")]
	public RandomIndicator()
	{
	}
}
[Token(Token = "0x2000218")]
public class RandomScale : MonoBehaviour
{
	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MinMax scale;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MinMax heightVariance;

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x7CF510", Offset = "0x7CF510", VA = "0x7CF510")]
	private void Start()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x7CF588", Offset = "0x7CF588", VA = "0x7CF588")]
	private void Update()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x7CF58C", Offset = "0x7CF58C", VA = "0x7CF58C")]
	public RandomScale()
	{
	}
}
[Token(Token = "0x2000219")]
public class RandomSound : MonoBehaviour
{
	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] sounds;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x7CF594", Offset = "0x7CF594", VA = "0x7CF594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x7CF6AC", Offset = "0x7CF6AC", VA = "0x7CF6AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x7CF6B0", Offset = "0x7CF6B0", VA = "0x7CF6B0")]
	public RandomSound()
	{
	}
}
[Serializable]
[Token(Token = "0x200021A")]
public class RecordAction
{
	[Token(Token = "0x200021B")]
	public enum TrackerType
	{
		[Token(Token = "0x4000F86")]
		Head,
		[Token(Token = "0x4000F87")]
		L_Hand,
		[Token(Token = "0x4000F88")]
		R_Hand
	}

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecordStep[] head;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RecordStep[] l_hand;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RecordStep[] r_hand;

	[NonSerialized]
	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float l_squeezeAmount;

	[NonSerialized]
	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float r_squeezeAmount;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float totalTime;

	[NonSerialized]
	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 centraliseOffset;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isSetup;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool singleFrame;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float attackRange;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float attackHeight;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float attackTime;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string attackDebug;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x7D1180", Offset = "0x7D1180", VA = "0x7D1180")]
	public RecordAction(string name, bool singleFrame = false)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x7D11F4", Offset = "0x7D11F4", VA = "0x7D11F4")]
	public bool isEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x7D1214", Offset = "0x7D1214", VA = "0x7D1214")]
	public void play(TrackerType type, float e, float speedMultiply, bool loop, out Vector3 localPosition, out Quaternion localRotation, float heightPerc = 1f)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x7D1654", Offset = "0x7D1654", VA = "0x7D1654")]
	public void setup(bool clean, string defaultName)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x7D1F48", Offset = "0x7D1F48", VA = "0x7D1F48")]
	public float getRange(float speed, float timeElapsed = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x7D1F68", Offset = "0x7D1F68", VA = "0x7D1F68")]
	public bool isBetween(Vector3 between, Vector3 start, Vector3 end, float cullThreshold = 0.02f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x7D1FE4", Offset = "0x7D1FE4", VA = "0x7D1FE4")]
	public bool isBetweenRotation(Quaternion between, Quaternion start, Quaternion end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x7D19A0", Offset = "0x7D19A0", VA = "0x7D19A0")]
	private RecordStep[] cleanUp(RecordStep[] data)
	{
		return null;
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x7D1E20", Offset = "0x7D1E20", VA = "0x7D1E20")]
	public void setupSteps(RecordStep[] data)
	{
	}
}
[Serializable]
[Token(Token = "0x200021C")]
public class RecordStep
{
	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float time;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VectorSavable pos;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VectorSavable rot;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float squeeze;

	[NonSerialized]
	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float endTime;

	[NonSerialized]
	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float duration;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool toRemove;

	[Token(Token = "0x17000057")]
	public Vector3 position
	{
		[Token(Token = "0x600097B")]
		[Address(RVA = "0x7D161C", Offset = "0x7D161C", VA = "0x7D161C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600097C")]
		[Address(RVA = "0x7D20EC", Offset = "0x7D20EC", VA = "0x7D20EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public Vector3 rotation
	{
		[Token(Token = "0x600097D")]
		[Address(RVA = "0x7D1638", Offset = "0x7D1638", VA = "0x7D1638")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600097E")]
		[Address(RVA = "0x7D2194", Offset = "0x7D2194", VA = "0x7D2194")]
		set
		{
		}
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x7D223C", Offset = "0x7D223C", VA = "0x7D223C")]
	public RecordStep()
	{
	}
}
[Token(Token = "0x200021D")]
public class RecordTracker : MonoBehaviour
{
	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<RecordStep> recordData;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float nextInterval;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer line;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x7D2244", Offset = "0x7D2244", VA = "0x7D2244")]
	public void record(float elapsed, float interval, Transform following)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x7D254C", Offset = "0x7D254C", VA = "0x7D254C")]
	public void setPosition(Transform following)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x7D25E4", Offset = "0x7D25E4", VA = "0x7D25E4")]
	public void clear()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x7D2638", Offset = "0x7D2638", VA = "0x7D2638")]
	public RecordStep[] getSteps()
	{
		return null;
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x7D268C", Offset = "0x7D268C", VA = "0x7D268C")]
	public RecordTracker()
	{
	}
}
[Token(Token = "0x200021E")]
public class RecordedActions : MonoBehaviour
{
	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecordAction defaultAction;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<FightingStyle> fightingStyles;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SpecialMove> specialMoves;

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x7D2694", Offset = "0x7D2694", VA = "0x7D2694")]
	private void Start()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x7D2698", Offset = "0x7D2698", VA = "0x7D2698")]
	public void setup()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x7D2994", Offset = "0x7D2994", VA = "0x7D2994")]
	public SpecialMove getSpecialMoveByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x7D2B44", Offset = "0x7D2B44", VA = "0x7D2B44")]
	public RecordedActions()
	{
	}
}
[Token(Token = "0x200021F")]
public class ReflectionProbeEnabler : MonoBehaviour
{
	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReflectionProbe realtime;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectionProbe baked;

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x7D2B4C", Offset = "0x7D2B4C", VA = "0x7D2B4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x7D2BCC", Offset = "0x7D2BCC", VA = "0x7D2BCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x7D2BD0", Offset = "0x7D2BD0", VA = "0x7D2BD0")]
	public ReflectionProbeEnabler()
	{
	}
}
[Token(Token = "0x2000220")]
public class RemoveAfter : MonoBehaviour
{
	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x7D390C", Offset = "0x7D390C", VA = "0x7D390C")]
	private void Start()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x7D3994", Offset = "0x7D3994", VA = "0x7D3994")]
	private void Update()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x7D3998", Offset = "0x7D3998", VA = "0x7D3998")]
	public RemoveAfter()
	{
	}
}
[Token(Token = "0x2000221")]
public class RigidBodies : MonoBehaviour
{
	[Token(Token = "0x2000222")]
	public enum LastHit
	{
		[Token(Token = "0x4000FF1")]
		None,
		[Token(Token = "0x4000FF2")]
		FlyingKick,
		[Token(Token = "0x4000FF3")]
		FlyingPunch,
		[Token(Token = "0x4000FF4")]
		SpecialMove,
		[Token(Token = "0x4000FF5")]
		Projectile,
		[Token(Token = "0x4000FF6")]
		Crockery
	}

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float aiSpeed;

	[NonSerialized]
	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameCharacter character;

	[NonSerialized]
	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BodyPartData[] bodyParts;

	[NonSerialized]
	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform head;

	[NonSerialized]
	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform chest;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Hittable generalHitPoint;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Hittable headHittable;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Hittable rightHand;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Hittable leftHand;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Hittable rightFoot;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Hittable leftFoot;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CapsuleCollider[] armColliders;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float[] origCentres;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float[] origHeight;

	[NonSerialized]
	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HandPositions hands;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float leftWeaponDamageTime;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float rightWeaponDamageTime;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float leftWeaponHitTime;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float rightWeaponHitTime;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float touchTime;

	[NonSerialized]
	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VRIK ik;

	[NonSerialized]
	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public PuppetMaster pm;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FaceController face;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SkinnedMeshRenderer characterHat;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material ironFistSkin;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MeshRenderer vrHat;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float maxHealth;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float standUpPerc;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float standUpPercMax;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float specialPerc;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BCE20", Offset = "0x4BCE20")]
	public float jumpPerc;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float hitRecovery;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float heightStandOffset;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SwooshIfFast[] swooshes;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public FootstepController[] footSoundSources;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool hitsDisabled;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public LastHit lastHit;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3 slide;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Vector3 specialSlide;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector3 r_forward;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Vector3 l_forward;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private SkinnedMeshRenderer[] meshes;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float downTimer;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioSource audioSource;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool hasHitGround;

	[NonSerialized]
	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Material defaultSkinMaterial;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public SkinnedMeshRenderer wholebodyMeshRenderer;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool hideWholeBody;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public SkinMesh[] skinMeshes;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public List<ProjectileController> stuckProjectiles;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public HandMeterController rightHandMeter;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public HandMeterController leftHandMeter;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public PressurePoint[] pressurePoints;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public int[] armCollisions;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float[] armTouchTime;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float[] armHitTime;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public int[] legCollisions;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float[] legTouchTime;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float[] legHitTime;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool[] grabbed;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool[] grabbing;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public FallAndGetUp fall;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public float showPressurePoints;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float stanceAngle;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AltCostume[] altCostumes;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool forPlinth;

	[NonSerialized]
	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public string wasPressurePoint;

	[NonSerialized]
	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public AudioClip overrideSound;

	[NonSerialized]
	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool skipHitEffect;

	[NonSerialized]
	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	public bool wasSpecialHaptic;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float firstStrikeTime;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public int recoveries;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public float landSpeed;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float landOffset;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Muscle spine;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Muscle hips;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float createTime;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject spectateBodyParts;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public SkinMesh[] spectateSkinMeshes;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BCE38", Offset = "0x4BCE38")]
	public float headScale;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private List<OculusBuzz> haptics;

	[NonSerialized]
	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public float cantHitUntil;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public bool isZombie;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26D")]
	private bool attachPelvis;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26E")]
	private bool zombieAlt;

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x7D3A1C", Offset = "0x7D3A1C", VA = "0x7D3A1C")]
	private void setup(HandPositions hands)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x7D5B94", Offset = "0x7D5B94", VA = "0x7D5B94")]
	public void zombify()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x7D5DE0", Offset = "0x7D5DE0", VA = "0x7D5DE0")]
	public bool holdingSomething()
	{
		return default(bool);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x7D5EAC", Offset = "0x7D5EAC", VA = "0x7D5EAC")]
	public bool hasAlt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x7CE6E8", Offset = "0x7CE6E8", VA = "0x7CE6E8")]
	public bool notTouching(bool left)
	{
		return default(bool);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x7D5ED0", Offset = "0x7D5ED0", VA = "0x7D5ED0")]
	public bool notTouchingLeg(bool left)
	{
		return default(bool);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x7D5F60", Offset = "0x7D5F60", VA = "0x7D5F60")]
	public int altCostume()
	{
		return default(int);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x7D6270", Offset = "0x7D6270", VA = "0x7D6270")]
	public void setLastHit(LastHit newlastHit, Vector3 pos)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x7D6284", Offset = "0x7D6284", VA = "0x7D6284")]
	public void switchCostume()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x7D62F0", Offset = "0x7D62F0", VA = "0x7D62F0")]
	public float say(AudioClip clip, bool halfSpacial, string sayText)
	{
		return default(float);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x7D6314", Offset = "0x7D6314", VA = "0x7D6314")]
	public float say(VoiceData voice)
	{
		return default(float);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x7D6508", Offset = "0x7D6508", VA = "0x7D6508")]
	public float staminaPerc(bool inverse = false)
	{
		return default(float);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x7D6560", Offset = "0x7D6560", VA = "0x7D6560")]
	public void hitGroundSound()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x7D663C", Offset = "0x7D663C", VA = "0x7D663C")]
	private void show()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x7D59C0", Offset = "0x7D59C0", VA = "0x7D59C0")]
	private void setupFoot(Muscle foot, bool right)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x7D54C4", Offset = "0x7D54C4", VA = "0x7D54C4")]
	private void setupHand(Muscle hand, bool right)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x7D67D4", Offset = "0x7D67D4", VA = "0x7D67D4")]
	public void land(float ySpeed)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x7D66D0", Offset = "0x7D66D0", VA = "0x7D66D0")]
	public void downSettings(bool up)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x7D69C4", Offset = "0x7D69C4", VA = "0x7D69C4")]
	public Transform getMuscleTransformByName(string muscleName)
	{
		return null;
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x7D6A5C", Offset = "0x7D6A5C", VA = "0x7D6A5C")]
	public Muscle getMuscleByName(string muscleName)
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x7D6AF0", Offset = "0x7D6AF0", VA = "0x7D6AF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x7D6BB8", Offset = "0x7D6BB8", VA = "0x7D6BB8")]
	public void setupLayers(bool povView)
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x7D712C", Offset = "0x7D712C", VA = "0x7D712C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x7D7344", Offset = "0x7D7344", VA = "0x7D7344")]
	private void updateStance()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x7D7980", Offset = "0x7D7980", VA = "0x7D7980")]
	public void setIK(HandPositions hands, Transform[] trackers, bool forPlinth = false)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x7D7FA0", Offset = "0x7D7FA0", VA = "0x7D7FA0")]
	private void footstep(bool left)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x7D8010", Offset = "0x7D8010", VA = "0x7D8010")]
	public void buzz(float perc, BodyPartData.Source source, float freqMod = 1f)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x7D8168", Offset = "0x7D8168", VA = "0x7D8168")]
	private void refreshHaptics(bool reduce, bool left)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x7D8424", Offset = "0x7D8424", VA = "0x7D8424")]
	public void setSkin(Material skinMaterial)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x7D84EC", Offset = "0x7D84EC", VA = "0x7D84EC")]
	public bool invincible()
	{
		return default(bool);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x7D85F8", Offset = "0x7D85F8", VA = "0x7D85F8")]
	public void Hit(Vector3 hitDir, float hitPerc, float damagePerc, GameCharacter hittingCharacter, string customDamage)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x7D86AC", Offset = "0x7D86AC", VA = "0x7D86AC")]
	public void Hit(Vector3 hitDir, Hittable beingHit, GameCharacter hittingCharacter, float hitPerc, float damagePerc, Vector3 hitLocation, Hittable.HandHitType handHit, bool skipPressurePoints, string customDamage)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x7D6958", Offset = "0x7D6958", VA = "0x7D6958")]
	public void kill()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x7DAE2C", Offset = "0x7DAE2C", VA = "0x7DAE2C")]
	public bool dazed()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x7CC61C", Offset = "0x7CC61C", VA = "0x7CC61C")]
	public bool isDown(bool allTheWay)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x7DAE9C", Offset = "0x7DAE9C", VA = "0x7DAE9C")]
	public Vector3 diffToTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x7DAF8C", Offset = "0x7DAF8C", VA = "0x7DAF8C")]
	private void updateHeadScale()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x7DB078", Offset = "0x7DB078", VA = "0x7DB078")]
	private void scaleHittable(Hittable h, float scale)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x7DB16C", Offset = "0x7DB16C", VA = "0x7DB16C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x7DC65C", Offset = "0x7DC65C", VA = "0x7DC65C")]
	public RigidBodies()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x7DC720", Offset = "0x7DC720", VA = "0x7DC720")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4A64", Offset = "0x4C4A64")]
	private void <setIK>b__112_0()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x7DC728", Offset = "0x7DC728", VA = "0x7DC728")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4A74", Offset = "0x4C4A74")]
	private void <setIK>b__112_1()
	{
	}
}
[Token(Token = "0x2000223")]
public class RustleController : MonoBehaviour
{
	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float lastSound;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minTime;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x82EC14", Offset = "0x82EC14", VA = "0x82EC14")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x82EC68", Offset = "0x82EC68", VA = "0x82EC68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x82ED00", Offset = "0x82ED00", VA = "0x82ED00")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x82ED04", Offset = "0x82ED04", VA = "0x82ED04")]
	public RustleController()
	{
	}
}
[Token(Token = "0x2000224")]
public class SafetyCircleController : MonoBehaviour
{
	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject raise;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject moveBack;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer arrows;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextureScroller arrowMove;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color offColour;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color onColour;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float raiseAmount;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float headDist;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float perc;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float angleDiff;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float anglePerc;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool showDirection;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x82EFC0", Offset = "0x82EFC0", VA = "0x82EFC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x82EFC4", Offset = "0x82EFC4", VA = "0x82EFC4")]
	private void updateArrows()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x82F294", Offset = "0x82F294", VA = "0x82F294")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x82F71C", Offset = "0x82F71C", VA = "0x82F71C")]
	public SafetyCircleController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000225")]
public class SaveGame
{
	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int difficultyLevel;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string specialMode;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int lowestDifficulty;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool hasCheated;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int character;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int costume;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] characterOrder;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] characterHomes;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] characterStars;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] secretStars;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int[] characterFights;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] usedCharacters;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameStats stats;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SavedCustomGameValue[] customOptions;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x82F924", Offset = "0x82F924", VA = "0x82F924")]
	public void clear()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x82F9B8", Offset = "0x82F9B8", VA = "0x82F9B8")]
	public bool exists()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x82F9E8", Offset = "0x82F9E8", VA = "0x82F9E8")]
	public void setCustomOptions()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x82FBBC", Offset = "0x82FBBC", VA = "0x82FBBC")]
	public void setFromCustomOptions()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x82FD40", Offset = "0x82FD40", VA = "0x82FD40")]
	public string summary()
	{
		return null;
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x82FFF8", Offset = "0x82FFF8", VA = "0x82FFF8")]
	public SaveGame()
	{
	}
}
[Serializable]
[Token(Token = "0x2000226")]
public class SavedCompletedGame
{
	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int characterId;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string specialMode;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int difficultyLevel;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool singleCharacter;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DateTime lastSaved;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x830064", Offset = "0x830064", VA = "0x830064")]
	public void SetToCurrent()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x8301EC", Offset = "0x8301EC", VA = "0x8301EC")]
	public bool matchesCurrent()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x8302F0", Offset = "0x8302F0", VA = "0x8302F0")]
	public SavedCompletedGame()
	{
	}
}
[Serializable]
[Token(Token = "0x2000227")]
public class SavedCustomGameValue
{
	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string option;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x82FBB4", Offset = "0x82FBB4", VA = "0x82FBB4")]
	public SavedCustomGameValue()
	{
	}
}
[Serializable]
[Token(Token = "0x2000228")]
public class SavedFightingStyles
{
	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FightingStyle[] fightingStyles;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpecialMove[] specialMoves;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x8302F8", Offset = "0x8302F8", VA = "0x8302F8")]
	public SavedFightingStyles()
	{
	}
}
[Serializable]
[Token(Token = "0x2000229")]
public class SavedProgress
{
	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SavedCompletedGame[] completedGames;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] characterFights;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] unlockedLocations;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] specialInstructionSeen;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] unlockedModes;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] customUnlocks;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameStats stats;

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x830300", Offset = "0x830300", VA = "0x830300")]
	public void CompleteGame()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x830540", Offset = "0x830540", VA = "0x830540")]
	public bool hasCustomUnlock(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x8305AC", Offset = "0x8305AC", VA = "0x8305AC")]
	public void customUnlock(string unlockName)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x830820", Offset = "0x830820", VA = "0x830820")]
	public void updateUnlocked()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x830A4C", Offset = "0x830A4C", VA = "0x830A4C")]
	public SavedProgress()
	{
	}
}
[Serializable]
[Token(Token = "0x200022A")]
public class SavedSettings
{
	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float calibrateScale;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float calibrateArms;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float floorHeight;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float safetyCircleSize;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VectorSavable realignLeft;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VectorSavable realignLeft_rotation;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VectorSavable realignRight;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VectorSavable realignRight_rotation;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float headY;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float calibrateRotation;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OptionCategory[] options;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OptionCategory customGameOptions;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] seenControllerTips;

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x830A54", Offset = "0x830A54", VA = "0x830A54")]
	public void saveControllerTips()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x830F38", Offset = "0x830F38", VA = "0x830F38")]
	public void loadControllerTips()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x831020", Offset = "0x831020", VA = "0x831020")]
	public SavedSettings()
	{
	}
}
[Token(Token = "0x200022B")]
public class Saving : MonoBehaviour
{
	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Saving instance;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SavedFightingStyles styles;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SavedSettings gameSettings;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SaveGame[] saveSlots;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int selectedSlot;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SavedProgress savedProgress;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MoveRecorder recorder;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string folder;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string backupName;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool saveNow;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool commit;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool rollback;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[] fileNames;

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x831044", Offset = "0x831044", VA = "0x831044")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x8301A0", Offset = "0x8301A0", VA = "0x8301A0")]
	public SaveGame currentGame()
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x831968", Offset = "0x831968", VA = "0x831968")]
	public void clearData()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x831120", Offset = "0x831120", VA = "0x831120")]
	public void Backup()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x831A54", Offset = "0x831A54", VA = "0x831A54")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x8326CC", Offset = "0x8326CC", VA = "0x8326CC")]
	private bool hasCurrent()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x83274C", Offset = "0x83274C", VA = "0x83274C")]
	public void incrementStat(string name, bool onlyInFight)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x8328A0", Offset = "0x8328A0", VA = "0x8328A0")]
	public void maxStat(string name, float value, bool onlyInFight, bool isInt)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x832A48", Offset = "0x832A48", VA = "0x832A48")]
	public void minStat(string name, float value, bool onlyInFight, bool isInt)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x832BCC", Offset = "0x832BCC", VA = "0x832BCC")]
	public static SavedProgress loadProgress()
	{
		return null;
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x832FC0", Offset = "0x832FC0", VA = "0x832FC0")]
	public static SavedFightingStyles loadSettings()
	{
		return null;
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x8337CC", Offset = "0x8337CC", VA = "0x8337CC")]
	public static bool gameExists()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x8310B8", Offset = "0x8310B8", VA = "0x8310B8")]
	public static bool blockSaving()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x833834", Offset = "0x833834", VA = "0x833834")]
	public static void restoreBackup()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x8315FC", Offset = "0x8315FC", VA = "0x8315FC")]
	public static void getGame()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x833838", Offset = "0x833838", VA = "0x833838")]
	public void clearEmptySlots()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x833970", Offset = "0x833970", VA = "0x833970")]
	public static void loadGame(int slot)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x8306DC", Offset = "0x8306DC", VA = "0x8306DC")]
	public static void saveProgress()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x831BFC", Offset = "0x831BFC", VA = "0x831BFC")]
	public static void saveGame()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x830B68", Offset = "0x830B68", VA = "0x830B68")]
	public static void saveSettings()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x83235C", Offset = "0x83235C", VA = "0x83235C")]
	public static void saveFightingStyles()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x833FC0", Offset = "0x833FC0", VA = "0x833FC0")]
	public static SavedFightingStyles loadFightingStyles()
	{
		return null;
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x834018", Offset = "0x834018", VA = "0x834018")]
	public Saving()
	{
	}
}
[Token(Token = "0x200022C")]
public class ScaleColliderWithSqueeze : MonoBehaviour
{
	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CapsuleCollider collider;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 maxCentre;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxHeight;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 minCentre;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minHeight;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float squeeze;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mod;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Hittable hittable;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x834020", Offset = "0x834020", VA = "0x834020")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x8340C8", Offset = "0x8340C8", VA = "0x8340C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x834178", Offset = "0x834178", VA = "0x834178")]
	public ScaleColliderWithSqueeze()
	{
	}
}
[Token(Token = "0x200022D")]
public class ScatterObjects : MonoBehaviour
{
	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float radius;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float clearRadius;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int amount;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool reset;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool varyHeight;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minWidth;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxWidth;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float lean;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fallOff;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool rayCast;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x83418C", Offset = "0x83418C", VA = "0x83418C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x8341CC", Offset = "0x8341CC", VA = "0x8341CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x83492C", Offset = "0x83492C", VA = "0x83492C")]
	public ScatterObjects()
	{
	}
}
[Token(Token = "0x200022E")]
public class SceneController : MonoBehaviour
{
	[Token(Token = "0x200022F")]
	public enum QuickAction
	{
		[Token(Token = "0x4001066")]
		None,
		[Token(Token = "0x4001067")]
		Portrait,
		[Token(Token = "0x4001068")]
		SkipLevels
	}

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int generalChamberScene;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int generalChamber;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int portraitScene;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int finalStoryScene;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int firstLevelScene;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int currentLevel;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameController game;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int sceneID;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool showMenuOnLoad;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool addPlayerOnLoad;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool fadeInOnLoad;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool loading;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fadeTime;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public QuickAction quickAction;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] randomLevelOrder;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int onRandom;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string sceneName;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string fbtContinue;

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x834948", Offset = "0x834948", VA = "0x834948")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x834D3C", Offset = "0x834D3C", VA = "0x834D3C")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x834EFC", Offset = "0x834EFC", VA = "0x834EFC")]
	private void addMenuFighters()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x834F54", Offset = "0x834F54", VA = "0x834F54")]
	private void logFPS()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x8350AC", Offset = "0x8350AC", VA = "0x8350AC")]
	private void addPlayer()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x83512C", Offset = "0x83512C", VA = "0x83512C")]
	private void getRandomLevelOrder()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x8353D8", Offset = "0x8353D8", VA = "0x8353D8")]
	public void randomLevel()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x835568", Offset = "0x835568", VA = "0x835568")]
	public bool isGeneralChamber()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x83557C", Offset = "0x83557C", VA = "0x83557C")]
	public void loadLevel(LocationData location)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x83546C", Offset = "0x83546C", VA = "0x83546C")]
	public void loadLevel(int level)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x8356A4", Offset = "0x8356A4", VA = "0x8356A4")]
	private void loadScene(string logName, int sceneID, bool showMenuOnLoad = false, bool addPlayerOnLoad = true)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x8358BC", Offset = "0x8358BC", VA = "0x8358BC")]
	private void loadSceneFade()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x835974", Offset = "0x835974", VA = "0x835974")]
	public void endOfLevel()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x835C5C", Offset = "0x835C5C", VA = "0x835C5C")]
	public void linYongLevel()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x835CBC", Offset = "0x835CBC", VA = "0x835CBC")]
	public void chooseDifficulty()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x835D1C", Offset = "0x835D1C", VA = "0x835D1C")]
	public void practiceMove()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x835D7C", Offset = "0x835D7C", VA = "0x835D7C")]
	public void finalStory()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x835E04", Offset = "0x835E04", VA = "0x835E04")]
	public void portraits()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x835BEC", Offset = "0x835BEC", VA = "0x835BEC")]
	public void nextFight()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x835B18", Offset = "0x835B18", VA = "0x835B18")]
	public void pickLevel()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x835E08", Offset = "0x835E08", VA = "0x835E08")]
	public void pickCharacter()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x835F08", Offset = "0x835F08", VA = "0x835F08")]
	public void credits()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x835F68", Offset = "0x835F68", VA = "0x835F68")]
	public bool continueFBT()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x83624C", Offset = "0x83624C", VA = "0x83624C")]
	public void advancedCalibrate()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x8362AC", Offset = "0x8362AC", VA = "0x8362AC")]
	public void fbtPractice()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x83630C", Offset = "0x83630C", VA = "0x83630C")]
	public void characterEditor()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x835A74", Offset = "0x835A74", VA = "0x835A74")]
	public void mainMenu()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x83636C", Offset = "0x83636C", VA = "0x83636C")]
	public bool levelExists(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x8363EC", Offset = "0x8363EC", VA = "0x8363EC")]
	private void loadSceneNext()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x836454", Offset = "0x836454", VA = "0x836454")]
	public void skipLevels(bool back)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x8365BC", Offset = "0x8365BC", VA = "0x8365BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x8365FC", Offset = "0x8365FC", VA = "0x8365FC")]
	public SceneController()
	{
	}
}
[Token(Token = "0x2000230")]
public class SceneryBreakable : HitSurface
{
	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float breakForce;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject intactPieceContainer;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject smashedPieceContainer;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip breakSound;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem[] particles;

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x8369B0", Offset = "0x8369B0", VA = "0x8369B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x836A14", Offset = "0x836A14", VA = "0x836A14", Slot = "4")]
	public override void OnHit(Hittable hitBy, Hittable.HandHitType hitType, float force, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x836F68", Offset = "0x836F68", VA = "0x836F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x836F6C", Offset = "0x836F6C", VA = "0x836F6C")]
	public SceneryBreakable()
	{
	}
}
[Token(Token = "0x2000231")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000059")]
	public static bool Initialized
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x8E7718", Offset = "0x8E7718", VA = "0x8E7718")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x8E7720", Offset = "0x8E7720", VA = "0x8E7720")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000232")]
public class SelfieCamera : MonoBehaviour
{
	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SelfieCamera instance;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 lookOffset;

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x8378C0", Offset = "0x8378C0", VA = "0x8378C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x837910", Offset = "0x837910", VA = "0x837910")]
	public static void LookAt(Vector3 position)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x8379FC", Offset = "0x8379FC", VA = "0x8379FC")]
	public SelfieCamera()
	{
	}
}
[Token(Token = "0x2000233")]
public class SetFFR : MonoBehaviour
{
	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x837A84", Offset = "0x837A84", VA = "0x837A84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x837A88", Offset = "0x837A88", VA = "0x837A88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x837B90", Offset = "0x837B90", VA = "0x837B90")]
	public SetFFR()
	{
	}
}
[Token(Token = "0x2000234")]
public class Settings : MonoBehaviour
{
	[Token(Token = "0x2000235")]
	public enum TestButtonFunction
	{
		[Token(Token = "0x40010B9")]
		None,
		[Token(Token = "0x40010BA")]
		OutOfBody,
		[Token(Token = "0x40010BB")]
		AddEffect,
		[Token(Token = "0x40010BC")]
		Screenshot,
		[Token(Token = "0x40010BD")]
		Fall,
		[Token(Token = "0x40010BE")]
		ToggleIndicators,
		[Token(Token = "0x40010BF")]
		Teleport,
		[Token(Token = "0x40010C0")]
		DoubleKnockout
	}

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Settings instance;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCE50", Offset = "0x4BCE50")]
	public DifficultyLevel[] difficultyLevels;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DifficultyLevel generalDifficultyLevel;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MinMax aiStanceOffsetAngle;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MinMax aiStanceOffsetDistance;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MinMax aiStanceOffsetDistance_vsAI;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MinMax aiStanceSwitchFrequency;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MinMax aiSizeupTime;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MinMax aiSpeedVariance;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MinMax aiCounterMiddleRange;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MinMax aiCounterOuterRange;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float baseKickFreqency;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCE88", Offset = "0x4BCE88")]
	public bool mainMenuFighters;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float playerHandOffsetRecoveryTime;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float playerMuscleWeight;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float pinWeight;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxMagnitude;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float slideMult;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float recoverySpeed;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float slideClamp;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float minHitPerc;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool massMultiplyEnabled;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool mirrorModeEnabled;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float controllerDeadZone;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float controllerSensitivity;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool offsetRotation;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool swooshesEnabled;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	public bool fingerTrackingEnabled;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minFriendlyDistance;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float minDistance;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float knockdownMultiply;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MinMax restartDistance;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MinMax snapTurnAmount;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MinMax scaleBounds;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float snapTurnSpeed;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float smoothTurnSpeed;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float uberHitTimerMax;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCEC0", Offset = "0x4BCEC0")]
	public Color colour_qi;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Color colour_slowMo;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Color colour_qi_empty;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Color colour_sickness;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Color[] beltColours;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioClip[] breaths;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float femaleBreathPitch;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float maxBreathVolume;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float specialChargeTime;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float specialHitCharge;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float handHeadOffsetAmount;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float comboTimer;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public int practiceFighterID;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool moveVoices;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	public bool stanceAngles;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
	public bool allowSpecialModes;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x147")]
	public bool allowSaveSlots;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int maxSaveSlots;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float maxMassMultiply;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float maxMoveSpeed;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float maxRotateSpeed;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int masterStarRequirement;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public Vector3 getUpOffsetProne;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Vector3 getUpOffsetSupine;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float scenerySmashForce;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCEF8", Offset = "0x4BCEF8")]
	public bool positionLines;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool infiniteLives;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	public bool testCounters;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	public bool alwaysShowControllers;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public bool timeSlowOnMenu;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TestButtonFunction testButtonFunction;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public CharacterEffect.Effect testParticularEffect;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCF30", Offset = "0x4BCF30")]
	public PressurePoint pressurePointPrefab;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject dazedEffect;

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x837BA0", Offset = "0x837BA0", VA = "0x837BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x837E80", Offset = "0x837E80", VA = "0x837E80")]
	public void setToDefault()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x837EEC", Offset = "0x837EEC", VA = "0x837EEC")]
	public Settings()
	{
	}
}
[Token(Token = "0x2000236")]
public class ShadowBoxingCollider : MonoBehaviour
{
	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShadowBoxingEffect shadowBoxing;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float nextHit;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lastPos;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 velocity;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioSource;

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x837FA0", Offset = "0x837FA0", VA = "0x837FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x83806C", Offset = "0x83806C", VA = "0x83806C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x838424", Offset = "0x838424", VA = "0x838424")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x8384B0", Offset = "0x8384B0", VA = "0x8384B0")]
	public ShadowBoxingCollider()
	{
	}
}
[Token(Token = "0x2000237")]
public class ShadowBoxingEffect : SpecialMoveAttachedEffect
{
	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRIK vrik;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem[] skinnedParticles;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x8384B8", Offset = "0x8384B8", VA = "0x8384B8", Slot = "4")]
	public override void setup(GameCharacter character)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x838740", Offset = "0x838740", VA = "0x838740")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x838814", Offset = "0x838814", VA = "0x838814", Slot = "5")]
	public override void end()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x83888C", Offset = "0x83888C", VA = "0x83888C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x8389B4", Offset = "0x8389B4", VA = "0x8389B4")]
	private void OnPostUpdate()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x838BCC", Offset = "0x838BCC", VA = "0x838BCC")]
	public ShadowBoxingEffect()
	{
	}
}
[Token(Token = "0x2000238")]
public class ShowIfHasEffect : MonoBehaviour
{
	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodies rigidBodies;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterEffect.Effect effect;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer mesh;

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x838E48", Offset = "0x838E48", VA = "0x838E48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x838EAC", Offset = "0x838EAC", VA = "0x838EAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x838F70", Offset = "0x838F70", VA = "0x838F70")]
	public ShowIfHasEffect()
	{
	}
}
[Token(Token = "0x2000239")]
public class SimpleControls : MonoBehaviour
{
	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterController characterController;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x839860", Offset = "0x839860", VA = "0x839860")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x8398B4", Offset = "0x8398B4", VA = "0x8398B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x839A90", Offset = "0x839A90", VA = "0x839A90")]
	public SimpleControls()
	{
	}
}
[Token(Token = "0x200023A")]
public class SimpleMoveWithKeys : MonoBehaviour
{
	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float turnSpeed;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float moveSpeed;

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x83A25C", Offset = "0x83A25C", VA = "0x83A25C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x83A260", Offset = "0x83A260", VA = "0x83A260")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x83A4A0", Offset = "0x83A4A0", VA = "0x83A4A0")]
	public SimpleMoveWithKeys()
	{
	}
}
[Token(Token = "0x200023B")]
public class SkinMesh : MonoBehaviour
{
	[Token(Token = "0x200023C")]
	public enum Show
	{
		[Token(Token = "0x40010D3")]
		Show,
		[Token(Token = "0x40010D4")]
		ShowNoShadows,
		[Token(Token = "0x40010D5")]
		ShadowsOnly,
		[Token(Token = "0x40010D6")]
		Hide
	}

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Show inBody;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Show outOfBody;

	[NonSerialized]
	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x83A4B4", Offset = "0x83A4B4", VA = "0x83A4B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x83A54C", Offset = "0x83A54C", VA = "0x83A54C")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x83A60C", Offset = "0x83A60C", VA = "0x83A60C")]
	public void Set(bool povView, bool isPlayer)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x83A7A0", Offset = "0x83A7A0", VA = "0x83A7A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x83A7A4", Offset = "0x83A7A4", VA = "0x83A7A4")]
	public SkinMesh()
	{
	}
}
[Token(Token = "0x200023D")]
public class SkinParticles : SpecialMoveAttachedEffect
{
	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IK ik;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem[] skinnedParticles;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SkinnedMeshRenderer[] skins;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hideSkin;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool done;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x83A7AC", Offset = "0x83A7AC", VA = "0x83A7AC", Slot = "4")]
	public override void setup(GameCharacter character)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x83A8BC", Offset = "0x83A8BC", VA = "0x83A8BC")]
	public void setupSkin(IK ik, SkinnedMeshRenderer skinnedMesh)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x83AA80", Offset = "0x83AA80", VA = "0x83AA80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x83AB54", Offset = "0x83AB54", VA = "0x83AB54", Slot = "5")]
	public override void end()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x83AC54", Offset = "0x83AC54", VA = "0x83AC54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x83AD14", Offset = "0x83AD14", VA = "0x83AD14")]
	private void OnPostUpdate()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x83ADB4", Offset = "0x83ADB4", VA = "0x83ADB4")]
	public SkinParticles()
	{
	}
}
[Serializable]
[Token(Token = "0x200023E")]
public class SlowMo
{
	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeSlowTarget;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float changeSpeed;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool tieToQi;

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x83ADBC", Offset = "0x83ADBC", VA = "0x83ADBC")]
	public SlowMo(float target, float changeSpeed, bool instantOn)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x83AE0C", Offset = "0x83AE0C", VA = "0x83AE0C")]
	public bool finished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x83AE34", Offset = "0x83AE34", VA = "0x83AE34")]
	public void update(float deltaTime)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x83AF8C", Offset = "0x83AF8C", VA = "0x83AF8C")]
	public void reduceBy(float amount)
	{
	}
}
[Token(Token = "0x200023F")]
public class SpawnPointController : MonoBehaviour
{
	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x83F770", Offset = "0x83F770", VA = "0x83F770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x83FA80", Offset = "0x83FA80", VA = "0x83FA80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x83FA84", Offset = "0x83FA84", VA = "0x83FA84")]
	public SpawnPointController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000240")]
public class SpecialMove
{
	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecordAction pose;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<RecordAction> ai_attacks;

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x83FA8C", Offset = "0x83FA8C", VA = "0x83FA8C")]
	public SpecialMove(string name)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x83FB78", Offset = "0x83FB78", VA = "0x83FB78")]
	public void setup(bool clean)
	{
	}
}
[Token(Token = "0x2000241")]
public class SpecialMoveAttachedEffect : MonoBehaviour
{
	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter character;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject onHitEffect;

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x83FD24", Offset = "0x83FD24", VA = "0x83FD24", Slot = "4")]
	public virtual void setup(GameCharacter character)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x83FD2C", Offset = "0x83FD2C", VA = "0x83FD2C", Slot = "5")]
	public virtual void end()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x838BD4", Offset = "0x838BD4", VA = "0x838BD4")]
	public SpecialMoveAttachedEffect()
	{
	}
}
[Token(Token = "0x2000242")]
public class SpecialMoveController : MonoBehaviour
{
	[Token(Token = "0x2000243")]
	public enum ActivateMode
	{
		[Token(Token = "0x4001108")]
		None,
		[Token(Token = "0x4001109")]
		Instant,
		[Token(Token = "0x400110A")]
		Impact,
		[Token(Token = "0x400110B")]
		AirHit,
		[Token(Token = "0x400110C")]
		Release,
		[Token(Token = "0x400110D")]
		DownStrike,
		[Token(Token = "0x400110E")]
		Chop,
		[Token(Token = "0x400110F")]
		Trigger
	}

	[Token(Token = "0x2000244")]
	public enum SlideActivate
	{
		[Token(Token = "0x4001111")]
		None,
		[Token(Token = "0x4001112")]
		Punch,
		[Token(Token = "0x4001113")]
		Kick
	}

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProjectileController projectilePrefab;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform projectileContainer;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform projectileContainer_leftHanded;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpecialMoveEffect effectPrefab;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform toGrip;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpecialMoveController other;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpecialMoveData data;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool disableSounds;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject preEffect;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject effect;

	[NonSerialized]
	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Hittable following;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform followingTransform;

	[NonSerialized]
	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool armed;

	[NonSerialized]
	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float activated;

	[NonSerialized]
	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool finished;

	[NonSerialized]
	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool launched;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool fromGrab;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool activateOnce;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform[] projectileStartPoint;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ActivateMode activateMode;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public SlideActivate slideActivate;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float timer;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 lastPos;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool slideOnActivate;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool requiresSlide;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public bool maxHitPower;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameCharacter character;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool angledProjectileSpawns;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float removeDelay;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool success;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool isFinished;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ProjectileController projectile;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 startPos;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 endPos;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x83FD30", Offset = "0x83FD30", VA = "0x83FD30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x83FF48", Offset = "0x83FF48", VA = "0x83FF48")]
	public void onHitActivate(BodyPartData bodyPart)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x840328", Offset = "0x840328", VA = "0x840328")]
	public void onHit(bool success, BodyPartData bodyPart)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x8406C8", Offset = "0x8406C8", VA = "0x8406C8")]
	public void activateMove()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x840F98", Offset = "0x840F98", VA = "0x840F98")]
	public void drop()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x8401C0", Offset = "0x8401C0", VA = "0x8401C0")]
	private void finish(bool removeOther)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x8412EC", Offset = "0x8412EC", VA = "0x8412EC")]
	private void pause()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x8412F0", Offset = "0x8412F0", VA = "0x8412F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x841B5C", Offset = "0x841B5C", VA = "0x841B5C")]
	public SpecialMoveController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000245")]
public class SpecialMoveData : Exportable
{
	[Token(Token = "0x2000246")]
	public enum AIDoWhen
	{
		[Token(Token = "0x400113A")]
		WithinMovingRange,
		[Token(Token = "0x400113B")]
		WithinStillRange,
		[Token(Token = "0x400113C")]
		GreaterThanCustom,
		[Token(Token = "0x400113D")]
		LessThanCustom,
		[Token(Token = "0x400113E")]
		AroundCustom,
		[Token(Token = "0x400113F")]
		AnyTime
	}

	[Token(Token = "0x2000247")]
	public enum HitLocation
	{
		[Token(Token = "0x4001141")]
		Any,
		[Token(Token = "0x4001142")]
		Head,
		[Token(Token = "0x4001143")]
		Torso,
		[Token(Token = "0x4001144")]
		Arm,
		[Token(Token = "0x4001145")]
		Leg
	}

	[Token(Token = "0x2000248")]
	public enum TimeSlowMode
	{
		[Token(Token = "0x4001147")]
		None,
		[Token(Token = "0x4001148")]
		OnActivate,
		[Token(Token = "0x4001149")]
		OnHit,
		[Token(Token = "0x400114A")]
		OnThrow
	}

	[Token(Token = "0x2000249")]
	public enum Type
	{
		[Token(Token = "0x400114C")]
		RightHand,
		[Token(Token = "0x400114D")]
		LeftHand,
		[Token(Token = "0x400114E")]
		BothHands,
		[Token(Token = "0x400114F")]
		NoHands,
		[Token(Token = "0x4001150")]
		BothFeet,
		[Token(Token = "0x4001151")]
		Mouth
	}

	[Token(Token = "0x200024A")]
	public enum HandMovementType
	{
		[Token(Token = "0x4001153")]
		None,
		[Token(Token = "0x4001154")]
		Forward,
		[Token(Token = "0x4001155")]
		Downward,
		[Token(Token = "0x4001156")]
		StrikeHeadOrBody,
		[Token(Token = "0x4001157")]
		StrikeHead,
		[Token(Token = "0x4001158")]
		StrikeBody,
		[Token(Token = "0x4001159")]
		StrikeArm,
		[Token(Token = "0x400115A")]
		StrikeLeg,
		[Token(Token = "0x400115B")]
		StrikeAnywhere
	}

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BCF68", Offset = "0x4BCF68")]
	public string desc;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BCF80", Offset = "0x4BCF80")]
	public string instruction;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool inCharacterEditor;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCF98", Offset = "0x4BCF98")]
	public string shortInstruction;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandMovementType leftHand;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public HandMovementType rightHand;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BCFD0", Offset = "0x4BCFD0")]
	public TimeSlowMode timeSlowMode;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimeSlow timeSlow;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD008", Offset = "0x4BD008")]
	public AIDoWhen aiDoWhen;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float customRange;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float qiUsage;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool kickMove;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool allowPressurePoints;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool stayStillDuring;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool dontTurnDuring;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD040", Offset = "0x4BD040")]
	public AudioClip voice;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string voiceText;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip sound;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip activateSound;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD078", Offset = "0x4BD078")]
	public VestHapticClip activateHaptic;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool skipHitSound;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SpecialMoveController prefab;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HandPosition.Position l_handPosition;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public HandPosition.Position r_handPosition;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string customPosition;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool ignoreSpeed;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float damageMod;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float slideMod;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float forwardSlide;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float moveDelayMod;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool addEffectToSelf;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CharacterEffect.Effect addEffect;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float effectDuration;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Type moveType;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public HitLocation hitLocation;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool removeOnHit;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool specialInstructionDone;

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x8DF62C", Offset = "0x8DF62C", VA = "0x8DF62C")]
	public void localise()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x8DF6F8", Offset = "0x8DF6F8", VA = "0x8DF6F8")]
	public SpecialMoveController addToHand(GameCharacter character, Transform attachTo, Hittable hittable, bool fromGrab = false)
	{
		return null;
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x8DF958", Offset = "0x8DF958", VA = "0x8DF958")]
	public SpecialMove move()
	{
		return null;
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x8DF9D0", Offset = "0x8DF9D0", VA = "0x8DF9D0")]
	public SpecialMoveData()
	{
	}
}
[Token(Token = "0x200024B")]
public class SpecialMoveEffect : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	public enum AttachTo
	{
		[Token(Token = "0x4001162")]
		Hand,
		[Token(Token = "0x4001163")]
		Floor
	}

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float life;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string moveName;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProjectileController projectilePrefab;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AttachTo attachTo;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VestHapticClip hitHaptic;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x8DFA00", Offset = "0x8DFA00", VA = "0x8DFA00")]
	public void setup(GameCharacter firer)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x8E07AC", Offset = "0x8E07AC", VA = "0x8E07AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x8E07B0", Offset = "0x8E07B0", VA = "0x8E07B0")]
	public SpecialMoveEffect()
	{
	}
}
[Token(Token = "0x200024D")]
public class SpecialMoveInstructionController : MonoBehaviour
{
	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI tip;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] arrows;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] crosshairs;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer[] lines;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpecialMoveData.HandMovementType[] handsMovements;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float moveAmount;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float perc;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool arrowsOn;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float speed;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float heightOffset;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float angleThreshold;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion targetRotation;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] defaultPositions;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BodyPartData[] bodyParts;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Collider> strikeTargets;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Collider closestCollider;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool finished;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float hideTimer;

	[NonSerialized]
	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SpecialMoveData lastMove;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string lastMoveName;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float clearTimer;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x8E07C0", Offset = "0x8E07C0", VA = "0x8E07C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x8E08F4", Offset = "0x8E08F4", VA = "0x8E08F4")]
	private void aimArrow(int i)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x8E1460", Offset = "0x8E1460", VA = "0x8E1460")]
	private void updatePosition(bool resetAngle)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x8E1770", Offset = "0x8E1770", VA = "0x8E1770")]
	public void hide()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x8E0544", Offset = "0x8E0544", VA = "0x8E0544")]
	public void showFinished(GameCharacter character, string message, float showTime = 2f)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x8E17F8", Offset = "0x8E17F8", VA = "0x8E17F8")]
	public void showCustom(GameCharacter character, string instruction, SpecialMoveData.HandMovementType lh, SpecialMoveData.HandMovementType rh)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x8E1A4C", Offset = "0x8E1A4C", VA = "0x8E1A4C")]
	public void show(GameCharacter character)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x8E1D84", Offset = "0x8E1D84", VA = "0x8E1D84")]
	public void updateTimer()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x8E1E1C", Offset = "0x8E1E1C", VA = "0x8E1E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x8E21EC", Offset = "0x8E21EC", VA = "0x8E21EC")]
	public SpecialMoveInstructionController()
	{
	}
}
[Token(Token = "0x200024E")]
public class SpectateCamera : MonoBehaviour
{
	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotateSpeed;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameCharacter following;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameCharacter followingEnemy;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetFieldOfView;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float instant;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float changeInterval;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float changeTime;

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x8E2264", Offset = "0x8E2264", VA = "0x8E2264")]
	public void MoveTowards(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x8E279C", Offset = "0x8E279C", VA = "0x8E279C", Slot = "4")]
	public virtual void updateNow()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x8E27BC", Offset = "0x8E27BC", VA = "0x8E27BC", Slot = "5")]
	public virtual void updatePosition()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x8E27C0", Offset = "0x8E27C0", VA = "0x8E27C0")]
	public Vector3 keepWithinView(Vector3 from, Vector3 camPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x8E2430", Offset = "0x8E2430", VA = "0x8E2430")]
	public Vector3 keepInBounds(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x8E2900", Offset = "0x8E2900", VA = "0x8E2900")]
	public void getToFollow()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x8E2A14", Offset = "0x8E2A14", VA = "0x8E2A14")]
	public bool obstructed(Vector3 from, Vector3 to)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x8E2BB8", Offset = "0x8E2BB8", VA = "0x8E2BB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x8E2BC8", Offset = "0x8E2BC8", VA = "0x8E2BC8")]
	public SpectateCamera()
	{
	}
}
[Token(Token = "0x200024F")]
public class SpectateCanvasController : MonoBehaviour
{
	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nonVRMenu;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas canvas;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x8E2BEC", Offset = "0x8E2BEC", VA = "0x8E2BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x8E2C64", Offset = "0x8E2C64", VA = "0x8E2C64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x8E2C68", Offset = "0x8E2C68", VA = "0x8E2C68")]
	public SpectateCanvasController()
	{
	}
}
[Token(Token = "0x2000250")]
public class SpectatorCam : SpectateCamera
{
	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 targetPos;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 offset;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float rotation;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float orbitSpeed;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float closestDist;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float furthestDist;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool init;

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x8E2C70", Offset = "0x8E2C70", VA = "0x8E2C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x8E2C80", Offset = "0x8E2C80", VA = "0x8E2C80")]
	private void change()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x8E2D0C", Offset = "0x8E2D0C", VA = "0x8E2D0C", Slot = "5")]
	public override void updatePosition()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x8E31E4", Offset = "0x8E31E4", VA = "0x8E31E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x8E3338", Offset = "0x8E3338", VA = "0x8E3338")]
	public SpectatorCam()
	{
	}
}
[Token(Token = "0x2000251")]
public class SpectatorSideCam : SpectateCamera
{
	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 lookOffset;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 middlePos;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 camPos;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float magnitude;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minMagnitude;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 centrePos;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float angle;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float dist;

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x8E3370", Offset = "0x8E3370", VA = "0x8E3370")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x8E33C0", Offset = "0x8E33C0", VA = "0x8E33C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x8E3498", Offset = "0x8E3498", VA = "0x8E3498", Slot = "5")]
	public override void updatePosition()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x8E3398", Offset = "0x8E3398", VA = "0x8E3398")]
	private void change()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x8E3834", Offset = "0x8E3834", VA = "0x8E3834")]
	public SpectatorSideCam()
	{
	}
}
[Token(Token = "0x2000252")]
public class SpikeController : MonoBehaviour
{
	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 center;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip stabSound;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hitEffectPrefab;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool dirFromBox;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float nextHit;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameCharacter lastHit;

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x8E3964", Offset = "0x8E3964", VA = "0x8E3964")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x8E3968", Offset = "0x8E3968", VA = "0x8E3968")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x8E396C", Offset = "0x8E396C", VA = "0x8E396C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x8E3EA4", Offset = "0x8E3EA4", VA = "0x8E3EA4")]
	public SpikeController()
	{
	}
}
[Token(Token = "0x2000253")]
public class Spinner : MonoBehaviour
{
	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 spinDirection;

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x8E3F78", Offset = "0x8E3F78", VA = "0x8E3F78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x8E3F7C", Offset = "0x8E3F7C", VA = "0x8E3F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x8E403C", Offset = "0x8E403C", VA = "0x8E403C")]
	public Spinner()
	{
	}
}
[Token(Token = "0x2000254")]
public class StandButtonsController : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	public enum Type
	{
		[Token(Token = "0x40011B8")]
		Normal,
		[Token(Token = "0x40011B9")]
		LevelPick,
		[Token(Token = "0x40011BA")]
		CharPick,
		[Token(Token = "0x40011BB")]
		Practice,
		[Token(Token = "0x40011BC")]
		Difficulty,
		[Token(Token = "0x40011BD")]
		Final,
		[Token(Token = "0x40011BE")]
		AdvancedCalibrate
	}

	[Token(Token = "0x2000256")]
	public enum BoundsType
	{
		[Token(Token = "0x40011C0")]
		None,
		[Token(Token = "0x40011C1")]
		Circle,
		[Token(Token = "0x40011C2")]
		Square,
		[Token(Token = "0x40011C3")]
		Rect
	}

	[Token(Token = "0x2000257")]
	public enum SpawnOverride
	{
		[Token(Token = "0x40011C5")]
		None,
		[Token(Token = "0x40011C6")]
		OneArmedBoxers,
		[Token(Token = "0x40011C7")]
		LinYong,
		[Token(Token = "0x40011C8")]
		Kurayami
	}

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpawnPointController[] spawnPoints;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StandPositionIndicator[] positions;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Type type;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera editCam;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject noticeBoard;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform menuPosition;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FootstepController.Surface defaultSurface;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public BoundsType boundsType;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BoundsType cpuCameraBoundsOverride;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool keepCameraInBounds;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float boundsSize;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float overrideBoundSize;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 bounds;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool isLevelPicker;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VolumetricFogProfile fogProfile;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SpawnOverride overrideSpawn;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float fightRadius;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 fightArea;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool ai_Jumping;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool ai_avoidObstructions;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip ambienceSound;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip roundStartSound;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int fighterSet;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform[] cameraPoints;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LeaderBoardDisplayController leaderboard;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float minimumHeight;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float cinematicFightersDistance;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float cinematicFightersAngle;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform cinematicCentre;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool hasMirror;

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x8E4044", Offset = "0x8E4044", VA = "0x8E4044")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x8E44BC", Offset = "0x8E44BC", VA = "0x8E44BC")]
	public void startSound()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x8E4548", Offset = "0x8E4548", VA = "0x8E4548")]
	private void showTip()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x8E45A8", Offset = "0x8E45A8", VA = "0x8E45A8")]
	public void onKnockout()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x8E45B0", Offset = "0x8E45B0", VA = "0x8E45B0")]
	public bool inFightArea(Vector3 targetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x8E46A4", Offset = "0x8E46A4", VA = "0x8E46A4")]
	public Vector3 clampPos(Vector3 targetPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x8E47C4", Offset = "0x8E47C4", VA = "0x8E47C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x8E5A40", Offset = "0x8E5A40", VA = "0x8E5A40")]
	public StandButtonsController()
	{
	}
}
[Token(Token = "0x2000258")]
public class StandPositionIndicator : MonoBehaviour
{
	[Token(Token = "0x2000259")]
	public delegate void OnPress(StandPositionIndicator standPos);

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string headingText;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string buttonLabel;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string buttonAction;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string standAction;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RawImage thumbnail;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LevelStarDisplay starDisplay;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int id;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI heading;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI extra;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI tip;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI perk;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI weakness;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MenuButtonContoller button;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float targetHeight;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool standingOn;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool disabled;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float dist;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform enemySpawnPoint;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public OnPress onPress;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public OnPress onSmash;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool manual;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material buttonDisabledMaterial;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material circleDisabledMaterial;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material circleEnabledMaterial;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip disabledHitSound;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color disabledHeadingColour;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material buttonStandardMaterial;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material circleStandardMaterial;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip standardHitSound;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject groundStars;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool localise;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool isDisabled;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	private bool fadeInLight;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	public bool on;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float minTime;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string tipText;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Material[] mats;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public CharacterData characterData;

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x8E5A68", Offset = "0x8E5A68", VA = "0x8E5A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x8E5B98", Offset = "0x8E5B98", VA = "0x8E5B98")]
	public Vector3 projected(float sideOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x8E5C18", Offset = "0x8E5C18", VA = "0x8E5C18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x8E50B4", Offset = "0x8E50B4", VA = "0x8E50B4")]
	public void setToSingleRound()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x8E53D0", Offset = "0x8E53D0", VA = "0x8E53D0")]
	public void setToCharacter(CharacterData character)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x8E67E0", Offset = "0x8E67E0", VA = "0x8E67E0")]
	private void smash()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x8E6840", Offset = "0x8E6840", VA = "0x8E6840")]
	private void press(MenuButtonContoller button)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x8E68BC", Offset = "0x8E68BC", VA = "0x8E68BC")]
	public StandPositionIndicator()
	{
	}
}
[Token(Token = "0x200025A")]
public class StandingController : MonoBehaviour
{
	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter character;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onGround;

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x8E6910", Offset = "0x8E6910", VA = "0x8E6910")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x8E6914", Offset = "0x8E6914", VA = "0x8E6914")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x8E6AFC", Offset = "0x8E6AFC", VA = "0x8E6AFC")]
	public StandingController()
	{
	}
}
[Token(Token = "0x200025B")]
public class StarPortraitController : MonoBehaviour
{
	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage portrait;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image border;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI unlockText;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] stars;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool highlight;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite onSprite;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite offSprite;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite disabledSprite;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float highlightPerc;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color baseColour;

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x8E6B04", Offset = "0x8E6B04", VA = "0x8E6B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x8E6B08", Offset = "0x8E6B08", VA = "0x8E6B08")]
	public void setTo(CharacterData character)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x8E6E78", Offset = "0x8E6E78", VA = "0x8E6E78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x8E6F4C", Offset = "0x8E6F4C", VA = "0x8E6F4C")]
	public StarPortraitController()
	{
	}
}
[Serializable]
[Token(Token = "0x200025C")]
public class StatScreenColumn
{
	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] statNames;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x8E7280", Offset = "0x8E7280", VA = "0x8E7280")]
	public StatScreenColumn()
	{
	}
}
[Token(Token = "0x200025D")]
public class StatsScreenController : MonoBehaviour
{
	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool currentGame;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI head;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform container;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject statPrefab;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 spacing;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float columnLimit;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StatScreenColumn[] columns;

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x8E7288", Offset = "0x8E7288", VA = "0x8E7288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x8E76D8", Offset = "0x8E76D8", VA = "0x8E76D8")]
	public StatsScreenController()
	{
	}
}
[Serializable]
[Token(Token = "0x200025E")]
public class SteamLeaderboard
{
	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool initialized;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x8E76EC", Offset = "0x8E76EC", VA = "0x8E76EC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x8E76F0", Offset = "0x8E76F0", VA = "0x8E76F0")]
	public void DebugScores()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x8E76F4", Offset = "0x8E76F4", VA = "0x8E76F4")]
	public void UpdateScore(int score)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x8E76F8", Offset = "0x8E76F8", VA = "0x8E76F8")]
	public SteamLeaderboard()
	{
	}
}
[Token(Token = "0x200025F")]
public class SteamLeaderboards : MonoBehaviour
{
	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SteamLeaderboards instance;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamLeaderboard[] leaderboards;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x8E7700", Offset = "0x8E7700", VA = "0x8E7700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x8E7704", Offset = "0x8E7704", VA = "0x8E7704")]
	public SteamLeaderboard getLeaderBoardByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x8E770C", Offset = "0x8E770C", VA = "0x8E770C")]
	public void UpdateScore(string name, int score)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x8E7710", Offset = "0x8E7710", VA = "0x8E7710")]
	public SteamLeaderboards()
	{
	}
}
[Token(Token = "0x2000260")]
public class StoryController : MonoBehaviour
{
	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuButtonContoller menuButton;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MenuButtonContoller practiceButton;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuButtonContoller cancelButton;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MenuButtonContoller altCostume;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MenuButtonContoller nextCharacter;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI heading;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI text;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI specialMove;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI perks;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameCharacterForPlinthController miniPuppet;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Light spotlight;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float targetHeight;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool pressed;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool instant;

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x8E7728", Offset = "0x8E7728", VA = "0x8E7728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x8E79E4", Offset = "0x8E79E4", VA = "0x8E79E4")]
	private void altCostumePress(MenuButtonContoller b)
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x8E7B54", Offset = "0x8E7B54", VA = "0x8E7B54")]
	private void nextScreen(MenuButtonContoller b)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x8E8594", Offset = "0x8E8594", VA = "0x8E8594")]
	public void hide()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x8E7EA0", Offset = "0x8E7EA0", VA = "0x8E7EA0")]
	public void show(CharacterData characterData, bool instant)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x8E85A0", Offset = "0x8E85A0", VA = "0x8E85A0")]
	private void zombify()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x8E85C8", Offset = "0x8E85C8", VA = "0x8E85C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x8E8758", Offset = "0x8E8758", VA = "0x8E8758")]
	public StoryController()
	{
	}
}
[Token(Token = "0x2000261")]
public class SubtitlesController : MonoBehaviour
{
	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FaceController following;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 followPosition;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SubtitlesController instance;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float showTime;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float hideTime;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color onColour;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color offColour;

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x8E8768", Offset = "0x8E8768", VA = "0x8E8768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x8E87D8", Offset = "0x8E87D8", VA = "0x8E87D8")]
	public void cutOff(float perc, string with)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x8E8954", Offset = "0x8E8954", VA = "0x8E8954")]
	public void say(Vector3 fromPos, string sayText, float forTime)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x8E8974", Offset = "0x8E8974", VA = "0x8E8974")]
	public void say(FaceController following, string sayText, float forTime, Vector3 fromPos)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x8E8B50", Offset = "0x8E8B50", VA = "0x8E8B50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x8E9200", Offset = "0x8E9200", VA = "0x8E9200")]
	public SubtitlesController()
	{
	}
}
[Token(Token = "0x2000262")]
public class SwitchLayer : MonoBehaviour
{
	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int toLayer;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float time;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x8E9210", Offset = "0x8E9210", VA = "0x8E9210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x8E927C", Offset = "0x8E927C", VA = "0x8E927C")]
	private void switchLayer()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x8E92B0", Offset = "0x8E92B0", VA = "0x8E92B0")]
	public SwitchLayer()
	{
	}
}
[Token(Token = "0x2000263")]
public class SwooshIfFast : MonoBehaviour
{
	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip outClip;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip roundClip;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minSpeed;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool doPitch;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool ignoreSpeedForVolume;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float swipeSpeed;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pitch;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioSource;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lastPos;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 startPos;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastHeadDist;

	[NonSerialized]
	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float nextPlay;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool doneSwoosh;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool right;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RigidBodies rb;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int frameCount;

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x8E92C0", Offset = "0x8E92C0", VA = "0x8E92C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x8E9394", Offset = "0x8E9394", VA = "0x8E9394")]
	public void sleep()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x8E93C8", Offset = "0x8E93C8", VA = "0x8E93C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x8E9A68", Offset = "0x8E9A68", VA = "0x8E9A68")]
	public SwooshIfFast()
	{
	}
}
[Token(Token = "0x2000264")]
public class SwordSpawner : MonoBehaviour
{
	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuppetMasterPropMelee swordPrefab;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PropGrab[] all;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int spawnCount;

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x8E9A70", Offset = "0x8E9A70", VA = "0x8E9A70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x8E9C20", Offset = "0x8E9C20", VA = "0x8E9C20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x8E9C24", Offset = "0x8E9C24", VA = "0x8E9C24")]
	public SwordSpawner()
	{
	}
}
[Token(Token = "0x2000265")]
public class TableSmashAchievementCheck : MonoBehaviour
{
	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TableSmashAchievementCheck instance;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SceneryBreakable> breakables;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x8E9C34", Offset = "0x8E9C34", VA = "0x8E9C34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x8E9C84", Offset = "0x8E9C84", VA = "0x8E9C84")]
	public void Remove(SceneryBreakable breakable)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x8E9D34", Offset = "0x8E9D34", VA = "0x8E9D34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x8E9D38", Offset = "0x8E9D38", VA = "0x8E9D38")]
	public TableSmashAchievementCheck()
	{
	}
}
[Token(Token = "0x2000266")]
public class TakePhoto : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	public enum Format
	{
		[Token(Token = "0x4001241")]
		Jpg,
		[Token(Token = "0x4001242")]
		Png
	}

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool takePhoto;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int width;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int height;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cam;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string photoFolder;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string fileName;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip photoSound;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool disableOnLoad;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool alignToSceneView;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Format format;

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x8E9D40", Offset = "0x8E9D40", VA = "0x8E9D40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x8E9E70", Offset = "0x8E9E70", VA = "0x8E9E70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x8E9E84", Offset = "0x8E9E84", VA = "0x8E9E84")]
	private void takePic()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x8EA040", Offset = "0x8EA040", VA = "0x8EA040")]
	public void DumpRenderTexture(RenderTexture rt, string outPath)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x8EA1C8", Offset = "0x8EA1C8", VA = "0x8EA1C8")]
	public TakePhoto()
	{
	}
}
[Token(Token = "0x2000268")]
public class TargetController : HitSurface
{
	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float ringRadiusStep;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int scoreMod;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DaggerGameController daggerGame;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float minPlayerDistance;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x8EA1D8", Offset = "0x8EA1D8", VA = "0x8EA1D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x8EA298", Offset = "0x8EA298", VA = "0x8EA298", Slot = "5")]
	public override void ProjectileHit(ProjectileController projectile, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x8EA694", Offset = "0x8EA694", VA = "0x8EA694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x8EA698", Offset = "0x8EA698", VA = "0x8EA698")]
	public TargetController()
	{
	}
}
[Token(Token = "0x2000269")]
public class TextureScroller : MonoBehaviour
{
	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer renderer;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string mainTexture;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mainOffset;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float multiply;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 mainSpeed;

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x8ED924", Offset = "0x8ED924", VA = "0x8ED924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x8ED978", Offset = "0x8ED978", VA = "0x8ED978")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x8EDA10", Offset = "0x8EDA10", VA = "0x8EDA10")]
	public TextureScroller()
	{
	}
}
[Token(Token = "0x200026A")]
public class TextureSwapOnHit : HitSurface
{
	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int materialIndex;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip hitSound;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material hitMaterial;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer mesh;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool done;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public StandButtonsController.SpawnOverride secretLevel;

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x8EDA6C", Offset = "0x8EDA6C", VA = "0x8EDA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x8EDAC0", Offset = "0x8EDAC0", VA = "0x8EDAC0")]
	private void delayedAction()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x8EDBA8", Offset = "0x8EDBA8", VA = "0x8EDBA8", Slot = "4")]
	public override void OnHit(Hittable hitBy, Hittable.HandHitType hitType, float force, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x8EDD80", Offset = "0x8EDD80", VA = "0x8EDD80")]
	public TextureSwapOnHit()
	{
	}
}
[Token(Token = "0x200026B")]
public class TigerClawController : MonoBehaviour
{
	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RigidBodies rigidBodies;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hitPersonEffect;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip hitSound;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip hitOtherSound;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxCollider boxCollider;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject trails;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TransformData leftHandData;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TransformData rightHandData;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioSource;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody rb;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float hitTime;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int hitCount;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int collisions;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Hittable lastHitObject;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FixedJoint joint;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float allowHitNonDamage;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x8EDD88", Offset = "0x8EDD88", VA = "0x8EDD88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x8EDE00", Offset = "0x8EDE00", VA = "0x8EDE00")]
	public bool timeCheck(int max, Hittable hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x8EDEDC", Offset = "0x8EDEDC", VA = "0x8EDEDC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x8EE3C8", Offset = "0x8EE3C8", VA = "0x8EE3C8")]
	public TigerClawController()
	{
	}
}
[Token(Token = "0x200026C")]
public class TigerClawEffect : SpecialMoveAttachedEffect
{
	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TigerClawController clawPrefab;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TigerClawController l_claw;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TigerClawController r_claw;

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x8EE3D0", Offset = "0x8EE3D0", VA = "0x8EE3D0", Slot = "4")]
	public override void setup(GameCharacter character)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x8EE5D4", Offset = "0x8EE5D4", VA = "0x8EE5D4", Slot = "5")]
	public override void end()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x8EE66C", Offset = "0x8EE66C", VA = "0x8EE66C")]
	public TigerClawEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x200026D")]
public class TimeSlow
{
	[Token(Token = "0x200026E")]
	public enum Type
	{
		[Token(Token = "0x400126A")]
		None,
		[Token(Token = "0x400126B")]
		Change,
		[Token(Token = "0x400126C")]
		InstantOn
	}

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type type;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float amount;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float changeTime;

	[NonSerialized]
	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SlowMo slowMo;

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x8EE674", Offset = "0x8EE674", VA = "0x8EE674")]
	public SlowMo doIt(bool tieToQi = false)
	{
		return null;
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x8EE6F0", Offset = "0x8EE6F0", VA = "0x8EE6F0")]
	public void cancel()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x8EE774", Offset = "0x8EE774", VA = "0x8EE774")]
	public TimeSlow()
	{
	}
}
[Token(Token = "0x200026F")]
public class TipCanvasController : MonoBehaviour
{
	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float alpha;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string origText;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float alphaTarget;

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x764804", Offset = "0x764804", VA = "0x764804")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x7649A4", Offset = "0x7649A4", VA = "0x7649A4")]
	public void refresh()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x764A18", Offset = "0x764A18", VA = "0x764A18")]
	private string replace(string txt)
	{
		return null;
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x765004", Offset = "0x765004", VA = "0x765004")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x765308", Offset = "0x765308", VA = "0x765308")]
	public TipCanvasController()
	{
	}
}
[Token(Token = "0x2000270")]
public class Tools
{
	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x765310", Offset = "0x765310", VA = "0x765310")]
	public static Vector3 RoundVector3(Vector3 vec, int decimalPoints = 0)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x7654E4", Offset = "0x7654E4", VA = "0x7654E4")]
	public static string percentageDisplay(float num)
	{
		return null;
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x7655D8", Offset = "0x7655D8", VA = "0x7655D8")]
	public static Vector3 FlatVector3(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x7655E0", Offset = "0x7655E0", VA = "0x7655E0")]
	public static Vector3 deadZone(Vector3 vec, float deadZoneSize = 0.4f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x76567C", Offset = "0x76567C", VA = "0x76567C")]
	public static float deadZone(float num, float deadZoneSize = 0.4f)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x7656C0", Offset = "0x7656C0", VA = "0x7656C0")]
	public static string ArrayToString(string[] array)
	{
		return null;
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x765710", Offset = "0x765710", VA = "0x765710")]
	public Tools()
	{
	}
}
[Token(Token = "0x2000271")]
public class TrackerConnectController : MonoBehaviour
{
	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FBTTrackers ftbTrackers;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform offset;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform trackerConnect;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FBTTracker tracker;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool connected;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform bone;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform target;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distFromBone;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float angleFromBone;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion originalRotation;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 originalPosition;

	[NonSerialized]
	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Quaternion rotationOffset;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshRenderer sole;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float groundDist;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool onGround;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float stickTimer;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public LayerMask layerMask;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool debug;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x766E8C", Offset = "0x766E8C", VA = "0x766E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x766F48", Offset = "0x766F48", VA = "0x766F48")]
	public void connect()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x766FFC", Offset = "0x766FFC", VA = "0x766FFC")]
	public void adjust(float amount)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x767080", Offset = "0x767080", VA = "0x767080")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x767B68", Offset = "0x767B68", VA = "0x767B68")]
	public TrackerConnectController()
	{
	}
}
[Token(Token = "0x2000272")]
public class TrackerHighlight : MonoBehaviour
{
	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string modelName;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool setup;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform body;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material bodyMaterial;

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x767B70", Offset = "0x767B70", VA = "0x767B70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x767B74", Offset = "0x767B74", VA = "0x767B74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x767B78", Offset = "0x767B78", VA = "0x767B78")]
	public TrackerHighlight()
	{
	}
}
[Token(Token = "0x2000273")]
public class TrailIfOverSpeed : MonoBehaviour
{
	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minSpeed;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 lastPos;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TrailRenderer trail;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x767B80", Offset = "0x767B80", VA = "0x767B80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x767BD4", Offset = "0x767BD4", VA = "0x767BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x767C98", Offset = "0x767C98", VA = "0x767C98")]
	public TrailIfOverSpeed()
	{
	}
}
[Serializable]
[Token(Token = "0x2000274")]
public class TransformData
{
	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 scale;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x769CF0", Offset = "0x769CF0", VA = "0x769CF0")]
	public void setToLocal(Transform t)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x769D58", Offset = "0x769D58", VA = "0x769D58")]
	public void setFromLocal(Transform t)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x769DDC", Offset = "0x769DDC", VA = "0x769DDC")]
	public TransformData()
	{
	}
}
[Token(Token = "0x2000275")]
public class TurnWithKeys : MonoBehaviour
{
	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode turnLeft;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode turnRight;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode turnUp;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode turnDown;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode moveForward;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode moveBack;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float turnSpeed;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float moveSpeed;

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x76A2A4", Offset = "0x76A2A4", VA = "0x76A2A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x76A2A8", Offset = "0x76A2A8", VA = "0x76A2A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x76A64C", Offset = "0x76A64C", VA = "0x76A64C")]
	public TurnWithKeys()
	{
	}
}
[Token(Token = "0x2000276")]
public class VRCharacterActions : MonoBehaviour
{
	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRRig rig;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD0B0", Offset = "0x4BD0B0")]
	public OVRInput.Axis2D moveAction_oculus;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Axis2D turnAction_oculus;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Button dashAction_oculus;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OVRInput.Button specialMoveAction_oculus;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRInput.Button spectateAction_oculus;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public OVRInput.Button testAction_oculus;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRInput.Button pauseAction_oculus;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public OVRInput.Button pauseUnityAction_oculus;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OVRInput.Axis1D squeeze_oculus;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public OVRInput.Axis1D squeezeSecondary_oculus;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OVRInput.Button grab_oculus;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public OVRInput.Button nextAIModeAction_oculus;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OVRInput.Button showMenuAction_oculus;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public OVRInput.Button thumbstickClickAction;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD0E8", Offset = "0x4BD0E8")]
	public OVRInput.Axis2D moveAction_lh;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public OVRInput.Axis2D turnAction_lh;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OVRInput.Button dashAction_lh;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public OVRInput.Button specialMoveAction_lh;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OVRInput.Button spectateAction_lh;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public OVRInput.Button pauseAction_lh;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD120", Offset = "0x4BD120")]
	public KeyCode pause_key;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public KeyCode spectate_key;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public KeyCode test_key;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public KeyCode kick_key;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public KeyCode rPunch_key;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public KeyCode lPunch_key;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool rPunch;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool lPunch;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float rPunchPerc;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lPunchPerc;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int rightThumbDirection;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int rightThumbDirection_was;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool rightThumbDirectionChange;

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x76A660", Offset = "0x76A660", VA = "0x76A660")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x76A780", Offset = "0x76A780", VA = "0x76A780")]
	public bool rightHanded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x76A7E4", Offset = "0x76A7E4", VA = "0x76A7E4")]
	public bool rightThumbDown(int direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x76A804", Offset = "0x76A804", VA = "0x76A804")]
	public VRRig activeRig()
	{
		return null;
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x76A80C", Offset = "0x76A80C", VA = "0x76A80C")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x76A83C", Offset = "0x76A83C", VA = "0x76A83C")]
	public bool nextAIMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x76A8A8", Offset = "0x76A8A8", VA = "0x76A8A8")]
	public bool pauseUnity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x76A914", Offset = "0x76A914", VA = "0x76A914")]
	public bool showMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x76A980", Offset = "0x76A980", VA = "0x76A980")]
	public Vector2 move()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x76AA00", Offset = "0x76AA00", VA = "0x76AA00")]
	public bool dash()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x76AA80", Offset = "0x76AA80", VA = "0x76AA80")]
	public bool dashHold()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x76AB00", Offset = "0x76AB00", VA = "0x76AB00")]
	public bool jump()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x76AB20", Offset = "0x76AB20", VA = "0x76AB20")]
	public bool kick()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x76AB48", Offset = "0x76AB48", VA = "0x76AB48")]
	public bool specialMove()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x76ABC8", Offset = "0x76ABC8", VA = "0x76ABC8")]
	public bool spectate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x76AC68", Offset = "0x76AC68", VA = "0x76AC68")]
	public bool test()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x76ACD4", Offset = "0x76ACD4", VA = "0x76ACD4")]
	public bool pause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x76AD74", Offset = "0x76AD74", VA = "0x76AD74")]
	public bool pauseHold()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x76AE14", Offset = "0x76AE14", VA = "0x76AE14")]
	public float turn()
	{
		return default(float);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x76AE94", Offset = "0x76AE94", VA = "0x76AE94")]
	public float squeezeSecondary(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x76AF18", Offset = "0x76AF18", VA = "0x76AF18")]
	public float squeeze(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x76AF9C", Offset = "0x76AF9C", VA = "0x76AF9C")]
	public VRCharacterActions()
	{
	}
}
[Token(Token = "0x2000277")]
public class VRCharacterController : MonoBehaviour
{
	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter gameCharacter;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRIK ik;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 standPos;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CapsuleCollider footCollider;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CapsuleCollider headCollider;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lastHeadPosition;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float footHeightOffset;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float colliderRadius;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Collision> collisions;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float ySpeed;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public LayerMask scenery;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool onGround;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float heightOffGround;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float jumpPower;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool hasMoved;

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x76AFA4", Offset = "0x76AFA4", VA = "0x76AFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x76AFB4", Offset = "0x76AFB4", VA = "0x76AFB4")]
	public void jump()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x76B1D8", Offset = "0x76B1D8", VA = "0x76B1D8")]
	public void gravity()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x76B690", Offset = "0x76B690", VA = "0x76B690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x76BEA4", Offset = "0x76BEA4", VA = "0x76BEA4")]
	private void moveBackByRB()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x76C6F8", Offset = "0x76C6F8", VA = "0x76C6F8")]
	public void Move(Vector3 amount)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x76C2F8", Offset = "0x76C2F8", VA = "0x76C2F8")]
	private void keepInBounds()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x76C96C", Offset = "0x76C96C", VA = "0x76C96C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x76C970", Offset = "0x76C970", VA = "0x76C970")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x76C9D4", Offset = "0x76C9D4", VA = "0x76C9D4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x76CA38", Offset = "0x76CA38", VA = "0x76CA38")]
	public VRCharacterController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000278")]
public class VRControlTip
{
	[Token(Token = "0x2000279")]
	public enum Type
	{
		[Token(Token = "0x40012D6")]
		LevelStart,
		[Token(Token = "0x40012D7")]
		OnMenu,
		[Token(Token = "0x40012D8")]
		AdHoc,
		[Token(Token = "0x40012D9")]
		OnGeneralChamber,
		[Token(Token = "0x40012DA")]
		OnCharPick
	}

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string tip;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool leftArrows;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool rightArrows;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool arrow_up;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool arrow_down;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool arrow_left;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool arrow_right;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxSeen;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int seen;

	[NonSerialized]
	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float nextSeeTime;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Type type;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool rememberSeen;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isSpecial;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public OVRInput.Button buttons;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRInput.Button lh_buttons;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x76D22C", Offset = "0x76D22C", VA = "0x76D22C")]
	public void localise()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x76D280", Offset = "0x76D280", VA = "0x76D280")]
	public bool canShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x76D4CC", Offset = "0x76D4CC", VA = "0x76D4CC")]
	public VRControlTip()
	{
	}
}
[Token(Token = "0x200027A")]
public class VRHatController : MonoBehaviour
{
	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationOffset;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GlassesController glasses;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool allowRaise;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x76D4E4", Offset = "0x76D4E4", VA = "0x76D4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x76D55C", Offset = "0x76D55C", VA = "0x76D55C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x76D754", Offset = "0x76D754", VA = "0x76D754")]
	public VRHatController()
	{
	}
}
[Token(Token = "0x200027B")]
public class VRMainRigController : MonoBehaviour
{
	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRMainRigController instance;

	[NonSerialized]
	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRRig rig;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform following;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRRig controlling;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform r_pointer;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform l_pointer;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SafetyCircleController safetyCircle;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FaceHitEffect faceHit;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject fps;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ControllerTipController controllerTips;

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x76D75C", Offset = "0x76D75C", VA = "0x76D75C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x76D91C", Offset = "0x76D91C", VA = "0x76D91C")]
	public void refreshFollowing()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x76DBC8", Offset = "0x76DBC8", VA = "0x76DBC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x76DE3C", Offset = "0x76DE3C", VA = "0x76DE3C")]
	public VRMainRigController()
	{
	}
}
[Token(Token = "0x200027C")]
public class VRMenuActions : MonoBehaviour
{
	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hand;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode key;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode keyboardKey;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Button button;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Button lh_button;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OVRInput.Button devButton;

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x76DE44", Offset = "0x76DE44", VA = "0x76DE44")]
	public bool press(bool right = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x76DF40", Offset = "0x76DF40", VA = "0x76DF40")]
	public bool pressHold(bool right = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x76E03C", Offset = "0x76E03C", VA = "0x76E03C")]
	public bool devHold()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x76E0A8", Offset = "0x76E0A8", VA = "0x76E0A8")]
	public bool noPlayer(bool right = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x76E1A4", Offset = "0x76E1A4", VA = "0x76E1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x76E1A8", Offset = "0x76E1A8", VA = "0x76E1A8")]
	public VRMenuActions()
	{
	}
}
[Token(Token = "0x200027D")]
public class VRNonPlayerCamActions : MonoBehaviour
{
	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRRig rig;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button pauseAction_oculus;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Axis2D turnAction_oculus;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Axis2D moveAction_oculus;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OVRInput.Button pauseAction_lh;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRInput.Axis2D turnAction_lh;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public OVRInput.Axis2D moveAction_lh;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRInput.Button speedUp;

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x76E1B0", Offset = "0x76E1B0", VA = "0x76E1B0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x76E1E0", Offset = "0x76E1E0", VA = "0x76E1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x76E1E4", Offset = "0x76E1E4", VA = "0x76E1E4")]
	public VRRig activeRig()
	{
		return null;
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x76E1EC", Offset = "0x76E1EC", VA = "0x76E1EC")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x76E1F0", Offset = "0x76E1F0", VA = "0x76E1F0")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x76E1F4", Offset = "0x76E1F4", VA = "0x76E1F4")]
	public float turn()
	{
		return default(float);
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x76E2AC", Offset = "0x76E2AC", VA = "0x76E2AC")]
	public Vector3 move()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x76E414", Offset = "0x76E414", VA = "0x76E414")]
	public bool pause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x76E4CC", Offset = "0x76E4CC", VA = "0x76E4CC")]
	public VRNonPlayerCamActions()
	{
	}
}
[Serializable]
[Token(Token = "0x200027E")]
public class VRProfile
{
	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string modelSearch;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD158", Offset = "0x4BD158")]
	public string dash;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string special;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string spectate;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string makeFist;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD190", Offset = "0x4BD190")]
	public bool allowFingerTracking;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float moveSensitivity;

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x764EF8", Offset = "0x764EF8", VA = "0x764EF8")]
	public string getHanded(string command, bool isSpecial)
	{
		return null;
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x76E4D4", Offset = "0x76E4D4", VA = "0x76E4D4")]
	public VRProfile()
	{
	}
}
[Token(Token = "0x200027F")]
public class VRRig : MonoBehaviour
{
	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trackers;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerRealign[] realigns;

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x76E4E4", Offset = "0x76E4E4", VA = "0x76E4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x76E61C", Offset = "0x76E61C", VA = "0x76E61C")]
	public VRRig()
	{
	}
}
[Token(Token = "0x2000280")]
public class VRRunController : MonoBehaviour
{
	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRIK ik;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float runThreshold;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float runSpeed;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float acceleration;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float decelleration;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 leftLastPos;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 rightLastPos;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 moveDirection;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 runMove;

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x76E624", Offset = "0x76E624", VA = "0x76E624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x76E6BC", Offset = "0x76E6BC", VA = "0x76E6BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x76EB00", Offset = "0x76EB00", VA = "0x76EB00")]
	public VRRunController()
	{
	}
}
[Token(Token = "0x2000281")]
public class VRTrackerContainer : MonoBehaviour
{
	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debug;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameCharacter gameCharacter;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] shapes;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] transforms;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform lOffset;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rOffset;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rightHandMoved;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 leftHandMoved;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BD1C8", Offset = "0x4BD1C8")]
	public float rightHandMovedPerc;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BD1E0", Offset = "0x4BD1E0")]
	public float leftHandMovedPerc;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float rightHandSpeed;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float leftHandSpeed;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float rightTopSpeed;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float leftTopSpeed;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 rhPos;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 lhPos;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 lastRPos;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 lastLPos;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float resetSpeed;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float recordTime;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float min;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float max;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float hitPercMin;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float turnPause;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x76EB14", Offset = "0x76EB14", VA = "0x76EB14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x76EB18", Offset = "0x76EB18", VA = "0x76EB18")]
	public void turn()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x76EB24", Offset = "0x76EB24", VA = "0x76EB24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x76F0A0", Offset = "0x76F0A0", VA = "0x76F0A0")]
	public float speedPerc(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x76F0D8", Offset = "0x76F0D8", VA = "0x76F0D8")]
	public bool speedCheck(bool right, bool isPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x76F1CC", Offset = "0x76F1CC", VA = "0x76F1CC")]
	public VRTrackerContainer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000282")]
public class VectorSavable
{
	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float x;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float y;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float z;

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x76F224", Offset = "0x76F224", VA = "0x76F224")]
	public VectorSavable(float x = 0f, float y = 0f, float z = 0f)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x76F26C", Offset = "0x76F26C", VA = "0x76F26C")]
	public Vector3 getVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x76F278", Offset = "0x76F278", VA = "0x76F278")]
	public static VectorSavable create(Vector3 vector)
	{
		return null;
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x76F304", Offset = "0x76F304", VA = "0x76F304")]
	public void setVector(Vector3 vector)
	{
	}
}
[Serializable]
[Token(Token = "0x2000283")]
public class Version
{
	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool got;

	[NonSerialized]
	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int primary;

	[NonSerialized]
	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int major;

	[NonSerialized]
	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int minor;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string hotfix;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string versionNum;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string status;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string package;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool allowed;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool betaVersion;

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x76F3A4", Offset = "0x76F3A4", VA = "0x76F3A4")]
	public void GetVersion()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x76F628", Offset = "0x76F628", VA = "0x76F628", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x76F7CC", Offset = "0x76F7CC", VA = "0x76F7CC")]
	public Version()
	{
	}
}
[Serializable]
[Token(Token = "0x2000284")]
public class VoiceData
{
	[Token(Token = "0x2000285")]
	public enum Type
	{
		[Token(Token = "0x4001339")]
		Intro,
		[Token(Token = "0x400133A")]
		IntroOnReturn,
		[Token(Token = "0x400133B")]
		OnRestart,
		[Token(Token = "0x400133C")]
		OnWin,
		[Token(Token = "0x400133D")]
		AfterWeaponHit,
		[Token(Token = "0x400133E")]
		AfterDelay,
		[Token(Token = "0x400133F")]
		AfterSpecialHit,
		[Token(Token = "0x4001340")]
		OnWinFinal,
		[Token(Token = "0x4001341")]
		Hurt,
		[Token(Token = "0x4001342")]
		AfterSpecialFail,
		[Token(Token = "0x4001343")]
		AfterBigHit,
		[Token(Token = "0x4001344")]
		AfterPressurePoint,
		[Token(Token = "0x4001345")]
		AfterFlyingHeadKick
	}

	[Token(Token = "0x2000286")]
	public enum Restriction
	{
		[Token(Token = "0x4001347")]
		Any,
		[Token(Token = "0x4001348")]
		SpecificCharacter,
		[Token(Token = "0x4001349")]
		SameFaction,
		[Token(Token = "0x400134A")]
		NotSameFaction,
		[Token(Token = "0x400134B")]
		YoungOnly,
		[Token(Token = "0x400134C")]
		ContainsWordInName,
		[Token(Token = "0x400134D")]
		SpecificFaction,
		[Token(Token = "0x400134E")]
		ChineseOnly,
		[Token(Token = "0x400134F")]
		AsianOnly
	}

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string words;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clip;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Restriction restriction;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string extraParameter;

	[NonSerialized]
	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int useCount;

	[NonSerialized]
	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float orderNum;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float nextUseTime;

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x770244", Offset = "0x770244", VA = "0x770244")]
	public bool restrictionAllow(CharacterData thisCharacter, CharacterData otherCharacter, float randomAmount)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x7704A8", Offset = "0x7704A8", VA = "0x7704A8")]
	public VoiceData()
	{
	}
}
[Token(Token = "0x2000287")]
public class test : MonoBehaviour
{
	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pivot;

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x75CC70", Offset = "0x75CC70", VA = "0x75CC70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x75CE68", Offset = "0x75CE68", VA = "0x75CE68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x75CE6C", Offset = "0x75CE6C", VA = "0x75CE6C")]
	public test()
	{
	}
}
[Token(Token = "0x2000288")]
public class Vomitter : MonoBehaviour
{
	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float floatHitTestSpawnTimer;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hitTestInterval;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedPerc;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float spawnDuration;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnPerc;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float randomiseAngle;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPoint;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WineBottleHitTest hitTestPrefab;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpecialMoveController move;

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x754DC0", Offset = "0x754DC0", VA = "0x754DC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x754E1C", Offset = "0x754E1C", VA = "0x754E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x755010", Offset = "0x755010", VA = "0x755010")]
	public Vomitter()
	{
	}
}
[Token(Token = "0x2000289")]
public class WalkTest : MonoBehaviour
{
	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x755020", Offset = "0x755020", VA = "0x755020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x755024", Offset = "0x755024", VA = "0x755024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x755334", Offset = "0x755334", VA = "0x755334")]
	public WalkTest()
	{
	}
}
[Token(Token = "0x200028A")]
public class WarningController : MonoBehaviour
{
	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WarningController instance;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float showTimer;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float alpha;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image bg;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color onColor;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpawnPointController attachedTo;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool[] shown;

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x75533C", Offset = "0x75533C", VA = "0x75533C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x7553F0", Offset = "0x7553F0", VA = "0x7553F0")]
	public static void show(SpawnPointController spawnPoint, string text, int index, float showForSeconds)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x75569C", Offset = "0x75569C", VA = "0x75569C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x75589C", Offset = "0x75589C", VA = "0x75589C")]
	public WarningController()
	{
	}
}
[Token(Token = "0x200028B")]
public class WatcherFace : MonoBehaviour
{
	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] eyes;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float changeLooktimer;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform jaw;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float jawClosedX;

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x7558A4", Offset = "0x7558A4", VA = "0x7558A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x755908", Offset = "0x755908", VA = "0x755908")]
	private void updateJaw()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x755948", Offset = "0x755948", VA = "0x755948")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x755D78", Offset = "0x755D78", VA = "0x755D78")]
	public WatcherFace()
	{
	}
}
[Token(Token = "0x200028C")]
public class WaterScroller : MonoBehaviour
{
	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer renderer;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string mainTexture;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string detailTexture;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 mainOffset;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 detailOffset;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float multiply;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 mainSpeed;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 detailSpeed;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject splashPrefab;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider collider;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lastSplash;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float minTime;

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x755D88", Offset = "0x755D88", VA = "0x755D88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x755DDC", Offset = "0x755DDC", VA = "0x755DDC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x755F5C", Offset = "0x755F5C", VA = "0x755F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x756078", Offset = "0x756078", VA = "0x756078")]
	public WaterScroller()
	{
	}
}
[Token(Token = "0x200028D")]
public class WeaponContoller : MonoBehaviour
{
	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip hitSound;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PuppetMasterProp prop;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody rb;

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x7560F4", Offset = "0x7560F4", VA = "0x7560F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x75615C", Offset = "0x75615C", VA = "0x75615C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x7561E0", Offset = "0x7561E0", VA = "0x7561E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x7561E4", Offset = "0x7561E4", VA = "0x7561E4")]
	public WeaponContoller()
	{
	}
}
[Token(Token = "0x200028E")]
public class WebLogging : MonoBehaviour
{
	[Token(Token = "0x200028F")]
	public delegate void OnDone();

	[Token(Token = "0x2000290")]
	public delegate void OnFail(bool allowPlay);

	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9CA8", Offset = "0x4B9CA8")]
	private sealed class <doCheckVersion>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WebLogging <>4__this;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xDB9A2C", Offset = "0xDB9A2C", VA = "0xDB9A2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xDB9A74", Offset = "0xDB9A74", VA = "0xDB9A74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xDB9328", Offset = "0xDB9328", VA = "0xDB9328")]
		[DebuggerHidden]
		public <doCheckVersion>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xDB9354", Offset = "0xDB9354", VA = "0xDB9354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xDB9358", Offset = "0xDB9358", VA = "0xDB9358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xDB9A34", Offset = "0xDB9A34", VA = "0xDB9A34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9CB8", Offset = "0x4B9CB8")]
	private sealed class <sendData>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WebLogging <>4__this;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string data;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xDB9BFC", Offset = "0xDB9BFC", VA = "0xDB9BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xDB9C44", Offset = "0xDB9C44", VA = "0xDB9C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xDB9A7C", Offset = "0xDB9A7C", VA = "0xDB9A7C")]
		[DebuggerHidden]
		public <sendData>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xDB9AA8", Offset = "0xDB9AA8", VA = "0xDB9AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xDB9AAC", Offset = "0xDB9AAC", VA = "0xDB9AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xDB9C04", Offset = "0xDB9C04", VA = "0xDB9C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WebLogging instance;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gameName;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sessionID;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string username;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string userID;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string version;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string versionHotfix;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string url;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x4BD1F8", Offset = "0x4BD1F8")]
	public string response;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool logEditorSessions;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool restrictedAccess;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool allowedAccess;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OnDone onDone;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OnDone onFail;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hadResponse;

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x7561EC", Offset = "0x7561EC", VA = "0x7561EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x7562E8", Offset = "0x7562E8", VA = "0x7562E8")]
	public static void log(string logType, string dataLabel, float numberValue)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x7566DC", Offset = "0x7566DC", VA = "0x7566DC")]
	public void checkVersion(OnDone onDone, OnDone onFail)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x7568BC", Offset = "0x7568BC", VA = "0x7568BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4A84", Offset = "0x4C4A84")]
	private IEnumerator doCheckVersion()
	{
		return null;
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x756928", Offset = "0x756928", VA = "0x756928")]
	private void timeoutCheck()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x7566B0", Offset = "0x7566B0", VA = "0x7566B0")]
	private void doSend(string data)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x7569D0", Offset = "0x7569D0", VA = "0x7569D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4AE4", Offset = "0x4C4AE4")]
	private IEnumerator sendData(string data)
	{
		return null;
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x756A48", Offset = "0x756A48", VA = "0x756A48")]
	public WebLogging()
	{
	}
}
[Token(Token = "0x2000293")]
public class WinLoseDisplay : MonoBehaviour
{
	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI messageText;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI extraMessageText;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform following;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool halfWay;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool fadeOut;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject starContainer;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image[] stars;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite onSprite;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite offSprite;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int existingStars;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int newStars;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float colourPerc;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color extraColourFlash;

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x756A50", Offset = "0x756A50", VA = "0x756A50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x756A78", Offset = "0x756A78", VA = "0x756A78")]
	public void showWin(int existingStars, int newStars, string extra)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x756E60", Offset = "0x756E60", VA = "0x756E60")]
	private void winChecks()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x756C94", Offset = "0x756C94", VA = "0x756C94")]
	public void show(string message, Transform follow, bool halfWay, bool fadeOut, int soundID, string extra = "")
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x756EB8", Offset = "0x756EB8", VA = "0x756EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x757424", Offset = "0x757424", VA = "0x757424")]
	public WinLoseDisplay()
	{
	}
}
[Token(Token = "0x2000294")]
public class WineBottleController : MonoBehaviour
{
	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] particles;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spout;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WineBottleHitTest hitTestPrefab;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool playing;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float angle;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BD210", Offset = "0x4BD210")]
	public float speedPerc;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float hitTestInterval;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float floatHitTestSpawnTimer;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float left;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpecialMoveController move;

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x757B30", Offset = "0x757B30", VA = "0x757B30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x757C98", Offset = "0x757C98", VA = "0x757C98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x758170", Offset = "0x758170", VA = "0x758170")]
	public WineBottleController()
	{
	}
}
[Token(Token = "0x2000295")]
public class WineBottleHitTest : MonoBehaviour
{
	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layers;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gravity;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float effectAmount;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CharacterEffect.Effect addEffect;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hitEffectPrefab;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameCharacter firer;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool ignoreFirer;

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x758180", Offset = "0x758180", VA = "0x758180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x7581FC", Offset = "0x7581FC", VA = "0x7581FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x7587B8", Offset = "0x7587B8", VA = "0x7587B8")]
	public WineBottleHitTest()
	{
	}
}
[Token(Token = "0x2000296")]
public class WingChunDummyController : MonoBehaviour
{
	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WingChunDummyController instance;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leaderBoardAnchor;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hitPointContainer;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WingChunDummyHitPoint[] hitPoints;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HitSurface[] hitParts;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WingChunDummyStep[] sequence;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int onStep;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float resetTimer;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startTime;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float best;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool started;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform spectateCameraPoint;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int laps;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x7587CC", Offset = "0x7587CC", VA = "0x7587CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x758F44", Offset = "0x758F44", VA = "0x758F44")]
	public static bool isPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x75900C", Offset = "0x75900C", VA = "0x75900C")]
	public static Transform spectateCameraPosition()
	{
		return null;
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x758A6C", Offset = "0x758A6C", VA = "0x758A6C")]
	private void showStep()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x7590B8", Offset = "0x7590B8", VA = "0x7590B8")]
	private void hitDummy(Vector3 point, Hittable.HandHitType hitType, HitSurface surface)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x7594A0", Offset = "0x7594A0", VA = "0x7594A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x7598D8", Offset = "0x7598D8", VA = "0x7598D8")]
	public WingChunDummyController()
	{
	}
}
[Token(Token = "0x2000297")]
public class WingChunDummyHitPoint : MonoBehaviour
{
	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hittable.HandHitType[] hitTypes;

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x7593FC", Offset = "0x7593FC", VA = "0x7593FC")]
	public string instruct()
	{
		return null;
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x7598E8", Offset = "0x7598E8", VA = "0x7598E8")]
	public WingChunDummyHitPoint()
	{
	}
}
[Serializable]
[Token(Token = "0x2000298")]
public class WingChunDummyStep
{
	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WingChunDummyHitPoint[] hitPoints;

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x7598F0", Offset = "0x7598F0", VA = "0x7598F0")]
	public WingChunDummyStep()
	{
	}
}
[Token(Token = "0x2000299")]
public class ZombieModeData : MonoBehaviour
{
	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ZombieModeData instance;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchEffect[] switchEffects;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip zombieBreath;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] instaKills;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip music;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bloodEffect;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material zombieSkin;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material zombieEye;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VoiceData voiceOverride;

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x759A90", Offset = "0x759A90", VA = "0x759A90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x759AE0", Offset = "0x759AE0", VA = "0x759AE0")]
	public static bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x759B5C", Offset = "0x759B5C", VA = "0x759B5C")]
	public CharacterEffect.Effect swapEffect(CharacterEffect.Effect effect)
	{
		return default(CharacterEffect.Effect);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x759BCC", Offset = "0x759BCC", VA = "0x759BCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x759BD0", Offset = "0x759BD0", VA = "0x759BD0")]
	public ZombieModeData()
	{
	}
}
[Serializable]
[Token(Token = "0x200029A")]
public class SwitchEffect
{
	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CharacterEffect.Effect switchEffect;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public CharacterEffect.Effect forEffect;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x8E9208", Offset = "0x8E9208", VA = "0x8E9208")]
	public SwitchEffect()
	{
	}
}
[Token(Token = "0x200029B")]
public class BhapticsAndroidBasicExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200029C")]
	public struct BhapticsAndroidExampleButtons
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ping;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Button toggle;
	}

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsAndroidExampleButtons talButtons;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BhapticsAndroidExampleButtons suitButtons;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BhapticsAndroidExampleButtons armsLeftButtons;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BhapticsAndroidExampleButtons armsRightButtons;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text pairedDevicesCount;

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x9B08E4", Offset = "0x9B08E4", VA = "0x9B08E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x9B0A6C", Offset = "0x9B0A6C", VA = "0x9B0A6C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x9B11C8", Offset = "0x9B11C8", VA = "0x9B11C8")]
	public void PingTactal()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x9B1284", Offset = "0x9B1284", VA = "0x9B1284")]
	public void PingTactSuit()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x9B12E0", Offset = "0x9B12E0", VA = "0x9B12E0")]
	public void PingTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x9B1348", Offset = "0x9B1348", VA = "0x9B1348")]
	public void ToggleTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x9B1224", Offset = "0x9B1224", VA = "0x9B1224")]
	private void PingPairedDevice(PositionType deviceType)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x9B177C", Offset = "0x9B177C", VA = "0x9B177C")]
	public BhapticsAndroidBasicExample()
	{
	}
}
[Token(Token = "0x200029D")]
public class BhapticsAndroidScanExample : MonoBehaviour
{
	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_ControlButton[] controlButtons;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button activeButton;

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x9B2BB0", Offset = "0x9B2BB0", VA = "0x9B2BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x9B2DB8", Offset = "0x9B2DB8", VA = "0x9B2DB8")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x9B3080", Offset = "0x9B3080", VA = "0x9B3080")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x9B3098", Offset = "0x9B3098", VA = "0x9B3098")]
	private void Open()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x9B2CC0", Offset = "0x9B2CC0", VA = "0x9B2CC0")]
	private void Close()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x9B3190", Offset = "0x9B3190", VA = "0x9B3190")]
	public BhapticsAndroidScanExample()
	{
	}
}
[Token(Token = "0x200029E")]
public class BhapticsCharacterController : MonoBehaviour
{
	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedH;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationSpeedV;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isEnableControl;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HapticSender tactSender;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD248", Offset = "0x4BD248")]
	public bool IsRaycastingShooting;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform shootingPoint;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD290", Offset = "0x4BD290")]
	private GameObject bulletPrefab;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x9B3198", Offset = "0x9B3198", VA = "0x9B3198")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x9B32E0", Offset = "0x9B32E0", VA = "0x9B32E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x9B330C", Offset = "0x9B330C", VA = "0x9B330C")]
	private void ShootPlayer()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x9B39A0", Offset = "0x9B39A0", VA = "0x9B39A0")]
	private void RotatePlayer()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x9B3844", Offset = "0x9B3844", VA = "0x9B3844")]
	private void MovePlayer()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x9B3BF0", Offset = "0x9B3BF0", VA = "0x9B3BF0")]
	public BhapticsCharacterController()
	{
	}
}
[Token(Token = "0x200029F")]
public class BhapticsCustomHapticReceiver : MonoBehaviour
{
	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PositionTag PositionTag;

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x9B3C54", Offset = "0x9B3C54", VA = "0x9B3C54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x9B3EC8", Offset = "0x9B3EC8", VA = "0x9B3EC8")]
	private void OnTriggerEnter(Collider bullet)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x9B4088", Offset = "0x9B4088", VA = "0x9B4088")]
	private void OnCollisionEnter(Collision bullet)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x9B3F94", Offset = "0x9B3F94", VA = "0x9B3F94")]
	private void Handle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x9B3AD4", Offset = "0x9B3AD4", VA = "0x9B3AD4")]
	public void ReflectHandle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x9B4178", Offset = "0x9B4178", VA = "0x9B4178")]
	public BhapticsCustomHapticReceiver()
	{
	}
}
[Token(Token = "0x20002A0")]
public class BhapticsDotPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<DotPoint> dotPointList;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int duration;

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x9B4188", Offset = "0x9B4188", VA = "0x9B4188")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x9B41F8", Offset = "0x9B41F8", VA = "0x9B41F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x9B41FC", Offset = "0x9B41FC", VA = "0x9B41FC")]
	public void Toggle(DotPoint dot)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x9B4328", Offset = "0x9B4328", VA = "0x9B4328")]
	private bool AddToList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x9B4288", Offset = "0x9B4288", VA = "0x9B4288")]
	private bool RemoveAtList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x9B43C8", Offset = "0x9B43C8", VA = "0x9B43C8")]
	public BhapticsDotPointControllerExample()
	{
	}
}
[Token(Token = "0x20002A1")]
public class BhapticsDotPointExample : MonoBehaviour
{
	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int motorIndex;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BhapticsDotPointControllerExample controller;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotPoint dotPoint;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x9B4460", Offset = "0x9B4460", VA = "0x9B4460")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x9B44F4", Offset = "0x9B44F4", VA = "0x9B44F4")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x9B4584", Offset = "0x9B4584", VA = "0x9B4584")]
	public BhapticsDotPointExample()
	{
	}
}
[Token(Token = "0x20002A2")]
public class BhapticsFpsView : MonoBehaviour
{
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9CC8", Offset = "0x4B9CC8")]
	private sealed class <FPS>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsFpsView <>4__this;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <buffer>5__2;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <frequency>5__4;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <initial>5__5;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <lastFrameCount>5__6;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lastTime>5__7;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x75D8C4", Offset = "0x75D8C4", VA = "0x75D8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x75D90C", Offset = "0x75D90C", VA = "0x75D90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x75D41C", Offset = "0x75D41C", VA = "0x75D41C")]
		[DebuggerHidden]
		public <FPS>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x75D448", Offset = "0x75D448", VA = "0x75D448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x75D44C", Offset = "0x75D44C", VA = "0x75D44C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x75D8CC", Offset = "0x75D8CC", VA = "0x75D8CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x9B4594", Offset = "0x9B4594", VA = "0x9B4594")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x9B45E8", Offset = "0x9B45E8", VA = "0x9B45E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x9B4614", Offset = "0x9B4614", VA = "0x9B4614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4BE4", Offset = "0x4C4BE4")]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x9B4680", Offset = "0x9B4680", VA = "0x9B4680")]
	private float Average(float[] floats)
	{
		return default(float);
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x9B46F4", Offset = "0x9B46F4", VA = "0x9B46F4")]
	public float Percentile(float[] sequence, float excelPercentile)
	{
		return default(float);
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x9B4858", Offset = "0x9B4858", VA = "0x9B4858")]
	public BhapticsFpsView()
	{
	}
}
[Token(Token = "0x20002A4")]
public class BhapticsHapticBullet : MonoBehaviour
{
	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x9B4D5C", Offset = "0x9B4D5C", VA = "0x9B4D5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x9B4DD8", Offset = "0x9B4DD8", VA = "0x9B4DD8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x9B4E50", Offset = "0x9B4E50", VA = "0x9B4E50")]
	public BhapticsHapticBullet()
	{
	}
}
[Token(Token = "0x20002A5")]
public class BhapticsHapticClipExample : MonoBehaviour
{
	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip hapticClip;

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x9B4E58", Offset = "0x9B4E58", VA = "0x9B4E58")]
	public void Play()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x9B4EEC", Offset = "0x9B4EEC", VA = "0x9B4EEC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x9B4F84", Offset = "0x9B4F84", VA = "0x9B4F84")]
	public BhapticsHapticClipExample()
	{
	}
}
[Token(Token = "0x20002A6")]
public class BhapticsIdentifierPlayExample : MonoBehaviour
{
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9CD8", Offset = "0x4B9CD8")]
	private sealed class <PlayCor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsIdentifierPlayExample <>4__this;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <bufferSize>5__2;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <identifier>5__4;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x75DB64", Offset = "0x75DB64", VA = "0x75DB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x75DBAC", Offset = "0x75DBAC", VA = "0x75DBAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x75D914", Offset = "0x75D914", VA = "0x75D914")]
		[DebuggerHidden]
		public <PlayCor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x75D940", Offset = "0x75D940", VA = "0x75D940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x75D944", Offset = "0x75D944", VA = "0x75D944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x75DB6C", Offset = "0x75DB6C", VA = "0x75DB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip clip;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text identifierText;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool applyIdentifier;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x9B4F8C", Offset = "0x9B4F8C", VA = "0x9B4F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x9B4FF8", Offset = "0x9B4FF8", VA = "0x9B4FF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x9B5028", Offset = "0x9B5028", VA = "0x9B5028")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x9B4F90", Offset = "0x9B4F90", VA = "0x9B4F90")]
	private void Play()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x9B511C", Offset = "0x9B511C", VA = "0x9B511C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4C94", Offset = "0x4C4C94")]
	private IEnumerator PlayCor()
	{
		return null;
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x9B5188", Offset = "0x9B5188", VA = "0x9B5188")]
	public BhapticsIdentifierPlayExample()
	{
	}
}
[Token(Token = "0x20002A8")]
public class BhapticsIsConnectIsPlayingExample : MonoBehaviour
{
	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip[] clips;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text isConnectText;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text clipText;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text isPlayingText;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x9B5190", Offset = "0x9B5190", VA = "0x9B5190")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x9B537C", Offset = "0x9B537C", VA = "0x9B537C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x9B5CF8", Offset = "0x9B5CF8", VA = "0x9B5CF8")]
	private void PlayClips()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x9B5D68", Offset = "0x9B5D68", VA = "0x9B5D68")]
	public BhapticsIsConnectIsPlayingExample()
	{
	}
}
[Token(Token = "0x20002A9")]
public class BhapticsLongTest : MonoBehaviour
{
	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x9B5E68", Offset = "0x9B5E68", VA = "0x9B5E68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x9B5EE8", Offset = "0x9B5EE8", VA = "0x9B5EE8")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x9B5F58", Offset = "0x9B5F58", VA = "0x9B5F58")]
	private void ReloadScene()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x9B60D0", Offset = "0x9B60D0", VA = "0x9B60D0")]
	public BhapticsLongTest()
	{
	}
}
[Token(Token = "0x20002AA")]
public class BhapticsPathPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PathPoint> pathPointList;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider targetCollider;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string key;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int duration;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isClickedArea;

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x9B63BC", Offset = "0x9B63BC", VA = "0x9B63BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x9B64BC", Offset = "0x9B64BC", VA = "0x9B64BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x9B6728", Offset = "0x9B6728", VA = "0x9B6728")]
	private Vector2? GetPathPointOffset()
	{
		return null;
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x9B68C0", Offset = "0x9B68C0", VA = "0x9B68C0")]
	private Vector2 ConvertPositionToPathOffset(Vector3 currentPos, BoxCollider currentHitCollider)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x9B6A00", Offset = "0x9B6A00", VA = "0x9B6A00")]
	public BhapticsPathPointControllerExample()
	{
	}
}
[Token(Token = "0x20002AB")]
public class BhapticsProfiler : MonoBehaviour
{
	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numOfTactClips;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] tactClips;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hapticEnable;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int targetFrameRate;

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x9B6A9C", Offset = "0x9B6A9C", VA = "0x9B6A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x9B6B00", Offset = "0x9B6B00", VA = "0x9B6B00")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x9B6D28", Offset = "0x9B6D28", VA = "0x9B6D28")]
	public BhapticsProfiler()
	{
	}
}
[Token(Token = "0x20002AC")]
public class BhapticsReflectExample : MonoBehaviour
{
	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmsHapticClip armsHapticClip;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReflect;

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x9B70DC", Offset = "0x9B70DC", VA = "0x9B70DC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x9B7170", Offset = "0x9B7170", VA = "0x9B7170")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x9B7208", Offset = "0x9B7208", VA = "0x9B7208")]
	public void OnClickToggle(Toggle toggle)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x9B72D4", Offset = "0x9B72D4", VA = "0x9B72D4")]
	public BhapticsReflectExample()
	{
	}
}
[Token(Token = "0x20002AD")]
public class BhapticsRotate : MonoBehaviour
{
	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRandom;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x9B72DC", Offset = "0x9B72DC", VA = "0x9B72DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x9B7334", Offset = "0x9B7334", VA = "0x9B7334")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x9B7384", Offset = "0x9B7384", VA = "0x9B7384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x9B73BC", Offset = "0x9B73BC", VA = "0x9B73BC")]
	private void RandomAxis()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x9B7434", Offset = "0x9B7434", VA = "0x9B7434")]
	public BhapticsRotate()
	{
	}
}
[Token(Token = "0x20002AE")]
public class BhapticsRotateExample : MonoBehaviour
{
	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VestHapticClip vestHapticClip;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4BD33C", Offset = "0x4BD33C")]
	public Text angleXText;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text offsetYText;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angleX;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float offsetY;

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x9B744C", Offset = "0x9B744C", VA = "0x9B744C")]
	public void PlayWithRotate()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x9B7500", Offset = "0x9B7500", VA = "0x9B7500")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x9B7598", Offset = "0x9B7598", VA = "0x9B7598")]
	public void OnAngleXChanged(Slider slider)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x9B767C", Offset = "0x9B767C", VA = "0x9B767C")]
	public void OnOffsetYChanged(Slider slider)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x9B7780", Offset = "0x9B7780", VA = "0x9B7780")]
	public BhapticsRotateExample()
	{
	}
}
[Token(Token = "0x20002AF")]
public class BhapticsShootingCharacter : MonoBehaviour
{
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9CE8", Offset = "0x4B9CE8")]
	private sealed class <RepeatShoot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsShootingCharacter <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x75DCD4", Offset = "0x75DCD4", VA = "0x75DCD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x75DD1C", Offset = "0x75DD1C", VA = "0x75DD1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x75DBB4", Offset = "0x75DBB4", VA = "0x75DBB4")]
		[DebuggerHidden]
		public <RepeatShoot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x75DBE0", Offset = "0x75DBE0", VA = "0x75DBE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x75DBE4", Offset = "0x75DBE4", VA = "0x75DBE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x75DCDC", Offset = "0x75DCDC", VA = "0x75DCDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shootPointLeft;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform shootPointRight;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x4BD38C", Offset = "0x4BD38C")]
	private Transform[] lookingTransforms;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shootDelay;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bulletSpeed;

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x9B7788", Offset = "0x9B7788", VA = "0x9B7788")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x9B77DC", Offset = "0x9B77DC", VA = "0x9B77DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x9B797C", Offset = "0x9B797C", VA = "0x9B797C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x9B7A14", Offset = "0x9B7A14", VA = "0x9B7A14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x9B79A8", Offset = "0x9B79A8", VA = "0x9B79A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4D44", Offset = "0x4C4D44")]
	private IEnumerator RepeatShoot()
	{
		return null;
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x9B7A1C", Offset = "0x9B7A1C", VA = "0x9B7A1C")]
	private void ShootTarget(int hand)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x9B77E0", Offset = "0x9B77E0", VA = "0x9B77E0")]
	private void Looking()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x9B7CB0", Offset = "0x9B7CB0", VA = "0x9B7CB0")]
	public BhapticsShootingCharacter()
	{
	}
}
[Token(Token = "0x20002B1")]
public class BhapticsStreamingTest : MonoBehaviour
{
	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticClip clip;

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x9B7CCC", Offset = "0x9B7CCC", VA = "0x9B7CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x9B7D24", Offset = "0x9B7D24", VA = "0x9B7D24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x9B7D28", Offset = "0x9B7D28", VA = "0x9B7D28")]
	private void Check()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x9B829C", Offset = "0x9B829C", VA = "0x9B829C")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x9B82F4", Offset = "0x9B82F4", VA = "0x9B82F4")]
	public BhapticsStreamingTest()
	{
	}
}
[Token(Token = "0x20002B2")]
public class BhapticsTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x9B82FC", Offset = "0x9B82FC", VA = "0x9B82FC")]
	public BhapticsTeleportPoint()
	{
	}
}
[Token(Token = "0x20002B3")]
public class BhapticsTestScript : MonoBehaviour
{
	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider intensitySlider;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider durationSlider;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider offsetXSlider;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider offsetYSlider;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle reflectToggle;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button openBluetoothSettingButton;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button playButton;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button toggleEnableAllButton;

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x9B8304", Offset = "0x9B8304", VA = "0x9B8304")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x9B8504", Offset = "0x9B8504", VA = "0x9B8504")]
	private void ToggleEnable()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x9B8658", Offset = "0x9B8658", VA = "0x9B8658")]
	private void Open()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x9B86B0", Offset = "0x9B86B0", VA = "0x9B86B0")]
	private void Play()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x9B8898", Offset = "0x9B8898", VA = "0x9B8898")]
	public BhapticsTestScript()
	{
	}
}
[Token(Token = "0x20002B4")]
public class BhapticsVRBody : MonoBehaviour
{
	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform camera;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x9B8A9C", Offset = "0x9B8A9C", VA = "0x9B8A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x9B8AA0", Offset = "0x9B8AA0", VA = "0x9B8AA0")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x9B8B98", Offset = "0x9B8B98", VA = "0x9B8B98")]
	public BhapticsVRBody()
	{
	}
}
[Token(Token = "0x20002B5")]
public class BhapticsVisualFeedbackOnMotors : MonoBehaviour
{
	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PositionType tactPositionType;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualMotorsObject;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient hapticColor;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] visualMotors;

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x9B8BA0", Offset = "0x9B8BA0", VA = "0x9B8BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x9B8E08", Offset = "0x9B8E08", VA = "0x9B8E08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x9B8F10", Offset = "0x9B8F10", VA = "0x9B8F10")]
	private void ShowFeedbackEffect(int[] feedback)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x9B9070", Offset = "0x9B9070", VA = "0x9B9070")]
	public BhapticsVisualFeedbackOnMotors()
	{
	}
}
[Token(Token = "0x20002B6")]
public class BhapticsWidgetInstiate : MonoBehaviour
{
	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_UI widgetPrefab;

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x9B9278", Offset = "0x9B9278", VA = "0x9B9278")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x9B92CC", Offset = "0x9B92CC", VA = "0x9B92CC")]
	private void CreateWidget()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x9B9348", Offset = "0x9B9348", VA = "0x9B9348")]
	public BhapticsWidgetInstiate()
	{
	}
}
[Token(Token = "0x20002B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4B9CF8", Offset = "0x4B9CF8")]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD484", Offset = "0x4BD484")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD4BC", Offset = "0x4BD4BC")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BD4F4", Offset = "0x4BD4F4")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x9B3C44", Offset = "0x9B3C44", VA = "0x9B3C44")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x20002B8")]
public class BhapticsLogger
{
	[Token(Token = "0x20002B9")]
	public enum LogLevel
	{
		[Token(Token = "0x400143D")]
		Debug,
		[Token(Token = "0x400143E")]
		Info,
		[Token(Token = "0x400143F")]
		Error
	}

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x9B2F94", Offset = "0x9B2F94", VA = "0x9B2F94")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x9B3DD8", Offset = "0x9B3DD8", VA = "0x9B3DD8")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x9B5D70", Offset = "0x9B5D70", VA = "0x9B5D70")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x9B5E10", Offset = "0x9B5E10", VA = "0x9B5E10")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x20002BA")]
public class BhapticsManager
{
	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x9B1E4C", Offset = "0x9B1E4C", VA = "0x9B1E4C")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x9B60D8", Offset = "0x9B60D8", VA = "0x9B60D8")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x9B6130", Offset = "0x9B6130", VA = "0x9B6130")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x9B63B0", Offset = "0x9B63B0", VA = "0x9B63B0")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x20002BB")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x9B9078", Offset = "0x9B9078", VA = "0x9B9078")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x9B90CC", Offset = "0x9B90CC", VA = "0x9B90CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x9B9270", Offset = "0x9B9270", VA = "0x9B9270")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x20002BC")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsConfig Config;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BD52C", Offset = "0x4BD52C")]
	public HapticClip gameStart;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HapticClip levelComplete;

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x9B9350", Offset = "0x9B9350", VA = "0x9B9350")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x9B97D8", Offset = "0x9B97D8", VA = "0x9B97D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x9B97F8", Offset = "0x9B97F8", VA = "0x9B97F8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x9B9474", Offset = "0x9B9474", VA = "0x9B9474")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x9B9850", Offset = "0x9B9850", VA = "0x9B9850")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x20002BD")]
public class BenOldingGamesLogoController : MonoBehaviour
{
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9D4C", Offset = "0x4B9D4C")]
	private sealed class <SetEmptyXRDevice>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x75D3CC", Offset = "0x75D3CC", VA = "0x75D3CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x75D414", Offset = "0x75D414", VA = "0x75D414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x75D2F0", Offset = "0x75D2F0", VA = "0x75D2F0")]
		[DebuggerHidden]
		public <SetEmptyXRDevice>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x75D31C", Offset = "0x75D31C", VA = "0x75D31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x75D320", Offset = "0x75D320", VA = "0x75D320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x75D3D4", Offset = "0x75D3D4", VA = "0x75D3D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform holder;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mainMoveMin;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mainMoveSpeed;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float mainRotateSpeed;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform arrows;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material glow;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Light light;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 targetPos;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion targetRotation;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 currentVelocity;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float delay;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float arrowPerc;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float emmisionPerc;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float nextSceneTimer;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool doFadeOut;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool fadeOut;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool done;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem particles;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource audioSource;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool windupSound;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Beautify beautify;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject loadingDisplay;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool doSkip;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip skipSound;

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x9AFEC0", Offset = "0x9AFEC0", VA = "0x9AFEC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x9B0034", Offset = "0x9B0034", VA = "0x9B0034")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C4DF4", Offset = "0x4C4DF4")]
	private IEnumerator SetEmptyXRDevice()
	{
		return null;
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x9B0090", Offset = "0x9B0090", VA = "0x9B0090")]
	public void Skip()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x9B01EC", Offset = "0x9B01EC", VA = "0x9B01EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x9B08C0", Offset = "0x9B08C0", VA = "0x9B08C0")]
	public BenOldingGamesLogoController()
	{
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x20002BF")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xAB9DBC", Offset = "0xAB9DBC", VA = "0xAB9DBC")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xABA7BC", Offset = "0xABA7BC", VA = "0xABA7BC")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xABABF8", Offset = "0xABABF8", VA = "0xABABF8")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xABAD14", Offset = "0xABAD14", VA = "0xABAD14")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xABAE60", Offset = "0xABAE60", VA = "0xABAE60", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xABAFB0", Offset = "0xABAFB0", VA = "0xABAFB0", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xABB154", Offset = "0xABB154", VA = "0xABB154", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xABB258", Offset = "0xABB258", VA = "0xABB258", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xABB3B0", Offset = "0xABB3B0", VA = "0xABB3B0", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xABB464", Offset = "0xABB464", VA = "0xABB464", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xABB59C", Offset = "0xABB59C", VA = "0xABB59C", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xABB6D4", Offset = "0xABB6D4", VA = "0xABB6D4", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xABBC34", Offset = "0xABBC34", VA = "0xABBC34", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xABC270", Offset = "0xABC270", VA = "0xABC270", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xABC304", Offset = "0xABC304", VA = "0xABC304", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xABC5CC", Offset = "0xABC5CC", VA = "0xABC5CC", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xABC5E4", Offset = "0xABC5E4", VA = "0xABC5E4", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xABC708", Offset = "0xABC708", VA = "0xABC708", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xABC97C", Offset = "0xABC97C", VA = "0xABC97C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xABCC14", Offset = "0xABCC14", VA = "0xABCC14", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xABC328", Offset = "0xABC328", VA = "0xABC328")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xABCD74", Offset = "0xABCD74", VA = "0xABCD74", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xABA668", Offset = "0xABA668", VA = "0xABA668")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xABD0AC", Offset = "0xABD0AC", VA = "0xABD0AC")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xABD204", Offset = "0xABD204", VA = "0xABD204")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xABD2B4", Offset = "0xABD2B4", VA = "0xABD2B4")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xABD3B4", Offset = "0xABD3B4", VA = "0xABD3B4")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xABD45C", Offset = "0xABD45C", VA = "0xABD45C")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xABD5B0", Offset = "0xABD5B0", VA = "0xABD5B0")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xABADC4", Offset = "0xABADC4", VA = "0xABADC4")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xABAC74", Offset = "0xABAC74", VA = "0xABAC74")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002C0")]
	public class HapticDevice
	{
		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x8731E8", Offset = "0x8731E8", VA = "0x8731E8")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x20002C2")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6000C66")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C3")]
		private class Device
		{
			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x75D0C8", Offset = "0x75D0C8", VA = "0x75D0C8")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C4")]
		public class StreamHost
		{
			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x75D0D0", Offset = "0x75D0D0", VA = "0x75D0D0")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xF5D6D8", Offset = "0xF5D6D8", VA = "0xF5D6D8")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xF5D6FC", Offset = "0xF5D6FC", VA = "0xF5D6FC")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xF5D8A4", Offset = "0xF5D8A4", VA = "0xF5D8A4")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xF5D8CC", Offset = "0xF5D8CC", VA = "0xF5D8CC")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C61")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xF5D8DC", Offset = "0xF5D8DC", VA = "0xF5D8DC")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xF5D9B8", Offset = "0xF5D9B8", VA = "0xF5D9B8")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xF5DAC8", Offset = "0xF5DAC8", VA = "0xF5DAC8")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xF5DCC8", Offset = "0xF5DCC8", VA = "0xF5DCC8")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C5")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD574", Offset = "0x4BD574")]
		[SerializeField]
		private Sprite defaultImage;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xF5DEC8", Offset = "0xF5DEC8", VA = "0xF5DEC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xF5DF84", Offset = "0xF5DF84", VA = "0xF5DF84")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xF5E54C", Offset = "0xF5E54C", VA = "0xF5E54C")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xF5E5B4", Offset = "0xF5E5B4", VA = "0xF5E5B4")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xF5E650", Offset = "0xF5E650", VA = "0xF5E650")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xF5E658", Offset = "0xF5E658", VA = "0xF5E658")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xF5E7E8", Offset = "0xF5E7E8", VA = "0xF5E7E8")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xF5E8C8", Offset = "0xF5E8C8", VA = "0xF5E8C8")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xF5E978", Offset = "0xF5E978", VA = "0xF5E978")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD630", Offset = "0x4BD630")]
		private Image deviceImage;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD6AC", Offset = "0x4BD6AC")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xF5E980", Offset = "0xF5E980", VA = "0xF5E980")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xF5EA6C", Offset = "0xF5EA6C", VA = "0xF5EA6C")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xF5EC08", Offset = "0xF5EC08", VA = "0xF5EC08")]
		private void OnPing()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xF5EC8C", Offset = "0xF5EC8C", VA = "0xF5EC8C")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xF5ED68", Offset = "0xF5ED68", VA = "0xF5ED68")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xF5ED70", Offset = "0xF5ED70", VA = "0xF5ED70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xF5EDDC", Offset = "0xF5EDDC", VA = "0xF5EDDC")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xF5EDFC", Offset = "0xF5EDFC", VA = "0xF5EDFC")]
		public void Show()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xF5EE1C", Offset = "0xF5EE1C", VA = "0xF5EE1C")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xF5EF40", Offset = "0xF5EF40", VA = "0xF5EF40")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD738", Offset = "0x4BD738")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xF5EF48", Offset = "0xF5EF48", VA = "0xF5EF48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xF5F358", Offset = "0xF5F358", VA = "0xF5F358")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xF5F0F0", Offset = "0xF5F0F0", VA = "0xF5F0F0")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xF5F5E0", Offset = "0xF5F5E0", VA = "0xF5F5E0")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xF5F680", Offset = "0xF5F680", VA = "0xF5F680")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xF5F6A0", Offset = "0xF5F6A0", VA = "0xF5F6A0")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xF5F6C0", Offset = "0xF5F6C0", VA = "0xF5F6C0")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xF5F6DC", Offset = "0xF5F6DC", VA = "0xF5F6DC")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xF5F4C0", Offset = "0xF5F4C0", VA = "0xF5F4C0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xF5F8C0", Offset = "0xF5F8C0", VA = "0xF5F8C0")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CA")]
	public class PositonIconSetting
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x6C8270", Offset = "0x6C8270", VA = "0x6C8270")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CB")]
	public class IconSetting
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD784", Offset = "0x4BD784")]
		public PositonIconSetting Vest;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PositonIconSetting GloveL;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PositonIconSetting GloveR;

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x87C1C0", Offset = "0x87C1C0", VA = "0x87C1C0")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD7BC", Offset = "0x4BD7BC")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD838", Offset = "0x4BD838")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD8C4", Offset = "0x4BD8C4")]
		private GameObject DisconnectMenu;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xF5F8D0", Offset = "0xF5F8D0", VA = "0xF5F8D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xF5FAD0", Offset = "0xF5FAD0", VA = "0xF5FAD0")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xF5FCAC", Offset = "0xF5FCAC", VA = "0xF5FCAC")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xF5FD40", Offset = "0xF5FD40", VA = "0xF5FD40")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xF5FDBC", Offset = "0xF5FDBC", VA = "0xF5FDBC")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xF5FB6C", Offset = "0xF5FB6C", VA = "0xF5FB6C")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xF601FC", Offset = "0xF601FC", VA = "0xF601FC")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xF60220", Offset = "0xF60220", VA = "0xF60220")]
		private void Ping()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xF60298", Offset = "0xF60298", VA = "0xF60298")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xF6037C", Offset = "0xF6037C", VA = "0xF6037C")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xF60460", Offset = "0xF60460", VA = "0xF60460")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xF60094", Offset = "0xF60094", VA = "0xF60094")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xF6004C", Offset = "0xF6004C", VA = "0xF6004C")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xF60070", Offset = "0xF60070", VA = "0xF60070")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xF604AC", Offset = "0xF604AC", VA = "0xF604AC")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BD980", Offset = "0x4BD980")]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xF6057C", Offset = "0xF6057C", VA = "0xF6057C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xF60A44", Offset = "0xF60A44", VA = "0xF60A44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xF60AEC", Offset = "0xF60AEC", VA = "0xF60AEC")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xF61158", Offset = "0xF61158", VA = "0xF61158")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xF611EC", Offset = "0xF611EC", VA = "0xF611EC")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xF61280", Offset = "0xF61280", VA = "0xF61280")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xF612C8", Offset = "0xF612C8", VA = "0xF612C8")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xF61300", Offset = "0xF61300", VA = "0xF61300")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xF61338", Offset = "0xF61338", VA = "0xF61338")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x9B1784", Offset = "0x9B1784", VA = "0x9B1784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x9B18AC", Offset = "0x9B18AC", VA = "0x9B18AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x9B1950", Offset = "0x9B1950", VA = "0x9B1950")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x9B1538", Offset = "0x9B1538", VA = "0x9B1538")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x9B1474", Offset = "0x9B1474", VA = "0x9B1474")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x9B21E0", Offset = "0x9B21E0", VA = "0x9B21E0")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x9B23C0", Offset = "0x9B23C0", VA = "0x9B23C0")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x9B10AC", Offset = "0x9B10AC", VA = "0x9B10AC")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x9B0D14", Offset = "0x9B0D14", VA = "0x9B0D14")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x9B0EE4", Offset = "0x9B0EE4", VA = "0x9B0EE4")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x9B0988", Offset = "0x9B0988", VA = "0x9B0988")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x9B247C", Offset = "0x9B247C", VA = "0x9B247C")]
		public static void RemoveRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x9B2560", Offset = "0x9B2560", VA = "0x9B2560")]
		public static void ClearRefreshAction()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x9B25E4", Offset = "0x9B25E4", VA = "0x9B25E4")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x9B26A4", Offset = "0x9B26A4", VA = "0x9B26A4")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x9B2760", Offset = "0x9B2760", VA = "0x9B2760")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x9B2850", Offset = "0x9B2850", VA = "0x9B2850")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x9B290C", Offset = "0x9B290C", VA = "0x9B290C")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x9B29E0", Offset = "0x9B29E0", VA = "0x9B29E0")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x9B2AA4", Offset = "0x9B2AA4", VA = "0x9B2AA4")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CF")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x837B98", Offset = "0x837B98", VA = "0x837B98")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4BDA0C", Offset = "0x4BDA0C")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x9B9858", Offset = "0x9B9858", VA = "0x9B9858")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x9B99C0", Offset = "0x9B99C0", VA = "0x9B99C0")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class HapticApi
	{
		[Token(Token = "0x20002D2")]
		public struct point
		{
			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x20002D3")]
		public struct status
		{
			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x871C30", Offset = "0x871C30", VA = "0x871C30")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x871CD0", Offset = "0x871CD0", VA = "0x871CD0")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x871D88", Offset = "0x871D88", VA = "0x871D88")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x871DF8", Offset = "0x871DF8", VA = "0x871DF8")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x871EAC", Offset = "0x871EAC", VA = "0x871EAC")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x871F64", Offset = "0x871F64", VA = "0x871F64")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x87201C", Offset = "0x87201C", VA = "0x87201C")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x8720AC", Offset = "0x8720AC", VA = "0x8720AC")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x87214C", Offset = "0x87214C", VA = "0x87214C")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x872234", Offset = "0x872234", VA = "0x872234")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x8722FC", Offset = "0x8722FC", VA = "0x8722FC")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x8723C4", Offset = "0x8723C4", VA = "0x8723C4")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x872460", Offset = "0x872460", VA = "0x872460")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x8724DC", Offset = "0x8724DC", VA = "0x8724DC")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x872578", Offset = "0x872578", VA = "0x872578")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x8725E8", Offset = "0x8725E8", VA = "0x8725E8")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x872678", Offset = "0x872678", VA = "0x872678")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x8726E4", Offset = "0x8726E4", VA = "0x8726E4")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x872754", Offset = "0x872754", VA = "0x872754")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x8727C0", Offset = "0x8727C0", VA = "0x8727C0")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x872848", Offset = "0x872848", VA = "0x872848")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x872914", Offset = "0x872914", VA = "0x872914")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xF6219C", Offset = "0xF6219C", VA = "0xF6219C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xF625C0", Offset = "0xF625C0", VA = "0xF625C0", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xF625E8", Offset = "0xF625E8", VA = "0xF625E8")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x9B4860", Offset = "0x9B4860", VA = "0x9B4860")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x9B48A0", Offset = "0x9B48A0", VA = "0x9B48A0", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x9B48AC", Offset = "0x9B48AC", VA = "0x9B48AC", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x9B4974", Offset = "0x9B4974", VA = "0x9B4974", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x9B4980", Offset = "0x9B4980", VA = "0x9B4980", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x9B498C", Offset = "0x9B498C", VA = "0x9B498C", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x9B4994", Offset = "0x9B4994", VA = "0x9B4994", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x9B49A4", Offset = "0x9B49A4", VA = "0x9B49A4", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x9B49B4", Offset = "0x9B49B4", VA = "0x9B49B4", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x9B4AC8", Offset = "0x9B4AC8", VA = "0x9B4AC8", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x9B4C98", Offset = "0x9B4C98", VA = "0x9B4C98", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x9B4CC4", Offset = "0x9B4CC4", VA = "0x9B4CC4", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x9B4CF4", Offset = "0x9B4CF4", VA = "0x9B4CF4", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x9B4D00", Offset = "0x9B4D00", VA = "0x9B4D00", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x9B4D10", Offset = "0x9B4D10", VA = "0x9B4D10", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x9B4D1C", Offset = "0x9B4D1C", VA = "0x9B4D1C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x9B4D24", Offset = "0x9B4D24", VA = "0x9B4D24", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x9B4D2C", Offset = "0x9B4D2C", VA = "0x9B4D2C", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D6")]
	public class BhapticsProject
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDA44", Offset = "0x4BDA44")]
		private Track[] <Tracks>k__BackingField;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDA54", Offset = "0x4BDA54")]
		private Layout <Layout>k__BackingField;

		[Token(Token = "0x17000066")]
		public Track[] Tracks
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x9B6D40", Offset = "0x9B6D40", VA = "0x9B6D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4EA4", Offset = "0x4C4EA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x9B6D48", Offset = "0x9B6D48", VA = "0x9B6D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4EB4", Offset = "0x4C4EB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public Layout Layout
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x9B6D50", Offset = "0x9B6D50", VA = "0x9B6D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4EC4", Offset = "0x4C4EC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x9B6D58", Offset = "0x9B6D58", VA = "0x9B6D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4ED4", Offset = "0x4C4ED4")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x9B6D60", Offset = "0x9B6D60", VA = "0x9B6D60")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x9B6F70", Offset = "0x9B6F70", VA = "0x9B6F70")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x9B6F68", Offset = "0x9B6F68", VA = "0x9B6F68")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x873CC8", Offset = "0x873CC8", VA = "0x873CC8")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x873D94", Offset = "0x873D94", VA = "0x873D94")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class Track
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDA64", Offset = "0x4BDA64")]
		private HapticEffect[] <Effects>k__BackingField;

		[Token(Token = "0x17000068")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x765AA8", Offset = "0x765AA8", VA = "0x765AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4EE4", Offset = "0x4C4EE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x765AB0", Offset = "0x765AB0", VA = "0x765AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4EF4", Offset = "0x4C4EF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x765AB8", Offset = "0x765AB8", VA = "0x765AB8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x765B40", Offset = "0x765B40", VA = "0x765B40")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x765D38", Offset = "0x765D38", VA = "0x765D38")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x765D30", Offset = "0x765D30", VA = "0x765D30")]
		public Track()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class HapticEffect
	{
		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDA74", Offset = "0x4BDA74")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDA84", Offset = "0x4BDA84")]
		private int <OffsetTime>k__BackingField;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDA94", Offset = "0x4BDA94")]
		private Dictionary<string, HapticEffectMode> <Modes>k__BackingField;

		[Token(Token = "0x17000069")]
		public int StartTime
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x8731F0", Offset = "0x8731F0", VA = "0x8731F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F04", Offset = "0x4C4F04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x8731F8", Offset = "0x8731F8", VA = "0x8731F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F14", Offset = "0x4C4F14")]
			set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public int OffsetTime
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x873200", Offset = "0x873200", VA = "0x873200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F24", Offset = "0x4C4F24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x873208", Offset = "0x873208", VA = "0x873208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F34", Offset = "0x4C4F34")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x873210", Offset = "0x873210", VA = "0x873210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F44", Offset = "0x4C4F44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x873218", Offset = "0x873218", VA = "0x873218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F54", Offset = "0x4C4F54")]
			set
			{
			}
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x873220", Offset = "0x873220", VA = "0x873220", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x873470", Offset = "0x873470", VA = "0x873470")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x87387C", Offset = "0x87387C", VA = "0x87387C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x873700", Offset = "0x873700", VA = "0x873700")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class Layout
	{
		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDAA4", Offset = "0x4BDAA4")]
		private string <Type>k__BackingField;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDAB4", Offset = "0x4BDAB4")]
		private Dictionary<string, LayoutObject[]> <Layouts>k__BackingField;

		[Token(Token = "0x1700006C")]
		public string Type
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x6764C4", Offset = "0x6764C4", VA = "0x6764C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F64", Offset = "0x4C4F64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x6764CC", Offset = "0x6764CC", VA = "0x6764CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F74", Offset = "0x4C4F74")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x6764D4", Offset = "0x6764D4", VA = "0x6764D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F84", Offset = "0x4C4F84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x6764DC", Offset = "0x6764DC", VA = "0x6764DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4F94", Offset = "0x4C4F94")]
			set
			{
			}
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x6764E4", Offset = "0x6764E4", VA = "0x6764E4")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x6769C4", Offset = "0x6769C4", VA = "0x6769C4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x676878", Offset = "0x676878", VA = "0x676878")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class LayoutObject
	{
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDAC4", Offset = "0x4BDAC4")]
		private int <Index>k__BackingField;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDAD4", Offset = "0x4BDAD4")]
		private float <X>k__BackingField;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDAE4", Offset = "0x4BDAE4")]
		private float <Y>k__BackingField;

		[Token(Token = "0x1700006E")]
		public int Index
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x676DFC", Offset = "0x676DFC", VA = "0x676DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4FA4", Offset = "0x4C4FA4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x676E04", Offset = "0x676E04", VA = "0x676E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4FB4", Offset = "0x4C4FB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public float X
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x676E0C", Offset = "0x676E0C", VA = "0x676E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4FC4", Offset = "0x4C4FC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x676E14", Offset = "0x676E14", VA = "0x676E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4FD4", Offset = "0x4C4FD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public float Y
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x676E1C", Offset = "0x676E1C", VA = "0x676E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4FE4", Offset = "0x4C4FE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x676E24", Offset = "0x676E24", VA = "0x676E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C4FF4", Offset = "0x4C4FF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x676880", Offset = "0x676880", VA = "0x676880")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x676CB8", Offset = "0x676CB8", VA = "0x676CB8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x676E2C", Offset = "0x676E2C", VA = "0x676E2C")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class HapticEffectMode
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDAF4", Offset = "0x4BDAF4")]
		private FeedbackMode <Mode>k__BackingField;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB04", Offset = "0x4BDB04")]
		private DotMode <DotMode>k__BackingField;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB14", Offset = "0x4BDB14")]
		private PathMode <PathMode>k__BackingField;

		[Token(Token = "0x17000071")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x873C90", Offset = "0x873C90", VA = "0x873C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5004", Offset = "0x4C5004")]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x873C98", Offset = "0x873C98", VA = "0x873C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5014", Offset = "0x4C5014")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public DotMode DotMode
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x873CA0", Offset = "0x873CA0", VA = "0x873CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5024", Offset = "0x4C5024")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x873CA8", Offset = "0x873CA8", VA = "0x873CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5034", Offset = "0x4C5034")]
			set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public PathMode PathMode
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x873CB0", Offset = "0x873CB0", VA = "0x873CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5044", Offset = "0x4C5044")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x873CB8", Offset = "0x873CB8", VA = "0x873CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5054", Offset = "0x4C5054")]
			set
			{
			}
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x873708", Offset = "0x873708", VA = "0x873708")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x873AF0", Offset = "0x873AF0", VA = "0x873AF0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x873CC0", Offset = "0x873CC0", VA = "0x873CC0")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class DotMode
	{
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB24", Offset = "0x4BDB24")]
		private bool <DotConnected>k__BackingField;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB34", Offset = "0x4BDB34")]
		private DotModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x17000074")]
		public bool DotConnected
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x940478", Offset = "0x940478", VA = "0x940478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5064", Offset = "0x4C5064")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x940480", Offset = "0x940480", VA = "0x940480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5074", Offset = "0x4C5074")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x94048C", Offset = "0x94048C", VA = "0x94048C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5084", Offset = "0x4C5084")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x940494", Offset = "0x940494", VA = "0x940494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5094", Offset = "0x4C5094")]
			set
			{
			}
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x94049C", Offset = "0x94049C", VA = "0x94049C")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x940978", Offset = "0x940978", VA = "0x940978")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x9406CC", Offset = "0x9406CC", VA = "0x9406CC")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB44", Offset = "0x4BDB44")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB54", Offset = "0x4BDB54")]
		private int <EndTime>k__BackingField;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB64", Offset = "0x4BDB64")]
		private DotModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x17000076")]
		public int StartTime
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x940F3C", Offset = "0x940F3C", VA = "0x940F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C50A4", Offset = "0x4C50A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x940F44", Offset = "0x940F44", VA = "0x940F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C50B4", Offset = "0x4C50B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public int EndTime
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x940F4C", Offset = "0x940F4C", VA = "0x940F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C50C4", Offset = "0x4C50C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x940F54", Offset = "0x940F54", VA = "0x940F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C50D4", Offset = "0x4C50D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x940F5C", Offset = "0x940F5C", VA = "0x940F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C50E4", Offset = "0x4C50E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x940F64", Offset = "0x940F64", VA = "0x940F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C50F4", Offset = "0x4C50F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x9406D4", Offset = "0x9406D4", VA = "0x9406D4")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x940B08", Offset = "0x940B08", VA = "0x940B08")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x940F6C", Offset = "0x940F6C", VA = "0x940F6C")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class DotModeObject
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB74", Offset = "0x4BDB74")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB84", Offset = "0x4BDB84")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x17000079")]
		public int Index
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x940D4C", Offset = "0x940D4C", VA = "0x940D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5104", Offset = "0x4C5104")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x940D54", Offset = "0x940D54", VA = "0x940D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5114", Offset = "0x4C5114")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public float Intensity
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x940D5C", Offset = "0x940D5C", VA = "0x940D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5124", Offset = "0x4C5124")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x940D64", Offset = "0x940D64", VA = "0x940D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5134", Offset = "0x4C5134")]
			set
			{
			}
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x940D6C", Offset = "0x940D6C", VA = "0x940D6C")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x940E30", Offset = "0x940E30", VA = "0x940E30")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x940E28", Offset = "0x940E28", VA = "0x940E28")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class PathMode
	{
		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDB94", Offset = "0x4BDB94")]
		private PathModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x1700007B")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x6C3424", Offset = "0x6C3424", VA = "0x6C3424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5144", Offset = "0x4C5144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x6C342C", Offset = "0x6C342C", VA = "0x6C342C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5154", Offset = "0x4C5154")]
			set
			{
			}
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x6C3434", Offset = "0x6C3434", VA = "0x6C3434")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x6C38CC", Offset = "0x6C38CC", VA = "0x6C38CC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x6C3608", Offset = "0x6C3608", VA = "0x6C3608")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDBA4", Offset = "0x4BDBA4")]
		private PathModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x1700007C")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x6C3F20", Offset = "0x6C3F20", VA = "0x6C3F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5164", Offset = "0x4C5164")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x6C3F28", Offset = "0x6C3F28", VA = "0x6C3F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5174", Offset = "0x4C5174")]
			set
			{
			}
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x6C3610", Offset = "0x6C3610", VA = "0x6C3610")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x6C39F0", Offset = "0x6C39F0", VA = "0x6C39F0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x6C3F30", Offset = "0x6C3F30", VA = "0x6C3F30")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class PathModeObject
	{
		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDBB4", Offset = "0x4BDBB4")]
		private float <X>k__BackingField;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDBC4", Offset = "0x4BDBC4")]
		private float <Y>k__BackingField;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDBD4", Offset = "0x4BDBD4")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BDBE4", Offset = "0x4BDBE4")]
		private int <Time>k__BackingField;

		[Token(Token = "0x1700007D")]
		public float X
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x6C3C4C", Offset = "0x6C3C4C", VA = "0x6C3C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5184", Offset = "0x4C5184")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x6C3C54", Offset = "0x6C3C54", VA = "0x6C3C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5194", Offset = "0x4C5194")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public float Y
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x6C3C5C", Offset = "0x6C3C5C", VA = "0x6C3C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C51A4", Offset = "0x4C51A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x6C3C64", Offset = "0x6C3C64", VA = "0x6C3C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C51B4", Offset = "0x4C51B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public float Intensity
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x6C3C6C", Offset = "0x6C3C6C", VA = "0x6C3C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C51C4", Offset = "0x4C51C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x6C3C74", Offset = "0x6C3C74", VA = "0x6C3C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C51D4", Offset = "0x4C51D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public int Time
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x6C3C7C", Offset = "0x6C3C7C", VA = "0x6C3C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C51E4", Offset = "0x4C51E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x6C3C84", Offset = "0x6C3C84", VA = "0x6C3C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C51F4", Offset = "0x4C51F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x6C3C8C", Offset = "0x6C3C8C", VA = "0x6C3C8C")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x6C3DA4", Offset = "0x6C3DA4", VA = "0x6C3DA4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x6C3D9C", Offset = "0x6C3D9C", VA = "0x6C3D9C")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	internal class ParseUtil
	{
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x6C16BC", Offset = "0x6C16BC", VA = "0x6C16BC")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x6C181C", Offset = "0x6C181C", VA = "0x6C181C")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x6C197C", Offset = "0x6C197C", VA = "0x6C197C")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class BhapticsUtils
	{
		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x400150E")]
		public const string TypeHead = "Head";

		[Token(Token = "0x400150F")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4001510")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4001511")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4001512")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4001513")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x4001514")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x4001515")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x4001516")]
		public const string TypeGlove = "Glove";

		[Token(Token = "0x6000D45")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x9B88A0", Offset = "0x9B88A0", VA = "0x9B88A0")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x9B88E4", Offset = "0x9B88E4", VA = "0x9B88E4")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x9B88EC", Offset = "0x9B88EC", VA = "0x9B88EC")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x9B88F4", Offset = "0x9B88F4", VA = "0x9B88F4")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x9B8914", Offset = "0x9B8914", VA = "0x9B8914")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x9B8918", Offset = "0x9B8918", VA = "0x9B8918")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x9B8A38", Offset = "0x9B8A38", VA = "0x9B8A38")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x9B68A0", Offset = "0x9B68A0", VA = "0x9B68A0")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x9B0CB0", Offset = "0x9B0CB0", VA = "0x9B0CB0")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x9B8A90", Offset = "0x9B8A90", VA = "0x9B8A90")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x84DFAC", Offset = "0x84DFAC", VA = "0x84DFAC")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDBF4", Offset = "0x4BDBF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BDBF4", Offset = "0x4BDBF4")]
		public float Intensity;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BDC4C", Offset = "0x4BDC4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDC4C", Offset = "0x4BDC4C")]
		public float Duration;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x17000081")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x84EB78", Offset = "0x84EB78", VA = "0x84EB78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x84EC6C", Offset = "0x84EC6C", VA = "0x84EC6C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x84ECCC", Offset = "0x84ECCC", VA = "0x84ECCC", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x84ECE4", Offset = "0x84ECE4", VA = "0x84ECE4", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x84ECFC", Offset = "0x84ECFC", VA = "0x84ECFC", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x84ED10", Offset = "0x84ED10", VA = "0x84ED10", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x84ED20", Offset = "0x84ED20", VA = "0x84ED20", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x84EE50", Offset = "0x84EE50", VA = "0x84EE50", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x84EF68", Offset = "0x84EF68", VA = "0x84EF68", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x84F200", Offset = "0x84F200", VA = "0x84F200", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x84EBB4", Offset = "0x84EBB4", VA = "0x84EBB4")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x84F22C", Offset = "0x84F22C", VA = "0x84F22C")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class GloveHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x9306B8", Offset = "0x9306B8", VA = "0x9306B8")]
		public GloveHapticClip()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x8709A0", Offset = "0x8709A0", VA = "0x8709A0")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x400151D")]
		None,
		[Token(Token = "0x400151E")]
		Tactal,
		[Token(Token = "0x400151F")]
		TactSuit,
		[Token(Token = "0x4001520")]
		Tactosy_arms,
		[Token(Token = "0x4001521")]
		Tactosy_hands,
		[Token(Token = "0x4001522")]
		Tactosy_feet,
		[Token(Token = "0x4001523")]
		TactGlove
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x4001525")]
		VestFront,
		[Token(Token = "0x4001526")]
		VestBack,
		[Token(Token = "0x4001527")]
		Head,
		[Token(Token = "0x4001528")]
		RightForearm,
		[Token(Token = "0x4001529")]
		LeftForearm,
		[Token(Token = "0x400152A")]
		LeftHand,
		[Token(Token = "0x400152B")]
		RightHand,
		[Token(Token = "0x400152C")]
		LeftFoot,
		[Token(Token = "0x400152D")]
		RightFoot,
		[Token(Token = "0x400152E")]
		LeftGlove,
		[Token(Token = "0x400152F")]
		RightGlove
	}
	[Token(Token = "0x20002EB")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x87291C", Offset = "0x87291C", VA = "0x87291C", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x872980", Offset = "0x872980", VA = "0x872980", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x87299C", Offset = "0x87299C", VA = "0x87299C", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x8729B4", Offset = "0x8729B4", VA = "0x8729B4", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x8729C8", Offset = "0x8729C8", VA = "0x8729C8", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x8729D8", Offset = "0x8729D8", VA = "0x8729D8", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x872B08", Offset = "0x872B08", VA = "0x872B08", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x872C1C", Offset = "0x872C1C", VA = "0x872C1C", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x872D28", Offset = "0x872D28", VA = "0x872D28", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x872D2C", Offset = "0x872D2C", VA = "0x872D2C", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x872E14", Offset = "0x872E14", VA = "0x872E14", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x872F28", Offset = "0x872F28", VA = "0x872F28", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x87301C", Offset = "0x87301C", VA = "0x87301C", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x873130", Offset = "0x873130", VA = "0x873130", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x873134", Offset = "0x873134", VA = "0x873134")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x87313C", Offset = "0x87313C", VA = "0x87313C")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x873D9C", Offset = "0x873D9C", VA = "0x873D9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x873F24", Offset = "0x873F24", VA = "0x873F24")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x873F28", Offset = "0x873F28", VA = "0x873F28")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x873F2C", Offset = "0x873F2C", VA = "0x873F2C")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x873FD4", Offset = "0x873FD4", VA = "0x873FD4")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x873FE4", Offset = "0x873FE4", VA = "0x873FE4")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x874258", Offset = "0x874258", VA = "0x874258")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x874370", Offset = "0x874370", VA = "0x874370")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x874480", Offset = "0x874480", VA = "0x874480")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x8745B4", Offset = "0x8745B4", VA = "0x8745B4")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x8746DC", Offset = "0x8746DC", VA = "0x8746DC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x873FF0", Offset = "0x873FF0", VA = "0x873FF0")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x8746E4", Offset = "0x8746E4", VA = "0x8746E4")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public enum PositionTag
	{
		[Token(Token = "0x400153B")]
		Body,
		[Token(Token = "0x400153C")]
		Head,
		[Token(Token = "0x400153D")]
		LeftArm,
		[Token(Token = "0x400153E")]
		RightArm,
		[Token(Token = "0x400153F")]
		Default
	}
	[Token(Token = "0x20002EF")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9D5C", Offset = "0x4B9D5C")]
		private sealed class <PlayCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x17000082")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D8C")]
				[Address(RVA = "0x762800", Offset = "0x762800", VA = "0x762800", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000083")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D8E")]
				[Address(RVA = "0x762848", Offset = "0x762848", VA = "0x762848", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x762704", Offset = "0x762704", VA = "0x762704")]
			[DebuggerHidden]
			public <PlayCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x762730", Offset = "0x762730", VA = "0x762730", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x762734", Offset = "0x762734", VA = "0x762734", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x762808", Offset = "0x762808", VA = "0x762808", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4B9D6C", Offset = "0x4B9D6C")]
		private sealed class <PlayLoopCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400154D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x17000084")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D92")]
				[Address(RVA = "0x762A50", Offset = "0x762A50", VA = "0x762A50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000085")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D94")]
				[Address(RVA = "0x762A98", Offset = "0x762A98", VA = "0x762A98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x762850", Offset = "0x762850", VA = "0x762850")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x76287C", Offset = "0x76287C", VA = "0x76287C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x762880", Offset = "0x762880", VA = "0x762880", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x762A58", Offset = "0x762A58", VA = "0x762A58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x8746F4", Offset = "0x8746F4", VA = "0x8746F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x874A00", Offset = "0x874A00", VA = "0x874A00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x874D1C", Offset = "0x874D1C", VA = "0x874D1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x874DEC", Offset = "0x874DEC", VA = "0x874DEC")]
		public void Play()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x874A1C", Offset = "0x874A1C", VA = "0x874A1C")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x874E5C", Offset = "0x874E5C", VA = "0x874E5C")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x874D20", Offset = "0x874D20", VA = "0x874D20")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x87506C", Offset = "0x87506C", VA = "0x87506C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x874FF0", Offset = "0x874FF0", VA = "0x874FF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5204", Offset = "0x4C5204")]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x874BA4", Offset = "0x874BA4", VA = "0x874BA4")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x874DF0", Offset = "0x874DF0", VA = "0x874DF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5264", Offset = "0x4C5264")]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x875108", Offset = "0x875108", VA = "0x875108")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x875110", Offset = "0x875110", VA = "0x875110")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public interface IHaptic
	{
		[Token(Token = "0x6000D96")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x6000D97")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x6000D98")]
		bool IsPlaying(string key);

		[Token(Token = "0x6000D99")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x6000D9A")]
		bool IsPlaying();

		[Token(Token = "0x6000D9B")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x6000D9C")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x6000D9D")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x6000D9E")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x6000D9F")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x6000DA0")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x6000DA1")]
		void SubmitRegistered(string key);

		[Token(Token = "0x6000DA2")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x6000DA3")]
		void TurnOff(string key);

		[Token(Token = "0x6000DA4")]
		void TurnOff();

		[Token(Token = "0x6000DA5")]
		void Dispose();

		[Token(Token = "0x6000DA6")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4B9D7C", Offset = "0x4B9D7C")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDCF4", Offset = "0x4BDCF4")]
		public int TimeMillis;

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x839A98", Offset = "0x839A98", VA = "0x839A98", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x839FBC", Offset = "0x839FBC", VA = "0x839FBC", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x839D4C", Offset = "0x839D4C", VA = "0x839D4C")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x839E7C", Offset = "0x839E7C", VA = "0x839E7C")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x83A058", Offset = "0x83A058", VA = "0x83A058")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F5")]
	public class Point
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDD10", Offset = "0x4BDD10")]
		public float X;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDD28", Offset = "0x4BDD28")]
		public float Y;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDD40", Offset = "0x4BDD40")]
		public int Intensity;

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x6C4C90", Offset = "0x6C4C90", VA = "0x6C4C90")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F6")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x4001559")]
		DotMode = 1,
		[Token(Token = "0x400155A")]
		PathMode
	}
	[Token(Token = "0x20002F7")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDD5C", Offset = "0x4BDD5C")]
		[SerializeField]
		protected float TactFileAngleX;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDDA0", Offset = "0x4BDDA0")]
		protected float TactFileOffsetY;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x76F7D4", Offset = "0x76F7D4", VA = "0x76F7D4", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x76F834", Offset = "0x76F834", VA = "0x76F834", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x76F84C", Offset = "0x76F84C", VA = "0x76F84C", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x76F864", Offset = "0x76F864", VA = "0x76F864", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x76F878", Offset = "0x76F878", VA = "0x76F878", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x76F888", Offset = "0x76F888", VA = "0x76F888", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x76FB4C", Offset = "0x76FB4C", VA = "0x76FB4C", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x76FB74", Offset = "0x76FB74", VA = "0x76FB74")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x76FC14", Offset = "0x76FC14", VA = "0x76FC14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x76FF98", Offset = "0x76FF98", VA = "0x76FF98")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x770064", Offset = "0x770064", VA = "0x770064")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x77022C", Offset = "0x77022C", VA = "0x77022C")]
		public VisualFeedback()
		{
		}
	}
}
namespace DynamicFogAndMist
{
	[Token(Token = "0x20002F9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4B9DC8", Offset = "0x4B9DC8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4B9DC8", Offset = "0x4B9DC8")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFog : DynamicFogBase
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x944900", Offset = "0x944900", VA = "0x944900")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x945730", Offset = "0x945730", VA = "0x945730")]
		public DynamicFog()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public enum FOG_TYPE
	{
		[Token(Token = "0x4001565")]
		DesktopFogWithSkyHaze,
		[Token(Token = "0x4001566")]
		MobileFogWithSkyHaze,
		[Token(Token = "0x4001567")]
		MobileFogOnlyGround,
		[Token(Token = "0x4001568")]
		DesktopFogPlusWithSkyHaze,
		[Token(Token = "0x4001569")]
		MobileFogSimple,
		[Token(Token = "0x400156A")]
		MobileFogBasic,
		[Token(Token = "0x400156B")]
		MobileFogOrthogonal,
		[Token(Token = "0x400156C")]
		DesktopFogPlusOrthogonal
	}
	[Token(Token = "0x20002FB")]
	internal static class FOG_TYPE_Ext
	{
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x848250", Offset = "0x848250", VA = "0x848250")]
		public static bool isPlus(this FOG_TYPE fogType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002FC")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x400156E")]
		Clear,
		[Token(Token = "0x400156F")]
		Mist,
		[Token(Token = "0x4001570")]
		WindyMist,
		[Token(Token = "0x4001571")]
		GroundFog,
		[Token(Token = "0x4001572")]
		Fog,
		[Token(Token = "0x4001573")]
		HeavyFog,
		[Token(Token = "0x4001574")]
		SandStorm,
		[Token(Token = "0x4001575")]
		Custom
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4B9E7C", Offset = "0x4B9E7C")]
	public class DynamicFogBase : MonoBehaviour
	{
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FOG_TYPE _effectType;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DynamicFogProfile _profile;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _profileSync;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _enableDithering;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDE40", Offset = "0x4BDE40")]
		private float _ditherStrength;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDE84", Offset = "0x4BDE84")]
		[SerializeField]
		protected float _alpha;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDEC4", Offset = "0x4BDEC4")]
		private float _noiseStrength;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDF04", Offset = "0x4BDF04")]
		private float _noiseScale;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDF48", Offset = "0x4BDF48")]
		private float _distance;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDF8C", Offset = "0x4BDF8C")]
		private float _distanceFallOff;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BDFD0", Offset = "0x4BDFD0")]
		private float _maxDistance;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE014", Offset = "0x4BE014")]
		[SerializeField]
		private float _maxDistanceFallOff;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE058", Offset = "0x4BE058")]
		private float _height;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE09C", Offset = "0x4BE09C")]
		private float _maxHeight;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE0E0", Offset = "0x4BE0E0")]
		private float _heightFallOff;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool _clipUnderBaseline;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE144", Offset = "0x4BE144")]
		private float _turbulence;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE184", Offset = "0x4BE184")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Color _color2;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE1F4", Offset = "0x4BE1F4")]
		private float _skyHaze;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE238", Offset = "0x4BE238")]
		private float _skySpeed;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE278", Offset = "0x4BE278")]
		private float _skyNoiseStrength;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE2B8", Offset = "0x4BE2B8")]
		private float _skyAlpha;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[SerializeField]
		private bool _useXZDistance;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE368", Offset = "0x4BE368")]
		private float _scattering;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Color _scatteringColor;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material fogMatAdv;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material fogMatFogSky;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material fogMatOnlyFog;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material fogMatVol;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material fogMatSimple;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material fogMatBasic;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material fogMatOrthogonal;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material fogMatDesktopPlusOrthogonal;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		protected Material fogMat;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float initialFogAlpha;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float targetFogAlpha;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool targetFogColors;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Color initialFogColor1;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Color targetFogColor1;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Color initialFogColor2;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Color targetFogColor2;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float transitionDuration;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float transitionStartTime;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float currentFogAlpha;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool transitionAlpha;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		private bool transitionColor;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		private bool transitionProfile;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private DynamicFogProfile initialProfile;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private DynamicFogProfile targetProfile;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Color currentFogColor1;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Color currentFogColor2;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected Camera currentCamera;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Light sunLight;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 sunDirection;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private Color sunColor;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float sunIntensity;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFog _fog;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private List<string> shaderKeywords;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected bool matOrtho;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		protected bool shouldUpdateMaterialProperties;

		[Token(Token = "0x17000086")]
		public FOG_TYPE effectType
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x945870", Offset = "0x945870", VA = "0x945870")]
			get
			{
				return default(FOG_TYPE);
			}
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x945878", Offset = "0x945878", VA = "0x945878")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x94590C", Offset = "0x94590C", VA = "0x94590C")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x945914", Offset = "0x945914", VA = "0x945914")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public DynamicFogProfile profile
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x94592C", Offset = "0x94592C", VA = "0x94592C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x945934", Offset = "0x945934", VA = "0x945934")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public bool profileSync
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x945A2C", Offset = "0x945A2C", VA = "0x945A2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x945A34", Offset = "0x945A34", VA = "0x945A34")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x945A54", Offset = "0x945A54", VA = "0x945A54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x945A5C", Offset = "0x945A5C", VA = "0x945A5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public bool enableDithering
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x945A7C", Offset = "0x945A7C", VA = "0x945A7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x945A84", Offset = "0x945A84", VA = "0x945A84")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public float ditherStrength
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x945AE0", Offset = "0x945AE0", VA = "0x945AE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x945AE8", Offset = "0x945AE8", VA = "0x945AE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public float alpha
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x945B38", Offset = "0x945B38", VA = "0x945B38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x945B40", Offset = "0x945B40", VA = "0x945B40")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public float noiseStrength
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x945B60", Offset = "0x945B60", VA = "0x945B60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x945B68", Offset = "0x945B68", VA = "0x945B68")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public float noiseScale
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x945B88", Offset = "0x945B88", VA = "0x945B88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x945B90", Offset = "0x945B90", VA = "0x945B90")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public float distance
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x945BE8", Offset = "0x945BE8", VA = "0x945BE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x945BF0", Offset = "0x945BF0", VA = "0x945BF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public float distanceFallOff
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x945C10", Offset = "0x945C10", VA = "0x945C10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x945C18", Offset = "0x945C18", VA = "0x945C18")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public float maxDistance
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x945C38", Offset = "0x945C38", VA = "0x945C38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x945C40", Offset = "0x945C40", VA = "0x945C40")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public float maxDistanceFallOff
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x945C60", Offset = "0x945C60", VA = "0x945C60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x945C68", Offset = "0x945C68", VA = "0x945C68")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public float height
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x945C88", Offset = "0x945C88", VA = "0x945C88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x945C90", Offset = "0x945C90", VA = "0x945C90")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public float maxHeight
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x945CB0", Offset = "0x945CB0", VA = "0x945CB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x945CB8", Offset = "0x945CB8", VA = "0x945CB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public float heightFallOff
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x945D10", Offset = "0x945D10", VA = "0x945D10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x945D18", Offset = "0x945D18", VA = "0x945D18")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public float baselineHeight
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x945D38", Offset = "0x945D38", VA = "0x945D38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x945D40", Offset = "0x945D40", VA = "0x945D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public bool clipUnderBaseline
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x945D90", Offset = "0x945D90", VA = "0x945D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x945D98", Offset = "0x945D98", VA = "0x945D98")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public float turbulence
		{
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x945DF4", Offset = "0x945DF4", VA = "0x945DF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x945DFC", Offset = "0x945DFC", VA = "0x945DFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public float speed
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x945E1C", Offset = "0x945E1C", VA = "0x945E1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x945E24", Offset = "0x945E24", VA = "0x945E24")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x945E44", Offset = "0x945E44", VA = "0x945E44")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x945E50", Offset = "0x945E50", VA = "0x945E50")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public Color color
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x945ED0", Offset = "0x945ED0", VA = "0x945ED0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x945EDC", Offset = "0x945EDC", VA = "0x945EDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public Color color2
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x945F54", Offset = "0x945F54", VA = "0x945F54")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x945F60", Offset = "0x945F60", VA = "0x945F60")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public float skyHaze
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x945FD8", Offset = "0x945FD8", VA = "0x945FD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x945FE0", Offset = "0x945FE0", VA = "0x945FE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public float skySpeed
		{
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x946000", Offset = "0x946000", VA = "0x946000")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x946008", Offset = "0x946008", VA = "0x946008")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x946028", Offset = "0x946028", VA = "0x946028")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x946030", Offset = "0x946030", VA = "0x946030")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public float skyAlpha
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x946050", Offset = "0x946050", VA = "0x946050")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x946058", Offset = "0x946058", VA = "0x946058")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public GameObject sun
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x946078", Offset = "0x946078", VA = "0x946078")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x946080", Offset = "0x946080", VA = "0x946080")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x94612C", Offset = "0x94612C", VA = "0x94612C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x946134", Offset = "0x946134", VA = "0x946134")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x946190", Offset = "0x946190", VA = "0x946190")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x94619C", Offset = "0x94619C", VA = "0x94619C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x94621C", Offset = "0x94621C", VA = "0x94621C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x946228", Offset = "0x946228", VA = "0x946228")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x9462A8", Offset = "0x9462A8", VA = "0x9462A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x9462B0", Offset = "0x9462B0", VA = "0x9462B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x946300", Offset = "0x946300", VA = "0x946300")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x946308", Offset = "0x946308", VA = "0x946308")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public bool useXZDistance
		{
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x946364", Offset = "0x946364", VA = "0x946364")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x94636C", Offset = "0x94636C", VA = "0x94636C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public float scattering
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x9463C8", Offset = "0x9463C8", VA = "0x9463C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x9463D0", Offset = "0x9463D0", VA = "0x9463D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public Color scatteringColor
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x946420", Offset = "0x946420", VA = "0x946420")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x94642C", Offset = "0x94642C", VA = "0x94642C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public static DynamicFog instance
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x9464B0", Offset = "0x9464B0", VA = "0x9464B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x946704", Offset = "0x946704", VA = "0x946704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x94660C", Offset = "0x94660C", VA = "0x94660C")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x94670C", Offset = "0x94670C", VA = "0x94670C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x946804", Offset = "0x946804", VA = "0x946804")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x946808", Offset = "0x946808", VA = "0x946808")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x946730", Offset = "0x946730", VA = "0x946730")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x946CCC", Offset = "0x946CCC", VA = "0x946CCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x947754", Offset = "0x947754", VA = "0x947754")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x947760", Offset = "0x947760", VA = "0x947760")]
		public void CheckPreset()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x9484FC", Offset = "0x9484FC", VA = "0x9484FC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x9485A0", Offset = "0x9485A0", VA = "0x9485A0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x9456E0", Offset = "0x9456E0", VA = "0x9456E0")]
		protected void ResetMaterial()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x9458CC", Offset = "0x9458CC", VA = "0x9458CC")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x944C5C", Offset = "0x944C5C", VA = "0x944C5C")]
		protected void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x9488FC", Offset = "0x9488FC", VA = "0x9488FC")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x9472EC", Offset = "0x9472EC", VA = "0x9472EC")]
		private void SetSkyData()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x947374", Offset = "0x947374", VA = "0x947374")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x948928", Offset = "0x948928", VA = "0x948928")]
		public void SetTargetProfile(DynamicFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x9489E4", Offset = "0x9489E4", VA = "0x9489E4")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x9489EC", Offset = "0x9489EC", VA = "0x9489EC")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x948A78", Offset = "0x948A78", VA = "0x948A78")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x948A88", Offset = "0x948A88", VA = "0x948A88")]
		public void SetTargetColors(Color color1, Color color2, float duration)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x948B80", Offset = "0x948B80", VA = "0x948B80")]
		public void ClearTargetColors(float duration)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x948BB8", Offset = "0x948BB8", VA = "0x948BB8")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x946BD4", Offset = "0x946BD4", VA = "0x946BD4")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x948F10", Offset = "0x948F10", VA = "0x948F10")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x9492CC", Offset = "0x9492CC", VA = "0x9492CC")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x948D98", Offset = "0x948D98", VA = "0x948D98")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x948D54", Offset = "0x948D54", VA = "0x948D54")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x945734", Offset = "0x945734", VA = "0x945734")]
		public DynamicFogBase()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4B9EB4", Offset = "0x4B9EB4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4B9EB4", Offset = "0x4B9EB4")]
	[ExecuteInEditMode]
	public class DynamicFogExclusive : DynamicFogBase
	{
		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private RenderTexture rt;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE3C8", Offset = "0x4BE3C8")]
		public float renderScale;

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x94959C", Offset = "0x94959C", VA = "0x94959C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x94980C", Offset = "0x94980C", VA = "0x94980C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x949B48", Offset = "0x949B48", VA = "0x949B48")]
		public DynamicFogExclusive()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4B9F58", Offset = "0x4B9F58")]
	[ExecuteInEditMode]
	public class DynamicFogManager : MonoBehaviour
	{
		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE3E4", Offset = "0x4BE3E4")]
		public float alpha;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE3FC", Offset = "0x4BE3FC")]
		public float noiseStrength;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE414", Offset = "0x4BE414")]
		public float distance;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE430", Offset = "0x4BE430")]
		public float distanceFallOff;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE448", Offset = "0x4BE448")]
		public float height;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE464", Offset = "0x4BE464")]
		public float heightFallOff;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baselineHeight;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject sun;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Light sunLight;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 sunDirection;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color sunColor;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float sunIntensity;

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x949B54", Offset = "0x949B54", VA = "0x949B54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x949B9C", Offset = "0x949B9C", VA = "0x949B9C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x949BC0", Offset = "0x949BC0", VA = "0x949BC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x949B78", Offset = "0x949B78", VA = "0x949B78")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x949F74", Offset = "0x949F74", VA = "0x949F74")]
		private void UpdateFogData()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x949D00", Offset = "0x949D00", VA = "0x949D00")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x94A064", Offset = "0x94A064", VA = "0x94A064")]
		public DynamicFogManager()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[ExecuteInEditMode]
	public class DynamicFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fogOfWarTextureSize;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material fogMat;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFogOfWar _instance;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x170000AD")]
		public static DynamicFogOfWar instance
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x842B84", Offset = "0x842B84", VA = "0x842B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x842C64", Offset = "0x842C64", VA = "0x842C64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x842DC0", Offset = "0x842DC0", VA = "0x842DC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x842E68", Offset = "0x842E68", VA = "0x842E68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x842CCC", Offset = "0x842CCC", VA = "0x842CCC")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x842F74", Offset = "0x842F74", VA = "0x842F74")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x843130", Offset = "0x843130", VA = "0x843130")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x843338", Offset = "0x843338", VA = "0x843338")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x842FB8", Offset = "0x842FB8", VA = "0x842FB8")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x843770", Offset = "0x843770", VA = "0x843770")]
		public void SetFogOfWarTerrainBoundary(Terrain terrain, float borderWidth)
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x8439B4", Offset = "0x8439B4", VA = "0x8439B4")]
		public DynamicFogOfWar()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4B9FB4", Offset = "0x4B9FB4")]
	public class DynamicFogProfile : ScriptableObject
	{
		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FOG_TYPE effectType;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool enableDithering;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE47C", Offset = "0x4BE47C")]
		public float ditherStrength;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE498", Offset = "0x4BE498")]
		public float alpha;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE4B0", Offset = "0x4BE4B0")]
		public float noiseStrength;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE4C8", Offset = "0x4BE4C8")]
		public float noiseScale;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE4E4", Offset = "0x4BE4E4")]
		public float distance;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE500", Offset = "0x4BE500")]
		public float distanceFallOff;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE51C", Offset = "0x4BE51C")]
		public float maxDistance;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE538", Offset = "0x4BE538")]
		public float maxDistanceFallOff;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE554", Offset = "0x4BE554")]
		public float height;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE570", Offset = "0x4BE570")]
		public float maxHeight;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE58C", Offset = "0x4BE58C")]
		public float heightFallOff;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float baselineHeight;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool clipUnderBaseline;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE5A8", Offset = "0x4BE5A8")]
		public float turbulence;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE5C0", Offset = "0x4BE5C0")]
		public float speed;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 windDirection;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color color;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color color2;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE5D8", Offset = "0x4BE5D8")]
		public float skyHaze;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE5F4", Offset = "0x4BE5F4")]
		public float skySpeed;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE60C", Offset = "0x4BE60C")]
		public float skyNoiseStrength;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE624", Offset = "0x4BE624")]
		public float skyAlpha;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool useXZDistance;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE63C", Offset = "0x4BE63C")]
		public float scattering;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color scatteringColor;

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x8439C4", Offset = "0x8439C4", VA = "0x8439C4")]
		public void Load(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x843BB8", Offset = "0x843BB8", VA = "0x843BB8")]
		public void Save(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x843CAC", Offset = "0x843CAC", VA = "0x843CAC")]
		public static void Lerp(DynamicFogProfile profile1, DynamicFogProfile profile2, float t, DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x844224", Offset = "0x844224", VA = "0x844224")]
		public DynamicFogProfile()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x40015F2")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE654", Offset = "0x4BE654")]
		public bool enableProfileTransition;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE68C", Offset = "0x4BE68C")]
		public DynamicFogProfile targetProfile;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE6C4", Offset = "0x4BE6C4")]
		public bool enableAlphaTransition;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE6FC", Offset = "0x4BE6FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE6FC", Offset = "0x4BE6FC")]
		public float targetFogAlpha;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE750", Offset = "0x4BE750")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE750", Offset = "0x4BE750")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE7A4", Offset = "0x4BE7A4")]
		public bool enableFogColorTransition;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE7DC", Offset = "0x4BE7DC")]
		public Color targetFogColor1;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE814", Offset = "0x4BE814")]
		public Color targetFogColor2;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE84C", Offset = "0x4BE84C")]
		public float transitionDuration;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE884", Offset = "0x4BE884")]
		public Collider targetCollider;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE8BC", Offset = "0x4BE8BC")]
		public bool debugMode;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE8F4", Offset = "0x4BE8F4")]
		public DynamicFog targetFog;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool cameraInside;

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x11FE6F8", Offset = "0x11FE6F8", VA = "0x11FE6F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x11FE7DC", Offset = "0x11FE7DC", VA = "0x11FE7DC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x11FEA5C", Offset = "0x11FEA5C", VA = "0x11FEA5C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x11FECB0", Offset = "0x11FECB0", VA = "0x11FECB0")]
		public FogVolume()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public static class VRCheck
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<XRDisplaySubsystemDescriptor> displaysDescs;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<XRDisplaySubsystem> displays;

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x76CAC4", Offset = "0x76CAC4", VA = "0x76CAC4")]
		public static bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x76CBCC", Offset = "0x76CBCC", VA = "0x76CBCC")]
		public static bool IsVrRunning()
		{
			return default(bool);
		}
	}
}
namespace VolumetricFogAndMist
{
	[Token(Token = "0x2000304")]
	public class DemoMultipleFogAreas : MonoBehaviour
	{
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x93C5E8", Offset = "0x93C5E8", VA = "0x93C5E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x93C644", Offset = "0x93C644", VA = "0x93C644")]
		private void CreateCloud()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x93C790", Offset = "0x93C790", VA = "0x93C790")]
		private void CreateBoxFog()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x93C91C", Offset = "0x93C91C", VA = "0x93C91C")]
		public DemoMultipleFogAreas()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class DemoDepthBlur : MonoBehaviour
	{
		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x93C124", Offset = "0x93C124", VA = "0x93C124")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x93C1A0", Offset = "0x93C1A0", VA = "0x93C1A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x93C1FC", Offset = "0x93C1FC", VA = "0x93C1FC")]
		public DemoDepthBlur()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class DemoXYLights : MonoBehaviour
	{
		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 attractionPos;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] fairyDirections;

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x93D3D0", Offset = "0x93D3D0", VA = "0x93D3D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x93D5FC", Offset = "0x93D5FC", VA = "0x93D5FC")]
		public DemoXYLights()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class CameraMove : MonoBehaviour
	{
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x8A36DC", Offset = "0x8A36DC", VA = "0x8A36DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x8A3848", Offset = "0x8A3848", VA = "0x8A3848")]
		public CameraMove()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class DemoWalk : MonoBehaviour
	{
		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text status;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x93D0C0", Offset = "0x93D0C0", VA = "0x93D0C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x93D1D4", Offset = "0x93D1D4", VA = "0x93D1D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x93D3C8", Offset = "0x93D3C8", VA = "0x93D3C8")]
		public DemoWalk()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class DemoFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool fogCuttingOn;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VolumetricFog fog;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text status;

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x93C204", Offset = "0x93C204", VA = "0x93C204")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x93C2AC", Offset = "0x93C2AC", VA = "0x93C2AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x93C534", Offset = "0x93C534", VA = "0x93C534")]
		private void AssignCustomTexture()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x93C5D8", Offset = "0x93C5D8", VA = "0x93C5D8")]
		public DemoFogOfWar()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class DemoPointLight : MonoBehaviour
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 attractionPos;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] fairyDirections;

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x93C924", Offset = "0x93C924", VA = "0x93C924")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x93CA68", Offset = "0x93CA68", VA = "0x93CA68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x93CCC0", Offset = "0x93CCC0", VA = "0x93CCC0")]
		public DemoPointLight()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class DemoShafts : MonoBehaviour
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VolumetricFog fog;

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x93CCDC", Offset = "0x93CCDC", VA = "0x93CCDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x93CD04", Offset = "0x93CD04", VA = "0x93CD04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x93CECC", Offset = "0x93CECC", VA = "0x93CECC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x93CFFC", Offset = "0x93CFFC", VA = "0x93CFFC")]
		public DemoShafts()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class FreeCameraMove : MonoBehaviour
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x1200664", Offset = "0x1200664", VA = "0x1200664")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x1200D1C", Offset = "0x1200D1C", VA = "0x1200D1C")]
		public FreeCameraMove()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class DemoBoxedArea : MonoBehaviour
	{
		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x93C0B8", Offset = "0x93C0B8", VA = "0x93C0B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x93C11C", Offset = "0x93C11C", VA = "0x93C11C")]
		public DemoBoxedArea()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class DemoSurroundingFog : MonoBehaviour
	{
		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FreeLookCam cam;

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x93D004", Offset = "0x93D004", VA = "0x93D004")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x93D058", Offset = "0x93D058", VA = "0x93D058")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x93D0B8", Offset = "0x93D0B8", VA = "0x93D0B8")]
		public DemoSurroundingFog()
		{
		}
	}
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4BA008", Offset = "0x4BA008")]
	public class FogAreaCullingManager : MonoBehaviour
	{
		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x11FE020", Offset = "0x11FE020", VA = "0x11FE020")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x11FE124", Offset = "0x11FE124", VA = "0x11FE124")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x11FE1B8", Offset = "0x11FE1B8", VA = "0x11FE1B8")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x11FE24C", Offset = "0x11FE24C", VA = "0x11FE24C")]
		public FogAreaCullingManager()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[ExecuteInEditMode]
	public class FogOfWarHole : MonoBehaviour
	{
		[Token(Token = "0x2000311")]
		public enum HoleShape
		{
			[Token(Token = "0x400161B")]
			Disc,
			[Token(Token = "0x400161C")]
			Box
		}

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HoleShape shape;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE92C", Offset = "0x4BE92C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE92C", Offset = "0x4BE92C")]
		public float alpha;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE980", Offset = "0x4BE980")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BE980", Offset = "0x4BE980")]
		public float smoothness;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private HoleShape lastShape;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastScale;

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x11FE254", Offset = "0x11FE254", VA = "0x11FE254")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x11FE4B0", Offset = "0x11FE4B0", VA = "0x11FE4B0")]
		private void RestoreHole(Vector3 position, HoleShape shape, float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x11FE2F8", Offset = "0x11FE2F8", VA = "0x11FE2F8")]
		private void StampHole(Vector3 position, HoleShape shape, float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x11FE5FC", Offset = "0x11FE5FC", VA = "0x11FE5FC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x11FE6B8", Offset = "0x11FE6B8", VA = "0x11FE6B8")]
		public FogOfWarHole()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4BA050", Offset = "0x4BA050")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x400161D")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BE9D4", Offset = "0x4BE9D4")]
		public bool enableProfileTransition;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEA0C", Offset = "0x4BEA0C")]
		public VolumetricFogProfile targetProfile;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEA44", Offset = "0x4BEA44")]
		public bool enableAlphaTransition;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BEA7C", Offset = "0x4BEA7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEA7C", Offset = "0x4BEA7C")]
		public float targetFogAlpha;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BEAD0", Offset = "0x4BEAD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEAD0", Offset = "0x4BEAD0")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEB24", Offset = "0x4BEB24")]
		public bool enableFogColorTransition;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEB5C", Offset = "0x4BEB5C")]
		public Color targetFogColor;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEB94", Offset = "0x4BEB94")]
		public bool enableFogSpecularColorTransition;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEBCC", Offset = "0x4BEBCC")]
		public Color targetFogSpecularColor;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEC04", Offset = "0x4BEC04")]
		public bool enableLightColorTransition;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEC3C", Offset = "0x4BEC3C")]
		public Color targetLightColor;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BEC74", Offset = "0x4BEC74")]
		public float transitionDuration;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BECAC", Offset = "0x4BECAC")]
		public Collider targetCollider;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BECE4", Offset = "0x4BECE4")]
		public bool debugMode;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4BED1C", Offset = "0x4BED1C")]
		public VolumetricFog targetFog;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool cameraInside;

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x11FED48", Offset = "0x11FED48", VA = "0x11FED48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x11FEE2C", Offset = "0x11FEE2C", VA = "0x11FEE2C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x11FF0DC", Offset = "0x11FF0DC", VA = "0x11FF0DC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x11FF368", Offset = "0x11FF368", VA = "0x11FF368")]
		public FogVolume()
		{
		}
	}
	[Token(Token = "0x2000313")]
	internal interface IVolumetricFogRenderComponent
	{
		[Token(Token = "0x170000AE")]
		VolumetricFog fog
		{
			[Token(Token = "0x6000E73")]
			get;
			[Token(Token = "0x6000E74")]
			set;
		}

		[Token(Token = "0x6000E75")]
		void DestroySelf();
	}
	[Token(Token = "0x2000314")]
	[ExecuteInEditMode]
	public class ShadowMapCopy : MonoBehaviour
	{
		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Light m_Light;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer cb;

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x838BDC", Offset = "0x838BDC", VA = "0x838BDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x838DA8", Offset = "0x838DA8", VA = "0x838DA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x838E40", Offset = "0x838E40", VA = "0x838E40")]
		public ShadowMapCopy()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public static class VRCheck
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<XRDisplaySubsystemDescriptor> displaysDescs;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<XRDisplaySubsystem> displays;

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x76CE78", Offset = "0x76CE78", VA = "0x76CE78")]
		public static bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x76CF80", Offset = "0x76CF80", VA = "0x76CF80")]
		public static bool IsVrRunning()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000316")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x4001633")]
		Clear = 0,
		[Token(Token = "0x4001634")]
		Mist = 10,
		[Token(Token = "0x4001635")]
		WindyMist = 11,
		[Token(Token = "0x4001636")]
		LowClouds = 20,
		[Token(Token = "0x4001637")]
		SeaClouds = 21,
		[Token(Token = "0x4001638")]
		GroundFog = 30,
		[Token(Token = "0x4001639")]
		FrostedGround = 31,
		[Token(Token = "0x400163A")]
		FoggyLake = 32,
		[Token(Token = "0x400163B")]
		Fog = 41,
		[Token(Token = "0x400163C")]
		HeavyFog = 42,
		[Token(Token = "0x400163D")]
		SandStorm1 = 50,
		[Token(Token = "0x400163E")]
		Smoke = 51,
		[Token(Token = "0x400163F")]
		ToxicSwamp = 52,
		[Token(Token = "0x4001640")]
		SandStorm2 = 53,
		[Token(Token = "0x4001641")]
		WorldEdge = 200,
		[Token(Token = "0x4001642")]
		Custom = 1000
	}
	[Token(Token = "0x2000317")]
	public enum SPSR_BEHAVIOUR
	{
		[Token(Token = "0x4001644")]
		AutoDetect,
		[Token(Token = "0x4001645")]
		ForcedOn,
		[Token(Token = "0x4001646")]
		ForcedOff
	}
	[Token(Token = "0x2000318")]
	public enum TRANSPARENT_MODE
	{
		[Token(Token = "0x4001648")]
		None,
		[Token(Token = "0x4001649")]
		Blend
	}
	[Token(Token = "0x2000319")]
	public enum COMPUTE_DEPTH_SCOPE
	{
		[Token(Token = "0x400164B")]
		OnlyTreeBillboards,
		[Token(Token = "0x400164C")]
		EverythingInLayer,
		[Token(Token = "0x400164D")]
		TreeBillboardsAndTransparentObjects
	}
	[Token(Token = "0x200031A")]
	public enum LIGHTING_MODEL
	{
		[Token(Token = "0x400164F")]
		Classic,
		[Token(Token = "0x4001650")]
		Natural,
		[Token(Token = "0x4001651")]
		SingleLight
	}
	[Token(Token = "0x200031B")]
	public enum SUN_SHADOWS_BAKE_MODE
	{
		[Token(Token = "0x4001653")]
		Realtime,
		[Token(Token = "0x4001654")]
		Discrete
	}
	[Token(Token = "0x200031C")]
	public enum FOG_VOID_TOPOLOGY
	{
		[Token(Token = "0x4001656")]
		Sphere,
		[Token(Token = "0x4001657")]
		Box
	}
	[Token(Token = "0x200031D")]
	public enum FOG_AREA_TOPOLOGY
	{
		[Token(Token = "0x4001659")]
		Sphere = 1,
		[Token(Token = "0x400165A")]
		Box
	}
	[Token(Token = "0x200031E")]
	public enum FOG_AREA_SORTING_MODE
	{
		[Token(Token = "0x400165C")]
		DistanceToCamera,
		[Token(Token = "0x400165D")]
		Altitude,
		[Token(Token = "0x400165E")]
		Fixed
	}
	[Token(Token = "0x200031F")]
	public enum FOG_AREA_FOLLOW_MODE
	{
		[Token(Token = "0x4001660")]
		FullXYZ,
		[Token(Token = "0x4001661")]
		RestrictToXZPlane
	}
	[Token(Token = "0x2000320")]
	public enum FOG_VISIBILITY_SCOPE
	{
		[Token(Token = "0x4001663")]
		Global,
		[Token(Token = "0x4001664")]
		Volume
	}
	[Token(Token = "0x2000321")]
	public struct FOG_TEMPORARY_PROPERTIES
	{
		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float density;
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4BA098", Offset = "0x4BA098")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4BA098", Offset = "0x4BA098")]
	public class VolumetricFog : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000323")]
		public struct PointLightParams
		{
			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Light light;

			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[HideInInspector]
			public VolumetricFogLightParams lightParams;

			[Token(Token = "0x4001787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float range;

			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float rangeMultiplier;

			[Token(Token = "0x4001789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float intensity;

			[Token(Token = "0x400178A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float intensityMultiplier;

			[Token(Token = "0x400178B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Color color;
		}

		[Token(Token = "0x2000324")]
		private struct FogOfWarTransition
		{
			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int x;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int y;

			[Token(Token = "0x4001790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startTime;

			[Token(Token = "0x4001791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float startDelay;

			[Token(Token = "0x4001792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float duration;

			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int initialAlpha;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int targetAlpha;
		}

		[Token(Token = "0x2000325")]
		private static class ShaderParams
		{
			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int FogWindDir;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static int FogSkyData;

			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static int LightMatrix;

			[Token(Token = "0x4001798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static int CookieSize;

			[Token(Token = "0x4001799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static int CookieTex;

			[Token(Token = "0x400179A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static int FlickerFreeCamPos;

			[Token(Token = "0x400179B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static int ClipDir;

			[Token(Token = "0x400179C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static int ClipToWorld;

			[Token(Token = "0x400179D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static int ShaftTex;

			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static int DownsampledDepth;

			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static int MainTex;

			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public static int FogDownsampled;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static int FogPointLightColor;

			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public static int FogPointLightPosition;

			[Token(Token = "0x40017A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static int ScreenMaskTexture;

			[Token(Token = "0x40017A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public static int SunPosition;

			[Token(Token = "0x40017A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static int SunPositionRightEye;

			[Token(Token = "0x40017A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public static int FogScatteringData;

			[Token(Token = "0x40017A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static int FogScatteringData2;

			[Token(Token = "0x40017A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public static int SunDir;

			[Token(Token = "0x40017A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static int SunColor;

			[Token(Token = "0x40017AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public static int FogSkyColor;

			[Token(Token = "0x40017AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static int FogSkyNoiseScale;

			[Token(Token = "0x40017AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public static int NoiseTex;

			[Token(Token = "0x40017AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static int FogData;

			[Token(Token = "0x40017AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public static int FogSkyHaze;

			[Token(Token = "0x40017AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static int FogVoidPosition;

			[Token(Token = "0x40017B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public static int FogAreaPosition;

			[Token(Token = "0x40017B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static int DeepObscurance;

			[Token(Token = "0x40017B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public static int Jitter;

			[Token(Token = "0x40017B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static int FogStepping;

			[Token(Token = "0x40017B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public static int FogAlpha;

			[Token(Token = "0x40017B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static int FogDistance;

			[Token(Token = "0x40017B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public static int FogVoidData;

			[Token(Token = "0x40017B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static int FogAreaData;

			[Token(Token = "0x40017B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public static int FogOfWar;

			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static int FogOfWarCenter;

			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public static int FogOfWarSize;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static int FogOfWarCenterAdjusted;

			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public static int PointLightsInsideAtten;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static int FogBlurDepth;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public static int VFM_CutOff;

			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static int FogColor;

			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public static int BlurDepth;

			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static int BlurTex;

			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public static int Amount;

			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static int GlobalDepthTexture;

			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public static int GlobalShadowBias;

			[Token(Token = "0x40017C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static int GlobalSunProjection;

			[Token(Token = "0x40017C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public static int GlobalSunDepthTexture;

			[Token(Token = "0x40017C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static int GlobalSunWorldPos;

			[Token(Token = "0x40017C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public static int GlobalSunShadowsData;
		}

		[Serializable]
		[Token(Token = "0x2000326")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA108", Offset = "0x4BA108")]
		private sealed class <>c
		{
			[Token(Token = "0x40017C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<VolumetricFog> <>9__638_0;

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xDB8878", Offset = "0xDB8878", VA = "0xDB8878")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xDB8880", Offset = "0xDB8880", VA = "0xDB8880")]
			internal int <Update>b__638_0(VolumetricFog x, VolumetricFog y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001667")]
		public const string SKW_FOG_DISTANCE_ON = "FOG_DISTANCE_ON";

		[Token(Token = "0x4001668")]
		public const string SKW_LIGHT_SCATTERING = "FOG_SCATTERING_ON";

		[Token(Token = "0x4001669")]
		public const string SKW_FOG_AREA_BOX = "FOG_AREA_BOX";

		[Token(Token = "0x400166A")]
		public const string SKW_FOG_AREA_SPHERE = "FOG_AREA_SPHERE";

		[Token(Token = "0x400166B")]
		public const string SKW_FOG_VOID_BOX = "FOG_VOID_BOX";

		[Token(Token = "0x400166C")]
		public const string SKW_FOG_VOID_SPHERE = "FOG_VOID_SPHERE";

		[Token(Token = "0x400166D")]
		public const string SKW_FOG_HAZE_ON = "FOG_HAZE_ON";

		[Token(Token = "0x400166E")]
		public const string SKW_FOG_OF_WAR_ON = "FOG_OF_WAR_ON";

		[Token(Token = "0x400166F")]
		public const string SKW_FOG_BLUR = "FOG_BLUR_ON";

		[Token(Token = "0x4001670")]
		public const string SKW_SUN_SHADOWS = "FOG_SUN_SHADOWS_ON";

		[Token(Token = "0x4001671")]
		public const string SKW_FOG_USE_XY_PLANE = "FOG_USE_XY_PLANE";

		[Token(Token = "0x4001672")]
		public const string SKW_FOG_COMPUTE_DEPTH = "FOG_COMPUTE_DEPTH";

		[Token(Token = "0x4001673")]
		public const string SKW_POINT_LIGHTS = "FOG_POINT_LIGHTS";

		[Token(Token = "0x4001674")]
		private const string DEPTH_CAM_NAME = "VFMDepthCamera";

		[Token(Token = "0x4001675")]
		private const string DEPTH_SUN_CAM_NAME = "VFMDepthSunCamera";

		[Token(Token = "0x4001676")]
		private const string VFM_BUILD_FIRST_INSTALL = "VFMFirstInstall";

		[Token(Token = "0x4001677")]
		private const string VFM_BUILD_HINT = "VFMBuildHint1083RC1";

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VolumetricFog _fog;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isDirty;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VolumetricFogProfile _profile;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _profileSync;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _debugPass;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		private bool _showInSceneView;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TRANSPARENT_MODE _transparencyBlendMode;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BEDD4", Offset = "0x4BEDD4")]
		private float _transparencyBlendPower;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask _transparencyLayerMask;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FOG_VISIBILITY_SCOPE _visibilityScope;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Bounds _visibilityVolume;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private LIGHTING_MODEL _lightingModel;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _enableMultipleCameras;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[SerializeField]
		private bool _computeDepth;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private COMPUTE_DEPTH_SCOPE _computeDepthScope;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _transparencyCutOff;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool _renderBeforeTransparent;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BEEB4", Offset = "0x4BEEB4")]
		private float _timeBetweenTextureUpdates;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private bool _sunCopyColor;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BEF04", Offset = "0x4BEF04")]
		private float _density;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BEF44", Offset = "0x4BEF44")]
		private float _noiseStrength;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BEF84", Offset = "0x4BEF84")]
		private float _noiseFinalMultiplier;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BEFC4", Offset = "0x4BEFC4")]
		private float _noiseSparse;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF008", Offset = "0x4BF008")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float _maxFogLength;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF05C", Offset = "0x4BF05C")]
		private float _maxFogLengthFallOff;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF09C", Offset = "0x4BF09C")]
		private float _distanceFallOff;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF0DC", Offset = "0x4BF0DC")]
		private float _height;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF124", Offset = "0x4BF124")]
		[SerializeField]
		private float _heightFallOff;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float _deepObscurance;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _baselineRelativeToCamera;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF194", Offset = "0x4BF194")]
		[SerializeField]
		private float _baselineRelativeToCameraDelay;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float _noiseScale;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF1E4", Offset = "0x4BF1E4")]
		[SerializeField]
		private float _alpha;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Color _specularColor;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF248", Offset = "0x4BF248")]
		[SerializeField]
		private float _specularThreshold;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF288", Offset = "0x4BF288")]
		private float _specularIntensity;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Vector3 _lightDirection;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float _lightIntensity;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color _lightColor;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF2F8", Offset = "0x4BF2F8")]
		[SerializeField]
		private int _updateTextureSpread;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF338", Offset = "0x4BF338")]
		private float _speed;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _useRealTime;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Color _skyColor;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float _skyHaze;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float _skyNoiseScale;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF3C8", Offset = "0x4BF3C8")]
		private float _skySpeed;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF408", Offset = "0x4BF408")]
		private float _skyNoiseStrength;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF448", Offset = "0x4BF448")]
		private float _skyAlpha;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF488", Offset = "0x4BF488")]
		[SerializeField]
		private float _skyDepth;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private GameObject _character;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private FOG_VOID_TOPOLOGY _fogVoidTopology;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF4EC", Offset = "0x4BF4EC")]
		[SerializeField]
		private float _fogVoidFallOff;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float _fogVoidRadius;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		private Vector3 _fogVoidPosition;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float _fogVoidDepth;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float _fogVoidHeight;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private bool _fogVoidInverted;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		[SerializeField]
		private bool _fogVoidShowGizmos;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
		[SerializeField]
		private bool _fogAreaShowGizmos;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject _fogAreaCenter;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF5AC", Offset = "0x4BF5AC")]
		private float _fogAreaFallOff;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private FOG_AREA_FOLLOW_MODE _fogAreaFollowMode;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private FOG_AREA_TOPOLOGY _fogAreaTopology;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		private float _fogAreaRadius;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Vector3 _fogAreaPosition;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private float _fogAreaDepth;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private float _fogAreaHeight;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private FOG_AREA_SORTING_MODE _fogAreaSortingMode;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private int _fogAreaRenderOrder;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public PointLightParams[] pointLightParams;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private bool pointLightDataMigrated;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Vector4[] pointLightColorBuffer;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Vector4[] pointLightPositionBuffer;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private GameObject[] _pointLights;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private float[] _pointLightRanges;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private float[] _pointLightIntensities;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private float[] _pointLightIntensitiesMultiplier;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Vector3[] _pointLightPositions;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Color[] _pointLightColors;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private bool _pointLightTrackingAuto;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private Transform _pointLightTrackingPivot;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private int _pointLightTrackingCount;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF710", Offset = "0x4BF710")]
		[SerializeField]
		private float _pointLightTrackingCheckInterval;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private float _pointLightTrackingNewLightsCheckInterval;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private float _pointLightInscattering;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private float _pointLightIntensity;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		private float _pointLightInsideAtten;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF790", Offset = "0x4BF790")]
		[SerializeField]
		private int _downsampling;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		private bool _forceComposition;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
		[SerializeField]
		private bool _edgeImprove;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF7F0", Offset = "0x4BF7F0")]
		private float _edgeThreshold;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF838", Offset = "0x4BF838")]
		[SerializeField]
		private float _stepping;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF878", Offset = "0x4BF878")]
		[SerializeField]
		private float _steppingNear;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		private bool _dithering;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF8CC", Offset = "0x4BF8CC")]
		[SerializeField]
		private float _ditherStrength;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF910", Offset = "0x4BF910")]
		[SerializeField]
		private float _jitterStrength;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private bool _lightScatteringEnabled;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF960", Offset = "0x4BF960")]
		[SerializeField]
		private float _lightScatteringDiffusion;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF9A0", Offset = "0x4BF9A0")]
		private float _lightScatteringSpread;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BF9E0", Offset = "0x4BF9E0")]
		private int _lightScatteringSamples;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFA24", Offset = "0x4BFA24")]
		[SerializeField]
		private float _lightScatteringWeight;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFA68", Offset = "0x4BFA68")]
		private float _lightScatteringIllumination;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFAAC", Offset = "0x4BFAAC")]
		[SerializeField]
		private float _lightScatteringDecay;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFAF4", Offset = "0x4BFAF4")]
		[SerializeField]
		private float _lightScatteringExposure;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFB38", Offset = "0x4BFB38")]
		[SerializeField]
		private float _lightScatteringJittering;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFB78", Offset = "0x4BFB78")]
		private int _lightScatteringBlurDownscale;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private bool _fogBlur;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFBC8", Offset = "0x4BFBC8")]
		[SerializeField]
		private float _fogBlurDepth;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private bool _sunShadows;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		private LayerMask _sunShadowsLayerMask;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFC28", Offset = "0x4BFC28")]
		private float _sunShadowsStrength;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		private float _sunShadowsBias;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFC78", Offset = "0x4BFC78")]
		[SerializeField]
		private float _sunShadowsJitterStrength;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFCB8", Offset = "0x4BFCB8")]
		private int _sunShadowsResolution;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFCF8", Offset = "0x4BFCF8")]
		private float _sunShadowsMaxDistance;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[SerializeField]
		private SUN_SHADOWS_BAKE_MODE _sunShadowsBakeMode;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private float _sunShadowsRefreshInterval;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFD60", Offset = "0x4BFD60")]
		[SerializeField]
		private float _sunShadowsCancellation;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFDA0", Offset = "0x4BFDA0")]
		[SerializeField]
		private float _turbulenceStrength;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private bool _useXYPlane;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29D")]
		[SerializeField]
		private bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private SPSR_BEHAVIOUR _spsrBehaviour;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		private bool _reduceFlickerBigWorlds;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A5")]
		[SerializeField]
		private bool _enableMask;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private LayerMask _maskLayer;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFE40", Offset = "0x4BFE40")]
		[SerializeField]
		private int _maskDownsampling;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public bool isRendering;

		[NonSerialized]
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public float distanceToCameraMin;

		[NonSerialized]
		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public float distanceToCameraMax;

		[NonSerialized]
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public float distanceToCamera;

		[NonSerialized]
		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public float distanceToCameraYAxis;

		[NonSerialized]
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public FOG_TEMPORARY_PROPERTIES temporaryProperties;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public VolumetricFog fogRenderer;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private VolumetricFog[] allFogRenderers;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private bool isPartOfScene;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private int noiseTextureSize;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private float initialFogAlpha;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private float targetFogAlpha;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private bool transitionAlpha;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
		private bool transitionColor;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x302")]
		private bool transitionSpecularColor;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x303")]
		private bool transitionLightColor;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private bool transitionProfile;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x305")]
		private bool targetColorActive;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x306")]
		private bool targetSpecularColorActive;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x307")]
		private bool targetLightColorActive;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Color initialFogColor;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Color targetFogColor;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Color initialFogSpecularColor;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Color targetFogSpecularColor;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private Color initialLightColor;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private Color targetLightColor;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private float transitionDuration;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private float transitionStartTime;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private float currentFogAlpha;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private Color currentFogColor;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private Color currentFogSpecularColor;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private Color currentLightColor;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private VolumetricFogProfile initialProfile;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private VolumetricFogProfile targetProfile;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private float oldBaselineRelativeCameraY;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private float currentFogAltitude;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private float skyHazeSpeedAcum;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private Color skyHazeLightColor;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		private bool _hasCamera;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D5")]
		private bool _hasCameraChecked;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private Camera mainCamera;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private List<string> shaderKeywords;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private Material blurMat;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private RenderBuffer[] mrt;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private int _renderingInstancesCount;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private int lastFrameCount;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		private RenderTextureFormat rtDownsampledFormat;

		[NonSerialized]
		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public Material fogMat;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private RenderTexture depthTexture;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private RenderTexture depthSunTexture;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private RenderTexture reducedDestination;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		private Light[] lastFoundLights;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private Light[] lightBuffer;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private Light[] currentLights;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private float trackPointAutoLastTime;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		private float trackPointCheckNewLightsLastTime;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		private Vector4 black;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private Shader depthShader;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private Shader depthShaderAndTrans;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		private GameObject depthCamObj;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private Camera depthCam;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private float lastTextureUpdate;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private Vector3 windSpeedAcum;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private Texture2D adjustedTexture;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private Color[] noiseColors;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private Color[] adjustedColors;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private float sunLightIntensity;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
		private bool needUpdateTexture;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A5")]
		private bool hasChangeAdjustedColorsAlpha;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private int updatingTextureSlice;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		private Color updatingTextureLightColor;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		private Color lastRenderSettingsAmbientLight;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		private float lastRenderSettingsAmbientIntensity;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private int lastFrameAppliedChaos;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
		private int lastFrameAppliedWind;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		private Light sunLight;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private Vector2 oldSunPos;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		private float sunFade;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EC")]
		private Vector3 lastLightDirection;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private GameObject depthSunCamObj;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		private Camera depthSunCam;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		private Shader depthSunShader;

		[NonSerialized]
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		public bool needUpdateDepthSunTexture;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
		private float lastShadowUpdateFrame;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		private bool sunShadowsActive;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
		private int currentDepthSunTextureRes;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		private Matrix4x4 lightMatrix;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		private Texture2D adjustedChaosTexture;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		private Material chaosLerpMat;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		private float turbAcum;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
		private float deltaTime;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		private float timeOfLastRender;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		private RenderTexture rtAdjusted;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private List<VolumetricFog> fogInstances;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
		private List<VolumetricFog> fogRenderInstances;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
		private MeshRenderer mr;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		private float lastTimeSortInstances;

		[Token(Token = "0x4001762")]
		private const float FOG_INSTANCES_SORT_INTERVAL = 2f;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A4")]
		private Vector3 lastCamPos;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
		private bool needResort;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
		private CommandBuffer maskCommandBuffer;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
		private RenderTextureDescriptor rtMaskDesc;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
		private Material maskMaterial;

		[Token(Token = "0x4001768")]
		private const int MAX_SIMULTANEOUS_TRANSITIONS = 10000;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x604")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFEB0", Offset = "0x4BFEB0")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFEF8", Offset = "0x4BFEF8")]
		private float _fogOfWarRestoreDelay;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x624")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFF3C", Offset = "0x4BFF3C")]
		private float _fogOfWarRestoreDuration;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFF7C", Offset = "0x4BFF7C")]
		[SerializeField]
		private float _fogOfWarSmoothness;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62C")]
		[SerializeField]
		private bool _fogOfWarBlur;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62D")]
		[SerializeField]
		private bool _maskEditorEnabled;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
		[SerializeField]
		private MASK_TEXTURE_BRUSH_MODE _maskBrushMode;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x634")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4BFFEC", Offset = "0x4BFFEC")]
		private int _maskBrushWidth;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0030", Offset = "0x4C0030")]
		[SerializeField]
		private float _maskBrushFuzziness;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0070", Offset = "0x4C0070")]
		private float _maskBrushOpacity;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
		private bool canDestroyFOWTexture;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
		[SerializeField]
		private Texture2D _fogOfWarTexture;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
		private FogOfWarTransition[] fowTransitionList;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
		private int lastTransitionPos;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
		private Dictionary<int, int> fowTransitionIndices;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
		private bool requiresTextureUpload;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
		private Material fowBlur;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
		private RenderTexture fowBlur1;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
		private RenderTexture fowBlur2;

		[Token(Token = "0x4001780")]
		public const int MAX_POINT_LIGHTS = 6;

		[Token(Token = "0x4001781")]
		public const bool LIGHT_SCATTERING_BLUR_ENABLED = false;

		[Token(Token = "0x4001782")]
		public const bool USE_UNITY_SHADOW_MAP = true;

		[Token(Token = "0x4001783")]
		public const bool USE_DIRECTIONAL_LIGHT_COOKIE = false;

		[Token(Token = "0x4001784")]
		public const bool LIGHT_DIFFUSION_ENABLED = true;

		[Token(Token = "0x170000AF")]
		public static VolumetricFog instance
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x770AA4", Offset = "0x770AA4", VA = "0x770AA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x770C9C", Offset = "0x770C9C", VA = "0x770C9C")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x770CA4", Offset = "0x770CA4", VA = "0x770CA4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public VolumetricFogProfile profile
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x771F70", Offset = "0x771F70", VA = "0x771F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x771F78", Offset = "0x771F78", VA = "0x771F78")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public bool profileSync
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x772050", Offset = "0x772050", VA = "0x772050")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x772058", Offset = "0x772058", VA = "0x772058")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x772080", Offset = "0x772080", VA = "0x772080")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x772088", Offset = "0x772088", VA = "0x772088")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public bool debugDepthPass
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x7720B0", Offset = "0x7720B0", VA = "0x7720B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x7720B8", Offset = "0x7720B8", VA = "0x7720B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public bool showInSceneView
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x7720E0", Offset = "0x7720E0", VA = "0x7720E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x7720E8", Offset = "0x7720E8", VA = "0x7720E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public TRANSPARENT_MODE transparencyBlendMode
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x772110", Offset = "0x772110", VA = "0x772110")]
			get
			{
				return default(TRANSPARENT_MODE);
			}
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x772118", Offset = "0x772118", VA = "0x772118")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public float transparencyBlendPower
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x7722A0", Offset = "0x7722A0", VA = "0x7722A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x7722A8", Offset = "0x7722A8", VA = "0x7722A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public LayerMask transparencyLayerMask
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x7722E4", Offset = "0x7722E4", VA = "0x7722E4")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x7722EC", Offset = "0x7722EC", VA = "0x7722EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public FOG_VISIBILITY_SCOPE visibilityScope
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x772344", Offset = "0x772344", VA = "0x772344")]
			get
			{
				return default(FOG_VISIBILITY_SCOPE);
			}
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x77234C", Offset = "0x77234C", VA = "0x77234C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public Bounds visibilityVolume
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x772368", Offset = "0x772368", VA = "0x772368")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x77237C", Offset = "0x77237C", VA = "0x77237C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public LIGHTING_MODEL lightingModel
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x7723F4", Offset = "0x7723F4", VA = "0x7723F4")]
			get
			{
				return default(LIGHTING_MODEL);
			}
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x7723FC", Offset = "0x7723FC", VA = "0x7723FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public bool enableMultipleCameras
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x7724F8", Offset = "0x7724F8", VA = "0x7724F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x772500", Offset = "0x772500", VA = "0x772500")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public bool computeDepth
		{
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x77269C", Offset = "0x77269C", VA = "0x77269C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x7726A4", Offset = "0x7726A4", VA = "0x7726A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public COMPUTE_DEPTH_SCOPE computeDepthScope
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x7726EC", Offset = "0x7726EC", VA = "0x7726EC")]
			get
			{
				return default(COMPUTE_DEPTH_SCOPE);
			}
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x7726F4", Offset = "0x7726F4", VA = "0x7726F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public float transparencyCutOff
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x772740", Offset = "0x772740", VA = "0x772740")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x772748", Offset = "0x772748", VA = "0x772748")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool renderBeforeTransparent
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x772784", Offset = "0x772784", VA = "0x772784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x77278C", Offset = "0x77278C", VA = "0x77278C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public GameObject sun
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x7727E8", Offset = "0x7727E8", VA = "0x7727E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x7727F0", Offset = "0x7727F0", VA = "0x7727F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public float timeBetweenTextureUpdates
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x772974", Offset = "0x772974", VA = "0x772974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x77297C", Offset = "0x77297C", VA = "0x77297C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public bool sunCopyColor
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x772998", Offset = "0x772998", VA = "0x772998")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x7729A0", Offset = "0x7729A0", VA = "0x7729A0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public float density
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x7729E8", Offset = "0x7729E8", VA = "0x7729E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x7729F0", Offset = "0x7729F0", VA = "0x7729F0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public float noiseStrength
		{
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x772B34", Offset = "0x772B34", VA = "0x772B34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x772B3C", Offset = "0x772B3C", VA = "0x772B3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public float noiseFinalMultiplier
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x772B90", Offset = "0x772B90", VA = "0x772B90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x772B98", Offset = "0x772B98", VA = "0x772B98")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public float noiseSparse
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x772BEC", Offset = "0x772BEC", VA = "0x772BEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x772BF4", Offset = "0x772BF4", VA = "0x772BF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public float distance
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x772C48", Offset = "0x772C48", VA = "0x772C48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x772C50", Offset = "0x772C50", VA = "0x772C50")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public float maxFogLength
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x772C94", Offset = "0x772C94", VA = "0x772C94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x772C9C", Offset = "0x772C9C", VA = "0x772C9C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public float maxFogLengthFallOff
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x772CD8", Offset = "0x772CD8", VA = "0x772CD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x772CE0", Offset = "0x772CE0", VA = "0x772CE0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public float distanceFallOff
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x772D1C", Offset = "0x772D1C", VA = "0x772D1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x772D24", Offset = "0x772D24", VA = "0x772D24")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public float height
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x772D68", Offset = "0x772D68", VA = "0x772D68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x772D70", Offset = "0x772D70", VA = "0x772D70")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public float heightFallOff
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x772DC8", Offset = "0x772DC8", VA = "0x772DC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x772DD0", Offset = "0x772DD0", VA = "0x772DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public float deepObscurance
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x772E20", Offset = "0x772E20", VA = "0x772E20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x772E28", Offset = "0x772E28", VA = "0x772E28")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public float baselineHeight
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x772E80", Offset = "0x772E80", VA = "0x772E80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x772E88", Offset = "0x772E88", VA = "0x772E88")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public bool baselineRelativeToCamera
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x772ECC", Offset = "0x772ECC", VA = "0x772ECC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x772ED4", Offset = "0x772ED4", VA = "0x772ED4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public float baselineRelativeToCameraDelay
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x772F24", Offset = "0x772F24", VA = "0x772F24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x772F2C", Offset = "0x772F2C", VA = "0x772F2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public float noiseScale
		{
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x772F68", Offset = "0x772F68", VA = "0x772F68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x772F70", Offset = "0x772F70", VA = "0x772F70")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public float alpha
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x772FC8", Offset = "0x772FC8", VA = "0x772FC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x772FD0", Offset = "0x772FD0", VA = "0x772FD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public Color color
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x773018", Offset = "0x773018", VA = "0x773018")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x773024", Offset = "0x773024", VA = "0x773024")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public Color specularColor
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x7730A8", Offset = "0x7730A8", VA = "0x7730A8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x7730B4", Offset = "0x7730B4", VA = "0x7730B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public float specularThreshold
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x773140", Offset = "0x773140", VA = "0x773140")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x773148", Offset = "0x773148", VA = "0x773148")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public float specularIntensity
		{
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x773188", Offset = "0x773188", VA = "0x773188")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x773190", Offset = "0x773190", VA = "0x773190")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public Vector3 lightDirection
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x7731DC", Offset = "0x7731DC", VA = "0x7731DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x7731E8", Offset = "0x7731E8", VA = "0x7731E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public float lightIntensity
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x773260", Offset = "0x773260", VA = "0x773260")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x773268", Offset = "0x773268", VA = "0x773268")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public Color lightColor
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x7732B4", Offset = "0x7732B4", VA = "0x7732B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x7732C0", Offset = "0x7732C0", VA = "0x7732C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public int updateTextureSpread
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x77334C", Offset = "0x77334C", VA = "0x77334C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x773354", Offset = "0x773354", VA = "0x773354")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public float speed
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x773370", Offset = "0x773370", VA = "0x773370")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x773378", Offset = "0x773378", VA = "0x773378")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x7735D0", Offset = "0x7735D0", VA = "0x7735D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x7735E0", Offset = "0x7735E0", VA = "0x7735E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public bool useRealTime
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x773660", Offset = "0x773660", VA = "0x773660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x773668", Offset = "0x773668", VA = "0x773668")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public Color skyColor
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x773690", Offset = "0x773690", VA = "0x773690")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x7736A4", Offset = "0x7736A4", VA = "0x7736A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public float skyHaze
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x773AB0", Offset = "0x773AB0", VA = "0x773AB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x773AB8", Offset = "0x773AB8", VA = "0x773AB8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public float skyNoiseScale
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x773B08", Offset = "0x773B08", VA = "0x773B08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x773B10", Offset = "0x773B10", VA = "0x773B10")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public float skySpeed
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x773B4C", Offset = "0x773B4C", VA = "0x773B4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x773B54", Offset = "0x773B54", VA = "0x773B54")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x773B78", Offset = "0x773B78", VA = "0x773B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x773B80", Offset = "0x773B80", VA = "0x773B80")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public float skyAlpha
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x773BD0", Offset = "0x773BD0", VA = "0x773BD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x773BD8", Offset = "0x773BD8", VA = "0x773BD8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public float skyDepth
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x773C1C", Offset = "0x773C1C", VA = "0x773C1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x773C24", Offset = "0x773C24", VA = "0x773C24")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public GameObject character
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x773C6C", Offset = "0x773C6C", VA = "0x773C6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x773C74", Offset = "0x773C74", VA = "0x773C74")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public FOG_VOID_TOPOLOGY fogVoidTopology
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x773D00", Offset = "0x773D00", VA = "0x773D00")]
			get
			{
				return default(FOG_VOID_TOPOLOGY);
			}
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x773D08", Offset = "0x773D08", VA = "0x773D08")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public float fogVoidFallOff
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x773D44", Offset = "0x773D44", VA = "0x773D44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x773D4C", Offset = "0x773D4C", VA = "0x773D4C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public float fogVoidRadius
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x773D90", Offset = "0x773D90", VA = "0x773D90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x773D98", Offset = "0x773D98", VA = "0x773D98")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public Vector3 fogVoidPosition
		{
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x773DDC", Offset = "0x773DDC", VA = "0x773DDC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x773DEC", Offset = "0x773DEC", VA = "0x773DEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public float fogVoidDepth
		{
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x773E64", Offset = "0x773E64", VA = "0x773E64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x773E6C", Offset = "0x773E6C", VA = "0x773E6C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public float fogVoidHeight
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x773EB0", Offset = "0x773EB0", VA = "0x773EB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x773EB8", Offset = "0x773EB8", VA = "0x773EB8")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4C6454", Offset = "0x4C6454")]
		public bool fogVoidInverted
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x773EFC", Offset = "0x773EFC", VA = "0x773EFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x773F04", Offset = "0x773F04", VA = "0x773F04")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public bool fogVoidShowGizmos
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x773F10", Offset = "0x773F10", VA = "0x773F10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x773F18", Offset = "0x773F18", VA = "0x773F18")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public bool fogAreaShowGizmos
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x773F24", Offset = "0x773F24", VA = "0x773F24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x773F2C", Offset = "0x773F2C", VA = "0x773F2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public GameObject fogAreaCenter
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x773F74", Offset = "0x773F74", VA = "0x773F74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x773F7C", Offset = "0x773F7C", VA = "0x773F7C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public float fogAreaFallOff
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x774008", Offset = "0x774008", VA = "0x774008")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x774010", Offset = "0x774010", VA = "0x774010")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public FOG_AREA_FOLLOW_MODE fogAreaFollowMode
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x77404C", Offset = "0x77404C", VA = "0x77404C")]
			get
			{
				return default(FOG_AREA_FOLLOW_MODE);
			}
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x774054", Offset = "0x774054", VA = "0x774054")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public FOG_AREA_TOPOLOGY fogAreaTopology
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x774090", Offset = "0x774090", VA = "0x774090")]
			get
			{
				return default(FOG_AREA_TOPOLOGY);
			}
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x774098", Offset = "0x774098", VA = "0x774098")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public float fogAreaRadius
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x7740D4", Offset = "0x7740D4", VA = "0x7740D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x7740DC", Offset = "0x7740DC", VA = "0x7740DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public Vector3 fogAreaPosition
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x774118", Offset = "0x774118", VA = "0x774118")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x774128", Offset = "0x774128", VA = "0x774128")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public float fogAreaDepth
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x774198", Offset = "0x774198", VA = "0x774198")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x7741A0", Offset = "0x7741A0", VA = "0x7741A0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public float fogAreaHeight
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x7741DC", Offset = "0x7741DC", VA = "0x7741DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x7741E4", Offset = "0x7741E4", VA = "0x7741E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public FOG_AREA_SORTING_MODE fogAreaSortingMode
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x774220", Offset = "0x774220", VA = "0x774220")]
			get
			{
				return default(FOG_AREA_SORTING_MODE);
			}
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x774228", Offset = "0x774228", VA = "0x774228")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public int fogAreaRenderOrder
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x774248", Offset = "0x774248", VA = "0x774248")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x774250", Offset = "0x774250", VA = "0x774250")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public bool pointLightTrackAuto
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x774270", Offset = "0x774270", VA = "0x774270")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x774278", Offset = "0x774278", VA = "0x774278")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public Transform pointLightTrackingPivot
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x77468C", Offset = "0x77468C", VA = "0x77468C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x774694", Offset = "0x774694", VA = "0x774694")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public int pointLightTrackingCount
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x77472C", Offset = "0x77472C", VA = "0x77472C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x774734", Offset = "0x774734", VA = "0x774734")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public float pointLightTrackingCheckInterval
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x774C2C", Offset = "0x774C2C", VA = "0x774C2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x774C34", Offset = "0x774C34", VA = "0x774C34")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public float pointLightTrackingNewLightsCheckInterval
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x774C70", Offset = "0x774C70", VA = "0x774C70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x774C78", Offset = "0x774C78", VA = "0x774C78")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public float pointLightInscattering
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x774CB4", Offset = "0x774CB4", VA = "0x774CB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x774CBC", Offset = "0x774CBC", VA = "0x774CBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public float pointLightIntensity
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x774CD8", Offset = "0x774CD8", VA = "0x774CD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x774CE0", Offset = "0x774CE0", VA = "0x774CE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public float pointLightInsideAtten
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x774CFC", Offset = "0x774CFC", VA = "0x774CFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0x774D04", Offset = "0x774D04", VA = "0x774D04")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public int downsampling
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x774D40", Offset = "0x774D40", VA = "0x774D40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x774D48", Offset = "0x774D48", VA = "0x774D48")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public bool forceComposition
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x774D6C", Offset = "0x774D6C", VA = "0x774D6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x774D74", Offset = "0x774D74", VA = "0x774D74")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public bool edgeImprove
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x774DC4", Offset = "0x774DC4", VA = "0x774DC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x774DCC", Offset = "0x774DCC", VA = "0x774DCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public float edgeThreshold
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x774E1C", Offset = "0x774E1C", VA = "0x774E1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x774E24", Offset = "0x774E24", VA = "0x774E24")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public float stepping
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x774E68", Offset = "0x774E68", VA = "0x774E68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x774E70", Offset = "0x774E70", VA = "0x774E70")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public float steppingNear
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x774EB4", Offset = "0x774EB4", VA = "0x774EB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x774EBC", Offset = "0x774EBC", VA = "0x774EBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public bool dithering
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x774F00", Offset = "0x774F00", VA = "0x774F00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x774F08", Offset = "0x774F08", VA = "0x774F08")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public float ditherStrength
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x774F50", Offset = "0x774F50", VA = "0x774F50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x774F58", Offset = "0x774F58", VA = "0x774F58")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public float jitterStrength
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x774F94", Offset = "0x774F94", VA = "0x774F94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x774F9C", Offset = "0x774F9C", VA = "0x774F9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public bool lightScatteringEnabled
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x774FD8", Offset = "0x774FD8", VA = "0x774FD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x774FE0", Offset = "0x774FE0", VA = "0x774FE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public float lightScatteringDiffusion
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x775028", Offset = "0x775028", VA = "0x775028")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x775030", Offset = "0x775030", VA = "0x775030")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public float lightScatteringSpread
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x77506C", Offset = "0x77506C", VA = "0x77506C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x775074", Offset = "0x775074", VA = "0x775074")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public int lightScatteringSamples
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x7750B0", Offset = "0x7750B0", VA = "0x7750B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x7750B8", Offset = "0x7750B8", VA = "0x7750B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public float lightScatteringWeight
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x7750F4", Offset = "0x7750F4", VA = "0x7750F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x7750FC", Offset = "0x7750FC", VA = "0x7750FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public float lightScatteringIllumination
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x775138", Offset = "0x775138", VA = "0x775138")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x775140", Offset = "0x775140", VA = "0x775140")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public float lightScatteringDecay
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x77517C", Offset = "0x77517C", VA = "0x77517C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x775184", Offset = "0x775184", VA = "0x775184")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public float lightScatteringExposure
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x7751C0", Offset = "0x7751C0", VA = "0x7751C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x7751C8", Offset = "0x7751C8", VA = "0x7751C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public float lightScatteringJittering
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x775204", Offset = "0x775204", VA = "0x775204")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x77520C", Offset = "0x77520C", VA = "0x77520C")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public int lightScatteringBlurDownscale
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x775248", Offset = "0x775248", VA = "0x775248")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x775250", Offset = "0x775250", VA = "0x775250")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public bool fogBlur
		{
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0x77528C", Offset = "0x77528C", VA = "0x77528C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x775294", Offset = "0x775294", VA = "0x775294")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public float fogBlurDepth
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x7752DC", Offset = "0x7752DC", VA = "0x7752DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x7752E4", Offset = "0x7752E4", VA = "0x7752E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public bool sunShadows
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x775320", Offset = "0x775320", VA = "0x775320")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x775328", Offset = "0x775328", VA = "0x775328")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public LayerMask sunShadowsLayerMask
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x7754CC", Offset = "0x7754CC", VA = "0x7754CC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x7754D4", Offset = "0x7754D4", VA = "0x7754D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public float sunShadowsStrength
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x77552C", Offset = "0x77552C", VA = "0x77552C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x775534", Offset = "0x775534", VA = "0x775534")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public float sunShadowsBias
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x775570", Offset = "0x775570", VA = "0x775570")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x775578", Offset = "0x775578", VA = "0x775578")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public float sunShadowsJitterStrength
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x7755B8", Offset = "0x7755B8", VA = "0x7755B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x7755C0", Offset = "0x7755C0", VA = "0x7755C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public int sunShadowsResolution
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x7755FC", Offset = "0x7755FC", VA = "0x7755FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x775604", Offset = "0x775604", VA = "0x775604")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public float sunShadowsMaxDistance
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x77564C", Offset = "0x77564C", VA = "0x77564C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x775654", Offset = "0x775654", VA = "0x775654")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public SUN_SHADOWS_BAKE_MODE sunShadowsBakeMode
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x775694", Offset = "0x775694", VA = "0x775694")]
			get
			{
				return default(SUN_SHADOWS_BAKE_MODE);
			}
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x77569C", Offset = "0x77569C", VA = "0x77569C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public float sunShadowsRefreshInterval
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x7756DC", Offset = "0x7756DC", VA = "0x7756DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x7756E4", Offset = "0x7756E4", VA = "0x7756E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public float sunShadowsCancellation
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x775720", Offset = "0x775720", VA = "0x775720")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x775728", Offset = "0x775728", VA = "0x775728")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public float turbulenceStrength
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x775764", Offset = "0x775764", VA = "0x775764")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x77576C", Offset = "0x77576C", VA = "0x77576C")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public bool useXYPlane
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x7757BC", Offset = "0x7757BC", VA = "0x7757BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x7757C4", Offset = "0x7757C4", VA = "0x7757C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x775820", Offset = "0x775820", VA = "0x775820")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x775828", Offset = "0x775828", VA = "0x775828")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public SPSR_BEHAVIOUR spsrBehaviour
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x775850", Offset = "0x775850", VA = "0x775850")]
			get
			{
				return default(SPSR_BEHAVIOUR);
			}
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x775858", Offset = "0x775858", VA = "0x775858")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public bool reduceFlickerBigWorlds
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x775874", Offset = "0x775874", VA = "0x775874")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x77587C", Offset = "0x77587C", VA = "0x77587C")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public bool enableMask
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x7758A4", Offset = "0x7758A4", VA = "0x7758A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x7758AC", Offset = "0x7758AC", VA = "0x7758AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public LayerMask maskLayer
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x775E54", Offset = "0x775E54", VA = "0x775E54")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x775E5C", Offset = "0x775E5C", VA = "0x775E5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public int maskDownsampling
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x775EC0", Offset = "0x775EC0", VA = "0x775EC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x775EC8", Offset = "0x775EC8", VA = "0x775EC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x775F00", Offset = "0x775F00", VA = "0x775F00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public int renderingInstancesCount
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x775F08", Offset = "0x775F08", VA = "0x775F08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012B")]
		public List<VolumetricFog> renderingInstances
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x775F10", Offset = "0x775F10", VA = "0x775F10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public List<VolumetricFog> instances
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x775F18", Offset = "0x775F18", VA = "0x775F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public bool hasCamera
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x775F20", Offset = "0x775F20", VA = "0x775F20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012E")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x77E7C8", Offset = "0x77E7C8", VA = "0x77E7C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x77E7D0", Offset = "0x77E7D0", VA = "0x77E7D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x77E820", Offset = "0x77E820", VA = "0x77E820")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x77E830", Offset = "0x77E830", VA = "0x77E830")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x77E8A0", Offset = "0x77E8A0", VA = "0x77E8A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x77E8B0", Offset = "0x77E8B0", VA = "0x77E8B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x77E930", Offset = "0x77E930", VA = "0x77E930")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x77E938", Offset = "0x77E938", VA = "0x77E938")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public float fogOfWarRestoreDelay
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x77E988", Offset = "0x77E988", VA = "0x77E988")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x77E990", Offset = "0x77E990", VA = "0x77E990")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public float fogOfWarRestoreDuration
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x77E9AC", Offset = "0x77E9AC", VA = "0x77E9AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x77E9B4", Offset = "0x77E9B4", VA = "0x77E9B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public float fogOfWarSmoothness
		{
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x77E9D0", Offset = "0x77E9D0", VA = "0x77E9D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x77E9D8", Offset = "0x77E9D8", VA = "0x77E9D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public bool fogOfWarBlur
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x77E9F4", Offset = "0x77E9F4", VA = "0x77E9F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x77E9FC", Offset = "0x77E9FC", VA = "0x77E9FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public bool maskEditorEnabled
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x77EA24", Offset = "0x77EA24", VA = "0x77EA24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x77EA2C", Offset = "0x77EA2C", VA = "0x77EA2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public MASK_TEXTURE_BRUSH_MODE maskBrushMode
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x77EA4C", Offset = "0x77EA4C", VA = "0x77EA4C")]
			get
			{
				return default(MASK_TEXTURE_BRUSH_MODE);
			}
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x77EA54", Offset = "0x77EA54", VA = "0x77EA54")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public int maskBrushWidth
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x77EA68", Offset = "0x77EA68", VA = "0x77EA68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x77EA70", Offset = "0x77EA70", VA = "0x77EA70")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float maskBrushFuzziness
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x77EA84", Offset = "0x77EA84", VA = "0x77EA84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x77EA8C", Offset = "0x77EA8C", VA = "0x77EA8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float maskBrushOpacity
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x77EAA0", Offset = "0x77EAA0", VA = "0x77EAA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x77EAA8", Offset = "0x77EAA8", VA = "0x77EAA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public Texture2D fogOfWarTexture
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x77EABC", Offset = "0x77EABC", VA = "0x77EABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x77EAC4", Offset = "0x77EAC4", VA = "0x77EAC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public Color32[] fogOfWarTextureData
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x780454", Offset = "0x780454", VA = "0x780454")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x78045C", Offset = "0x78045C", VA = "0x78045C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x775FDC", Offset = "0x775FDC", VA = "0x775FDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x776B78", Offset = "0x776B78", VA = "0x776B78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x776D44", Offset = "0x776D44", VA = "0x776D44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x777364", Offset = "0x777364", VA = "0x777364")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x777408", Offset = "0x777408", VA = "0x777408")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x777454", Offset = "0x777454", VA = "0x777454")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x778C3C", Offset = "0x778C3C", VA = "0x778C3C")]
		public void OnPreCull()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x779520", Offset = "0x779520", VA = "0x779520")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x77964C", Offset = "0x77964C", VA = "0x77964C")]
		private void DoOnPostRender()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x7796D4", Offset = "0x7796D4", VA = "0x7796D4")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x776524", Offset = "0x776524", VA = "0x776524")]
		private void FindMainCamera()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x776418", Offset = "0x776418", VA = "0x776418")]
		private bool IsPartOfScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x776650", Offset = "0x776650", VA = "0x776650")]
		private void InitFogMaterial()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x77215C", Offset = "0x77215C", VA = "0x77215C")]
		private void UpdateRenderComponents()
		{
		}

		[Token(Token = "0x6000F82")]
		private void DestroyRenderComponent<T>() where T : IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000F83")]
		private void AssignRenderComponent<T>() where T : Component, IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x779874", Offset = "0x779874", VA = "0x779874")]
		private void RegisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x777100", Offset = "0x777100", VA = "0x777100")]
		private void UnregisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x77693C", Offset = "0x77693C", VA = "0x77693C")]
		private void RegisterWithRenderers()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x776FF4", Offset = "0x776FF4", VA = "0x776FF4")]
		private void UnregisterWithRenderers()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x772544", Offset = "0x772544", VA = "0x772544")]
		public void UpdateMultiCameraSetup()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x779914", Offset = "0x779914", VA = "0x779914")]
		private void SetEnableMultipleCameras(bool state)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x779920", Offset = "0x779920", VA = "0x779920")]
		internal void DoOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x77A990", Offset = "0x77A990", VA = "0x77A990")]
		internal void DoOnRenderImageInstance(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x77C4F8", Offset = "0x77C4F8", VA = "0x77C4F8")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x7772E4", Offset = "0x7772E4", VA = "0x7772E4")]
		private void CleanUpDepthTexture()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x778E68", Offset = "0x778E68", VA = "0x778E68")]
		private void GetTransparentDepth()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x778C38", Offset = "0x778C38", VA = "0x778C38")]
		private void CastSunShadows()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x77C820", Offset = "0x77C820", VA = "0x77C820")]
		private void GetSunShadows()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x77C53C", Offset = "0x77C53C", VA = "0x77C53C")]
		private void SetBlurTexture(RenderTexture source, RenderTextureDescriptor desc)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x775420", Offset = "0x775420", VA = "0x775420")]
		private void DestroySunShadowsDependencies()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x775394", Offset = "0x775394", VA = "0x775394")]
		private void CleanUpTextureDepthSun()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x77D1E8", Offset = "0x77D1E8", VA = "0x77D1E8")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x770CDC", Offset = "0x770CDC", VA = "0x770CDC")]
		public void UpdatePreset()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x77D2E0", Offset = "0x77D2E0", VA = "0x77D2E0")]
		public void CheckWaterLevel(bool baseZero)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x77D57C", Offset = "0x77D57C", VA = "0x77D57C")]
		public static Terrain GetActiveTerrain()
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x77821C", Offset = "0x77821C", VA = "0x77821C")]
		private void UpdateMaterialFogColor()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x7782E4", Offset = "0x7782E4", VA = "0x7782E4")]
		private void UpdateMaterialHeights(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x772258", Offset = "0x772258", VA = "0x772258")]
		public void UpdateMaterialProperties(bool forceNow = false)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x776934", Offset = "0x776934", VA = "0x776934")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x779E44", Offset = "0x779E44", VA = "0x779E44")]
		private void UpdateMaterialPropertiesNow(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x77DA18", Offset = "0x77DA18", VA = "0x77DA18")]
		public void NotifyChangesToFogInstances()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x77D020", Offset = "0x77D020", VA = "0x77D020")]
		private void UpdateSunShadowsData()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x77D848", Offset = "0x77D848", VA = "0x77D848")]
		private void SetupDirectionalLightCommandBuffer()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x776C3C", Offset = "0x776C3C", VA = "0x776C3C")]
		private void RemoveDirectionalLightCommandBuffer()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x7733C8", Offset = "0x7733C8", VA = "0x7733C8")]
		private void UpdateWindSpeedQuick()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x77BC88", Offset = "0x77BC88", VA = "0x77BC88")]
		private void UpdateScatteringData(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x772884", Offset = "0x772884", VA = "0x772884")]
		private void UpdateSun()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x7780E0", Offset = "0x7780E0", VA = "0x7780E0")]
		private void UpdateSkyColor(float alpha)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x772A44", Offset = "0x772A44", VA = "0x772A44")]
		private void UpdateTextureAlpha()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x772440", Offset = "0x772440", VA = "0x772440")]
		private void UpdateTexture()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x773730", Offset = "0x773730", VA = "0x773730")]
		private void ComputeLightColor()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x778550", Offset = "0x778550", VA = "0x778550")]
		private void UpdateTextureColors(Color[] colors, bool forceUpdateEntireTexture)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x779294", Offset = "0x779294", VA = "0x779294")]
		internal void ApplyChaos()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x77983C", Offset = "0x77983C", VA = "0x77983C")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x77DB48", Offset = "0x77DB48", VA = "0x77DB48")]
		public void SetTargetProfile(VolumetricFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x77DBE8", Offset = "0x77DBE8", VA = "0x77DBE8")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x77DBF0", Offset = "0x77DBF0", VA = "0x77DBF0")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x77DC44", Offset = "0x77DC44", VA = "0x77DC44")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x77DC9C", Offset = "0x77DC9C", VA = "0x77DC9C")]
		public void SetTargetColor(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x77DCFC", Offset = "0x77DCFC", VA = "0x77DCFC")]
		public void ClearTargetColor(float duration)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x77DD34", Offset = "0x77DD34", VA = "0x77DD34")]
		public void SetTargetSpecularColor(Color newSpecularColor, float duration)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x77DD94", Offset = "0x77DD94", VA = "0x77DD94")]
		public void ClearTargetSpecularColor(float duration)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x77DDCC", Offset = "0x77DDCC", VA = "0x77DDCC")]
		public void SetTargetLightColor(Color newLightColor, float duration)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x77DE30", Offset = "0x77DE30", VA = "0x77DE30")]
		public void ClearTargetLightColor(float duration)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x774790", Offset = "0x774790", VA = "0x774790")]
		public void CheckPointLightData()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x77DE68", Offset = "0x77DE68", VA = "0x77DE68")]
		private void PointLightDataSetDefaults(int k)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x77C11C", Offset = "0x77C11C", VA = "0x77C11C")]
		private void SetPointLightMaterialProperties(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x77DF74", Offset = "0x77DF74", VA = "0x77DF74")]
		public Light GetPointLight(int index)
		{
			return null;
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x77DFC4", Offset = "0x77DFC4", VA = "0x77DFC4")]
		private void TrackNewLights()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x7742C0", Offset = "0x7742C0", VA = "0x7742C0")]
		public void TrackPointLights(bool forceImmediateUpdate = false)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x77E040", Offset = "0x77E040", VA = "0x77E040")]
		private Light GetNearestLight(Light[] lights)
		{
			return null;
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x77E1FC", Offset = "0x77E1FC", VA = "0x77E1FC")]
		public static VolumetricFog CreateFogArea(Vector3 position, float radius, float height = 16f, float fallOff = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x77E430", Offset = "0x77E430", VA = "0x77E430")]
		public static VolumetricFog CreateFogArea(Vector3 position, Vector3 boxSize)
		{
			return null;
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x77E2C0", Offset = "0x77E2C0", VA = "0x77E2C0")]
		private static VolumetricFog CreateFogAreaPlaceholder(bool spherical, Vector3 position, float radius, float height, float depth)
		{
			return null;
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x77E4FC", Offset = "0x77E4FC", VA = "0x77E4FC")]
		public static void RemoveAllFogAreas()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x77B908", Offset = "0x77B908", VA = "0x77B908")]
		private void CheckFogAreaDimensions()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x7758F0", Offset = "0x7758F0", VA = "0x7758F0")]
		public void UpdateVolumeMask()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x77E65C", Offset = "0x77E65C", VA = "0x77E65C")]
		public void TogglePreviewMask()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x776B9C", Offset = "0x776B9C", VA = "0x776B9C")]
		private void RemoveMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x7796E0", Offset = "0x7796E0", VA = "0x7796E0")]
		private void FogOfWarInit()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x7771A0", Offset = "0x7771A0", VA = "0x7771A0")]
		private void FogOfWarDestroy()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x77EC18", Offset = "0x77EC18", VA = "0x77EC18")]
		public void ReloadFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x77D6BC", Offset = "0x77D6BC", VA = "0x77D6BC")]
		private void FogOfWarUpdateTexture()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x778998", Offset = "0x778998", VA = "0x778998")]
		public void UpdateFogOfWar(bool forceUpload = false)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x77F194", Offset = "0x77F194", VA = "0x77F194")]
		private void SetFowBlurTexture()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x77F448", Offset = "0x77F448", VA = "0x77F448")]
		private void CreateFoWBlurRTs()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x77F634", Offset = "0x77F634", VA = "0x77F634")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x77F668", Offset = "0x77F668", VA = "0x77F668")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x77FA44", Offset = "0x77FA44", VA = "0x77FA44")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x77F698", Offset = "0x77F698", VA = "0x77F698")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x77FA70", Offset = "0x77FA70", VA = "0x77FA70")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x77FEF0", Offset = "0x77FEF0", VA = "0x77FEF0")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x77FAB0", Offset = "0x77FAB0", VA = "0x77FAB0")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x77FF2C", Offset = "0x77FF2C", VA = "0x77FF2C")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x780178", Offset = "0x780178", VA = "0x780178")]
		public void ResetFogOfWarAlpha(Bounds bounds)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x780444", Offset = "0x780444", VA = "0x780444")]
		public void ResetFogOfWarAlpha(Vector3 position, Vector3 size)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x7801F4", Offset = "0x7801F4", VA = "0x7801F4")]
		public void ResetFogOfWarAlpha(Vector3 position, float extentsX, float extentsZ)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x77ED0C", Offset = "0x77ED0C", VA = "0x77ED0C")]
		public void ResetFogOfWar(byte alpha = byte.MaxValue)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x77EEC4", Offset = "0x77EEC4", VA = "0x77EEC4")]
		private void AddFogOfWarTransitionSlot(int x, int y, byte initialAlpha, byte targetAlpha, float delay, float duration)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x780564", Offset = "0x780564", VA = "0x780564")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x780730", Offset = "0x780730", VA = "0x780730")]
		private void ShowFoWGizmo()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x780830", Offset = "0x780830", VA = "0x780830")]
		public VolumetricFog()
		{
		}
	}
	[Token(Token = "0x2000327")]
	[ExecuteInEditMode]
	public class VolumetricFogDayCycleManager : MonoBehaviour
	{
		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C00D0", Offset = "0x4C00D0")]
		public float currentTime;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient colorOverTime;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve densityOverTime;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevTime;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VolumetricFog[] fogs;

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x7518A8", Offset = "0x7518A8", VA = "0x7518A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x751AAC", Offset = "0x751AAC", VA = "0x751AAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x751D00", Offset = "0x751D00", VA = "0x751D00")]
		private float GetCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x751D08", Offset = "0x751D08", VA = "0x751D08")]
		public VolumetricFogDayCycleManager()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public enum MASK_TEXTURE_BRUSH_MODE
	{
		[Token(Token = "0x40017D1")]
		AddFog,
		[Token(Token = "0x40017D2")]
		RemoveFog
	}
	[Token(Token = "0x2000329")]
	public class VolumetricFogLightParams : MonoBehaviour
	{
		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rangeMultiplier;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensityMultiplier;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x751D10", Offset = "0x751D10", VA = "0x751D10")]
		public VolumetricFogLightParams()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4BA128", Offset = "0x4BA128")]
	public class VolumetricFogMaterialIntegration : MonoBehaviour
	{
		[Token(Token = "0x200032B")]
		private enum PropertyType
		{
			[Token(Token = "0x40017DA")]
			Float,
			[Token(Token = "0x40017DB")]
			Float3,
			[Token(Token = "0x40017DC")]
			Float4,
			[Token(Token = "0x40017DD")]
			Color,
			[Token(Token = "0x40017DE")]
			Texture2D,
			[Token(Token = "0x40017DF")]
			FloatArray,
			[Token(Token = "0x40017E0")]
			Float4Array,
			[Token(Token = "0x40017E1")]
			ColorArray,
			[Token(Token = "0x40017E2")]
			Matrix4x4
		}

		[Token(Token = "0x200032C")]
		private struct Properties
		{
			[Token(Token = "0x40017E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x40017E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PropertyType type;
		}

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Properties[] props;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] keywords;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] materials;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x751D20", Offset = "0x751D20", VA = "0x751D20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x751D74", Offset = "0x751D74", VA = "0x751D74")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x752DD0", Offset = "0x752DD0", VA = "0x752DD0")]
		public VolumetricFogMaterialIntegration()
		{
		}
	}
	[Token(Token = "0x200032D")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4BA198", Offset = "0x4BA198")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4BA198", Offset = "0x4BA198")]
	public class VolumetricFogPosT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C00E8", Offset = "0x4C00E8")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material copyOpaqueMat;

		[Token(Token = "0x1700013D")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x75359C", Offset = "0x75359C", VA = "0x75359C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5374", Offset = "0x4C5374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x7535A4", Offset = "0x7535A4", VA = "0x7535A4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5384", Offset = "0x4C5384")]
			set
			{
			}
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x7535AC", Offset = "0x7535AC", VA = "0x7535AC")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x753850", Offset = "0x753850", VA = "0x753850", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x7538B4", Offset = "0x7538B4", VA = "0x7538B4")]
		public VolumetricFogPosT()
		{
		}
	}
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4BA23C", Offset = "0x4BA23C")]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4BA23C", Offset = "0x4BA23C")]
	[ExecuteInEditMode]
	public class VolumetricFogPreT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C00F8", Offset = "0x4C00F8")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture opaqueFrame;

		[Token(Token = "0x1700013E")]
		public VolumetricFog fog
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x7538BC", Offset = "0x7538BC", VA = "0x7538BC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5394", Offset = "0x4C5394")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x7538C4", Offset = "0x7538C4", VA = "0x7538C4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C53A4", Offset = "0x4C53A4")]
			set
			{
			}
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x7538CC", Offset = "0x7538CC", VA = "0x7538CC")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x753A88", Offset = "0x753A88", VA = "0x753A88")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x753B0C", Offset = "0x753B0C", VA = "0x753B0C", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x753B70", Offset = "0x753B70", VA = "0x753B70")]
		public VolumetricFogPreT()
		{
		}
	}
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4BA2E0", Offset = "0x4BA2E0")]
	public class VolumetricFogProfile : ScriptableObject
	{
		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LIGHTING_MODEL lightingModel;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool sunCopyColor;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0108", Offset = "0x4C0108")]
		public float density;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0120", Offset = "0x4C0120")]
		public float noiseStrength;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0138", Offset = "0x4C0138")]
		public float height;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0154", Offset = "0x4C0154")]
		public float heightFallOff;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baselineHeight;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C016C", Offset = "0x4C016C")]
		public float distance;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0188", Offset = "0x4C0188")]
		public float distanceFallOff;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxFogLength;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C01A0", Offset = "0x4C01A0")]
		public float maxFogLengthFallOff;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool baselineRelativeToCamera;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C01B8", Offset = "0x4C01B8")]
		public float baselineRelativeToCameraDelay;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C01D0", Offset = "0x4C01D0")]
		public float noiseScale;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C01EC", Offset = "0x4C01EC")]
		public float noiseSparse;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0208", Offset = "0x4C0208")]
		public float noiseFinalMultiplier;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0220", Offset = "0x4C0220")]
		public float alpha;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color color;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C023C", Offset = "0x4C023C")]
		public float deepObscurance;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color specularColor;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0254", Offset = "0x4C0254")]
		public float specularThreshold;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C026C", Offset = "0x4C026C")]
		public float specularIntensity;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 lightDirection;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0284", Offset = "0x4C0284")]
		public float lightIntensity;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color lightColor;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C029C", Offset = "0x4C029C")]
		public float speed;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool useRealTime;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector3 windDirection;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C02B4", Offset = "0x4C02B4")]
		public float turbulenceStrength;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool useXYPlane;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Color skyColor;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float skyHaze;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C02CC", Offset = "0x4C02CC")]
		public float skySpeed;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C02E4", Offset = "0x4C02E4")]
		public float skyNoiseStrength;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float skyNoiseScale;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C02FC", Offset = "0x4C02FC")]
		public float skyAlpha;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0314", Offset = "0x4C0314")]
		[SerializeField]
		private float skyDepth;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float stepping;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float steppingNear;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool dithering;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float ditherStrength;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool downsamplingOverride;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0358", Offset = "0x4C0358")]
		public int downsampling;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool forceComposition;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool edgeImprove;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0370", Offset = "0x4C0370")]
		public float edgeThreshold;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool lightScatteringOverride;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		public bool lightScatteringEnabled;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0390", Offset = "0x4C0390")]
		public float lightScatteringDiffusion;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C03A8", Offset = "0x4C03A8")]
		public float lightScatteringSpread;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C03C0", Offset = "0x4C03C0")]
		public int lightScatteringSamples;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C03DC", Offset = "0x4C03DC")]
		public float lightScatteringWeight;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C03F8", Offset = "0x4C03F8")]
		public float lightScatteringIllumination;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0414", Offset = "0x4C0414")]
		public float lightScatteringDecay;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0434", Offset = "0x4C0434")]
		public float lightScatteringExposure;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0450", Offset = "0x4C0450")]
		public float lightScatteringJittering;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0468", Offset = "0x4C0468")]
		public int lightScatteringBlurDownscale;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool fogVoidOverride;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public FOG_VOID_TOPOLOGY fogVoidTopology;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0480", Offset = "0x4C0480")]
		[SerializeField]
		public float fogVoidFallOff;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float fogVoidRadius;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Vector3 fogVoidPosition;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float fogVoidDepth;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float fogVoidHeight;

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x753B78", Offset = "0x753B78", VA = "0x753B78")]
		public void Load(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x753FB0", Offset = "0x753FB0", VA = "0x753FB0")]
		public void Save(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x7541DC", Offset = "0x7541DC", VA = "0x7541DC")]
		public static void Lerp(VolumetricFogProfile profile1, VolumetricFogProfile profile2, float t, VolumetricFog fog)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x754BF0", Offset = "0x754BF0", VA = "0x754BF0")]
		public VolumetricFogProfile()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000330")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700013F")]
		public bool Highlight
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x79C9DC", Offset = "0x79C9DC", VA = "0x79C9DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x79C9E4", Offset = "0x79C9E4", VA = "0x79C9E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x79C9F0", Offset = "0x79C9F0", VA = "0x79C9F0")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x79CBB8", Offset = "0x79CBB8", VA = "0x79CBB8", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x79CBE0", Offset = "0x79CBE0", VA = "0x79CBE0", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x79CC08", Offset = "0x79CC08", VA = "0x79CC08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x79CAB8", Offset = "0x79CAB8", VA = "0x79CAB8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x79CEA0", Offset = "0x79CEA0", VA = "0x79CEA0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000140")]
		public bool InRange
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x93E5D4", Offset = "0x93E5D4", VA = "0x93E5D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600101F")]
			[Address(RVA = "0x93E5DC", Offset = "0x93E5DC", VA = "0x93E5DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public bool Targeted
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x93E758", Offset = "0x93E758", VA = "0x93E758")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x93E760", Offset = "0x93E760", VA = "0x93E760")]
			set
			{
			}
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x93E76C", Offset = "0x93E76C", VA = "0x93E76C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x93E5E8", Offset = "0x93E5E8", VA = "0x93E5E8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x93E89C", Offset = "0x93E89C", VA = "0x93E89C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4BA334", Offset = "0x4BA334")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000142")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x93E8A4", Offset = "0x93E8A4", VA = "0x93E8A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x93E8AC", Offset = "0x93E8AC", VA = "0x93E8AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x93E8C8", Offset = "0x93E8C8", VA = "0x93E8C8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x93EAF8", Offset = "0x93EAF8", VA = "0x93EAF8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x93F3B8", Offset = "0x93F3B8", VA = "0x93F3B8", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x93F830", Offset = "0x93F830", VA = "0x93F830", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x93FAF0", Offset = "0x93FAF0", VA = "0x93FAF0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x93ED4C", Offset = "0x93ED4C", VA = "0x93ED4C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x93FBE0", Offset = "0x93FBE0", VA = "0x93FBE0")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x93FFDC", Offset = "0x93FFDC", VA = "0x93FFDC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x93FFF4", Offset = "0x93FFF4", VA = "0x93FFF4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x93FFFC", Offset = "0x93FFFC", VA = "0x93FFFC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x93078C", Offset = "0x93078C", VA = "0x93078C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x930844", Offset = "0x930844", VA = "0x930844")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x9308FC", Offset = "0x9308FC", VA = "0x9308FC")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000335")]
		public enum CrosshairState
		{
			[Token(Token = "0x400184B")]
			Disabled,
			[Token(Token = "0x400184C")]
			Enabled,
			[Token(Token = "0x400184D")]
			Targeted
		}

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x931CE8", Offset = "0x931CE8", VA = "0x931CE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x931D4C", Offset = "0x931D4C", VA = "0x931D4C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x931DE8", Offset = "0x931DE8", VA = "0x931DE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x931E30", Offset = "0x931E30", VA = "0x931E30")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001038")]
		[Address(RVA = "0x6C3F40", Offset = "0x6C3F40", VA = "0x6C3F40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x6C402C", Offset = "0x6C402C", VA = "0x6C402C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x6C4038", Offset = "0x6C4038", VA = "0x6C4038")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x6C4044", Offset = "0x6C4044", VA = "0x6C4044")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x9BADF8", Offset = "0x9BADF8", VA = "0x9BADF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x9BAE4C", Offset = "0x9BAE4C", VA = "0x9BAE4C")]
		private void Update()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x9BB1B8", Offset = "0x9BB1B8", VA = "0x9BB1B8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x9BB2BC", Offset = "0x9BB2BC", VA = "0x9BB2BC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x9BAE50", Offset = "0x9BAE50", VA = "0x9BAE50")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x9BB3C0", Offset = "0x9BB3C0", VA = "0x9BB3C0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000339")]
		public enum ContactTest
		{
			[Token(Token = "0x4001860")]
			PerpenTest,
			[Token(Token = "0x4001861")]
			BackwardsPress
		}

		[Token(Token = "0x4001851")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001852")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C05F0", Offset = "0x4C05F0")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000143")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x9BF01C", Offset = "0x9BF01C", VA = "0x9BF01C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000144")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x9BF024", Offset = "0x9BF024", VA = "0x9BF024")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000145")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x9BF030", Offset = "0x9BF030", VA = "0x9BF030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C53C4", Offset = "0x4C53C4")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x9BF038", Offset = "0x9BF038", VA = "0x9BF038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C53D4", Offset = "0x4C53D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x9BF040", Offset = "0x9BF040", VA = "0x9BF040", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x9BF12C", Offset = "0x9BF12C", VA = "0x9BF12C")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x9BF298", Offset = "0x9BF298", VA = "0x9BF298", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x9BF850", Offset = "0x9BF850", VA = "0x9BF850")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x9BF8FC", Offset = "0x9BF8FC", VA = "0x9BF8FC")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x9BF768", Offset = "0x9BF768", VA = "0x9BF768")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x9BFA08", Offset = "0x9BFA08", VA = "0x9BFA08")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x9BFA8C", Offset = "0x9BFA8C", VA = "0x9BFA8C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x9BFB18", Offset = "0x9BFB18", VA = "0x9BFB18")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C0610", Offset = "0x4C0610")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C0620", Offset = "0x4C0620")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000146")]
		public Collider Collider
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x896E74", Offset = "0x896E74", VA = "0x896E74", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C53E4", Offset = "0x4C53E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x896E7C", Offset = "0x896E7C", VA = "0x896E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C53F4", Offset = "0x4C53F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x896E84", Offset = "0x896E84", VA = "0x896E84", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5404", Offset = "0x4C5404")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x896E8C", Offset = "0x896E8C", VA = "0x896E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5414", Offset = "0x4C5414")]
			private set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x896E94", Offset = "0x896E94", VA = "0x896E94", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x896EE4", Offset = "0x896EE4", VA = "0x896EE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x896F68", Offset = "0x896F68", VA = "0x896F68")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000149")]
		Collider Collider
		{
			[Token(Token = "0x6001056")]
			get;
		}

		[Token(Token = "0x1700014A")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001057")]
			get;
		}

		[Token(Token = "0x1700014B")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001058")]
			get;
		}
	}
	[Token(Token = "0x200033C")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x79C638", Offset = "0x79C638", VA = "0x79C638")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200033D")]
	public enum InteractionType
	{
		[Token(Token = "0x400186A")]
		Enter,
		[Token(Token = "0x400186B")]
		Stay,
		[Token(Token = "0x400186C")]
		Exit
	}
	[Token(Token = "0x200033E")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200033F")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400187E")]
			Mesh,
			[Token(Token = "0x400187F")]
			Skeleton,
			[Token(Token = "0x4001880")]
			Both
		}

		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA394", Offset = "0x4BA394")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000157")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600107B")]
				[Address(RVA = "0x7626B4", Offset = "0x7626B4", VA = "0x7626B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000158")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600107D")]
				[Address(RVA = "0x7626FC", Offset = "0x7626FC", VA = "0x7626FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x762454", Offset = "0x762454", VA = "0x762454")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x762480", Offset = "0x762480", VA = "0x762480", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600107A")]
			[Address(RVA = "0x762484", Offset = "0x762484", VA = "0x762484", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600107C")]
			[Address(RVA = "0x7626BC", Offset = "0x7626BC", VA = "0x7626BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400186D")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C0650", Offset = "0x4C0650")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700014C")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x8709A8", Offset = "0x8709A8", VA = "0x8709A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x8709E0", Offset = "0x8709E0", VA = "0x8709E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x870A48", Offset = "0x870A48", VA = "0x870A48")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x870A80", Offset = "0x870A80", VA = "0x870A80")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x870AE8", Offset = "0x870AE8", VA = "0x870AE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x870B20", Offset = "0x870B20", VA = "0x870B20")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x870B88", Offset = "0x870B88", VA = "0x870B88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x870BC0", Offset = "0x870BC0", VA = "0x870BC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x870C28", Offset = "0x870C28", VA = "0x870C28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x870C60", Offset = "0x870C60", VA = "0x870C60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x870CC8", Offset = "0x870CC8", VA = "0x870CC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x870CFC", Offset = "0x870CFC", VA = "0x870CFC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x870D60", Offset = "0x870D60", VA = "0x870D60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x870D94", Offset = "0x870D94", VA = "0x870D94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x870DF8", Offset = "0x870DF8", VA = "0x870DF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x870E2C", Offset = "0x870E2C", VA = "0x870E2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x870E90", Offset = "0x870E90", VA = "0x870E90")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x870EC4", Offset = "0x870EC4", VA = "0x870EC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x870F28", Offset = "0x870F28", VA = "0x870F28")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x870F5C", Offset = "0x870F5C", VA = "0x870F5C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x870FC0", Offset = "0x870FC0", VA = "0x870FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5424", Offset = "0x4C5424")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x87100C", Offset = "0x87100C", VA = "0x87100C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5434", Offset = "0x4C5434")]
			private set
			{
			}
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x87105C", Offset = "0x87105C", VA = "0x87105C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x871404", Offset = "0x871404", VA = "0x871404")]
		private void Update()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x871398", Offset = "0x871398", VA = "0x871398")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5444", Offset = "0x4C5444")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x87148C", Offset = "0x87148C", VA = "0x87148C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x871570", Offset = "0x871570", VA = "0x871570")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x871750", Offset = "0x871750", VA = "0x871750")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x87198C", Offset = "0x87198C", VA = "0x87198C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x871B18", Offset = "0x871B18", VA = "0x871B18")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000342")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x762E24", Offset = "0x762E24", VA = "0x762E24")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000159")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x87C520", Offset = "0x87C520", VA = "0x87C520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x87C528", Offset = "0x87C528", VA = "0x87C528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x87C530", Offset = "0x87C530", VA = "0x87C530")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0x87C538", Offset = "0x87C538", VA = "0x87C538", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0x87C540", Offset = "0x87C540", VA = "0x87C540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C54F4", Offset = "0x4C54F4")]
			add
			{
			}
			[Token(Token = "0x6001083")]
			[Address(RVA = "0x87C5E0", Offset = "0x87C5E0", VA = "0x87C5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5504", Offset = "0x4C5504")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x87C6F0", Offset = "0x87C6F0", VA = "0x87C6F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5514", Offset = "0x4C5514")]
			add
			{
			}
			[Token(Token = "0x6001086")]
			[Address(RVA = "0x87C790", Offset = "0x87C790", VA = "0x87C790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5524", Offset = "0x4C5524")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x87C8A0", Offset = "0x87C8A0", VA = "0x87C8A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5534", Offset = "0x4C5534")]
			add
			{
			}
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x87C940", Offset = "0x87C940", VA = "0x87C940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5544", Offset = "0x4C5544")]
			remove
			{
			}
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x87C680", Offset = "0x87C680", VA = "0x87C680", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x87C830", Offset = "0x87C830", VA = "0x87C830", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x87C9E0", Offset = "0x87C9E0", VA = "0x87C9E0", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600108B")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x87CA50", Offset = "0x87CA50", VA = "0x87CA50", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x87CB7C", Offset = "0x87CB7C", VA = "0x87CB7C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x87CCA8", Offset = "0x87CCA8", VA = "0x87CCA8")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400188C")]
		None,
		[Token(Token = "0x400188D")]
		Proximity,
		[Token(Token = "0x400188E")]
		Contact,
		[Token(Token = "0x400188F")]
		Action
	}
	[Token(Token = "0x2000344")]
	public enum InteractableState
	{
		[Token(Token = "0x4001891")]
		Default,
		[Token(Token = "0x4001892")]
		ProximityState,
		[Token(Token = "0x4001893")]
		ContactState,
		[Token(Token = "0x4001894")]
		ActionState
	}
	[Token(Token = "0x2000345")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x87CDE8", Offset = "0x87CDE8", VA = "0x87CDE8")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700015D")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x87CCF4", Offset = "0x87CCF4", VA = "0x87CCF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x87CAB0", Offset = "0x87CAB0", VA = "0x87CAB0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x87CBDC", Offset = "0x87CBDC", VA = "0x87CBDC")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x87CD58", Offset = "0x87CD58", VA = "0x87CD58")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA3A4", Offset = "0x4BA3A4")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400189D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400189E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400189F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40018A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40018A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40018A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40018A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40018A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40018A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700015E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600109E")]
				[Address(RVA = "0x76330C", Offset = "0x76330C", VA = "0x76330C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A0")]
				[Address(RVA = "0x763354", Offset = "0x763354", VA = "0x763354", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600109A")]
			[Address(RVA = "0x762E70", Offset = "0x762E70", VA = "0x762E70")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0x762E9C", Offset = "0x762E9C", VA = "0x762E9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x762F0C", Offset = "0x762F0C", VA = "0x762F0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600109D")]
			[Address(RVA = "0x762EB8", Offset = "0x762EB8", VA = "0x762EB8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600109F")]
			[Address(RVA = "0x763314", Offset = "0x763314", VA = "0x763314", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x87DAD4", Offset = "0x87DAD4", VA = "0x87DAD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x87DB50", Offset = "0x87DB50", VA = "0x87DB50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5554", Offset = "0x4C5554")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x87DBD8", Offset = "0x87DBD8", VA = "0x87DBD8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x87DCC0", Offset = "0x87DCC0", VA = "0x87DCC0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000160")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x672DB0", Offset = "0x672DB0", VA = "0x672DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x672F2C", Offset = "0x672F2C", VA = "0x672F2C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x672FD4", Offset = "0x672FD4", VA = "0x672FD4")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x67307C", Offset = "0x67307C", VA = "0x67307C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x673344", Offset = "0x673344", VA = "0x673344")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x67338C", Offset = "0x67338C", VA = "0x67338C")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x673628", Offset = "0x673628", VA = "0x673628")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x673774", Offset = "0x673774", VA = "0x673774")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA3B4", Offset = "0x4BA3B4")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000165")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010BA")]
				[Address(RVA = "0x761658", Offset = "0x761658", VA = "0x761658", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000166")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010BC")]
				[Address(RVA = "0x7616A0", Offset = "0x7616A0", VA = "0x7616A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x761244", Offset = "0x761244", VA = "0x761244")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x761270", Offset = "0x761270", VA = "0x761270", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x761274", Offset = "0x761274", VA = "0x761274", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x761660", Offset = "0x761660", VA = "0x761660", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018AD")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000161")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x84F62C", Offset = "0x84F62C", VA = "0x84F62C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000162")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x84F634", Offset = "0x84F634", VA = "0x84F634", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000163")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x84F63C", Offset = "0x84F63C", VA = "0x84F63C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public override bool EnableState
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x84F644", Offset = "0x84F644", VA = "0x84F644", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x84F670", Offset = "0x84F670", VA = "0x84F670", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x84F6AC", Offset = "0x84F6AC", VA = "0x84F6AC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x84F74C", Offset = "0x84F74C", VA = "0x84F74C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5604", Offset = "0x4C5604")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x84F7B8", Offset = "0x84F7B8", VA = "0x84F7B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x84FA58", Offset = "0x84FA58", VA = "0x84FA58")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x84FBE4", Offset = "0x84FBE4", VA = "0x84FBE4")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x84FCDC", Offset = "0x84FCDC", VA = "0x84FCDC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x84FFD4", Offset = "0x84FFD4", VA = "0x84FFD4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x84FFD8", Offset = "0x84FFD8", VA = "0x84FFD8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x84FFDC", Offset = "0x84FFDC", VA = "0x84FFDC")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C06E0", Offset = "0x4C06E0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C06F0", Offset = "0x4C06F0")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C0700", Offset = "0x4C0700")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000167")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x84FFF4", Offset = "0x84FFF4", VA = "0x84FFF4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C56B4", Offset = "0x4C56B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x84FFFC", Offset = "0x84FFFC", VA = "0x84FFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C56C4", Offset = "0x4C56C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public bool EnableState
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x850004", Offset = "0x850004", VA = "0x850004", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x850020", Offset = "0x850020", VA = "0x850020", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x850040", Offset = "0x850040", VA = "0x850040", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C56D4", Offset = "0x4C56D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x850048", Offset = "0x850048", VA = "0x850048", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C56E4", Offset = "0x4C56E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public float SphereRadius
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x850054", Offset = "0x850054", VA = "0x850054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C56F4", Offset = "0x4C56F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x85005C", Offset = "0x85005C", VA = "0x85005C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5704", Offset = "0x4C5704")]
			private set
			{
			}
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x850064", Offset = "0x850064", VA = "0x850064")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x8500AC", Offset = "0x8500AC", VA = "0x8500AC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x8500B0", Offset = "0x8500B0", VA = "0x8500B0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40018C0")]
		None = 0,
		[Token(Token = "0x40018C1")]
		Ray = 1,
		[Token(Token = "0x40018C2")]
		Poke = 4,
		[Token(Token = "0x40018C3")]
		All = -1
	}
	[Token(Token = "0x200034E")]
	public enum ToolInputState
	{
		[Token(Token = "0x40018C5")]
		Inactive,
		[Token(Token = "0x40018C6")]
		PrimaryInputDown,
		[Token(Token = "0x40018C7")]
		PrimaryInputDownStay,
		[Token(Token = "0x40018C8")]
		PrimaryInputUp
	}
	[Token(Token = "0x200034F")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x87CCB0", Offset = "0x87CCB0", VA = "0x87CCB0")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000350")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C0710", Offset = "0x4C0710")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C0720", Offset = "0x4C0720")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C0730", Offset = "0x4C0730")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700016B")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x87CE88", Offset = "0x87CE88", VA = "0x87CE88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x87CE90", Offset = "0x87CE90", VA = "0x87CE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5714", Offset = "0x4C5714")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x87CE98", Offset = "0x87CE98", VA = "0x87CE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5724", Offset = "0x4C5724")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60010CC")]
			get;
		}

		[Token(Token = "0x1700016E")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60010CD")]
			get;
		}

		[Token(Token = "0x1700016F")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60010CE")]
			get;
		}

		[Token(Token = "0x17000170")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x87CEA4", Offset = "0x87CEA4", VA = "0x87CEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5734", Offset = "0x4C5734")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x87CEB0", Offset = "0x87CEB0", VA = "0x87CEB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5744", Offset = "0x4C5744")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x87CEBC", Offset = "0x87CEBC", VA = "0x87CEBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5754", Offset = "0x4C5754")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x87CEC8", Offset = "0x87CEC8", VA = "0x87CEC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5764", Offset = "0x4C5764")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60010D7")]
			get;
			[Token(Token = "0x60010D8")]
			set;
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x87CED4", Offset = "0x87CED4", VA = "0x87CED4")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60010D4")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60010D5")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60010D6")]
		public abstract void DeFocus();

		[Token(Token = "0x60010D9")]
		public abstract void Initialize();

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x87CEDC", Offset = "0x87CEDC", VA = "0x87CEDC")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x87CF28", Offset = "0x87CF28", VA = "0x87CF28")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x87CF7C", Offset = "0x87CF7C", VA = "0x87CF7C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x87D210", Offset = "0x87D210", VA = "0x87D210", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x87D98C", Offset = "0x87D98C", VA = "0x87D98C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000173")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60010DF")]
			get;
		}

		[Token(Token = "0x17000174")]
		bool EnableState
		{
			[Token(Token = "0x60010E1")]
			get;
			[Token(Token = "0x60010E2")]
			set;
		}

		[Token(Token = "0x17000175")]
		bool ToolActivateState
		{
			[Token(Token = "0x60010E3")]
			get;
			[Token(Token = "0x60010E4")]
			set;
		}

		[Token(Token = "0x60010E0")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000352")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000353")]
		private enum PinchState
		{
			[Token(Token = "0x40018D9")]
			None,
			[Token(Token = "0x40018DA")]
			PinchDown,
			[Token(Token = "0x40018DB")]
			PinchStay,
			[Token(Token = "0x40018DC")]
			PinchUp
		}

		[Token(Token = "0x40018D5")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000176")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x6C43D8", Offset = "0x6C43D8", VA = "0x6C43D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x6C4460", Offset = "0x6C4460", VA = "0x6C4460")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x6C44E8", Offset = "0x6C44E8", VA = "0x6C44E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x6C4570", Offset = "0x6C4570", VA = "0x6C4570")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x6C459C", Offset = "0x6C459C", VA = "0x6C459C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40018DD")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40018DE")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40018DF")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40018E0")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40018E1")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0750", Offset = "0x4C0750")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000179")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x7CF7A0", Offset = "0x7CF7A0", VA = "0x7CF7A0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700017A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x7CF7A8", Offset = "0x7CF7A8", VA = "0x7CF7A8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700017B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x7CF81C", Offset = "0x7CF81C", VA = "0x7CF81C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public override bool EnableState
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x7CF824", Offset = "0x7CF824", VA = "0x7CF824", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x7CF868", Offset = "0x7CF868", VA = "0x7CF868", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x7CF8DC", Offset = "0x7CF8DC", VA = "0x7CF8DC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x7CF93C", Offset = "0x7CF93C", VA = "0x7CF93C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x7CF9E0", Offset = "0x7CF9E0", VA = "0x7CF9E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x7CFCA4", Offset = "0x7CFCA4", VA = "0x7CFCA4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x7CFD2C", Offset = "0x7CFD2C", VA = "0x7CFD2C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x7D00D4", Offset = "0x7D00D4", VA = "0x7D00D4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x7D01E4", Offset = "0x7D01E4", VA = "0x7D01E4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x7D0308", Offset = "0x7D0308", VA = "0x7D0308")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x7D060C", Offset = "0x7D060C", VA = "0x7D060C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x7D09A0", Offset = "0x7D09A0", VA = "0x7D09A0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x7D0A70", Offset = "0x7D0A70", VA = "0x7D0A70", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x7D0AA4", Offset = "0x7D0AA4", VA = "0x7D0AA4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40018ED")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40018EE")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C07C4", Offset = "0x4C07C4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700017D")]
		public bool EnableState
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x7CF84C", Offset = "0x7CF84C", VA = "0x7CF84C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x7CF884", Offset = "0x7CF884", VA = "0x7CF884", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x7D0B6C", Offset = "0x7D0B6C", VA = "0x7D0B6C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x7CFC68", Offset = "0x7CFC68", VA = "0x7CFC68", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x7D0DB0", Offset = "0x7D0DB0", VA = "0x7D0DB0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5774", Offset = "0x4C5774")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001101")]
			[Address(RVA = "0x7D0DB8", Offset = "0x7D0DB8", VA = "0x7D0DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5784", Offset = "0x4C5784")]
			set
			{
			}
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x7D0B74", Offset = "0x7D0B74", VA = "0x7D0B74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x7D09D4", Offset = "0x7D09D4", VA = "0x7D09D4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x7D0DC0", Offset = "0x7D0DC0", VA = "0x7D0DC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x7D1034", Offset = "0x7D1034", VA = "0x7D1034")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x7D1124", Offset = "0x7D1124", VA = "0x7D1124")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000180")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x94001C", Offset = "0x94001C", VA = "0x94001C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x940024", Offset = "0x940024", VA = "0x940024")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x9400AC", Offset = "0x9400AC", VA = "0x9400AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x9400B4", Offset = "0x9400B4", VA = "0x9400B4")]
			set
			{
			}
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x940120", Offset = "0x940120", VA = "0x940120")]
		private void Start()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x9403E4", Offset = "0x9403E4", VA = "0x9403E4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x9403F4", Offset = "0x9403F4", VA = "0x9403F4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x940404", Offset = "0x940404", VA = "0x940404")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x79DA3C", Offset = "0x79DA3C", VA = "0x79DA3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x79DA40", Offset = "0x79DA40", VA = "0x79DA40")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x79DA78", Offset = "0x79DA78", VA = "0x79DA78")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x79DAB0", Offset = "0x79DAB0", VA = "0x79DAB0")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x79DAE8", Offset = "0x79DAE8", VA = "0x79DAE8")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x79DB20", Offset = "0x79DB20", VA = "0x79DB20")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x79DB58", Offset = "0x79DB58", VA = "0x79DB58")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x79DB90", Offset = "0x79DB90", VA = "0x79DB90")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x79DC04", Offset = "0x79DC04", VA = "0x79DC04")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x79DC74", Offset = "0x79DC74", VA = "0x79DC74")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x7A1990", Offset = "0x7A1990", VA = "0x7A1990")]
		private void Start()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x7A1994", Offset = "0x7A1994", VA = "0x7A1994")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x79DC38", Offset = "0x79DC38", VA = "0x79DC38")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x7A19D4", Offset = "0x7A19D4", VA = "0x7A19D4")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA3D4", Offset = "0x4BA3D4")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x400190D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000182")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001124")]
				[Address(RVA = "0xDB54A8", Offset = "0xDB54A8", VA = "0xDB54A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000183")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001126")]
				[Address(RVA = "0xDB54F0", Offset = "0xDB54F0", VA = "0xDB54F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001121")]
			[Address(RVA = "0xDB52CC", Offset = "0xDB52CC", VA = "0xDB52CC")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001122")]
			[Address(RVA = "0xDB52F8", Offset = "0xDB52F8", VA = "0xDB52F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0xDB52FC", Offset = "0xDB52FC", VA = "0xDB52FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001125")]
			[Address(RVA = "0xDB54B0", Offset = "0xDB54B0", VA = "0xDB54B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018FE")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40018FF")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x6C0E1C", Offset = "0x6C0E1C", VA = "0x6C0E1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x6C0EBC", Offset = "0x6C0EBC", VA = "0x6C0EBC")]
		private void Update()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x6C10F0", Offset = "0x6C10F0", VA = "0x6C10F0")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x6C1084", Offset = "0x6C1084", VA = "0x6C1084")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5794", Offset = "0x4C5794")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x6C113C", Offset = "0x6C113C", VA = "0x6C113C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200035C")]
		public enum SelectionState
		{
			[Token(Token = "0x4001915")]
			Off,
			[Token(Token = "0x4001916")]
			Selected,
			[Token(Token = "0x4001917")]
			Highlighted
		}

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000184")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x836F7C", Offset = "0x836F7C", VA = "0x836F7C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x836F84", Offset = "0x836F84", VA = "0x836F84")]
			set
			{
			}
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x837108", Offset = "0x837108", VA = "0x837108")]
		private void Awake()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x8372D0", Offset = "0x8372D0", VA = "0x8372D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x83700C", Offset = "0x83700C", VA = "0x83700C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x8373BC", Offset = "0x8373BC", VA = "0x8373BC")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200035E")]
		public enum SegmentType
		{
			[Token(Token = "0x4001926")]
			Straight,
			[Token(Token = "0x4001927")]
			LeftTurn,
			[Token(Token = "0x4001928")]
			RightTurn,
			[Token(Token = "0x4001929")]
			Switch
		}

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x400191E")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400191F")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C08A4", Offset = "0x4C08A4")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000185")]
		public float StartDistance
		{
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x765E60", Offset = "0x765E60", VA = "0x765E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5844", Offset = "0x4C5844")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x765E68", Offset = "0x765E68", VA = "0x765E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5854", Offset = "0x4C5854")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public float GridSize
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x765E70", Offset = "0x765E70", VA = "0x765E70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x765E78", Offset = "0x765E78", VA = "0x765E78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public int SubDivCount
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x765E80", Offset = "0x765E80", VA = "0x765E80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x765E88", Offset = "0x765E88", VA = "0x765E88")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public SegmentType Type
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x765E90", Offset = "0x765E90", VA = "0x765E90")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000189")]
		public Pose EndPose
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x765E98", Offset = "0x765E98", VA = "0x765E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public float Radius
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x7661F4", Offset = "0x7661F4", VA = "0x7661F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018B")]
		public float SegmentLength
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x765F00", Offset = "0x765F00", VA = "0x765F00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x766204", Offset = "0x766204", VA = "0x766204")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x76621C", Offset = "0x76621C", VA = "0x76621C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x765F40", Offset = "0x765F40", VA = "0x765F40")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x766220", Offset = "0x766220", VA = "0x766220")]
		private void Update()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x766224", Offset = "0x766224", VA = "0x766224")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x76628C", Offset = "0x76628C", VA = "0x76628C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x766B54", Offset = "0x766B54", VA = "0x766B54")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x766DE0", Offset = "0x766DE0", VA = "0x766DE0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA3E4", Offset = "0x4BA3E4")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700018C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600114E")]
				[Address(RVA = "0xDB8278", Offset = "0xDB8278", VA = "0xDB8278", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001150")]
				[Address(RVA = "0xDB82C0", Offset = "0xDB82C0", VA = "0xDB82C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114B")]
			[Address(RVA = "0xDB80E4", Offset = "0xDB80E4", VA = "0xDB80E4")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600114C")]
			[Address(RVA = "0xDB8110", Offset = "0xDB8110", VA = "0xDB8110", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600114D")]
			[Address(RVA = "0xDB8114", Offset = "0xDB8114", VA = "0xDB8114", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600114F")]
			[Address(RVA = "0xDB8280", Offset = "0xDB8280", VA = "0xDB8280", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400192A")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400192B")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x767CA8", Offset = "0x767CA8", VA = "0x767CA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x767D50", Offset = "0x767D50", VA = "0x767D50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x767E00", Offset = "0x767E00", VA = "0x767E00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x767F78", Offset = "0x767F78", VA = "0x767F78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x768140", Offset = "0x768140", VA = "0x768140")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x768228", Offset = "0x768228", VA = "0x768228")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x76842C", Offset = "0x76842C", VA = "0x76842C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x76833C", Offset = "0x76833C", VA = "0x76833C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x768350", Offset = "0x768350", VA = "0x768350")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x768484", Offset = "0x768484", VA = "0x768484")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5864", Offset = "0x4C5864")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x7684F0", Offset = "0x7684F0", VA = "0x7684F0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700018E")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x7685A0", Offset = "0x7685A0", VA = "0x7685A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x7685B0", Offset = "0x7685B0", VA = "0x7685B0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x7685B8", Offset = "0x7685B8", VA = "0x7685B8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x7688FC", Offset = "0x7688FC", VA = "0x7688FC")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001943")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001944")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C09A4", Offset = "0x4C09A4")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700018F")]
		public float Distance
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x7689F4", Offset = "0x7689F4", VA = "0x7689F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5914", Offset = "0x4C5914")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x7689FC", Offset = "0x7689FC", VA = "0x7689FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5924", Offset = "0x4C5924")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public float Scale
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x768A04", Offset = "0x768A04", VA = "0x768A04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x768A0C", Offset = "0x768A0C", VA = "0x768A0C")]
			set
			{
			}
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x7685B4", Offset = "0x7685B4", VA = "0x7685B4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x768A14", Offset = "0x768A14", VA = "0x768A14")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x768600", Offset = "0x768600", VA = "0x768600")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x768824", Offset = "0x768824", VA = "0x768824")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600115D")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x768968", Offset = "0x768968", VA = "0x768968")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA3F4", Offset = "0x4BA3F4")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000191")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600116C")]
				[Address(RVA = "0xDB8520", Offset = "0xDB8520", VA = "0xDB8520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000192")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600116E")]
				[Address(RVA = "0xDB8568", Offset = "0xDB8568", VA = "0xDB8568", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0xDB82C8", Offset = "0xDB82C8", VA = "0xDB82C8")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0xDB82F4", Offset = "0xDB82F4", VA = "0xDB82F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0xDB82F8", Offset = "0xDB82F8", VA = "0xDB82F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0xDB8528", Offset = "0xDB8528", VA = "0xDB8528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x768BB4", Offset = "0x768BB4", VA = "0x768BB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x768C00", Offset = "0x768C00", VA = "0x768C00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x768D08", Offset = "0x768D08", VA = "0x768D08")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x768E68", Offset = "0x768E68", VA = "0x768E68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x768D64", Offset = "0x768D64", VA = "0x768D64")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x768F44", Offset = "0x768F44", VA = "0x768F44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5934", Offset = "0x4C5934")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x768FC0", Offset = "0x768FC0", VA = "0x768FC0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x76906C", Offset = "0x76906C", VA = "0x76906C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x7690CC", Offset = "0x7690CC", VA = "0x7690CC")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000366")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001981")]
			Start,
			[Token(Token = "0x4001982")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001983")]
			Stop
		}

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA404", Offset = "0x4BA404")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000193")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001181")]
				[Address(RVA = "0xDB87C8", Offset = "0xDB87C8", VA = "0xDB87C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001183")]
				[Address(RVA = "0xDB8810", Offset = "0xDB8810", VA = "0xDB8810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0xDB8570", Offset = "0xDB8570", VA = "0xDB8570")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600117F")]
			[Address(RVA = "0xDB859C", Offset = "0xDB859C", VA = "0xDB859C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001180")]
			[Address(RVA = "0xDB85A0", Offset = "0xDB85A0", VA = "0xDB85A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0xDB87D0", Offset = "0xDB87D0", VA = "0xDB87D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001963")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001964")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001965")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001966")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0A04", Offset = "0x4C0A04")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x769128", Offset = "0x769128", VA = "0x769128")]
		private void Start()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x76927C", Offset = "0x76927C", VA = "0x76927C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x769288", Offset = "0x769288", VA = "0x769288", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x7693D8", Offset = "0x7693D8", VA = "0x7693D8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x7691FC", Offset = "0x7691FC", VA = "0x7691FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C59E4", Offset = "0x4C59E4")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x769424", Offset = "0x769424", VA = "0x769424")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x769374", Offset = "0x769374", VA = "0x769374")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x769640", Offset = "0x769640", VA = "0x769640")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x76977C", Offset = "0x76977C", VA = "0x76977C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x7696AC", Offset = "0x7696AC", VA = "0x7696AC")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x7697E8", Offset = "0x7697E8", VA = "0x7697E8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x769808", Offset = "0x769808", VA = "0x769808")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x769894", Offset = "0x769894", VA = "0x769894")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x76994C", Offset = "0x76994C", VA = "0x76994C")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x76995C", Offset = "0x76995C", VA = "0x76995C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000195")]
		public float TrackLength
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x7699C4", Offset = "0x7699C4", VA = "0x7699C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x7699CC", Offset = "0x7699CC", VA = "0x7699CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x7699D4", Offset = "0x7699D4", VA = "0x7699D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x768A94", Offset = "0x768A94", VA = "0x768A94")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x7699D8", Offset = "0x7699D8", VA = "0x7699D8")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x769BD8", Offset = "0x769BD8", VA = "0x769BD8")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x769CD4", Offset = "0x769CD4", VA = "0x769CD4")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class Pose
	{
		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x6C54F0", Offset = "0x6C54F0", VA = "0x6C54F0")]
		public Pose()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x6C5534", Offset = "0x6C5534", VA = "0x6C5534")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA414", Offset = "0x4BA414")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40019A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40019A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000197")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001199")]
				[Address(RVA = "0xDBA110", Offset = "0xDBA110", VA = "0xDBA110", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000198")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600119B")]
				[Address(RVA = "0xDBA158", Offset = "0xDBA158", VA = "0xDBA158", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001196")]
			[Address(RVA = "0xDB9F68", Offset = "0xDB9F68", VA = "0xDB9F68")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001197")]
			[Address(RVA = "0xDB9F94", Offset = "0xDB9F94", VA = "0xDB9F94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0xDB9F98", Offset = "0xDB9F98", VA = "0xDB9F98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600119A")]
			[Address(RVA = "0xDBA118", Offset = "0xDBA118", VA = "0xDBA118", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA424", Offset = "0x4BA424")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000199")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600119F")]
				[Address(RVA = "0xDBA25C", Offset = "0xDBA25C", VA = "0xDBA25C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A1")]
				[Address(RVA = "0xDBA2A4", Offset = "0xDBA2A4", VA = "0xDBA2A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600119C")]
			[Address(RVA = "0xDBA160", Offset = "0xDBA160", VA = "0xDBA160")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600119D")]
			[Address(RVA = "0xDBA18C", Offset = "0xDBA18C", VA = "0xDBA18C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600119E")]
			[Address(RVA = "0xDBA190", Offset = "0xDBA190", VA = "0xDBA190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0xDBA264", Offset = "0xDBA264", VA = "0xDBA264", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001996")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C0BEC", Offset = "0x4C0BEC")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000196")]
		public bool IsMoving
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x75742C", Offset = "0x75742C", VA = "0x75742C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5A94", Offset = "0x4C5A94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x757434", Offset = "0x757434", VA = "0x757434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5AA4", Offset = "0x4C5AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x757440", Offset = "0x757440", VA = "0x757440")]
		private void Start()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x75747C", Offset = "0x75747C", VA = "0x75747C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x757560", Offset = "0x757560", VA = "0x757560")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x7575C8", Offset = "0x7575C8", VA = "0x7575C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5AB4", Offset = "0x4C5AB4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x757644", Offset = "0x757644", VA = "0x757644")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5B14", Offset = "0x4C5B14")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x7576D4", Offset = "0x7576D4", VA = "0x7576D4")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x757740", Offset = "0x757740", VA = "0x757740")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x757748", Offset = "0x757748", VA = "0x757748")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x7577AC", Offset = "0x7577AC", VA = "0x7577AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x757890", Offset = "0x757890", VA = "0x757890")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x7579C8", Offset = "0x7579C8", VA = "0x7579C8")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x757A44", Offset = "0x757A44", VA = "0x757A44")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x757B20", Offset = "0x757B20", VA = "0x757B20")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40019B3")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40019B4")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40019B5")]
		EUDT_None,
		[Token(Token = "0x40019B6")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200036F")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA434", Offset = "0x4BA434")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700019B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011BB")]
				[Address(RVA = "0xDB3788", Offset = "0xDB3788", VA = "0xDB3788", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011BD")]
				[Address(RVA = "0xDB37D0", Offset = "0xDB37D0", VA = "0xDB37D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xDB3574", Offset = "0xDB3574", VA = "0xDB3574")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60011B9")]
			[Address(RVA = "0xDB35A0", Offset = "0xDB35A0", VA = "0xDB35A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011BA")]
			[Address(RVA = "0xDB35A4", Offset = "0xDB35A4", VA = "0xDB35A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xDB3790", Offset = "0xDB3790", VA = "0xDB3790", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40019B8")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40019B9")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40019BA")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4C0C2C", Offset = "0x4C0C2C")]
		public GameObject mainCamera;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4C0C64", Offset = "0x4C0C64")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x911E38", Offset = "0x911E38", VA = "0x911E38")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x912670", Offset = "0x912670", VA = "0x912670")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x9127B8", Offset = "0x9127B8", VA = "0x9127B8")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x9128E8", Offset = "0x9128E8", VA = "0x9128E8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x912A18", Offset = "0x912A18", VA = "0x912A18")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x91278C", Offset = "0x91278C", VA = "0x91278C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x912AF8", Offset = "0x912AF8", VA = "0x912AF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5C14", Offset = "0x4C5C14")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x912B64", Offset = "0x912B64", VA = "0x912B64")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x912288", Offset = "0x912288", VA = "0x912288")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x912CB8", Offset = "0x912CB8", VA = "0x912CB8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x912B98", Offset = "0x912B98", VA = "0x912B98")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x912FD0", Offset = "0x912FD0", VA = "0x912FD0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x9130C0", Offset = "0x9130C0", VA = "0x9130C0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x913144", Offset = "0x913144", VA = "0x913144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5C74", Offset = "0x4C5C74")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x91319C", Offset = "0x91319C", VA = "0x91319C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5C84", Offset = "0x4C5C84")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x9131F4", Offset = "0x9131F4", VA = "0x9131F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5C94", Offset = "0x4C5C94")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4BA444", Offset = "0x4BA444")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA4A4", Offset = "0x4BA4A4")]
		private sealed class <>c
		{
			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x762280", Offset = "0x762280", VA = "0x762280")]
			public <>c()
			{
			}

			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x762288", Offset = "0x762288", VA = "0x762288")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019D2")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40019D3")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40019D4")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40019D5")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40019D6")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40019D7")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40019D8")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40019D9")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40019DA")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40019DB")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40019DC")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x936060", Offset = "0x936060", VA = "0x936060")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x9360B4", Offset = "0x9360B4", VA = "0x9360B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x936528", Offset = "0x936528", VA = "0x936528")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x936614", Offset = "0x936614", VA = "0x936614")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x936778", Offset = "0x936778", VA = "0x936778")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x936A80", Offset = "0x936A80", VA = "0x936A80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x936B78", Offset = "0x936B78", VA = "0x936B78")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x936CD8", Offset = "0x936CD8", VA = "0x936CD8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x936810", Offset = "0x936810", VA = "0x936810")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x936864", Offset = "0x936864", VA = "0x936864")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x9363CC", Offset = "0x9363CC", VA = "0x9363CC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x936E14", Offset = "0x936E14", VA = "0x936E14")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public enum HandPoseId
	{
		[Token(Token = "0x40019F1")]
		Default,
		[Token(Token = "0x40019F2")]
		Generic,
		[Token(Token = "0x40019F3")]
		PingPongBall,
		[Token(Token = "0x40019F4")]
		Controller
	}
	[Token(Token = "0x2000374")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700019D")]
		public bool AllowPointing
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x86E26C", Offset = "0x86E26C", VA = "0x86E26C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019E")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x86E274", Offset = "0x86E274", VA = "0x86E274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019F")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x86E27C", Offset = "0x86E27C", VA = "0x86E27C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x86E284", Offset = "0x86E284", VA = "0x86E284")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x765718", Offset = "0x765718", VA = "0x765718")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x765A00", Offset = "0x765A00", VA = "0x765A00")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x765A5C", Offset = "0x765A5C", VA = "0x765A5C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x765AA0", Offset = "0x765AA0", VA = "0x765AA0")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x2000376")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4C0D1C", Offset = "0x4C0D1C")]
		private string freshStateText;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4C0D78", Offset = "0x4C0D78")]
		[SerializeField]
		private Text textArea;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4C0DD4", Offset = "0x4C0DD4")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x67383C", Offset = "0x67383C", VA = "0x67383C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x673908", Offset = "0x673908", VA = "0x673908")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x6739D4", Offset = "0x6739D4", VA = "0x6739D4")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x673A7C", Offset = "0x673A7C", VA = "0x673A7C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x673AC0", Offset = "0x673AC0", VA = "0x673AC0")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x673BB0", Offset = "0x673BB0", VA = "0x673BB0")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x673D70", Offset = "0x673D70", VA = "0x673D70")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x673DD0", Offset = "0x673DD0", VA = "0x673DD0")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x673E24", Offset = "0x673E24", VA = "0x673E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4C5CF4", Offset = "0x4C5CF4")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x79C6D8", Offset = "0x79C6D8", VA = "0x79C6D8")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x79C774", Offset = "0x79C774", VA = "0x79C774")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x79C998", Offset = "0x79C998", VA = "0x79C998")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x79C808", Offset = "0x79C808", VA = "0x79C808")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x79C9D4", Offset = "0x79C9D4", VA = "0x79C9D4")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x2000378")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x2000379")]
		internal enum Step
		{
			[Token(Token = "0x4001A04")]
			SetupWit,
			[Token(Token = "0x4001A05")]
			MissingServerToken,
			[Token(Token = "0x4001A06")]
			MissingClientToken,
			[Token(Token = "0x4001A07")]
			AddConfig,
			[Token(Token = "0x4001A08")]
			AddVoiceExperiences,
			[Token(Token = "0x4001A09")]
			SetConfig,
			[Token(Token = "0x4001A0A")]
			Ready
		}

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x170001A0")]
		internal Step CurrentStep
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x87C218", Offset = "0x87C218", VA = "0x87C218")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x170001A1")]
		internal string CurrentStepText
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x87C220", Offset = "0x87C220", VA = "0x87C220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x87C2B4", Offset = "0x87C2B4", VA = "0x87C2B4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x87C2BC", Offset = "0x87C2BC", VA = "0x87C2BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x87C2C0", Offset = "0x87C2C0", VA = "0x87C2C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x87C2B8", Offset = "0x87C2B8", VA = "0x87C2B8")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x87C2C4", Offset = "0x87C2C4", VA = "0x87C2C4")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x200037A")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4C0E30", Offset = "0x4C0E30")]
		public Text logText;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4C0E68", Offset = "0x4C0E68")]
		public AudioClip buzzSound;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x8EE788", Offset = "0x8EE788", VA = "0x8EE788")]
		private void Update()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x8EE858", Offset = "0x8EE858", VA = "0x8EE858")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x8EE7EC", Offset = "0x8EE7EC", VA = "0x8EE7EC")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x8EE8E8", Offset = "0x8EE8E8", VA = "0x8EE8E8")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x8EE95C", Offset = "0x8EE95C", VA = "0x8EE95C")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x8EECE8", Offset = "0x8EECE8", VA = "0x8EECE8")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x8EED98", Offset = "0x8EED98", VA = "0x8EED98")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x8EEDE8", Offset = "0x8EEDE8", VA = "0x8EEDE8")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x8EEE3C", Offset = "0x8EEE3C", VA = "0x8EEE3C")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x8EEF54", Offset = "0x8EEF54", VA = "0x8EEF54")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x8EF060", Offset = "0x8EF060", VA = "0x8EF060")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x8EED10", Offset = "0x8EED10", VA = "0x8EED10")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x8EEB74", Offset = "0x8EEB74", VA = "0x8EEB74")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x8EF068", Offset = "0x8EF068", VA = "0x8EF068")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x76475C", Offset = "0x76475C", VA = "0x76475C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x7647B0", Offset = "0x7647B0", VA = "0x7647B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x7647FC", Offset = "0x7647FC", VA = "0x7647FC")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x7598F8", Offset = "0x7598F8", VA = "0x7598F8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x75998C", Offset = "0x75998C", VA = "0x75998C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x7599E0", Offset = "0x7599E0", VA = "0x7599E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x759A64", Offset = "0x759A64", VA = "0x759A64")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x759A88", Offset = "0x759A88", VA = "0x759A88")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200037D")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001A13")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001A14")]
		public const string Tab = "    ";

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xF6294C", Offset = "0xF6294C", VA = "0xF6294C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5D04", Offset = "0x4C5D04")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5D04", Offset = "0x4C5D04")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xF629DC", Offset = "0xF629DC", VA = "0xF629DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5D64", Offset = "0x4C5D64")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5D64", Offset = "0x4C5D64")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xF62A7C", Offset = "0xF62A7C", VA = "0xF62A7C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5DC4", Offset = "0x4C5DC4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5DC4", Offset = "0x4C5DC4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xF62B0C", Offset = "0xF62B0C", VA = "0xF62B0C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5E24", Offset = "0x4C5E24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5E24", Offset = "0x4C5E24")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xF62B9C", Offset = "0xF62B9C", VA = "0xF62B9C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5E84", Offset = "0x4C5E84")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x4C5E84", Offset = "0x4C5E84")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class CAPI
	{
		[Token(Token = "0x200037F")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000380")]
		public enum Result
		{
			[Token(Token = "0x4001A20")]
			Success = 0,
			[Token(Token = "0x4001A21")]
			Failure = -1000,
			[Token(Token = "0x4001A22")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001A23")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001A24")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001A25")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001A26")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001A27")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001A28")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000381")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly System.Version version;

			[PreserveSig]
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x75EB30", Offset = "0x75EB30", VA = "0x75EB30")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001A15")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001A1D")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static System.Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001206")]
		[Address(RVA = "0x896FD4", Offset = "0x896FD4", VA = "0x896FD4")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x897064", Offset = "0x897064", VA = "0x897064")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x89727C", Offset = "0x89727C", VA = "0x89727C")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001209")]
		[Address(RVA = "0x897364", Offset = "0x897364", VA = "0x897364")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600120A")]
		[Address(RVA = "0x8973D4", Offset = "0x8973D4", VA = "0x8973D4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600120B")]
		[Address(RVA = "0x897448", Offset = "0x897448", VA = "0x897448")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x8974C8", Offset = "0x8974C8", VA = "0x8974C8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600120D")]
		[Address(RVA = "0x89760C", Offset = "0x89760C", VA = "0x89760C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x89768C", Offset = "0x89768C", VA = "0x89768C")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600120F")]
		[Address(RVA = "0x8977D0", Offset = "0x8977D0", VA = "0x8977D0")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001210")]
		[Address(RVA = "0x897850", Offset = "0x897850", VA = "0x897850")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001211")]
		[Address(RVA = "0x8978D0", Offset = "0x8978D0", VA = "0x8978D0")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x897950", Offset = "0x897950", VA = "0x897950")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001213")]
		[Address(RVA = "0x8979D0", Offset = "0x8979D0", VA = "0x8979D0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001214")]
		[Address(RVA = "0x897A60", Offset = "0x897A60", VA = "0x897A60")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001215")]
		[Address(RVA = "0x897AF0", Offset = "0x897AF0", VA = "0x897AF0")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001216")]
		[Address(RVA = "0x897B80", Offset = "0x897B80", VA = "0x897B80")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x897C00", Offset = "0x897C00", VA = "0x897C00")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x897C80", Offset = "0x897C80", VA = "0x897C80")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001219")]
		[Address(RVA = "0x897D10", Offset = "0x897D10", VA = "0x897D10")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x897DA0", Offset = "0x897DA0", VA = "0x897DA0")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x897E30", Offset = "0x897E30", VA = "0x897E30")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x897EB0", Offset = "0x897EB0", VA = "0x897EB0")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x897F50", Offset = "0x897F50", VA = "0x897F50")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x897FCC", Offset = "0x897FCC", VA = "0x897FCC")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x89806C", Offset = "0x89806C", VA = "0x89806C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x89812C", Offset = "0x89812C", VA = "0x89812C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x8981FC", Offset = "0x8981FC", VA = "0x8981FC")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001222")]
		[Address(RVA = "0x89828C", Offset = "0x89828C", VA = "0x89828C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001223")]
		[Address(RVA = "0x89831C", Offset = "0x89831C", VA = "0x89831C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x8983AC", Offset = "0x8983AC", VA = "0x8983AC")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x89843C", Offset = "0x89843C", VA = "0x89843C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x8984CC", Offset = "0x8984CC", VA = "0x8984CC")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x89854C", Offset = "0x89854C", VA = "0x89854C")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x898668", Offset = "0x898668", VA = "0x898668")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x8985D8", Offset = "0x8985D8", VA = "0x8985D8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x89887C", Offset = "0x89887C", VA = "0x89887C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x8989EC", Offset = "0x8989EC", VA = "0x8989EC")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600122C")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x898A6C", Offset = "0x898A6C", VA = "0x898A6C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x898D14", Offset = "0x898D14", VA = "0x898D14")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x898D94", Offset = "0x898D94", VA = "0x898D94")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x898F04", Offset = "0x898F04", VA = "0x898F04")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x898F84", Offset = "0x898F84", VA = "0x898F84")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x8990F4", Offset = "0x8990F4", VA = "0x8990F4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x899174", Offset = "0x899174", VA = "0x899174")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x8992E4", Offset = "0x8992E4", VA = "0x8992E4")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x899364", Offset = "0x899364", VA = "0x899364")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001236")]
		[Address(RVA = "0x8994D4", Offset = "0x8994D4", VA = "0x8994D4")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001237")]
		[Address(RVA = "0x899554", Offset = "0x899554", VA = "0x899554")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001238")]
		[Address(RVA = "0x8995D4", Offset = "0x8995D4", VA = "0x8995D4")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001239")]
		[Address(RVA = "0x89966C", Offset = "0x89966C", VA = "0x89966C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x8996EC", Offset = "0x8996EC", VA = "0x8996EC")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x8998C4", Offset = "0x8998C4", VA = "0x8998C4")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600123C")]
		[Address(RVA = "0x899A1C", Offset = "0x899A1C", VA = "0x899A1C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600123D")]
		[Address(RVA = "0x899844", Offset = "0x899844", VA = "0x899844")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x899A9C", Offset = "0x899A9C", VA = "0x899A9C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600123F")]
		[Address(RVA = "0x899B1C", Offset = "0x899B1C", VA = "0x899B1C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001240")]
		[Address(RVA = "0x899BAC", Offset = "0x899BAC", VA = "0x899BAC")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001241")]
		[Address(RVA = "0x899C2C", Offset = "0x899C2C", VA = "0x899C2C")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001242")]
		[Address(RVA = "0x899CBC", Offset = "0x899CBC", VA = "0x899CBC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001243")]
		[Address(RVA = "0x899D3C", Offset = "0x899D3C", VA = "0x899D3C")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x899DBC", Offset = "0x899DBC", VA = "0x899DBC")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001245")]
		[Address(RVA = "0x89A048", Offset = "0x89A048", VA = "0x89A048")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x89A0D8", Offset = "0x89A0D8", VA = "0x89A0D8")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001247")]
		[Address(RVA = "0x89A308", Offset = "0x89A308", VA = "0x89A308")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x89A3A0", Offset = "0x89A3A0", VA = "0x89A3A0")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001249")]
		[Address(RVA = "0x89A4F0", Offset = "0x89A4F0", VA = "0x89A4F0")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600124A")]
		[Address(RVA = "0x89A570", Offset = "0x89A570", VA = "0x89A570")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x89A5F0", Offset = "0x89A5F0", VA = "0x89A5F0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600124C")]
		[Address(RVA = "0x89A744", Offset = "0x89A744", VA = "0x89A744")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x89A7C4", Offset = "0x89A7C4", VA = "0x89A7C4")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600124E")]
		[Address(RVA = "0x89A918", Offset = "0x89A918", VA = "0x89A918")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600124F")]
		[Address(RVA = "0x89A998", Offset = "0x89A998", VA = "0x89A998")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001250")]
		[Address(RVA = "0x89AA28", Offset = "0x89AA28", VA = "0x89AA28")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001251")]
		[Address(RVA = "0x89AAB8", Offset = "0x89AAB8", VA = "0x89AAB8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001252")]
		[Address(RVA = "0x89AB48", Offset = "0x89AB48", VA = "0x89AB48")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001253")]
		[Address(RVA = "0x89ABC8", Offset = "0x89ABC8", VA = "0x89ABC8")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001254")]
		[Address(RVA = "0x89AC50", Offset = "0x89AC50", VA = "0x89AC50")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001255")]
		[Address(RVA = "0x89ACD8", Offset = "0x89ACD8", VA = "0x89ACD8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001256")]
		[Address(RVA = "0x89AD58", Offset = "0x89AD58", VA = "0x89AD58")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001257")]
		[Address(RVA = "0x89ADD8", Offset = "0x89ADD8", VA = "0x89ADD8")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001258")]
		[Address(RVA = "0x89AE8C", Offset = "0x89AE8C", VA = "0x89AE8C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001259")]
		[Address(RVA = "0x89AF1C", Offset = "0x89AF1C", VA = "0x89AF1C")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600125A")]
		[Address(RVA = "0x89AFAC", Offset = "0x89AFAC", VA = "0x89AFAC")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600125B")]
		[Address(RVA = "0x89B02C", Offset = "0x89B02C", VA = "0x89B02C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600125C")]
		[Address(RVA = "0x89B0AC", Offset = "0x89B0AC", VA = "0x89B0AC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600125D")]
		[Address(RVA = "0x89B12C", Offset = "0x89B12C", VA = "0x89B12C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600125E")]
		[Address(RVA = "0x89B1C4", Offset = "0x89B1C4", VA = "0x89B1C4")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x600125F")]
		[Address(RVA = "0x89B254", Offset = "0x89B254", VA = "0x89B254")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001260")]
		[Address(RVA = "0x89B2E4", Offset = "0x89B2E4", VA = "0x89B2E4")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001261")]
		[Address(RVA = "0x89B374", Offset = "0x89B374", VA = "0x89B374")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001262")]
		[Address(RVA = "0x89B40C", Offset = "0x89B40C", VA = "0x89B40C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001263")]
		[Address(RVA = "0x89B4A4", Offset = "0x89B4A4", VA = "0x89B4A4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001264")]
		[Address(RVA = "0x89B524", Offset = "0x89B524", VA = "0x89B524")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x89B5A4", Offset = "0x89B5A4", VA = "0x89B5A4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001266")]
		[Address(RVA = "0x89B6F8", Offset = "0x89B6F8", VA = "0x89B6F8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x89B778", Offset = "0x89B778", VA = "0x89B778")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001268")]
		[Address(RVA = "0x89B8CC", Offset = "0x89B8CC", VA = "0x89B8CC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x89B94C", Offset = "0x89B94C", VA = "0x89B94C")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600126A")]
		[Address(RVA = "0x89BA88", Offset = "0x89BA88", VA = "0x89BA88")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x89BB08", Offset = "0x89BB08", VA = "0x89BB08")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x89BCDC", Offset = "0x89BCDC", VA = "0x89BCDC")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600126D")]
		[Address(RVA = "0x89BFBC", Offset = "0x89BFBC", VA = "0x89BFBC")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600126E")]
		[Address(RVA = "0x89BC5C", Offset = "0x89BC5C", VA = "0x89BC5C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600126F")]
		[Address(RVA = "0x89C04C", Offset = "0x89C04C", VA = "0x89C04C")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001270")]
		[Address(RVA = "0x89C0CC", Offset = "0x89C0CC", VA = "0x89C0CC")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001271")]
		[Address(RVA = "0x89C15C", Offset = "0x89C15C", VA = "0x89C15C")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001272")]
		[Address(RVA = "0x89C1EC", Offset = "0x89C1EC", VA = "0x89C1EC")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001273")]
		[Address(RVA = "0x89C27C", Offset = "0x89C27C", VA = "0x89C27C")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001274")]
		[Address(RVA = "0x89C31C", Offset = "0x89C31C", VA = "0x89C31C")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001275")]
		[Address(RVA = "0x89C3BC", Offset = "0x89C3BC", VA = "0x89C3BC")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001276")]
		[Address(RVA = "0x89C45C", Offset = "0x89C45C", VA = "0x89C45C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001277")]
		[Address(RVA = "0x89C4DC", Offset = "0x89C4DC", VA = "0x89C4DC")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001278")]
		[Address(RVA = "0x89C55C", Offset = "0x89C55C", VA = "0x89C55C")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001279")]
		[Address(RVA = "0x89C5DC", Offset = "0x89C5DC", VA = "0x89C5DC")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600127A")]
		[Address(RVA = "0x89C65C", Offset = "0x89C65C", VA = "0x89C65C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600127B")]
		[Address(RVA = "0x89C6DC", Offset = "0x89C6DC", VA = "0x89C6DC")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600127C")]
		[Address(RVA = "0x89C804", Offset = "0x89C804", VA = "0x89C804")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600127D")]
		[Address(RVA = "0x89C89C", Offset = "0x89C89C", VA = "0x89C89C")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x89C91C", Offset = "0x89C91C", VA = "0x89C91C")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x89C97C", Offset = "0x89C97C", VA = "0x89C97C")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001280")]
		[Address(RVA = "0x89CAC4", Offset = "0x89CAC4", VA = "0x89CAC4")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x89CB54", Offset = "0x89CB54", VA = "0x89CB54")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001282")]
		[Address(RVA = "0x89CCAC", Offset = "0x89CCAC", VA = "0x89CCAC")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001283")]
		[Address(RVA = "0x89CD3C", Offset = "0x89CD3C", VA = "0x89CD3C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x89CDDC", Offset = "0x89CDDC", VA = "0x89CDDC")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001285")]
		[Address(RVA = "0x89D1AC", Offset = "0x89D1AC", VA = "0x89D1AC")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001286")]
		[Address(RVA = "0x89D22C", Offset = "0x89D22C", VA = "0x89D22C")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x89D2C4", Offset = "0x89D2C4", VA = "0x89D2C4")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001288")]
		[Address(RVA = "0x89DB24", Offset = "0x89DB24", VA = "0x89DB24")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001289")]
		[Address(RVA = "0x89DBA4", Offset = "0x89DBA4", VA = "0x89DBA4")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x896F70", Offset = "0x896F70", VA = "0x896F70")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x4C5EE4", Offset = "0x4C5EE4")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600128B")]
		[Address(RVA = "0x89DC3C", Offset = "0x89DC3C", VA = "0x89DC3C")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600128C")]
		[Address(RVA = "0x89DCC0", Offset = "0x89DCC0", VA = "0x89DCC0")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600128D")]
		[Address(RVA = "0x89DD40", Offset = "0x89DD40", VA = "0x89DD40")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600128E")]
		[Address(RVA = "0x89DDC0", Offset = "0x89DDC0", VA = "0x89DDC0")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x89DE40", Offset = "0x89DE40", VA = "0x89DE40")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001290")]
		[Address(RVA = "0x89E804", Offset = "0x89E804", VA = "0x89E804")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x89E884", Offset = "0x89E884", VA = "0x89E884")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001292")]
		[Address(RVA = "0x89ECA4", Offset = "0x89ECA4", VA = "0x89ECA4")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x89EC0C", Offset = "0x89EC0C", VA = "0x89EC0C")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x89ED18", Offset = "0x89ED18", VA = "0x89ED18")]
		public CAPI()
		{
		}
	}
}
namespace MagicLightProbes
{
	[Token(Token = "0x2000382")]
	public class MLPDataSaver
	{
		[Token(Token = "0x600129C")]
		public static void SaveData<T>(T data, string fullFilePath, string consoleString = "")
		{
		}

		[Token(Token = "0x600129D")]
		public static T LoadData<T>(T dataRecipient, string fullFilePath, string consoleStringSuccess = "", string consoleStringFail = "")
		{
			return (T)null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x680A88", Offset = "0x680A88", VA = "0x680A88")]
		public MLPDataSaver()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public static class TransformExtensions
	{
		[Token(Token = "0x600129F")]
		[Address(RVA = "0x769DFC", Offset = "0x769DFC", VA = "0x769DFC")]
		public static bool MLP_IsVisibleFrom(this Transform transform, Camera camera)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000384")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4BA4D4", Offset = "0x4BA4D4")]
	public class MLPCombinedVolume : MonoBehaviour
	{
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x680A80", Offset = "0x680A80", VA = "0x680A80")]
		public MLPCombinedVolume()
		{
		}
	}
	[Token(Token = "0x2000385")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4BA520", Offset = "0x4BA520")]
	public class MLPLight : MonoBehaviour
	{
		[Token(Token = "0x2000386")]
		public enum CalculationMode
		{
			[Token(Token = "0x4001A4F")]
			AccurateShadows,
			[Token(Token = "0x4001A50")]
			LightIntensity
		}

		[Token(Token = "0x2000387")]
		public enum MLPLightType
		{
			[Token(Token = "0x4001A52")]
			Spot,
			[Token(Token = "0x4001A53")]
			Directional,
			[Token(Token = "0x4001A54")]
			Point,
			[Token(Token = "0x4001A55")]
			Area,
			[Token(Token = "0x4001A56")]
			Mesh
		}

		[Token(Token = "0x2000388")]
		public enum MLPLightTypeMA
		{
			[Token(Token = "0x4001A58")]
			Area = 3,
			[Token(Token = "0x4001A59")]
			Mesh
		}

		[Token(Token = "0x2000389")]
		public enum TracePointSettingMode
		{
			[Token(Token = "0x4001A5B")]
			Auto,
			[Token(Token = "0x4001A5C")]
			Custom
		}

		[Token(Token = "0x200038A")]
		public enum ShadowmaskMode
		{
			[Token(Token = "0x4001A5E")]
			Shadowmask,
			[Token(Token = "0x4001A5F")]
			DistanceShadowmask
		}

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MLPLightType lightType;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MLPLightType lastLightType;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MLPLightTypeMA lightTypeMA;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CalculationMode calculationMode;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TracePointSettingMode tracePointSettingMode;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LightmapBakeType lightMode;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShadowmaskMode shadowmaskMode;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light targetLight;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject parentGameObject;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 forward;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool saveNearbyProbes;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float saveRadius;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float range;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useSourceParameters;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool reverseDirection;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float angle;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool customTracePoints;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool accurateTrace;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int accuracy;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int lastAccuracy;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool isDirectional;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float tracePointSize;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float lastTracePointSize;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public MeshFilter lastMesh;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<GameObject> tracePoints;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<MLPTracePoint> tracePointsData;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public MLPTracePoint mainTracePoint;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float intensity;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool resetEditor;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool showLightOnScene;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool saveOnOutOfRange;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool isHDRP;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector2 hdrpAreaSize;

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x680A98", Offset = "0x680A98", VA = "0x680A98")]
		public MLPLight()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class MLPPointData
	{
		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lightIntensity;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxIntencity;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int col;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int row;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int depth;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<float> distancesToLights;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector3> collisionPoints;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<MLPPointData> nearbyPoints;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> nearbyPointsOptimaziable;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool removed;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool outOfRange;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool inSaveRange;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool savedNearGeometry;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool contrastOnOutOfRangeArea;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool inRangeOfLight;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool contrastOnShadingArea;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool equalIntensity;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool equalColor;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool borderPoint;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool outOfMaxHeight;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float angleToLight;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 contactPoint;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool inCorner;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool lockForCull;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool onGeometryEdge;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool lightLeakLocked;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 collisionNormal;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<MLPLight> inRangeForLights;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<MLPLight> inShadowForLights;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject temporaryObject;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject collisionObject;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color averagedColor;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool xEndPoint;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool yEndPoint;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool zEndPoint;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool xStartPoint;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool yStartPoint;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool zStartPoint;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int equivalent;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float avaragedColorValue;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool isUnlit;

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x680B5C", Offset = "0x680B5C", VA = "0x680B5C")]
		public void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x680B68", Offset = "0x680B68", VA = "0x680B68")]
		public void SetOutOfRange(bool visibility)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x680B74", Offset = "0x680B74", VA = "0x680B74")]
		public void SetLightIntensity(float intensity)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x680B7C", Offset = "0x680B7C", VA = "0x680B7C")]
		public void SetInSaveRange(bool value)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x680B88", Offset = "0x680B88", VA = "0x680B88")]
		public void SetInContrastArea(bool value)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x680B94", Offset = "0x680B94", VA = "0x680B94")]
		public MLPPointData()
		{
		}
	}
	[Token(Token = "0x200038C")]
	[ExecuteInEditMode]
	public class MLPPortal : MonoBehaviour
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float yStep;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float zStep;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int yCounter;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int zCounter;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool calculate;

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x680D04", Offset = "0x680D04", VA = "0x680D04")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x680D08", Offset = "0x680D08", VA = "0x680D08")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x680D40", Offset = "0x680D40", VA = "0x680D40")]
		private void DrawRayX(Vector3 dir)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x680F34", Offset = "0x680F34", VA = "0x680F34")]
		private void DrawRayZ(Vector3 dir)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x681124", Offset = "0x681124", VA = "0x681124")]
		public MLPPortal()
		{
		}
	}
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4BA58C", Offset = "0x4BA58C")]
	public class MLPQuickEditing : MonoBehaviour
	{
		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MagicLightProbes parent;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gizmoScale;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float drawDistance;

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x68112C", Offset = "0x68112C", VA = "0x68112C")]
		public MLPQuickEditing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public class MLPTracePoint
	{
		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 forward;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject pointGameObject;

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x68113C", Offset = "0x68113C", VA = "0x68113C")]
		public MLPTracePoint()
		{
		}
	}
	[Token(Token = "0x200038F")]
	[ExecuteInEditMode]
	public class MLPVolume : MonoBehaviour
	{
		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MagicLightProbes parentRootComponent;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MeshRenderer selfRenderer;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool showGizmoSelected;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isPartVolume;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool isSubdividedPart;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isCalculated;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool isInProcess;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool skipped;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int id;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color colorOnSelection;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> localAcceptedPoints;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<MLPPointData> localNearbyGeometryPoints;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<MLPPointData> localContrastPoints;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<MLPPointData> localCornerPoints;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Vector3> localNearbyGeometryPointsPositions;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Vector3> resultNearbyGeometryPointsPositions;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Vector3> localCornerPointsPositions;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> resultLocalCornerPointsPositions;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> localEquivalentPointsPositions;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Vector3> resultLocalEquivalentPointsPositions;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Vector3> resultLocalFreePointsPositions;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Vector3> localUnlitPointsPositions;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Vector3> localFreePointsPositions;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Vector3> resultLocalUnlitPointsPositions;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Vector3> localDirections;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Vector3> localAvaragedDirections;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<MLPPointData> localColorThresholdEditingPoints;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int objectsInside;

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x681144", Offset = "0x681144", VA = "0x681144")]
		public MLPVolume()
		{
		}
	}
	[Token(Token = "0x2000390")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4BA5D4", Offset = "0x4BA5D4")]
	public class MagicLightProbes : MonoBehaviour
	{
		[Token(Token = "0x2000391")]
		public struct VolumeParameters
		{
			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int volumeIndex;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 position;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 demensions;

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xDB28A4", Offset = "0xDB28A4", VA = "0xDB28A4")]
			public VolumeParameters(int _volumeIndex, Vector3 _position, Vector3 _demensions)
			{
			}
		}

		[Token(Token = "0x2000392")]
		public enum FillingMode
		{
			[Token(Token = "0x4001B62")]
			VerticalDublicating,
			[Token(Token = "0x4001B63")]
			FullFilling,
			[Token(Token = "0x4001B64")]
			SeparateFilling
		}

		[Token(Token = "0x2000393")]
		public enum Workflow
		{
			[Token(Token = "0x4001B66")]
			Simple,
			[Token(Token = "0x4001B67")]
			Advanced
		}

		[Token(Token = "0x2000394")]
		public enum BoundsDisplayMode
		{
			[Token(Token = "0x4001B69")]
			Always,
			[Token(Token = "0x4001B6A")]
			OnSelection
		}

		[Token(Token = "0x2000395")]
		public enum DebugPasses
		{
			[Token(Token = "0x4001B6C")]
			MaximumHeight,
			[Token(Token = "0x4001B6D")]
			GeometryCollision,
			[Token(Token = "0x4001B6E")]
			GeometryIntersections,
			[Token(Token = "0x4001B6F")]
			NearGeometry,
			[Token(Token = "0x4001B70")]
			OutOfRange,
			[Token(Token = "0x4001B71")]
			OutOfRangeBorders,
			[Token(Token = "0x4001B72")]
			ShadingBorders,
			[Token(Token = "0x4001B73")]
			ContrastAreas,
			[Token(Token = "0x4001B74")]
			NearLights,
			[Token(Token = "0x4001B75")]
			LightIntensity,
			[Token(Token = "0x4001B76")]
			UnlitProbes,
			[Token(Token = "0x4001B77")]
			EqualProbes,
			[Token(Token = "0x4001B78")]
			GeometryEdges,
			[Token(Token = "0x4001B79")]
			EqualColor
		}

		[Token(Token = "0x2000396")]
		public enum DrawModes
		{
			[Token(Token = "0x4001B7B")]
			Accepted,
			[Token(Token = "0x4001B7C")]
			Culled,
			[Token(Token = "0x4001B7D")]
			Both
		}

		[Token(Token = "0x2000397")]
		public enum CalculationTarget
		{
			[Token(Token = "0x4001B7F")]
			GeometryEdges,
			[Token(Token = "0x4001B80")]
			GeneralCalculation
		}

		[Serializable]
		[Token(Token = "0x2000398")]
		private struct TempPointData
		{
			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float xPos;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float yPos;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float zPos;

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xDB2898", Offset = "0xDB2898", VA = "0xDB2898")]
			public TempPointData(Vector3 _position)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000399")]
		public class WorkPathFoundEvent : UnityEvent<string>
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xDB28B8", Offset = "0xDB28B8", VA = "0xDB28B8")]
			public WorkPathFoundEvent()
			{
			}
		}

		[Token(Token = "0x4001AB3")]
		private const string COMPUTE_SHADERS_FOLDER = "/Passes/Compute Shaders/";

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator colorThresholdRecalculationRoutine;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator lightProbesVolumeCalculatingRoutine;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator lightProbesVolumeCalculatingSubRoutine;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IEnumerator executingPassesRoutine;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerator volumeDivideingRoutine;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> groundAndFloorKeywords;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> storedGroundAndFloorKeywords;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject probesVolume;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useDynamicDensity;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float volumeSpacing;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float volumeSpacingMin;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float volumeSpacingMax;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float cornersDetectionThreshold;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float cornersDetectionThresholdMin;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float cornersDetectionThresholdMax;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lastCornersDetectionThreshold;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float lastCornersDetectionThresholdMin;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float lastCornersDetectionThresholdMax;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int lastMaxProbesInVolume;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxProbesInVolume;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int defaultMaxProbesCount;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float lastVolumeSpacing;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float lastVolumeSpacingMin;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float lastVolumeSpacingMax;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool volumeSpacingChanged;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool tooManySubVolumes;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public FillingMode fillingMode;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Workflow workflow;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float maxHeightAboveGeometry;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float lastMaxHeightAboveGeometry;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float maxHeightAboveTerrain;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool considerDistanceToLights;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float lightIntensityTreshold;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float colorTreshold;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float collisionDetectionRadius;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool saveProbesNearbyGeometry;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float cornerProbesSpacing;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float nearbyGeometryDetectionRadius;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float nearbyGeometryDetectionRadiusMin;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float nearbyGeometryDetectionRadiusMax;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float distanceFromNearbyGeometry;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool fillEquivalentVolume;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float equivalentVolumeFillingRate;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool fillUnlitVolume;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool fillFreeVolume;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float unlitVolumeFillingRate;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float freeVolumeFillingRate;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool cullAcceptedVolume;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float acceptedVolumeFillingRate;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float nearbyGeometryVolumeFillingRate;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float verticalDublicatingHeight;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float verticalDublicatingStep;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask raycastFilter;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<MLPLight> excludedLights;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public LayerMask layerMask;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int firstCollisionLayer;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool useMultithreading;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject previousSelection;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool unloaded;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool sceneChanging;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public bool waitForPrevious;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MagicLightProbes previousVolume;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool optimizeForMixedLighting;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool lastOptimizeForMixedLightingValue;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		public bool lastUseDynamicDensityValue;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		public bool preventLeakageThroughWalls;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public bool useVolumeBottom;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		public bool placeProbesOnGeometryEdges;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float lastColorThreshold;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float lastLightIntensityThreshold;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float lastEquivalentVolumeFillingRate;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float lastUnlitVolumeFillingRate;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float lastFreeVolumeFillingRate;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float lastCornerProbesSpacing;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float lastDistanceFromGeometry;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool debugMode;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float debugObjectScale;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public BoundsDisplayMode boundsDisplayMode;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public DebugPasses debugPass;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public DrawModes drawMode;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool debugShowLightIntensity;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public bool showPreviewGrid;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
		public bool nextStep;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
		public bool cullByColor;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool forceSaveProbesOnShadingBorders;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public string dataPath;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string workPath;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool workPathFound;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public List<Vector3> localFinishedPositions;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ComputeShader calculateVolumeFilling;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ComputeShader calculateProbeSpacing;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public ComputeShader calculateDistanceFromGeometry;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public MLPVolume currentVolume;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public MLPQuickEditing quickEditingComponent;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public bool recalculationRequired;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private List<Collider> lightColliders;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<Collider> objectColliders;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<MLPPointData> finalDebugAcceptedPoints;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private List<MLPPointData> finalDebugCulledPoints;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private List<GameObject> tempObjects;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private List<GameObject> temporarilyDisabledDynamicObjects;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private List<GameObject> staticObjectsWithoutCollider;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private GameObject combinedVolumeObject;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private VolumeParameters currentEditingVolume;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 currentSelectedObjectLastPosition;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private GameObject lastSelectedObject;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public bool cancelCombination;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public List<IEnumerator> passesToExecute;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public List<GameObject> staticObjects;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public List<MLPLight> lights;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public List<MLPPointData> tmpSharedPointsArray;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public List<MLPPointData> tmpOutOfRangePoints;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public List<MLPPointData> tmpOutOfMaxHeightPoints;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public List<MLPPointData> tmpGeometryCollisionPoints;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public List<MLPPointData> tmpContrastOnOutOfRangePoints;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public List<MLPPointData> tmpContrastShadingBordersPoints;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public List<MLPPointData> tmpUnlitPoints;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public List<MLPPointData> tmpFreePoints;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public List<MLPPointData> tmpNearbyGeometryPoints;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<MLPPointData> tmpPointsNearGeometryIntersections;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<MLPPointData> tmpNearbyLightsPoints;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public List<MLPPointData> tmpEqualPoints;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public List<MLPPointData> debugCulledPoints;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public List<MLPPointData> debugAcceptedPoints;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public List<GameObject> subVolumesDivided;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public List<Vector3> points;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public List<VolumeParameters> innerVolumes;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public List<VolumeParameters> subVolumesParameters;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public List<MagicLightProbes> innerVolumesObjects;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public List<LayerMask> layerMasks;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public List<Vector3> transformedPoints;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public string assetEditorPath;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool operationalDataLost;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public bool localOperationalDataLost;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x311")]
		public bool recombinationNeeded;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x312")]
		public bool isInBackground;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x313")]
		public bool realtimeEditing;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public bool calculated;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x315")]
		public bool calculatingError;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public int xPointsCount;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public int yPointsCount;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public int zPointsCount;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public float prevVolumeScaleX;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float prevVolumeScaleY;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public float prevVolumeScaleZ;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public int totalProbes;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public int totalProbesInSubVolume;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public int totalProbesInVolume;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public bool calculatingVolume;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33D")]
		public bool calculatingVolumeSubPass;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public string currentPass;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public int currentPassProgressCounter;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public int currentPassProgressFrameSkipper;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public float totalProgress;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float currentPassProgress;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public int selectedTab;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35D")]
		public bool restored;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public int currentVolumePart;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public float eta;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public bool changed;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
		public bool redivideParts;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36A")]
		public bool combinedVolumeError;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36B")]
		private bool passesExecuting;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int totalProgressCounter;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private int totalProgressFrameSkipper;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float startTime;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private float endTime;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private bool scenePreparing;

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x681374", Offset = "0x681374", VA = "0x681374")]
		public void CheckForNearContrast(MLPPointData pointForCheck)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x681678", Offset = "0x681678", VA = "0x681678")]
		public bool UpdateProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x6816C0", Offset = "0x6816C0", VA = "0x6816C0")]
		private bool UpdateTotalProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x681708", Offset = "0x681708", VA = "0x681708")]
		public MagicLightProbes()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class CheckForLightLeakAreas
	{
		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA620", Offset = "0x4BA620")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170001A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012BD")]
				[Address(RVA = "0x75F470", Offset = "0x75F470", VA = "0x75F470", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012BF")]
				[Address(RVA = "0x75F4B8", Offset = "0x75F4B8", VA = "0x75F4B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x75EDE4", Offset = "0x75EDE4", VA = "0x75EDE4")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x75EE10", Offset = "0x75EE10", VA = "0x75EE10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x75EE14", Offset = "0x75EE14", VA = "0x75EE14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x75F478", Offset = "0x75F478", VA = "0x75F478", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x79B544", Offset = "0x79B544", VA = "0x79B544")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C5F54", Offset = "0x4C5F54")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x79B5B0", Offset = "0x79B5B0", VA = "0x79B5B0")]
		public CheckForLightLeakAreas()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class DublicateVertical
	{
		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA630", Offset = "0x4BA630")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <steps>5__2;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<MLPPointData> <candidates>5__3;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<MLPPointData> <savedNearGeometry>5__4;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__5;

			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<MLPPointData>.Enumerator <>7__wrap5;

			[Token(Token = "0x170001A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C6")]
				[Address(RVA = "0x760A6C", Offset = "0x760A6C", VA = "0x760A6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C8")]
				[Address(RVA = "0x760AB4", Offset = "0x760AB4", VA = "0x760AB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x760104", Offset = "0x760104", VA = "0x760104")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x760130", Offset = "0x760130", VA = "0x760130", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x7601A0", Offset = "0x7601A0", VA = "0x7601A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012C5")]
			[Address(RVA = "0x76014C", Offset = "0x76014C", VA = "0x76014C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x760A74", Offset = "0x760A74", VA = "0x760A74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x940F74", Offset = "0x940F74", VA = "0x940F74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C6004", Offset = "0x4C6004")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x940FE0", Offset = "0x940FE0", VA = "0x940FE0")]
		public DublicateVertical()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public static class RandomGen
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random _global;

		[Token(Token = "0x4001B91")]
		[ThreadStatic]
		private static System.Random _local;

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x7CED74", Offset = "0x7CED74", VA = "0x7CED74")]
		public static int Next(int min, int max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200039F")]
	public class EquivalentProbesOptimization
	{
		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA640", Offset = "0x4BA640")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool realtimeEditing;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__3;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__4;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D0")]
				[Address(RVA = "0x7611F4", Offset = "0x7611F4", VA = "0x7611F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012D2")]
				[Address(RVA = "0x76123C", Offset = "0x76123C", VA = "0x76123C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x760B38", Offset = "0x760B38", VA = "0x760B38")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x760B64", Offset = "0x760B64", VA = "0x760B64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x760B68", Offset = "0x760B68", VA = "0x760B68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x7611FC", Offset = "0x7611FC", VA = "0x7611FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x8458F0", Offset = "0x8458F0", VA = "0x8458F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C60B4", Offset = "0x4C60B4")]
		public IEnumerator ExecutePass(MagicLightProbes parent, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x845974", Offset = "0x845974", VA = "0x845974")]
		public EquivalentProbesOptimization()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class PartialVolumeFilling
	{
		[Token(Token = "0x20003A2")]
		public enum TargetPoint
		{
			[Token(Token = "0x4001B9B")]
			Unlit,
			[Token(Token = "0x4001B9C")]
			Equivalent,
			[Token(Token = "0x4001B9D")]
			Free
		}

		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA650", Offset = "0x4BA650")]
		private sealed class <ExecutePass>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetPoint targetPoint;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool realtimeEditing;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__2;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Vector3> <realTimeEditingList>5__3;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vector3> <targetPoints>5__4;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <fillingRate>5__5;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3[] <exit>5__6;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <i>5__7;

			[Token(Token = "0x170001A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012D8")]
				[Address(RVA = "0xDB61C8", Offset = "0xDB61C8", VA = "0xDB61C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012DA")]
				[Address(RVA = "0xDB6210", Offset = "0xDB6210", VA = "0xDB6210", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xDB54F8", Offset = "0xDB54F8", VA = "0xDB54F8")]
			[DebuggerHidden]
			public <ExecutePass>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xDB5524", Offset = "0xDB5524", VA = "0xDB5524", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012D7")]
			[Address(RVA = "0xDB5528", Offset = "0xDB5528", VA = "0xDB5528", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xDB61D0", Offset = "0xDB61D0", VA = "0xDB61D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x6C1984", Offset = "0x6C1984", VA = "0x6C1984")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C6164", Offset = "0x4C6164")]
		public IEnumerator ExecutePass(MagicLightProbes parent, TargetPoint targetPoint, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x6C1A18", Offset = "0x6C1A18", VA = "0x6C1A18")]
		public PartialVolumeFilling()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class RemoveUnusedPoints
	{
		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA660", Offset = "0x4BA660")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<MLPPointData> <pointsToRemove>5__2;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E0")]
				[Address(RVA = "0xDB6DBC", Offset = "0xDB6DBC", VA = "0xDB6DBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E2")]
				[Address(RVA = "0xDB6E04", Offset = "0xDB6E04", VA = "0xDB6E04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xDB6878", Offset = "0xDB6878", VA = "0xDB6878")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xDB68A4", Offset = "0xDB68A4", VA = "0xDB68A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xDB68A8", Offset = "0xDB68A8", VA = "0xDB68A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xDB6DC4", Offset = "0xDB6DC4", VA = "0xDB6DC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x7D39A8", Offset = "0x7D39A8", VA = "0x7D39A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C6214", Offset = "0x4C6214")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x7D3A14", Offset = "0x7D3A14", VA = "0x7D3A14")]
		public RemoveUnusedPoints()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class SetDistanceFromGeometry
	{
		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA670", Offset = "0x4BA670")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E8")]
				[Address(RVA = "0xDB7334", Offset = "0xDB7334", VA = "0xDB7334", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012EA")]
				[Address(RVA = "0xDB737C", Offset = "0xDB737C", VA = "0xDB737C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xDB6E0C", Offset = "0xDB6E0C", VA = "0xDB6E0C")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60012E6")]
			[Address(RVA = "0xDB6E38", Offset = "0xDB6E38", VA = "0xDB6E38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xDB6E3C", Offset = "0xDB6E3C", VA = "0xDB6E3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E9")]
			[Address(RVA = "0xDB733C", Offset = "0xDB733C", VA = "0xDB733C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x837A04", Offset = "0x837A04", VA = "0x837A04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C62C4", Offset = "0x4C62C4")]
		public IEnumerator ExecutePass(MagicLightProbes parent, MLPVolume currentVolume)
		{
			return null;
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x837A7C", Offset = "0x837A7C", VA = "0x837A7C")]
		public SetDistanceFromGeometry()
		{
		}
	}
}
namespace BeautifyEffect
{
	[Token(Token = "0x20003A8")]
	public class CameraAnimator : MonoBehaviour
	{
		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x8A2EC4", Offset = "0x8A2EC4", VA = "0x8A2EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x8A2F14", Offset = "0x8A2F14", VA = "0x8A2F14")]
		public CameraAnimator()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class Demo1 : MonoBehaviour
	{
		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float deltaTime;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool benchmarkEnabled;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle style;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect rect;

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x93B5D8", Offset = "0x93B5D8", VA = "0x93B5D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x93B70C", Offset = "0x93B70C", VA = "0x93B70C")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x93B7E0", Offset = "0x93B7E0", VA = "0x93B7E0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x93B9FC", Offset = "0x93B9FC", VA = "0x93B9FC")]
		public Demo1()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class Demo2 : MonoBehaviour
	{
		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int demoMode;

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x93BA04", Offset = "0x93BA04", VA = "0x93BA04")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x93BF1C", Offset = "0x93BF1C", VA = "0x93BF1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x93BA08", Offset = "0x93BA08", VA = "0x93BA08")]
		private void UpdateDemoMode()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x93BF8C", Offset = "0x93BF8C", VA = "0x93BF8C")]
		public Demo2()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class Demo4 : MonoBehaviour
	{
		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x93BF94", Offset = "0x93BF94", VA = "0x93BF94")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x93C0B0", Offset = "0x93C0B0", VA = "0x93C0B0")]
		public Demo4()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class FreeCameraMove : MonoBehaviour
	{
		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion originalRotation;

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x11FFE58", Offset = "0x11FFE58", VA = "0x11FFE58")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x11FFEAC", Offset = "0x11FFEAC", VA = "0x11FFEAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1200648", Offset = "0x1200648", VA = "0x1200648")]
		public FreeCameraMove()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class SphereAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x8E3858", Offset = "0x8E3858", VA = "0x8E3858")]
		private void Start()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x8E38AC", Offset = "0x8E38AC", VA = "0x8E38AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x8E395C", Offset = "0x8E395C", VA = "0x8E395C")]
		public SphereAnimator()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public delegate float OnBeforeFocusEvent(float currentFocusDistance);
	[Token(Token = "0x20003AF")]
	public enum BEAUTIFY_QUALITY
	{
		[Token(Token = "0x4001BC4")]
		BestQuality,
		[Token(Token = "0x4001BC5")]
		BestPerformance,
		[Token(Token = "0x4001BC6")]
		Basic
	}
	[Token(Token = "0x20003B0")]
	public enum BEAUTIFY_PRESET
	{
		[Token(Token = "0x4001BC8")]
		Soft = 10,
		[Token(Token = "0x4001BC9")]
		Medium = 20,
		[Token(Token = "0x4001BCA")]
		Strong = 30,
		[Token(Token = "0x4001BCB")]
		Exaggerated = 40,
		[Token(Token = "0x4001BCC")]
		Custom = 999
	}
	[Token(Token = "0x20003B1")]
	public enum BEAUTIFY_TMO
	{
		[Token(Token = "0x4001BCE")]
		Linear = 0,
		[Token(Token = "0x4001BCF")]
		ACES = 10
	}
	[Token(Token = "0x20003B2")]
	public enum BEAUTIFY_PRERENDER_EVENT
	{
		[Token(Token = "0x4001BD1")]
		OnPreCull,
		[Token(Token = "0x4001BD2")]
		OnPreRender
	}
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4BA680", Offset = "0x4BA680")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4BA680", Offset = "0x4BA680")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4BA680", Offset = "0x4BA680")]
	[ImageEffectAllowedInSceneView]
	public class Beautify : MonoBehaviour
	{
		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4BA748", Offset = "0x4BA748")]
		private sealed class <DoBlink>d__747 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Beautify <>4__this;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float maxValue;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <start>5__2;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__3;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WaitForEndOfFrame <w>5__4;

			[Token(Token = "0x17000253")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600146C")]
				[Address(RVA = "0x75D2A0", Offset = "0x75D2A0", VA = "0x75D2A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600146E")]
				[Address(RVA = "0x75D2E8", Offset = "0x75D2E8", VA = "0x75D2E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0x75D0D8", Offset = "0x75D0D8", VA = "0x75D0D8")]
			[DebuggerHidden]
			public <DoBlink>d__747(int <>1__state)
			{
			}

			[Token(Token = "0x600146A")]
			[Address(RVA = "0x75D104", Offset = "0x75D104", VA = "0x75D104", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600146B")]
			[Address(RVA = "0x75D108", Offset = "0x75D108", VA = "0x75D108", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600146D")]
			[Address(RVA = "0x75D2A8", Offset = "0x75D2A8", VA = "0x75D2A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BEAUTIFY_PRESET _preset;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private BEAUTIFY_QUALITY _quality;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BeautifyProfile _profile;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _syncWithProfile;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _compareMode;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0F40", Offset = "0x4C0F40")]
		[SerializeField]
		private float _compareLineAngle;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0F88", Offset = "0x4C0F88")]
		[SerializeField]
		private float _compareLineWidth;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C0FD0", Offset = "0x4C0FD0")]
		[SerializeField]
		private float _dither;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1014", Offset = "0x4C1014")]
		[SerializeField]
		private float _ditherDepth;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1054", Offset = "0x4C1054")]
		[SerializeField]
		private float _sharpenMinDepth;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1094", Offset = "0x4C1094")]
		[SerializeField]
		private float _sharpenMaxDepth;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C10D8", Offset = "0x4C10D8")]
		[SerializeField]
		private float _sharpenMinMaxDepthFallOff;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1118", Offset = "0x4C1118")]
		private float _sharpen;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1158", Offset = "0x4C1158")]
		private float _sharpenDepthThreshold;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _tintColor;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C11AC", Offset = "0x4C11AC")]
		private float _sharpenRelaxation;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C11F0", Offset = "0x4C11F0")]
		[SerializeField]
		private float _sharpenClamp;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1230", Offset = "0x4C1230")]
		[SerializeField]
		private float _sharpenMotionSensibility;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1270", Offset = "0x4C1270")]
		[SerializeField]
		private float _saturate;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C12B0", Offset = "0x4C12B0")]
		[SerializeField]
		private float _contrast;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _brightness;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1300", Offset = "0x4C1300")]
		[SerializeField]
		private float _daltonize;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private bool _vignetting;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color _vignettingColor;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1360", Offset = "0x4C1360")]
		private float _vignettingFade;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _vignettingCircularShape;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _vignettingAspectRatio;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C13C0", Offset = "0x4C13C0")]
		private float _vignettingBlink;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture2D _vignettingMask;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _frame;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Color _frameColor;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Texture2D _frameMask;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _lut;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1450", Offset = "0x4C1450")]
		[SerializeField]
		private float _lutIntensity;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Texture2D _lutTexture;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private bool _nightVision;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private Color _nightVisionColor;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _outline;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color _outlineColor;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool _thermalVision;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[SerializeField]
		private bool _lensDirt;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1500", Offset = "0x4C1500")]
		private float _lensDirtThreshold;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1540", Offset = "0x4C1540")]
		private float _lensDirtIntensity;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Texture2D _lensDirtTexture;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool _bloom;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private LayerMask _bloomCullingMask;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C15B0", Offset = "0x4C15B0")]
		private float _bloomLayerMaskDownsampling;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C15F0", Offset = "0x4C15F0")]
		[SerializeField]
		private float _bloomIntensity;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float _bloomMaxBrightness;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1640", Offset = "0x4C1640")]
		private float _bloomBoost0;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1680", Offset = "0x4C1680")]
		private float _bloomBoost1;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C16C0", Offset = "0x4C16C0")]
		private float _bloomBoost2;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1700", Offset = "0x4C1700")]
		private float _bloomBoost3;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1740", Offset = "0x4C1740")]
		private float _bloomBoost4;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1780", Offset = "0x4C1780")]
		private float _bloomBoost5;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private bool _bloomAntiflicker;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		[SerializeField]
		private bool _bloomUltra;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C17E0", Offset = "0x4C17E0")]
		private int _bloomUltraResolution;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1820", Offset = "0x4C1820")]
		[SerializeField]
		private float _bloomThreshold;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private bool _bloomCustomize;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		[SerializeField]
		private bool _bloomDebug;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1880", Offset = "0x4C1880")]
		[SerializeField]
		private float _bloomWeight0;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C18C0", Offset = "0x4C18C0")]
		[SerializeField]
		private float _bloomWeight1;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1900", Offset = "0x4C1900")]
		[SerializeField]
		private float _bloomWeight2;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1940", Offset = "0x4C1940")]
		[SerializeField]
		private float _bloomWeight3;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1980", Offset = "0x4C1980")]
		[SerializeField]
		private float _bloomWeight4;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C19C0", Offset = "0x4C19C0")]
		[SerializeField]
		private float _bloomWeight5;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private bool _bloomBlur;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		[SerializeField]
		private bool _bloomQuickerBlur;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1A20", Offset = "0x4C1A20")]
		[SerializeField]
		private float _bloomDepthAtten;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1A60", Offset = "0x4C1A60")]
		[SerializeField]
		private float _bloomLayerZBias;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private BEAUTIFY_PRERENDER_EVENT _preRenderCameraEvent;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private bool _anamorphicFlares;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1AC0", Offset = "0x4C1AC0")]
		[SerializeField]
		private float _anamorphicFlaresIntensity;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		private bool _anamorphicFlaresAntiflicker;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		[SerializeField]
		private bool _anamorphicFlaresUltra;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1B20", Offset = "0x4C1B20")]
		[SerializeField]
		private int _anamorphicUltraResolution;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1B60", Offset = "0x4C1B60")]
		private float _anamorphicFlaresThreshold;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1BA0", Offset = "0x4C1BA0")]
		[SerializeField]
		private float _anamorphicFlaresSpread;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private bool _anamorphicFlaresVertical;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Color _anamorphicFlaresTint;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private bool _anamorphicFlaresBlur;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		[SerializeField]
		private bool _depthOfField;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		[SerializeField]
		private bool _depthOfFieldTransparencySupport;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private LayerMask _depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Transform _depthOfFieldTargetFocus;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private bool _depthOfFieldDebug;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		[SerializeField]
		private bool _depthOfFieldAutofocus;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[SerializeField]
		private Vector2 _depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private float _depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private float _depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private LayerMask _depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private LayerMask _depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1CC4", Offset = "0x4C1CC4")]
		[SerializeField]
		private float _depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1D04", Offset = "0x4C1D04")]
		private float _depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1D44", Offset = "0x4C1D44")]
		private float _depthOfFieldExclusionBias;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1D88", Offset = "0x4C1D88")]
		private float _depthOfFieldDistance;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1DCC", Offset = "0x4C1DCC")]
		[SerializeField]
		private float _depthOfFieldFocusSpeed;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1E10", Offset = "0x4C1E10")]
		[SerializeField]
		private int _depthOfFieldDownsampling;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1E50", Offset = "0x4C1E50")]
		private int _depthOfFieldMaxSamples;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1E90", Offset = "0x4C1E90")]
		private float _depthOfFieldFocalLength;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float _depthOfFieldAperture;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlur;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		private float _depthOfFieldForegroundDistance;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private bool _depthOfFieldBokeh;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1F24", Offset = "0x4C1F24")]
		[SerializeField]
		private float _depthOfFieldBokehThreshold;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1F64", Offset = "0x4C1F64")]
		private float _depthOfFieldBokehIntensity;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private float _depthOfFieldMaxBrightness;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C1FB4", Offset = "0x4C1FB4")]
		[SerializeField]
		private float _depthOfFieldMaxDistance;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private FilterMode _depthOfFieldFilterMode;

		[NonSerialized]
		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public OnBeforeFocusEvent OnBeforeFocus;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private bool _eyeAdaptation;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2014", Offset = "0x4C2014")]
		private float _eyeAdaptationMinExposure;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2054", Offset = "0x4C2054")]
		private float _eyeAdaptationMaxExposure;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2098", Offset = "0x4C2098")]
		private float _eyeAdaptationSpeedToLight;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C20D8", Offset = "0x4C20D8")]
		private float _eyeAdaptationSpeedToDark;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		private bool _purkinje;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2128", Offset = "0x4C2128")]
		private float _purkinjeAmount;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2168", Offset = "0x4C2168")]
		private float _purkinjeLuminanceThreshold;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private BEAUTIFY_TMO _tonemap;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		private bool _sunFlares;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Transform _sun;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private LayerMask _sunFlaresLayerMask;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C21E8", Offset = "0x4C21E8")]
		private float _sunFlaresIntensity;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2228", Offset = "0x4C2228")]
		[SerializeField]
		private float _sunFlaresSolarWindSpeed;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[SerializeField]
		private Color _sunFlaresTint;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2278", Offset = "0x4C2278")]
		[SerializeField]
		private int _sunFlaresDownsampling;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C22B8", Offset = "0x4C22B8")]
		[SerializeField]
		private float _sunFlaresSunIntensity;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C22F8", Offset = "0x4C22F8")]
		[SerializeField]
		private float _sunFlaresSunDiskSize;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2338", Offset = "0x4C2338")]
		private float _sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2378", Offset = "0x4C2378")]
		[SerializeField]
		private float _sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C23B8", Offset = "0x4C23B8")]
		[SerializeField]
		private float _sunFlaresCoronaRays1Length;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C23FC", Offset = "0x4C23FC")]
		[SerializeField]
		private int _sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C243C", Offset = "0x4C243C")]
		[SerializeField]
		private float _sunFlaresCoronaRays1Spread;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2480", Offset = "0x4C2480")]
		[SerializeField]
		private float _sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C24C4", Offset = "0x4C24C4")]
		[SerializeField]
		private float _sunFlaresCoronaRays2Length;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2508", Offset = "0x4C2508")]
		[SerializeField]
		private int _sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2548", Offset = "0x4C2548")]
		private float _sunFlaresCoronaRays2Spread;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C258C", Offset = "0x4C258C")]
		private float _sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C25D0", Offset = "0x4C25D0")]
		private float _sunFlaresGhosts1Size;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2610", Offset = "0x4C2610")]
		private float _sunFlaresGhosts1Offset;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2650", Offset = "0x4C2650")]
		private float _sunFlaresGhosts1Brightness;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2690", Offset = "0x4C2690")]
		[SerializeField]
		private float _sunFlaresGhosts2Size;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C26D0", Offset = "0x4C26D0")]
		private float _sunFlaresGhosts2Offset;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2710", Offset = "0x4C2710")]
		private float _sunFlaresGhosts2Brightness;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2750", Offset = "0x4C2750")]
		[SerializeField]
		private float _sunFlaresGhosts3Size;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2790", Offset = "0x4C2790")]
		private float _sunFlaresGhosts3Brightness;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C27D0", Offset = "0x4C27D0")]
		private float _sunFlaresGhosts3Offset;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2810", Offset = "0x4C2810")]
		[SerializeField]
		private float _sunFlaresGhosts4Size;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2850", Offset = "0x4C2850")]
		private float _sunFlaresGhosts4Offset;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2890", Offset = "0x4C2890")]
		[SerializeField]
		private float _sunFlaresGhosts4Brightness;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C28D0", Offset = "0x4C28D0")]
		[SerializeField]
		private float _sunFlaresHaloOffset;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2910", Offset = "0x4C2910")]
		private float _sunFlaresHaloAmplitude;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2954", Offset = "0x4C2954")]
		[SerializeField]
		private float _sunFlaresHaloIntensity;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[SerializeField]
		private bool _sunFlaresRotationDeadZone;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DD")]
		[SerializeField]
		private bool _blur;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C29B4", Offset = "0x4C29B4")]
		[SerializeField]
		private float _blurIntensity;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C29F4", Offset = "0x4C29F4")]
		[SerializeField]
		private int _downscale;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2A34", Offset = "0x4C2A34")]
		[SerializeField]
		private int _pixelateAmount;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		[SerializeField]
		private bool _pixelateDownscale;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2A88", Offset = "0x4C2A88")]
		[SerializeField]
		private float _antialiasStrength;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2AC8", Offset = "0x4C2AC8")]
		[SerializeField]
		private float _antialiasDepthThreshold;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public bool isDirty;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Beautify _beautify;

		[Token(Token = "0x4001C78")]
		public const string SKW_BLOOM = "BEAUTIFY_BLOOM";

		[Token(Token = "0x4001C79")]
		public const string SKW_LUT = "BEAUTIFY_LUT";

		[Token(Token = "0x4001C7A")]
		public const string SKW_NIGHT_VISION = "BEAUTIFY_NIGHT_VISION";

		[Token(Token = "0x4001C7B")]
		public const string SKW_THERMAL_VISION = "BEAUTIFY_THERMAL_VISION";

		[Token(Token = "0x4001C7C")]
		public const string SKW_OUTLINE = "BEAUTIFY_OUTLINE";

		[Token(Token = "0x4001C7D")]
		public const string SKW_FRAME = "BEAUTIFY_FRAME";

		[Token(Token = "0x4001C7E")]
		public const string SKW_FRAME_MASK = "BEAUTIFY_FRAME_MASK";

		[Token(Token = "0x4001C7F")]
		public const string SKW_DALTONIZE = "BEAUTIFY_DALTONIZE";

		[Token(Token = "0x4001C80")]
		public const string SKW_DIRT = "BEAUTIFY_DIRT";

		[Token(Token = "0x4001C81")]
		public const string SKW_VIGNETTING = "BEAUTIFY_VIGNETTING";

		[Token(Token = "0x4001C82")]
		public const string SKW_VIGNETTING_MASK = "BEAUTIFY_VIGNETTING_MASK";

		[Token(Token = "0x4001C83")]
		public const string SKW_DEPTH_OF_FIELD = "BEAUTIFY_DEPTH_OF_FIELD";

		[Token(Token = "0x4001C84")]
		public const string SKW_DEPTH_OF_FIELD_TRANSPARENT = "BEAUTIFY_DEPTH_OF_FIELD_TRANSPARENT";

		[Token(Token = "0x4001C85")]
		public const string SKW_EYE_ADAPTATION = "BEAUTIFY_EYE_ADAPTATION";

		[Token(Token = "0x4001C86")]
		public const string SKW_TONEMAP_ACES = "BEAUTIFY_TONEMAP_ACES";

		[Token(Token = "0x4001C87")]
		public const string SKW_PURKINJE = "BEAUTIFY_PURKINJE";

		[Token(Token = "0x4001C88")]
		public const string SKW_BLOOM_USE_DEPTH = "BEAUTIFY_BLOOM_USE_DEPTH";

		[Token(Token = "0x4001C89")]
		public const string SKW_BLOOM_USE_LAYER = "BEAUTIFY_BLOOM_USE_LAYER";

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material bMatDesktop;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Material bMatMobile;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Material bMatBasic;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private Material bMat;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Camera currentCamera;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Vector3 camPrevForward;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		private Vector3 camPrevPos;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private float currSens;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private int renderPass;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private RenderTexture[] rt;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTexture[] rtAF;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private RenderTexture[] rtEA;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private RenderTexture rtEAacum;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private RenderTexture rtEAHist;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private float dofPrevDistance;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private float dofLastAutofocusDistance;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private Vector4 dofLastBokehData;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private Camera sceneCamera;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private Camera depthCam;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private GameObject depthCamObj;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private Shader depthShader;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private Shader dofExclusionShader;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x4001CA3")]
		private const string BEAUTIFY_BUILD_HINT = "BeautifyBuildHint731RC1";

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private float sunFlareCurrentIntensity;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private Vector4 sunLastScrPos;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private float sunLastRot;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private Texture2D flareNoise;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private RenderTexture dofDepthTexture;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private RenderTexture dofExclusionTexture;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private RenderTexture bloomSourceTexture;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private RenderTexture bloomSourceDepthTexture;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private RenderTexture bloomSourceTextureRightEye;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private RenderTexture bloomSourceDepthTextureRightEye;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private RenderTexture pixelateTexture;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private RenderTextureDescriptor rtDescBase;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private float sunFlareTime;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private int dofCurrentLayerMaskValue;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		private int bloomCurrentLayerMaskValue;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private int eyeWidth;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		private int eyeHeight;

		[Token(Token = "0x170001AE")]
		public BEAUTIFY_PRESET preset
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xF62C3C", Offset = "0xF62C3C", VA = "0xF62C3C")]
			get
			{
				return default(BEAUTIFY_PRESET);
			}
			[Token(Token = "0x6001302")]
			[Address(RVA = "0xF62C44", Offset = "0xF62C44", VA = "0xF62C44")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public BEAUTIFY_QUALITY quality
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xF62CD4", Offset = "0xF62CD4", VA = "0xF62CD4")]
			get
			{
				return default(BEAUTIFY_QUALITY);
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xF62CDC", Offset = "0xF62CDC", VA = "0xF62CDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public BeautifyProfile profile
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xF62D90", Offset = "0xF62D90", VA = "0xF62D90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xF62D98", Offset = "0xF62D98", VA = "0xF62D98")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public bool syncWithProfile
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0xF62E68", Offset = "0xF62E68", VA = "0xF62E68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xF62E70", Offset = "0xF62E70", VA = "0xF62E70")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public bool compareMode
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xF62E7C", Offset = "0xF62E7C", VA = "0xF62E7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xF62E84", Offset = "0xF62E84", VA = "0xF62E84")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public float compareLineAngle
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xF62EE0", Offset = "0xF62EE0", VA = "0xF62EE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xF62EE8", Offset = "0xF62EE8", VA = "0xF62EE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public float compareLineWidth
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xF62F38", Offset = "0xF62F38", VA = "0xF62F38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xF62F40", Offset = "0xF62F40", VA = "0xF62F40")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public float dither
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xF62F90", Offset = "0xF62F90", VA = "0xF62F90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xF62F98", Offset = "0xF62F98", VA = "0xF62F98")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public float ditherDepth
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xF62FF0", Offset = "0xF62FF0", VA = "0xF62FF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xF62FF8", Offset = "0xF62FF8", VA = "0xF62FF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public float sharpenMinDepth
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xF63050", Offset = "0xF63050", VA = "0xF63050")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xF63058", Offset = "0xF63058", VA = "0xF63058")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public float sharpenMaxDepth
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xF630A8", Offset = "0xF630A8", VA = "0xF630A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xF630B0", Offset = "0xF630B0", VA = "0xF630B0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float sharpenMinMaxDepthFallOff
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0xF63100", Offset = "0xF63100", VA = "0xF63100")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001318")]
			[Address(RVA = "0xF63108", Offset = "0xF63108", VA = "0xF63108")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public float sharpen
		{
			[Token(Token = "0x6001319")]
			[Address(RVA = "0xF63158", Offset = "0xF63158", VA = "0xF63158")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600131A")]
			[Address(RVA = "0xF63160", Offset = "0xF63160", VA = "0xF63160")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float sharpenDepthThreshold
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0xF631B8", Offset = "0xF631B8", VA = "0xF631B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600131C")]
			[Address(RVA = "0xF631C0", Offset = "0xF631C0", VA = "0xF631C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public Color tintColor
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0xF63218", Offset = "0xF63218", VA = "0xF63218")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xF63224", Offset = "0xF63224", VA = "0xF63224")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float sharpenRelaxation
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xF632BC", Offset = "0xF632BC", VA = "0xF632BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001320")]
			[Address(RVA = "0xF632C4", Offset = "0xF632C4", VA = "0xF632C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public float sharpenClamp
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0xF6331C", Offset = "0xF6331C", VA = "0xF6331C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001322")]
			[Address(RVA = "0xF63324", Offset = "0xF63324", VA = "0xF63324")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public float sharpenMotionSensibility
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0xF6337C", Offset = "0xF6337C", VA = "0xF6337C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xF63384", Offset = "0xF63384", VA = "0xF63384")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float saturate
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0xF633D4", Offset = "0xF633D4", VA = "0xF633D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001326")]
			[Address(RVA = "0xF633DC", Offset = "0xF633DC", VA = "0xF633DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public float contrast
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0xF63434", Offset = "0xF63434", VA = "0xF63434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001328")]
			[Address(RVA = "0xF6343C", Offset = "0xF6343C", VA = "0xF6343C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public float brightness
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0xF63494", Offset = "0xF63494", VA = "0xF63494")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600132A")]
			[Address(RVA = "0xF6349C", Offset = "0xF6349C", VA = "0xF6349C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float daltonize
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0xF634F4", Offset = "0xF634F4", VA = "0xF634F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xF634FC", Offset = "0xF634FC", VA = "0xF634FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public bool vignetting
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xF63554", Offset = "0xF63554", VA = "0xF63554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xF6355C", Offset = "0xF6355C", VA = "0xF6355C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public Color vignettingColor
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0xF635B8", Offset = "0xF635B8", VA = "0xF635B8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0xF635C4", Offset = "0xF635C4", VA = "0xF635C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public float vignettingFade
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0xF6365C", Offset = "0xF6365C", VA = "0xF6365C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0xF63664", Offset = "0xF63664", VA = "0xF63664")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public bool vignettingCircularShape
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xF636B4", Offset = "0xF636B4", VA = "0xF636B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0xF636BC", Offset = "0xF636BC", VA = "0xF636BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public float vignettingAspectRatio
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xF63718", Offset = "0xF63718", VA = "0xF63718")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xF63720", Offset = "0xF63720", VA = "0xF63720")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public float vignettingBlink
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xF63770", Offset = "0xF63770", VA = "0xF63770")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001338")]
			[Address(RVA = "0xF63778", Offset = "0xF63778", VA = "0xF63778")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public Texture2D vignettingMask
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0xF637C8", Offset = "0xF637C8", VA = "0xF637C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0xF637D0", Offset = "0xF637D0", VA = "0xF637D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public bool frame
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xF6387C", Offset = "0xF6387C", VA = "0xF6387C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133C")]
			[Address(RVA = "0xF63884", Offset = "0xF63884", VA = "0xF63884")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public Color frameColor
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xF638E0", Offset = "0xF638E0", VA = "0xF638E0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xF638EC", Offset = "0xF638EC", VA = "0xF638EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public Texture2D frameMask
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xF63984", Offset = "0xF63984", VA = "0xF63984")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001340")]
			[Address(RVA = "0xF6398C", Offset = "0xF6398C", VA = "0xF6398C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public bool lut
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0xF63A38", Offset = "0xF63A38", VA = "0xF63A38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001342")]
			[Address(RVA = "0xF63A40", Offset = "0xF63A40", VA = "0xF63A40")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public float lutIntensity
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0xF63AA8", Offset = "0xF63AA8", VA = "0xF63AA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001344")]
			[Address(RVA = "0xF63AB0", Offset = "0xF63AB0", VA = "0xF63AB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public Texture2D lutTexture
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0xF63B00", Offset = "0xF63B00", VA = "0xF63B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001346")]
			[Address(RVA = "0xF63B08", Offset = "0xF63B08", VA = "0xF63B08")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public bool nightVision
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0xF63BB4", Offset = "0xF63BB4", VA = "0xF63BB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xF63BBC", Offset = "0xF63BBC", VA = "0xF63BBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public Color nightVisionColor
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xF63C6C", Offset = "0xF63C6C", VA = "0xF63C6C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xF63C78", Offset = "0xF63C78", VA = "0xF63C78")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public bool outline
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xF63D10", Offset = "0xF63D10", VA = "0xF63D10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xF63D18", Offset = "0xF63D18", VA = "0xF63D18")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public Color outlineColor
		{
			[Token(Token = "0x600134D")]
			[Address(RVA = "0xF63D74", Offset = "0xF63D74", VA = "0xF63D74")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xF63D80", Offset = "0xF63D80", VA = "0xF63D80")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public bool thermalVision
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xF63E18", Offset = "0xF63E18", VA = "0xF63E18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xF63E20", Offset = "0xF63E20", VA = "0xF63E20")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public bool lensDirt
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xF63ED4", Offset = "0xF63ED4", VA = "0xF63ED4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001352")]
			[Address(RVA = "0xF63EDC", Offset = "0xF63EDC", VA = "0xF63EDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public float lensDirtThreshold
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xF63F38", Offset = "0xF63F38", VA = "0xF63F38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001354")]
			[Address(RVA = "0xF63F40", Offset = "0xF63F40", VA = "0xF63F40")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public float lensDirtIntensity
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0xF63F90", Offset = "0xF63F90", VA = "0xF63F90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001356")]
			[Address(RVA = "0xF63F98", Offset = "0xF63F98", VA = "0xF63F98")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public Texture2D lensDirtTexture
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0xF63FE8", Offset = "0xF63FE8", VA = "0xF63FE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001358")]
			[Address(RVA = "0xF63FF0", Offset = "0xF63FF0", VA = "0xF63FF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public bool bloom
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0xF6409C", Offset = "0xF6409C", VA = "0xF6409C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600135A")]
			[Address(RVA = "0xF640A4", Offset = "0xF640A4", VA = "0xF640A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public LayerMask bloomCullingMask
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0xF64100", Offset = "0xF64100", VA = "0xF64100")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600135C")]
			[Address(RVA = "0xF64108", Offset = "0xF64108", VA = "0xF64108")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float bloomLayerMaskDownsampling
		{
			[Token(Token = "0x600135D")]
			[Address(RVA = "0xF64180", Offset = "0xF64180", VA = "0xF64180")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600135E")]
			[Address(RVA = "0xF64188", Offset = "0xF64188", VA = "0xF64188")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public float bloomIntensity
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0xF641E4", Offset = "0xF641E4", VA = "0xF641E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001360")]
			[Address(RVA = "0xF641EC", Offset = "0xF641EC", VA = "0xF641EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public float bloomMaxBrightness
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xF64240", Offset = "0xF64240", VA = "0xF64240")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001362")]
			[Address(RVA = "0xF64248", Offset = "0xF64248", VA = "0xF64248")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public float bloomBoost0
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0xF6429C", Offset = "0xF6429C", VA = "0xF6429C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001364")]
			[Address(RVA = "0xF642A4", Offset = "0xF642A4", VA = "0xF642A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public float bloomBoost1
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0xF642F4", Offset = "0xF642F4", VA = "0xF642F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001366")]
			[Address(RVA = "0xF642FC", Offset = "0xF642FC", VA = "0xF642FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public float bloomBoost2
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0xF6434C", Offset = "0xF6434C", VA = "0xF6434C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001368")]
			[Address(RVA = "0xF64354", Offset = "0xF64354", VA = "0xF64354")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public float bloomBoost3
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xF643A4", Offset = "0xF643A4", VA = "0xF643A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xF643AC", Offset = "0xF643AC", VA = "0xF643AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public float bloomBoost4
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0xF643FC", Offset = "0xF643FC", VA = "0xF643FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136C")]
			[Address(RVA = "0xF64404", Offset = "0xF64404", VA = "0xF64404")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public float bloomBoost5
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xF64454", Offset = "0xF64454", VA = "0xF64454")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136E")]
			[Address(RVA = "0xF6445C", Offset = "0xF6445C", VA = "0xF6445C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public bool bloomAntiflicker
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0xF644AC", Offset = "0xF644AC", VA = "0xF644AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001370")]
			[Address(RVA = "0xF644B4", Offset = "0xF644B4", VA = "0xF644B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public bool bloomUltra
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0xF64510", Offset = "0xF64510", VA = "0xF64510")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001372")]
			[Address(RVA = "0xF64518", Offset = "0xF64518", VA = "0xF64518")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public int bloomUltraResolution
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0xF64574", Offset = "0xF64574", VA = "0xF64574")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001374")]
			[Address(RVA = "0xF6457C", Offset = "0xF6457C", VA = "0xF6457C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public float bloomThreshold
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xF645CC", Offset = "0xF645CC", VA = "0xF645CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xF645D4", Offset = "0xF645D4", VA = "0xF645D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public bool bloomCustomize
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0xF64624", Offset = "0xF64624", VA = "0xF64624")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001378")]
			[Address(RVA = "0xF6462C", Offset = "0xF6462C", VA = "0xF6462C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public bool bloomDebug
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0xF64688", Offset = "0xF64688", VA = "0xF64688")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600137A")]
			[Address(RVA = "0xF64690", Offset = "0xF64690", VA = "0xF64690")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public float bloomWeight0
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0xF646EC", Offset = "0xF646EC", VA = "0xF646EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600137C")]
			[Address(RVA = "0xF646F4", Offset = "0xF646F4", VA = "0xF646F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public float bloomWeight1
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0xF64744", Offset = "0xF64744", VA = "0xF64744")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600137E")]
			[Address(RVA = "0xF6474C", Offset = "0xF6474C", VA = "0xF6474C")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public float bloomWeight2
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0xF6479C", Offset = "0xF6479C", VA = "0xF6479C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001380")]
			[Address(RVA = "0xF647A4", Offset = "0xF647A4", VA = "0xF647A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public float bloomWeight3
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0xF647F4", Offset = "0xF647F4", VA = "0xF647F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001382")]
			[Address(RVA = "0xF647FC", Offset = "0xF647FC", VA = "0xF647FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public float bloomWeight4
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0xF6484C", Offset = "0xF6484C", VA = "0xF6484C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001384")]
			[Address(RVA = "0xF64854", Offset = "0xF64854", VA = "0xF64854")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public float bloomWeight5
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0xF648A4", Offset = "0xF648A4", VA = "0xF648A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001386")]
			[Address(RVA = "0xF648AC", Offset = "0xF648AC", VA = "0xF648AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public bool bloomBlur
		{
			[Token(Token = "0x6001387")]
			[Address(RVA = "0xF648FC", Offset = "0xF648FC", VA = "0xF648FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001388")]
			[Address(RVA = "0xF64904", Offset = "0xF64904", VA = "0xF64904")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public bool bloomQuickerBlur
		{
			[Token(Token = "0x6001389")]
			[Address(RVA = "0xF64960", Offset = "0xF64960", VA = "0xF64960")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138A")]
			[Address(RVA = "0xF64968", Offset = "0xF64968", VA = "0xF64968")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public float bloomDepthAtten
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0xF649C4", Offset = "0xF649C4", VA = "0xF649C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600138C")]
			[Address(RVA = "0xF649CC", Offset = "0xF649CC", VA = "0xF649CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public float bloomLayerZBias
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xF64A1C", Offset = "0xF64A1C", VA = "0xF64A1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600138E")]
			[Address(RVA = "0xF64A24", Offset = "0xF64A24", VA = "0xF64A24")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public BEAUTIFY_PRERENDER_EVENT preRenderCameraEvent
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xF64A84", Offset = "0xF64A84", VA = "0xF64A84")]
			get
			{
				return default(BEAUTIFY_PRERENDER_EVENT);
			}
			[Token(Token = "0x6001390")]
			[Address(RVA = "0xF64A8C", Offset = "0xF64A8C", VA = "0xF64A8C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public bool anamorphicFlares
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0xF64AA0", Offset = "0xF64AA0", VA = "0xF64AA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001392")]
			[Address(RVA = "0xF64AA8", Offset = "0xF64AA8", VA = "0xF64AA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public float anamorphicFlaresIntensity
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xF64B04", Offset = "0xF64B04", VA = "0xF64B04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xF64B0C", Offset = "0xF64B0C", VA = "0xF64B0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public bool anamorphicFlaresAntiflicker
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xF64B60", Offset = "0xF64B60", VA = "0xF64B60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001396")]
			[Address(RVA = "0xF64B68", Offset = "0xF64B68", VA = "0xF64B68")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public bool anamorphicFlaresUltra
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xF64BC4", Offset = "0xF64BC4", VA = "0xF64BC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001398")]
			[Address(RVA = "0xF64BCC", Offset = "0xF64BCC", VA = "0xF64BCC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public int anamorphicUltraResolution
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xF64C28", Offset = "0xF64C28", VA = "0xF64C28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xF64C30", Offset = "0xF64C30", VA = "0xF64C30")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public float anamorphicFlaresThreshold
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0xF64C80", Offset = "0xF64C80", VA = "0xF64C80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600139C")]
			[Address(RVA = "0xF64C88", Offset = "0xF64C88", VA = "0xF64C88")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public float anamorphicFlaresSpread
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0xF64CD8", Offset = "0xF64CD8", VA = "0xF64CD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xF64CE0", Offset = "0xF64CE0", VA = "0xF64CE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public bool anamorphicFlaresVertical
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0xF64D30", Offset = "0xF64D30", VA = "0xF64D30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xF64D38", Offset = "0xF64D38", VA = "0xF64D38")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public Color anamorphicFlaresTint
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xF64D94", Offset = "0xF64D94", VA = "0xF64D94")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xF64DA8", Offset = "0xF64DA8", VA = "0xF64DA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public bool anamorphicFlaresBlur
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xF64E50", Offset = "0xF64E50", VA = "0xF64E50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xF64E58", Offset = "0xF64E58", VA = "0xF64E58")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public bool depthOfField
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xF64EB4", Offset = "0xF64EB4", VA = "0xF64EB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xF64EBC", Offset = "0xF64EBC", VA = "0xF64EBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public bool depthOfFieldTransparencySupport
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xF64F18", Offset = "0xF64F18", VA = "0xF64F18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xF64F20", Offset = "0xF64F20", VA = "0xF64F20")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public LayerMask depthOfFieldTransparencyLayerMask
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0xF64F7C", Offset = "0xF64F7C", VA = "0xF64F7C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xF64F84", Offset = "0xF64F84", VA = "0xF64F84")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public Transform depthOfFieldTargetFocus
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0xF64FFC", Offset = "0xF64FFC", VA = "0xF64FFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xF65004", Offset = "0xF65004", VA = "0xF65004")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public bool depthOfFieldDebug
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xF650B0", Offset = "0xF650B0", VA = "0xF650B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xF650B8", Offset = "0xF650B8", VA = "0xF650B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public bool depthOfFieldAutofocus
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xF65114", Offset = "0xF65114", VA = "0xF65114")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xF6511C", Offset = "0xF6511C", VA = "0xF6511C")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public Vector2 depthofFieldAutofocusViewportPoint
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0xF65178", Offset = "0xF65178", VA = "0xF65178")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0xF65184", Offset = "0xF65184", VA = "0xF65184")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public float depthOfFieldAutofocusMinDistance
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0xF651F8", Offset = "0xF651F8", VA = "0xF651F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0xF65200", Offset = "0xF65200", VA = "0xF65200")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public float depthOfFieldAutofocusMaxDistance
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0xF65250", Offset = "0xF65250", VA = "0xF65250")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0xF65258", Offset = "0xF65258", VA = "0xF65258")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public LayerMask depthOfFieldAutofocusLayerMask
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0xF652A8", Offset = "0xF652A8", VA = "0xF652A8")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0xF652B0", Offset = "0xF652B0", VA = "0xF652B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public LayerMask depthOfFieldExclusionLayerMask
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xF65328", Offset = "0xF65328", VA = "0xF65328")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xF65330", Offset = "0xF65330", VA = "0xF65330")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public float depthOfFieldExclusionLayerMaskDownsampling
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xF653A8", Offset = "0xF653A8", VA = "0xF653A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0xF653B0", Offset = "0xF653B0", VA = "0xF653B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public float depthOfFieldTransparencySupportDownsampling
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0xF6540C", Offset = "0xF6540C", VA = "0xF6540C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0xF65414", Offset = "0xF65414", VA = "0xF65414")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public float depthOfFieldExclusionBias
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0xF65470", Offset = "0xF65470", VA = "0xF65470")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0xF65478", Offset = "0xF65478", VA = "0xF65478")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public float depthOfFieldDistance
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0xF654D0", Offset = "0xF654D0", VA = "0xF654D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xF654D8", Offset = "0xF654D8", VA = "0xF654D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public float depthOfFieldFocusSpeed
		{
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xF65534", Offset = "0xF65534", VA = "0xF65534")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xF6553C", Offset = "0xF6553C", VA = "0xF6553C")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public int depthOfFieldDownsampling
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0xF655A0", Offset = "0xF655A0", VA = "0xF655A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0xF655A8", Offset = "0xF655A8", VA = "0xF655A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public int depthOfFieldMaxSamples
		{
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0xF65608", Offset = "0xF65608", VA = "0xF65608")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xF65610", Offset = "0xF65610", VA = "0xF65610")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public float depthOfFieldFocalLength
		{
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xF65670", Offset = "0xF65670", VA = "0xF65670")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xF65678", Offset = "0xF65678", VA = "0xF65678")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public float depthOfFieldAperture
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xF656CC", Offset = "0xF656CC", VA = "0xF656CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xF656D4", Offset = "0xF656D4", VA = "0xF656D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public bool depthOfFieldForegroundBlur
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xF65728", Offset = "0xF65728", VA = "0xF65728")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xF65730", Offset = "0xF65730", VA = "0xF65730")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public bool depthOfFieldForegroundBlurHQ
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xF6578C", Offset = "0xF6578C", VA = "0xF6578C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xF65794", Offset = "0xF65794", VA = "0xF65794")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public float depthOfFieldForegroundDistance
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xF657F0", Offset = "0xF657F0", VA = "0xF657F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xF657F8", Offset = "0xF657F8", VA = "0xF657F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public bool depthOfFieldBokeh
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xF65848", Offset = "0xF65848", VA = "0xF65848")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xF65850", Offset = "0xF65850", VA = "0xF65850")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public float depthOfFieldBokehThreshold
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xF658AC", Offset = "0xF658AC", VA = "0xF658AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xF658B4", Offset = "0xF658B4", VA = "0xF658B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public float depthOfFieldBokehIntensity
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xF65910", Offset = "0xF65910", VA = "0xF65910")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xF65918", Offset = "0xF65918", VA = "0xF65918")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public float depthOfFieldMaxBrightness
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xF65974", Offset = "0xF65974", VA = "0xF65974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xF6597C", Offset = "0xF6597C", VA = "0xF6597C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public float depthOfFieldMaxDistance
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xF659D0", Offset = "0xF659D0", VA = "0xF659D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0xF659D8", Offset = "0xF659D8", VA = "0xF659D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public FilterMode depthOfFieldFilterMode
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xF65A2C", Offset = "0xF65A2C", VA = "0xF65A2C")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xF65A34", Offset = "0xF65A34", VA = "0xF65A34")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public bool eyeAdaptation
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xF65A84", Offset = "0xF65A84", VA = "0xF65A84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xF65A8C", Offset = "0xF65A8C", VA = "0xF65A8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public float eyeAdaptationMinExposure
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xF65AE8", Offset = "0xF65AE8", VA = "0xF65AE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xF65AF0", Offset = "0xF65AF0", VA = "0xF65AF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public float eyeAdaptationMaxExposure
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xF65B48", Offset = "0xF65B48", VA = "0xF65B48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xF65B50", Offset = "0xF65B50", VA = "0xF65B50")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public float eyeAdaptationSpeedToLight
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xF65BB4", Offset = "0xF65BB4", VA = "0xF65BB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xF65BBC", Offset = "0xF65BBC", VA = "0xF65BBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public float eyeAdaptationSpeedToDark
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xF65C14", Offset = "0xF65C14", VA = "0xF65C14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xF65C1C", Offset = "0xF65C1C", VA = "0xF65C1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public bool purkinje
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xF65C74", Offset = "0xF65C74", VA = "0xF65C74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xF65C7C", Offset = "0xF65C7C", VA = "0xF65C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public float purkinjeAmount
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0xF65CD8", Offset = "0xF65CD8", VA = "0xF65CD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0xF65CE0", Offset = "0xF65CE0", VA = "0xF65CE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public float purkinjeLuminanceThreshold
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0xF65D40", Offset = "0xF65D40", VA = "0xF65D40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xF65D48", Offset = "0xF65D48", VA = "0xF65D48")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public BEAUTIFY_TMO tonemap
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0xF65DA8", Offset = "0xF65DA8", VA = "0xF65DA8")]
			get
			{
				return default(BEAUTIFY_TMO);
			}
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xF65DB0", Offset = "0xF65DB0", VA = "0xF65DB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public bool sunFlares
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xF65E14", Offset = "0xF65E14", VA = "0xF65E14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xF65E1C", Offset = "0xF65E1C", VA = "0xF65E1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public Transform sun
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0xF65E78", Offset = "0xF65E78", VA = "0xF65E78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0xF65E80", Offset = "0xF65E80", VA = "0xF65E80")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public LayerMask sunFlaresLayerMask
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0xF65F2C", Offset = "0xF65F2C", VA = "0xF65F2C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xF65F34", Offset = "0xF65F34", VA = "0xF65F34")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public float sunFlaresIntensity
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xF65FAC", Offset = "0xF65FAC", VA = "0xF65FAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xF65FB4", Offset = "0xF65FB4", VA = "0xF65FB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public float sunFlaresSolarWindSpeed
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xF66004", Offset = "0xF66004", VA = "0xF66004")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xF6600C", Offset = "0xF6600C", VA = "0xF6600C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public Color sunFlaresTint
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xF6605C", Offset = "0xF6605C", VA = "0xF6605C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xF66070", Offset = "0xF66070", VA = "0xF66070")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public int sunFlaresDownsampling
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xF66118", Offset = "0xF66118", VA = "0xF66118")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xF66120", Offset = "0xF66120", VA = "0xF66120")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public float sunFlaresSunIntensity
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xF66180", Offset = "0xF66180", VA = "0xF66180")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xF66188", Offset = "0xF66188", VA = "0xF66188")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public float sunFlaresSunDiskSize
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xF661D8", Offset = "0xF661D8", VA = "0xF661D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xF661E0", Offset = "0xF661E0", VA = "0xF661E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public float sunFlaresSunRayDiffractionIntensity
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0xF66230", Offset = "0xF66230", VA = "0xF66230")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xF66238", Offset = "0xF66238", VA = "0xF66238")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public float sunFlaresSunRayDiffractionThreshold
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xF66288", Offset = "0xF66288", VA = "0xF66288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xF66290", Offset = "0xF66290", VA = "0xF66290")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public float sunFlaresCoronaRays1Length
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xF662E0", Offset = "0xF662E0", VA = "0xF662E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xF662E8", Offset = "0xF662E8", VA = "0xF662E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public int sunFlaresCoronaRays1Streaks
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xF66338", Offset = "0xF66338", VA = "0xF66338")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xF66340", Offset = "0xF66340", VA = "0xF66340")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public float sunFlaresCoronaRays1Spread
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xF66390", Offset = "0xF66390", VA = "0xF66390")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xF66398", Offset = "0xF66398", VA = "0xF66398")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public float sunFlaresCoronaRays1AngleOffset
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0xF663E8", Offset = "0xF663E8", VA = "0xF663E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600140E")]
			[Address(RVA = "0xF663F0", Offset = "0xF663F0", VA = "0xF663F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public float sunFlaresCoronaRays2Length
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0xF66440", Offset = "0xF66440", VA = "0xF66440")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001410")]
			[Address(RVA = "0xF66448", Offset = "0xF66448", VA = "0xF66448")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public int sunFlaresCoronaRays2Streaks
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0xF66498", Offset = "0xF66498", VA = "0xF66498")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001412")]
			[Address(RVA = "0xF664A0", Offset = "0xF664A0", VA = "0xF664A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public float sunFlaresCoronaRays2Spread
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0xF664F0", Offset = "0xF664F0", VA = "0xF664F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001414")]
			[Address(RVA = "0xF664F8", Offset = "0xF664F8", VA = "0xF664F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public float sunFlaresCoronaRays2AngleOffset
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0xF66548", Offset = "0xF66548", VA = "0xF66548")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001416")]
			[Address(RVA = "0xF66550", Offset = "0xF66550", VA = "0xF66550")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public float sunFlaresGhosts1Size
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0xF665A0", Offset = "0xF665A0", VA = "0xF665A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001418")]
			[Address(RVA = "0xF665A8", Offset = "0xF665A8", VA = "0xF665A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public float sunFlaresGhosts1Offset
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0xF665F8", Offset = "0xF665F8", VA = "0xF665F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600141A")]
			[Address(RVA = "0xF66600", Offset = "0xF66600", VA = "0xF66600")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public float sunFlaresGhosts1Brightness
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0xF66650", Offset = "0xF66650", VA = "0xF66650")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600141C")]
			[Address(RVA = "0xF66658", Offset = "0xF66658", VA = "0xF66658")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public float sunFlaresGhosts2Size
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xF666A8", Offset = "0xF666A8", VA = "0xF666A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600141E")]
			[Address(RVA = "0xF666B0", Offset = "0xF666B0", VA = "0xF666B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public float sunFlaresGhosts2Offset
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0xF66700", Offset = "0xF66700", VA = "0xF66700")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xF66708", Offset = "0xF66708", VA = "0xF66708")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public float sunFlaresGhosts2Brightness
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xF66758", Offset = "0xF66758", VA = "0xF66758")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xF66760", Offset = "0xF66760", VA = "0xF66760")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public float sunFlaresGhosts3Size
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xF667B0", Offset = "0xF667B0", VA = "0xF667B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xF667B8", Offset = "0xF667B8", VA = "0xF667B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public float sunFlaresGhosts3Brightness
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xF66808", Offset = "0xF66808", VA = "0xF66808")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xF66810", Offset = "0xF66810", VA = "0xF66810")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public float sunFlaresGhosts3Offset
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xF66860", Offset = "0xF66860", VA = "0xF66860")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xF66868", Offset = "0xF66868", VA = "0xF66868")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public float sunFlaresGhosts4Size
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0xF668B8", Offset = "0xF668B8", VA = "0xF668B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xF668C0", Offset = "0xF668C0", VA = "0xF668C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public float sunFlaresGhosts4Offset
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xF66910", Offset = "0xF66910", VA = "0xF66910")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600142C")]
			[Address(RVA = "0xF66918", Offset = "0xF66918", VA = "0xF66918")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public float sunFlaresGhosts4Brightness
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0xF66968", Offset = "0xF66968", VA = "0xF66968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600142E")]
			[Address(RVA = "0xF66970", Offset = "0xF66970", VA = "0xF66970")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public float sunFlaresHaloOffset
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0xF669C0", Offset = "0xF669C0", VA = "0xF669C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001430")]
			[Address(RVA = "0xF669C8", Offset = "0xF669C8", VA = "0xF669C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public float sunFlaresHaloAmplitude
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0xF66A18", Offset = "0xF66A18", VA = "0xF66A18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001432")]
			[Address(RVA = "0xF66A20", Offset = "0xF66A20", VA = "0xF66A20")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public float sunFlaresHaloIntensity
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0xF66A70", Offset = "0xF66A70", VA = "0xF66A70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001434")]
			[Address(RVA = "0xF66A78", Offset = "0xF66A78", VA = "0xF66A78")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public bool sunFlaresRotationDeadZone
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0xF66AC8", Offset = "0xF66AC8", VA = "0xF66AC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001436")]
			[Address(RVA = "0xF66AD0", Offset = "0xF66AD0", VA = "0xF66AD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public bool blur
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0xF66B2C", Offset = "0xF66B2C", VA = "0xF66B2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001438")]
			[Address(RVA = "0xF66B34", Offset = "0xF66B34", VA = "0xF66B34")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public float blurIntensity
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0xF66B90", Offset = "0xF66B90", VA = "0xF66B90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600143A")]
			[Address(RVA = "0xF66B98", Offset = "0xF66B98", VA = "0xF66B98")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public int downscale
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0xF66BE8", Offset = "0xF66BE8", VA = "0xF66BE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600143C")]
			[Address(RVA = "0xF66BF0", Offset = "0xF66BF0", VA = "0xF66BF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public int pixelateAmount
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0xF66C40", Offset = "0xF66C40", VA = "0xF66C40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600143E")]
			[Address(RVA = "0xF66C48", Offset = "0xF66C48", VA = "0xF66C48")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public bool pixelateDownscale
		{
			[Token(Token = "0x600143F")]
			[Address(RVA = "0xF66C98", Offset = "0xF66C98", VA = "0xF66C98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001440")]
			[Address(RVA = "0xF66CA0", Offset = "0xF66CA0", VA = "0xF66CA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public float antialiasStrength
		{
			[Token(Token = "0x6001441")]
			[Address(RVA = "0xF66CFC", Offset = "0xF66CFC", VA = "0xF66CFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xF66D04", Offset = "0xF66D04", VA = "0xF66D04")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public float antialiasDepthThreshold
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0xF66D54", Offset = "0xF66D54", VA = "0xF66D54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001444")]
			[Address(RVA = "0xF66D5C", Offset = "0xF66D5C", VA = "0xF66D5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public static Beautify instance
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xF66DAC", Offset = "0xF66DAC", VA = "0xF66DAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		public Camera cameraEffect
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0xF66F08", Offset = "0xF66F08", VA = "0xF66F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public float depthOfFieldCurrentFocalPointDistance
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0xF6DAB8", Offset = "0xF6DAB8", VA = "0xF6DAB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xF66F10", Offset = "0xF66F10", VA = "0xF66F10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xF68738", Offset = "0xF68738", VA = "0xF68738")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xF68B90", Offset = "0xF68B90", VA = "0xF68B90")]
		private void Reset()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xF68B94", Offset = "0xF68B94", VA = "0xF68B94")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xF68E70", Offset = "0xF68E70", VA = "0xF68E70")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xF68E80", Offset = "0xF68E80", VA = "0xF68E80")]
		private void DoOnPreRenderTasks()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xF69D50", Offset = "0xF69D50", VA = "0xF69D50")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xF68984", Offset = "0xF68984", VA = "0xF68984")]
		private void CleanUpRT()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xF69024", Offset = "0xF69024", VA = "0xF69024")]
		private void CheckDoFTransparencySupport()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xF69454", Offset = "0xF69454", VA = "0xF69454")]
		private void CheckDoFExclusionMask()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xF69870", Offset = "0xF69870", VA = "0xF69870")]
		private void CheckBloomCullingLayer()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xF69FBC", Offset = "0xF69FBC", VA = "0xF69FBC")]
		private void RenderLeftEyeDepth()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xF6A164", Offset = "0xF6A164", VA = "0xF6A164")]
		private void RenderRightEyeDepth()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xF6A30C", Offset = "0xF6A30C", VA = "0xF6A30C", Slot = "4")]
		protected virtual void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xF6D700", Offset = "0xF6D700", VA = "0xF6D700")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xF6D1F0", Offset = "0xF6D1F0", VA = "0xF6D1F0")]
		private void BlurThis(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xF6D338", Offset = "0xF6D338", VA = "0xF6D338")]
		private void BlurThisDownscaling(RenderTexture rt, RenderTexture downscaled, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xF6D5C8", Offset = "0xF6D5C8", VA = "0xF6D5C8")]
		private RenderTexture BlurThisOneDirection(RenderTexture rt, bool vertical, float blurScale = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xF6CF34", Offset = "0xF6CF34", VA = "0xF6CF34")]
		private void BlurThisDoF(RenderTexture rt, int renderPass)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xF6CDEC", Offset = "0xF6CDEC", VA = "0xF6CDEC")]
		private void BlurThisAlpha(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xF6D900", Offset = "0xF6D900", VA = "0xF6D900")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xF62D58", Offset = "0xF62D58", VA = "0xF62D58")]
		public void UpdateQualitySettings()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xF62C94", Offset = "0xF62C94", VA = "0xF62C94")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xF67034", Offset = "0xF67034", VA = "0xF67034")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xF6D124", Offset = "0xF6D124", VA = "0xF6D124")]
		private void UpdateMaterialBloomIntensityAndThreshold()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xF6D508", Offset = "0xF6D508", VA = "0xF6D508")]
		private void UpdateMaterialAnamorphicIntensityAndThreshold()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xF68DD8", Offset = "0xF68DD8", VA = "0xF68DD8")]
		private void UpdateSharpenParams(float sharpen)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xF6CACC", Offset = "0xF6CACC", VA = "0xF6CACC")]
		private void UpdateDepthOfFieldData()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xF6D870", Offset = "0xF6D870", VA = "0xF6D870")]
		private void UpdateDepthOfFieldBlurData(Vector2 blurDir)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xF6D90C", Offset = "0xF6D90C", VA = "0xF6D90C")]
		private void UpdateDoFAutofocusDistance()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xF6D9FC", Offset = "0xF6D9FC", VA = "0xF6D9FC")]
		public void Blink(float duration, float maxValue = 1f)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xF6DA34", Offset = "0xF6DA34", VA = "0xF6DA34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4C6374", Offset = "0x4C6374")]
		private IEnumerator DoBlink(float duration, float maxValue)
		{
			return null;
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xF6DAC0", Offset = "0xF6DAC0", VA = "0xF6DAC0")]
		public Beautify()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4BA758", Offset = "0x4BA758")]
	public class BeautifyProfile : ScriptableObject
	{
		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2B1C", Offset = "0x4C2B1C")]
		public float dither;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2B38", Offset = "0x4C2B38")]
		public float ditherDepth;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2B50", Offset = "0x4C2B50")]
		public float sharpenMinDepth;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2B68", Offset = "0x4C2B68")]
		public float sharpenMaxDepth;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2B84", Offset = "0x4C2B84")]
		public float sharpen;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2B9C", Offset = "0x4C2B9C")]
		public float sharpenMinMaxDepthFallOff;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2BB4", Offset = "0x4C2BB4")]
		public float sharpenDepthThreshold;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color tintColor;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2BD0", Offset = "0x4C2BD0")]
		public float sharpenRelaxation;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2BEC", Offset = "0x4C2BEC")]
		public float sharpenClamp;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2C04", Offset = "0x4C2C04")]
		public float sharpenMotionSensibility;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2C1C", Offset = "0x4C2C1C")]
		public float antialiasStrength;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2C34", Offset = "0x4C2C34")]
		public float antialiasDepthThreshold;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2C50", Offset = "0x4C2C50")]
		public int downscale;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2C68", Offset = "0x4C2C68")]
		public float saturate;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2C80", Offset = "0x4C2C80")]
		public float contrast;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2C98", Offset = "0x4C2C98")]
		public float brightness;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2CB0", Offset = "0x4C2CB0")]
		public float daltonize;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool vignetting;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color vignettingColor;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float vignettingFade;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool vignettingCircularShape;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float vignettingAspectRatio;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2CC8", Offset = "0x4C2CC8")]
		public float vignettingBlink;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D vignettingMask;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool frame;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color frameColor;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D frameMask;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool lut;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2CE0", Offset = "0x4C2CE0")]
		public float lutIntensity;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Texture2D lutTexture;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool nightVision;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Color nightVisionColor;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool outline;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Color outlineColor;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool thermalVision;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool lensDirt;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2CF8", Offset = "0x4C2CF8")]
		public float lensDirtThreshold;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2D10", Offset = "0x4C2D10")]
		public float lensDirtIntensity;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Texture2D lensDirtTexture;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool bloom;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public LayerMask bloomCullingMask;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2D28", Offset = "0x4C2D28")]
		public float bloomLayerMaskDownsampling;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2D40", Offset = "0x4C2D40")]
		public float bloomIntensity;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float bloomMaxBrightness;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2D58", Offset = "0x4C2D58")]
		public float bloomBoost0;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2D70", Offset = "0x4C2D70")]
		public float bloomBoost1;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2D88", Offset = "0x4C2D88")]
		public float bloomBoost2;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2DA0", Offset = "0x4C2DA0")]
		public float bloomBoost3;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2DB8", Offset = "0x4C2DB8")]
		public float bloomBoost4;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2DD0", Offset = "0x4C2DD0")]
		public float bloomBoost5;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool bloomAntiflicker;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public bool bloomUltra;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2DE8", Offset = "0x4C2DE8")]
		public int bloomUltraResolution;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2E00", Offset = "0x4C2E00")]
		public float bloomThreshold;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool bloomCustomize;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2E18", Offset = "0x4C2E18")]
		public float bloomWeight0;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2E30", Offset = "0x4C2E30")]
		public float bloomWeight1;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2E48", Offset = "0x4C2E48")]
		public float bloomWeight2;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2E60", Offset = "0x4C2E60")]
		public float bloomWeight3;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2E78", Offset = "0x4C2E78")]
		public float bloomWeight4;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2E90", Offset = "0x4C2E90")]
		public float bloomWeight5;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool bloomBlur;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2EA8", Offset = "0x4C2EA8")]
		public float bloomDepthAtten;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2EC0", Offset = "0x4C2EC0")]
		public float bloomLayerZBias;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public bool anamorphicFlares;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2ED8", Offset = "0x4C2ED8")]
		public float anamorphicFlaresIntensity;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool anamorphicFlaresAntiflicker;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public bool anamorphicFlaresUltra;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2EF0", Offset = "0x4C2EF0")]
		public int anamorphicFlaresUltraResolution;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2F08", Offset = "0x4C2F08")]
		public float anamorphicFlaresThreshold;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2F20", Offset = "0x4C2F20")]
		public float anamorphicFlaresSpread;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public bool anamorphicFlaresVertical;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Color anamorphicFlaresTint;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public bool anamorphicFlaresBlur;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		public bool depthOfField;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		public bool depthOfFieldTransparencySupport;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform depthOfFieldTargetFocus;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool depthOfFieldAutofocus;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public Vector2 depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public LayerMask depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public LayerMask depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2F3C", Offset = "0x4C2F3C")]
		public float depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2F54", Offset = "0x4C2F54")]
		public float depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2F6C", Offset = "0x4C2F6C")]
		public float depthOfFieldExclusionBias;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2F88", Offset = "0x4C2F88")]
		public float depthOfFieldDistance;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2FA4", Offset = "0x4C2FA4")]
		public float depthOfFieldFocusSpeed;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2FC0", Offset = "0x4C2FC0")]
		public int depthOfFieldDownsampling;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2FD8", Offset = "0x4C2FD8")]
		public int depthOfFieldMaxSamples;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C2FF0", Offset = "0x4C2FF0")]
		public float depthOfFieldFocalLength;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float depthOfFieldAperture;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool depthOfFieldForegroundBlur;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		public bool depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float depthOfFieldForegroundDistance;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool depthOfFieldBokeh;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C300C", Offset = "0x4C300C")]
		public float depthOfFieldBokehThreshold;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3024", Offset = "0x4C3024")]
		public float depthOfFieldBokehIntensity;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float depthOfFieldMaxBrightness;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float depthOfFieldMaxDistance;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public FilterMode depthOfFieldFilterMode;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public LayerMask depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public bool eyeAdaptation;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C303C", Offset = "0x4C303C")]
		public float eyeAdaptationMinExposure;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3054", Offset = "0x4C3054")]
		public float eyeAdaptationMaxExposure;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3070", Offset = "0x4C3070")]
		public float eyeAdaptationSpeedToLight;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3088", Offset = "0x4C3088")]
		public float eyeAdaptationSpeedToDark;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bool purkinje;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C30A0", Offset = "0x4C30A0")]
		public float purkinjeAmount;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C30B8", Offset = "0x4C30B8")]
		public float purkinjeLuminanceThreshold;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public BEAUTIFY_TMO tonemap;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool sunFlares;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C30D0", Offset = "0x4C30D0")]
		public float sunFlaresIntensity;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C30E8", Offset = "0x4C30E8")]
		public float sunFlaresSolarWindSpeed;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public Color sunFlaresTint;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3100", Offset = "0x4C3100")]
		public int sunFlaresDownsampling;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3118", Offset = "0x4C3118")]
		public float sunFlaresSunIntensity;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3130", Offset = "0x4C3130")]
		public float sunFlaresSunDiskSize;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3148", Offset = "0x4C3148")]
		public float sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3160", Offset = "0x4C3160")]
		public float sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3178", Offset = "0x4C3178")]
		public float sunFlaresCoronaRays1Length;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3194", Offset = "0x4C3194")]
		public int sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C31AC", Offset = "0x4C31AC")]
		public float sunFlaresCoronaRays1Spread;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C31C8", Offset = "0x4C31C8")]
		public float sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C31E4", Offset = "0x4C31E4")]
		public float sunFlaresCoronaRays2Length;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3200", Offset = "0x4C3200")]
		public int sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3218", Offset = "0x4C3218")]
		public float sunFlaresCoronaRays2Spread;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3234", Offset = "0x4C3234")]
		public float sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3250", Offset = "0x4C3250")]
		public float sunFlaresGhosts1Size;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3268", Offset = "0x4C3268")]
		public float sunFlaresGhosts1Offset;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3280", Offset = "0x4C3280")]
		public float sunFlaresGhosts1Brightness;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3298", Offset = "0x4C3298")]
		public float sunFlaresGhosts2Size;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C32B0", Offset = "0x4C32B0")]
		public float sunFlaresGhosts2Offset;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C32C8", Offset = "0x4C32C8")]
		public float sunFlaresGhosts2Brightness;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C32E0", Offset = "0x4C32E0")]
		public float sunFlaresGhosts3Size;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C32F8", Offset = "0x4C32F8")]
		public float sunFlaresGhosts3Brightness;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3310", Offset = "0x4C3310")]
		public float sunFlaresGhosts3Offset;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3328", Offset = "0x4C3328")]
		public float sunFlaresGhosts4Size;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3340", Offset = "0x4C3340")]
		public float sunFlaresGhosts4Offset;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3358", Offset = "0x4C3358")]
		public float sunFlaresGhosts4Brightness;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3370", Offset = "0x4C3370")]
		public float sunFlaresHaloOffset;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C3388", Offset = "0x4C3388")]
		public float sunFlaresHaloAmplitude;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C33A4", Offset = "0x4C33A4")]
		public float sunFlaresHaloIntensity;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public bool sunFlaresRotationDeadZone;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B5")]
		public bool blur;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4C33BC", Offset = "0x4C33BC")]
		public float blurIntensity;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public int pixelateAmount;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public bool pixelateDownscale;

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x9AEC6C", Offset = "0x9AEC6C", VA = "0x9AEC6C")]
		public void Load(Beautify b)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x9AF610", Offset = "0x9AF610", VA = "0x9AF610")]
		public void Save(Beautify b)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x9AFAE4", Offset = "0x9AFAE4", VA = "0x9AFAE4")]
		public BeautifyProfile()
		{
		}
	}
}
