using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using System.Xml.Linq;
using ExitGames.Client.Photon;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using Il2CppDummyDll;
using InControl;
using Oculus.Platform;
using Oculus.Platform.Models;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using RootMotion.FinalIK;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityStandardAssets.ImageEffects;
using UnityStandardAssets.Utility;
using VRStandardAssets.Utils;
using Valve.VR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AF24", Offset = "0xA2AF24")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA310DC", Offset = "0xA310DC")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA310F0", Offset = "0xA310F0")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AF34", Offset = "0xA2AF34")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31104", Offset = "0xA31104")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31118", Offset = "0xA31118")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA3112C", Offset = "0xA3112C")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AF44", Offset = "0xA2AF44")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31140", Offset = "0xA31140")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31154", Offset = "0xA31154")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31168", Offset = "0xA31168")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA3117C", Offset = "0xA3117C")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31190", Offset = "0xA31190")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA311A4", Offset = "0xA311A4")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AF54", Offset = "0xA2AF54")]
internal sealed class <>f__AnonymousType3<<value>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA311B8", Offset = "0xA311B8")]
	private readonly <value>j__TPar <value>i__Field;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA311CC", Offset = "0xA311CC")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x1700000C")]
	public <value>j__TPar value
	{
		[Token(Token = "0x6000018")]
		get
		{
			return (<value>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000D")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000019")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x600001A")]
	[DebuggerHidden]
	public <>f__AnonymousType3(<value>j__TPar value, <index>j__TPar index)
	{
	}

	[Token(Token = "0x600001B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600001C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600001D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000006")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AF64", Offset = "0xA2AF64")]
internal sealed class <>f__AnonymousType4<<deviceModel>j__TPar, <gfxDevice>j__TPar, <gfxDeviceVendor>j__TPar, <gfxDeviceVersion>j__TPar, <gfxDeviceMemory>j__TPar, <operatingSystem>j__TPar, <processorCount>j__TPar, <processorFrequency>j__TPar, <processorType>j__TPar>
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA311E0", Offset = "0xA311E0")]
	private readonly <deviceModel>j__TPar <deviceModel>i__Field;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA311F4", Offset = "0xA311F4")]
	private readonly <gfxDevice>j__TPar <gfxDevice>i__Field;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31208", Offset = "0xA31208")]
	private readonly <gfxDeviceVendor>j__TPar <gfxDeviceVendor>i__Field;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA3121C", Offset = "0xA3121C")]
	private readonly <gfxDeviceVersion>j__TPar <gfxDeviceVersion>i__Field;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31230", Offset = "0xA31230")]
	private readonly <gfxDeviceMemory>j__TPar <gfxDeviceMemory>i__Field;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31244", Offset = "0xA31244")]
	private readonly <operatingSystem>j__TPar <operatingSystem>i__Field;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31258", Offset = "0xA31258")]
	private readonly <processorCount>j__TPar <processorCount>i__Field;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA3126C", Offset = "0xA3126C")]
	private readonly <processorFrequency>j__TPar <processorFrequency>i__Field;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xA31280", Offset = "0xA31280")]
	private readonly <processorType>j__TPar <processorType>i__Field;

	[Token(Token = "0x1700000E")]
	public <deviceModel>j__TPar deviceModel
	{
		[Token(Token = "0x600001E")]
		get
		{
			return (<deviceModel>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000F")]
	public <gfxDevice>j__TPar gfxDevice
	{
		[Token(Token = "0x600001F")]
		get
		{
			return (<gfxDevice>j__TPar)null;
		}
	}

	[Token(Token = "0x17000010")]
	public <gfxDeviceVendor>j__TPar gfxDeviceVendor
	{
		[Token(Token = "0x6000020")]
		get
		{
			return (<gfxDeviceVendor>j__TPar)null;
		}
	}

	[Token(Token = "0x17000011")]
	public <gfxDeviceVersion>j__TPar gfxDeviceVersion
	{
		[Token(Token = "0x6000021")]
		get
		{
			return (<gfxDeviceVersion>j__TPar)null;
		}
	}

	[Token(Token = "0x17000012")]
	public <gfxDeviceMemory>j__TPar gfxDeviceMemory
	{
		[Token(Token = "0x6000022")]
		get
		{
			return (<gfxDeviceMemory>j__TPar)null;
		}
	}

	[Token(Token = "0x17000013")]
	public <operatingSystem>j__TPar operatingSystem
	{
		[Token(Token = "0x6000023")]
		get
		{
			return (<operatingSystem>j__TPar)null;
		}
	}

	[Token(Token = "0x17000014")]
	public <processorCount>j__TPar processorCount
	{
		[Token(Token = "0x6000024")]
		get
		{
			return (<processorCount>j__TPar)null;
		}
	}

	[Token(Token = "0x17000015")]
	public <processorFrequency>j__TPar processorFrequency
	{
		[Token(Token = "0x6000025")]
		get
		{
			return (<processorFrequency>j__TPar)null;
		}
	}

	[Token(Token = "0x17000016")]
	public <processorType>j__TPar processorType
	{
		[Token(Token = "0x6000026")]
		get
		{
			return (<processorType>j__TPar)null;
		}
	}

	[Token(Token = "0x6000027")]
	[DebuggerHidden]
	public <>f__AnonymousType4(<deviceModel>j__TPar deviceModel, <gfxDevice>j__TPar gfxDevice, <gfxDeviceVendor>j__TPar gfxDeviceVendor, <gfxDeviceVersion>j__TPar gfxDeviceVersion, <gfxDeviceMemory>j__TPar gfxDeviceMemory, <operatingSystem>j__TPar operatingSystem, <processorCount>j__TPar processorCount, <processorFrequency>j__TPar processorFrequency, <processorType>j__TPar processorType)
	{
	}

	[Token(Token = "0x6000028")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000029")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600002A")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000007")]
public class ActivatabeSpeedReduction : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA31294", Offset = "0xA31294")]
	public float SpeedMultiplier;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleCharacterController simpleCharacterController;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB8443C", Offset = "0xB8443C", VA = "0xB8443C")]
	private void Start()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB844C8", Offset = "0xB844C8", VA = "0xB844C8")]
	private void On()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB84524", Offset = "0xB84524", VA = "0xB84524")]
	private void Off()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB845D0", Offset = "0xB845D0", VA = "0xB845D0")]
	public ActivatabeSpeedReduction()
	{
	}
}
[Token(Token = "0x2000008")]
public class ScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minScale;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxScale;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float targetScale;

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1E63AB0", Offset = "0x1E63AB0", VA = "0x1E63AB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1E63ABC", Offset = "0x1E63ABC", VA = "0x1E63ABC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1E63D54", Offset = "0x1E63D54", VA = "0x1E63D54")]
	public ScaleAnimation()
	{
	}
}
[Token(Token = "0x2000009")]
public enum ContainsFlags
{
	[Token(Token = "0x400001D")]
	Inclusive,
	[Token(Token = "0x400001E")]
	Exlusive,
	[Token(Token = "0x400001F")]
	UpperInclusive,
	[Token(Token = "0x4000020")]
	LowerInclusive
}
[Token(Token = "0x200000A")]
public static class FloatExtensioons
{
	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB9E19C", Offset = "0xB9E19C", VA = "0xB9E19C")]
	public static bool Contains(this float f, float lowerBounds, float upperBounds, ContainsFlags containsFlag = ContainsFlags.Inclusive)
	{
		return default(bool);
	}
}
[Token(Token = "0x200000B")]
public static class IntExtensions
{
	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCDE9A0", Offset = "0xCDE9A0", VA = "0xCDE9A0")]
	public static bool Contains(this int i, int lowerBounds, int upperBounds, ContainsFlags containsFlag = ContainsFlags.Inclusive)
	{
		return default(bool);
	}
}
[Token(Token = "0x200000C")]
public abstract class Manager<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T s_instance;

	[Token(Token = "0x17000017")]
	public static T Instance
	{
		[Token(Token = "0x6000034")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000035")]
		set
		{
		}
	}

	[Token(Token = "0x6000036")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000037")]
	protected Manager()
	{
	}
}
[Token(Token = "0x200000D")]
public static class ObjectExtension
{
	[Token(Token = "0x6000038")]
	public static T To<T>(this object o)
	{
		return (T)null;
	}

	[Token(Token = "0x6000039")]
	public static T ToOrDefault<T>(this object o)
	{
		return (T)null;
	}
}
[Token(Token = "0x200000E")]
public static class RandomFloat
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random s_randomGenerator;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1EB1BB8", Offset = "0x1EB1BB8", VA = "0x1EB1BB8")]
	static RandomFloat()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1EB1C74", Offset = "0x1EB1C74", VA = "0x1EB1C74")]
	public static float Range(float lowerBounds, float upperBounds)
	{
		return default(float);
	}
}
[Token(Token = "0x200000F")]
public class SceneAttribute : PropertyAttribute
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool AllowInactiveScenes;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1E63D68", Offset = "0x1E63D68", VA = "0x1E63D68")]
	public SceneAttribute(bool allowInactiveScenes = true)
	{
	}
}
[Token(Token = "0x2000010")]
public class CarlyCalling : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter Carly;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1E4D4E0", Offset = "0x1E4D4E0", VA = "0x1E4D4E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1E4D4E4", Offset = "0x1E4D4E4", VA = "0x1E4D4E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1E4D560", Offset = "0x1E4D560", VA = "0x1E4D560")]
	public CarlyCalling()
	{
	}
}
[Token(Token = "0x2000011")]
public class DestroyTheScore : MonoBehaviour
{
	[Token(Token = "0x6000040")]
	[Address(RVA = "0xAB54B0", Offset = "0xAB54B0", VA = "0xAB54B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xAB5584", Offset = "0xAB5584", VA = "0xAB5584")]
	public DestroyTheScore()
	{
	}
}
[Token(Token = "0x2000012")]
public class DisintegrateImmediately : MonoBehaviour
{
	[Token(Token = "0x6000042")]
	[Address(RVA = "0xAB7D9C", Offset = "0xAB7D9C", VA = "0xAB7D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xAB7DA0", Offset = "0xAB7DA0", VA = "0xAB7DA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xAB7DA4", Offset = "0xAB7DA4", VA = "0xAB7DA4")]
	public DisintegrateImmediately()
	{
	}
}
[Token(Token = "0x2000013")]
public class DontDestroy : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool singleInstance;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xABA198", Offset = "0xABA198", VA = "0xABA198")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xABA2E8", Offset = "0xABA2E8", VA = "0xABA2E8")]
	public DontDestroy()
	{
	}
}
[Token(Token = "0x2000014")]
public class DowngradeManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000015")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2AFA4", Offset = "0xA2AFA4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__14_0;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__15_0;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__19_0;

		[Token(Token = "0x6000057")]
		[Address(RVA = "0xABE3EC", Offset = "0xABE3EC", VA = "0xABE3EC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xABE3F4", Offset = "0xABE3F4", VA = "0xABE3F4")]
		internal bool <downGradeVegetation>b__14_0(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xABE550", Offset = "0xABE550", VA = "0xABE550")]
		internal bool <downGradeLights>b__15_0(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0xABE6E8", Offset = "0xABE6E8", VA = "0xABE6E8")]
		internal bool <downGradeGlubGlub>b__19_0(Transform obj)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystemRenderer[] sceneEffects;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2[] effectCullDistance;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] volumetricLightCones;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpriteRenderer[] spriteLightCones;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform[] vegetations;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject glubglub;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ConstantSpeed glubglubSpeed;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform[] glubVortex;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshRenderer vortexRenderer;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer[] skyBoxRenders;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<List<MeshRenderer>> isolatedDoorGroups;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xABACE4", Offset = "0xABACE4", VA = "0xABACE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xABD410", Offset = "0xABD410", VA = "0xABD410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xABD308", Offset = "0xABD308", VA = "0xABD308")]
	private void onlyUseOneReflectionProbe()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xABC400", Offset = "0xABC400", VA = "0xABC400")]
	private void downGradeVegetation()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xABBEB4", Offset = "0xABBEB4", VA = "0xABBEB4")]
	private void downGradeLights()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xABC6E4", Offset = "0xABC6E4", VA = "0xABC6E4")]
	private void deactivateRealTimeLights()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xABAD30", Offset = "0xABAD30", VA = "0xABAD30")]
	private void downGradeEffects()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xABCA08", Offset = "0xABCA08", VA = "0xABCA08")]
	private void handleMultipleSkyBoxes()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xABC0B8", Offset = "0xABC0B8", VA = "0xABC0B8")]
	private void downGradeGlubGlub()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xABC5DC", Offset = "0xABC5DC", VA = "0xABC5DC")]
	private void deactivateCritters()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xABC82C", Offset = "0xABC82C", VA = "0xABC82C")]
	private void deactivateClutter()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xABDE1C", Offset = "0xABDE1C", VA = "0xABDE1C")]
	private void distanceCull(ParticleSystemRenderer comp, Vector2 limit)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xABDFE8", Offset = "0xABDFE8", VA = "0xABDFE8")]
	private void distanceCull(SpriteRenderer comp, Vector2 limit)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xABE1B4", Offset = "0xABE1B4", VA = "0xABE1B4")]
	private void distanceCull(MeshRenderer comp, Vector2 limit)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xABE380", Offset = "0xABE380", VA = "0xABE380")]
	public DowngradeManager()
	{
	}
}
[Token(Token = "0x2000016")]
public class fmod : MonoBehaviour
{
	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1F6127C", Offset = "0x1F6127C", VA = "0x1F6127C")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1F61280", Offset = "0x1F61280", VA = "0x1F61280")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1F61284", Offset = "0x1F61284", VA = "0x1F61284")]
	public fmod()
	{
	}
}
[Token(Token = "0x2000017")]
public class Hide_Cosmetics : MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_GrabbableObject GrabObject;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject CosmeticOnHead;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject CosmeticInHand;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xBAC4E8", Offset = "0xBAC4E8", VA = "0xBAC4E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xBAC558", Offset = "0xBAC558", VA = "0xBAC558")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xBAC668", Offset = "0xBAC668", VA = "0xBAC668")]
	public Hide_Cosmetics()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2AFB4", Offset = "0xA2AFB4")]
public class IKCtrl : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Animator animator;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ikActive;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightHandObj;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xBB5500", Offset = "0xBB5500", VA = "0xBB5500")]
	private void Start()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xBB5558", Offset = "0xBB5558", VA = "0xBB5558")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xBB5778", Offset = "0xBB5778", VA = "0xBB5778")]
	public IKCtrl()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B018", Offset = "0xA2B018")]
public class KeepWearable : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string wearableId;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReleaseWearable Wearable;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xCE0FB0", Offset = "0xCE0FB0", VA = "0xCE0FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xCE1190", Offset = "0xCE1190", VA = "0xCE1190")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xCE1204", Offset = "0xCE1204", VA = "0xCE1204")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xCE1368", Offset = "0xCE1368", VA = "0xCE1368")]
	public KeepWearable()
	{
	}
}
[Token(Token = "0x200001A")]
public class ScrollingUVs_Layers : MonoBehaviour
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textureName;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1E63D98", Offset = "0x1E63D98", VA = "0x1E63D98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1E63EF4", Offset = "0x1E63EF4", VA = "0x1E63EF4")]
	public ScrollingUVs_Layers()
	{
	}
}
[Token(Token = "0x200001B")]
public class Eraser : WandComponent
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer r;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xAC3318", Offset = "0xAC3318", VA = "0xAC3318")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xAC3370", Offset = "0xAC3370", VA = "0xAC3370")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xAC3644", Offset = "0xAC3644", VA = "0xAC3644")]
	public Eraser()
	{
	}
}
[Token(Token = "0x200001C")]
public class LevelEditor : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform levelRoot;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action WasSaved;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRMenu menu;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform loadLevelMenu;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelEditorMenuItem loadLevelTemplate;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Pieces piecesStore;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform keyboard;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text levelName;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform editorCamera;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform levelPrefab;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LevelEditor instance;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<LevelEditorMenuItem> levelMenuButtons;

	[Token(Token = "0x17000018")]
	public static Transform LevelRoot
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0x1E2C76C", Offset = "0x1E2C76C", VA = "0x1E2C76C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1E2C6A0", Offset = "0x1E2C6A0", VA = "0x1E2C6A0")]
	public static LevelEditor GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1E2C884", Offset = "0x1E2C884", VA = "0x1E2C884")]
	public static void Preview()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1E2C928", Offset = "0x1E2C928", VA = "0x1E2C928")]
	public static void Save(string name)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1E2CCE4", Offset = "0x1E2CCE4", VA = "0x1E2CCE4")]
	public static void ToggleLoadLevelMenu()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1E2D4C8", Offset = "0x1E2D4C8", VA = "0x1E2D4C8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1E2D5DC", Offset = "0x1E2D5DC", VA = "0x1E2D5DC")]
	public static void LoadLevel(string level)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1E2D75C", Offset = "0x1E2D75C", VA = "0x1E2D75C")]
	public static void LoadLevelWithPiecesStore(string level, Pieces piecesStore, [Optional] Transform parentGO)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1E2E0A0", Offset = "0x1E2E0A0", VA = "0x1E2E0A0")]
	public static void ToggleKeyboard()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1E2E1DC", Offset = "0x1E2E1DC", VA = "0x1E2E1DC")]
	public static void KeyboardType(string key)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1E2DE40", Offset = "0x1E2DE40", VA = "0x1E2DE40")]
	private static GameObject FindPiece(string name, Pieces piecesStore)
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1E2DF48", Offset = "0x1E2DF48", VA = "0x1E2DF48")]
	private static Vector3 GetVector3(XElement element)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1E2CB28", Offset = "0x1E2CB28", VA = "0x1E2CB28")]
	private static XElement SerializeGameObject(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1E2E350", Offset = "0x1E2E350", VA = "0x1E2E350")]
	private static XElement SerializeVector3(string name, Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1E2E4E0", Offset = "0x1E2E4E0", VA = "0x1E2E4E0")]
	public LevelEditor()
	{
	}
}
[Token(Token = "0x200001D")]
public class LevelEditorBrush : WandComponent
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer savedIndicator;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InputField nameInputField;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentPiece;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentGroup;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject piecePrefab;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float cooldown;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1E2E4E8", Offset = "0x1E2E4E8", VA = "0x1E2E4E8", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1E2E510", Offset = "0x1E2E510", VA = "0x1E2E510")]
	private void UpdatePiece()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1E2E7FC", Offset = "0x1E2E7FC", VA = "0x1E2E7FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1E2E898", Offset = "0x1E2E898", VA = "0x1E2E898")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1E2E934", Offset = "0x1E2E934", VA = "0x1E2E934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1E2F1F0", Offset = "0x1E2F1F0", VA = "0x1E2F1F0")]
	public LevelEditorBrush()
	{
	}
}
[Token(Token = "0x200001E")]
public class LevelEditorMenuInput : VRMenuInput
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VrButton toggleMenu;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public VRMenu vrMenu;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool menuShowing;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1E2F1F8", Offset = "0x1E2F1F8", VA = "0x1E2F1F8")]
	private void ToggleMenu()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1E2F3B0", Offset = "0x1E2F3B0", VA = "0x1E2F3B0", Slot = "26")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1E2F408", Offset = "0x1E2F408", VA = "0x1E2F408")]
	public LevelEditorMenuInput()
	{
	}
}
[Token(Token = "0x200001F")]
public class LevelEditorMenuItem : VRMenuItem
{
	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1E2F410", Offset = "0x1E2F410", VA = "0x1E2F410")]
	public LevelEditorMenuItem()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2B07C", Offset = "0xA2B07C")]
public class Pieces : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000021")]
	public class PieceGroup
	{
		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] pieces;

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x1E99E2C", Offset = "0x1E99E2C", VA = "0x1E99E2C")]
		public PieceGroup()
		{
		}
	}

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PieceGroup[] pieces;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1E99E24", Offset = "0x1E99E24", VA = "0x1E99E24")]
	public Pieces()
	{
	}
}
[Token(Token = "0x2000022")]
public class Snap : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform follow;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 snap;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1E76D30", Offset = "0x1E76D30", VA = "0x1E76D30")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1E76FE0", Offset = "0x1E76FE0", VA = "0x1E76FE0")]
	public Snap()
	{
	}
}
[Token(Token = "0x2000023")]
[ExecuteInEditMode]
public class GaussianBlur : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int radius;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA312AC", Offset = "0xA312AC")]
	public float sigma;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _lastLength;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _lastSigma;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xBA66D4", Offset = "0xBA66D4", VA = "0xBA66D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xBA6744", Offset = "0xBA6744", VA = "0xBA6744")]
	private void Update()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xBA677C", Offset = "0xBA677C", VA = "0xBA677C")]
	private void RecalculateKernel()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xBA6DC0", Offset = "0xBA6DC0", VA = "0xBA6DC0")]
	public GaussianBlur()
	{
	}
}
[Token(Token = "0x2000024")]
public class RavenFlyAnimation : MonoBehaviour
{
	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1EB1E64", Offset = "0x1EB1E64", VA = "0x1EB1E64")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1EB1E68", Offset = "0x1EB1E68", VA = "0x1EB1E68")]
	public RavenFlyAnimation()
	{
	}
}
[Token(Token = "0x2000025")]
public class RichPresenceSample : MonoBehaviour
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DeeplinkMessageOverride;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsJoinable;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool IsIdle;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint CurrentCapacity;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint MaxCapacity;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DateTime StartTime;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DateTime EndTime;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RichPresenceExtraContext ExtraContext;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text InVRConsole;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text DestinationsConsole;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> DestinationAPINames;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ulong LoggedInUserID;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int DestinationIndex;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool OnlyPushUpOnce;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1EB444C", Offset = "0x1EB444C", VA = "0x1EB444C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1EB45E8", Offset = "0x1EB45E8", VA = "0x1EB45E8")]
	private void SetPresence()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1EB48B0", Offset = "0x1EB48B0", VA = "0x1EB48B0")]
	private void ClearPresence()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1EB4960", Offset = "0x1EB4960", VA = "0x1EB4960")]
	private string GetAppLaunchDetails()
	{
		return null;
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1EB4DEC", Offset = "0x1EB4DEC", VA = "0x1EB4DEC")]
	private void OnLaunchIntentChangeNotif(Message<string> message)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1EB4EAC", Offset = "0x1EB4EAC", VA = "0x1EB4EAC")]
	private void OnGetDestinations(Message<DestinationList> message)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1EB5318", Offset = "0x1EB5318", VA = "0x1EB5318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1EB53F0", Offset = "0x1EB53F0", VA = "0x1EB53F0")]
	private void ScrollThroughDestinations()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1EB5198", Offset = "0x1EB5198", VA = "0x1EB5198")]
	private void UpdateDestinationsConsole()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1EB551C", Offset = "0x1EB551C", VA = "0x1EB551C")]
	private void OnLoggedInUser(Message<User> message)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1EB4530", Offset = "0x1EB4530", VA = "0x1EB4530")]
	private void UpdateConsole(string value)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1EB53D8", Offset = "0x1EB53D8", VA = "0x1EB53D8")]
	private bool PressAButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1EB53E4", Offset = "0x1EB53E4", VA = "0x1EB53E4")]
	private bool PressBButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1EB5504", Offset = "0x1EB5504", VA = "0x1EB5504")]
	private bool PressUp()
	{
		return default(bool);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1EB5510", Offset = "0x1EB5510", VA = "0x1EB5510")]
	private bool PressDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1EB55F8", Offset = "0x1EB55F8", VA = "0x1EB55F8")]
	public RichPresenceSample()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1EB56CC", Offset = "0x1EB56CC", VA = "0x1EB56CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38E28", Offset = "0xA38E28")]
	private void <Start>b__12_0(Message<PlatformInitialize> message)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1EB58AC", Offset = "0x1EB58AC", VA = "0x1EB58AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38E38", Offset = "0xA38E38")]
	private void <SetPresence>b__13_0(Message message)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1EB59BC", Offset = "0x1EB59BC", VA = "0x1EB59BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38E48", Offset = "0xA38E48")]
	private void <SetPresence>b__13_1(Message<User> message2)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1EB5CB8", Offset = "0x1EB5CB8", VA = "0x1EB5CB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38E58", Offset = "0xA38E58")]
	private void <ClearPresence>b__14_0(Message message)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1EB5DC8", Offset = "0x1EB5DC8", VA = "0x1EB5DC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38E68", Offset = "0xA38E68")]
	private void <ClearPresence>b__14_1(Message<User> message2)
	{
	}
}
[Token(Token = "0x2000026")]
public class BufferedAudioStream
{
	[Token(Token = "0x400006D")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x4000071")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x4000072")]
	private const int sampleRate = 48000;

	[Token(Token = "0x4000073")]
	private const int bufferSize = 12000;

	[Token(Token = "0x4000074")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1E47B8C", Offset = "0x1E47B8C", VA = "0x1E47B8C")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1E47CC4", Offset = "0x1E47CC4", VA = "0x1E47CC4")]
	public void Update()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1E47C60", Offset = "0x1E47C60", VA = "0x1E47C60")]
	private void Stop()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1E47EC8", Offset = "0x1E47EC8", VA = "0x1E47EC8")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B0EC", Offset = "0xA2B0EC")]
public class ActionLever : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minPullRotation;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxPullRotation;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<ActionLever> WasPulled;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool pullTriggered;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB842A8", Offset = "0xB842A8", VA = "0xB842A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB84358", Offset = "0xB84358", VA = "0xB84358")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB84420", Offset = "0xB84420", VA = "0xB84420")]
	public ActionLever()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB84434", Offset = "0xB84434", VA = "0xB84434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38E78", Offset = "0xA38E78")]
	private void <Start>b__5_0(SteamVR_GrabbableObject <p0>)
	{
	}
}
[Token(Token = "0x2000028")]
public class AnalogRotation : GamePadComponent
{
	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B150", Offset = "0xA2B150")]
	private sealed class <Init>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnalogRotation <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000B7")]
			[Address(RVA = "0xB8B0E8", Offset = "0xB8B0E8", VA = "0xB8B0E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B9")]
			[Address(RVA = "0xB8B158", Offset = "0xB8B158", VA = "0xB8B158", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xB8AB00", Offset = "0xB8AB00", VA = "0xB8AB00")]
		[DebuggerHidden]
		public <Init>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xB8B004", Offset = "0xB8B004", VA = "0xB8B004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xB8B008", Offset = "0xB8B008", VA = "0xB8B008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0xB8B0F0", Offset = "0xB8B0F0", VA = "0xB8B0F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rotationSpeed;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isReset;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera mainCamera;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool initialized;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB8AA54", Offset = "0xB8AA54", VA = "0xB8AA54", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB8AA8C", Offset = "0xB8AA8C", VA = "0xB8AA8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA38E88", Offset = "0xA38E88")]
	private IEnumerator Init()
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB8AB2C", Offset = "0xB8AB2C", VA = "0xB8AB2C", Slot = "11")]
	public override void AcquireDevice()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB8AC90", Offset = "0xB8AC90", VA = "0xB8AC90", Slot = "10")]
	public override OddRavenVrPriorityOrder GetPriorityOrder()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB8AD10", Offset = "0xB8AD10", VA = "0xB8AD10", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB8AFEC", Offset = "0xB8AFEC", VA = "0xB8AFEC")]
	public AnalogRotation()
	{
	}
}
[Token(Token = "0x200002A")]
public class BinaryFile : KeyValueFile
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentPosition;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB9C094", Offset = "0xB9C094", VA = "0xB9C094")]
	public BinaryFile(string path)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB9C138", Offset = "0xB9C138", VA = "0xB9C138")]
	private void ReadFile(string path)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB9C27C", Offset = "0xB9C27C", VA = "0xB9C27C", Slot = "7")]
	protected override void Save(string path)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB9C3C0", Offset = "0xB9C3C0", VA = "0xB9C3C0", Slot = "12")]
	protected virtual void ReadFromStream(Stream stream)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB9C95C", Offset = "0xB9C95C", VA = "0xB9C95C", Slot = "13")]
	protected virtual void WriteToStream(Stream stream)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xB9D180", Offset = "0xB9D180", VA = "0xB9D180")]
	private int GetEncryptionKey()
	{
		return default(int);
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xB9CFF4", Offset = "0xB9CFF4", VA = "0xB9CFF4")]
	private byte[] Encrypt(string s)
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xB9C804", Offset = "0xB9C804", VA = "0xB9C804")]
	private string Decrypt(byte[] s)
	{
		return null;
	}
}
[Token(Token = "0x200002B")]
public class CircleBuffer<T>
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T[] buffer;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int currentPos;

	[Token(Token = "0x60000C2")]
	public CircleBuffer(int size)
	{
	}

	[Token(Token = "0x60000C3")]
	public void Add(T value)
	{
	}

	[Token(Token = "0x60000C4")]
	public T[] ToArray()
	{
		return null;
	}
}
[Token(Token = "0x200002C")]
public class DigitalRotation : GamePadComponent
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float angleSteps;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isReset;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xAB6C3C", Offset = "0xAB6C3C", VA = "0xAB6C3C", Slot = "11")]
	public override void AcquireDevice()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xAB6DA0", Offset = "0xAB6DA0", VA = "0xAB6DA0", Slot = "10")]
	public override OddRavenVrPriorityOrder GetPriorityOrder()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xAB6E20", Offset = "0xAB6E20", VA = "0xAB6E20", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xAB7058", Offset = "0xAB7058", VA = "0xAB7058")]
	public DigitalRotation()
	{
	}
}
[Token(Token = "0x200002D")]
public class IKButton : MonoBehaviour
{
	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B160", Offset = "0xA2B160")]
	private sealed class <PushIt>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKButton <>4__this;

		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <wait>5__2;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D0")]
			[Address(RVA = "0xBB5488", Offset = "0xBB5488", VA = "0xBB5488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0xBB54F8", Offset = "0xBB54F8", VA = "0xBB54F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xBB4FFC", Offset = "0xBB4FFC", VA = "0xBB4FFC")]
		[DebuggerHidden]
		public <PushIt>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xBB5038", Offset = "0xBB5038", VA = "0xBB5038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xBB503C", Offset = "0xBB503C", VA = "0xBB503C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xBB5490", Offset = "0xBB5490", VA = "0xBB5490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pushSpeed;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InteractionSystem interactionSystem;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initialPosition;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xBB4EC4", Offset = "0xBB4EC4", VA = "0xBB4EC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xBB4F08", Offset = "0xBB4F08", VA = "0xBB4F08")]
	private void Push()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xBB4F88", Offset = "0xBB4F88", VA = "0xBB4F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA38F3C", Offset = "0xA38F3C")]
	private IEnumerator PushIt()
	{
		return null;
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xBB5028", Offset = "0xBB5028", VA = "0xBB5028")]
	public IKButton()
	{
	}
}
[Token(Token = "0x200002F")]
public class IKDoor : MonoBehaviour
{
	[Token(Token = "0x2000030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B170", Offset = "0xA2B170")]
	private sealed class <BeforeOpen>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKDoor <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0xBB5EF8", Offset = "0xBB5EF8", VA = "0xBB5EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DB")]
			[Address(RVA = "0xBB5F68", Offset = "0xBB5F68", VA = "0xBB5F68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xBB57F4", Offset = "0xBB57F4", VA = "0xBB57F4")]
		[DebuggerHidden]
		public <BeforeOpen>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xBB58C8", Offset = "0xBB58C8", VA = "0xBB58C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xBB58CC", Offset = "0xBB58CC", VA = "0xBB58CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xBB5F00", Offset = "0xBB5F00", VA = "0xBB5F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B180", Offset = "0xA2B180")]
	private sealed class <Open>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKDoor <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DF")]
			[Address(RVA = "0xBB6064", Offset = "0xBB6064", VA = "0xBB6064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0xBB60D4", Offset = "0xBB60D4", VA = "0xBB60D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xBB5894", Offset = "0xBB5894", VA = "0xBB5894")]
		[DebuggerHidden]
		public <Open>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xBB5F70", Offset = "0xBB5F70", VA = "0xBB5F70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xBB5F74", Offset = "0xBB5F74", VA = "0xBB5F74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xBB606C", Offset = "0xBB606C", VA = "0xBB606C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform openPosition;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OddRavenCharacterInput input;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InteractionSystem interactionSystem;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xBB5780", Offset = "0xBB5780", VA = "0xBB5780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA38FF0", Offset = "0xA38FF0")]
	private IEnumerator BeforeOpen()
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xBB5820", Offset = "0xBB5820", VA = "0xBB5820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39054", Offset = "0xA39054")]
	private IEnumerator Open()
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xBB58C0", Offset = "0xBB58C0", VA = "0xBB58C0")]
	public IKDoor()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B190", Offset = "0xA2B190")]
public class IKLever : MonoBehaviour
{
	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B1F4", Offset = "0xA2B1F4")]
	private sealed class <PullIt>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKLever <>4__this;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <wait>5__2;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E9")]
			[Address(RVA = "0xBB67B0", Offset = "0xBB67B0", VA = "0xBB67B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000EB")]
			[Address(RVA = "0xBB6820", Offset = "0xBB6820", VA = "0xBB6820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xBB62B8", Offset = "0xBB62B8", VA = "0xBB62B8")]
		[DebuggerHidden]
		public <PullIt>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xBB62FC", Offset = "0xBB62FC", VA = "0xBB62FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xBB6300", Offset = "0xBB6300", VA = "0xBB6300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xBB67B8", Offset = "0xBB67B8", VA = "0xBB67B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pullRotation;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pullSpeed;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool returnToRestingPosition;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 restingPosition;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InteractionSystem interactionSystem;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool pulling;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xBB60DC", Offset = "0xBB60DC", VA = "0xBB60DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xBB6140", Offset = "0xBB6140", VA = "0xBB6140")]
	private void Pull()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xBB6244", Offset = "0xBB6244", VA = "0xBB6244")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39158", Offset = "0xA39158")]
	private IEnumerator PullIt()
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xBB62E4", Offset = "0xBB62E4", VA = "0xBB62E4")]
	public IKLever()
	{
	}
}
[Token(Token = "0x2000034")]
public class IniFile : KeyValueFile
{
	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xCDD6D4", Offset = "0xCDD6D4", VA = "0xCDD6D4")]
	public IniFile(string path)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xCDD820", Offset = "0xCDD820", VA = "0xCDD820")]
	public IniFile(string path, string[] contents)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xCDD8AC", Offset = "0xCDD8AC", VA = "0xCDD8AC", Slot = "12")]
	protected virtual string[] GetContents()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xCDD920", Offset = "0xCDD920", VA = "0xCDD920", Slot = "13")]
	protected virtual void Parse(string[] contents)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xCDDAF4", Offset = "0xCDDAF4", VA = "0xCDDAF4", Slot = "7")]
	protected override void Save(string path)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xCDDF00", Offset = "0xCDDF00", VA = "0xCDDF00", Slot = "14")]
	protected virtual void WriteToDisk(string s)
	{
	}
}
[Token(Token = "0x2000035")]
public abstract class KeyValueFile
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Dictionary<string, Dictionary<string, string>> data;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal string path;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA312C4", Offset = "0xA312C4")]
	private readonly bool <PathIsFile>k__BackingField;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool autoSaveOnClose;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly HashSet<Type> NumericTypes;

	[Token(Token = "0x17000023")]
	protected virtual bool PathIsFile
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xCE1B7C", Offset = "0xCE1B7C", VA = "0xCE1B7C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3920C", Offset = "0xA3920C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public string FilePath
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xCE1B84", Offset = "0xCE1B84", VA = "0xCE1B84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xCDD76C", Offset = "0xCDD76C", VA = "0xCDD76C")]
	public KeyValueFile(string path)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xCE1B8C", Offset = "0xCE1B8C", VA = "0xCE1B8C", Slot = "5")]
	protected virtual string GetFullPath(string path)
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xCE1C08", Offset = "0xCE1C08", VA = "0xCE1C08", Slot = "1")]
	~KeyValueFile()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xCE1C94", Offset = "0xCE1C94", VA = "0xCE1C94", Slot = "6")]
	public virtual void Save()
	{
	}

	[Token(Token = "0x60000F8")]
	protected abstract void Save(string path);

	[Token(Token = "0x60000F9")]
	public virtual T ReadValue<T>(string header, string key)
	{
		return (T)null;
	}

	[Token(Token = "0x60000FA")]
	public virtual T ReadValue<T>(string header, string key, object defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x60000FB")]
	public T ReadEnumValue<T>(string header, string key, object defaultValue) where T : struct, IConvertible
	{
		return (T)null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xCE1D0C", Offset = "0xCE1D0C", VA = "0xCE1D0C", Slot = "10")]
	protected virtual string GetData(string header, string key)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xCE1DA4", Offset = "0xCE1DA4", VA = "0xCE1DA4")]
	public Dictionary<string, string> GetAllValues(string header)
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xCE1E4C", Offset = "0xCE1E4C", VA = "0xCE1E4C")]
	public void WriteValue(string header, string key, object value)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xCE1E58", Offset = "0xCE1E58", VA = "0xCE1E58")]
	public void DeleteValue(string header, string key)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xCE1FC0", Offset = "0xCE1FC0", VA = "0xCE1FC0", Slot = "11")]
	protected virtual void SetValue(string header, string key, object value)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xCE21E8", Offset = "0xCE21E8", VA = "0xCE21E8")]
	private string ConvertToString(object o)
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xCE238C", Offset = "0xCE238C", VA = "0xCE238C")]
	public static bool IsNumeric(Type myType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xCE242C", Offset = "0xCE242C", VA = "0xCE242C")]
	public void Serialize(string header, object o)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xCE2544", Offset = "0xCE2544", VA = "0xCE2544")]
	public void Serialize(string header, IList<string> list)
	{
	}

	[Token(Token = "0x6000105")]
	public T Deserialize<T>(string header, [Optional] T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xCE27A4", Offset = "0xCE27A4", VA = "0xCE27A4")]
	public void ClearAll()
	{
	}
}
[Token(Token = "0x2000036")]
public class LayerAttribute : PropertyAttribute
{
	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1E24BE0", Offset = "0x1E24BE0", VA = "0x1E24BE0")]
	public LayerAttribute()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B204", Offset = "0xA2B204")]
public class OddRavenCamera : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA312D4", Offset = "0xA312D4")]
	public bool adaptiveQualityEnabled;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool debugAdaptiveQuality;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useFallbackVersion;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minimumRenderTargetScale;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maximumRenderTargetScale;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxRenderTargetDimension;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fillRatePercentStep;

	[NonSerialized]
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> adaptiveQualityRenderScales;

	[NonSerialized]
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int adaptiveQualityDefaultLevel;

	[NonSerialized]
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int adaptiveQualityNumLevels;

	[NonSerialized]
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int adaptiveQualityLevel;

	[NonSerialized]
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int lastQualityFrameCount;

	[NonSerialized]
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int adaptiveQualityFrameCountLastChanged;

	[NonSerialized]
	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool interleavedReprojectionEnabled;

	[NonSerialized]
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] adaptiveQualityRingBuffer;

	[NonSerialized]
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int adaptiveQualityRingBufferPos;

	[NonSerialized]
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject adaptiveQualityDebugQuad;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OddRavenCamera instance;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Camera cam;

	[NonSerialized]
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isDisplayOnDesktopCached;

	[NonSerialized]
	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isDisplayOnDesktop;

	[NonSerialized]
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int g_nNumFlushesThisFrame;

	[NonSerialized]
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_nFlushCounterFrameCount;

	[Token(Token = "0x17000025")]
	public static OddRavenCamera Instance
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x1E81FF0", Offset = "0x1E81FF0", VA = "0x1E81FF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x1E83E38", Offset = "0x1E83E38", VA = "0x1E83E38")]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Camera Camera
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x1E83E8C", Offset = "0x1E83E8C", VA = "0x1E83E8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1E83E94", Offset = "0x1E83E94", VA = "0x1E83E94")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1E83F3C", Offset = "0x1E83F3C", VA = "0x1E83F3C")]
	private void InitAdaptiveQuality()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1E844C8", Offset = "0x1E844C8", VA = "0x1E844C8")]
	private void UpdateAdaptiveQuality()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1E84D20", Offset = "0x1E84D20", VA = "0x1E84D20")]
	private bool IsDisplayOnDesktop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1E84DE0", Offset = "0x1E84DE0", VA = "0x1E84DE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1E84DE4", Offset = "0x1E84DE4", VA = "0x1E84DE4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1E84DE8", Offset = "0x1E84DE8", VA = "0x1E84DE8")]
	private void GLFlush()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1E84E4C", Offset = "0x1E84E4C", VA = "0x1E84E4C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1E85608", Offset = "0x1E85608", VA = "0x1E85608")]
	public OddRavenCamera()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B268", Offset = "0xA2B268")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B268", Offset = "0xA2B268")]
public class SimpleLever : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HingeJoint joint;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float zeroValue;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ORFmodStudioEventEmitter pullSound;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool grabbedViaNetwork;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 eulerAngles;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1E71648", Offset = "0x1E71648", VA = "0x1E71648")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1E71784", Offset = "0x1E71784", VA = "0x1E71784")]
	public float GetMax()
	{
		return default(float);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1E71898", Offset = "0x1E71898", VA = "0x1E71898")]
	public float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1E71968", Offset = "0x1E71968", VA = "0x1E71968")]
	private void Update()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1E71B8C", Offset = "0x1E71B8C", VA = "0x1E71B8C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1E71DA0", Offset = "0x1E71DA0", VA = "0x1E71DA0")]
	public SimpleLever()
	{
	}
}
[Token(Token = "0x2000039")]
public class SteamVR_GrabbableObject : MonoBehaviour
{
	[Token(Token = "0x200003A")]
	private enum CollisionCorrection
	{
		[Token(Token = "0x40000E4")]
		Idle,
		[Token(Token = "0x40000E5")]
		ShouldCorrect,
		[Token(Token = "0x40000E6")]
		CouldBeIdle,
		[Token(Token = "0x40000E7")]
		Correcting
	}

	[Serializable]
	[Token(Token = "0x200003B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B2F4", Offset = "0xA2B2F4")]
	private sealed class <>c
	{
		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__35_0;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Renderer, bool> <>9__36_0;

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x1EC51EC", Offset = "0x1EC51EC", VA = "0x1EC51EC")]
		public <>c()
		{
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0x1EC51F4", Offset = "0x1EC51F4", VA = "0x1EC51F4")]
		internal bool <Awake>b__35_0(Collider c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0x1EC5230", Offset = "0x1EC5230", VA = "0x1EC5230")]
		internal bool <Start>b__36_0(Renderer r)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ChildWhenGrabbed;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform originalParent;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<SteamVR_GrabbableObject> WillBeGrabbed;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<SteamVR_GrabbableObject> WillBeReleased;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color tintColor;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showOutlineWhenClose;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool inReach;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float outlineWidth;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minimumDistance;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ORFmodStudioEventEmitter grabSound;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ORFmodStudioEventEmitter releaseSound;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isReady;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool IsGrabbing;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public SteamVR_GrabbingController GrabbingHand;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer[] renderers;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rb;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform AttachPoint;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform GrabPoint;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider[] m_Colliders;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected float AttachedRotationMagic;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float AttachedPositionMagic;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool preserveSpeedWhenReleased;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3133C", Offset = "0xA3133C")]
	public bool alignToHandWhenGrabbed;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 positionOffset;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 rotationOffset;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MaterialPropertyBlock mb;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Color outlineColor;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float outlineBlinkSpeed;

	[Token(Token = "0x14000001")]
	public event Action<SteamVR_GrabbableObject> WasGrabbed
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x1EC321C", Offset = "0x1EC321C", VA = "0x1EC321C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3921C", Offset = "0xA3921C")]
		add
		{
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x1EC3308", Offset = "0x1EC3308", VA = "0x1EC3308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3922C", Offset = "0xA3922C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<SteamVR_GrabbableObject> WasReleased
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x1EC33F4", Offset = "0x1EC33F4", VA = "0x1EC33F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3923C", Offset = "0xA3923C")]
		add
		{
		}
		[Token(Token = "0x600011E")]
		[Address(RVA = "0x1EC34E0", Offset = "0x1EC34E0", VA = "0x1EC34E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3924C", Offset = "0xA3924C")]
		remove
		{
		}
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1EC35CC", Offset = "0x1EC35CC", VA = "0x1EC35CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1EC36F8", Offset = "0x1EC36F8", VA = "0x1EC36F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1EC3874", Offset = "0x1EC3874", VA = "0x1EC3874")]
	private void RestoreColors()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1EC39F8", Offset = "0x1EC39F8", VA = "0x1EC39F8")]
	public bool PrepareForGrab(GameObject controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1EC42D0", Offset = "0x1EC42D0", VA = "0x1EC42D0")]
	public bool PrepareForRelease(SteamVR_GrabbingController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1EC4468", Offset = "0x1EC4468", VA = "0x1EC4468")]
	public void OnEnter(SteamVR_GrabbingController controller)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1EC4498", Offset = "0x1EC4498", VA = "0x1EC4498")]
	public void OnExit(SteamVR_GrabbingController controller)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1EC44CC", Offset = "0x1EC44CC", VA = "0x1EC44CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1EC4774", Offset = "0x1EC4774", VA = "0x1EC4774")]
	public void OnGrab()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1EC4564", Offset = "0x1EC4564", VA = "0x1EC4564")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1EC4860", Offset = "0x1EC4860", VA = "0x1EC4860")]
	private void stabilize()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1EC4A64", Offset = "0x1EC4A64", VA = "0x1EC4A64")]
	public void ForceNotInReach()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1EC4A6C", Offset = "0x1EC4A6C", VA = "0x1EC4A6C")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1EC50AC", Offset = "0x1EC50AC", VA = "0x1EC50AC")]
	public SteamVR_GrabbableObject()
	{
	}
}
[Token(Token = "0x200003C")]
public abstract class SteamVRHand : WandComponent
{
	[Token(Token = "0x6000131")]
	internal abstract void GrabbableInReach(SteamVR_GrabbableObject o);

	[Token(Token = "0x6000132")]
	internal abstract void GrabbableOutOfReach(SteamVR_GrabbableObject o);

	[Token(Token = "0x6000133")]
	public abstract void Drop([Optional] WandControllerDevice device);

	[Token(Token = "0x6000134")]
	internal abstract void ClearHolding([Optional] WandControllerDevice device);

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1E7CCD8", Offset = "0x1E7CCD8", VA = "0x1E7CCD8")]
	protected SteamVRHand()
	{
	}
}
[Token(Token = "0x200003D")]
public class SteamVR_GrabbingController : MonoBehaviour
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVRHand forceHand;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool multiSelect;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SteamVR_GrabbableObject> inReach;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_GrabbableObject objectInReach;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1EC52D4", Offset = "0x1EC52D4", VA = "0x1EC52D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1EC538C", Offset = "0x1EC538C", VA = "0x1EC538C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1EC54AC", Offset = "0x1EC54AC", VA = "0x1EC54AC")]
	public void NotInReach(SteamVR_GrabbableObject o)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1EC55A8", Offset = "0x1EC55A8", VA = "0x1EC55A8")]
	public void TriggerHapticPulse(float strength, float duration)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1EC55F8", Offset = "0x1EC55F8", VA = "0x1EC55F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1EC5A1C", Offset = "0x1EC5A1C", VA = "0x1EC5A1C")]
	public void ClearInReach()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1EC5A7C", Offset = "0x1EC5A7C", VA = "0x1EC5A7C")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1EC5B54", Offset = "0x1EC5B54", VA = "0x1EC5B54")]
	public SteamVR_GrabbingController()
	{
	}
}
[Token(Token = "0x200003E")]
public class SteamVR_SimpleHand : SteamVRHand
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal SteamVR_GrabbableObject holding;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_GrabbableObject inReach;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator hand;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool addConstantForce;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ORFmodStudioEventEmitter handCloseSound;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ORFmodStudioEventEmitter handOpenSound;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SteamVR_GrabbableObject lastHeld;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform topMostParent;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool IsGrabbing;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<SteamVR_SimpleHand, SteamVR_GrabbableObject> DidGrab;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action<SteamVR_SimpleHand> DidDrop;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 scaleForces;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public VrButton GrabButton;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float lastTriggeredHapticTimer;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private SteamVR_GrabbableObject lastTriggeredHaptic;

	[Token(Token = "0x17000027")]
	public SteamVR_GrabbableObject Holding
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x1ED4234", Offset = "0x1ED4234", VA = "0x1ED4234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1ED423C", Offset = "0x1ED423C", VA = "0x1ED423C", Slot = "12")]
	public override void AcquireDevice(OddRavenVrPriorityOrder priorityOrder)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1ED4244", Offset = "0x1ED4244", VA = "0x1ED4244", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1ED4384", Offset = "0x1ED4384", VA = "0x1ED4384", Slot = "26")]
	internal override void GrabbableInReach(SteamVR_GrabbableObject o)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1ED4448", Offset = "0x1ED4448", VA = "0x1ED4448")]
	internal void HapticPulse(float strength, float duration)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1ED4498", Offset = "0x1ED4498", VA = "0x1ED4498", Slot = "27")]
	internal override void GrabbableOutOfReach(SteamVR_GrabbableObject o)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1ED4580", Offset = "0x1ED4580", VA = "0x1ED4580", Slot = "28")]
	public override void Drop([Optional] WandControllerDevice device)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1ED4640", Offset = "0x1ED4640", VA = "0x1ED4640", Slot = "29")]
	internal override void ClearHolding([Optional] WandControllerDevice device)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1ED4B3C", Offset = "0x1ED4B3C", VA = "0x1ED4B3C", Slot = "17")]
	public override void OnFixedUpdate()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1ED4FBC", Offset = "0x1ED4FBC", VA = "0x1ED4FBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1ED4FC0", Offset = "0x1ED4FC0", VA = "0x1ED4FC0")]
	public SteamVR_SimpleHand()
	{
	}
}
[Token(Token = "0x200003F")]
public class SteamFriendsTest : MonoBehaviour
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Nameplates;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PreviousButton;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject NextButton;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int FriendsPerPage;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRMenuItem CoopButton;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int page;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int friendAmount;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFriends;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int onlineAmount;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasStarted;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool friendInvited;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool friendConnected;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1E7AC10", Offset = "0x1E7AC10", VA = "0x1E7AC10")]
	public SteamFriendsTest()
	{
	}
}
[Token(Token = "0x2000040")]
public class SteamInvite : MonoBehaviour
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string myFriendName;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SteamFriendsTest remotePlayTogether;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRMenuItem vRMenu;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine waitingForConnection;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI NamePlate;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image Background;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color SteamBlue;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color WhiteText;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color ogText;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color ogBackground;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject CancelButton;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1E7AC20", Offset = "0x1E7AC20", VA = "0x1E7AC20")]
	public SteamInvite()
	{
	}
}
[Token(Token = "0x2000041")]
public class VRCheckbox : VRMenuItem
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string valueChangedMethod;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI checkmarkText;

	[NonSerialized]
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string checkbox;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private bool _isChecked;

	[Token(Token = "0x17000028")]
	public bool isChecked
	{
		[Token(Token = "0x600014B")]
		[Address(RVA = "0x1DF8C90", Offset = "0x1DF8C90", VA = "0x1DF8C90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x1DF8C98", Offset = "0x1DF8C98", VA = "0x1DF8C98")]
		set
		{
		}
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1DF8DF8", Offset = "0x1DF8DF8", VA = "0x1DF8DF8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1DF9150", Offset = "0x1DF9150", VA = "0x1DF9150", Slot = "8")]
	protected override void Click()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1DF9290", Offset = "0x1DF9290", VA = "0x1DF9290", Slot = "5")]
	protected override void SetColor(Color textColor, Color backgroundColor)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1DF8CA4", Offset = "0x1DF8CA4", VA = "0x1DF8CA4")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1DF9588", Offset = "0x1DF9588", VA = "0x1DF9588")]
	public VRCheckbox()
	{
	}
}
[Token(Token = "0x2000042")]
public class VRDropDown : VRMenuItem
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string valueChangedMethod;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string[] items;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string nextString;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string prevString;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private int _value;

	[Token(Token = "0x17000029")]
	public int value
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x1DF9648", Offset = "0x1DF9648", VA = "0x1DF9648")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x1DF9650", Offset = "0x1DF9650", VA = "0x1DF9650")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public string selectedItemText
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x1DF977C", Offset = "0x1DF977C", VA = "0x1DF977C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x1DF9830", Offset = "0x1DF9830", VA = "0x1DF9830")]
		set
		{
		}
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1DF98DC", Offset = "0x1DF98DC", VA = "0x1DF98DC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1DF9BCC", Offset = "0x1DF9BCC", VA = "0x1DF9BCC")]
	private void ChangeValue(string text)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1DF9658", Offset = "0x1DF9658", VA = "0x1DF9658")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1DF9D28", Offset = "0x1DF9D28", VA = "0x1DF9D28")]
	public VRDropDown()
	{
	}
}
[Token(Token = "0x2000043")]
public class VRMenu : WandComponent
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31394", Offset = "0xA31394")]
	public VRMenuInput[] menuInputs;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA313CC", Offset = "0xA313CC")]
	public VrButton toggleButton;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool showOnStart;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distance;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Canvas canvas;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CameraController cc;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EventSystem eventSystem;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera mainCamera;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool firstTime;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1DF9E08", Offset = "0x1DF9E08", VA = "0x1DF9E08")]
	public void Show()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1DFA44C", Offset = "0x1DFA44C", VA = "0x1DFA44C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1DFA634", Offset = "0x1DFA634", VA = "0x1DFA634", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1DFA7E4", Offset = "0x1DFA7E4", VA = "0x1DFA7E4", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1DFA9E4", Offset = "0x1DFA9E4", VA = "0x1DFA9E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1DFAB48", Offset = "0x1DFAB48", VA = "0x1DFAB48")]
	public VRMenu()
	{
	}
}
[Token(Token = "0x2000044")]
public class VRMenuInput : WandComponent
{
	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B304", Offset = "0xA2B304")]
	private sealed class <AttachHands>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMenuInput <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016B")]
			[Address(RVA = "0x1DFB740", Offset = "0x1DFB740", VA = "0x1DFB740", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016D")]
			[Address(RVA = "0x1DFB7B0", Offset = "0x1DFB7B0", VA = "0x1DFB7B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x1DFACCC", Offset = "0x1DFACCC", VA = "0x1DFACCC")]
		[DebuggerHidden]
		public <AttachHands>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x1DFB384", Offset = "0x1DFB384", VA = "0x1DFB384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x1DFB388", Offset = "0x1DFB388", VA = "0x1DFB388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x1DFB748", Offset = "0x1DFB748", VA = "0x1DFB748", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public VrButton selectItem;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask hitMask;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image cursor;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image altCursor;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool autoAttachToHand;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hitInfo;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VRMenuItem currentMenuItem;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private HashSet<VRMenu> usedBy;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1DFAB6C", Offset = "0x1DFAB6C", VA = "0x1DFAB6C", Slot = "12")]
	public override void AcquireDevice(OddRavenVrPriorityOrder priorityOrder)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1DFA37C", Offset = "0x1DFA37C", VA = "0x1DFA37C")]
	public void SetUsedBy(VRMenu menu, bool inUse)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1DFAC78", Offset = "0x1DFAC78", VA = "0x1DFAC78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1DFAC04", Offset = "0x1DFAC04", VA = "0x1DFAC04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3925C", Offset = "0xA3925C")]
	private IEnumerator AttachHands()
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1DFACF8", Offset = "0x1DFACF8", VA = "0x1DFACF8", Slot = "26")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1DFB234", Offset = "0x1DFB234", VA = "0x1DFB234")]
	private void DeactivateLastMenuItem()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1DFB2D8", Offset = "0x1DFB2D8", VA = "0x1DFB2D8")]
	public VRMenuInput()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1DFB348", Offset = "0x1DFB348", VA = "0x1DFB348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA392C0", Offset = "0xA392C0")]
	private bool <AttachHands>b__11_0(SteamVRHand h)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000046")]
public class VRMenuItem : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color textColor;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color backgroundColor;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color selectedTextColor;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color selectedBackgroundColor;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color disabledTextColor;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color disabledBackgroundColor;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image background;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text text;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI textMesh;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string clickMethod;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI parameterText;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public VRTextbox parameterTextbox;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string parameterString;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool isToggle;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string radioGroup;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool on;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	[SerializeField]
	private bool _disabled;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject menuController;

	[Token(Token = "0x1700002D")]
	public bool isOn
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x1DFB7B8", Offset = "0x1DFB7B8", VA = "0x1DFB7B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public bool isDisabled
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x1DF9288", Offset = "0x1DF9288", VA = "0x1DF9288")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x1DFB7C0", Offset = "0x1DFB7C0", VA = "0x1DFB7C0")]
		set
		{
		}
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1DF8F18", Offset = "0x1DF8F18", VA = "0x1DF8F18", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1DF93BC", Offset = "0x1DF93BC", VA = "0x1DF93BC", Slot = "5")]
	protected virtual void SetColor(Color textColor, Color backgroundColor)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1DFB7CC", Offset = "0x1DFB7CC", VA = "0x1DFB7CC")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1DFB808", Offset = "0x1DFB808", VA = "0x1DFB808", Slot = "6")]
	protected virtual void Over()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1DFB830", Offset = "0x1DFB830", VA = "0x1DFB830", Slot = "7")]
	protected virtual void Out()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1DFB8A8", Offset = "0x1DFB8A8", VA = "0x1DFB8A8", Slot = "8")]
	protected virtual void Click()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1DFBAF0", Offset = "0x1DFBAF0", VA = "0x1DFBAF0")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1DFBB2C", Offset = "0x1DFBB2C", VA = "0x1DFBB2C")]
	public void ToggleOn()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x1DFBB1C", Offset = "0x1DFBB1C", VA = "0x1DFBB1C")]
	public void ToggleOff()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1DFBB48", Offset = "0x1DFBB48", VA = "0x1DFBB48")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1DFBB54", Offset = "0x1DFBB54", VA = "0x1DFBB54")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1DFBB60", Offset = "0x1DFBB60", VA = "0x1DFBB60")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x1DF95E4", Offset = "0x1DF95E4", VA = "0x1DF95E4")]
	public VRMenuItem()
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B314", Offset = "0xA2B314")]
public class VRTextbox : VRMenuItem
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float blinkTime;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool allowKeyboard;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string _text;

	[Token(Token = "0x1700002F")]
	public string Text
	{
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x1DFBB40", Offset = "0x1DFBB40", VA = "0x1DFBB40")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x1DFE760", Offset = "0x1DFE760", VA = "0x1DFE760")]
		set
		{
		}
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1DFE880", Offset = "0x1DFE880", VA = "0x1DFE880")]
	private void KeyboardType(string key)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1DFE988", Offset = "0x1DFE988", VA = "0x1DFE988")]
	private void ToggleCursor()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1DFEB34", Offset = "0x1DFEB34", VA = "0x1DFEB34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1DFEC7C", Offset = "0x1DFEC7C", VA = "0x1DFEC7C")]
	public VRTextbox()
	{
	}
}
[Token(Token = "0x2000048")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B378", Offset = "0xA2B378")]
public class OddRavenCharacterController : MonoBehaviour, ICanBeAffectedBySpeed
{
	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B3DC", Offset = "0xA2B3DC")]
	private sealed class <OnTriggerEnter>d__131 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider coll;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OddRavenCharacterController <>4__this;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SteamVR_SimpleHand <hand>5__2;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C5")]
			[Address(RVA = "0x1E8BF24", Offset = "0x1E8BF24", VA = "0x1E8BF24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C7")]
			[Address(RVA = "0x1E8BF94", Offset = "0x1E8BF94", VA = "0x1E8BF94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x1E8891C", Offset = "0x1E8891C", VA = "0x1E8891C")]
		[DebuggerHidden]
		public <OnTriggerEnter>d__131(int <>1__state)
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x1E8B888", Offset = "0x1E8B888", VA = "0x1E8B888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x1E8B88C", Offset = "0x1E8B88C", VA = "0x1E8B88C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x1E8BF2C", Offset = "0x1E8BF2C", VA = "0x1E8BF2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200004A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B3EC", Offset = "0xA2B3EC")]
	private sealed class <>c
	{
		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, bool> <>9__139_0;

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x1E8B364", Offset = "0x1E8B364", VA = "0x1E8B364")]
		public <>c()
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x1E8B36C", Offset = "0x1E8B36C", VA = "0x1E8B36C")]
		internal bool <UpdateAirbornMovement>b__139_0(float f)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200004B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B3FC", Offset = "0xA2B3FC")]
	private sealed class <WalkTo>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OddRavenCharacterController <>4__this;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetPosition;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float speed;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <direction>5__2;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <time>5__3;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForFixedUpdate <wait>5__5;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001CE")]
			[Address(RVA = "0x1E8C4E0", Offset = "0x1E8C4E0", VA = "0x1E8C4E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D0")]
			[Address(RVA = "0x1E8C550", Offset = "0x1E8C550", VA = "0x1E8C550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x1E89EE4", Offset = "0x1E89EE4", VA = "0x1E89EE4")]
		[DebuggerHidden]
		public <WalkTo>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x1E8C1A4", Offset = "0x1E8C1A4", VA = "0x1E8C1A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x1E8C1A8", Offset = "0x1E8C1A8", VA = "0x1E8C1A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x1E8C4E8", Offset = "0x1E8C4E8", VA = "0x1E8C4E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B40C", Offset = "0xA2B40C")]
	private sealed class <SetOnGround>d__152 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OddRavenCharacterController <>4__this;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float velocity;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D4")]
			[Address(RVA = "0x1E8C12C", Offset = "0x1E8C12C", VA = "0x1E8C12C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D6")]
			[Address(RVA = "0x1E8C19C", Offset = "0x1E8C19C", VA = "0x1E8C19C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x1E8A078", Offset = "0x1E8A078", VA = "0x1E8A078")]
		[DebuggerHidden]
		public <SetOnGround>d__152(int <>1__state)
		{
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x1E8BF9C", Offset = "0x1E8BF9C", VA = "0x1E8BF9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x1E8BFA0", Offset = "0x1E8BFA0", VA = "0x1E8BFA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x1E8C134", Offset = "0x1E8C134", VA = "0x1E8C134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200004D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B41C", Offset = "0xA2B41C")]
	private sealed class <LookAtTarget>d__177 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool force;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OddRavenCharacterController <>4__this;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform target;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CarlyFacialExpressions.Expression expression;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <time>5__2;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DA")]
			[Address(RVA = "0x1E8B810", Offset = "0x1E8B810", VA = "0x1E8B810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DC")]
			[Address(RVA = "0x1E8B880", Offset = "0x1E8B880", VA = "0x1E8B880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x1E8AFEC", Offset = "0x1E8AFEC", VA = "0x1E8AFEC")]
		[DebuggerHidden]
		public <LookAtTarget>d__177(int <>1__state)
		{
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1E8B3E8", Offset = "0x1E8B3E8", VA = "0x1E8B3E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1E8B3EC", Offset = "0x1E8B3EC", VA = "0x1E8B3EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x1E8B818", Offset = "0x1E8B818", VA = "0x1E8B818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31414", Offset = "0xA31414")]
	public float MaxWalkingSpeed;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3144C", Offset = "0xA3144C")]
	public float WalkAccelerationFactor;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicMaterial OnGroundPhysicMaterial;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CarlyFacialExpressions.Expression walkingExpression;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31464", Offset = "0xA31464")]
	public float MaxRunningSpeed;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3149C", Offset = "0xA3149C")]
	public float RunAccelerationFactor;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CarlyFacialExpressions.Expression runningExpression;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA314B4", Offset = "0xA314B4")]
	public float MaxAirbornSpeed;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float MaxAirborneVelocity;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float FallThreshold;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string fallBreaksByTag;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool wasBreaked;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA314EC", Offset = "0xA314EC")]
	public float AirbornAccelerationFactor;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float GravityMultiplier;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PhysicMaterial AirbornePhysicMaterial;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool CanHang;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool AutoLedgeGrab;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31504", Offset = "0xA31504")]
	public float RotationSpeed;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3153C", Offset = "0xA3153C")]
	public float JumpSpeed;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float MaxJumpTimer;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float JumpBeforeLandingTolerance;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float JumpAfterFallingTolerance;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float ledgePushForce;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31574", Offset = "0xA31574")]
	public float GlideFallSpeed;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float MaxGlideTimer;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float MaxGlidingMovementSpeed;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA315AC", Offset = "0xA315AC")]
	public float GlidingAcceleration;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA315C4", Offset = "0xA315C4")]
	public Vector3 GroundRaycastPivotOffset;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float GroundRayCastLength;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public LayerMask GroundHitLayerMask;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool useSphereCast;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float sphereCastRadius;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float landingAfterJumpSphereCastRadius;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float maxWalkingAngle;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float cosMaxAngle;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA315FC", Offset = "0xA315FC")]
	public float grabLimit;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float ThrowForce;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Projector ShadowProjector;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool shadowProjectorAlwaysOn;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ParticleSystem fistBumpEffect;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private CarlyFacialExpressions facialExpression;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31634", Offset = "0xA31634")]
	public Transform cameraFocusPoint;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool followWithCamera;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Vector3 groundPivotPoint;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3 airPivotPoint;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float maxCameraDistance;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float cameraSpeed;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 currentPivotPoint;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 lastPivotPoint;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3166C", Offset = "0xA3166C")]
	public ORFmodStudioEventEmitter jumpSound;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public ORFmodStudioEventEmitter grabSound;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ORFmodStudioEventEmitter climbSound;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ORFmodStudioEventEmitter riseSound;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public ORFmodStudioEventEmitter fallingSound;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public ORFmodStudioEventEmitter hitGround;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public ORFmodStudioEventEmitter pointingSound;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public ORFmodStudioEventEmitter fistbumpSound;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public ORFmodStudioEventEmitter fistbumpSoundEffect;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private AimController aimController;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float _lookAtWeight;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private LookAtIK lookAtIK;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool _forceKinematic;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected Rigidbody RigidBody;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected Vector3 MovementVector;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	protected Vector3 TargetMovementSpeed;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA316A4", Offset = "0xA316A4")]
	private Vector3 <CurrentMovementSpeed>k__BackingField;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	protected Vector3 VelocityAtJump;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	protected OddRavenCharacterMovementType CurrentMovementType;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private OddRavenCharacterState _currentState;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private OddRavenCharacterState _oldState;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Action<OddRavenCharacterState> StateChanged;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected float CurrentJumpTimer;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	protected float CurrentGlideTimer;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	protected bool HasLanded;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	protected float JumpButtonReleased;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected Animator m_Animator;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected float OriginalGroundRaycastLength;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected AffectPlayerVelocity AddSpeedFromObject;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected Collider[] Colliders;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	protected float HangCooldown;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	protected GameObject hangAttachPoint;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	protected float ClimbCooldown;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	protected bool wieldingPickaxe;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x245")]
	private bool isInBlockingStateAnimation;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private ActionActivator closeToAction;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private InteractionSystem InteractionSystem;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool IsPointing;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	private bool PlaySoundOnce;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25A")]
	private bool PlayPointSoundOnce;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private GameObject PointingIndicator;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private CameraController CC;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Light Indicator;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private OddRavenConstantForce force;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private OddRavenCharacterInput input;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private CarlyExpressions expressions;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private RaycastHit pointHit;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private GameObject lastCollidingGameObject;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private RaycastHit testHit;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	private Vector2 forward;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Vector3 center;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private CircleBuffer<float> averageYSpeed;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Vector3 risePosition;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private bool died;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private Vector3 actualMovementSpeed;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private Vector3 lastPosition;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private WaitForFixedUpdate waitForFixedUpdate;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private RaycastHit groundcastHit;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	[HideInInspector]
	public bool isFistBumping;

	[NonSerialized]
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36D")]
	public bool isForcedFistBump;

	[NonSerialized]
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36E")]
	public bool lastFistBumpHadSound;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36F")]
	public byte fistBumpId;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private float timeSinceFall;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private Transform currentTarget;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	internal bool disableManualMovement;

	[Token(Token = "0x17000030")]
	internal bool forceKinematic
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x1E856CC", Offset = "0x1E856CC", VA = "0x1E856CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x1E856D4", Offset = "0x1E856D4", VA = "0x1E856D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public Vector3 CurrentMovementSpeed
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1E85710", Offset = "0x1E85710", VA = "0x1E85710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39320", Offset = "0xA39320")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1E85720", Offset = "0x1E85720", VA = "0x1E85720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39330", Offset = "0xA39330")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000032")]
	[HideInInspector]
	public OddRavenCharacterState CurrentState
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x1E85730", Offset = "0x1E85730", VA = "0x1E85730")]
		get
		{
			return default(OddRavenCharacterState);
		}
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x1E85738", Offset = "0x1E85738", VA = "0x1E85738")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public OddRavenCharacterState State
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x1E85BF0", Offset = "0x1E85BF0", VA = "0x1E85BF0")]
		get
		{
			return default(OddRavenCharacterState);
		}
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1E857C0", Offset = "0x1E857C0", VA = "0x1E857C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1E85B58", Offset = "0x1E85B58", VA = "0x1E85B58")]
	private void DisableIK(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1E85BA4", Offset = "0x1E85BA4", VA = "0x1E85BA4")]
	private void EnableIK(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1E85BF8", Offset = "0x1E85BF8", VA = "0x1E85BF8", Slot = "5")]
	public virtual void OnStart()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1E85BFC", Offset = "0x1E85BFC", VA = "0x1E85BFC")]
	public void WieldPickaxe()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1E85C08", Offset = "0x1E85C08", VA = "0x1E85C08")]
	internal void EnterBlockingState()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1E85C64", Offset = "0x1E85C64", VA = "0x1E85C64")]
	internal void ExitBlockingState()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1E85CBC", Offset = "0x1E85CBC", VA = "0x1E85CBC")]
	public void SetAndRunAction(ActionActivator actionActivator)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1E85EC8", Offset = "0x1E85EC8", VA = "0x1E85EC8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1E8723C", Offset = "0x1E8723C", VA = "0x1E8723C")]
	public void StopAllMotions()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1E872E4", Offset = "0x1E872E4", VA = "0x1E872E4")]
	private void PlayFistbumpFX()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1E87654", Offset = "0x1E87654", VA = "0x1E87654")]
	public void SetCollision(bool collision)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1E87700", Offset = "0x1E87700", VA = "0x1E87700")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1E85CC4", Offset = "0x1E85CC4", VA = "0x1E85CC4")]
	private void ForceActivate()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1E87940", Offset = "0x1E87940", VA = "0x1E87940")]
	public void Point()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1E87E58", Offset = "0x1E87E58", VA = "0x1E87E58")]
	public void StopPoint()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1E88010", Offset = "0x1E88010", VA = "0x1E88010")]
	public void SetNetworkPointAt(Vector3 pointPos)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1E881C4", Offset = "0x1E881C4", VA = "0x1E881C4")]
	public void StopNetworkPoint()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1E882F0", Offset = "0x1E882F0", VA = "0x1E882F0", Slot = "4")]
	public void SetAddSpeedFromObject(AffectPlayerVelocity apv)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1E88304", Offset = "0x1E88304", VA = "0x1E88304")]
	private void OnCollisionStay(Collision hit)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1E88430", Offset = "0x1E88430", VA = "0x1E88430")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1E887DC", Offset = "0x1E887DC", VA = "0x1E887DC")]
	private void OnCollisionExit(Collision hit)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1E88884", Offset = "0x1E88884", VA = "0x1E88884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39340", Offset = "0xA39340")]
	private IEnumerator OnTriggerEnter(Collider coll)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1E88948", Offset = "0x1E88948", VA = "0x1E88948")]
	private Vector2 GetForward()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1E889B8", Offset = "0x1E889B8", VA = "0x1E889B8")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1E865B0", Offset = "0x1E865B0", VA = "0x1E865B0")]
	private void UpdateCurrentMovementSpeed()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1E88A68", Offset = "0x1E88A68", VA = "0x1E88A68")]
	private void UpdateGroundMovement()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1E88CD8", Offset = "0x1E88CD8", VA = "0x1E88CD8")]
	private void UpdateAirbornMovement()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1E89A84", Offset = "0x1E89A84", VA = "0x1E89A84")]
	private Vector3 ClampVelocity(Vector3 velocity, float maxVelocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1E89B58", Offset = "0x1E89B58", VA = "0x1E89B58")]
	private void Died()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1E89B64", Offset = "0x1E89B64", VA = "0x1E89B64")]
	private void Respawn()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1E89CB8", Offset = "0x1E89CB8", VA = "0x1E89CB8")]
	private float GetSqrMagFromEdge(Vector3 vertex1, Vector3 vertex2, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1E868E4", Offset = "0x1E868E4", VA = "0x1E868E4")]
	private void MoveForward()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1E89E24", Offset = "0x1E89E24", VA = "0x1E89E24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA393A4", Offset = "0xA393A4")]
	public IEnumerator WalkTo(Vector3 targetPosition, float speed)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1E89F10", Offset = "0x1E89F10", VA = "0x1E89F10")]
	public void StopWalking()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1E89FE0", Offset = "0x1E89FE0", VA = "0x1E89FE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39408", Offset = "0xA39408")]
	private IEnumerator SetOnGround(float velocity)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1E89240", Offset = "0x1E89240", VA = "0x1E89240")]
	private bool GroundCast(bool forceRaycast = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1E8A0A4", Offset = "0x1E8A0A4", VA = "0x1E8A0A4")]
	public void FistBump(bool forceState = false, bool state = false, bool playSound = true)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1E865C0", Offset = "0x1E865C0", VA = "0x1E865C0")]
	private void CheckGroundCollision()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1E8A590", Offset = "0x1E8A590", VA = "0x1E8A590")]
	public void TeleportTo(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x1E8A718", Offset = "0x1E8A718", VA = "0x1E8A718")]
	private void ReleasePlatform(LooseIntegrityWatcher iw)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1E8A840", Offset = "0x1E8A840", VA = "0x1E8A840")]
	public void SetCurrentMovementType(OddRavenCharacterMovementType movementType)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1E8A848", Offset = "0x1E8A848", VA = "0x1E8A848")]
	public void Jump()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1E8AAF4", Offset = "0x1E8AAF4", VA = "0x1E8AAF4")]
	public void StartGlide()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1E8AB24", Offset = "0x1E8AB24", VA = "0x1E8AB24")]
	public void ResetJumpButton()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1E8AB2C", Offset = "0x1E8AB2C", VA = "0x1E8AB2C")]
	public void StopJump()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1E8A4B0", Offset = "0x1E8A4B0", VA = "0x1E8A4B0")]
	public void StopHanging()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1E8AB84", Offset = "0x1E8AB84", VA = "0x1E8AB84")]
	public void SetMovement(Vector2 movement, OddRavenCharacterMovementType movementType, bool isWorldSpace = true)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1E8A2CC", Offset = "0x1E8A2CC", VA = "0x1E8A2CC")]
	public void NewLookAtTarget(Transform target, CarlyFacialExpressions.Expression expression, bool force = false)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1E89BA4", Offset = "0x1E89BA4", VA = "0x1E89BA4")]
	public void StopLookingAtTarget(Transform target)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1E8AEF8", Offset = "0x1E8AEF8", VA = "0x1E8AEF8")]
	public bool HasLookAtTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1E89B9C", Offset = "0x1E89B9C", VA = "0x1E89B9C")]
	public Transform CurrentLookAtTarget()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1E8AE1C", Offset = "0x1E8AE1C", VA = "0x1E8AE1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3946C", Offset = "0xA3946C")]
	private IEnumerator LookAtTarget(Transform target, CarlyFacialExpressions.Expression expression, bool force = false)
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1E8B018", Offset = "0x1E8B018", VA = "0x1E8B018")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1E8B0E8", Offset = "0x1E8B0E8", VA = "0x1E8B0E8")]
	public OddRavenCharacterController()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B42C", Offset = "0xA2B42C")]
public class OddRavenCharacterInput : InputComponent
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OddRavenVrPriorityOrder singlePlayerModePriorityOrder;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA316C4", Offset = "0xA316C4")]
	private OddRavenCharacterController <CharacterController>k__BackingField;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform relativeTo;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VrButton JumpButton;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public VrButton InteractButton;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton PointButton;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public VrButton fistBumpButton;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VrButton WalkButton;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool CanGlide;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool ClimbOnForward;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool ReleaseOnBack;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA316D4", Offset = "0xA316D4")]
	private static string <LastInputDevice>k__BackingField;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	private bool _enabled;

	[Token(Token = "0x1700003C")]
	public OddRavenCharacterController CharacterController
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x1E8C558", Offset = "0x1E8C558", VA = "0x1E8C558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39610", Offset = "0xA39610")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x1E8C560", Offset = "0x1E8C560", VA = "0x1E8C560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39620", Offset = "0xA39620")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	internal static string LastInputDevice
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x1E8C568", Offset = "0x1E8C568", VA = "0x1E8C568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39630", Offset = "0xA39630")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x1E8C5B8", Offset = "0x1E8C5B8", VA = "0x1E8C5B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39640", Offset = "0xA39640")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public bool IsEnabled
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1E8C838", Offset = "0x1E8C838", VA = "0x1E8C838")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1E8C60C", Offset = "0x1E8C60C", VA = "0x1E8C60C", Slot = "12")]
	public override void AcquireDevice(OddRavenVrPriorityOrder priorityOrder)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1E8C614", Offset = "0x1E8C614", VA = "0x1E8C614", Slot = "10")]
	public override OddRavenVrPriorityOrder GetPriorityOrder()
	{
		return null;
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1E8C654", Offset = "0x1E8C654", VA = "0x1E8C654", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1E8C73C", Offset = "0x1E8C73C", VA = "0x1E8C73C")]
	public void SetEnabled(bool enabled)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1E8C840", Offset = "0x1E8C840", VA = "0x1E8C840", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1E8BED4", Offset = "0x1E8BED4", VA = "0x1E8BED4")]
	public void Vibrate(float strength, float length)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1E8C910", Offset = "0x1E8C910", VA = "0x1E8C910", Slot = "17")]
	public override void OnFixedUpdate()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1E8CE78", Offset = "0x1E8CE78", VA = "0x1E8CE78")]
	public OddRavenCharacterInput()
	{
	}
}
[Token(Token = "0x200004F")]
public enum OddRavenCharacterMovementType
{
	[Token(Token = "0x40001E2")]
	Walking,
	[Token(Token = "0x40001E3")]
	Running
}
[Token(Token = "0x2000050")]
public enum OddRavenCharacterState
{
	[Token(Token = "0x40001E5")]
	OnGround,
	[Token(Token = "0x40001E6")]
	Jumping,
	[Token(Token = "0x40001E7")]
	Gliding,
	[Token(Token = "0x40001E8")]
	Falling,
	[Token(Token = "0x40001E9")]
	FallingNoGlide,
	[Token(Token = "0x40001EA")]
	Hanging,
	[Token(Token = "0x40001EB")]
	Climbing,
	[Token(Token = "0x40001EC")]
	FallingAfterJump
}
[Token(Token = "0x2000051")]
public class OVRHandGestures : MonoBehaviour
{
	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controller;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string thumbsUpAnimation;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pointAnimation;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xD55B4C", Offset = "0xD55B4C", VA = "0xD55B4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xD55BA4", Offset = "0xD55BA4", VA = "0xD55BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xD55CDC", Offset = "0xD55CDC", VA = "0xD55CDC")]
	public OVRHandGestures()
	{
	}
}
[Token(Token = "0x2000052")]
public class PSVRHandGestures : MonoBehaviour
{
	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton ThumbsUp;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public VrButton Pointing;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string thumbsUpAnimation;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pointAnimation;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WandComponent controller;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1E9452C", Offset = "0x1E9452C", VA = "0x1E9452C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1E9459C", Offset = "0x1E9459C", VA = "0x1E9459C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1E946A0", Offset = "0x1E946A0", VA = "0x1E946A0")]
	public PSVRHandGestures()
	{
	}
}
[Token(Token = "0x2000053")]
public class ApplyToAllAttribute : PropertyAttribute
{
	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB8D458", Offset = "0xB8D458", VA = "0xB8D458")]
	public ApplyToAllAttribute()
	{
	}
}
[Token(Token = "0x2000054")]
public class AssetsOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB8D460", Offset = "0xB8D460", VA = "0xB8D460")]
	public AssetsOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000055")]
public class InputAxisAttribute : PropertyAttribute
{
	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xCDDF0C", Offset = "0xCDDF0C", VA = "0xCDDF0C")]
	public InputAxisAttribute()
	{
	}
}
[Token(Token = "0x2000056")]
public class CameraComponent : TrackedComponent
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera Camera;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1E4A320", Offset = "0x1E4A320", VA = "0x1E4A320", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1E4A324", Offset = "0x1E4A324", VA = "0x1E4A324")]
	public CameraComponent()
	{
	}
}
[Token(Token = "0x2000057")]
public enum ControllerOrientation
{
	[Token(Token = "0x40001F9")]
	Right = 0,
	[Token(Token = "0x40001FA")]
	Left = 1,
	[Token(Token = "0x40001FB")]
	Any = 2,
	[Token(Token = "0x40001FC")]
	Both = 99
}
[Token(Token = "0x2000058")]
public class DefaultCameraDevice : CameraDeviceBase
{
	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xAB5018", Offset = "0xAB5018", VA = "0xAB5018", Slot = "4")]
	public override bool CheckValidity()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xAB5020", Offset = "0xAB5020", VA = "0xAB5020")]
	public DefaultCameraDevice()
	{
	}
}
[Token(Token = "0x2000059")]
public class OddRavenInputModule : PointerInputModule
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_PrevActionTime;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 m_LastMoveVector;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_ConsecutiveMoveCount;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 m_LastMousePosition;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 m_MousePosition;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float m_InputActionsPerSecond;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float m_RepeatDelay;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool m_ForceModuleActive;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public VrButton submitButton;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OddRavenVrPriorityOrder priorityOrder;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private InputDeviceBase _underlyingInputDevice;

	[Token(Token = "0x1700003F")]
	public InputDeviceBase UnderlyingInputDevice
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1E8D0D0", Offset = "0x1E8D0D0", VA = "0x1E8D0D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1E8D1CC", Offset = "0x1E8D1CC", VA = "0x1E8D1CC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public bool forceModuleActive
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x1E8D640", Offset = "0x1E8D640", VA = "0x1E8D640")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x1E8D648", Offset = "0x1E8D648", VA = "0x1E8D648")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public float inputActionsPerSecond
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x1E8D654", Offset = "0x1E8D654", VA = "0x1E8D654")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x1E8D65C", Offset = "0x1E8D65C", VA = "0x1E8D65C")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public float repeatDelay
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x1E8D664", Offset = "0x1E8D664", VA = "0x1E8D664")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x1E8D66C", Offset = "0x1E8D66C", VA = "0x1E8D66C")]
		set
		{
		}
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1E8D100", Offset = "0x1E8D100", VA = "0x1E8D100")]
	public void AcquireDevice()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1E8D3E0", Offset = "0x1E8D3E0", VA = "0x1E8D3E0", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1E8D514", Offset = "0x1E8D514", VA = "0x1E8D514", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1E8D674", Offset = "0x1E8D674", VA = "0x1E8D674", Slot = "24")]
	public override void UpdateModule()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1E8D718", Offset = "0x1E8D718", VA = "0x1E8D718", Slot = "25")]
	public override bool IsModuleSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1E8D730", Offset = "0x1E8D730", VA = "0x1E8D730", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1E8D8CC", Offset = "0x1E8D8CC", VA = "0x1E8D8CC", Slot = "23")]
	public override void ActivateModule()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1E8DA5C", Offset = "0x1E8DA5C", VA = "0x1E8DA5C", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1E8DA88", Offset = "0x1E8DA88", VA = "0x1E8DA88", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1E8DF18", Offset = "0x1E8DF18", VA = "0x1E8DF18")]
	protected bool SendSubmitEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1E8E08C", Offset = "0x1E8E08C", VA = "0x1E8E08C")]
	private Vector2 GetRawMoveVector()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1E8DC4C", Offset = "0x1E8DC4C", VA = "0x1E8DC4C")]
	protected bool SendMoveEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1E8E084", Offset = "0x1E8E084", VA = "0x1E8E084")]
	protected void ProcessMouseEvent()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1E8E170", Offset = "0x1E8E170", VA = "0x1E8E170")]
	protected void ProcessMouseEvent(int id)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1E8DAFC", Offset = "0x1E8DAFC", VA = "0x1E8DAFC")]
	protected bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1E8E4BC", Offset = "0x1E8E4BC", VA = "0x1E8E4BC")]
	protected void ProcessMousePress(MouseButtonEventData data)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1E8EE5C", Offset = "0x1E8EE5C", VA = "0x1E8EE5C", Slot = "30")]
	public virtual bool GetButtonDown(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1E8EEB0", Offset = "0x1E8EEB0", VA = "0x1E8EEB0", Slot = "31")]
	public virtual bool GetButtonUp(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1E8EF04", Offset = "0x1E8EF04", VA = "0x1E8EF04", Slot = "32")]
	public virtual bool GetButtonPressed(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1E8EF58", Offset = "0x1E8EF58", VA = "0x1E8EF58", Slot = "33")]
	public virtual bool GetButtonReleased(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1E8EFAC", Offset = "0x1E8EFAC", VA = "0x1E8EFAC", Slot = "34")]
	public virtual Vector2 GetAnalog(VrStick stick = VrStick.Left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1E8F054", Offset = "0x1E8F054", VA = "0x1E8F054", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1E8F16C", Offset = "0x1E8F16C", VA = "0x1E8F16C")]
	public OddRavenInputModule()
	{
	}
}
[Token(Token = "0x200005A")]
public class GamePadComponent : InputComponent
{
	[Token(Token = "0x6000216")]
	[Address(RVA = "0xBA5B1C", Offset = "0xBA5B1C", VA = "0xBA5B1C", Slot = "11")]
	public override void AcquireDevice()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xBA5BFC", Offset = "0xBA5BFC", VA = "0xBA5BFC")]
	protected bool IsTrigger(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xBA5C18", Offset = "0xBA5C18", VA = "0xBA5C18")]
	public float GetTriggerValue(VrButton button)
	{
		return default(float);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xBA5DB4", Offset = "0xBA5DB4", VA = "0xBA5DB4")]
	public GamePadComponent()
	{
	}
}
[Token(Token = "0x200005B")]
public class HmdComponent : TrackedComponent
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31714", Offset = "0xA31714")]
	private Camera <Camera>k__BackingField;

	[Token(Token = "0x17000043")]
	public Camera Camera
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xBAD05C", Offset = "0xBAD05C", VA = "0xBAD05C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39650", Offset = "0xA39650")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xBAD064", Offset = "0xBAD064", VA = "0xBAD064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39660", Offset = "0xA39660")]
		private set
		{
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xBAD06C", Offset = "0xBAD06C", VA = "0xBAD06C")]
	public HmdComponent()
	{
	}
}
[Token(Token = "0x200005C")]
public delegate void ButtonPress(VrButton button);
[Token(Token = "0x200005D")]
public abstract class InputComponent : TrackedComponent
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31724", Offset = "0xA31724")]
	private InputDeviceBase <UnderlyingInputDevice>k__BackingField;

	[Token(Token = "0x17000044")]
	public InputDeviceBase UnderlyingInputDevice
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xCDDF14", Offset = "0xCDDF14", VA = "0xCDDF14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39670", Offset = "0xA39670")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000222")]
		[Address(RVA = "0xCDDF1C", Offset = "0xCDDF1C", VA = "0xCDDF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39680", Offset = "0xA39680")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xCDDF24", Offset = "0xCDDF24", VA = "0xCDDF24", Slot = "12")]
	public override void AcquireDevice(OddRavenVrPriorityOrder priorityOrder)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xCDDFA8", Offset = "0xCDDFA8", VA = "0xCDDFA8", Slot = "13")]
	public override bool CheckValidSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xCDDFB8", Offset = "0xCDDFB8", VA = "0xCDDFB8", Slot = "18")]
	public virtual void TriggerHapticPulse(float strength, float duration)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xCDDFD0", Offset = "0xCDDFD0", VA = "0xCDDFD0", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xCDE034", Offset = "0xCDE034", VA = "0xCDE034", Slot = "17")]
	public override void OnFixedUpdate()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xCDE080", Offset = "0xCDE080", VA = "0xCDE080", Slot = "19")]
	public virtual bool GetButtonDown(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xCDE09C", Offset = "0xCDE09C", VA = "0xCDE09C", Slot = "20")]
	public virtual bool GetButtonUp(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xCDE0B8", Offset = "0xCDE0B8", VA = "0xCDE0B8", Slot = "21")]
	public virtual bool GetButtonPressed(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xCDE0D4", Offset = "0xCDE0D4", VA = "0xCDE0D4", Slot = "22")]
	public virtual bool GetButtonReleased(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xCDE0F0", Offset = "0xCDE0F0", VA = "0xCDE0F0", Slot = "23")]
	public virtual Vector2 GetAnalog(VrStick stick = VrStick.Left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xCDE188", Offset = "0xCDE188", VA = "0xCDE188", Slot = "24")]
	public virtual bool ControlCameraRotation()
	{
		return default(bool);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xCDE1A0", Offset = "0xCDE1A0", VA = "0xCDE1A0", Slot = "25")]
	public virtual Vector2 GetCameraRotation(float x, float y, float minAngle, float maxAngle)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xCDE258", Offset = "0xCDE258", VA = "0xCDE258")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xCDE274", Offset = "0xCDE274", VA = "0xCDE274")]
	protected InputComponent()
	{
	}
}
[Token(Token = "0x200005E")]
public class KeyboardComponent : InputComponent
{
	[Token(Token = "0x6000231")]
	[Address(RVA = "0xCE3E60", Offset = "0xCE3E60", VA = "0xCE3E60", Slot = "11")]
	public override void AcquireDevice()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xCE3F0C", Offset = "0xCE3F0C", VA = "0xCE3F0C")]
	public KeyboardComponent()
	{
	}
}
[Token(Token = "0x200005F")]
public struct OddRavenVrButtonState
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private long updateTick;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private bool state;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private bool lastState;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xA448D8", Offset = "0xA448D8", VA = "0xA448D8")]
	public void SetState(bool state)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xA448E4", Offset = "0xA448E4", VA = "0xA448E4")]
	public bool GetState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xA448EC", Offset = "0xA448EC", VA = "0xA448EC")]
	public bool GetLastState()
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000060")]
public class OddRavenVrConfiguration
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool AllowMultipleCameras;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OddRavenVrPriorityOrder priorityOrder;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1E90098", Offset = "0x1E90098", VA = "0x1E90098")]
	public OddRavenVrConfiguration()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B490", Offset = "0xA2B490")]
public class OddRavenVrManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000062")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B4F4", Offset = "0xA2B4F4")]
	private sealed class <>c__58<T> where T : InputDeviceBase
	{
		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__58<T> <>9;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<InputDeviceBase, bool> <>9__58_0;

		[Token(Token = "0x6000258")]
		public <>c__58()
		{
		}

		[Token(Token = "0x6000259")]
		internal bool <GetDevicesOfType>b__58_0(InputDeviceBase d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MouseAndKeyboardConfiguration MouseAndKeyboardConfiguration;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InControlConfiguration GamePadConfiguration;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InControlConfiguration OpenVrControllerConfiguration;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ViveControllerConfiguration WindowsMrControllerConfiguration;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ViveControllerConfiguration WindowsMrGamePadConfiguration;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ViveControllerConfiguration SteamVrControllerConfiguration;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ViveControllerConfiguration SteamVrGamePadConfiguration;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ViveControllerConfiguration SteamVRKnucklesControllerConfiguration;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ViveControllerConfiguration SteamVrKnucklesGamePadConfiguration;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ViveControllerConfiguration SteamVRCosmosControllerConfiguration;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ViveControllerConfiguration SteamVrCosmosGamePadConfiguration;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public OculusTouchConfiguration OculusTouchControllerConfiguration;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public OculusTouchConfiguration OculusTouchGamePadConfiguration;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PlaystationMoveConfiguration PlaystationMoveConfiguration;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public InControlConfiguration TrackedPlaystationControllerLeftConfiguration;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public InControlConfiguration TrackedPlaystationControllerRightConfiguration;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public InControlConfiguration TrackedPlaystationGamePadConfiguration;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public DbgForceSocialScreen dbgSocialScreen;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public OddRavenVrConfiguration Configuration;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private DbgForceSocialScreen dbgSocialScreenInstance;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OddRavenVrManager s_instance;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool s_initialized;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnDeviceListChanged;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31734", Offset = "0xA31734")]
	private static List<InputDeviceBase> <CurrentInputDevices>k__BackingField;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31744", Offset = "0xA31744")]
	private static List<CameraDeviceBase> <CurrentCameras>k__BackingField;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool instantiating;

	[Token(Token = "0x17000045")]
	public static OddRavenVrManager Instance
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x1E8D23C", Offset = "0x1E8D23C", VA = "0x1E8D23C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public static List<InputDeviceBase> CurrentInputDevices
	{
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x1E8D1D4", Offset = "0x1E8D1D4", VA = "0x1E8D1D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39690", Offset = "0xA39690")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x1E9174C", Offset = "0x1E9174C", VA = "0x1E9174C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA396A0", Offset = "0xA396A0")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public static List<CameraDeviceBase> CurrentCameras
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1E917B8", Offset = "0x1E917B8", VA = "0x1E917B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA396B0", Offset = "0xA396B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x1E91820", Offset = "0x1E91820", VA = "0x1E91820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA396C0", Offset = "0xA396C0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1E91674", Offset = "0x1E91674", VA = "0x1E91674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1E8D3DC", Offset = "0x1E8D3DC", VA = "0x1E8D3DC")]
	public void Poke()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1E9153C", Offset = "0x1E9153C", VA = "0x1E9153C")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1E91CDC", Offset = "0x1E91CDC", VA = "0x1E91CDC")]
	public static InputDeviceBase GetDbgInputWrapper(InputDeviceBase input)
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1E8F704", Offset = "0x1E8F704", VA = "0x1E8F704")]
	public static void ForceDeviceUpdate()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1E91CE0", Offset = "0x1E91CE0", VA = "0x1E91CE0")]
	private static void DeviceListChanged(InputDevice obj)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1E9188C", Offset = "0x1E9188C", VA = "0x1E9188C")]
	public static void InstaciateActiveDevices()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1E91D74", Offset = "0x1E91D74", VA = "0x1E91D74")]
	public static bool InstantiateOculusTouchControllers()
	{
		return default(bool);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1E92694", Offset = "0x1E92694", VA = "0x1E92694")]
	public static bool InstantiateWindowsMRGamePad()
	{
		return default(bool);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1E91F2C", Offset = "0x1E91F2C", VA = "0x1E91F2C")]
	public static bool InstantiateWindowsMRWands()
	{
		return default(bool);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1E92144", Offset = "0x1E92144", VA = "0x1E92144")]
	public static bool InstantiateOpenVrControllers()
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1E92594", Offset = "0x1E92594", VA = "0x1E92594")]
	public static bool InstantiateOculusGamePad()
	{
		return default(bool);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1E92304", Offset = "0x1E92304", VA = "0x1E92304")]
	public static bool InstantiateGamePad()
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1E92470", Offset = "0x1E92470", VA = "0x1E92470")]
	public static bool InstantiateKeyboardAndMouse()
	{
		return default(bool);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1E91B48", Offset = "0x1E91B48", VA = "0x1E91B48")]
	public static void InstaciateActiveCameras()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1E9280C", Offset = "0x1E9280C", VA = "0x1E9280C")]
	public static void CheckManagerState()
	{
	}

	[Token(Token = "0x600024C")]
	public static T QueryForDevice<T>(OddRavenVrPriorityOrder priorityOrder) where T : InputDeviceBase
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	public static List<T> QueryForDevices<T>(OddRavenVrPriorityOrder priorityOrder) where T : InputDeviceBase
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1E90E58", Offset = "0x1E90E58", VA = "0x1E90E58")]
	public static List<InputDeviceBase> QueryForDevices(Type t, bool includeSubTypes)
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1E929A8", Offset = "0x1E929A8", VA = "0x1E929A8")]
	public static void OnAcquiredComponent(InputComponent component)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1E92AF0", Offset = "0x1E92AF0", VA = "0x1E92AF0")]
	public static void OnAcquiredGamepadComponent(GamePadComponent device)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1E92B58", Offset = "0x1E92B58", VA = "0x1E92B58")]
	public static void OnAcquiredKeyboardComponent(KeyboardComponent device)
	{
	}

	[Token(Token = "0x6000252")]
	private static List<TrackedComponent> FilterForType<T>(List<TrackedComponent> activeComponents)
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	public static InputDeviceBase GetFirstDeviceOfType<T>() where T : InputDeviceBase
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	public static InputDeviceBase[] GetDevicesOfType<T>() where T : InputDeviceBase
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1E92BC0", Offset = "0x1E92BC0", VA = "0x1E92BC0")]
	public OddRavenVrManager()
	{
	}
}
[Token(Token = "0x2000063")]
public abstract class OpenVrComponent : WandComponent
{
	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1E93334", Offset = "0x1E93334", VA = "0x1E93334", Slot = "11")]
	public override void AcquireDevice()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1E934F4", Offset = "0x1E934F4", VA = "0x1E934F4")]
	protected OpenVrComponent()
	{
	}
}
[Token(Token = "0x2000064")]
public abstract class TrackedComponent : MonoBehaviour
{
	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool InputManagerMissing;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31754", Offset = "0xA31754")]
	private Transform <TrackedTransform>k__BackingField;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OddRavenVrPriorityOrder overrideDefaultPriorityOrder;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableWhenValid;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31764", Offset = "0xA31764")]
	private bool <IsValid>k__BackingField;

	[Token(Token = "0x17000048")]
	public Transform TrackedTransform
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x1DF3DD4", Offset = "0x1DF3DD4", VA = "0x1DF3DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA396D0", Offset = "0xA396D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x1DF3DDC", Offset = "0x1DF3DDC", VA = "0x1DF3DDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA396E0", Offset = "0xA396E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public virtual Vector3 Position
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x1DF3DE4", Offset = "0x1DF3DE4", VA = "0x1DF3DE4", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004A")]
	public virtual Quaternion Rotation
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x1DF3EA4", Offset = "0x1DF3EA4", VA = "0x1DF3EA4", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700004B")]
	public virtual Vector3 Forward
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x1DF3F64", Offset = "0x1DF3F64", VA = "0x1DF3F64", Slot = "6")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004C")]
	public virtual Vector3 Right
	{
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x1DF4024", Offset = "0x1DF4024", VA = "0x1DF4024", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004D")]
	public virtual bool IsValid
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x1DF40E4", Offset = "0x1DF40E4", VA = "0x1DF40E4", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA396F0", Offset = "0xA396F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x1DF40EC", Offset = "0x1DF40EC", VA = "0x1DF40EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39700", Offset = "0xA39700")]
		private set
		{
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1DF40F8", Offset = "0x1DF40F8", VA = "0x1DF40F8", Slot = "9")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1DF412C", Offset = "0x1DF412C", VA = "0x1DF412C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1DF424C", Offset = "0x1DF424C", VA = "0x1DF424C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1DF436C", Offset = "0x1DF436C", VA = "0x1DF436C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1DF43B4", Offset = "0x1DF43B4", VA = "0x1DF43B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1DF43FC", Offset = "0x1DF43FC", VA = "0x1DF43FC")]
	private bool InitializeCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1DF4510", Offset = "0x1DF4510", VA = "0x1DF4510")]
	private void DeviceListChanged()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1DF459C", Offset = "0x1DF459C", VA = "0x1DF459C", Slot = "10")]
	public virtual OddRavenVrPriorityOrder GetPriorityOrder()
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1DF4660", Offset = "0x1DF4660", VA = "0x1DF4660", Slot = "11")]
	public virtual void AcquireDevice()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1DF4698", Offset = "0x1DF4698", VA = "0x1DF4698", Slot = "12")]
	public virtual void AcquireDevice(OddRavenVrPriorityOrder priorityOrder)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1DF469C", Offset = "0x1DF469C", VA = "0x1DF469C", Slot = "13")]
	public virtual bool CheckValidSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1DF46A4", Offset = "0x1DF46A4", VA = "0x1DF46A4", Slot = "14")]
	public virtual void OnInit()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1DF46A8", Offset = "0x1DF46A8", VA = "0x1DF46A8", Slot = "15")]
	public virtual void OnStart()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1DF471C", Offset = "0x1DF471C", VA = "0x1DF471C", Slot = "16")]
	public virtual void OnUpdate()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1DF4720", Offset = "0x1DF4720", VA = "0x1DF4720", Slot = "17")]
	public virtual void OnFixedUpdate()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1DF4724", Offset = "0x1DF4724", VA = "0x1DF4724")]
	protected TrackedComponent()
	{
	}
}
[Token(Token = "0x2000065")]
public class ViveCameraComponent : CameraComponent
{
	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1E20B88", Offset = "0x1E20B88", VA = "0x1E20B88")]
	public ViveCameraComponent()
	{
	}
}
[Token(Token = "0x2000066")]
public enum VrButton
{
	[Token(Token = "0x4000231")]
	None = -1,
	[Token(Token = "0x4000232")]
	Button_A = 0,
	[Token(Token = "0x4000233")]
	Button_B = 1,
	[Token(Token = "0x4000234")]
	Button_C = 2,
	[Token(Token = "0x4000235")]
	Button_D = 3,
	[Token(Token = "0x4000236")]
	Button_E = 4,
	[Token(Token = "0x4000237")]
	Button_F = 5,
	[Token(Token = "0x4000238")]
	Button_G = 6,
	[Token(Token = "0x4000239")]
	Button_H = 7,
	[Token(Token = "0x400023A")]
	Button_I = 8,
	[Token(Token = "0x400023B")]
	Button_J = 9,
	[Token(Token = "0x400023C")]
	Button_K = 12,
	[Token(Token = "0x400023D")]
	Button_L = 13,
	[Token(Token = "0x400023E")]
	Button_M = 14,
	[Token(Token = "0x400023F")]
	Button_N = 15,
	[Token(Token = "0x4000240")]
	Button_O = 16,
	[Token(Token = "0x4000241")]
	Button_P = 17,
	[Token(Token = "0x4000242")]
	Trigger_A = 10,
	[Token(Token = "0x4000243")]
	Trigger_B = 11
}
[Token(Token = "0x2000067")]
public enum VrStick
{
	[Token(Token = "0x4000245")]
	Left,
	[Token(Token = "0x4000246")]
	Right
}
[Token(Token = "0x2000068")]
public class WaitForAllCameras : CustomYieldInstruction
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float lastCheck;

	[Token(Token = "0x1700004E")]
	public override bool keepWaiting
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x1E22448", Offset = "0x1E22448", VA = "0x1E22448", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1E225FC", Offset = "0x1E225FC", VA = "0x1E225FC")]
	public WaitForAllCameras()
	{
	}
}
[Token(Token = "0x2000069")]
public class WaitForAnimationState : CustomYieldInstruction
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator animator;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string state;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int layer;

	[Token(Token = "0x1700004F")]
	public override bool keepWaiting
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x1E22644", Offset = "0x1E22644", VA = "0x1E22644", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1E22604", Offset = "0x1E22604", VA = "0x1E22604")]
	public WaitForAnimationState(string state, Animator animator, int layer = 0)
	{
	}
}
[Token(Token = "0x200006A")]
public class WaitForButtonPress : CustomYieldInstruction
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VrButton waitForButton;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputDeviceBase _underlyingInputDevice;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OddRavenVrPriorityOrder priorityOrder;

	[Token(Token = "0x17000050")]
	private InputDeviceBase UnderlyingInputDevice
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1E226D0", Offset = "0x1E226D0", VA = "0x1E226D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x1E227A0", Offset = "0x1E227A0", VA = "0x1E227A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public override bool keepWaiting
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x1E227A8", Offset = "0x1E227A8", VA = "0x1E227A8", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1E22700", Offset = "0x1E22700", VA = "0x1E22700")]
	public void AcquireDevice()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1E2280C", Offset = "0x1E2280C", VA = "0x1E2280C")]
	public WaitForButtonPress(VrButton button)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1E22948", Offset = "0x1E22948", VA = "0x1E22948", Slot = "1")]
	~WaitForButtonPress()
	{
	}
}
[Token(Token = "0x200006B")]
public class WaitForMultiButtonPress : CustomYieldInstruction
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VrButton firstButton;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public VrButton secondButton;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OddRavenVrPriorityOrder firstPriorityOrder;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OddRavenVrPriorityOrder secondPriorityOrder;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool firstReady;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool secondReady;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool waitOnNetwork;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal InputDeviceBase[] firstDevice;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal InputDeviceBase[] secondDevice;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action FirstButtonIsReady;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action SecondButtonIsReady;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action StartedWaiting;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnFirstButtonPressed;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static byte rotatingId;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private byte dialogNetworkId;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int waitOnCurrentLine;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float waitTimer;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float waitLimit;

	[Token(Token = "0x17000052")]
	public override bool keepWaiting
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x1F5C1B8", Offset = "0x1F5C1B8", VA = "0x1F5C1B8", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1F5C080", Offset = "0x1F5C080", VA = "0x1F5C080")]
	public static byte GetNextId()
	{
		return default(byte);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1F5C14C", Offset = "0x1F5C14C", VA = "0x1F5C14C")]
	public static void SyncNextId(byte id)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1F5C850", Offset = "0x1F5C850", VA = "0x1F5C850")]
	public void TriggerSecond()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1F5C870", Offset = "0x1F5C870", VA = "0x1F5C870")]
	public void RemoveCallbacks()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1F5BE2C", Offset = "0x1F5BE2C", VA = "0x1F5BE2C")]
	public WaitForMultiButtonPress(VrButton firstButton, VrButton secondButton, OddRavenVrPriorityOrder firstPriorityOrder, OddRavenVrPriorityOrder secondPriorityOrder)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1F5C920", Offset = "0x1F5C920", VA = "0x1F5C920")]
	private new void Reset()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1F5C8D8", Offset = "0x1F5C8D8", VA = "0x1F5C8D8")]
	private void HookUpDevices()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1F5C93C", Offset = "0x1F5C93C", VA = "0x1F5C93C", Slot = "1")]
	~WaitForMultiButtonPress()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1F5CB14", Offset = "0x1F5CB14", VA = "0x1F5CB14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39710", Offset = "0xA39710")]
	private bool <get_keepWaiting>b__21_0(InputDeviceBase d)
	{
		return default(bool);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1F5CB54", Offset = "0x1F5CB54", VA = "0x1F5CB54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39720", Offset = "0xA39720")]
	private bool <get_keepWaiting>b__21_1(InputDeviceBase d)
	{
		return default(bool);
	}
}
[Token(Token = "0x200006C")]
public class WaitForSecondsOrButtonPress : CustomYieldInstruction
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VrButton waitForButton;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputDeviceBase _underlyingInputDevice;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OddRavenVrPriorityOrder priorityOrder;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float waitTime;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float elapsedTime;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stopOnGameDataState;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool buttonWasPressed;

	[Token(Token = "0x17000053")]
	private InputDeviceBase UnderlyingInputDevice
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x1F5CB94", Offset = "0x1F5CB94", VA = "0x1F5CB94")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x1F5CC64", Offset = "0x1F5CC64", VA = "0x1F5CC64")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public override bool keepWaiting
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x1F5CC6C", Offset = "0x1F5CC6C", VA = "0x1F5CC6C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1F5CBC4", Offset = "0x1F5CBC4", VA = "0x1F5CBC4")]
	public void AcquireDevice()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1F5CD64", Offset = "0x1F5CD64", VA = "0x1F5CD64")]
	public WaitForSecondsOrButtonPress(OddRavenVrPriorityOrder priorityOrder, VrButton button, float time, [Optional] string stopOnGameDataState)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1F5CEC8", Offset = "0x1F5CEC8", VA = "0x1F5CEC8", Slot = "1")]
	~WaitForSecondsOrButtonPress()
	{
	}
}
[Token(Token = "0x200006D")]
public abstract class WandComponent : InputComponent
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ControllerOrientation Orientation;

	[Token(Token = "0x17000055")]
	public WandControllerDevice WandDevice
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x1F5D280", Offset = "0x1F5D280", VA = "0x1F5D280")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1F5D0D4", Offset = "0x1F5D0D4", VA = "0x1F5D0D4", Slot = "12")]
	public override void AcquireDevice(OddRavenVrPriorityOrder priorityOrder)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1F5D30C", Offset = "0x1F5D30C", VA = "0x1F5D30C")]
	protected WandComponent()
	{
	}
}
[Token(Token = "0x200006E")]
public class WindowsMRControllerManager
{
	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1F60440", Offset = "0x1F60440", VA = "0x1F60440")]
	public WindowsMRControllerManager()
	{
	}
}
[Token(Token = "0x200006F")]
public abstract class CameraDeviceBase
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<CameraComponent> TrackedComponents;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1E4BC7C", Offset = "0x1E4BC7C", VA = "0x1E4BC7C")]
	public CameraDeviceBase()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1E4BCF0", Offset = "0x1E4BCF0", VA = "0x1E4BCF0")]
	public void HookComponent(CameraComponent component)
	{
	}

	[Token(Token = "0x6000298")]
	public abstract bool CheckValidity();

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1E4BDA4", Offset = "0x1E4BDA4", VA = "0x1E4BDA4", Slot = "5")]
	public virtual void AcquireDevice()
	{
	}
}
[Token(Token = "0x2000070")]
public class GamePadDevice : InControlInputDeviceBase
{
	[Serializable]
	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B504", Offset = "0xA2B504")]
	private sealed class <>c
	{
		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GamePadDevice, bool> <>9__6_0;

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xBA663C", Offset = "0xBA663C", VA = "0xBA663C")]
		public <>c()
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xBA6644", Offset = "0xBA6644", VA = "0xBA6644")]
		internal bool <GetAllGamepads>b__6_0(GamePadDevice x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static GamePadDevice[] devices;

	[Token(Token = "0x17000056")]
	public override int ButtonCount
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xBA5DBC", Offset = "0xBA5DBC", VA = "0xBA5DBC", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000057")]
	public override string Name
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xBA6388", Offset = "0xBA6388", VA = "0xBA6388", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xBA5DC4", Offset = "0xBA5DC4", VA = "0xBA5DC4")]
	public GamePadDevice(BaseConfiguration configuration)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xBA5DCC", Offset = "0xBA5DCC", VA = "0xBA5DCC", Slot = "7")]
	public override bool CheckValidity()
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xBA5D10", Offset = "0xBA5D10", VA = "0xBA5D10")]
	public float GetTriggerValue(VrButton trigger)
	{
		return default(float);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xBA5DDC", Offset = "0xBA5DDC", VA = "0xBA5DDC")]
	public static GamePadDevice[] GetAllGamepads(InControlConfiguration configuration)
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xBA62FC", Offset = "0xBA62FC", VA = "0xBA62FC", Slot = "23")]
	public virtual bool ValidateDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xBA63B8", Offset = "0xBA63B8", VA = "0xBA63B8")]
	public bool IsTrigger(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xBA63C8", Offset = "0xBA63C8", VA = "0xBA63C8", Slot = "18")]
	public override Vector2 GetAnalog(VrStick stick = VrStick.Left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xBA6538", Offset = "0xBA6538", VA = "0xBA6538", Slot = "19")]
	public override string GetNameOfButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xBA6588", Offset = "0xBA6588", VA = "0xBA6588", Slot = "20")]
	public override string GetSpriteTagFromButton(VrButton button)
	{
		return null;
	}
}
[Token(Token = "0x2000072")]
public class HapticControl : MonoBehaviour
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 timer;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 limit;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 freq;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 str;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HapticControl instance;

	[Token(Token = "0x17000058")]
	public static HapticControl Instance
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xBA9090", Offset = "0xBA9090", VA = "0xBA9090")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xBA90E0", Offset = "0xBA90E0", VA = "0xBA90E0")]
		private set
		{
		}
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xBA9134", Offset = "0xBA9134", VA = "0xBA9134")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xBA9188", Offset = "0xBA9188", VA = "0xBA9188")]
	public void StartPulse(float strength, float length, OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xBA9258", Offset = "0xBA9258", VA = "0xBA9258")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xBA9368", Offset = "0xBA9368", VA = "0xBA9368")]
	public HapticControl()
	{
	}
}
[Token(Token = "0x2000073")]
public abstract class InControlInputDeviceBase : InputDeviceBase
{
	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B514", Offset = "0xA2B514")]
	private sealed class <Vibrate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InControlInputDeviceBase <>4__this;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float strength;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float length;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BB")]
			[Address(RVA = "0xCDD15C", Offset = "0xCDD15C", VA = "0xCDD15C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0xCDD1CC", Offset = "0xCDD1CC", VA = "0xCDD1CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xCDC940", Offset = "0xCDC940", VA = "0xCDC940")]
		[DebuggerHidden]
		public <Vibrate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xCDD058", Offset = "0xCDD058", VA = "0xCDD058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xCDD05C", Offset = "0xCDD05C", VA = "0xCDD05C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xCDD164", Offset = "0xCDD164", VA = "0xCDD164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected InputDevice inControlDevice;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OddRavenVrButtonState[] states;

	[Token(Token = "0x17000059")]
	public override bool HasHapticFeedback
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xCDC7D8", Offset = "0xCDC7D8", VA = "0xCDC7D8", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005A")]
	public InControlConfiguration InControlConfiguration
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xCDCB48", Offset = "0xCDCB48", VA = "0xCDCB48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public InputDevice InControlDevice
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xCDCBCC", Offset = "0xCDCBCC", VA = "0xCDCBCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xCDC7E0", Offset = "0xCDC7E0", VA = "0xCDC7E0", Slot = "10")]
	public override void TriggerHapticPulse(float strength, float length)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xCDC890", Offset = "0xCDC890", VA = "0xCDC890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39730", Offset = "0xA39730")]
	private IEnumerator Vibrate(float strength, float length)
	{
		return null;
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xCDC96C", Offset = "0xCDC96C", VA = "0xCDC96C")]
	public InControlInputDeviceBase(BaseConfiguration configuration)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xCDCBD4", Offset = "0xCDCBD4", VA = "0xCDCBD4", Slot = "14")]
	public override bool GetButtonDown(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xCDCC54", Offset = "0xCDCC54", VA = "0xCDCC54", Slot = "16")]
	public override bool GetButtonPressed(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xCDCE18", Offset = "0xCDCE18", VA = "0xCDCE18", Slot = "17")]
	public override bool GetButtonReleased(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xCDCFD8", Offset = "0xCDCFD8", VA = "0xCDCFD8", Slot = "15")]
	public override bool GetButtonUp(VrButton button)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000075")]
public abstract class InputDeviceBase
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected List<TrackedComponent> HookComponents;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BaseConfiguration Configuration;

	[Token(Token = "0x1700005E")]
	public abstract bool HasHapticFeedback
	{
		[Token(Token = "0x60002C4")]
		get;
	}

	[Token(Token = "0x1700005F")]
	public abstract int ButtonCount
	{
		[Token(Token = "0x60002C6")]
		get;
	}

	[Token(Token = "0x17000060")]
	public abstract string Name
	{
		[Token(Token = "0x60002C7")]
		get;
	}

	[Token(Token = "0x17000061")]
	public virtual bool IsReady
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xCDE400", Offset = "0xCDE400", VA = "0xCDE400", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xCDE2DC", Offset = "0xCDE2DC", VA = "0xCDE2DC", Slot = "4")]
	public virtual bool ControlCameraRotation()
	{
		return default(bool);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xCDE2E4", Offset = "0xCDE2E4", VA = "0xCDE2E4", Slot = "5")]
	public virtual Vector2 GetCameraRotation(float x, float y, float minAngle, float maxAngle)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xCDCA6C", Offset = "0xCDCA6C", VA = "0xCDCA6C")]
	public InputDeviceBase(BaseConfiguration configuration)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xCDE344", Offset = "0xCDE344", VA = "0xCDE344", Slot = "6")]
	public virtual void HookComponent(TrackedComponent component)
	{
	}

	[Token(Token = "0x60002C2")]
	public abstract bool CheckValidity();

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xCDE3F8", Offset = "0xCDE3F8", VA = "0xCDE3F8", Slot = "8")]
	public virtual void AcquireDevice()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xCDE3FC", Offset = "0xCDE3FC", VA = "0xCDE3FC", Slot = "10")]
	public virtual void TriggerHapticPulse(float strength, float length)
	{
	}

	[Token(Token = "0x60002C9")]
	public abstract bool GetButtonDown(VrButton button);

	[Token(Token = "0x60002CA")]
	public abstract bool GetButtonUp(VrButton button);

	[Token(Token = "0x60002CB")]
	public abstract bool GetButtonPressed(VrButton button);

	[Token(Token = "0x60002CC")]
	public abstract bool GetButtonReleased(VrButton button);

	[Token(Token = "0x60002CD")]
	public abstract Vector2 GetAnalog(VrStick stick = VrStick.Left);

	[Token(Token = "0x60002CE")]
	public abstract string GetNameOfButton(VrButton button);

	[Token(Token = "0x60002CF")]
	public abstract string GetSpriteTagFromButton(VrButton button);

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xCDE408", Offset = "0xCDE408", VA = "0xCDE408", Slot = "21")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xCDE40C", Offset = "0xCDE40C", VA = "0xCDE40C", Slot = "22")]
	public virtual void Update()
	{
	}
}
[Token(Token = "0x2000076")]
public class KeyboardAndMouseProfile : UnityInputDeviceProfile
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IniFile settings;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xCE2AE8", Offset = "0xCE2AE8", VA = "0xCE2AE8")]
	public KeyboardAndMouseProfile()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xCE3D84", Offset = "0xCE3D84", VA = "0xCE3D84")]
	private KeyCode GetKey(string name, KeyCode defaultKey)
	{
		return default(KeyCode);
	}
}
[Token(Token = "0x2000077")]
public class MouseAndKeyboardDevice : InputDeviceBase
{
	[Token(Token = "0x17000062")]
	private MouseAndKeyboardConfiguration MouseAndKeyboardConfiguration
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xD50C6C", Offset = "0xD50C6C", VA = "0xD50C6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public override string Name
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xD50D74", Offset = "0xD50D74", VA = "0xD50D74", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	public override bool HasHapticFeedback
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xD50DBC", Offset = "0xD50DBC", VA = "0xD50DBC", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000065")]
	public override int ButtonCount
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xD50DC4", Offset = "0xD50DC4", VA = "0xD50DC4", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xD50CF0", Offset = "0xD50CF0", VA = "0xD50CF0")]
	public MouseAndKeyboardDevice(MouseAndKeyboardConfiguration configuration)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xD50CF8", Offset = "0xD50CF8", VA = "0xD50CF8", Slot = "7")]
	public override bool CheckValidity()
	{
		return default(bool);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xD50DCC", Offset = "0xD50DCC", VA = "0xD50DCC", Slot = "14")]
	public override bool GetButtonDown(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xD50E08", Offset = "0xD50E08", VA = "0xD50E08", Slot = "15")]
	public override bool GetButtonUp(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xD50E50", Offset = "0xD50E50", VA = "0xD50E50", Slot = "16")]
	public override bool GetButtonPressed(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xD50E8C", Offset = "0xD50E8C", VA = "0xD50E8C", Slot = "17")]
	public override bool GetButtonReleased(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xD50EC8", Offset = "0xD50EC8", VA = "0xD50EC8", Slot = "18")]
	public override Vector2 GetAnalog(VrStick stick = VrStick.Left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xD5103C", Offset = "0xD5103C", VA = "0xD5103C", Slot = "4")]
	public override bool ControlCameraRotation()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xD510B4", Offset = "0xD510B4", VA = "0xD510B4", Slot = "5")]
	public override Vector2 GetCameraRotation(float x, float y, float minAngle, float maxAngle)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xD51268", Offset = "0xD51268", VA = "0xD51268")]
	private float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xD51318", Offset = "0xD51318", VA = "0xD51318", Slot = "19")]
	public override string GetNameOfButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xD5134C", Offset = "0xD5134C", VA = "0xD5134C", Slot = "20")]
	public override string GetSpriteTagFromButton(VrButton button)
	{
		return null;
	}
}
[Token(Token = "0x2000078")]
public class OculusTouchControllerDevice : WandControllerDevice
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31774", Offset = "0xA31774")]
	private OVRInput.Controller <ControllerObject>k__BackingField;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRCameraRig controllerManager;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] down;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool[] lastDown;

	[Token(Token = "0x17000066")]
	public OVRInput.Controller ControllerObject
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x1E807D4", Offset = "0x1E807D4", VA = "0x1E807D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA397E4", Offset = "0xA397E4")]
		get
		{
			return default(OVRInput.Controller);
		}
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x1E807DC", Offset = "0x1E807DC", VA = "0x1E807DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA397F4", Offset = "0xA397F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	private OculusTouchConfiguration OculusTouchConfiguration
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x1E807E4", Offset = "0x1E807E4", VA = "0x1E807E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public override int ButtonCount
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x1E80868", Offset = "0x1E80868", VA = "0x1E80868", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000069")]
	public override bool HasHapticFeedback
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x1E80870", Offset = "0x1E80870", VA = "0x1E80870", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006A")]
	public override string Name
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x1E80C70", Offset = "0x1E80C70", VA = "0x1E80C70", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1E80878", Offset = "0x1E80878", VA = "0x1E80878")]
	public OculusTouchControllerDevice(OculusTouchConfiguration configuration, ControllerOrientation orientation)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1E80908", Offset = "0x1E80908", VA = "0x1E80908", Slot = "10")]
	public override void TriggerHapticPulse(float strength, float length)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1E80960", Offset = "0x1E80960", VA = "0x1E80960", Slot = "7")]
	public override bool CheckValidity()
	{
		return default(bool);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1E80D34", Offset = "0x1E80D34", VA = "0x1E80D34", Slot = "8")]
	public override void AcquireDevice()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1E80EF8", Offset = "0x1E80EF8", VA = "0x1E80EF8", Slot = "18")]
	public override Vector2 GetAnalog(VrStick stick = VrStick.Left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1E80F68", Offset = "0x1E80F68", VA = "0x1E80F68", Slot = "23")]
	public override Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1E80FD4", Offset = "0x1E80FD4", VA = "0x1E80FD4", Slot = "24")]
	public override Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1E81040", Offset = "0x1E81040", VA = "0x1E81040", Slot = "14")]
	public override bool GetButtonDown(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1E810E4", Offset = "0x1E810E4", VA = "0x1E810E4", Slot = "15")]
	public override bool GetButtonUp(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1E81194", Offset = "0x1E81194", VA = "0x1E81194", Slot = "16")]
	public override bool GetButtonPressed(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1E81238", Offset = "0x1E81238", VA = "0x1E81238", Slot = "17")]
	public override bool GetButtonReleased(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1E812DC", Offset = "0x1E812DC", VA = "0x1E812DC", Slot = "25")]
	public override string GetNameOfButton(VrButton button, ControllerOrientation controllerOrientation)
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1E81320", Offset = "0x1E81320", VA = "0x1E81320", Slot = "26")]
	public override string GetSpriteTagFromButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}
}
[Token(Token = "0x2000079")]
public class OculusTouchGamePadDevice : GamePadDevice
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] lastDown;

	[Token(Token = "0x1700006B")]
	public override bool HasHapticFeedback
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x1E81364", Offset = "0x1E81364", VA = "0x1E81364", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006C")]
	public override int ButtonCount
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x1E8136C", Offset = "0x1E8136C", VA = "0x1E8136C", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006D")]
	private OculusTouchConfiguration OculusTouchConfiguration
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x1E81374", Offset = "0x1E81374", VA = "0x1E81374")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1E813F8", Offset = "0x1E813F8", VA = "0x1E813F8")]
	public OculusTouchGamePadDevice(OculusTouchConfiguration configuration)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1E81468", Offset = "0x1E81468", VA = "0x1E81468", Slot = "7")]
	public override bool CheckValidity()
	{
		return default(bool);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1E81478", Offset = "0x1E81478", VA = "0x1E81478", Slot = "23")]
	public override bool ValidateDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1E817B0", Offset = "0x1E817B0", VA = "0x1E817B0", Slot = "14")]
	public override bool GetButtonDown(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1E81850", Offset = "0x1E81850", VA = "0x1E81850", Slot = "15")]
	public override bool GetButtonUp(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1E818FC", Offset = "0x1E818FC", VA = "0x1E818FC", Slot = "16")]
	public override bool GetButtonPressed(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1E8199C", Offset = "0x1E8199C", VA = "0x1E8199C", Slot = "17")]
	public override bool GetButtonReleased(VrButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1E81A3C", Offset = "0x1E81A3C", VA = "0x1E81A3C", Slot = "18")]
	public override Vector2 GetAnalog(VrStick stick = VrStick.Left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1E81B0C", Offset = "0x1E81B0C", VA = "0x1E81B0C", Slot = "19")]
	public override string GetNameOfButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1E81B44", Offset = "0x1E81B44", VA = "0x1E81B44", Slot = "20")]
	public override string GetSpriteTagFromButton(VrButton button)
	{
		return null;
	}
}
[Token(Token = "0x200007A")]
public class OddRavenOculusVRManager : MonoBehaviour
{
	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B524", Offset = "0xA2B524")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OddRavenOculusVRManager <>4__this;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000310")]
			[Address(RVA = "0x1E8FCA8", Offset = "0x1E8FCA8", VA = "0x1E8FCA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000312")]
			[Address(RVA = "0x1E8FD18", Offset = "0x1E8FD18", VA = "0x1E8FD18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x1E8F1F4", Offset = "0x1E8F1F4", VA = "0x1E8F1F4")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x1E8F8D4", Offset = "0x1E8F8D4", VA = "0x1E8F8D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x1E8F8D8", Offset = "0x1E8F8D8", VA = "0x1E8F8D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x1E8FCB0", Offset = "0x1E8FCB0", VA = "0x1E8FCB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B534", Offset = "0xA2B534")]
	private sealed class <_ResetRigPosition>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OddRavenOculusVRManager <>4__this;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <_centreEyeAnchor>5__2;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000316")]
			[Address(RVA = "0x1E8FFBC", Offset = "0x1E8FFBC", VA = "0x1E8FFBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000318")]
			[Address(RVA = "0x1E9002C", Offset = "0x1E9002C", VA = "0x1E9002C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x1E8F8A0", Offset = "0x1E8F8A0", VA = "0x1E8F8A0")]
		[DebuggerHidden]
		public <_ResetRigPosition>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x1E8FD20", Offset = "0x1E8FD20", VA = "0x1E8FD20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x1E8FD24", Offset = "0x1E8FD24", VA = "0x1E8FD24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x1E8FFC4", Offset = "0x1E8FFC4", VA = "0x1E8FFC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] models;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float yAxisDefaultRot;

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1E8F180", Offset = "0x1E8F180", VA = "0x1E8F180")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39804", Offset = "0xA39804")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1E8F220", Offset = "0x1E8F220", VA = "0x1E8F220")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1E8F434", Offset = "0x1E8F434", VA = "0x1E8F434")]
	private void OnLevelWasLoaded(int level)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1E8F4D0", Offset = "0x1E8F4D0", VA = "0x1E8F4D0")]
	private void VrFocusChanged()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1E8F760", Offset = "0x1E8F760", VA = "0x1E8F760")]
	private void PauseInSingleplayer()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1E8F76C", Offset = "0x1E8F76C", VA = "0x1E8F76C")]
	private void UnpauseInSingleplayer()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1E8F438", Offset = "0x1E8F438", VA = "0x1E8F438")]
	private void RecenterCameraRig()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1E8F82C", Offset = "0x1E8F82C", VA = "0x1E8F82C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39868", Offset = "0xA39868")]
	private IEnumerator _ResetRigPosition()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1E8F8CC", Offset = "0x1E8F8CC", VA = "0x1E8F8CC")]
	public OddRavenOculusVRManager()
	{
	}
}
[Token(Token = "0x200007D")]
public class OpenVrControllerDevice : WandControllerDevice
{
	[Token(Token = "0x17000072")]
	public override int ButtonCount
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x1E934FC", Offset = "0x1E934FC", VA = "0x1E934FC", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000073")]
	public override bool HasHapticFeedback
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x1E93504", Offset = "0x1E93504", VA = "0x1E93504", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000074")]
	public override string Name
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x1E9376C", Offset = "0x1E9376C", VA = "0x1E9376C", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1E92804", Offset = "0x1E92804", VA = "0x1E92804")]
	public OpenVrControllerDevice(InControlConfiguration configuration, ControllerOrientation orientation)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1E9350C", Offset = "0x1E9350C", VA = "0x1E9350C", Slot = "7")]
	public override bool CheckValidity()
	{
		return default(bool);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1E937D0", Offset = "0x1E937D0", VA = "0x1E937D0", Slot = "8")]
	public override void AcquireDevice()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1E937D4", Offset = "0x1E937D4", VA = "0x1E937D4", Slot = "23")]
	public override Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1E93834", Offset = "0x1E93834", VA = "0x1E93834", Slot = "24")]
	public override Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1E93894", Offset = "0x1E93894", VA = "0x1E93894", Slot = "19")]
	public override string GetNameOfButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1E938E4", Offset = "0x1E938E4", VA = "0x1E938E4", Slot = "25")]
	public override string GetNameOfButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1E938F4", Offset = "0x1E938F4", VA = "0x1E938F4", Slot = "26")]
	public override string GetSpriteTagFromButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}
}
[Token(Token = "0x200007E")]
public class PS4MoveDevice
{
	[Token(Token = "0x200007F")]
	public enum PS4MoveButton
	{
		[Token(Token = "0x400028C")]
		None = 0,
		[Token(Token = "0x400028D")]
		Select = 1,
		[Token(Token = "0x400028E")]
		Trigger = 2,
		[Token(Token = "0x400028F")]
		Move = 4,
		[Token(Token = "0x4000290")]
		Start = 8,
		[Token(Token = "0x4000291")]
		Triangle = 16,
		[Token(Token = "0x4000292")]
		Circle = 32,
		[Token(Token = "0x4000293")]
		Cross = 64,
		[Token(Token = "0x4000294")]
		Square = 128,
		[Token(Token = "0x4000295")]
		Intercepted = 256,
		[Token(Token = "0x4000296")]
		CrossOrCircle = 96,
		[Token(Token = "0x4000297")]
		SquareOrTriangle = 144
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1E94514", Offset = "0x1E94514", VA = "0x1E94514")]
	public PS4MoveDevice()
	{
	}
}
[Token(Token = "0x2000080")]
public class PS4TrackedGamePadDevice : GamePadDevice
{
	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1E9451C", Offset = "0x1E9451C", VA = "0x1E9451C")]
	public PS4TrackedGamePadDevice(InControlConfiguration configuration)
	{
	}
}
[Token(Token = "0x2000081")]
public class SteamVrControllerDevice : WandControllerDevice
{
	[Token(Token = "0x17000075")]
	public override int ButtonCount
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x1DF08DC", Offset = "0x1DF08DC", VA = "0x1DF08DC", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000076")]
	public override bool HasHapticFeedback
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1DF0944", Offset = "0x1DF0944", VA = "0x1DF0944", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000077")]
	public override string Name
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1DF09AC", Offset = "0x1DF09AC", VA = "0x1DF09AC", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1DF08D4", Offset = "0x1DF08D4", VA = "0x1DF08D4")]
	public SteamVrControllerDevice(ViveControllerConfiguration configuration, ControllerOrientation orientation)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1DF0A14", Offset = "0x1DF0A14", VA = "0x1DF0A14", Slot = "7")]
	public override bool CheckValidity()
	{
		return default(bool);
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1DF0A7C", Offset = "0x1DF0A7C", VA = "0x1DF0A7C", Slot = "24")]
	public override Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1DF0AE4", Offset = "0x1DF0AE4", VA = "0x1DF0AE4", Slot = "19")]
	public override string GetNameOfButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1DF0B4C", Offset = "0x1DF0B4C", VA = "0x1DF0B4C", Slot = "25")]
	public override string GetNameOfButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1DF0BB4", Offset = "0x1DF0BB4", VA = "0x1DF0BB4", Slot = "26")]
	public override string GetSpriteTagFromButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1DF0C1C", Offset = "0x1DF0C1C", VA = "0x1DF0C1C", Slot = "23")]
	public override Vector3 GetVelocity()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000082")]
public class SteamVRGamePadDevice : GamePadDevice
{
	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1E7CCD0", Offset = "0x1E7CCD0", VA = "0x1E7CCD0")]
	public SteamVRGamePadDevice(BaseConfiguration configuration, params string[] controllerTypes)
	{
	}
}
[Token(Token = "0x2000083")]
public class ViveHeadDevice : CameraDeviceBase
{
	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1E216EC", Offset = "0x1E216EC", VA = "0x1E216EC", Slot = "4")]
	public override bool CheckValidity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1E216F4", Offset = "0x1E216F4", VA = "0x1E216F4")]
	public ViveHeadDevice()
	{
	}
}
[Token(Token = "0x2000084")]
public abstract class WandControllerDevice : InControlInputDeviceBase
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31784", Offset = "0xA31784")]
	private ControllerOrientation <ControllerOrientation>k__BackingField;

	[Token(Token = "0x17000078")]
	public ControllerOrientation ControllerOrientation
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x1F5D278", Offset = "0x1F5D278", VA = "0x1F5D278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3996C", Offset = "0xA3996C")]
		get
		{
			return default(ControllerOrientation);
		}
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x1F5D314", Offset = "0x1F5D314", VA = "0x1F5D314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3997C", Offset = "0xA3997C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1F5D31C", Offset = "0x1F5D31C", VA = "0x1F5D31C")]
	public WandControllerDevice(BaseConfiguration configuration, ControllerOrientation orientation)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1F5D348", Offset = "0x1F5D348", VA = "0x1F5D348", Slot = "18")]
	public override Vector2 GetAnalog(VrStick stick = VrStick.Left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000337")]
	public abstract Vector3 GetVelocity();

	[Token(Token = "0x6000338")]
	public abstract Vector3 GetAngularVelocity();

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1F5D4A4", Offset = "0x1F5D4A4", VA = "0x1F5D4A4", Slot = "19")]
	public override string GetNameOfButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1F5D4B8", Offset = "0x1F5D4B8", VA = "0x1F5D4B8", Slot = "20")]
	public override string GetSpriteTagFromButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	public abstract string GetNameOfButton(VrButton button, ControllerOrientation orientation);

	[Token(Token = "0x600033C")]
	public abstract string GetSpriteTagFromButton(VrButton button, ControllerOrientation orientation);
}
[Token(Token = "0x2000085")]
public abstract class BaseConfiguration : ScriptableObject
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isVRConfiguration;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB9B604", Offset = "0xB9B604", VA = "0xB9B604", Slot = "4")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xB9B608", Offset = "0xB9B608", VA = "0xB9B608")]
	protected BaseConfiguration()
	{
	}
}
[Token(Token = "0x2000086")]
public abstract class BaseConfiguration<T> : BaseConfiguration where T : struct, IConvertible
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31794", Offset = "0xA31794")]
	public T ButtonA;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonB;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonC;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonD;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonE;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonF;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonG;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonH;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonI;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonJ;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonK;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonL;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonM;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonN;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonO;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T ButtonP;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, IniFile> iniFiles;

	[Token(Token = "0x600033F")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000340")]
	protected BaseConfiguration()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2B544", Offset = "0xA2B544")]
public class InControlConfiguration : BaseConfiguration<InputControlType>
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA317CC", Offset = "0xA317CC")]
	public InputControlType LeftAnalogHorizontal;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public InputControlType LeftAnalogVertical;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31804", Offset = "0xA31804")]
	public InputControlType RightAnalogHorizontal;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InputControlType RightAnalogVertical;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3183C", Offset = "0xA3183C")]
	public InputControlType LeftTriggerAxis;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputControlType RightTriggerAxis;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xCDC2F4", Offset = "0xCDC2F4", VA = "0xCDC2F4")]
	public InputControlType GetControlTypeFromVrButton(VrButton button)
	{
		return default(InputControlType);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xCDC39C", Offset = "0xCDC39C", VA = "0xCDC39C")]
	protected bool CheckSpriteExists(string spriteName, InputDevice device)
	{
		return default(bool);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xCDC544", Offset = "0xCDC544", VA = "0xCDC544")]
	internal string GetNameOfButton(VrButton button, InputDevice device)
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xCDC5E4", Offset = "0xCDC5E4", VA = "0xCDC5E4")]
	internal string GetSpriteTagForButton(VrButton button, InputDevice device)
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xCDC750", Offset = "0xCDC750", VA = "0xCDC750")]
	public InControlConfiguration()
	{
	}
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2B5A4", Offset = "0xA2B5A4")]
public class MouseAndKeyboardConfiguration : BaseConfiguration
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31874", Offset = "0xA31874")]
	public KeyCode ButtonA;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode ButtonB;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode ButtonC;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode ButtonD;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode ButtonE;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode ButtonF;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public KeyCode ButtonG;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public KeyCode ButtonH;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public KeyCode ButtonI;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode ButtonJ;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public KeyCode ButtonK;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public KeyCode ButtonL;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public KeyCode ButtonM;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public KeyCode ButtonN;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode ButtonO;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public KeyCode ButtonP;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA318AC", Offset = "0xA318AC")]
	public KeyCode MovementForward;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public KeyCode MovementBackward;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public KeyCode MovementLeft;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public KeyCode MovementRight;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA318E4", Offset = "0xA318E4")]
	public bool useMouse;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[InputAxis]
	public string MouseHorizontalAxis;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[InputAxis]
	public string MouseVerticalAxis;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public KeyCode RightMovementForward;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public KeyCode RightMovementBackward;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public KeyCode RightMovementLeft;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public KeyCode RightMovementRight;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3193C", Offset = "0xA3193C")]
	public KeyCode TriggerLeft;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public KeyCode TriggerRight;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MouseAndKeyboardConfiguration azertyConfiguration;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MouseAndKeyboardConfiguration dvorakConfiguration;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xD5064C", Offset = "0xD5064C", VA = "0xD5064C")]
	public MouseAndKeyboardConfiguration GetConfiguration()
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xD506E8", Offset = "0xD506E8", VA = "0xD506E8")]
	public KeyCode GetKeyCodeFromVrButton(VrButton button)
	{
		return default(KeyCode);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xD50798", Offset = "0xD50798", VA = "0xD50798")]
	protected bool CheckSpriteExists(string spriteName)
	{
		return default(bool);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xD50830", Offset = "0xD50830", VA = "0xD50830")]
	internal string GetSpriteTagForButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xD50B9C", Offset = "0xD50B9C", VA = "0xD50B9C")]
	public string GetNameOfButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xD50C48", Offset = "0xD50C48", VA = "0xD50C48")]
	public MouseAndKeyboardConfiguration()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2B604", Offset = "0xA2B604")]
public class OculusTouchConfiguration : BaseConfiguration<OVRInput.Button>
{
	[Token(Token = "0x200008A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B664", Offset = "0xA2B664")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OculusTouchConfiguration <>4__this;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string prefix;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string suffix;

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x1E801C8", Offset = "0x1E801C8", VA = "0x1E801C8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x1E80788", Offset = "0x1E80788", VA = "0x1E80788")]
		internal bool <GetSpriteTagForButton>b__0(string x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1E807C4", Offset = "0x1E807C4", VA = "0x1E807C4")]
		internal string <GetSpriteTagForButton>b__1(string x)
		{
			return null;
		}
	}

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31974", Offset = "0xA31974")]
	public OVRInput.Button LeftAnalog;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA319AC", Offset = "0xA319AC")]
	public OVRInput.Button RightAnalog;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA319E4", Offset = "0xA319E4")]
	public OVRInput.Button LeftTriggerAxis;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OVRInput.Button RightTriggerAxis;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1E7FC74", Offset = "0x1E7FC74", VA = "0x1E7FC74")]
	public OVRInput.Button GetOVRInputButtonFromVrButton(VrButton button)
	{
		return default(OVRInput.Button);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1E7FD1C", Offset = "0x1E7FD1C", VA = "0x1E7FD1C")]
	public string GetNameOfButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1E7FF00", Offset = "0x1E7FF00", VA = "0x1E7FF00")]
	protected bool CheckSpriteExists(string spriteName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1E7FFE4", Offset = "0x1E7FFE4", VA = "0x1E7FFE4")]
	public string GetSpriteTagForButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1E801D0", Offset = "0x1E801D0", VA = "0x1E801D0")]
	public string[] GetSpriteNamesForButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1E8070C", Offset = "0x1E8070C", VA = "0x1E8070C")]
	public OculusTouchConfiguration()
	{
	}
}
[Token(Token = "0x200008B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2B674", Offset = "0xA2B674")]
public class OddRavenVrPriorityOrder : ScriptableObject
{
	[Token(Token = "0x200008C")]
	public enum InputType
	{
		[Token(Token = "0x40002DB")]
		KeyboardAndMouse,
		[Token(Token = "0x40002DC")]
		GamePad,
		[Token(Token = "0x40002DD")]
		OculusTouch,
		[Token(Token = "0x40002DE")]
		ViveWand,
		[Token(Token = "0x40002DF")]
		VrWand,
		[Token(Token = "0x40002E0")]
		OculusTouchGamePad,
		[Token(Token = "0x40002E1")]
		GamePadNoOculusTouchOrSteamVR,
		[Token(Token = "0x40002E2")]
		SteamVRGamePad,
		[Token(Token = "0x40002E3")]
		WindowsMRController,
		[Token(Token = "0x40002E4")]
		WindowsMRGamePad,
		[Token(Token = "0x40002E5")]
		ViveCosmos
	}

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA31A1C", Offset = "0xA31A1C")]
	public InputType[] defaultPriorityOrder;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OddRavenVrPriorityOrder singlePlayerPriorityOrder;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canBeOverridden;

	[Token(Token = "0x17000079")]
	public InputType[] priorityOrder
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1E91238", Offset = "0x1E91238", VA = "0x1E91238")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1E92BCC", Offset = "0x1E92BCC", VA = "0x1E92BCC")]
		set
		{
		}
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1E92BD4", Offset = "0x1E92BD4", VA = "0x1E92BD4")]
	public OddRavenVrPriorityOrder()
	{
	}
}
[Token(Token = "0x200008D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2B6D4", Offset = "0xA2B6D4")]
public class PlaystationMoveConfiguration : BaseConfiguration
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31A54", Offset = "0xA31A54")]
	public PS4MoveDevice.PS4MoveButton ButtonA;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PS4MoveDevice.PS4MoveButton ButtonB;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public PS4MoveDevice.PS4MoveButton ButtonC;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PS4MoveDevice.PS4MoveButton ButtonD;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public PS4MoveDevice.PS4MoveButton ButtonE;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PS4MoveDevice.PS4MoveButton ButtonF;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PS4MoveDevice.PS4MoveButton ButtonG;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PS4MoveDevice.PS4MoveButton ButtonH;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PS4MoveDevice.PS4MoveButton ButtonI;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PS4MoveDevice.PS4MoveButton ButtonJ;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public PS4MoveDevice.PS4MoveButton ButtonK;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PS4MoveDevice.PS4MoveButton ButtonL;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public PS4MoveDevice.PS4MoveButton ButtonM;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PS4MoveDevice.PS4MoveButton ButtonN;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public PS4MoveDevice.PS4MoveButton ButtonO;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PS4MoveDevice.PS4MoveButton ButtonP;

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1EAA620", Offset = "0x1EAA620", VA = "0x1EAA620")]
	public PS4MoveDevice.PS4MoveButton GetPS4MoveButtonFromVrButton(VrButton button)
	{
		return default(PS4MoveDevice.PS4MoveButton);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1EAA6C8", Offset = "0x1EAA6C8", VA = "0x1EAA6C8")]
	public string GetNameOfButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1EAA7C0", Offset = "0x1EAA7C0", VA = "0x1EAA7C0")]
	protected bool CheckSpriteExists(string spriteName)
	{
		return default(bool);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1EAA858", Offset = "0x1EAA858", VA = "0x1EAA858")]
	internal string GetSpriteTagForButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1EAAD90", Offset = "0x1EAAD90", VA = "0x1EAAD90")]
	public PlaystationMoveConfiguration()
	{
	}
}
[Token(Token = "0x200008E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2B734", Offset = "0xA2B734")]
public class ViveControllerConfiguration : BaseConfiguration<ViveControllerConfiguration.ViveButton>
{
	[Token(Token = "0x200008F")]
	public enum ViveButton
	{
		[Token(Token = "0x4000301")]
		None = -1,
		[Token(Token = "0x4000302")]
		System = 0,
		[Token(Token = "0x4000303")]
		ApplicationMenu = 1,
		[Token(Token = "0x4000304")]
		Grip = 2,
		[Token(Token = "0x4000305")]
		DPad_Left = 3,
		[Token(Token = "0x4000306")]
		DPad_Up = 4,
		[Token(Token = "0x4000307")]
		DPad_Right = 5,
		[Token(Token = "0x4000308")]
		DPad_Down = 6,
		[Token(Token = "0x4000309")]
		A = 7,
		[Token(Token = "0x400030A")]
		Touchpad = 32,
		[Token(Token = "0x400030B")]
		Trigger = 33,
		[Token(Token = "0x400030C")]
		Axis2 = 34,
		[Token(Token = "0x400030D")]
		Axis3 = 35,
		[Token(Token = "0x400030E")]
		Axis4 = 36,
		[Token(Token = "0x400030F")]
		LeftApplicationMenu = 101,
		[Token(Token = "0x4000310")]
		LeftGrip = 102,
		[Token(Token = "0x4000311")]
		LeftDPad_Left = 103,
		[Token(Token = "0x4000312")]
		LeftDPad_Up = 104,
		[Token(Token = "0x4000313")]
		LeftDPad_Right = 105,
		[Token(Token = "0x4000314")]
		LeftDPad_Down = 106,
		[Token(Token = "0x4000315")]
		LeftA = 107,
		[Token(Token = "0x4000316")]
		LeftTouchpad = 132,
		[Token(Token = "0x4000317")]
		LeftTrigger = 133,
		[Token(Token = "0x4000318")]
		LeftAxis2 = 134,
		[Token(Token = "0x4000319")]
		LeftAxis3 = 135,
		[Token(Token = "0x400031A")]
		LeftAxis4 = 136,
		[Token(Token = "0x400031B")]
		RightApplicationMenu = 201,
		[Token(Token = "0x400031C")]
		RightGrip = 202,
		[Token(Token = "0x400031D")]
		RightDPad_Left = 203,
		[Token(Token = "0x400031E")]
		RightDPad_Up = 204,
		[Token(Token = "0x400031F")]
		RightDPad_Right = 205,
		[Token(Token = "0x4000320")]
		RightDPad_Down = 206,
		[Token(Token = "0x4000321")]
		RightA = 207,
		[Token(Token = "0x4000322")]
		RightTouchpad = 232,
		[Token(Token = "0x4000323")]
		RightTrigger = 233,
		[Token(Token = "0x4000324")]
		RightAxis2 = 234,
		[Token(Token = "0x4000325")]
		RightAxis3 = 235,
		[Token(Token = "0x4000326")]
		RightAxis4 = 236
	}

	[Token(Token = "0x2000090")]
	public enum ViveAxis
	{
		[Token(Token = "0x4000328")]
		Axis0 = 32,
		[Token(Token = "0x4000329")]
		Axis1,
		[Token(Token = "0x400032A")]
		Axis2,
		[Token(Token = "0x400032B")]
		Axis3,
		[Token(Token = "0x400032C")]
		Axis4
	}

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31A8C", Offset = "0xA31A8C")]
	public ViveAxis Horizontal;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ViveAxis Vertical;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool useUnityInputForAnalogStick;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31AC4", Offset = "0xA31AC4")]
	public ViveButton TriggerA;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31AFC", Offset = "0xA31AFC")]
	public bool needsButtonPress;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float deadZone;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float sensitivity;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31B34", Offset = "0xA31B34")]
	public bool isKnuckles;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool isCosmos;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IniFile ini;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1E20B90", Offset = "0x1E20B90", VA = "0x1E20B90", Slot = "4")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1E20EC8", Offset = "0x1E20EC8", VA = "0x1E20EC8")]
	public ViveButton GetButtonIdFromVrButton(VrButton button)
	{
		return default(ViveButton);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1E20F70", Offset = "0x1E20F70", VA = "0x1E20F70")]
	public ulong GetButtonMask(VrButton button)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1E20FA4", Offset = "0x1E20FA4", VA = "0x1E20FA4")]
	public ulong GetButtonMask(ViveButton button)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1E20FC8", Offset = "0x1E20FC8", VA = "0x1E20FC8")]
	public ulong GetSteamVRButton(ViveButton button)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1E20FE0", Offset = "0x1E20FE0", VA = "0x1E20FE0")]
	public string GetNameOfButton(VrButton button)
	{
		return null;
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1E210CC", Offset = "0x1E210CC", VA = "0x1E210CC")]
	protected bool CheckSpriteExists(string spriteName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1E21164", Offset = "0x1E21164", VA = "0x1E21164")]
	public string GetSpriteTagForButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1E21384", Offset = "0x1E21384", VA = "0x1E21384")]
	private string GetKnucklesSpriteTagForButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1E214CC", Offset = "0x1E214CC", VA = "0x1E214CC")]
	private string GetCosmosSpriteTagForButton(VrButton button, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1E21650", Offset = "0x1E21650", VA = "0x1E21650")]
	public ViveControllerConfiguration()
	{
	}
}
[Token(Token = "0x2000091")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B794", Offset = "0xA2B794")]
public class SteamVR_HandGestures : MonoBehaviour
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject controller;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SteamVR_Controller.Device _openVrDevice;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string thumbsUpAnimation;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string pointAnimation;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1EC5B5C", Offset = "0x1EC5B5C", VA = "0x1EC5B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1EC5BCC", Offset = "0x1EC5BCC", VA = "0x1EC5BCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1EC5CC8", Offset = "0x1EC5CC8", VA = "0x1EC5CC8")]
	public SteamVR_HandGestures()
	{
	}
}
[Token(Token = "0x2000092")]
public class ORFmodSetSoundParameter : MonoBehaviour
{
	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter soundEmitter;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string parameter;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float value;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xD55A4C", Offset = "0xD55A4C", VA = "0xD55A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xD55B44", Offset = "0xD55B44", VA = "0xD55B44")]
	public ORFmodSetSoundParameter()
	{
	}
}
[Token(Token = "0x2000093")]
public abstract class BaseManager<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool dontDestroyOnLoad;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T instance;

	[Token(Token = "0x1700007A")]
	public static T Instance
	{
		[Token(Token = "0x600036E")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600036F")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000370")]
	protected virtual void Initialize()
	{
	}

	[Token(Token = "0x6000371")]
	protected BaseManager()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2B7F8", Offset = "0xA2B7F8")]
public class Localization : ScriptableObject, ISerializationCallbackReceiver
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string languageName;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string languageCode;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string isoLanguageCode;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_FontAsset overrideFont;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public int systemLanguagePS4;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public SystemLanguage systemLanguage;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<string, string> strings;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<string> _keys;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<string> _values;

	[Token(Token = "0x1700007B")]
	public string LocalizedName
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x1E38014", Offset = "0x1E38014", VA = "0x1E38014")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1E38044", Offset = "0x1E38044", VA = "0x1E38044")]
	public string GetString(string id)
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1E380F4", Offset = "0x1E380F4", VA = "0x1E380F4")]
	public void SetString(string id, string str)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1E381C4", Offset = "0x1E381C4", VA = "0x1E381C4", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1E3848C", Offset = "0x1E3848C", VA = "0x1E3848C", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1E3861C", Offset = "0x1E3861C", VA = "0x1E3861C")]
	public Localization()
	{
	}
}
[Token(Token = "0x2000095")]
public class LocalizationManager : BaseManager<LocalizationManager>
{
	[Serializable]
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B858", Offset = "0xA2B858")]
	private sealed class <>c
	{
		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Localization, bool> <>9__20_0;

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1E39218", Offset = "0x1E39218", VA = "0x1E39218")]
		public <>c()
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x1E39220", Offset = "0x1E39220", VA = "0x1E39220")]
		internal bool <Initialize>b__20_0(Localization x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Localization[] translations;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fallbackLanguageCode;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool preferSystemLanguageOverFallback;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal Localization fallbackLanguage;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal Localization systemLanguage;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31BAC", Offset = "0xA31BAC")]
	private Localization <currentLanguage>k__BackingField;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action DidChangeLanguage;

	[Token(Token = "0x1700007C")]
	public Localization currentLanguage
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1E386DC", Offset = "0x1E386DC", VA = "0x1E386DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3998C", Offset = "0xA3998C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x1E386E4", Offset = "0x1E386E4", VA = "0x1E386E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3999C", Offset = "0xA3999C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public static Localization CurrentLanguage
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x1E386EC", Offset = "0x1E386EC", VA = "0x1E386EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007E")]
	public static Localization FallbackLanguage
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x1E38788", Offset = "0x1E38788", VA = "0x1E38788")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1E3801C", Offset = "0x1E3801C", VA = "0x1E3801C")]
	public static string GetTranslation(string id)
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1E38A60", Offset = "0x1E38A60", VA = "0x1E38A60")]
	public static string GetTranslation(string id, string languageCode)
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1E38C60", Offset = "0x1E38C60", VA = "0x1E38C60")]
	public static string GetTranslation(string id, Localization localization)
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1E38824", Offset = "0x1E38824", VA = "0x1E38824")]
	internal static string GetTranslation(string id, Localization language, Localization fallbackLanguage)
	{
		return null;
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1E38C64", Offset = "0x1E38C64", VA = "0x1E38C64")]
	public static void SetLanguage(string languageCode)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1E38A88", Offset = "0x1E38A88", VA = "0x1E38A88")]
	public static Localization GetLanguage(string languageCode)
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1E38DF0", Offset = "0x1E38DF0", VA = "0x1E38DF0", Slot = "5")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1E3915C", Offset = "0x1E3915C", VA = "0x1E3915C")]
	public LocalizationManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000097")]
public class LocalizedString
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currentTranslation;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Localization lastLanguage;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1E3928C", Offset = "0x1E3928C", VA = "0x1E3928C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1E39340", Offset = "0x1E39340", VA = "0x1E39340")]
	public static implicit operator string(LocalizedString str)
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1E39370", Offset = "0x1E39370", VA = "0x1E39370")]
	public LocalizedString()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B868", Offset = "0xA2B868")]
public class LocalizedText : MonoBehaviour
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizedString text;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text guiText;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1E39378", Offset = "0x1E39378", VA = "0x1E39378")]
	private void Start()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1E394A0", Offset = "0x1E394A0", VA = "0x1E394A0")]
	private void ChangeText()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1E394FC", Offset = "0x1E394FC", VA = "0x1E394FC")]
	public LocalizedText()
	{
	}
}
[Token(Token = "0x2000099")]
public class LocalizedTextMeshPro : MonoBehaviour
{
	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizedString text;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TMP_Text textMesh;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_FontAsset standardFont;

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1E39504", Offset = "0x1E39504", VA = "0x1E39504")]
	private void Start()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1E396A0", Offset = "0x1E396A0", VA = "0x1E396A0")]
	private void ChangeText()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1E39834", Offset = "0x1E39834", VA = "0x1E39834")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1E3993C", Offset = "0x1E3993C", VA = "0x1E3993C")]
	public LocalizedTextMeshPro()
	{
	}
}
[Token(Token = "0x200009A")]
public class ReplaceInTextMeshPro : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200009B")]
	public class ReplaceString
	{
		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string originalString;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString replaceWith;

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x1EB41C8", Offset = "0x1EB41C8", VA = "0x1EB41C8")]
		public ReplaceString()
		{
		}
	}

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI guiText;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReplaceString[] replaceStrings;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string originalText;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1EB3F88", Offset = "0x1EB3F88", VA = "0x1EB3F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1EB40CC", Offset = "0x1EB40CC", VA = "0x1EB40CC")]
	private void ChangeText()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1EB41C0", Offset = "0x1EB41C0", VA = "0x1EB41C0")]
	public ReplaceInTextMeshPro()
	{
	}
}
[Token(Token = "0x200009C")]
public class OvrFMODGlobalSettings : MonoBehaviour
{
	[Token(Token = "0x4000356")]
	public const string strOSP = "ovrfmod";

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool bypass;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float globalScale;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool dirtyReflection;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool enableReflections;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[SerializeField]
	private bool enableReverb;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 dimensions;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector2 reflectionLeftRight;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector2 reflectionUpDown;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector2 reflectionFrontBack;

	[Token(Token = "0x1700007F")]
	public bool Bypass
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x1E93E40", Offset = "0x1E93E40", VA = "0x1E93E40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x1E93E48", Offset = "0x1E93E48", VA = "0x1E93E48")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public float GlobalScale
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1E93E58", Offset = "0x1E93E58", VA = "0x1E93E58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1E93E60", Offset = "0x1E93E60", VA = "0x1E93E60")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public float Gain
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1E93EEC", Offset = "0x1E93EEC", VA = "0x1E93EEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x1E93EF4", Offset = "0x1E93EF4", VA = "0x1E93EF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public bool EnableReflections
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x1E93F78", Offset = "0x1E93F78", VA = "0x1E93F78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1E93F80", Offset = "0x1E93F80", VA = "0x1E93F80")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public bool EnableReverb
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1E93F94", Offset = "0x1E93F94", VA = "0x1E93F94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1E93F9C", Offset = "0x1E93F9C", VA = "0x1E93F9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public Vector3 Dimensions
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1E93FB0", Offset = "0x1E93FB0", VA = "0x1E93FB0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1E93FBC", Offset = "0x1E93FBC", VA = "0x1E93FBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public Vector2 ReflectionLeftRight
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1E940A0", Offset = "0x1E940A0", VA = "0x1E940A0")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1E940A8", Offset = "0x1E940A8", VA = "0x1E940A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public Vector2 ReflectionUpDown
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1E94160", Offset = "0x1E94160", VA = "0x1E94160")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1E94168", Offset = "0x1E94168", VA = "0x1E94168")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public Vector2 ReflectionFrontBack
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1E94220", Offset = "0x1E94220", VA = "0x1E94220")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1E94228", Offset = "0x1E94228", VA = "0x1E94228")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1E93950", Offset = "0x1E93950", VA = "0x1E93950")]
	private static extern bool OSP_FMOD_Initialize(int SampleRate, int BufferLength);

	[PreserveSig]
	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1E93A04", Offset = "0x1E93A04", VA = "0x1E93A04")]
	private static extern bool OSP_FMOD_SetBypass(bool Enabled);

	[PreserveSig]
	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1E93AA8", Offset = "0x1E93AA8", VA = "0x1E93AA8")]
	private static extern bool OSP_FMOD_SetGain(float Gain_dB);

	[PreserveSig]
	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1E93B50", Offset = "0x1E93B50", VA = "0x1E93B50")]
	private static extern bool OSP_FMOD_SetGlobalScale(float Scale);

	[PreserveSig]
	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1E93BF8", Offset = "0x1E93BF8", VA = "0x1E93BF8")]
	private static extern bool OSP_FMOD_SetEarlyReflectionsEnabled(bool Enabled);

	[PreserveSig]
	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1E93C9C", Offset = "0x1E93C9C", VA = "0x1E93C9C")]
	private static extern bool OSP_FMOD_SetLateReverberationEnabled(bool Enabled);

	[PreserveSig]
	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1E93D40", Offset = "0x1E93D40", VA = "0x1E93D40")]
	private static extern bool OSP_FMOD_SetSimpleBoxRoomParameters(float Width, float Height, float Depth, float RefLeft, float RefRight, float RefUp, float RefDown, float RefBehind, float RefFront);

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1E942E0", Offset = "0x1E942E0", VA = "0x1E942E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1E94418", Offset = "0x1E94418", VA = "0x1E94418")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1E943C4", Offset = "0x1E943C4", VA = "0x1E943C4")]
	private void UpdateReflections()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1E94428", Offset = "0x1E94428", VA = "0x1E94428")]
	public OvrFMODGlobalSettings()
	{
	}
}
[Token(Token = "0x200009D")]
public class FogParticleController : MonoBehaviour
{
	[Token(Token = "0x200009E")]
	private struct Particle
	{
		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 velocity;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 color;
	}

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ComputeShader ParticleCalculation;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material ParticleMaterial;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int NumParticles;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 size;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float particleSize;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 direction;

	[Token(Token = "0x4000367")]
	private const int c_groupSize = 128;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_updateParticlesKernel;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ComputeBuffer m_particlesBuffer;

	[Token(Token = "0x400036A")]
	private const int c_particleStride = 36;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ComputeBuffer m_quadPoints;

	[Token(Token = "0x400036C")]
	private const int c_quadStride = 12;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastPosition;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xB9F830", Offset = "0xB9F830", VA = "0xB9F830")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xB9FD48", Offset = "0xB9FD48", VA = "0xB9FD48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xB9FD98", Offset = "0xB9FD98", VA = "0xB9FD98")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xBA0128", Offset = "0xBA0128", VA = "0xBA0128")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xBA025C", Offset = "0xBA025C", VA = "0xBA025C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xBA02AC", Offset = "0xBA02AC", VA = "0xBA02AC")]
	public FogParticleController()
	{
	}
}
[Token(Token = "0x200009F")]
public class PlayerPrefsFile : IniFile
{
	[Token(Token = "0x17000088")]
	protected override bool PathIsFile
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x1EA9230", Offset = "0x1EA9230", VA = "0x1EA9230", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1EA9238", Offset = "0x1EA9238", VA = "0x1EA9238")]
	public PlayerPrefsFile(string name)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1EA9240", Offset = "0x1EA9240", VA = "0x1EA9240", Slot = "12")]
	protected override string[] GetContents()
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1EA931C", Offset = "0x1EA931C", VA = "0x1EA931C", Slot = "14")]
	protected override void WriteToDisk(string s)
	{
	}
}
[Token(Token = "0x20000A0")]
public class TrackedPlayStationDevices : MonoBehaviour
{
	[Token(Token = "0x20000A1")]
	public enum TrackedDevicesType
	{
		[Token(Token = "0x4000377")]
		DualShock4 = 1,
		[Token(Token = "0x4000378")]
		Aim = 2,
		[Token(Token = "0x4000379")]
		Move = 4
	}

	[Serializable]
	[Token(Token = "0x20000A2")]
	public class TrackedDevice
	{
		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int handle;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer light;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion orientation;

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x1DF5094", Offset = "0x1DF5094", VA = "0x1DF5094")]
		public TrackedDevice()
		{
		}
	}

	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B8CC", Offset = "0xA2B8CC")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackedPlayStationDevices <>4__this;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D0")]
			[Address(RVA = "0x1DF501C", Offset = "0x1DF501C", VA = "0x1DF501C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0x1DF508C", Offset = "0x1DF508C", VA = "0x1DF508C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x1DF47AC", Offset = "0x1DF47AC", VA = "0x1DF47AC")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1DF4CC4", Offset = "0x1DF4CC4", VA = "0x1DF4CC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1DF4CC8", Offset = "0x1DF4CC8", VA = "0x1DF4CC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1DF5024", Offset = "0x1DF5024", VA = "0x1DF5024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B8DC", Offset = "0xA2B8DC")]
	private sealed class <RegisterDualShock4Controller>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x1DF4B94", Offset = "0x1DF4B94", VA = "0x1DF4B94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x1DF4C04", Offset = "0x1DF4C04", VA = "0x1DF4C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1DF4AE0", Offset = "0x1DF4AE0", VA = "0x1DF4AE0")]
		[DebuggerHidden]
		public <RegisterDualShock4Controller>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1DF4B54", Offset = "0x1DF4B54", VA = "0x1DF4B54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1DF4B58", Offset = "0x1DF4B58", VA = "0x1DF4B58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1DF4B9C", Offset = "0x1DF4B9C", VA = "0x1DF4B9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B8EC", Offset = "0xA2B8EC")]
	private sealed class <RegisterMoveControllers>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0x1DF4C4C", Offset = "0x1DF4C4C", VA = "0x1DF4C4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x1DF4CBC", Offset = "0x1DF4CBC", VA = "0x1DF4CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1DF4B0C", Offset = "0x1DF4B0C", VA = "0x1DF4B0C")]
		[DebuggerHidden]
		public <RegisterMoveControllers>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1DF4C0C", Offset = "0x1DF4C0C", VA = "0x1DF4C0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1DF4C10", Offset = "0x1DF4C10", VA = "0x1DF4C10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x1DF4C54", Offset = "0x1DF4C54", VA = "0x1DF4C54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackedDevicesType trackedDevicesType;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackedDevice deviceDualShock4;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrackedDevice deviceAim;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrackedDevice deviceMovePrimary;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrackedDevice deviceMoveSecondary;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1DF4738", Offset = "0x1DF4738", VA = "0x1DF4738")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA399AC", Offset = "0xA399AC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1DF47D8", Offset = "0x1DF47D8", VA = "0x1DF47D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1DF4870", Offset = "0x1DF4870", VA = "0x1DF4870")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1DF499C", Offset = "0x1DF499C", VA = "0x1DF499C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1DF49A0", Offset = "0x1DF49A0", VA = "0x1DF49A0")]
	public void ResetDeviceTracking()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1DF4864", Offset = "0x1DF4864", VA = "0x1DF4864")]
	private void UpdateDualShock4Transforms()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x1DF4868", Offset = "0x1DF4868", VA = "0x1DF4868")]
	private void UpdateAimTransforms()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1DF486C", Offset = "0x1DF486C", VA = "0x1DF486C")]
	private void UpdateMoveTransforms()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1DF49C4", Offset = "0x1DF49C4", VA = "0x1DF49C4")]
	public void RegisterDevices()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1DF4A20", Offset = "0x1DF4A20", VA = "0x1DF4A20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39A10", Offset = "0xA39A10")]
	private IEnumerator RegisterDualShock4Controller()
	{
		return null;
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1DF4A80", Offset = "0x1DF4A80", VA = "0x1DF4A80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39A74", Offset = "0xA39A74")]
	private IEnumerator RegisterMoveControllers()
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1DF4874", Offset = "0x1DF4874", VA = "0x1DF4874")]
	public void UnregisterDevices()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1DF4B38", Offset = "0x1DF4B38", VA = "0x1DF4B38")]
	private void UnregisterDualShock4()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1DF4B3C", Offset = "0x1DF4B3C", VA = "0x1DF4B3C")]
	private void UnregisterAimController()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1DF4B40", Offset = "0x1DF4B40", VA = "0x1DF4B40")]
	private void UnregisterMoveControllers()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1DF4B44", Offset = "0x1DF4B44", VA = "0x1DF4B44")]
	public TrackedPlayStationDevices()
	{
	}
}
[Token(Token = "0x20000A6")]
public class VRDeviceNames
{
	[Token(Token = "0x4000387")]
	public const string None = "None";

	[Token(Token = "0x4000388")]
	public const string Unknown = "Unknown";

	[Token(Token = "0x4000389")]
	public const string Oculus = "Oculus";

	[Token(Token = "0x400038A")]
	public const string PlayStationVR = "PlayStationVR";

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1DF9640", Offset = "0x1DF9640", VA = "0x1DF9640")]
	public VRDeviceNames()
	{
	}
}
[Token(Token = "0x20000A7")]
public class VRManager : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	public enum ShowSocialScreen
	{
		[Token(Token = "0x4000392")]
		Auto,
		[Token(Token = "0x4000393")]
		Yes,
		[Token(Token = "0x4000394")]
		No
	}

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float renderScale;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ShowSocialScreen dedicatedSocialScreen;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoStart;

	[NonSerialized]
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool adaptiveResolution;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color minOutputColor;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRManager _instance;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1DF9D8C", Offset = "0x1DF9D8C", VA = "0x1DF9D8C")]
	public VRManager()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ReleaseWearable : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform WearableAnchorPoint;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Wearable;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ushort VibrationAmount;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform OldParent;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 OldScale;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ReleaseWearable instance;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1EB38F8", Offset = "0x1EB38F8", VA = "0x1EB38F8")]
	public void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1EB39C0", Offset = "0x1EB39C0", VA = "0x1EB39C0")]
	public void SetWearable(GameObject wearable)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1EB3BE4", Offset = "0x1EB3BE4", VA = "0x1EB3BE4")]
	public void RemoveWearable()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1EB3C94", Offset = "0x1EB3C94", VA = "0x1EB3C94")]
	public ReleaseWearable()
	{
	}
}
[Token(Token = "0x20000AA")]
public static class RGVersion
{
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string version;
}
[Token(Token = "0x20000AB")]
public class ActivateComponentAfterDelay : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Behaviour component;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float time;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB858E4", Offset = "0xB858E4", VA = "0xB858E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB85928", Offset = "0xB85928", VA = "0xB85928")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB859F0", Offset = "0xB859F0", VA = "0xB859F0")]
	public ActivateComponentAfterDelay()
	{
	}
}
[Token(Token = "0x20000AC")]
public class ActivateComponentOnLevelTime : MonoBehaviour
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Behaviour component;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int levelTimeCycle;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int activateAt;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xB862E0", Offset = "0xB862E0", VA = "0xB862E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xB86390", Offset = "0xB86390", VA = "0xB86390")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xB8647C", Offset = "0xB8647C", VA = "0xB8647C")]
	public ActivateComponentOnLevelTime()
	{
	}
}
[Token(Token = "0x20000AD")]
public class AddForceOnCollision : MonoBehaviour
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 force;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool relativeToForward;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool cancelOutGravity;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string onTag;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xB89AD0", Offset = "0xB89AD0", VA = "0xB89AD0")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xB89D30", Offset = "0xB89D30", VA = "0xB89D30")]
	public AddForceOnCollision()
	{
	}
}
[Token(Token = "0x20000AE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B8FC", Offset = "0xA2B8FC")]
public class AnimatedSprite : MonoBehaviour
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] frames;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentFrame;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer r;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xB8BB2C", Offset = "0xB8BB2C", VA = "0xB8BB2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xB8BBA8", Offset = "0xB8BBA8", VA = "0xB8BBA8")]
	private void NextFrame()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xB8BCC0", Offset = "0xB8BCC0", VA = "0xB8BCC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xB8BCC4", Offset = "0xB8BCC4", VA = "0xB8BCC4")]
	public AnimatedSprite()
	{
	}
}
[Token(Token = "0x20000AF")]
public class AnimateLocalScale : MonoBehaviour
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 targetScale;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB8B514", Offset = "0xB8B514", VA = "0xB8B514")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xB8B518", Offset = "0xB8B518", VA = "0xB8B518")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xB8B6E8", Offset = "0xB8B6E8", VA = "0xB8B6E8")]
	public AnimateLocalScale()
	{
	}
}
[Token(Token = "0x20000B0")]
public class BlockingAction : StateMachineBehaviour
{
	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1E45EEC", Offset = "0x1E45EEC", VA = "0x1E45EEC", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1E45F4C", Offset = "0x1E45F4C", VA = "0x1E45F4C", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1E45FAC", Offset = "0x1E45FAC", VA = "0x1E45FAC")]
	public BlockingAction()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ClimbLedge : StateMachineBehaviour
{
	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1E5DCE0", Offset = "0x1E5DCE0", VA = "0x1E5DCE0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1E5DD40", Offset = "0x1E5DD40", VA = "0x1E5DD40")]
	public ClimbLedge()
	{
	}
}
[Token(Token = "0x20000B2")]
public class PlayParticles : StateMachineBehaviour
{
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stateEnterParticles;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject stateExitParticles;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 positionOffset;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string attachToTransform;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem stateEnterParticleSystem;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem stateExitParticleSystem;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1EA0D24", Offset = "0x1EA0D24", VA = "0x1EA0D24", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1EA1038", Offset = "0x1EA1038", VA = "0x1EA1038", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1EA134C", Offset = "0x1EA134C", VA = "0x1EA134C")]
	public PlayParticles()
	{
	}
}
[Token(Token = "0x20000B3")]
public class PlaySound : StateMachineBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stateEnterSound;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject stateExitSound;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ORFmodStudioEventEmitter stateEnterSoundEmitter;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ORFmodStudioEventEmitter stateExitSoundEmitter;

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1EA179C", Offset = "0x1EA179C", VA = "0x1EA179C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1EA1958", Offset = "0x1EA1958", VA = "0x1EA1958", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1EA1B14", Offset = "0x1EA1B14", VA = "0x1EA1B14")]
	public PlaySound()
	{
	}
}
[Token(Token = "0x20000B4")]
public class SetFacialExpression : StateMachineBehaviour
{
	[Serializable]
	[Token(Token = "0x20000B5")]
	public struct ExpressionProbability
	{
		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CarlyFacialExpressions.Expression expression;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA31C4C", Offset = "0xA31C4C")]
		public float probability;
	}

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExpressionProbability[] changeToExpressionOnEnter;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExpressionProbability[] changeToExpressionOnExit;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fallbackToDefaultExpression;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1E66910", Offset = "0x1E66910", VA = "0x1E66910", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1E66AD4", Offset = "0x1E66AD4", VA = "0x1E66AD4", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1E66CB4", Offset = "0x1E66CB4", VA = "0x1E66CB4")]
	public SetFacialExpression()
	{
	}
}
[Token(Token = "0x20000B6")]
public class SetIdleIndex : StateMachineBehaviour
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int idleCount;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1E66EA0", Offset = "0x1E66EA0", VA = "0x1E66EA0", Slot = "9")]
	public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1E66F28", Offset = "0x1E66F28", VA = "0x1E66F28")]
	public SetIdleIndex()
	{
	}
}
[Token(Token = "0x20000B7")]
public class SetSoundParameter : StateMachineBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter soundEmitter;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string parameter;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float value;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool stopAtStateExit;

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1E6A514", Offset = "0x1E6A514", VA = "0x1E6A514", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1E6A60C", Offset = "0x1E6A60C", VA = "0x1E6A60C", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1E6A6AC", Offset = "0x1E6A6AC", VA = "0x1E6A6AC")]
	public SetSoundParameter()
	{
	}
}
[Token(Token = "0x20000B8")]
public class AppearingObject : MonoBehaviour
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateMachine stateMachine;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string state;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float appearTime;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool appearing;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool appeared;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer m_Renderer;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider m_Collider;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float opacity;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xB8C5E8", Offset = "0xB8C5E8", VA = "0xB8C5E8")]
	public void SetOpacity(float opacity)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xB8CB84", Offset = "0xB8CB84", VA = "0xB8CB84")]
	private void Start()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB8CCA8", Offset = "0xB8CCA8", VA = "0xB8CCA8")]
	private void Appear()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xB8CD4C", Offset = "0xB8CD4C", VA = "0xB8CD4C")]
	private void Respawn()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xB8CE80", Offset = "0xB8CE80", VA = "0xB8CE80")]
	private void Update()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xB8CFCC", Offset = "0xB8CFCC", VA = "0xB8CFCC")]
	public AppearingObject()
	{
	}
}
[Token(Token = "0x20000B9")]
public class AutoSelectInput : MonoBehaviour
{
	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Behaviour joyStick;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Behaviour fallback;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xB8FD98", Offset = "0xB8FD98", VA = "0xB8FD98")]
	private void Start()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB8FEC4", Offset = "0xB8FEC4", VA = "0xB8FEC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xB8FEC8", Offset = "0xB8FEC8", VA = "0xB8FEC8")]
	public AutoSelectInput()
	{
	}
}
[Token(Token = "0x20000BA")]
public class BinaryFormatter
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected ISurrogateSelector m_SurrogateSelector;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected StreamingContext m_Context;

	[Token(Token = "0x1700008F")]
	public virtual ISurrogateSelector surrogateSelector
	{
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x1E40898", Offset = "0x1E40898", VA = "0x1E40898", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x1E408A0", Offset = "0x1E408A0", VA = "0x1E408A0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public virtual StreamingContext context
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1E408A8", Offset = "0x1E408A8", VA = "0x1E408A8", Slot = "6")]
		get
		{
			return default(StreamingContext);
		}
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1E408B4", Offset = "0x1E408B4", VA = "0x1E408B4", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1E408BC", Offset = "0x1E408BC", VA = "0x1E408BC")]
	public BinaryFormatter()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1E40914", Offset = "0x1E40914", VA = "0x1E40914")]
	public BinaryFormatter(ISurrogateSelector selector, StreamingContext context)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1E40954", Offset = "0x1E40954", VA = "0x1E40954")]
	public byte[] Serialize(object value)
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1E40AAC", Offset = "0x1E40AAC", VA = "0x1E40AAC")]
	public void Serialize(Stream output, object value)
	{
	}

	[Token(Token = "0x6000419")]
	public T Deserialize<T>(Stream input)
	{
		return (T)null;
	}

	[Token(Token = "0x600041A")]
	public T Deserialize<T>(byte[] buffer)
	{
		return (T)null;
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1E40CA8", Offset = "0x1E40CA8", VA = "0x1E40CA8")]
	public object Deserialize(byte[] buffer, Type type)
	{
		return null;
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1E40DE8", Offset = "0x1E40DE8", VA = "0x1E40DE8")]
	public object Deserialize(Stream input, Type type)
	{
		return null;
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1E40FE0", Offset = "0x1E40FE0", VA = "0x1E40FE0")]
	public static byte[] SerializeObject(object value)
	{
		return null;
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1E4104C", Offset = "0x1E4104C", VA = "0x1E4104C")]
	public static void SerializeObject(Stream output, object value)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1E410C8", Offset = "0x1E410C8", VA = "0x1E410C8")]
	public static object DeserializeObject(byte[] buffer, Type type)
	{
		return null;
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1E41144", Offset = "0x1E41144", VA = "0x1E41144")]
	public static object DeserializeObject(Stream input, Type type)
	{
		return null;
	}
}
[Token(Token = "0x20000BB")]
public class BinaryObjectReader : IDisposable
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected BinaryReader m_Reader;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ISurrogateSelector m_SurrogateSelector;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected StreamingContext m_Context;

	[Token(Token = "0x17000091")]
	public virtual BinaryReader reader
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1E411C0", Offset = "0x1E411C0", VA = "0x1E411C0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000092")]
	public virtual ISurrogateSelector surrogateSelector
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1E411C8", Offset = "0x1E411C8", VA = "0x1E411C8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x1E411D0", Offset = "0x1E411D0", VA = "0x1E411D0", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public virtual StreamingContext context
	{
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x1E411D8", Offset = "0x1E411D8", VA = "0x1E411D8", Slot = "8")]
		get
		{
			return default(StreamingContext);
		}
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x1E411E4", Offset = "0x1E411E4", VA = "0x1E411E4", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1E411EC", Offset = "0x1E411EC", VA = "0x1E411EC")]
	public BinaryObjectReader(Stream stream)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1E4123C", Offset = "0x1E4123C", VA = "0x1E4123C")]
	public BinaryObjectReader(BinaryReader reader)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1E40F4C", Offset = "0x1E40F4C", VA = "0x1E40F4C")]
	public BinaryObjectReader(Stream stream, ISurrogateSelector selector, StreamingContext context)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1E41298", Offset = "0x1E41298", VA = "0x1E41298")]
	public BinaryObjectReader(BinaryReader reader, ISurrogateSelector selector, StreamingContext context)
	{
	}

	[Token(Token = "0x600042A")]
	public virtual T Read<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1E412E4", Offset = "0x1E412E4", VA = "0x1E412E4", Slot = "11")]
	public virtual object Read(Type type)
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1E42584", Offset = "0x1E42584", VA = "0x1E42584", Slot = "12")]
	protected virtual object ReadObject(Type type)
	{
		return null;
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1E42A00", Offset = "0x1E42A00", VA = "0x1E42A00", Slot = "13")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20000BC")]
public class BinaryObjectWriter : IDisposable
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected BinaryWriter m_Writer;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ISurrogateSelector m_SurrogateSelector;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected StreamingContext m_Context;

	[Token(Token = "0x17000094")]
	public virtual BinaryWriter writer
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1E42A18", Offset = "0x1E42A18", VA = "0x1E42A18", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000095")]
	public virtual ISurrogateSelector surrogateSelector
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1E42A20", Offset = "0x1E42A20", VA = "0x1E42A20", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1E42A28", Offset = "0x1E42A28", VA = "0x1E42A28", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public virtual StreamingContext context
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1E42A30", Offset = "0x1E42A30", VA = "0x1E42A30", Slot = "8")]
		get
		{
			return default(StreamingContext);
		}
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1E42A3C", Offset = "0x1E42A3C", VA = "0x1E42A3C", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1E42A44", Offset = "0x1E42A44", VA = "0x1E42A44")]
	public BinaryObjectWriter(Stream stream)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1E42B30", Offset = "0x1E42B30", VA = "0x1E42B30")]
	public BinaryObjectWriter(BinaryWriter writer)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1E40C14", Offset = "0x1E40C14", VA = "0x1E40C14")]
	public BinaryObjectWriter(Stream stream, ISurrogateSelector selector, StreamingContext context)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1E42AE4", Offset = "0x1E42AE4", VA = "0x1E42AE4")]
	public BinaryObjectWriter(BinaryWriter writer, ISurrogateSelector selector, StreamingContext context)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1E42B8C", Offset = "0x1E42B8C", VA = "0x1E42B8C", Slot = "10")]
	public virtual void Write(object value)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1E43DA0", Offset = "0x1E43DA0", VA = "0x1E43DA0", Slot = "11")]
	protected virtual void WriteObject(object value, Type type)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1E441E0", Offset = "0x1E441E0", VA = "0x1E441E0", Slot = "12")]
	protected virtual void WriteSerializationInfo(SerializationInfo info)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1E442B4", Offset = "0x1E442B4", VA = "0x1E442B4", Slot = "13")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20000BD")]
public class BonusDoor : MonoBehaviour
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject player;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA31C68", Offset = "0xA31C68")]
	public string bonusLevel;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1E46584", Offset = "0x1E46584", VA = "0x1E46584")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1E46610", Offset = "0x1E46610", VA = "0x1E46610")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1E46998", Offset = "0x1E46998", VA = "0x1E46998")]
	public BonusDoor()
	{
	}
}
[Token(Token = "0x20000BE")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B960", Offset = "0xA2B960")]
	private sealed class <StartAlphaFadeAsync>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeIn;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeTime;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fadeVr;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool fadeScreen;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool forceFade;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044A")]
			[Address(RVA = "0x1E4CD50", Offset = "0x1E4CD50", VA = "0x1E4CD50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044C")]
			[Address(RVA = "0x1E4CDC0", Offset = "0x1E4CDC0", VA = "0x1E4CDC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x1E4C808", Offset = "0x1E4C808", VA = "0x1E4C808")]
		[DebuggerHidden]
		public <StartAlphaFadeAsync>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x1E4CBE4", Offset = "0x1E4CBE4", VA = "0x1E4CBE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x1E4CBE8", Offset = "0x1E4CBE8", VA = "0x1E4CBE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x1E4CD58", Offset = "0x1E4CD58", VA = "0x1E4CD58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2B970", Offset = "0xA2B970")]
	private sealed class <DoFade>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeIn;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool fadeVr;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeTime;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool forceFade;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <failSafe>5__2;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000450")]
			[Address(RVA = "0x1E4CB6C", Offset = "0x1E4CB6C", VA = "0x1E4CB6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0x1E4CBDC", Offset = "0x1E4CBDC", VA = "0x1E4CBDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x1E4C834", Offset = "0x1E4C834", VA = "0x1E4C834")]
		[DebuggerHidden]
		public <DoFade>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1E4C86C", Offset = "0x1E4C86C", VA = "0x1E4C86C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1E4C870", Offset = "0x1E4C870", VA = "0x1E4C870", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1E4CB74", Offset = "0x1E4CB74", VA = "0x1E4CB74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image fadeTarget;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CameraFade mInstance;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VRCameraFade cameraFade;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isFading;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool fadingIn;

	[Token(Token = "0x17000097")]
	private static CameraFade instance
	{
		[Token(Token = "0x600043E")]
		[Address(RVA = "0x1E4BDA8", Offset = "0x1E4BDA8", VA = "0x1E4BDA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public static Image FadeTarget
	{
		[Token(Token = "0x6000440")]
		[Address(RVA = "0x1E4C470", Offset = "0x1E4C470", VA = "0x1E4C470")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1E4BFC8", Offset = "0x1E4BFC8", VA = "0x1E4BFC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1E4C0BC", Offset = "0x1E4C0BC", VA = "0x1E4C0BC")]
	private void Init()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1E4C4E0", Offset = "0x1E4C4E0", VA = "0x1E4C4E0")]
	public static void StartAlphaFade(bool fadeIn, float fadeTime, bool fadeVr = true, bool fadeScreen = true, bool forceFade = false)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1E4C704", Offset = "0x1E4C704", VA = "0x1E4C704")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39BC8", Offset = "0xA39BC8")]
	public static IEnumerator StartAlphaFadeAsync(bool fadeIn, float fadeTime, bool fadeVr = true, bool fadeScreen = true, bool forceFade = false)
	{
		return null;
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1E4C628", Offset = "0x1E4C628", VA = "0x1E4C628")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39C2C", Offset = "0xA39C2C")]
	public IEnumerator DoFade(bool fadeIn, float fadeTime, bool fadeVr = true, bool fadeScreen = true, bool forceFade = false)
	{
		return null;
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1E4C860", Offset = "0x1E4C860", VA = "0x1E4C860")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x20000C1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B980", Offset = "0xA2B980")]
public class CameraShakeWhileClose : MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float magnitude;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float time;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float wearOff;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31C7C", Offset = "0xA31C7C")]
	public bool screenControllerVibration;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float screenControllerVibrationForce;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool vrControllerVibration;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float vrControllerVibrationForce;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float radius;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OddRavenCharacterInput screenInput;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_GrabbingController[] vrInputs;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1E4CE74", Offset = "0x1E4CE74", VA = "0x1E4CE74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1E4CFCC", Offset = "0x1E4CFCC", VA = "0x1E4CFCC")]
	private void UpdateDevices()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1E4D054", Offset = "0x1E4D054", VA = "0x1E4D054")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1E4D174", Offset = "0x1E4D174", VA = "0x1E4D174")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1E4D3AC", Offset = "0x1E4D3AC", VA = "0x1E4D3AC")]
	public CameraShakeWhileClose()
	{
	}
}
[Token(Token = "0x20000C2")]
public class DepthDebug : PostEffectsBase
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader debugShader;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material debugMaterial;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xAB5028", Offset = "0xAB5028", VA = "0xAB5028", Slot = "4")]
	public override bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xAB508C", Offset = "0xAB508C", VA = "0xAB508C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xAB5158", Offset = "0xAB5158", VA = "0xAB5158")]
	public DepthDebug()
	{
	}
}
[Token(Token = "0x20000C3")]
public class FixCamera : MonoBehaviour
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform anchorPoint;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform lookAt;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool skipIfAlreadyFixed;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xAC8A08", Offset = "0xAC8A08", VA = "0xAC8A08")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xAC8BA0", Offset = "0xAC8BA0", VA = "0xAC8BA0")]
	public FixCamera()
	{
	}
}
[Token(Token = "0x20000C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2B9E4", Offset = "0xA2B9E4")]
public class FixedFPSCamera : MonoBehaviour
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fixFPS;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fps;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isMoving;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture texture;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RawImage renderTarget;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float frameTime;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastFps;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTextureFormat textureFormat;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTextureFormat[] textureFormats;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Resolution lastResolution;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float time;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion lastRotation;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Resolution lastScreenResolution;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastScreenRenderRatio;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xAC8BA8", Offset = "0xAC8BA8", VA = "0xAC8BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xAC8E54", Offset = "0xAC8E54", VA = "0xAC8E54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xAC8BAC", Offset = "0xAC8BAC", VA = "0xAC8BAC")]
	private void Init()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xAC9028", Offset = "0xAC9028", VA = "0xAC9028")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xAC8E58", Offset = "0xAC8E58", VA = "0xAC8E58")]
	private void SetResolution(Resolution resolution)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xAC914C", Offset = "0xAC914C", VA = "0xAC914C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xAC93FC", Offset = "0xAC93FC", VA = "0xAC93FC")]
	private void UpdateScreenSettingsIfNeeded()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xAC9564", Offset = "0xAC9564", VA = "0xAC9564")]
	public FixedFPSCamera()
	{
	}
}
[Token(Token = "0x20000C5")]
public class LevelColorCorrection : MonoBehaviour
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture3D converted3DLut;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string basedOnTempTex;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool applyToVr;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool applyToScreen;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1E2B520", Offset = "0x1E2B520", VA = "0x1E2B520")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1E2B5B0", Offset = "0x1E2B5B0", VA = "0x1E2B5B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1E2B698", Offset = "0x1E2B698", VA = "0x1E2B698")]
	public bool ValidDimensions(Texture2D tex2d)
	{
		return default(bool);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1E2B79C", Offset = "0x1E2B79C", VA = "0x1E2B79C")]
	public void Convert(Texture2D temp2DTex, string path)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1E2BACC", Offset = "0x1E2BACC", VA = "0x1E2BACC")]
	public LevelColorCorrection()
	{
	}
}
[Token(Token = "0x20000C6")]
public class LoadingScene : MonoBehaviour
{
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BA48", Offset = "0xA2BA48")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <time>5__2;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera[] <cameras>5__3;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__4;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000471")]
			[Address(RVA = "0x1E36230", Offset = "0x1E36230", VA = "0x1E36230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000473")]
			[Address(RVA = "0x1E362A0", Offset = "0x1E362A0", VA = "0x1E362A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1E35B60", Offset = "0x1E35B60", VA = "0x1E35B60")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x1E35BF8", Offset = "0x1E35BF8", VA = "0x1E35BF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x1E35BFC", Offset = "0x1E35BFC", VA = "0x1E35BFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x1E36238", Offset = "0x1E36238", VA = "0x1E36238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Sprite[] images;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Color backgroundColor;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float minimumTime;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string scene;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1E35B00", Offset = "0x1E35B00", VA = "0x1E35B00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39D30", Offset = "0xA39D30")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1E35B8C", Offset = "0x1E35B8C", VA = "0x1E35B8C")]
	public LoadingScene()
	{
	}
}
[Token(Token = "0x20000C8")]
public class LoadingScreen : MonoBehaviour
{
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BA58", Offset = "0xA2BA58")]
	private sealed class <Show>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreen <>4__this;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite sprite;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color backgroundColor;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600047D")]
			[Address(RVA = "0x1E36A58", Offset = "0x1E36A58", VA = "0x1E36A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600047F")]
			[Address(RVA = "0x1E36AC8", Offset = "0x1E36AC8", VA = "0x1E36AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1E36490", Offset = "0x1E36490", VA = "0x1E36490")]
		[DebuggerHidden]
		public <Show>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1E368A4", Offset = "0x1E368A4", VA = "0x1E368A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x1E368A8", Offset = "0x1E368A8", VA = "0x1E368A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x1E36A60", Offset = "0x1E36A60", VA = "0x1E36A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BA68", Offset = "0xA2BA68")]
	private sealed class <Hide>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreen <>4__this;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0x1E3682C", Offset = "0x1E3682C", VA = "0x1E3682C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0x1E3689C", Offset = "0x1E3689C", VA = "0x1E3689C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x1E366D8", Offset = "0x1E366D8", VA = "0x1E366D8")]
		[DebuggerHidden]
		public <Hide>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x1E36714", Offset = "0x1E36714", VA = "0x1E36714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x1E36718", Offset = "0x1E36718", VA = "0x1E36718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x1E36834", Offset = "0x1E36834", VA = "0x1E36834", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image image;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image backgroundImage;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal bool isVisible;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float elapsedTime;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextMeshProUGUI loadingText;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int loadingTextLength;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1E362A8", Offset = "0x1E362A8", VA = "0x1E362A8", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1E363A4", Offset = "0x1E363A4", VA = "0x1E363A4", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39DE4", Offset = "0xA39DE4")]
	public virtual IEnumerator Show(Sprite sprite, Color backgroundColor, float duration = 0.25f)
	{
		return null;
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1E364BC", Offset = "0x1E364BC", VA = "0x1E364BC", Slot = "6")]
	public virtual void SetImage(Sprite sprite)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1E36568", Offset = "0x1E36568", VA = "0x1E36568")]
	private void Update()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x1E36640", Offset = "0x1E36640", VA = "0x1E36640", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39E48", Offset = "0xA39E48")]
	public virtual IEnumerator Hide(float duration = 0.25f)
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1E36704", Offset = "0x1E36704", VA = "0x1E36704")]
	public LoadingScreen()
	{
	}
}
[Token(Token = "0x20000CB")]
public class LoadingScreenManager : MonoBehaviour
{
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BA78", Offset = "0xA2BA78")]
	private sealed class <LoadSceneWithLoadingScreen>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scene;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600048F")]
			[Address(RVA = "0x1E371F0", Offset = "0x1E371F0", VA = "0x1E371F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000491")]
			[Address(RVA = "0x1E37260", Offset = "0x1E37260", VA = "0x1E37260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x1E36C68", Offset = "0x1E36C68", VA = "0x1E36C68")]
		[DebuggerHidden]
		public <LoadSceneWithLoadingScreen>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x1E36F6C", Offset = "0x1E36F6C", VA = "0x1E36F6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x1E36F70", Offset = "0x1E36F70", VA = "0x1E36F70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x1E371F8", Offset = "0x1E371F8", VA = "0x1E371F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BA88", Offset = "0xA2BA88")]
	private sealed class <LoadSteam>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scene;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000495")]
			[Address(RVA = "0x1E37434", Offset = "0x1E37434", VA = "0x1E37434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000497")]
			[Address(RVA = "0x1E374A4", Offset = "0x1E374A4", VA = "0x1E374A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x1E36D08", Offset = "0x1E36D08", VA = "0x1E36D08")]
		[DebuggerHidden]
		public <LoadSteam>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x1E37268", Offset = "0x1E37268", VA = "0x1E37268", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1E3726C", Offset = "0x1E3726C", VA = "0x1E3726C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x1E3743C", Offset = "0x1E3743C", VA = "0x1E3743C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BA98", Offset = "0xA2BA98")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LoadingScreen[] loadingScreens;

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x1E36E68", Offset = "0x1E36E68", VA = "0x1E36E68")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x1E36E70", Offset = "0x1E36E70", VA = "0x1E36E70")]
		internal bool <Show>b__0()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BAA8", Offset = "0xA2BAA8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<LoadingScreen, bool> <>9__12_1;

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x1E36E2C", Offset = "0x1E36E2C", VA = "0x1E36E2C")]
		public <>c()
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x1E36E34", Offset = "0x1E36E34", VA = "0x1E36E34")]
		internal bool <Show>b__12_1(LoadingScreen l)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BAB8", Offset = "0xA2BAB8")]
	private sealed class <Show>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AsyncOperation async;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass12_0 <>8__1;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool activate;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <ppi>5__3;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <nextImage>5__4;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <currentImage>5__5;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004A0")]
			[Address(RVA = "0x1E37EF0", Offset = "0x1E37EF0", VA = "0x1E37EF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A2")]
			[Address(RVA = "0x1E37F60", Offset = "0x1E37F60", VA = "0x1E37F60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x1E36D34", Offset = "0x1E36D34", VA = "0x1E36D34")]
		[DebuggerHidden]
		public <Show>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x1E374AC", Offset = "0x1E374AC", VA = "0x1E374AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x1E374B0", Offset = "0x1E374B0", VA = "0x1E374B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x1E37EF8", Offset = "0x1E37EF8", VA = "0x1E37EF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] images;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color backgroundColor;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minimumTime;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA31CB4", Offset = "0xA31CB4")]
	public string loadingScene;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CanvasGroup vrLoadingScreen;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CanvasGroup screenLoadingScreen;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LoadingScreenManager instance;

	[Token(Token = "0x170000A3")]
	public static LoadingScreenManager Instance
	{
		[Token(Token = "0x6000486")]
		[Address(RVA = "0x1E36144", Offset = "0x1E36144", VA = "0x1E36144")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1E36AD0", Offset = "0x1E36AD0", VA = "0x1E36AD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1E36BF4", Offset = "0x1E36BF4", VA = "0x1E36BF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39F4C", Offset = "0xA39F4C")]
	public static IEnumerator LoadSceneWithLoadingScreen(string scene)
	{
		return null;
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1E36C94", Offset = "0x1E36C94", VA = "0x1E36C94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA39FB0", Offset = "0xA39FB0")]
	private IEnumerator LoadSteam(string scene)
	{
		return null;
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1E36194", Offset = "0x1E36194", VA = "0x1E36194")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A014", Offset = "0xA3A014")]
	internal static IEnumerator Show(AsyncOperation async, bool activate)
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1E36D60", Offset = "0x1E36D60", VA = "0x1E36D60")]
	public LoadingScreenManager()
	{
	}
}
[Token(Token = "0x20000D1")]
public class LookAtZone : MonoBehaviour
{
	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BAC8", Offset = "0xA2BAC8")]
	private sealed class <Look>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LookAtZone <>4__this;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <wait>5__2;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0x1E3AF04", Offset = "0x1E3AF04", VA = "0x1E3AF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004AD")]
			[Address(RVA = "0x1E3AF74", Offset = "0x1E3AF74", VA = "0x1E3AF74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1E3A968", Offset = "0x1E3A968", VA = "0x1E3A968")]
		[DebuggerHidden]
		public <Look>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1E3A9A4", Offset = "0x1E3A9A4", VA = "0x1E3A9A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x1E3A9A8", Offset = "0x1E3A9A8", VA = "0x1E3A9A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x1E3AF0C", Offset = "0x1E3AF0C", VA = "0x1E3AF0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 lookAt;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraController cameraController;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ControllableCamera cc;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1E3A71C", Offset = "0x1E3A71C", VA = "0x1E3A71C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1E3A7A4", Offset = "0x1E3A7A4", VA = "0x1E3A7A4")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1E3A854", Offset = "0x1E3A854", VA = "0x1E3A854")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1E3A8F4", Offset = "0x1E3A8F4", VA = "0x1E3A8F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A168", Offset = "0xA3A168")]
	private IEnumerator Look()
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1E3A994", Offset = "0x1E3A994", VA = "0x1E3A994")]
	public LookAtZone()
	{
	}
}
[Token(Token = "0x20000D3")]
public class RenderTarget : MonoBehaviour
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RawImage Current;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage renderTarget;

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1EB3F28", Offset = "0x1EB3F28", VA = "0x1EB3F28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1EB3F80", Offset = "0x1EB3F80", VA = "0x1EB3F80")]
	public RenderTarget()
	{
	}
}
[Token(Token = "0x20000D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BAD8", Offset = "0xA2BAD8")]
public class SetCanvasCameraToVR : MonoBehaviour
{
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BB3C", Offset = "0xA2BB3C")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetCanvasCameraToVR <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B5")]
			[Address(RVA = "0x1E65F9C", Offset = "0x1E65F9C", VA = "0x1E65F9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x1E6600C", Offset = "0x1E6600C", VA = "0x1E6600C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x1E65E84", Offset = "0x1E65E84", VA = "0x1E65E84")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x1E65EB8", Offset = "0x1E65EB8", VA = "0x1E65EB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x1E65EBC", Offset = "0x1E65EBC", VA = "0x1E65EBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x1E65FA4", Offset = "0x1E65FA4", VA = "0x1E65FA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1E65E10", Offset = "0x1E65E10", VA = "0x1E65E10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A21C", Offset = "0xA3A21C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1E65EB0", Offset = "0x1E65EB0", VA = "0x1E65EB0")]
	public SetCanvasCameraToVR()
	{
	}
}
[Token(Token = "0x20000D6")]
public class SetCullingMaskForMode : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000D7")]
	public struct ModeMask
	{
		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameMode mode;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public LayerMask mask;
	}

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ModeMask[] modeMasks;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1E66410", Offset = "0x1E66410", VA = "0x1E66410")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1E66568", Offset = "0x1E66568", VA = "0x1E66568")]
	public SetCullingMaskForMode()
	{
	}
}
[Token(Token = "0x20000D8")]
public class SteamVR_LoadingScreen : LoadingScreen
{
	[Token(Token = "0x20000D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BB4C", Offset = "0xA2BB4C")]
	private sealed class <Show>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadingScreen <>4__this;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite sprite;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color backgroundColor;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float duration;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <fadeRate>5__3;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004C4")]
			[Address(RVA = "0x1ECAF0C", Offset = "0x1ECAF0C", VA = "0x1ECAF0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004C6")]
			[Address(RVA = "0x1ECAF7C", Offset = "0x1ECAF7C", VA = "0x1ECAF7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x1ECA30C", Offset = "0x1ECA30C", VA = "0x1ECA30C")]
		[DebuggerHidden]
		public <Show>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x1ECAC64", Offset = "0x1ECAC64", VA = "0x1ECAC64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x1ECAC68", Offset = "0x1ECAC68", VA = "0x1ECAC68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x1ECAF14", Offset = "0x1ECAF14", VA = "0x1ECAF14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BB5C", Offset = "0xA2BB5C")]
	private sealed class <Hide>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_LoadingScreen <>4__this;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <fadeRate>5__3;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004CA")]
			[Address(RVA = "0x1ECABEC", Offset = "0x1ECABEC", VA = "0x1ECABEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CC")]
			[Address(RVA = "0x1ECAC5C", Offset = "0x1ECAC5C", VA = "0x1ECAC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1ECA954", Offset = "0x1ECA954", VA = "0x1ECA954")]
		[DebuggerHidden]
		public <Hide>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1ECAA20", Offset = "0x1ECAA20", VA = "0x1ECAA20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x1ECAA24", Offset = "0x1ECAA24", VA = "0x1ECAA24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1ECABF4", Offset = "0x1ECABF4", VA = "0x1ECABF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float alpha;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float loadingScreenDistance;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1ECA220", Offset = "0x1ECA220", VA = "0x1ECA220", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1ECA224", Offset = "0x1ECA224", VA = "0x1ECA224", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A2D0", Offset = "0xA3A2D0")]
	public override IEnumerator Show(Sprite sprite, Color backgroundColor, float duration = 0.25f)
	{
		return null;
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1ECA338", Offset = "0x1ECA338", VA = "0x1ECA338", Slot = "6")]
	public override void SetImage(Sprite sprite)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1ECA8BC", Offset = "0x1ECA8BC", VA = "0x1ECA8BC", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A334", Offset = "0xA3A334")]
	public override IEnumerator Hide(float duration = 0.25f)
	{
		return null;
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1ECA980", Offset = "0x1ECA980", VA = "0x1ECA980")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1ECA4B4", Offset = "0x1ECA4B4", VA = "0x1ECA4B4")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1ECAA08", Offset = "0x1ECAA08", VA = "0x1ECAA08")]
	public SteamVR_LoadingScreen()
	{
	}
}
[Token(Token = "0x20000DB")]
public class UnfixCamera : MonoBehaviour
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setRotation;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 setRotationTo;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool setPivotPoint;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool fireOnEnable;

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1DF88FC", Offset = "0x1DF88FC", VA = "0x1DF88FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1DF8900", Offset = "0x1DF8900", VA = "0x1DF8900")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1DF8C34", Offset = "0x1DF8C34", VA = "0x1DF8C34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1DF8C48", Offset = "0x1DF8C48", VA = "0x1DF8C48")]
	public UnfixCamera()
	{
	}
}
[Token(Token = "0x20000DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BB6C", Offset = "0xA2BB6C")]
public class ZoomZone : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BBD0", Offset = "0xA2BBD0")]
	private sealed class <Zoom>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZoomZone <>4__this;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float factor;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForFixedUpdate <wait>5__2;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x1F60888", Offset = "0x1F60888", VA = "0x1F60888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0x1F608F8", Offset = "0x1F608F8", VA = "0x1F608F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x1F606E4", Offset = "0x1F606E4", VA = "0x1F606E4")]
		[DebuggerHidden]
		public <Zoom>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x1F60720", Offset = "0x1F60720", VA = "0x1F60720", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1F60724", Offset = "0x1F60724", VA = "0x1F60724", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x1F60890", Offset = "0x1F60890", VA = "0x1F60890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float targetDistanceFactor;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float zoomSpeed;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CameraController cameraController;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1F60450", Offset = "0x1F60450", VA = "0x1F60450")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1F604C4", Offset = "0x1F604C4", VA = "0x1F604C4")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1F60588", Offset = "0x1F60588", VA = "0x1F60588")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1F6064C", Offset = "0x1F6064C", VA = "0x1F6064C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A438", Offset = "0xA3A438")]
	private IEnumerator Zoom(float factor)
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1F60710", Offset = "0x1F60710", VA = "0x1F60710")]
	public ZoomZone()
	{
	}
}
[Token(Token = "0x20000DE")]
public class CameraController : InputComponent
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31CD8", Offset = "0xA31CD8")]
	public Transform[] CameraMounts;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool AutoCreateCamera;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool AutoCreateMounts;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public VrButton SwitchMountButton;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31D10", Offset = "0xA31D10")]
	public Transform lookAtPoint;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31D48", Offset = "0xA31D48")]
	public float Speed;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 InitialRotation;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float PreferedDistance;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float PreferedDistanceMultiplier;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float MinimumDistance;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public LayerMask RaycastLayerMask;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 PivotPointOffset;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float RotationLowerBoundry;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float RotationUpperBoundry;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public VrButton CenterCameraButton;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31D80", Offset = "0xA31D80")]
	public ORFmodStudioEventEmitter giantCameraActivatedSound;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool attachStudioListenerToPivotPoint;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool setFOVToVr;

	[NonSerialized]
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public int currentCameraMountIndex;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<Transform> OnCameraChange;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SmoothFollow followPlayer;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform reaperManCameraMount;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Camera vrCamera;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera myCamera;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool created;

	[Token(Token = "0x170000B4")]
	public Transform CurrentCamera
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1E4B914", Offset = "0x1E4B914", VA = "0x1E4B914")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1E4A38C", Offset = "0x1E4A38C", VA = "0x1E4A38C", Slot = "10")]
	public override OddRavenVrPriorityOrder GetPriorityOrder()
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1E4A394", Offset = "0x1E4A394", VA = "0x1E4A394")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1E4A4B0", Offset = "0x1E4A4B0", VA = "0x1E4A4B0", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1E4A538", Offset = "0x1E4A538", VA = "0x1E4A538")]
	private void CreateCamera()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1E4B704", Offset = "0x1E4B704", VA = "0x1E4B704")]
	private void CreateCameraMounts()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1E4AF08", Offset = "0x1E4AF08", VA = "0x1E4AF08")]
	public void SetCurrentCameraIndex(int cameraIndex)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1E4B964", Offset = "0x1E4B964", VA = "0x1E4B964", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x1E4BA0C", Offset = "0x1E4BA0C", VA = "0x1E4BA0C")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x1E4BAE8", Offset = "0x1E4BAE8", VA = "0x1E4BAE8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x1E4BBA8", Offset = "0x1E4BBA8", VA = "0x1E4BBA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1E4BBAC", Offset = "0x1E4BBAC", VA = "0x1E4BBAC")]
	public CameraController()
	{
	}
}
[Token(Token = "0x20000DF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BBE0", Offset = "0xA2BBE0")]
public class PlayerCharacter : StateMachine
{
	[Serializable]
	[Token(Token = "0x20000E0")]
	public class InventoryItem
	{
		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string inventoryId;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite sprite;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color tint;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string tag;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool persist;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal GameObject pickup;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int _count;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _frozenCount;

		[Token(Token = "0x170000BF")]
		internal int count
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x1EA4760", Offset = "0x1EA4760", VA = "0x1EA4760")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x1EA3474", Offset = "0x1EA3474", VA = "0x1EA3474")]
		internal void Add()
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x1EA4768", Offset = "0x1EA4768", VA = "0x1EA4768")]
		internal void Consume()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x1EA47E8", Offset = "0x1EA47E8", VA = "0x1EA47E8")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x1EA3694", Offset = "0x1EA3694", VA = "0x1EA3694")]
		internal void Freeze()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x1EA47F0", Offset = "0x1EA47F0", VA = "0x1EA47F0")]
		internal void ResetToFrozen()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x1EA49C0", Offset = "0x1EA49C0", VA = "0x1EA49C0")]
		public InventoryItem()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BC44", Offset = "0xA2BC44")]
	private sealed class <>c
	{
		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<string, string>, int> <>9__38_0;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<string, InventoryItem>, bool> <>9__64_0;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<string, InventoryItem>, string> <>9__64_1;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<KeyValuePair<string, InventoryItem>, InventoryItem> <>9__64_2;

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x1EA3A8C", Offset = "0x1EA3A8C", VA = "0x1EA3A8C")]
		public <>c()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x1EA3A94", Offset = "0x1EA3A94", VA = "0x1EA3A94")]
		internal int <CacheCurrentCoins>b__38_0(KeyValuePair<string, string> c)
		{
			return default(int);
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x1EA3B7C", Offset = "0x1EA3B7C", VA = "0x1EA3B7C")]
		internal bool <Start>b__64_0(KeyValuePair<string, InventoryItem> i)
		{
			return default(bool);
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x1EA3BE8", Offset = "0x1EA3BE8", VA = "0x1EA3BE8")]
		internal string <Start>b__64_1(KeyValuePair<string, InventoryItem> i)
		{
			return null;
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x1EA3C44", Offset = "0x1EA3C44", VA = "0x1EA3C44")]
		internal InventoryItem <Start>b__64_2(KeyValuePair<string, InventoryItem> i)
		{
			return null;
		}
	}

	[Token(Token = "0x20000E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BC54", Offset = "0xA2BC54")]
	private sealed class <_Respawn>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool allowillusion;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float initialPause;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerCharacter <>4__this;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0x1EA46E8", Offset = "0x1EA46E8", VA = "0x1EA46E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0x1EA4758", Offset = "0x1EA4758", VA = "0x1EA4758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x1EA32D0", Offset = "0x1EA32D0", VA = "0x1EA32D0")]
		[DebuggerHidden]
		public <_Respawn>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x1EA3F04", Offset = "0x1EA3F04", VA = "0x1EA3F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1EA3F08", Offset = "0x1EA3F08", VA = "0x1EA3F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x1EA46F0", Offset = "0x1EA46F0", VA = "0x1EA46F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BC64", Offset = "0xA2BC64")]
	private sealed class <DeactivateCharacterRenderersForRespawn>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCharacter <>4__this;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkinnedMeshRenderer[] <renderers>5__2;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <localId>5__3;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0x1EA3E8C", Offset = "0x1EA3E8C", VA = "0x1EA3E8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0x1EA3EFC", Offset = "0x1EA3EFC", VA = "0x1EA3EFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x1EA39CC", Offset = "0x1EA39CC", VA = "0x1EA39CC")]
		[DebuggerHidden]
		public <DeactivateCharacterRenderersForRespawn>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x1EA3CA0", Offset = "0x1EA3CA0", VA = "0x1EA3CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x1EA3CA4", Offset = "0x1EA3CA4", VA = "0x1EA3CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x1EA3E94", Offset = "0x1EA3E94", VA = "0x1EA3E94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int DefaultLives;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DefaultHealth;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool eternalLife;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BaseCheckpoint DefaultActiveCheckpoint;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action playerSpawned;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, InventoryItem> _inventory;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static Dictionary<string, bool> staticStateDictionary;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<InventoryItem> InventoryItemAdded;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action<InventoryItem> InventoryItemConsumed;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action DidRespawn;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ORFmodStudioEventEmitter hurtSound;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ORFmodStudioEventEmitter dieSound;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem deathEffectsParticleSystem;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _points;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31DC8", Offset = "0xA31DC8")]
	private static int <CurrentLives>k__BackingField;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31DD8", Offset = "0xA31DD8")]
	private float <CurrentHealth>k__BackingField;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31DE8", Offset = "0xA31DE8")]
	private static int <CurrentCoins>k__BackingField;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31DF8", Offset = "0xA31DF8")]
	private static int <CurrentCoinsTotal>k__BackingField;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BaseCheckpoint _currentActiveCheckpoint;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private BaseCheckpoint _firstCheckpoint;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action PlayerDied;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action HealthChanged;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action LivesChanged;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Action CoinsChanged;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31E08", Offset = "0xA31E08")]
	public float lightDamageVelocity;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float heavyDamageVelocity;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float DieVelocity;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float lightDamage;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float heavyDamage;

	[NonSerialized]
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int respawnId;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OddRavenCharacterController cc;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static PlayerCharacter _instance;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool dead;

	[Token(Token = "0x170000B5")]
	internal static Dictionary<string, InventoryItem> inventory
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x1EA1B1C", Offset = "0x1EA1B1C", VA = "0x1EA1B1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x1EA1BC0", Offset = "0x1EA1BC0", VA = "0x1EA1BC0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public int Points
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x1EA1C14", Offset = "0x1EA1C14", VA = "0x1EA1C14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x1EA1C1C", Offset = "0x1EA1C1C", VA = "0x1EA1C1C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public static int CurrentLives
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x1EA1C24", Offset = "0x1EA1C24", VA = "0x1EA1C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A4EC", Offset = "0xA3A4EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x1EA1C74", Offset = "0x1EA1C74", VA = "0x1EA1C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A4FC", Offset = "0xA3A4FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public float CurrentHealth
	{
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x1EA1CC8", Offset = "0x1EA1CC8", VA = "0x1EA1CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A50C", Offset = "0xA3A50C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x1EA1CD0", Offset = "0x1EA1CD0", VA = "0x1EA1CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A51C", Offset = "0xA3A51C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public static int CurrentCoins
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x1EA1CD8", Offset = "0x1EA1CD8", VA = "0x1EA1CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A52C", Offset = "0xA3A52C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x1EA1D28", Offset = "0x1EA1D28", VA = "0x1EA1D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A53C", Offset = "0xA3A53C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public static int CurrentCoinsTotal
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x1EA1D7C", Offset = "0x1EA1D7C", VA = "0x1EA1D7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A54C", Offset = "0xA3A54C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x1EA1DCC", Offset = "0x1EA1DCC", VA = "0x1EA1DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A55C", Offset = "0xA3A55C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public BaseCheckpoint CurrentActiveCheckpoint
	{
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1EA1F9C", Offset = "0x1EA1F9C", VA = "0x1EA1F9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x1EA1FA4", Offset = "0x1EA1FA4", VA = "0x1EA1FA4")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public static PlayerCharacter Instance
	{
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x1EA2030", Offset = "0x1EA2030", VA = "0x1EA2030")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public bool isDead
	{
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x1EA2080", Offset = "0x1EA2080", VA = "0x1EA2080")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BE")]
	protected override Dictionary<string, bool> stateDictionary
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x1EA2088", Offset = "0x1EA2088", VA = "0x1EA2088", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1EA1E20", Offset = "0x1EA1E20", VA = "0x1EA1E20")]
	public static void CacheCurrentCoins()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x1EA2114", Offset = "0x1EA2114", VA = "0x1EA2114", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1EA21A8", Offset = "0x1EA21A8", VA = "0x1EA21A8", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1EA2664", Offset = "0x1EA2664", VA = "0x1EA2664")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1EA26E0", Offset = "0x1EA26E0", VA = "0x1EA26E0")]
	public void TakeDamage(float damage)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1EA2E18", Offset = "0x1EA2E18", VA = "0x1EA2E18")]
	public void PlayHurtSound(float damage)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1EA2EF0", Offset = "0x1EA2EF0", VA = "0x1EA2EF0")]
	public void HealDamage(float heal)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1EA2FA4", Offset = "0x1EA2FA4", VA = "0x1EA2FA4")]
	public void AddExtraLife(int count = 1)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1EA3054", Offset = "0x1EA3054", VA = "0x1EA3054")]
	public static void AddCoin(int count = 1)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1EA25D8", Offset = "0x1EA25D8", VA = "0x1EA25D8")]
	public void InvokeHealthChanged()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1EA25EC", Offset = "0x1EA25EC", VA = "0x1EA25EC")]
	public void InvokeLivesChanged()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1EA30E4", Offset = "0x1EA30E4", VA = "0x1EA30E4")]
	public void InvokeRespawned()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1EA2600", Offset = "0x1EA2600", VA = "0x1EA2600")]
	public static void InvokeCoinsChanged()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1EA30F8", Offset = "0x1EA30F8", VA = "0x1EA30F8")]
	public void Die()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1EA2750", Offset = "0x1EA2750", VA = "0x1EA2750")]
	public void Die(bool immediately = false, bool allowillusion = false)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1EA328C", Offset = "0x1EA328C", VA = "0x1EA328C")]
	public void HitGround(float velocity)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1EA3104", Offset = "0x1EA3104", VA = "0x1EA3104")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A56C", Offset = "0xA3A56C")]
	public IEnumerator _Respawn(float initialPause = 0f, bool allowillusion = false)
	{
		return null;
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1EA31BC", Offset = "0x1EA31BC", VA = "0x1EA31BC")]
	private void _GameOver()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1EA32FC", Offset = "0x1EA32FC", VA = "0x1EA32FC")]
	public void AddToInventory(InventoryItem item)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1EA34F4", Offset = "0x1EA34F4", VA = "0x1EA34F4")]
	public void SetCurrentActiveCheckpoint(BaseCheckpoint checkpoint)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1EA36A0", Offset = "0x1EA36A0", VA = "0x1EA36A0")]
	internal void AwardPoints(int points)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1EA36B0", Offset = "0x1EA36B0", VA = "0x1EA36B0")]
	public void deactivateCharRender()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1EA3854", Offset = "0x1EA3854", VA = "0x1EA3854")]
	public void activateCharRender(int delay = 4)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1EA38B8", Offset = "0x1EA38B8", VA = "0x1EA38B8")]
	private void _activateCharRender()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x1EA37E0", Offset = "0x1EA37E0", VA = "0x1EA37E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A5D0", Offset = "0xA3A5D0")]
	private IEnumerator DeactivateCharacterRenderersForRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1EA39F8", Offset = "0x1EA39F8", VA = "0x1EA39F8")]
	public PlayerCharacter()
	{
	}
}
[Token(Token = "0x20000E4")]
public class PlayerHealthBar : MonoBehaviour
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31E50", Offset = "0xA31E50")]
	public GameObject HeartPrefab;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 HearthSpawnOffset;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31E88", Offset = "0xA31E88")]
	public Vector3 FollowOffset;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform DirectionTransform;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31EC0", Offset = "0xA31EC0")]
	public Vector3 OnScreenPlacement;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 OnScreenScale;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera ThirdPersonCamera;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA31EF8", Offset = "0xA31EF8")]
	public PlayerCharacter FollowCharacter;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float BlinkTimer;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int BlinkCount;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float HealthChangeDisplayTimer;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public PlayerHealthBarPlacementType PlacementType;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31F30", Offset = "0xA31F30")]
	private float <CurrentHealthDisplayTimer>k__BackingField;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31F40", Offset = "0xA31F40")]
	private List<PlayerHealthBarHeart> <Hearts>k__BackingField;

	[Token(Token = "0x170000C4")]
	public float CurrentHealthDisplayTimer
	{
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x1EA78A8", Offset = "0x1EA78A8", VA = "0x1EA78A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A6D4", Offset = "0xA3A6D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x1EA78B0", Offset = "0x1EA78B0", VA = "0x1EA78B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A6E4", Offset = "0xA3A6E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public List<PlayerHealthBarHeart> Hearts
	{
		[Token(Token = "0x600052E")]
		[Address(RVA = "0x1EA78B8", Offset = "0x1EA78B8", VA = "0x1EA78B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A6F4", Offset = "0xA3A6F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x1EA78C0", Offset = "0x1EA78C0", VA = "0x1EA78C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A704", Offset = "0xA3A704")]
		set
		{
		}
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x1EA78C8", Offset = "0x1EA78C8", VA = "0x1EA78C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1EA7B80", Offset = "0x1EA7B80", VA = "0x1EA7B80")]
	private void SetupHearts(int count)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1EA80D4", Offset = "0x1EA80D4", VA = "0x1EA80D4")]
	public void OnHealthChanged()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1EA83B4", Offset = "0x1EA83B4", VA = "0x1EA83B4")]
	public void OnDeath()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1EA84E0", Offset = "0x1EA84E0", VA = "0x1EA84E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1EA8640", Offset = "0x1EA8640", VA = "0x1EA8640")]
	public void UpdateViveCamera()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1EA7F44", Offset = "0x1EA7F44", VA = "0x1EA7F44")]
	public void SetupThirdPersonCamera()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1EA8878", Offset = "0x1EA8878", VA = "0x1EA8878")]
	public PlayerHealthBar()
	{
	}
}
[Token(Token = "0x20000E5")]
public enum PlayerHealthBarBlinkState
{
	[Token(Token = "0x40004D1")]
	Unlit,
	[Token(Token = "0x40004D2")]
	Lit,
	[Token(Token = "0x40004D3")]
	PermanentUnlit
}
[Token(Token = "0x20000E6")]
public class PlayerHealthBarHeart : MonoBehaviour
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31F50", Offset = "0xA31F50")]
	private float <BlinkTimer>k__BackingField;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31F60", Offset = "0xA31F60")]
	private int <BlinkCount>k__BackingField;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31F70", Offset = "0xA31F70")]
	private Renderer[] <Renderers>k__BackingField;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31F80", Offset = "0xA31F80")]
	private bool <IsBlinking>k__BackingField;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31F90", Offset = "0xA31F90")]
	private float <CurrentBlinkTimer>k__BackingField;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31FA0", Offset = "0xA31FA0")]
	private int <CurrentBlinkCounter>k__BackingField;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31FB0", Offset = "0xA31FB0")]
	private PlayerHealthBarBlinkState <CurrentBlinkState>k__BackingField;

	[Token(Token = "0x170000C6")]
	public float BlinkTimer
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x1EA8968", Offset = "0x1EA8968", VA = "0x1EA8968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A714", Offset = "0xA3A714")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x1EA8970", Offset = "0x1EA8970", VA = "0x1EA8970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A724", Offset = "0xA3A724")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public int BlinkCount
	{
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x1EA8978", Offset = "0x1EA8978", VA = "0x1EA8978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A734", Offset = "0xA3A734")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x1EA8980", Offset = "0x1EA8980", VA = "0x1EA8980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A744", Offset = "0xA3A744")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public Renderer[] Renderers
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x1EA8988", Offset = "0x1EA8988", VA = "0x1EA8988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A754", Offset = "0xA3A754")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1EA8990", Offset = "0x1EA8990", VA = "0x1EA8990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A764", Offset = "0xA3A764")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public bool IsBlinking
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x1EA8998", Offset = "0x1EA8998", VA = "0x1EA8998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A774", Offset = "0xA3A774")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x1EA89A0", Offset = "0x1EA89A0", VA = "0x1EA89A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A784", Offset = "0xA3A784")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public float CurrentBlinkTimer
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x1EA89AC", Offset = "0x1EA89AC", VA = "0x1EA89AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A794", Offset = "0xA3A794")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x1EA89B4", Offset = "0x1EA89B4", VA = "0x1EA89B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A7A4", Offset = "0xA3A7A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public int CurrentBlinkCounter
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x1EA89BC", Offset = "0x1EA89BC", VA = "0x1EA89BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A7B4", Offset = "0xA3A7B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x1EA89C4", Offset = "0x1EA89C4", VA = "0x1EA89C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A7C4", Offset = "0xA3A7C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public PlayerHealthBarBlinkState CurrentBlinkState
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1EA89CC", Offset = "0x1EA89CC", VA = "0x1EA89CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A7D4", Offset = "0xA3A7D4")]
		get
		{
			return default(PlayerHealthBarBlinkState);
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x1EA89D4", Offset = "0x1EA89D4", VA = "0x1EA89D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A7E4", Offset = "0xA3A7E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1EA89DC", Offset = "0x1EA89DC", VA = "0x1EA89DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1EA80C8", Offset = "0x1EA80C8", VA = "0x1EA80C8")]
	public void Setup(float blinkTimer, int blinkCount)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1EA82DC", Offset = "0x1EA82DC", VA = "0x1EA82DC")]
	public void StartBlink()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1EA82F8", Offset = "0x1EA82F8", VA = "0x1EA82F8")]
	public void Reset()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1EA8AD4", Offset = "0x1EA8AD4", VA = "0x1EA8AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1EA8A34", Offset = "0x1EA8A34", VA = "0x1EA8A34")]
	public void DisplayRenderers()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1EA8BA4", Offset = "0x1EA8BA4", VA = "0x1EA8BA4")]
	public void HideRenderers()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1EA87F0", Offset = "0x1EA87F0", VA = "0x1EA87F0")]
	public void ForceHide()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1EA8320", Offset = "0x1EA8320", VA = "0x1EA8320")]
	public void Show()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1EA8C58", Offset = "0x1EA8C58", VA = "0x1EA8C58")]
	public PlayerHealthBarHeart()
	{
	}
}
[Token(Token = "0x20000E7")]
public enum PlayerHealthBarPlacementType
{
	[Token(Token = "0x40004DC")]
	ThirdPersonCamera,
	[Token(Token = "0x40004DD")]
	ViveCamera
}
[Token(Token = "0x20000E8")]
public class ClutterCullList : MonoBehaviour
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> deactivateList;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1E5DD48", Offset = "0x1E5DD48", VA = "0x1E5DD48")]
	public ClutterCullList()
	{
	}
}
[Token(Token = "0x20000E9")]
public class ControllableCamera : InputComponent
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CameraController CameraController;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform CameraPosition;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float CurrentRotationX;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float CurrentRotationY;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float InitialRotationX;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public VrButton CenterCameraButton;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool playerControllable;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerCharacter player;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool playerIsMovingCamera;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool didInitialize;

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1E5F7FC", Offset = "0x1E5F7FC", VA = "0x1E5F7FC", Slot = "10")]
	public override OddRavenVrPriorityOrder GetPriorityOrder()
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1E5F804", Offset = "0x1E5F804", VA = "0x1E5F804", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1E5FBA8", Offset = "0x1E5FBA8", VA = "0x1E5FBA8", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1E5FC78", Offset = "0x1E5FC78", VA = "0x1E5FC78")]
	public void SetRotation(float x, float y)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1E5FC80", Offset = "0x1E5FC80", VA = "0x1E5FC80", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1E6019C", Offset = "0x1E6019C", VA = "0x1E6019C", Slot = "17")]
	public override void OnFixedUpdate()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1E5F95C", Offset = "0x1E5F95C", VA = "0x1E5F95C")]
	public Vector3 GetClearCameraLocation(Vector3 origin, Vector3 preferredDistance, float MinimumDistance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1E60258", Offset = "0x1E60258", VA = "0x1E60258")]
	public ControllableCamera()
	{
	}
}
[Token(Token = "0x20000EA")]
public class DbgForceSocialScreen : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000EB")]
	public struct ControllerInput
	{
		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2[] sticks;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool[] pressed;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool[] wasPressed;
	}

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool forceSocialScreen;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isControllingCamera;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool allowKeyboard;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ControllerInput input;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Camera cam;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector2 lookSpeed;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector2 flySpeed;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xAB2838", Offset = "0xAB2838", VA = "0xAB2838")]
	public DbgForceSocialScreen()
	{
	}
}
[Token(Token = "0x20000EC")]
public class DbgGrabPlatform : MonoBehaviour
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformNetwork platform;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool grab;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform hand;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isLeftHand;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlatformNetwork wasPlatform;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool wasGrab;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xAB28AC", Offset = "0xAB28AC", VA = "0xAB28AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xAB3144", Offset = "0xAB3144", VA = "0xAB3144")]
	private static void Grab(PlatformNetwork platform, Transform transform, bool isLeftHand)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xAB2DE8", Offset = "0xAB2DE8", VA = "0xAB2DE8")]
	private static void Drop(PlatformNetwork platform, Transform transform)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xAB34D4", Offset = "0xAB34D4", VA = "0xAB34D4")]
	public DbgGrabPlatform()
	{
	}
}
[Token(Token = "0x20000ED")]
public class DeactivateComponentOnCollision : MonoBehaviour
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Behaviour component;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string collisionTag;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xAB4534", Offset = "0xAB4534", VA = "0xAB4534")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xAB45D8", Offset = "0xAB45D8", VA = "0xAB45D8")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xAB45A4", Offset = "0xAB45A4", VA = "0xAB45A4")]
	private void DeactivateComponent()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xAB4648", Offset = "0xAB4648", VA = "0xAB4648")]
	public DeactivateComponentOnCollision()
	{
	}
}
[Token(Token = "0x20000EE")]
public class DestroyGameObjectOnParticlesFinished : MonoBehaviour
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroyParents;

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xAB51D8", Offset = "0xAB51D8", VA = "0xAB51D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xAB533C", Offset = "0xAB533C", VA = "0xAB533C")]
	public DestroyGameObjectOnParticlesFinished()
	{
	}
}
[Token(Token = "0x20000EF")]
public class DestroyOnCollision : MonoBehaviour
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] tags;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xAB5344", Offset = "0xAB5344", VA = "0xAB5344")]
	private void QueryDestroy(string tag)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xAB5410", Offset = "0xAB5410", VA = "0xAB5410")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xAB5468", Offset = "0xAB5468", VA = "0xAB5468")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xAB54A8", Offset = "0xAB54A8", VA = "0xAB54A8")]
	public DestroyOnCollision()
	{
	}
}
[Token(Token = "0x20000F0")]
public class DisableOnPlayer : MonoBehaviour
{
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fixedMaterial;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fixDelay;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int releaseDelay;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour disable;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material originalMaterial;

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xAB77AC", Offset = "0xAB77AC", VA = "0xAB77AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xAB781C", Offset = "0xAB781C", VA = "0xAB781C")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xAB78F4", Offset = "0xAB78F4", VA = "0xAB78F4")]
	private void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xAB79CC", Offset = "0xAB79CC", VA = "0xAB79CC")]
	private void Fix()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xAB7ABC", Offset = "0xAB7ABC", VA = "0xAB7ABC")]
	private void Release()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xAB7BAC", Offset = "0xAB7BAC", VA = "0xAB7BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xAB7BB0", Offset = "0xAB7BB0", VA = "0xAB7BB0")]
	public DisableOnPlayer()
	{
	}
}
[Token(Token = "0x20000F1")]
public class DontKillOnCollision : MonoBehaviour
{
	[Token(Token = "0x600056F")]
	[Address(RVA = "0xABA2F8", Offset = "0xABA2F8", VA = "0xABA2F8")]
	public DontKillOnCollision()
	{
	}
}
[Token(Token = "0x20000F2")]
public class EndLevel : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BC74", Offset = "0xA2BC74")]
	private sealed class <OnTriggerEnter>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndLevel <>4__this;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider collider;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0xAC17A8", Offset = "0xAC17A8", VA = "0xAC17A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0xAC1818", Offset = "0xAC1818", VA = "0xAC1818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xAC0EC0", Offset = "0xAC0EC0", VA = "0xAC0EC0")]
		[DebuggerHidden]
		public <OnTriggerEnter>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xAC1474", Offset = "0xAC1474", VA = "0xAC1474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xAC1478", Offset = "0xAC1478", VA = "0xAC1478", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xAC17B0", Offset = "0xAC17B0", VA = "0xAC17B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerCharacter player;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color fadeColor;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA32010", Offset = "0xA32010")]
	public string nextLevel;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool preserveReapermanPosition;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool rememberAsLastEntrance;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool doWalkAnimation;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool _on;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonView photonView;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static string lastEntrance;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool endingLevel;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xAC0CA4", Offset = "0xAC0CA4", VA = "0xAC0CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xAC0D4C", Offset = "0xAC0D4C", VA = "0xAC0D4C")]
	private string GetId()
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xAC0E28", Offset = "0xAC0E28", VA = "0xAC0E28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A7F4", Offset = "0xA3A7F4")]
	private IEnumerator OnTriggerEnter(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xAC0EEC", Offset = "0xAC0EEC", VA = "0xAC0EEC")]
	private void LoadLevel()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xAC1078", Offset = "0xAC1078", VA = "0xAC1078")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xAC13BC", Offset = "0xAC13BC", VA = "0xAC13BC")]
	[PunRPC]
	private void OnTriggerEnterRpc(Pickup.PickupSync pickupSync)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xAC1434", Offset = "0xAC1434", VA = "0xAC1434")]
	public EndLevel()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ActivatableBroadcast : MonoBehaviour
{
	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string broadcastOn;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string broadcastOff;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB845E0", Offset = "0xB845E0", VA = "0xB845E0")]
	private void On()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB84628", Offset = "0xB84628", VA = "0xB84628")]
	private void Off()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xB84670", Offset = "0xB84670", VA = "0xB84670")]
	public ActivatableBroadcast()
	{
	}
}
[Token(Token = "0x20000F5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BC84", Offset = "0xA2BC84")]
public class ActivatableSpeedboost : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float boostedSpeed;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SimpleCharacterController cc;

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xB856F4", Offset = "0xB856F4", VA = "0xB856F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xB8574C", Offset = "0xB8574C", VA = "0xB8574C")]
	private void On()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xB8577C", Offset = "0xB8577C", VA = "0xB8577C")]
	private void Off()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xB857C8", Offset = "0xB857C8", VA = "0xB857C8")]
	public ActivatableSpeedboost()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ActivateWhenPlayerIsInSight : MonoBehaviour
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask blockedBy;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minimumAngle;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maximumAngle;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float cooldown;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool willRotateToFacePlayer;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rotateTransformToFacePlayer;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool fixedY;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxYDistance;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MonoBehaviour onlyBehaviour;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool dontUpdateForOnlineReaperman;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float currentAngle;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float cooldownTimer;

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xB88D58", Offset = "0xB88D58", VA = "0xB88D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xB88DE8", Offset = "0xB88DE8", VA = "0xB88DE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xB89534", Offset = "0xB89534", VA = "0xB89534")]
	public ActivateWhenPlayerIsInSight()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BCE8", Offset = "0xA2BCE8")]
public class Brawler : MonoBehaviour
{
	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool bloodlustWhenPlayerInSight;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerCharacter m_Player;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float MoveCooldown;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool HasBloodlust;

	[Token(Token = "0x4000526")]
	private const float minReorientationTime = 20f;

	[Token(Token = "0x4000527")]
	private const float maxReorientationTime = 40f;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityEngine.Object prefab;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startPosition;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform startParent;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit hit;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 dir;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1E46BF8", Offset = "0x1E46BF8", VA = "0x1E46BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1E46D40", Offset = "0x1E46D40", VA = "0x1E46D40")]
	private void StartBloodlust()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1E46D9C", Offset = "0x1E46D9C", VA = "0x1E46D9C")]
	private void StopBloodlust()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1E46E08", Offset = "0x1E46E08", VA = "0x1E46E08")]
	private void Update()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1E471E0", Offset = "0x1E471E0", VA = "0x1E471E0")]
	private void ReOrient()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1E4741C", Offset = "0x1E4741C", VA = "0x1E4741C")]
	private Vector3 FindRandomPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1E47558", Offset = "0x1E47558", VA = "0x1E47558")]
	private void WillDie()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1E47728", Offset = "0x1E47728", VA = "0x1E47728")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1E47B74", Offset = "0x1E47B74", VA = "0x1E47B74")]
	public Brawler()
	{
	}
}
[Token(Token = "0x20000F8")]
public class Enemy : MonoBehaviour
{
	[Token(Token = "0x20000F9")]
	public enum EnemyType
	{
		[Token(Token = "0x4000542")]
		Touch,
		[Token(Token = "0x4000543")]
		Melee,
		[Token(Token = "0x4000544")]
		Ranged,
		[Token(Token = "0x4000545")]
		TouchAndRanged
	}

	[Token(Token = "0x20000FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BD4C", Offset = "0xA2BD4C")]
	private sealed class <addToShooterManager>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy <>4__this;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <sn>5__2;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0xAC2B70", Offset = "0xAC2B70", VA = "0xAC2B70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A1")]
			[Address(RVA = "0xAC2BE0", Offset = "0xAC2BE0", VA = "0xAC2BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xAC1B58", Offset = "0xAC1B58", VA = "0xAC1B58")]
		[DebuggerHidden]
		public <addToShooterManager>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xAC28D8", Offset = "0xAC28D8", VA = "0xAC28D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xAC28DC", Offset = "0xAC28DC", VA = "0xAC28DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xAC2B78", Offset = "0xAC2B78", VA = "0xAC2B78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pushPlayerForce;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool canBeKilled;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public EnemyType type;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32024", Offset = "0xA32024")]
	public GameObject projectile;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int objectPoolSize;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform fireFrom;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MonoBehaviour[] waitForFireAnimationToFinish;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool animatorHasFireEvents;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool aimAtPlayer;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3205C", Offset = "0xA3205C")]
	public ParticleSystem firePfx;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem willFirePfx;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ORFmodStudioEventEmitter ShootSound;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool syncLazerMageProjectile;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject[] objectPool;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentObject;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool shooterManagerConnected;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3? shootAtPos;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PhotonView photonView;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xAC1820", Offset = "0xAC1820", VA = "0xAC1820")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xAC1A30", Offset = "0xAC1A30", VA = "0xAC1A30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xAC1AE4", Offset = "0xAC1AE4", VA = "0xAC1AE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A8B8", Offset = "0xA3A8B8")]
	private IEnumerator addToShooterManager()
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xAC1B84", Offset = "0xAC1B84", VA = "0xAC1B84")]
	public void Die([Optional] UnityEngine.Object sender)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xAC1C30", Offset = "0xAC1C30", VA = "0xAC1C30")]
	public void Attack()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xAC24AC", Offset = "0xAC24AC", VA = "0xAC24AC")]
	private void WillFire()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xAC2544", Offset = "0xAC2544", VA = "0xAC2544")]
	private void StartFire()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xAC2548", Offset = "0xAC2548", VA = "0xAC2548")]
	private void EndFire()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xAC1D7C", Offset = "0xAC1D7C", VA = "0xAC1D7C")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xAC254C", Offset = "0xAC254C", VA = "0xAC254C")]
	[PunRPC]
	private void FireLazerMageRpc(Vector3 fireAt, Quaternion localRotation)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xAC268C", Offset = "0xAC268C", VA = "0xAC268C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xAC28B8", Offset = "0xAC28B8", VA = "0xAC28B8")]
	public Enemy()
	{
	}
}
[Token(Token = "0x20000FB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BD5C", Offset = "0xA2BD5C")]
public class FollowCollider : MonoBehaviour
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask layers;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool turnOnly;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnDegrees;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool childWhenFollowing;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider closestCollider;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider lastCollider;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool searchingForClosestCollider;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool outOfRange;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SimpleCharacterController scc;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion colliderRotation;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xBA0338", Offset = "0xBA0338", VA = "0xBA0338")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xBA03C8", Offset = "0xBA03C8", VA = "0xBA03C8")]
	private void FindClosestCollider()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xBA0D04", Offset = "0xBA0D04", VA = "0xBA0D04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xBA12E4", Offset = "0xBA12E4", VA = "0xBA12E4")]
	public FollowCollider()
	{
	}
}
[Token(Token = "0x20000FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BDC0", Offset = "0xA2BDC0")]
public class FollowPath : MonoBehaviour
{
	[Token(Token = "0x20000FD")]
	public enum FollowMode
	{
		[Token(Token = "0x4000563")]
		Forward,
		[Token(Token = "0x4000564")]
		PingPong
	}

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform[] path;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector3> waypoints;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FollowMode followMode;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fixedY;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask willTurnWhenCollidingWith;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NavMeshAgent m_navAgent;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_currentPoint;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_currentGoal;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion m_currentDirection;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IHasDirection direction;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int directionValue;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PhotonView view;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 previuosNetworkPosition;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xBA1330", Offset = "0xBA1330", VA = "0xBA1330")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xBA13E4", Offset = "0xBA13E4", VA = "0xBA13E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xBA1D9C", Offset = "0xBA1D9C", VA = "0xBA1D9C")]
	public FollowPath()
	{
	}
}
[Token(Token = "0x20000FE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BE24", Offset = "0xA2BE24")]
public class HermitCrab : AffectPlayerVelocity
{
	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BE88", Offset = "0xA2BE88")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HermitCrab <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0xBAB8D4", Offset = "0xBAB8D4", VA = "0xBAB8D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0xBAB944", Offset = "0xBAB944", VA = "0xBAB944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xBA9CB0", Offset = "0xBA9CB0", VA = "0xBA9CB0")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xBAB304", Offset = "0xBAB304", VA = "0xBAB304", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xBAB308", Offset = "0xBAB308", VA = "0xBAB308", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xBAB8DC", Offset = "0xBAB8DC", VA = "0xBAB8DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HermitCrabTrigger trigger;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pushForce;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ORFmodStudioEventEmitter sound;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCharacterController scc;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Platform> targets;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<PlatformNetwork> targetsPlatformNetwork;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool playerIsTarget;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform closestTarget;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator anim;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int groundCastFailures;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xBA9C3C", Offset = "0xBA9C3C", VA = "0xBA9C3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3A97C", Offset = "0xA3A97C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xBA9CDC", Offset = "0xBA9CDC", VA = "0xBA9CDC")]
	private void PlayerIsTarget(bool isTarget)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xBA9CE8", Offset = "0xBA9CE8", VA = "0xBA9CE8")]
	private void RemoveTarget(Platform platform)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xBAA714", Offset = "0xBAA714", VA = "0xBAA714")]
	private void NewTarget(Platform platform)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xBAA7D8", Offset = "0xBAA7D8", VA = "0xBAA7D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xBAAC7C", Offset = "0xBAAC7C", VA = "0xBAAC7C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xBA9E3C", Offset = "0xBA9E3C", VA = "0xBA9E3C")]
	private void UpdateTarget()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xBAB03C", Offset = "0xBAB03C", VA = "0xBAB03C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xBAB2EC", Offset = "0xBAB2EC", VA = "0xBAB2EC")]
	public HermitCrab()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xBAB2FC", Offset = "0xBAB2FC", VA = "0xBAB2FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3A9E0", Offset = "0xA3A9E0")]
	private void <Start>b__9_0()
	{
	}
}
[Token(Token = "0x2000100")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BE98", Offset = "0xA2BE98")]
public class HermitCrabTrigger : MonoBehaviour
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Platform> OnPlatformDropped;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Platform> OnPlatformRemoved;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<bool> OnPlayer;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xBAB94C", Offset = "0xBAB94C", VA = "0xBAB94C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xBABA44", Offset = "0xBABA44", VA = "0xBABA44")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xBABB3C", Offset = "0xBABB3C", VA = "0xBABB3C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xBABC78", Offset = "0xBABC78", VA = "0xBABC78")]
	private void OnCollisionrExit(Collision other)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xBABDB4", Offset = "0xBABDB4", VA = "0xBABDB4")]
	public HermitCrabTrigger()
	{
	}
}
[Token(Token = "0x2000101")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BEFC", Offset = "0xA2BEFC")]
public class LaserBeam : MonoBehaviour
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask hitLayers;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask killLayers;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform particleEffect;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform questParticles;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool MoveLaser;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA320A4", Offset = "0xA320A4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA320A4", Offset = "0xA320A4")]
	public int precision;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA320F8", Offset = "0xA320F8")]
	public GameObject fakeBloom;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material fakeBloomLaserMaterial;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float fakeBloomWidth;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Ray ray;

	[Token(Token = "0x4000580")]
	private const bool useFakeBloom = true;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int laserBeamIndex;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private long lastRaycastFrame;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _on;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float maxDistance;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 lastHitPoint;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RaycastHit[] hits;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1E237C0", Offset = "0x1E237C0", VA = "0x1E237C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1E23AD0", Offset = "0x1E23AD0", VA = "0x1E23AD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1E23B28", Offset = "0x1E23B28", VA = "0x1E23B28")]
	private void On()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1E23C80", Offset = "0x1E23C80", VA = "0x1E23C80")]
	private void Off()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1E23DD4", Offset = "0x1E23DD4", VA = "0x1E23DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1E243C8", Offset = "0x1E243C8", VA = "0x1E243C8")]
	private RaycastHit GetClosestHit(RaycastHit[] hits, int hitCount)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1E24548", Offset = "0x1E24548", VA = "0x1E24548")]
	public LaserBeam()
	{
	}
}
[Token(Token = "0x2000102")]
public class LaserMage : MonoBehaviour
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationJoint;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform nozzle;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ORFmodStudioEventEmitter chargeSound;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Behaviour[] disableWhileOn;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool followPlayer;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool followPlayerOnOther;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1E245CC", Offset = "0x1E245CC", VA = "0x1E245CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1E24624", Offset = "0x1E24624", VA = "0x1E24624")]
	private void On()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1E24840", Offset = "0x1E24840", VA = "0x1E24840")]
	private void Off()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1E24844", Offset = "0x1E24844", VA = "0x1E24844")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1E24A44", Offset = "0x1E24A44", VA = "0x1E24A44")]
	private void StartAim()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1E24A4C", Offset = "0x1E24A4C", VA = "0x1E24A4C")]
	private void Fire()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1E24B30", Offset = "0x1E24B30", VA = "0x1E24B30")]
	private void EndFire()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1E24BD4", Offset = "0x1E24BD4", VA = "0x1E24BD4")]
	[PunRPC]
	private void StartFollowRpc()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1E24BD8", Offset = "0x1E24BD8", VA = "0x1E24BD8")]
	public LaserMage()
	{
	}
}
[Token(Token = "0x2000103")]
public class MoveBetweenPositions : MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 fromPosition;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 otherPosition;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 direction;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _on;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool onlyOnFromRestingState;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool alwaysReturnToRestingState;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xD51380", Offset = "0xD51380", VA = "0xD51380")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xD5149C", Offset = "0xD5149C", VA = "0xD5149C")]
	private void On()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xD51580", Offset = "0xD51580", VA = "0xD51580")]
	private void Off()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xD51588", Offset = "0xD51588", VA = "0xD51588")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xD51BE8", Offset = "0xD51BE8", VA = "0xD51BE8")]
	public MoveBetweenPositions()
	{
	}
}
[Token(Token = "0x2000104")]
public class Projectile : MonoBehaviour
{
	[Token(Token = "0x2000105")]
	public enum CollisionType
	{
		[Token(Token = "0x40005A4")]
		Trigger,
		[Token(Token = "0x40005A5")]
		Collision,
		[Token(Token = "0x40005A6")]
		Both
	}

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damage;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hitForce;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lifeTime;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool destroysObjectsOnHit;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem destructionPfx;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask collideWith;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool objectPooled;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 cachedForward;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public CollisionType collisionType;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float time;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1EAD920", Offset = "0x1EAD920", VA = "0x1EAD920")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1EAD968", Offset = "0x1EAD968", VA = "0x1EAD968")]
	public void Move()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1EADC70", Offset = "0x1EADC70", VA = "0x1EADC70")]
	private void Hit(Collider coll)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1EADBA0", Offset = "0x1EADBA0", VA = "0x1EADBA0")]
	private void KillIt()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1EAE128", Offset = "0x1EAE128", VA = "0x1EAE128")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1EAE1EC", Offset = "0x1EAE1EC", VA = "0x1EAE1EC")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x1EAE2C4", Offset = "0x1EAE2C4", VA = "0x1EAE2C4")]
	public Projectile()
	{
	}
}
[Token(Token = "0x2000106")]
public class ProjectileManager : BaseManager<ProjectileManager>
{
	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Projectile> projectiles;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x1EAE30C", Offset = "0x1EAE30C", VA = "0x1EAE30C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1EAE3D0", Offset = "0x1EAE3D0", VA = "0x1EAE3D0")]
	public void Add(Projectile projectile)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1EAE0B8", Offset = "0x1EAE0B8", VA = "0x1EAE0B8")]
	public void Remove(Projectile projectile)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1EAE440", Offset = "0x1EAE440", VA = "0x1EAE440")]
	public ProjectileManager()
	{
	}
}
[Token(Token = "0x2000107")]
public class PushPlatforms : MonoBehaviour
{
	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pushForce;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1EAEBC4", Offset = "0x1EAEBC4", VA = "0x1EAEBC4")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1EAEFEC", Offset = "0x1EAEFEC", VA = "0x1EAEFEC")]
	public PushPlatforms()
	{
	}
}
[Token(Token = "0x2000108")]
public class shooterData
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Enemy shooter;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeKeeper;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delayKeeper;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool animated;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1F6135C", Offset = "0x1F6135C", VA = "0x1F6135C")]
	public shooterData()
	{
	}
}
[Token(Token = "0x2000109")]
public class shooterManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2BF60", Offset = "0xA2BF60")]
	private sealed class <>c
	{
		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<shooterData, string> <>9__6_0;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<shooterData, string> <>9__9_0;

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1F61FFC", Offset = "0x1F61FFC", VA = "0x1F61FFC")]
		public <>c()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1F62004", Offset = "0x1F62004", VA = "0x1F62004")]
		internal string <Update>b__6_0(shooterData x)
		{
			return null;
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x1F62074", Offset = "0x1F62074", VA = "0x1F62074")]
		internal string <syncList>b__9_0(shooterData x)
		{
			return null;
		}
	}

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cycleTime;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float animationDelay;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<shooterData> shooters;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int shooterCount;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonView photonView;

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1F6136C", Offset = "0x1F6136C", VA = "0x1F6136C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1F613DC", Offset = "0x1F613DC", VA = "0x1F613DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1F61C7C", Offset = "0x1F61C7C", VA = "0x1F61C7C")]
	[PunRPC]
	private void playAnimation(int index)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1F61D70", Offset = "0x1F61D70", VA = "0x1F61D70")]
	[PunRPC]
	private void shoot(int index)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1F61E08", Offset = "0x1F61E08", VA = "0x1F61E08")]
	[PunRPC]
	private void syncList()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1F61F18", Offset = "0x1F61F18", VA = "0x1F61F18")]
	public shooterManager()
	{
	}
}
[Token(Token = "0x200010B")]
public class SimpleCharacterController : MonoBehaviour, IHasSpeed, IHasDirection
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxSpeed;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float speed;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32140", Offset = "0xA32140")]
	public float turnSpeed;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool canWalkWhileTurning;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool turnImmediately;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool canMoveInYAxis;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32178", Offset = "0xA32178")]
	public Animator animator;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasMoveSpeed;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA321B0", Offset = "0xA321B0")]
	public ORFmodStudioEventEmitter walkSound;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA321E8", Offset = "0xA321E8")]
	public bool performGroundCheck;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 GroundRaycastPivotOffset;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float GroundRayCastLength;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public LayerMask GroundHitLayerMask;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string[] ignoreTags;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32220", Offset = "0xA32220")]
	public ParticleSystem[] animatorControlledPfx;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool forceMoveViaTransform;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 targetDirection;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private BulletTimeSphere bulletTimeSphere;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody rb;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PhotonView view;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion rot;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion targetDirectionRotation;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion forwardRotation;

	[NonSerialized]
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool lastGroundCast;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private RaycastHit groundcastHit;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1E70370", Offset = "0x1E70370", VA = "0x1E70370")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1E704E4", Offset = "0x1E704E4", VA = "0x1E704E4", Slot = "6")]
	protected virtual bool UpdateDirection()
	{
		return default(bool);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1E707F4", Offset = "0x1E707F4", VA = "0x1E707F4", Slot = "7")]
	protected virtual void MoveForward()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1E70B04", Offset = "0x1E70B04", VA = "0x1E70B04")]
	public bool Rotating()
	{
		return default(bool);
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1E70C54", Offset = "0x1E70C54", VA = "0x1E70C54")]
	private void PlayPfx(int pfx)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1E70CC4", Offset = "0x1E70CC4", VA = "0x1E70CC4", Slot = "5")]
	public void SetDirection(Vector3 direction, bool turnImmediately = false)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1E70AFC", Offset = "0x1E70AFC", VA = "0x1E70AFC")]
	private float BulletTimeFactor()
	{
		return default(float);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x1E70E00", Offset = "0x1E70E00", VA = "0x1E70E00")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1E714A4", Offset = "0x1E714A4", VA = "0x1E714A4", Slot = "4")]
	public Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1E71018", Offset = "0x1E71018", VA = "0x1E71018")]
	private bool GroundCast()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1E715B0", Offset = "0x1E715B0", VA = "0x1E715B0")]
	public SimpleCharacterController()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1E71608", Offset = "0x1E71608", VA = "0x1E71608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3AA80", Offset = "0xA3AA80")]
	private bool <GroundCast>b__34_0(string tag)
	{
		return default(bool);
	}
}
[Token(Token = "0x200010C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BF70", Offset = "0xA2BF70")]
public class SimpleNavMeshCharacter : MonoBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SimpleCharacterController scc;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action ReachedDestination;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool HasReachDestination;

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1E72A78", Offset = "0x1E72A78", VA = "0x1E72A78")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1E72B94", Offset = "0x1E72B94", VA = "0x1E72B94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1E72DD4", Offset = "0x1E72DD4", VA = "0x1E72DD4")]
	public SimpleNavMeshCharacter()
	{
	}
}
[Token(Token = "0x200010D")]
public class StatueEye : MonoBehaviour
{
	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask blockedBy;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerCharacter player;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float cooldown;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1E7A7D4", Offset = "0x1E7A7D4", VA = "0x1E7A7D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x1E7A848", Offset = "0x1E7A848", VA = "0x1E7A848")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1E7AC08", Offset = "0x1E7AC08", VA = "0x1E7AC08")]
	public StatueEye()
	{
	}
}
[Token(Token = "0x200010E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2BFF0", Offset = "0xA2BFF0")]
public class Velcro : MonoBehaviour
{
	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1E1EBD4", Offset = "0x1E1EBD4", VA = "0x1E1EBD4")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1E1ECF0", Offset = "0x1E1ECF0", VA = "0x1E1ECF0")]
	public Velcro()
	{
	}
}
[Token(Token = "0x200010F")]
public class Explodes : MonoBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explosion;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xAC3724", Offset = "0xAC3724", VA = "0xAC3724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xAC38A4", Offset = "0xAC38A4", VA = "0xAC38A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xAC38A8", Offset = "0xAC38A8", VA = "0xAC38A8")]
	public Explodes()
	{
	}
}
[Token(Token = "0x2000110")]
public static class OddRavenVrExtensions
{
	[Token(Token = "0x2000111")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C064", Offset = "0xA2C064")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OddRavenVrPriorityOrder priorityOrder;

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1E901AC", Offset = "0x1E901AC", VA = "0x1E901AC")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1E912E4", Offset = "0x1E912E4", VA = "0x1E912E4")]
		internal bool <GetDeviceFromPriority>b__0(InputDeviceBase d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x1E900A0", Offset = "0x1E900A0", VA = "0x1E900A0")]
	public static InputDeviceBase GetDeviceFromPriority(this OddRavenVrPriorityOrder priorityOrder)
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1E90D8C", Offset = "0x1E90D8C", VA = "0x1E90D8C")]
	public static InputDeviceBase[] GetDevicesFromPriority(this OddRavenVrPriorityOrder priorityOrder, bool includeSubTypes = false)
	{
		return null;
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1E901B4", Offset = "0x1E901B4", VA = "0x1E901B4")]
	public static InputDeviceBase[] GetAllDevicesFromPriority(this OddRavenVrPriorityOrder priorityOrder)
	{
		return null;
	}
}
[Token(Token = "0x2000112")]
public static class StringExtensions
{
	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1DF1390", Offset = "0x1DF1390", VA = "0x1DF1390")]
	public static string DeTokenize(this string text)
	{
		return null;
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1DF14B4", Offset = "0x1DF14B4", VA = "0x1DF14B4")]
	public static string DeTokenize(this string text, InputDeviceBase inputDevice)
	{
		return null;
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1DF1D0C", Offset = "0x1DF1D0C", VA = "0x1DF1D0C")]
	public static string DeTokenize(this string text, WandControllerDevice inputDevice, ControllerOrientation orientation)
	{
		return null;
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1DF1AF4", Offset = "0x1DF1AF4", VA = "0x1DF1AF4")]
	public static string Nicify(this string text)
	{
		return null;
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1DF16D8", Offset = "0x1DF16D8", VA = "0x1DF16D8")]
	private static string[] FindTokens(this string text)
	{
		return null;
	}
}
[Token(Token = "0x2000113")]
public static class Vector3Extension
{
	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1E1EBC4", Offset = "0x1E1EBC4", VA = "0x1E1EBC4")]
	public static Vector3 Multiply(this Vector3 a, Vector3 other)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000114")]
public class FindFirefliesInLevels : MonoBehaviour
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ListOfStrings SpecificLevel;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> LevelNames;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string resultsString;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI text;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xAC7DF0", Offset = "0xAC7DF0", VA = "0xAC7DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xAC87EC", Offset = "0xAC87EC", VA = "0xAC87EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xAC7F00", Offset = "0xAC7F00", VA = "0xAC7F00")]
	public void CheckCollectedFireflies()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xAC88F4", Offset = "0xAC88F4", VA = "0xAC88F4")]
	public FindFirefliesInLevels()
	{
	}
}
[Token(Token = "0x2000115")]
public class FlyKiller : MonoBehaviour
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float skinWidth;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minimumExtent;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float partialExtent;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sqrMinimumExtent;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 previousPosition;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody myRigidbody;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider myCollider;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xB9F34C", Offset = "0xB9F34C", VA = "0xB9F34C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xB9F514", Offset = "0xB9F514", VA = "0xB9F514")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xB9F76C", Offset = "0xB9F76C", VA = "0xB9F76C")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xB9F7F4", Offset = "0xB9F7F4", VA = "0xB9F7F4")]
	public FlyKiller()
	{
	}
}
[Token(Token = "0x2000116")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Distance;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool FollowRotation;

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xBA1E38", Offset = "0xBA1E38", VA = "0xBA1E38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xBA1FCC", Offset = "0xBA1FCC", VA = "0xBA1FCC")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x2000117")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C094", Offset = "0xA2C094")]
public class FreePlatform : Platform
{
	[Token(Token = "0x6000617")]
	[Address(RVA = "0xBA2528", Offset = "0xBA2528", VA = "0xBA2528")]
	public FreePlatform()
	{
	}
}
[Token(Token = "0x2000118")]
public class GameOverLevel : MonoBehaviour
{
	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string currentLevel;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xBA5998", Offset = "0xBA5998", VA = "0xBA5998")]
	public void Retry()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xBA5A14", Offset = "0xBA5A14", VA = "0xBA5A14")]
	public void QuitToHub()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xBA5A84", Offset = "0xBA5A84", VA = "0xBA5A84")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xBA5B0C", Offset = "0xBA5B0C", VA = "0xBA5B0C")]
	public void Quit()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xBA5B14", Offset = "0xBA5B14", VA = "0xBA5B14")]
	public GameOverLevel()
	{
	}
}
[Token(Token = "0x2000119")]
public class ActivateComponentOnCollision : MonoBehaviour
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component component;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] onlyTags;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool deactivateOnLeave;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool broadcastOnMessage;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int collisionCount;

	[Token(Token = "0x40005EE")]
	private const string _enabled = "enabled";

	[Token(Token = "0x40005EF")]
	private const string _on = "On";

	[Token(Token = "0x40005F0")]
	private const string _off = "Off";

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xB859F8", Offset = "0xB859F8", VA = "0xB859F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xB85AC4", Offset = "0xB85AC4", VA = "0xB85AC4")]
	public void Activate()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xB85CB4", Offset = "0xB85CB4", VA = "0xB85CB4")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xB85E68", Offset = "0xB85E68", VA = "0xB85E68")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xB85F24", Offset = "0xB85F24", VA = "0xB85F24")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xB86078", Offset = "0xB86078", VA = "0xB86078")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xB86150", Offset = "0xB86150", VA = "0xB86150")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xB86214", Offset = "0xB86214", VA = "0xB86214")]
	public ActivateComponentOnCollision()
	{
	}
}
[Token(Token = "0x200011A")]
public class ActivatableCameraPosition : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	public enum CameraControlEnum
	{
		[Token(Token = "0x4000603")]
		Keep,
		[Token(Token = "0x4000604")]
		On,
		[Token(Token = "0x4000605")]
		Off
	}

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform anchorPoint;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform lookAt;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool overrideCameraSpeed;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float cameraSpeed;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool smoothRotation;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float lookAtSpeed;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lookAtPlayer;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public CameraControlEnum controllableCamera;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32258", Offset = "0xA32258")]
	public bool setRotation;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector2 setRotationTo;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool setPivotPoint;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CameraControlEnum unfixedControllableCamera;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float saveSpeed;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float saveLookAtSpeed;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool saveSmoothRotation;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool hasSavedCameraSpeed;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xB84678", Offset = "0xB84678", VA = "0xB84678")]
	private void On()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xB848E0", Offset = "0xB848E0", VA = "0xB848E0")]
	private void Off()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xB84BB8", Offset = "0xB84BB8", VA = "0xB84BB8")]
	public ActivatableCameraPosition()
	{
	}
}
[Token(Token = "0x200011C")]
public class ActivatableCameraRotation : MonoBehaviour
{
	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C0F8", Offset = "0xA2C0F8")]
	private sealed class <Rotate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivatableCameraRotation <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062F")]
			[Address(RVA = "0xB85040", Offset = "0xB85040", VA = "0xB85040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0xB850B0", Offset = "0xB850B0", VA = "0xB850B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xB84D18", Offset = "0xB84D18", VA = "0xB84D18")]
		[DebuggerHidden]
		public <Rotate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xB84E08", Offset = "0xB84E08", VA = "0xB84E08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xB84E0C", Offset = "0xB84E0C", VA = "0xB84E0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xB85048", Offset = "0xB85048", VA = "0xB85048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool rotateX;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool rotateY;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 rotation;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ControllableCamera cc;

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xB84BCC", Offset = "0xB84BCC", VA = "0xB84BCC")]
	private void On()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xB84CA4", Offset = "0xB84CA4", VA = "0xB84CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3AB20", Offset = "0xA3AB20")]
	private IEnumerator Rotate()
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xB84D44", Offset = "0xB84D44", VA = "0xB84D44")]
	private float AngleDistance(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xB84DF0", Offset = "0xB84DF0", VA = "0xB84DF0")]
	public ActivatableCameraRotation()
	{
	}
}
[Token(Token = "0x200011E")]
public class ActivatableCameraShake : MonoBehaviour
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float magnitude;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float time;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float wearOff;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool magnitudeByDistance;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDistance;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32290", Offset = "0xA32290")]
	public bool screenControllerVibration;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float screenControllerVibrationForce;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float screenControllerVibrationDuration;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool vrControllerVibration;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float vrControllerVibrationForce;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float vrControllerVibrationDuration;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xB850B8", Offset = "0xB850B8", VA = "0xB850B8")]
	private void On()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xB8533C", Offset = "0xB8533C", VA = "0xB8533C")]
	private void Off()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xB85340", Offset = "0xB85340", VA = "0xB85340")]
	public ActivatableCameraShake()
	{
	}
}
[Token(Token = "0x200011F")]
public class ActivatableFacialExpression : MonoBehaviour
{
	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CarlyFacialExpressions.Expression expression;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float showForSeconds;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool defaultExpressionWhenOff;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool onlyChangeExpressionIfCurrentExpressionIsDefault;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CarlyFacialExpressions facialExpression;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xB85368", Offset = "0xB85368", VA = "0xB85368")]
	private void Start()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xB853DC", Offset = "0xB853DC", VA = "0xB853DC")]
	private void On()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xB8543C", Offset = "0xB8543C", VA = "0xB8543C")]
	private void Off()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xB854F0", Offset = "0xB854F0", VA = "0xB854F0")]
	public ActivatableFacialExpression()
	{
	}
}
[Token(Token = "0x2000120")]
public class ActivatableLookAt : MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CarlyFacialExpressions.Expression facialExpression;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceEvenIfInBlockingState;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float stopLookingAfterTime;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OddRavenCharacterController occ;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xB85508", Offset = "0xB85508", VA = "0xB85508")]
	private void Start()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xB8557C", Offset = "0xB8557C", VA = "0xB8557C")]
	private void On()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xB8563C", Offset = "0xB8563C", VA = "0xB8563C")]
	private void Off()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xB85674", Offset = "0xB85674", VA = "0xB85674")]
	public ActivatableLookAt()
	{
	}
}
[Token(Token = "0x2000121")]
public class ActivatorListenerChain : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000122")]
	public class ActivatorListenerChainLink
	{
		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour activatorListener;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xB89710", Offset = "0xB89710", VA = "0xB89710")]
		public ActivatorListenerChainLink()
		{
		}
	}

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActivatorListenerChainLink[] activatorListeners;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentLink;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xB89564", Offset = "0xB89564", VA = "0xB89564")]
	private void On()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xB8956C", Offset = "0xB8956C", VA = "0xB8956C")]
	private void ActivateNext()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xB89640", Offset = "0xB89640", VA = "0xB89640")]
	private void ActivateLink()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xB89708", Offset = "0xB89708", VA = "0xB89708")]
	public ActivatorListenerChain()
	{
	}
}
[Token(Token = "0x2000123")]
public class ActivatorProxy : MonoBehaviour
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour[] targets;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool proxyOn;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool proxyOff;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool broadcast;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xB89718", Offset = "0xB89718", VA = "0xB89718")]
	private void On()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xB898E8", Offset = "0xB898E8", VA = "0xB898E8")]
	private void Off()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xB89AB8", Offset = "0xB89AB8", VA = "0xB89AB8")]
	public ActivatorProxy()
	{
	}
}
[Token(Token = "0x2000124")]
public class AnimateMaterialProperty : MonoBehaviour
{
	[Token(Token = "0x2000125")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C108", Offset = "0xA2C108")]
	private sealed class <Animate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimateMaterialProperty <>4__this;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float from;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float to;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock <mpb>5__3;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064C")]
			[Address(RVA = "0xB8BAB4", Offset = "0xB8BAB4", VA = "0xB8BAB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064E")]
			[Address(RVA = "0xB8BB24", Offset = "0xB8BB24", VA = "0xB8BB24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xB8B840", Offset = "0xB8B840", VA = "0xB8B840")]
		[DebuggerHidden]
		public <Animate>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xB8B884", Offset = "0xB8B884", VA = "0xB8B884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xB8B888", Offset = "0xB8B888", VA = "0xB8B888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xB8BABC", Offset = "0xB8BABC", VA = "0xB8BABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer renderer;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string materialProperty;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float animateFrom;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float animateTo;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float duration;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool reverseAnimationWhenTurnedOff;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xB8B6F8", Offset = "0xB8B6F8", VA = "0xB8B6F8")]
	private void On()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xB8B7F4", Offset = "0xB8B7F4", VA = "0xB8B7F4")]
	private void Off()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xB8B72C", Offset = "0xB8B72C", VA = "0xB8B72C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3ABD4", Offset = "0xA3ABD4")]
	private IEnumerator Animate(float from, float to, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xB8B86C", Offset = "0xB8B86C", VA = "0xB8B86C")]
	public AnimateMaterialProperty()
	{
	}
}
[Token(Token = "0x2000126")]
public class DeactivateOtherActivatorListener : MonoBehaviour
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour otherComponent;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool broadcast;

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xAB4AB4", Offset = "0xAB4AB4", VA = "0xAB4AB4")]
	private void On()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xAB4B48", Offset = "0xAB4B48", VA = "0xAB4B48")]
	public DeactivateOtherActivatorListener()
	{
	}
}
[Token(Token = "0x2000127")]
public class SetEmissionDeprecated : MonoBehaviour
{
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color onEmissionColor;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float onEmission;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool setEmissionWhenTurnedOff;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color offEmissionColor;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float offEmission;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer target;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string colorPropertyName;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1E66570", Offset = "0x1E66570", VA = "0x1E66570")]
	private void On()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1E6667C", Offset = "0x1E6667C", VA = "0x1E6667C")]
	private void Off()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1E667A8", Offset = "0x1E667A8", VA = "0x1E667A8")]
	public SetEmissionDeprecated()
	{
	}
}
[Token(Token = "0x2000128")]
public class DestroyGameObject : MonoBehaviour
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xAB5160", Offset = "0xAB5160", VA = "0xAB5160")]
	private void On()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xAB51CC", Offset = "0xAB51CC", VA = "0xAB51CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xAB51D0", Offset = "0xAB51D0", VA = "0xAB51D0")]
	public DestroyGameObject()
	{
	}
}
[Token(Token = "0x2000129")]
public class DisableCarly : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool makeKinematic;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OddRavenCharacterInput input;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OddRavenCharacterController occ;

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xAB7070", Offset = "0xAB7070", VA = "0xAB7070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xAB7118", Offset = "0xAB7118", VA = "0xAB7118")]
	private void On()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xAB7294", Offset = "0xAB7294", VA = "0xAB7294")]
	private void Off()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xAB73F0", Offset = "0xAB73F0", VA = "0xAB73F0")]
	public DisableCarly()
	{
	}
}
[Token(Token = "0x200012A")]
public class Dissolve : MonoBehaviour, IDeactivateWhenDestroyed
{
	[Serializable]
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C118", Offset = "0xA2C118")]
	private sealed class <>c
	{
		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Renderer, bool> <>9__11_0;

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xAB9A74", Offset = "0xAB9A74", VA = "0xAB9A74")]
		public <>c()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xAB9A7C", Offset = "0xAB9A7C", VA = "0xAB9A7C")]
		internal bool <On>b__11_0(Renderer r)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C128", Offset = "0xA2C128")]
	private sealed class <DoDissolve>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dissolve <>4__this;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool reversed;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool deactivateWhenFinished;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <i>5__2;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForEndOfFrame <wait>5__3;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000666")]
			[Address(RVA = "0xABA120", Offset = "0xABA120", VA = "0xABA120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000668")]
			[Address(RVA = "0xABA190", Offset = "0xABA190", VA = "0xABA190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xAB9924", Offset = "0xAB9924", VA = "0xAB9924")]
		[DebuggerHidden]
		public <DoDissolve>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xAB9B20", Offset = "0xAB9B20", VA = "0xAB9B20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xAB9B24", Offset = "0xAB9B24", VA = "0xAB9B24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xABA128", Offset = "0xABA128", VA = "0xABA128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dissolveTime;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dissolveDelay;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startValue;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endValue;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool destroyWhenFinished;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool inverseWhenOff;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool autoDissolveOnDestruction;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA322C8", Offset = "0xA322C8")]
	public Material changeToMaterialBeforeDissolve;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material changeToMaterialAfterDissolve;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string dissolveProperty;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] _renderers;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xAB96DC", Offset = "0xAB96DC", VA = "0xAB96DC")]
	private void On()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xAB98D8", Offset = "0xAB98D8", VA = "0xAB98D8")]
	private void Off()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xAB981C", Offset = "0xAB981C", VA = "0xAB981C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3AC88", Offset = "0xA3AC88")]
	private IEnumerator DoDissolve(bool reversed = false, bool deactivateWhenFinished = false)
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xAB9950", Offset = "0xAB9950", VA = "0xAB9950", Slot = "4")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xAB999C", Offset = "0xAB999C", VA = "0xAB999C")]
	public Dissolve()
	{
	}
}
[Token(Token = "0x200012D")]
public class EnableComponents : MonoBehaviour
{
	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C138", Offset = "0xA2C138")]
	private sealed class <EnableComp>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnableComponents <>4__this;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <comps>5__2;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Component[] <>7__wrap2;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap3;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000671")]
			[Address(RVA = "0xAC0C2C", Offset = "0xAC0C2C", VA = "0xAC0C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000673")]
			[Address(RVA = "0xAC0C9C", Offset = "0xAC0C9C", VA = "0xAC0C9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xAC0784", Offset = "0xAC0784", VA = "0xAC0784")]
		[DebuggerHidden]
		public <EnableComp>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xAC07D4", Offset = "0xAC07D4", VA = "0xAC07D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xAC07D8", Offset = "0xAC07D8", VA = "0xAC07D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xAC0C34", Offset = "0xAC0C34", VA = "0xAC0C34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component[] components;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enableComponent;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool startOff;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool activateGameObject;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool deactivateGameObject;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool broadcastOnMessage;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool activate;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool deactivate;

	[Token(Token = "0x4000662")]
	private const string _on = "On";

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Delay;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxComponentsPerFrame;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xAC04D4", Offset = "0xAC04D4", VA = "0xAC04D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xAC06E4", Offset = "0xAC06E4", VA = "0xAC06E4")]
	private void On()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xAC0710", Offset = "0xAC0710", VA = "0xAC0710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3AD3C", Offset = "0xA3AD3C")]
	private IEnumerator EnableComp()
	{
		return null;
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xAC04E4", Offset = "0xAC04E4", VA = "0xAC04E4")]
	private void Off()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xAC07B0", Offset = "0xAC07B0", VA = "0xAC07B0")]
	public EnableComponents()
	{
	}
}
[Token(Token = "0x200012F")]
public class FadeAlpha : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C148", Offset = "0xA2C148")]
	private sealed class <>c
	{
		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Renderer, bool> <>9__7_0;

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xAC6B88", Offset = "0xAC6B88", VA = "0xAC6B88")]
		public <>c()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xAC6B90", Offset = "0xAC6B90", VA = "0xAC6B90")]
		internal bool <On>b__7_0(Renderer r)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C158", Offset = "0xA2C158")]
	private sealed class <DoFade>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeAlpha <>4__this;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0xAC700C", Offset = "0xAC700C", VA = "0xAC700C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0xAC707C", Offset = "0xAC707C", VA = "0xAC707C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xAC6A88", Offset = "0xAC6A88", VA = "0xAC6A88")]
		[DebuggerHidden]
		public <DoFade>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xAC6C34", Offset = "0xAC6C34", VA = "0xAC6C34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xAC6C38", Offset = "0xAC6C38", VA = "0xAC6C38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xAC7014", Offset = "0xAC7014", VA = "0xAC7014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeDelay;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startValue;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endValue;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool destroyWhenFinished;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fadeColor;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] _renderers;

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xAC68DC", Offset = "0xAC68DC", VA = "0xAC68DC")]
	private void On()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xAC6A14", Offset = "0xAC6A14", VA = "0xAC6A14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3ADF0", Offset = "0xA3ADF0")]
	private IEnumerator DoFade()
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xAC6AB4", Offset = "0xAC6AB4", VA = "0xAC6AB4")]
	public FadeAlpha()
	{
	}
}
[Token(Token = "0x2000132")]
public class FadeTextMesh : MonoBehaviour
{
	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C168", Offset = "0xA2C168")]
	private sealed class <FadeTo>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeTextMesh <>4__this;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float alpha;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0xAC76D8", Offset = "0xAC76D8", VA = "0xAC76D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0xAC7748", Offset = "0xAC7748", VA = "0xAC7748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xAC74F4", Offset = "0xAC74F4", VA = "0xAC74F4")]
		[DebuggerHidden]
		public <FadeTo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xAC7534", Offset = "0xAC7534", VA = "0xAC7534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xAC7538", Offset = "0xAC7538", VA = "0xAC7538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xAC76E0", Offset = "0xAC76E0", VA = "0xAC76E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text target;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeToWhenOn;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeToWhenOff;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xAC73E4", Offset = "0xAC73E4", VA = "0xAC73E4")]
	private void On()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xAC74B8", Offset = "0xAC74B8", VA = "0xAC74B8")]
	private void Off()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xAC7420", Offset = "0xAC7420", VA = "0xAC7420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3AEA4", Offset = "0xA3AEA4")]
	public IEnumerator FadeTo(float alpha)
	{
		return null;
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xAC7520", Offset = "0xAC7520", VA = "0xAC7520")]
	public FadeTextMesh()
	{
	}
}
[Token(Token = "0x2000134")]
public class FadeUI : MonoBehaviour
{
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C178", Offset = "0xA2C178")]
	private sealed class <FadeTo>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeUI <>4__this;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float alpha;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xAC7A44", Offset = "0xAC7A44", VA = "0xAC7A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0xAC7AB4", Offset = "0xAC7AB4", VA = "0xAC7AB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xAC7860", Offset = "0xAC7860", VA = "0xAC7860")]
		[DebuggerHidden]
		public <FadeTo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xAC78A0", Offset = "0xAC78A0", VA = "0xAC78A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xAC78A4", Offset = "0xAC78A4", VA = "0xAC78A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xAC7A4C", Offset = "0xAC7A4C", VA = "0xAC7A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup target;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeToWhenOn;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeToWhenOff;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xAC7750", Offset = "0xAC7750", VA = "0xAC7750")]
	private void On()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xAC7824", Offset = "0xAC7824", VA = "0xAC7824")]
	private void Off()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xAC778C", Offset = "0xAC778C", VA = "0xAC778C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3AF58", Offset = "0xA3AF58")]
	public IEnumerator FadeTo(float alpha)
	{
		return null;
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xAC788C", Offset = "0xAC788C", VA = "0xAC788C")]
	public FadeUI()
	{
	}
}
[Token(Token = "0x2000136")]
public class LoadScene : MonoBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA32300", Offset = "0xA32300")]
	public string scene;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1E35A88", Offset = "0x1E35A88", VA = "0x1E35A88")]
	private void On()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1E35AF8", Offset = "0x1E35AF8", VA = "0x1E35AF8")]
	public LoadScene()
	{
	}
}
[Token(Token = "0x2000137")]
public class LoopParticleSystems : MonoBehaviour
{
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] particleSystems;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool setLoopAtActivate;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1E3AF7C", Offset = "0x1E3AF7C", VA = "0x1E3AF7C")]
	private void On()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1E3B038", Offset = "0x1E3B038", VA = "0x1E3B038")]
	private void Off()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x1E3B0FC", Offset = "0x1E3B0FC", VA = "0x1E3B0FC")]
	public LoopParticleSystems()
	{
	}
}
[Token(Token = "0x2000138")]
public class MakeTrigger : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider collider;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xD50090", Offset = "0xD50090", VA = "0xD50090")]
	private void On()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xD500C4", Offset = "0xD500C4", VA = "0xD500C4")]
	private void Off()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xD500F8", Offset = "0xD500F8", VA = "0xD500F8")]
	public MakeTrigger()
	{
	}
}
[Token(Token = "0x2000139")]
public class MoveToPosition : MonoBehaviour
{
	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 position;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool activateWhenEnabled;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool localPosition;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool on;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xD521B8", Offset = "0xD521B8", VA = "0xD521B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xD521D8", Offset = "0xD521D8", VA = "0xD521D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xD521CC", Offset = "0xD521CC", VA = "0xD521CC")]
	private void On()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xD52260", Offset = "0xD52260", VA = "0xD52260")]
	private void Off()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xD52268", Offset = "0xD52268", VA = "0xD52268")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xD52474", Offset = "0xD52474", VA = "0xD52474")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xD52658", Offset = "0xD52658", VA = "0xD52658")]
	public MoveToPosition()
	{
	}
}
[Token(Token = "0x200013A")]
public class MoveToPositionAndBack : AffectPlayerVelocity, IHasSpeed
{
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C188", Offset = "0xA2C188")]
	private sealed class <Move>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveToPositionAndBack <>4__this;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <wait>5__2;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <originalPosition>5__3;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <mtp>5__4;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <v>5__5;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006AA")]
			[Address(RVA = "0xD52F90", Offset = "0xD52F90", VA = "0xD52F90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0xD53000", Offset = "0xD53000", VA = "0xD53000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xD5277C", Offset = "0xD5277C", VA = "0xD5277C")]
		[DebuggerHidden]
		public <Move>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xD527CC", Offset = "0xD527CC", VA = "0xD527CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xD527D0", Offset = "0xD527D0", VA = "0xD527D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xD52F98", Offset = "0xD52F98", VA = "0xD52F98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 moveToPosition;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float delay;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float speed;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float stayTime;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float returnSpeed;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float ignoreOnCheckAfter;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _on;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float time;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeToIgnoreOn;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 currentSpeed;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xD52670", Offset = "0xD52670", VA = "0xD52670")]
	private void On()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xD52708", Offset = "0xD52708", VA = "0xD52708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B00C", Offset = "0xA3B00C")]
	private IEnumerator Move()
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xD527A8", Offset = "0xD527A8", VA = "0xD527A8", Slot = "5")]
	public override Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xD527B4", Offset = "0xD527B4", VA = "0xD527B4")]
	public MoveToPositionAndBack()
	{
	}
}
[Token(Token = "0x200013C")]
public class MoveWithConstantSpeed : MonoBehaviour
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationSpeed;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _on;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xD53008", Offset = "0xD53008", VA = "0xD53008")]
	private void On()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xD53014", Offset = "0xD53014", VA = "0xD53014")]
	private void Off()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xD5301C", Offset = "0xD5301C", VA = "0xD5301C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xD53264", Offset = "0xD53264", VA = "0xD53264")]
	public MoveWithConstantSpeed()
	{
	}
}
[Token(Token = "0x200013D")]
public class NegateActivation : MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour target;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xD557D0", Offset = "0xD557D0", VA = "0xD557D0")]
	private void On()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xD55838", Offset = "0xD55838", VA = "0xD55838")]
	private void Off()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xD558A0", Offset = "0xD558A0", VA = "0xD558A0")]
	public NegateActivation()
	{
	}
}
[Token(Token = "0x200013E")]
public class PlayAndStopFmodEvent : MonoBehaviour
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter playSound;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ORFmodStudioEventEmitter stopSound;

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x1EA031C", Offset = "0x1EA031C", VA = "0x1EA031C")]
	private void On()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x1EA0408", Offset = "0x1EA0408", VA = "0x1EA0408")]
	public PlayAndStopFmodEvent()
	{
	}
}
[Token(Token = "0x200013F")]
public class PlayAnimation : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string onState;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x1EA0410", Offset = "0x1EA0410", VA = "0x1EA0410")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1EA0414", Offset = "0x1EA0414", VA = "0x1EA0414")]
	private void On()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x1EA0470", Offset = "0x1EA0470", VA = "0x1EA0470")]
	private void Off()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x1EA04CC", Offset = "0x1EA04CC", VA = "0x1EA04CC")]
	public PlayAnimation()
	{
	}
}
[Token(Token = "0x2000140")]
public class PlayFmodEvent : MonoBehaviour
{
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C198", Offset = "0xA2C198")]
	private sealed class <Play>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayFmodEvent <>4__this;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ORFmodStudioEventEmitter soundEvent;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0x1EA0A64", Offset = "0x1EA0A64", VA = "0x1EA0A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x1EA0AD4", Offset = "0x1EA0AD4", VA = "0x1EA0AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x1EA092C", Offset = "0x1EA092C", VA = "0x1EA092C")]
		[DebuggerHidden]
		public <Play>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x1EA0960", Offset = "0x1EA0960", VA = "0x1EA0960", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1EA0964", Offset = "0x1EA0964", VA = "0x1EA0964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1EA0A6C", Offset = "0x1EA0A6C", VA = "0x1EA0A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA32314", Offset = "0xA32314")]
	public ORFmodStudioEventEmitter onSound;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ORFmodStudioEventEmitter offSound;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1EA0834", Offset = "0x1EA0834", VA = "0x1EA0834")]
	private void On()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1EA08FC", Offset = "0x1EA08FC", VA = "0x1EA08FC")]
	private void Off()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1EA0864", Offset = "0x1EA0864", VA = "0x1EA0864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B0C0", Offset = "0xA3B0C0")]
	private IEnumerator Play(ORFmodStudioEventEmitter soundEvent)
	{
		return null;
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1EA0958", Offset = "0x1EA0958", VA = "0x1EA0958")]
	public PlayFmodEvent()
	{
	}
}
[Token(Token = "0x2000142")]
public class PlayParticleSystem : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activate;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool deactivate;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool restartIfPlaying;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem[] particleSystems;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool fireOnce;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool on;

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1EA0ADC", Offset = "0x1EA0ADC", VA = "0x1EA0ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1EA0B4C", Offset = "0x1EA0B4C", VA = "0x1EA0B4C")]
	private void On()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1EA0BD0", Offset = "0x1EA0BD0", VA = "0x1EA0BD0")]
	private void Off()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1EA0C60", Offset = "0x1EA0C60", VA = "0x1EA0C60")]
	private void PlayParticles()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1EA0D0C", Offset = "0x1EA0D0C", VA = "0x1EA0D0C")]
	public PlayParticleSystem()
	{
	}
}
[Token(Token = "0x2000143")]
public class Respawn : MonoBehaviour
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour target;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool moveUntilClear;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1EB4314", Offset = "0x1EB4314", VA = "0x1EB4314")]
	private void On()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1EB4438", Offset = "0x1EB4438", VA = "0x1EB4438")]
	private void Off()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1EB443C", Offset = "0x1EB443C", VA = "0x1EB443C")]
	public Respawn()
	{
	}
}
[Token(Token = "0x2000144")]
public class RotateGameObject : MonoBehaviour
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotation;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float time;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _on;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1EBA14C", Offset = "0x1EBA14C", VA = "0x1EBA14C")]
	private void On()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1EBA158", Offset = "0x1EBA158", VA = "0x1EBA158")]
	private void Off()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x1EBA160", Offset = "0x1EBA160", VA = "0x1EBA160")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1EBA2E0", Offset = "0x1EBA2E0", VA = "0x1EBA2E0")]
	public RotateGameObject()
	{
	}
}
[Token(Token = "0x2000145")]
public class SecretHint : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C1A8", Offset = "0xA2C1A8")]
	private sealed class <ShowSecret>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecretHint <>4__this;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OddRavenCharacterInput <input>5__2;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <playerCam>5__3;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SmoothFollow <follow>5__4;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x1E6569C", Offset = "0x1E6569C", VA = "0x1E6569C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x1E6570C", Offset = "0x1E6570C", VA = "0x1E6570C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1E646D0", Offset = "0x1E646D0", VA = "0x1E646D0")]
		[DebuggerHidden]
		public <ShowSecret>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1E64F38", Offset = "0x1E64F38", VA = "0x1E64F38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x1E64F3C", Offset = "0x1E64F3C", VA = "0x1E64F3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x1E656A4", Offset = "0x1E656A4", VA = "0x1E656A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C1B8", Offset = "0xA2C1B8")]
	private sealed class <Reset>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecretHint <>4__this;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SmoothFollow <follow>5__2;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x1E64EC0", Offset = "0x1E64EC0", VA = "0x1E64EC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x1E64F30", Offset = "0x1E64F30", VA = "0x1E64F30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1E64770", Offset = "0x1E64770", VA = "0x1E64770")]
		[DebuggerHidden]
		public <Reset>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1E64834", Offset = "0x1E64834", VA = "0x1E64834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1E64838", Offset = "0x1E64838", VA = "0x1E64838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1E64EC8", Offset = "0x1E64EC8", VA = "0x1E64EC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform anchorPoint;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform lookAt;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ORFmodStudioEventEmitter secretSound;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool overrideCameraSpeed;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cameraSpeed;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool smoothRotation;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool smoothMovement;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lookAtSpeed;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool onlyFirstTime;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float delayBeforeActivation;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MonoBehaviour activate;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float freezeTime;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool setCameraRotationWhenDone;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector2 setCameraRotationTo;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float saveSpeed;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float saveLookAtSpeed;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool saveSmoothRotation;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform saveFollowTransform;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool wasActivated;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x1E64630", Offset = "0x1E64630", VA = "0x1E64630")]
	private void On()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1E6465C", Offset = "0x1E6465C", VA = "0x1E6465C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B174", Offset = "0xA3B174")]
	private IEnumerator ShowSecret()
	{
		return null;
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1E646FC", Offset = "0x1E646FC", VA = "0x1E646FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B1D8", Offset = "0xA3B1D8")]
	private IEnumerator Reset()
	{
		return null;
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1E6479C", Offset = "0x1E6479C", VA = "0x1E6479C")]
	private void Off()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1E647A0", Offset = "0x1E647A0", VA = "0x1E647A0")]
	public SecretHint()
	{
	}
}
[Token(Token = "0x2000148")]
public class SetAmbientColor : MonoBehaviour
{
	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AmbientMode mode;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color skyColor;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color equatorColor;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color groundColor;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private AmbientMode saveMode;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color saveSkyColor;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color saveEquatorColor;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color saveGroundColor;

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1E65714", Offset = "0x1E65714", VA = "0x1E65714")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1E6576C", Offset = "0x1E6576C", VA = "0x1E6576C")]
	private void On()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1E657C0", Offset = "0x1E657C0", VA = "0x1E657C0")]
	private void Off()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1E65814", Offset = "0x1E65814", VA = "0x1E65814")]
	public SetAmbientColor()
	{
	}
}
[Token(Token = "0x2000149")]
public class SetAnimationTrigger : MonoBehaviour
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string TriggerName;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool DestroyOnAnimationEnd;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float WaitTime;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1E6581C", Offset = "0x1E6581C", VA = "0x1E6581C")]
	private void On()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1E6592C", Offset = "0x1E6592C", VA = "0x1E6592C")]
	private void Off()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1E65960", Offset = "0x1E65960", VA = "0x1E65960")]
	public SetAnimationTrigger()
	{
	}
}
[Token(Token = "0x200014A")]
public class SetAnimatorBooleanState : MonoBehaviour
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string state;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1E65970", Offset = "0x1E65970", VA = "0x1E65970")]
	private void On()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1E659A8", Offset = "0x1E659A8", VA = "0x1E659A8")]
	private void Off()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1E659E0", Offset = "0x1E659E0", VA = "0x1E659E0")]
	public SetAnimatorBooleanState()
	{
	}
}
[Token(Token = "0x200014B")]
public class SetColor : MonoBehaviour
{
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer target;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA3234C", Offset = "0xA3234C")]
	public Color onColor;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA32364", Offset = "0xA32364")]
	public Color offColor;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool setEmissionWhenTurnedOff;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string colorPropertyName;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ignoreOnNoBloom;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1E66014", Offset = "0x1E66014", VA = "0x1E66014")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1E660C0", Offset = "0x1E660C0", VA = "0x1E660C0")]
	private void On()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1E66234", Offset = "0x1E66234", VA = "0x1E66234")]
	private void Off()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1E663B0", Offset = "0x1E663B0", VA = "0x1E663B0")]
	public SetColor()
	{
	}
}
[Token(Token = "0x200014C")]
public class SetFmodParameter : MonoBehaviour
{
	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter soundEmitter;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string parameter;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float onValue;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float offValue;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1E66CC4", Offset = "0x1E66CC4", VA = "0x1E66CC4")]
	private void On()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x1E66D30", Offset = "0x1E66D30", VA = "0x1E66D30")]
	private void Off()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1E66D9C", Offset = "0x1E66D9C", VA = "0x1E66D9C")]
	public SetFmodParameter()
	{
	}
}
[Token(Token = "0x200014D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C1C8", Offset = "0xA2C1C8")]
public class SetKinematic : MonoBehaviour
{
	[Token(Token = "0x200014E")]
	public enum ActivationState
	{
		[Token(Token = "0x40006FF")]
		On,
		[Token(Token = "0x4000700")]
		Off
	}

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool kinematic;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool activate;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool deactivate;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1E66F38", Offset = "0x1E66F38", VA = "0x1E66F38")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1E66F90", Offset = "0x1E66F90", VA = "0x1E66F90")]
	private void On()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1E66FD8", Offset = "0x1E66FD8", VA = "0x1E66FD8")]
	private void Off()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1E67020", Offset = "0x1E67020", VA = "0x1E67020")]
	public SetKinematic()
	{
	}
}
[Token(Token = "0x200014F")]
public class SetMaterial : MonoBehaviour
{
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material onMaterial;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material noBloomMaterial;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material offMaterial;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer target;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1E68C1C", Offset = "0x1E68C1C", VA = "0x1E68C1C")]
	private void On()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1E68D3C", Offset = "0x1E68D3C", VA = "0x1E68D3C")]
	private void Off()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1E68DF4", Offset = "0x1E68DF4", VA = "0x1E68DF4")]
	public SetMaterial()
	{
	}
}
[Token(Token = "0x2000150")]
public class SetState : MonoBehaviour
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateMachine stateMachine;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string state;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool setStateTo;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool persist;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1E6A6BC", Offset = "0x1E6A6BC", VA = "0x1E6A6BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1E6A740", Offset = "0x1E6A740", VA = "0x1E6A740")]
	private void On()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1E6A79C", Offset = "0x1E6A79C", VA = "0x1E6A79C")]
	public SetState()
	{
	}
}
[Token(Token = "0x2000151")]
public class ShowAndHide : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] show;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] hide;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BaseActivator.ActivationState startState;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1E6B9F0", Offset = "0x1E6B9F0", VA = "0x1E6B9F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1E6BA0C", Offset = "0x1E6BA0C", VA = "0x1E6BA0C")]
	private void On()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1E6BB28", Offset = "0x1E6BB28", VA = "0x1E6BB28")]
	private void Off()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1E6BC44", Offset = "0x1E6BC44", VA = "0x1E6BC44")]
	public ShowAndHide()
	{
	}
}
[Token(Token = "0x2000152")]
public class ShowTutorial : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C22C", Offset = "0xA2C22C")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowTutorial <>4__this;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <wffu>5__2;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <tut>5__3;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600070B")]
			[Address(RVA = "0x1E702F8", Offset = "0x1E702F8", VA = "0x1E702F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x1E70368", Offset = "0x1E70368", VA = "0x1E70368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1E6F3EC", Offset = "0x1E6F3EC", VA = "0x1E6F3EC")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1E6FED8", Offset = "0x1E6FED8", VA = "0x1E6FED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1E6FEDC", Offset = "0x1E6FEDC", VA = "0x1E6FEDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1E70300", Offset = "0x1E70300", VA = "0x1E70300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C23C", Offset = "0xA2C23C")]
	private sealed class <ShowMe>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowTutorial <>4__this;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x1E6FE60", Offset = "0x1E6FE60", VA = "0x1E6FE60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0x1E6FED0", Offset = "0x1E6FED0", VA = "0x1E6FED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1E6F70C", Offset = "0x1E6F70C", VA = "0x1E6F70C")]
		[DebuggerHidden]
		public <ShowMe>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1E6FC1C", Offset = "0x1E6FC1C", VA = "0x1E6FC1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1E6FC20", Offset = "0x1E6FC20", VA = "0x1E6FC20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1E6FE68", Offset = "0x1E6FE68", VA = "0x1E6FE68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C24C", Offset = "0xA2C24C")]
	private sealed class <HideMe>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowTutorial <>4__this;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x1E6FBA4", Offset = "0x1E6FBA4", VA = "0x1E6FBA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0x1E6FC14", Offset = "0x1E6FC14", VA = "0x1E6FC14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x1E6F7AC", Offset = "0x1E6F7AC", VA = "0x1E6F7AC")]
		[DebuggerHidden]
		public <HideMe>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1E6FA04", Offset = "0x1E6FA04", VA = "0x1E6FA04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1E6FA08", Offset = "0x1E6FA08", VA = "0x1E6FA08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1E6FBAC", Offset = "0x1E6FBAC", VA = "0x1E6FBAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xA3237C", Offset = "0xA3237C")]
	public string text;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite image;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text tutorialText;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image tutorialImage;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool showOnce;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OddRavenVrPriorityOrder overridePriorityOrder;

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x1E6F378", Offset = "0x1E6F378", VA = "0x1E6F378")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B2DC", Offset = "0xA3B2DC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1E6F418", Offset = "0x1E6F418", VA = "0x1E6F418")]
	private void On()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1E6F51C", Offset = "0x1E6F51C", VA = "0x1E6F51C")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1E6F62C", Offset = "0x1E6F62C", VA = "0x1E6F62C")]
	private void Off()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1E6F698", Offset = "0x1E6F698", VA = "0x1E6F698")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B340", Offset = "0xA3B340")]
	private IEnumerator ShowMe()
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1E6F738", Offset = "0x1E6F738", VA = "0x1E6F738")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B3A4", Offset = "0xA3B3A4")]
	private IEnumerator HideMe()
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1E6F7D8", Offset = "0x1E6F7D8", VA = "0x1E6F7D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1E6F9AC", Offset = "0x1E6F9AC", VA = "0x1E6F9AC")]
	public ShowTutorial()
	{
	}
}
[Token(Token = "0x2000156")]
public class StopFmodEvent : MonoBehaviour
{
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C25C", Offset = "0xA2C25C")]
	private sealed class <Stop>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StopFmodEvent <>4__this;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ORFmodStudioEventEmitter soundEvent;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000721")]
			[Address(RVA = "0x1DF0EB4", Offset = "0x1DF0EB4", VA = "0x1DF0EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000723")]
			[Address(RVA = "0x1DF0F24", Offset = "0x1DF0F24", VA = "0x1DF0F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1DF0D7C", Offset = "0x1DF0D7C", VA = "0x1DF0D7C")]
		[DebuggerHidden]
		public <Stop>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1DF0DB0", Offset = "0x1DF0DB0", VA = "0x1DF0DB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1DF0DB4", Offset = "0x1DF0DB4", VA = "0x1DF0DB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1DF0EBC", Offset = "0x1DF0EBC", VA = "0x1DF0EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA3238C", Offset = "0xA3238C")]
	public ORFmodStudioEventEmitter onSound;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ORFmodStudioEventEmitter offSound;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1DF0C84", Offset = "0x1DF0C84", VA = "0x1DF0C84")]
	private void On()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1DF0D4C", Offset = "0x1DF0D4C", VA = "0x1DF0D4C")]
	private void Off()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1DF0CB4", Offset = "0x1DF0CB4", VA = "0x1DF0CB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B4F8", Offset = "0xA3B4F8")]
	private IEnumerator Stop(ORFmodStudioEventEmitter soundEvent)
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1DF0DA8", Offset = "0x1DF0DA8", VA = "0x1DF0DA8")]
	public StopFmodEvent()
	{
	}
}
[Token(Token = "0x2000158")]
public class ActionActivator : BaseActivator
{
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C26C", Offset = "0xA2C26C")]
	private sealed class <Action>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActionActivator <>4__this;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OddRavenCharacterController <occ>5__2;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <dist>5__3;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IEnumerator <walk>5__4;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xB84230", Offset = "0xB84230", VA = "0xB84230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0xB842A0", Offset = "0xB842A0", VA = "0xB842A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xB8367C", Offset = "0xB8367C", VA = "0xB8367C")]
		[DebuggerHidden]
		public <Action>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xB839CC", Offset = "0xB839CC", VA = "0xB839CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xB839D0", Offset = "0xB839D0", VA = "0xB839D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xB84238", Offset = "0xB84238", VA = "0xB84238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA323C4", Offset = "0xA323C4")]
	public InteractionObject interactionObject;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ORFmodStudioEventEmitter startSound;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxDistance;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool onlyTriggerIfCarly;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private FullBodyBipedEffector[] effectors;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal InteractionSystem interactionSystem;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool activating;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IEnumerator activeCoroutine;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xB835E4", Offset = "0xB835E4", VA = "0xB835E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B5AC", Offset = "0xA3B5AC")]
	private IEnumerator Action(InteractionSystem interactionSystem)
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xB836A8", Offset = "0xB836A8", VA = "0xB836A8", Slot = "5")]
	public override void Activate()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xB83884", Offset = "0xB83884", VA = "0xB83884")]
	[PunRPC]
	private void ActionRpc(bool hasCharacter, Vector3 characterPos)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xB839A4", Offset = "0xB839A4", VA = "0xB839A4")]
	public ActionActivator()
	{
	}
}
[Token(Token = "0x200015A")]
public class ActivateAfterTime : BaseActivator
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float time;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool loop;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool randomize;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float elapsed;

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xB857D8", Offset = "0xB857D8", VA = "0xB857D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xB85810", Offset = "0xB85810", VA = "0xB85810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xB858CC", Offset = "0xB858CC", VA = "0xB858CC")]
	public ActivateAfterTime()
	{
	}
}
[Token(Token = "0x200015B")]
public class ActivateOnCollision : BaseActivator
{
	[Token(Token = "0x200015C")]
	public enum CollisionTypeEnum
	{
		[Token(Token = "0x4000749")]
		Both,
		[Token(Token = "0x400074A")]
		Collision,
		[Token(Token = "0x400074B")]
		Trigger
	}

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string onlyTag;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool activateOnCollision;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool deactivateOnLeave;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool onlyDeactivateWhenAllHasLeft;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool keepActivated;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool syncOverNetwork;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameMode[] ignoreForGameMode;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CollisionTypeEnum collisionType;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Collider> collidingWith;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PhotonView photonView;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3240C", Offset = "0xA3240C")]
	public bool giveHapticFeedback;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float hapticFeedbackForce;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float hapticFeedbackDuration;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xB8679C", Offset = "0xB8679C", VA = "0xB8679C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xB8681C", Offset = "0xB8681C", VA = "0xB8681C")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xB86C54", Offset = "0xB86C54", VA = "0xB86C54")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xB86F58", Offset = "0xB86F58", VA = "0xB86F58")]
	private void OnTriggerStay(Collider coll)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xB86FF4", Offset = "0xB86FF4", VA = "0xB86FF4")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xB8710C", Offset = "0xB8710C", VA = "0xB8710C")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xB86B5C", Offset = "0xB86B5C", VA = "0xB86B5C")]
	private bool ShouldIgnore()
	{
		return default(bool);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xB8725C", Offset = "0xB8725C", VA = "0xB8725C")]
	[PunRPC]
	private void ActivateRpc()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xB87268", Offset = "0xB87268", VA = "0xB87268")]
	public ActivateOnCollision()
	{
	}
}
[Token(Token = "0x200015D")]
public class ActivateOnDrop : BaseActivator
{
	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DropArea dropArea;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xB872D4", Offset = "0xB872D4", VA = "0xB872D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xB87478", Offset = "0xB87478", VA = "0xB87478")]
	public ActivateOnDrop()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xB8748C", Offset = "0xB8748C", VA = "0xB8748C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B680", Offset = "0xA3B680")]
	private void <Start>b__1_0(Droppable <p0>)
	{
	}
}
[Token(Token = "0x200015E")]
public class ActivateOnEnabled : BaseActivator
{
	[Token(Token = "0x600073D")]
	[Address(RVA = "0xB87498", Offset = "0xB87498", VA = "0xB87498")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xB8749C", Offset = "0xB8749C", VA = "0xB8749C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xB875AC", Offset = "0xB875AC", VA = "0xB875AC")]
	public ActivateOnEnabled()
	{
	}
}
[Token(Token = "0x200015F")]
public class ActivateOnInventoryItem : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	public enum InclusionMode
	{
		[Token(Token = "0x4000753")]
		Exclusive,
		[Token(Token = "0x4000754")]
		InclusiveExceptZero,
		[Token(Token = "0x4000755")]
		Inclusive
	}

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string inventoryItemId;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InclusionMode inclusion;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour[] activateBehaviour;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool deactivateNonIncludedBehavioursOnActivation;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool runOnStart;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xB875C0", Offset = "0xB875C0", VA = "0xB875C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xB875D4", Offset = "0xB875D4", VA = "0xB875D4")]
	private void On()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xB87934", Offset = "0xB87934", VA = "0xB87934")]
	private void Off()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xB875DC", Offset = "0xB875DC", VA = "0xB875DC")]
	private void Run(bool deactivateNonIncluded)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xB87938", Offset = "0xB87938", VA = "0xB87938")]
	public ActivateOnInventoryItem()
	{
	}
}
[Token(Token = "0x2000161")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C27C", Offset = "0xA2C27C")]
public class ActivateOnRelease : BaseActivator
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xB87948", Offset = "0xB87948", VA = "0xB87948")]
	private void Start()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xB879F8", Offset = "0xB879F8", VA = "0xB879F8")]
	public ActivateOnRelease()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xB87A0C", Offset = "0xB87A0C", VA = "0xB87A0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B690", Offset = "0xA3B690")]
	private void <Start>b__1_0(SteamVR_GrabbableObject _)
	{
	}
}
[Token(Token = "0x2000162")]
public class ActivateOnState : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000163")]
	public class StateActivatorPair
	{
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string state;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool value;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonoBehaviour activate;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool broadcast;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xB8800C", Offset = "0xB8800C", VA = "0xB8800C")]
		public StateActivatorPair()
		{
		}
	}

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateMachine stateMachine;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool activateAtStart;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool activateOnStateChange;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool stopAtFirstHit;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool deactivateNonHit;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StateActivatorPair[] activate;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MonoBehaviour fallback;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool broadcast;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xB87A18", Offset = "0xB87A18", VA = "0xB87A18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xB87E98", Offset = "0xB87E98", VA = "0xB87E98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xB87FF4", Offset = "0xB87FF4", VA = "0xB87FF4")]
	private void Off()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xB87BA0", Offset = "0xB87BA0", VA = "0xB87BA0")]
	private void On(string onlyForState = "")
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xB87FF8", Offset = "0xB87FF8", VA = "0xB87FF8")]
	private void StateChanged(string state, bool value)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xB87FFC", Offset = "0xB87FFC", VA = "0xB87FFC")]
	public ActivateOnState()
	{
	}
}
[Token(Token = "0x2000164")]
public class ActivateWhenBothPressedButton : BaseActivator
{
	[Token(Token = "0x2000165")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C2E0", Offset = "0xA2C2E0")]
	private sealed class <HideUI>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Component ui;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Graphic <graphic>5__2;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CanvasGroup <canvasGroup>5__3;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForFixedUpdate <wait>5__4;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <i>5__5;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0xB888DC", Offset = "0xB888DC", VA = "0xB888DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075A")]
			[Address(RVA = "0xB8894C", Offset = "0xB8894C", VA = "0xB8894C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xB88384", Offset = "0xB88384", VA = "0xB88384")]
		[DebuggerHidden]
		public <HideUI>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xB884C4", Offset = "0xB884C4", VA = "0xB884C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xB884C8", Offset = "0xB884C8", VA = "0xB884C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xB888E4", Offset = "0xB888E4", VA = "0xB888E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32444", Offset = "0xA32444")]
	public VrButton firstButton;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrButton secondButton;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OddRavenVrPriorityOrder firstPriorityOrder;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OddRavenVrPriorityOrder secondPriorityOrder;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3247C", Offset = "0xA3247C")]
	public Component firstUI;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Component secondUI;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool firstReady;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool secondReady;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private InputDeviceBase firstDevice;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private InputDeviceBase secondDevice;

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xB8806C", Offset = "0xB8806C", VA = "0xB8806C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xB881F0", Offset = "0xB881F0", VA = "0xB881F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xB881B0", Offset = "0xB881B0", VA = "0xB881B0")]
	private void HookUpDevices()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xB88310", Offset = "0xB88310", VA = "0xB88310")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B6A0", Offset = "0xA3B6A0")]
	private IEnumerator HideUI(Component ui)
	{
		return null;
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xB883B0", Offset = "0xB883B0", VA = "0xB883B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xB884B0", Offset = "0xB884B0", VA = "0xB884B0")]
	public ActivateWhenBothPressedButton()
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C2F0", Offset = "0xA2C2F0")]
public class ActivateWhenGrabbed : BaseActivator
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlatformNetwork platformNetwork;

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xB88954", Offset = "0xB88954", VA = "0xB88954")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xB88B38", Offset = "0xB88B38", VA = "0xB88B38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xB88D2C", Offset = "0xB88D2C", VA = "0xB88D2C")]
	private void WasReleased(SteamVR_GrabbableObject obj)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xB88D38", Offset = "0xB88D38", VA = "0xB88D38")]
	private void WasGrabbed(SteamVR_GrabbableObject obj)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xB88D44", Offset = "0xB88D44", VA = "0xB88D44")]
	public ActivateWhenGrabbed()
	{
	}
}
[Token(Token = "0x2000167")]
public abstract class BaseActivator : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	public enum ActivationState
	{
		[Token(Token = "0x400077F")]
		Activated,
		[Token(Token = "0x4000780")]
		Deactivated,
		[Token(Token = "0x4000781")]
		None
	}

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA324B4", Offset = "0xA324B4")]
	public bool broadcast;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonoBehaviour component;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fireOnce;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ORFmodStudioEventEmitter activationSound;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float soundDelay;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool activated;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ActivationState initialState;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xB9B240", Offset = "0xB9B240", VA = "0xB9B240", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xB83778", Offset = "0xB83778", VA = "0xB83778", Slot = "5")]
	public virtual void Activate()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xB9B26C", Offset = "0xB9B26C", VA = "0xB9B26C")]
	private void BroadcastOn()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xB9B308", Offset = "0xB9B308", VA = "0xB9B308")]
	private void PlayActivationSound()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xB874A0", Offset = "0xB874A0", VA = "0xB874A0", Slot = "6")]
	public virtual void Deactivate()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xB839B8", Offset = "0xB839B8", VA = "0xB839B8")]
	protected BaseActivator()
	{
	}
}
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C354", Offset = "0xA2C354")]
public class LeverActivator : BaseActivator
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA324EC", Offset = "0xA324EC")]
	public float threshold;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SimpleLever lever;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1E35070", Offset = "0x1E35070", VA = "0x1E35070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1E350C8", Offset = "0x1E350C8", VA = "0x1E350C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1E351A0", Offset = "0x1E351A0", VA = "0x1E351A0")]
	public LeverActivator()
	{
	}
}
[Token(Token = "0x200016A")]
public class Puzzle : BaseActivator
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32524", Offset = "0xA32524")]
	public PuzzleKeyhole[] keyHoles;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool isSolved;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<Puzzle> WasSolved;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<Puzzle> WasUnsolved;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<Puzzle, int> KeyholesOpen;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PhotonView photonView;

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1EAEFF4", Offset = "0x1EAEFF4", VA = "0x1EAEFF4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1EAF2CC", Offset = "0x1EAF2CC", VA = "0x1EAF2CC")]
	private void CheckPuzzleStatus(PuzzleKeyhole pk)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1EAF4F0", Offset = "0x1EAF4F0", VA = "0x1EAF4F0")]
	[PunRPC]
	private void SolvedPuzzleRpc()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x1EAF5AC", Offset = "0x1EAF5AC", VA = "0x1EAF5AC")]
	public Puzzle()
	{
	}
}
[Token(Token = "0x200016B")]
public class StateMachineActivator : BaseActivator
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3256C", Offset = "0xA3256C")]
	public StateMachine stateMachine;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string state;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool stateValue;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool checkAtStart;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool onlyCheckAtStart;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1E7A454", Offset = "0x1E7A454", VA = "0x1E7A454")]
	public void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1E7A668", Offset = "0x1E7A668", VA = "0x1E7A668")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1E7A5FC", Offset = "0x1E7A5FC", VA = "0x1E7A5FC")]
	private void CheckState(string state, bool on)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1E7A7C4", Offset = "0x1E7A7C4", VA = "0x1E7A7C4")]
	public StateMachineActivator()
	{
	}
}
[Token(Token = "0x200016C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C3B8", Offset = "0xA2C3B8")]
public abstract class AffectedByExplosion : MonoBehaviour
{
	[Token(Token = "0x6000771")]
	public abstract void ExplosionForce(float force);

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xB8A454", Offset = "0xB8A454", VA = "0xB8A454")]
	protected AffectedByExplosion()
	{
	}
}
[Token(Token = "0x200016D")]
public class AffectedByExplosion_Breaks : AffectedByExplosion
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumBreakForce;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color crackColor;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject crackDecalPrefab;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xB8A45C", Offset = "0xB8A45C", VA = "0xB8A45C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xB8A510", Offset = "0xB8A510", VA = "0xB8A510", Slot = "4")]
	public override void ExplosionForce(float force)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xB8A5B4", Offset = "0xB8A5B4", VA = "0xB8A5B4")]
	public AffectedByExplosion_Breaks()
	{
	}
}
[Token(Token = "0x200016E")]
public class AffectedByExplosion_TakeDamage : AffectedByExplosion
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumLightDamageForce;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minimumHeavyDamageForce;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minimumDieForce;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lightDamage;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float heavyDamage;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xB8A5F0", Offset = "0xB8A5F0", VA = "0xB8A5F0", Slot = "4")]
	public override void ExplosionForce(float force)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xB8A6D8", Offset = "0xB8A6D8", VA = "0xB8A6D8")]
	public AffectedByExplosion_TakeDamage()
	{
	}
}
[Token(Token = "0x200016F")]
public class AffectPlayerVelocityClusterer : AffectPlayerVelocity
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AffectPlayerVelocity[] velocityAffecters;

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xB8A2CC", Offset = "0xB8A2CC", VA = "0xB8A2CC", Slot = "5")]
	public override Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xB8A44C", Offset = "0xB8A44C", VA = "0xB8A44C")]
	public AffectPlayerVelocityClusterer()
	{
	}
}
[Token(Token = "0x2000170")]
public class AlignToVRHead : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C41C", Offset = "0xA2C41C")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlignToVRHead <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600077F")]
			[Address(RVA = "0xB8A9DC", Offset = "0xB8A9DC", VA = "0xB8A9DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000781")]
			[Address(RVA = "0xB8AA4C", Offset = "0xB8AA4C", VA = "0xB8AA4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xB8A768", Offset = "0xB8A768", VA = "0xB8A768")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xB8A7A4", Offset = "0xB8A7A4", VA = "0xB8A7A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xB8A7A8", Offset = "0xB8A7A8", VA = "0xB8A7A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xB8A9E4", Offset = "0xB8A9E4", VA = "0xB8A9E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool alignYOnly;

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xB8A6F4", Offset = "0xB8A6F4", VA = "0xB8A6F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B764", Offset = "0xA3B764")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xB8A794", Offset = "0xB8A794", VA = "0xB8A794")]
	public AlignToVRHead()
	{
	}
}
[Token(Token = "0x2000172")]
public class AutoAlign : MonoBehaviour
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask alignLayer;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 alignAxis;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xB8F298", Offset = "0xB8F298", VA = "0xB8F298")]
	private void Start()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xB8F584", Offset = "0xB8F584", VA = "0xB8F584")]
	private void Update()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xB8F588", Offset = "0xB8F588", VA = "0xB8F588")]
	public AutoAlign()
	{
	}
}
[Token(Token = "0x2000173")]
public class ConstantSpeed : MonoBehaviour, IHasSpeed
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 speed;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1E5F5E8", Offset = "0x1E5F5E8", VA = "0x1E5F5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1E5F640", Offset = "0x1E5F640", VA = "0x1E5F640")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1E5F7E8", Offset = "0x1E5F7E8", VA = "0x1E5F7E8", Slot = "4")]
	public Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1E5F7F4", Offset = "0x1E5F7F4", VA = "0x1E5F7F4")]
	public ConstantSpeed()
	{
	}
}
[Token(Token = "0x2000174")]
public class DeactivateComponentOnLeave : MonoBehaviour
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Behaviour component;

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xAB46A0", Offset = "0xAB46A0", VA = "0xAB46A0")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xAB46D4", Offset = "0xAB46D4", VA = "0xAB46D4")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xAB4708", Offset = "0xAB4708", VA = "0xAB4708")]
	public DeactivateComponentOnLeave()
	{
	}
}
[Token(Token = "0x2000175")]
public class DeactivateGameObject : MonoBehaviour
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xAB48A4", Offset = "0xAB48A4", VA = "0xAB48A4")]
	private void On()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xAB48D8", Offset = "0xAB48D8", VA = "0xAB48D8")]
	public DeactivateGameObject()
	{
	}
}
[Token(Token = "0x2000176")]
public class DeactivateGameObjectOnCollision : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string collisionTag;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xAB48E0", Offset = "0xAB48E0", VA = "0xAB48E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xAB4964", Offset = "0xAB4964", VA = "0xAB4964")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xAB49EC", Offset = "0xAB49EC", VA = "0xAB49EC")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xAB4A5C", Offset = "0xAB4A5C", VA = "0xAB4A5C")]
	public DeactivateGameObjectOnCollision()
	{
	}
}
[Token(Token = "0x2000177")]
public class DeactivateWhenDestroyed : MonoBehaviour, IDeactivateWhenDestroyed
{
	[Token(Token = "0x6000792")]
	[Address(RVA = "0xAB4B58", Offset = "0xAB4B58", VA = "0xAB4B58", Slot = "4")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xAB4B90", Offset = "0xAB4B90", VA = "0xAB4B90")]
	public DeactivateWhenDestroyed()
	{
	}
}
[Token(Token = "0x2000178")]
public class DropArea : MonoBehaviour
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dropTag;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color defaultColor;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color droppingColor;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool autoDrop;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<Droppable> ObjectDropped;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock defaultMaterialPropertyBlock;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock droppingMaterialPropertyBlock;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_SimpleHand[] hands;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SteamVR_SimpleHand grabbingHand;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material mat;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer renderer;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Droppable withinReach;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xABE770", Offset = "0xABE770", VA = "0xABE770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xABE8A0", Offset = "0xABE8A0", VA = "0xABE8A0")]
	public void ObjectWasGrabbed(Droppable droppable)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xABE938", Offset = "0xABE938", VA = "0xABE938")]
	public void ObjectWasReleased(Droppable droppable)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xABEAB0", Offset = "0xABEAB0", VA = "0xABEAB0")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xABEBF0", Offset = "0xABEBF0", VA = "0xABEBF0")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xABECEC", Offset = "0xABECEC", VA = "0xABECEC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xABEEF0", Offset = "0xABEEF0", VA = "0xABEEF0")]
	public DropArea()
	{
	}
}
[Token(Token = "0x2000179")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C42C", Offset = "0xA2C42C")]
public class Droppable : MonoBehaviour
{
	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dropTag;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool preload;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DropArea[] dropAreas;

	[NonSerialized]
	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DropArea currentDropArea;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xABEF00", Offset = "0xABEF00", VA = "0xABEF00")]
	private void Start()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xABF030", Offset = "0xABF030", VA = "0xABF030")]
	private void WasDropped(DropArea dropArea)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xABF038", Offset = "0xABF038", VA = "0xABF038")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xABF03C", Offset = "0xABF03C", VA = "0xABF03C")]
	public Droppable()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xABF09C", Offset = "0xABF09C", VA = "0xABF09C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B818", Offset = "0xA3B818")]
	private void <Start>b__5_0(SteamVR_GrabbableObject <p0>)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xABF190", Offset = "0xABF190", VA = "0xABF190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B828", Offset = "0xA3B828")]
	private void <Start>b__5_1(SteamVR_GrabbableObject <p0>)
	{
	}
}
[Token(Token = "0x200017A")]
[ExecuteInEditMode]
public class GlobalOcclusionPosition : MonoBehaviour
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 OcclusionPositionMask;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA325A4", Offset = "0xA325A4")]
	public Color occlusionEdgeGlow;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float occlusionEdgeGlowDistance;

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xBA7720", Offset = "0xBA7720", VA = "0xBA7720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xBA7890", Offset = "0xBA7890", VA = "0xBA7890")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xBA7924", Offset = "0xBA7924", VA = "0xBA7924")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xBA79E8", Offset = "0xBA79E8", VA = "0xBA79E8")]
	public GlobalOcclusionPosition()
	{
	}
}
[Token(Token = "0x200017B")]
public class GrabbableLock : MonoBehaviour
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyId;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int keyCount;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject indicator;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem particleEffects;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ORFmodStudioEventEmitter BreakSound;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool autoDestroy;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer[] renderers;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool saveKinematic;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xBA7E84", Offset = "0xBA7E84", VA = "0xBA7E84")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A6")]
	private static T CopyComponent<T>(T original, GameObject destination) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xBA7F48", Offset = "0xBA7F48", VA = "0xBA7F48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xBA8108", Offset = "0xBA8108", VA = "0xBA8108")]
	private void CheckLocked()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xBA8184", Offset = "0xBA8184", VA = "0xBA8184")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xBA8778", Offset = "0xBA8778", VA = "0xBA8778")]
	[PunRPC]
	private void OnGrabRPC()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xBA830C", Offset = "0xBA830C", VA = "0xBA830C")]
	private void OnGrab()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xBA877C", Offset = "0xBA877C", VA = "0xBA877C")]
	public GrabbableLock()
	{
	}
}
[Token(Token = "0x200017C")]
public class HideOnPlaystation : MonoBehaviour, IConditionalShow
{
	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool visibleOnPlayStation;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool visibleOnQuest;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool visibleForOtherPlatforms;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xBAC1D0", Offset = "0xBAC1D0", VA = "0xBAC1D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xBAC1D4", Offset = "0xBAC1D4", VA = "0xBAC1D4")]
	private void UpdateHide()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xBAC340", Offset = "0xBAC340", VA = "0xBAC340", Slot = "4")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xBAC348", Offset = "0xBAC348", VA = "0xBAC348")]
	public HideOnPlaystation()
	{
	}
}
[Token(Token = "0x200017D")]
public class HideWhenPlayingWithDualshock : MonoBehaviour, IConditionalShow
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool VisibleWhenPlayingWithMove;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool VisibleWhenPlayingWithDualshock;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool VisibleOnOtherPlatforms;

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xBAC358", Offset = "0xBAC358", VA = "0xBAC358", Slot = "4")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xBAC360", Offset = "0xBAC360", VA = "0xBAC360")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xBAC364", Offset = "0xBAC364", VA = "0xBAC364")]
	private void UpdateHide()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xBAC4D0", Offset = "0xBAC4D0", VA = "0xBAC4D0")]
	public HideWhenPlayingWithDualshock()
	{
	}
}
[Token(Token = "0x200017E")]
public interface IDeactivateWhenDestroyed
{
	[Token(Token = "0x60007B5")]
	void Destroy();
}
[Token(Token = "0x200017F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C4A0", Offset = "0xA2C4A0")]
public class ExpressionZone : MonoBehaviour
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CarlyFacialExpressions.Expression expression;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool onlyChangeExpressionOnLeave;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CarlyFacialExpressions facialExpression;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xAC38B0", Offset = "0xAC38B0", VA = "0xAC38B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xAC395C", Offset = "0xAC395C", VA = "0xAC395C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xAC3AE4", Offset = "0xAC3AE4", VA = "0xAC3AE4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xAC3C74", Offset = "0xAC3C74", VA = "0xAC3C74")]
	public ExpressionZone()
	{
	}
}
[Token(Token = "0x2000180")]
public class LookAtTarget : MonoBehaviour
{
	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mustBeIdle;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CarlyFacialExpressions.Expression facialExpression;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OddRavenCharacterController cc;

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1E39944", Offset = "0x1E39944", VA = "0x1E39944")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1E39B44", Offset = "0x1E39B44", VA = "0x1E39B44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1E39AA4", Offset = "0x1E39AA4", VA = "0x1E39AA4")]
	private void SetupPlayer()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1E39C4C", Offset = "0x1E39C4C", VA = "0x1E39C4C")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1E39DC4", Offset = "0x1E39DC4", VA = "0x1E39DC4")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1E39EB0", Offset = "0x1E39EB0", VA = "0x1E39EB0")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x2000181")]
public class LookAtWhileIdle : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OddRavenCharacterController cc;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CarlyFacialExpressions.Expression facialExpression;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool needsClearView;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cooldown;

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1E39F28", Offset = "0x1E39F28", VA = "0x1E39F28")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1E3A088", Offset = "0x1E3A088", VA = "0x1E3A088")]
	private void SetupPlayer()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1E3A0FC", Offset = "0x1E3A0FC", VA = "0x1E3A0FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1E3A204", Offset = "0x1E3A204", VA = "0x1E3A204")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1E3A6A4", Offset = "0x1E3A6A4", VA = "0x1E3A6A4")]
	public LookAtWhileIdle()
	{
	}
}
[Token(Token = "0x2000182")]
public class PlayerLookAtTarget : MonoBehaviour
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyWhenIdle;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onlyInSight;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool priorityTarget;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxDistance;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CarlyFacialExpressions.Expression expression;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OddRavenCharacterController cc;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _on;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1EA8C60", Offset = "0x1EA8C60", VA = "0x1EA8C60")]
	private void On()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1EA8C6C", Offset = "0x1EA8C6C", VA = "0x1EA8C6C")]
	private void Off()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1EA8C74", Offset = "0x1EA8C74", VA = "0x1EA8C74")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1EA9024", Offset = "0x1EA9024", VA = "0x1EA9024")]
	private void StopLooking()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1EA9110", Offset = "0x1EA9110", VA = "0x1EA9110")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1EA9194", Offset = "0x1EA9194", VA = "0x1EA9194")]
	public PlayerLookAtTarget()
	{
	}
}
[Token(Token = "0x2000183")]
public class MoveGameObjectToRaycastIntersection : MonoBehaviour
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA325BC", Offset = "0xA325BC")]
	public float raycastFrequency;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 raycastDirection;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float raycastMaxLength;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask hitMask;

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xD51C00", Offset = "0xD51C00", VA = "0xD51C00")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xD51C58", Offset = "0xD51C58", VA = "0xD51C58")]
	private void DoRaycast()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xD520C8", Offset = "0xD520C8", VA = "0xD520C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xD5211C", Offset = "0xD5211C", VA = "0xD5211C")]
	public MoveGameObjectToRaycastIntersection()
	{
	}
}
[Token(Token = "0x2000184")]
public class NavMeshAgentTargetTrigger : MonoBehaviour
{
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C504", Offset = "0xA2C504")]
	private sealed class <UpdateTargetPosition>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgentTargetTrigger <>4__this;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0xD55758", Offset = "0xD55758", VA = "0xD55758", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0xD557C8", Offset = "0xD557C8", VA = "0xD557C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xD54B6C", Offset = "0xD54B6C", VA = "0xD54B6C")]
		[DebuggerHidden]
		public <UpdateTargetPosition>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xD55440", Offset = "0xD55440", VA = "0xD55440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xD55444", Offset = "0xD55444", VA = "0xD55444", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xD55760", Offset = "0xD55760", VA = "0xD55760", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMeshAgent navMeshAgent;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string targetTag;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> possibleTargets;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject closestTarget;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float closestTargetDistance;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds wait;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lastPosition;

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xD54A4C", Offset = "0xD54A4C", VA = "0xD54A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xD54AF8", Offset = "0xD54AF8", VA = "0xD54AF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B848", Offset = "0xA3B848")]
	private IEnumerator UpdateTargetPosition()
	{
		return null;
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xD54B98", Offset = "0xD54B98", VA = "0xD54B98")]
	private void AddTarget(GameObject other)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xD55114", Offset = "0xD55114", VA = "0xD55114")]
	private void RemoveTarget(GameObject other)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xD55228", Offset = "0xD55228", VA = "0xD55228")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xD55268", Offset = "0xD55268", VA = "0xD55268")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xD552A8", Offset = "0xD552A8", VA = "0xD552A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xD552E8", Offset = "0xD552E8", VA = "0xD552E8")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xD54C70", Offset = "0xD54C70", VA = "0xD54C70")]
	private void RefreshTarget()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xD55328", Offset = "0xD55328", VA = "0xD55328")]
	private void ReleasedGrabbable(SteamVR_GrabbableObject obj)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xD553C8", Offset = "0xD553C8", VA = "0xD553C8")]
	public NavMeshAgentTargetTrigger()
	{
	}
}
[Token(Token = "0x2000186")]
public class Notes : MonoBehaviour
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xA325F4", Offset = "0xA325F4")]
	public string notes;

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xD55A44", Offset = "0xD55A44", VA = "0xD55A44")]
	public Notes()
	{
	}
}
[Token(Token = "0x2000187")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C514", Offset = "0xA2C514")]
[ExecuteInEditMode]
public class OcclusionBox : MonoBehaviour
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activateWhenEnabled;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool activateMeshes;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OcclusionBox boxEnabled;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool isOcculuding;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delayActivateMeshes;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool playerWasDead;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xD5630C", Offset = "0xD5630C", VA = "0xD5630C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xD56388", Offset = "0xD56388", VA = "0xD56388")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xD56438", Offset = "0xD56438", VA = "0xD56438")]
	private void Hide()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xD56564", Offset = "0xD56564", VA = "0xD56564")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xD56808", Offset = "0xD56808", VA = "0xD56808")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xD569BC", Offset = "0xD569BC", VA = "0xD569BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xD5631C", Offset = "0xD5631C", VA = "0xD5631C")]
	private void Show()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xD569F8", Offset = "0xD569F8", VA = "0xD569F8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xD56AC8", Offset = "0xD56AC8", VA = "0xD56AC8")]
	public OcclusionBox()
	{
	}
}
[Token(Token = "0x2000188")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C588", Offset = "0xA2C588")]
public class OddRavenConstantForce : MonoBehaviour
{
	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 force;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool destroyWhenResting;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool destroyOnCollision;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1E8CE90", Offset = "0x1E8CE90", VA = "0x1E8CE90")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1E8CEE8", Offset = "0x1E8CEE8", VA = "0x1E8CEE8")]
	private void OnCollisionStay(Collision coll)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1E8CF94", Offset = "0x1E8CF94", VA = "0x1E8CF94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1E8D0C0", Offset = "0x1E8D0C0", VA = "0x1E8D0C0")]
	public OddRavenConstantForce()
	{
	}
}
[Token(Token = "0x2000189")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C5EC", Offset = "0xA2C5EC")]
public class ParticleEffectsLOD : MonoBehaviour
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cullingMaxDistance;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool isCulled;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_Particles;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera[] cameras;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer m_Renderer;

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1E94708", Offset = "0x1E94708", VA = "0x1E94708")]
	private IEnumerable Start()
	{
		return null;
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1E94850", Offset = "0x1E94850", VA = "0x1E94850")]
	private void UpdateCulling()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1E94B5C", Offset = "0x1E94B5C", VA = "0x1E94B5C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1E94B60", Offset = "0x1E94B60", VA = "0x1E94B60")]
	public ParticleEffectsLOD()
	{
	}
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C650", Offset = "0xA2C650")]
public class Crystal : MonoBehaviour
{
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C6B4", Offset = "0xA2C6B4")]
	private sealed class <DoPickupSequence>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Crystal <>4__this;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Door <door>5__2;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <speed>5__3;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0xAAD9EC", Offset = "0xAAD9EC", VA = "0xAAD9EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0xAADA5C", Offset = "0xAADA5C", VA = "0xAADA5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xAAD328", Offset = "0xAAD328", VA = "0xAAD328")]
		[DebuggerHidden]
		public <DoPickupSequence>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xAAD35C", Offset = "0xAAD35C", VA = "0xAAD35C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xAAD360", Offset = "0xAAD360", VA = "0xAAD360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xAAD9F4", Offset = "0xAAD9F4", VA = "0xAAD9F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool pickedUp;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPosition;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xAACF04", Offset = "0xAACF04", VA = "0xAACF04")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xAACF48", Offset = "0xAACF48", VA = "0xAACF48")]
	private void Consume()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xAAD020", Offset = "0xAAD020", VA = "0xAAD020")]
	private void WasRecreated()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xAAD114", Offset = "0xAAD114", VA = "0xAAD114")]
	private void Respawn()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xAAD2B4", Offset = "0xAAD2B4", VA = "0xAAD2B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B8FC", Offset = "0xA3B8FC")]
	private IEnumerator DoPickupSequence()
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xAAD354", Offset = "0xAAD354", VA = "0xAAD354")]
	public Crystal()
	{
	}
}
[Token(Token = "0x200018C")]
public class HeartPickup : MonoBehaviour
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particles;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float healthBoost;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int lifeBoost;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ORFmodStudioEventEmitter LifeSound;

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xBA9A18", Offset = "0xBA9A18", VA = "0xBA9A18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xBA9AA8", Offset = "0xBA9AA8", VA = "0xBA9AA8")]
	private void Consume()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xBA9C28", Offset = "0xBA9C28", VA = "0xBA9C28")]
	public HeartPickup()
	{
	}
}
[Token(Token = "0x200018D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C6C4", Offset = "0xA2C6C4")]
public class Pickup : SaveableClass
{
	[Serializable]
	[Token(Token = "0x200018E")]
	public struct PerPickupSync
	{
		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public short id;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool consumed;
	}

	[Serializable]
	[Token(Token = "0x200018F")]
	public struct PickupSync
	{
		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public short coins;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte sceneIndex;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<PerPickupSync> pickups;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] cachedBytes;

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1E990E4", Offset = "0x1E990E4", VA = "0x1E990E4")]
		public static short SerializeSyncData(StreamBuffer stream, object obj)
		{
			return default(short);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1E995F8", Offset = "0x1E995F8", VA = "0x1E995F8")]
		public static object DeserializeSyncData(StreamBuffer stream, short length)
		{
			return null;
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1E99A8C", Offset = "0x1E99A8C", VA = "0x1E99A8C")]
		private static void DeserializeByte(out byte val, byte[] bytes, ref int index)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1E99594", Offset = "0x1E99594", VA = "0x1E99594")]
		private static void SerializeByte(byte val, byte[] bytes, ref int index)
		{
		}
	}

	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C728", Offset = "0xA2C728")]
	private sealed class <OnTriggerEnterRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pickup <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x1E9906C", Offset = "0x1E9906C", VA = "0x1E9906C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0x1E990DC", Offset = "0x1E990DC", VA = "0x1E990DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1E985A4", Offset = "0x1E985A4", VA = "0x1E985A4")]
		[DebuggerHidden]
		public <OnTriggerEnterRoutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1E98ECC", Offset = "0x1E98ECC", VA = "0x1E98ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1E98ED0", Offset = "0x1E98ED0", VA = "0x1E98ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1E99074", Offset = "0x1E99074", VA = "0x1E99074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000191")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C738", Offset = "0xA2C738")]
	private sealed class <>c
	{
		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<PerPickupSync> <>9__25_0;

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1E98E98", Offset = "0x1E98E98", VA = "0x1E98E98")]
		public <>c()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1E98EA0", Offset = "0x1E98EA0", VA = "0x1E98EA0")]
		internal int <SyncPickups>b__25_0(PerPickupSync a, PerPickupSync b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroyOnPickup;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool persistPickedUpState;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string category;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Particle;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool activationBroadcastOnPickup;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool consumed;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonView photonView;

	[NonSerialized]
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public short photonId;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InventoryItem inventoryItem;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _uniqueId;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<PerPickupSync> cachedSyncList;

	[Token(Token = "0x170000FB")]
	public override string UniqueId
	{
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1E97E68", Offset = "0x1E97E68", VA = "0x1E97E68", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1E97F3C", Offset = "0x1E97F3C", VA = "0x1E97F3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1E98024", Offset = "0x1E98024", VA = "0x1E98024")]
	private void Start()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1E98118", Offset = "0x1E98118", VA = "0x1E98118")]
	public bool IsCurrentlyConsumed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1E98120", Offset = "0x1E98120", VA = "0x1E98120")]
	public bool HasBeenConsumed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1E981CC", Offset = "0x1E981CC", VA = "0x1E981CC")]
	public string GetIdHash()
	{
		return null;
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x1E98278", Offset = "0x1E98278", VA = "0x1E98278")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1E984C8", Offset = "0x1E984C8", VA = "0x1E984C8")]
	[PunRPC]
	private void OnPickupRpc(bool consumed)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1E98454", Offset = "0x1E98454", VA = "0x1E98454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3B9C0", Offset = "0xA3B9C0")]
	private IEnumerator OnTriggerEnterRoutine(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1E985D0", Offset = "0x1E985D0", VA = "0x1E985D0", Slot = "5")]
	public override void Recreate()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1E98708", Offset = "0x1E98708", VA = "0x1E98708")]
	[PunRPC]
	private void OnRecreateRpc()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1E98714", Offset = "0x1E98714", VA = "0x1E98714")]
	public void StartParticleEffect(Vector3 position)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1E98860", Offset = "0x1E98860", VA = "0x1E98860")]
	public static PickupSync ConstructSyncData()
	{
		return default(PickupSync);
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1E98A38", Offset = "0x1E98A38", VA = "0x1E98A38")]
	public static void SyncPickups(PickupSync syncData)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1E98D40", Offset = "0x1E98D40", VA = "0x1E98D40")]
	public Pickup()
	{
	}
}
[Token(Token = "0x2000192")]
public class Points : MonoBehaviour
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int points;

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1EAB8B0", Offset = "0x1EAB8B0", VA = "0x1EAB8B0")]
	private void Consume()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1EAB920", Offset = "0x1EAB920", VA = "0x1EAB920")]
	public Points()
	{
	}
}
[Token(Token = "0x2000193")]
public class PreserveState : SaveableClass
{
	[Serializable]
	[Token(Token = "0x2000194")]
	private struct State
	{
		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isKinematic;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool rendererEnabled;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool colliderEnabled;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion rotation;

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x1EACE70", Offset = "0x1EACE70", VA = "0x1EACE70")]
		public static bool operator ==(State state1, State state2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1EACC60", Offset = "0x1EACC60", VA = "0x1EACC60")]
		public static bool operator !=(State state1, State state2)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, State> states;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string uniqueId;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool shouldBeKinematic;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer r;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider c;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rb;

	[Token(Token = "0x170000FE")]
	public override string UniqueId
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1EAC2C0", Offset = "0x1EAC2C0", VA = "0x1EAC2C0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1EAC2C8", Offset = "0x1EAC2C8", VA = "0x1EAC2C8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1EAC318", Offset = "0x1EAC318", VA = "0x1EAC318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1EAC7DC", Offset = "0x1EAC7DC", VA = "0x1EAC7DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1EAC7E0", Offset = "0x1EAC7E0", VA = "0x1EAC7E0")]
	private void SaveStates()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1EACDF8", Offset = "0x1EACDF8", VA = "0x1EACDF8")]
	public PreserveState()
	{
	}
}
[Token(Token = "0x2000195")]
public class PuzzleIndicator : MonoBehaviour
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PuzzleKeyhole firstKeyhole;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string materialColorProperty;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA32618", Offset = "0xA32618")]
	public Color defaultEmissionColor;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA32640", Offset = "0xA32640")]
	public Color atLeastOneKeyEmissionColor;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ORFmodStudioEventEmitter atLeastOneKeySound;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA32668", Offset = "0xA32668")]
	public Color solvedEmissionColor;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[] ignoreKeys;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer renderer;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool atLeastOne;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1EAF5B4", Offset = "0x1EAF5B4", VA = "0x1EAF5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1EAF9D4", Offset = "0x1EAF9D4", VA = "0x1EAF9D4")]
	private void PuzzleStatusChanged(Puzzle obj)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1EAFC4C", Offset = "0x1EAFC4C", VA = "0x1EAFC4C")]
	private void StatusChanged(PuzzleKeyhole obj)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1EAFC78", Offset = "0x1EAFC78", VA = "0x1EAFC78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1EAFFF4", Offset = "0x1EAFFF4", VA = "0x1EAFFF4")]
	public PuzzleIndicator()
	{
	}
}
[Token(Token = "0x2000196")]
public class PuzzleKey : MonoBehaviour
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string puzzleKeyId;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool needsKeyhole;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA32690", Offset = "0xA32690")]
	public Color closedEmissionColor;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA326B8", Offset = "0xA326B8")]
	public Color openedEmissionColor;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xA326E0", Offset = "0xA326E0")]
	public Color solvedEmissionColor;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PuzzleKeyhole keyhole;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer[] renderers;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1EB00F8", Offset = "0x1EB00F8", VA = "0x1EB00F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1EB06C4", Offset = "0x1EB06C4", VA = "0x1EB06C4")]
	private void UpdateStatus(MonoBehaviour k)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1EB0884", Offset = "0x1EB0884", VA = "0x1EB0884")]
	public PuzzleKey()
	{
	}
}
[Token(Token = "0x2000197")]
public class PuzzleKeyhole : MonoBehaviour
{
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string puzzleKeyId;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Puzzle puzzle;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool unlockOnce;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<PuzzleKeyhole> WasOpened;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<PuzzleKeyhole> WasClosed;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] ignoreKeys;

	[NonSerialized]
	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string currentKey;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlatformNetwork platformNetwork;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasPhotonView;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PhotonView photonView;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PuzzleKey tmpKey;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SteamVR_GrabbableObject tmpGrabbable;

	[Token(Token = "0x170000FF")]
	public virtual bool isOpen
	{
		[Token(Token = "0x6000832")]
		[Address(RVA = "0x1EB0914", Offset = "0x1EB0914", VA = "0x1EB0914", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1EB0928", Offset = "0x1EB0928", VA = "0x1EB0928")]
	private void Start()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1EB0AF0", Offset = "0x1EB0AF0", VA = "0x1EB0AF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1EB0C48", Offset = "0x1EB0C48", VA = "0x1EB0C48")]
	private void WasGrabbed(SteamVR_GrabbableObject obj)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1EB0E84", Offset = "0x1EB0E84", VA = "0x1EB0E84")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1EB1070", Offset = "0x1EB1070", VA = "0x1EB1070")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1EB125C", Offset = "0x1EB125C", VA = "0x1EB125C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1EB1328", Offset = "0x1EB1328", VA = "0x1EB1328")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1EB13F4", Offset = "0x1EB13F4", VA = "0x1EB13F4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1EB1570", Offset = "0x1EB1570", VA = "0x1EB1570")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1EB0C9C", Offset = "0x1EB0C9C", VA = "0x1EB0C9C")]
	private void UpdateLockStatus()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1EB16EC", Offset = "0x1EB16EC", VA = "0x1EB16EC")]
	[PunRPC]
	private void UnlockRpc()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1EB16F8", Offset = "0x1EB16F8", VA = "0x1EB16F8")]
	[PunRPC]
	private void LockRpc()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1EB174C", Offset = "0x1EB174C", VA = "0x1EB174C")]
	public PuzzleKeyhole()
	{
	}
}
[Token(Token = "0x2000198")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C748", Offset = "0xA2C748")]
public class RandomizeAnimation : MonoBehaviour
{
	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool randomizeStartFrame;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA32708", Offset = "0xA32708")]
	public float fixedStartPosition;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float randomizedSpeedMin;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float randomizedSpeedMax;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1EB1D18", Offset = "0x1EB1D18", VA = "0x1EB1D18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1EB1E4C", Offset = "0x1EB1E4C", VA = "0x1EB1E4C")]
	public RandomizeAnimation()
	{
	}
}
[Token(Token = "0x2000199")]
public class Rotate : MonoBehaviour, ISetSpeed, IHasSpeed
{
	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentSpeed;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool forceNetworkSync;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1EB9CA4", Offset = "0x1EB9CA4", VA = "0x1EB9CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1EB9CB0", Offset = "0x1EB9CB0", VA = "0x1EB9CB0", Slot = "4")]
	public void SetSpeed(float speed)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1EB9CC0", Offset = "0x1EB9CC0", VA = "0x1EB9CC0")]
	public void SetAbsoluteSpeed(float speed)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1EB9CC8", Offset = "0x1EB9CC8", VA = "0x1EB9CC8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x1EB9EF0", Offset = "0x1EB9EF0", VA = "0x1EB9EF0", Slot = "5")]
	public Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1EBA0CC", Offset = "0x1EBA0CC", VA = "0x1EBA0CC")]
	public Rotate()
	{
	}
}
[Token(Token = "0x200019A")]
public abstract class SaveableClass : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C7AC", Offset = "0xA2C7AC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, double> <>9__10_0;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<string, string> <>9__10_1;

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1E639C0", Offset = "0x1E639C0", VA = "0x1E639C0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1E639C8", Offset = "0x1E639C8", VA = "0x1E639C8")]
		internal double <GetSaveFileNames>b__10_0(string x)
		{
			return default(double);
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1E639FC", Offset = "0x1E639FC", VA = "0x1E639FC")]
		internal string <GetSaveFileNames>b__10_1(string f)
		{
			return null;
		}
	}

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool autoSave;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static KeyValueFile _metaDataFile;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static KeyValueFile _file;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<string, Dictionary<SaveableClass, object>> pendingSaves;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<string, Dictionary<SaveableClass, object>> persistedSaves;

	[Token(Token = "0x17000100")]
	protected static KeyValueFile metaDataFile
	{
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x1E61670", Offset = "0x1E61670", VA = "0x1E61670")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000101")]
	protected static KeyValueFile file
	{
		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1E617C4", Offset = "0x1E617C4", VA = "0x1E617C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000102")]
	public abstract string UniqueId
	{
		[Token(Token = "0x600084A")]
		get;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1E6194C", Offset = "0x1E6194C", VA = "0x1E6194C")]
	public static bool FileExists(string game)
	{
		return default(bool);
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1E619C0", Offset = "0x1E619C0", VA = "0x1E619C0")]
	public static string[] GetSaveFileNames()
	{
		return null;
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1E61B8C", Offset = "0x1E61B8C", VA = "0x1E61B8C")]
	public static void DeleteSaveGame(string name)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1E61718", Offset = "0x1E61718", VA = "0x1E61718")]
	private static void SetMetaDataFileName()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1E61878", Offset = "0x1E61878", VA = "0x1E61878")]
	public static void SetSaveFileName(string name)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1E61C3C", Offset = "0x1E61C3C", VA = "0x1E61C3C")]
	public static string GetSaveFileName()
	{
		return null;
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1E61D20", Offset = "0x1E61D20", VA = "0x1E61D20")]
	public static string[] ReadSaveFileContents(string name)
	{
		return null;
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1E61DFC", Offset = "0x1E61DFC", VA = "0x1E61DFC")]
	public static void SetSavefileFromNetwork(string name, string playedWithUserName, string[] contents)
	{
	}

	[Token(Token = "0x6000853")]
	protected static Dictionary<string, T> ReadData<T>(string header)
	{
		return null;
	}

	[Token(Token = "0x6000854")]
	protected static T ReadData<T>(string header, string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000855")]
	protected static T ReadData<T>(string header, string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1E61EE0", Offset = "0x1E61EE0", VA = "0x1E61EE0")]
	protected static void SaveData(string header, string key, object value)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1E61F74", Offset = "0x1E61F74", VA = "0x1E61F74")]
	protected static void ClearData(string header, string key)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1E62000", Offset = "0x1E62000", VA = "0x1E62000")]
	public static void ClearAllData()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1E62234", Offset = "0x1E62234", VA = "0x1E62234")]
	protected static void QueueSave(string header, SaveableClass obj, object value)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1E624F8", Offset = "0x1E624F8", VA = "0x1E624F8")]
	public static void PerformPendingSaves()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1E62FC0", Offset = "0x1E62FC0", VA = "0x1E62FC0")]
	public static void RecreatePendingObjects()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1E62180", Offset = "0x1E62180", VA = "0x1E62180")]
	public static void Reset()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1E6334C", Offset = "0x1E6334C", VA = "0x1E6334C")]
	public static void SaveToDisk()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1E63954", Offset = "0x1E63954", VA = "0x1E63954", Slot = "5")]
	public virtual void Recreate()
	{
	}

	[Token(Token = "0x600085F")]
	public static Dictionary<string, T> GetSaveFileMetaData<T>(string saveFileName)
	{
		return null;
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1E62BF0", Offset = "0x1E62BF0", VA = "0x1E62BF0")]
	private static void SaveMetaData()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1E61668", Offset = "0x1E61668", VA = "0x1E61668")]
	protected SaveableClass()
	{
	}
}
[Token(Token = "0x200019C")]
[ExecuteInEditMode]
public class SetMaterialColor : MonoBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool setEmission;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color emissionColor;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float emission;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1E68DFC", Offset = "0x1E68DFC", VA = "0x1E68DFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1E68E58", Offset = "0x1E68E58", VA = "0x1E68E58")]
	public void UpdateColor()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1E69034", Offset = "0x1E69034", VA = "0x1E69034")]
	public SetMaterialColor()
	{
	}
}
[Token(Token = "0x200019D")]
[ExecuteInEditMode]
public class SetMaterialProperty : MonoBehaviour
{
	[Token(Token = "0x200019E")]
	public abstract class BaseProperty
	{
		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x600086F")]
		public abstract void ApplyProperty(MaterialPropertyBlock mpb);

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1E694F8", Offset = "0x1E694F8", VA = "0x1E694F8")]
		protected BaseProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200019F")]
	public class FloatProperty : BaseProperty
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1E69500", Offset = "0x1E69500", VA = "0x1E69500", Slot = "4")]
		public override void ApplyProperty(MaterialPropertyBlock mpb)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1E69548", Offset = "0x1E69548", VA = "0x1E69548")]
		public FloatProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001A0")]
	public class TextureProperty : BaseProperty
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture value;

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x1E69550", Offset = "0x1E69550", VA = "0x1E69550", Slot = "4")]
		public override void ApplyProperty(MaterialPropertyBlock mpb)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1E69594", Offset = "0x1E69594", VA = "0x1E69594")]
		public TextureProperty()
		{
		}
	}

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatProperty[] floats;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextureProperty[] textures;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string materialId;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer m_Renderer;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, MaterialPropertyBlock> mpbs;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1E6903C", Offset = "0x1E6903C", VA = "0x1E6903C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1E693D4", Offset = "0x1E693D4", VA = "0x1E693D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1E692B8", Offset = "0x1E692B8", VA = "0x1E692B8")]
	private void ApplyProperties(MaterialPropertyBlock mpb, params BaseProperty[][] lists)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1E6947C", Offset = "0x1E6947C", VA = "0x1E6947C")]
	public SetMaterialProperty()
	{
	}
}
[Token(Token = "0x20001A1")]
public class SetParticlesColorForPlatform : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001A2")]
	public struct Pair
	{
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool set;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color color;
	}

	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C7DC", Offset = "0xA2C7DC")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetParticlesColorForPlatform <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0x1E69838", Offset = "0x1E69838", VA = "0x1E69838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x1E698A8", Offset = "0x1E698A8", VA = "0x1E698A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1E69610", Offset = "0x1E69610", VA = "0x1E69610")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1E69658", Offset = "0x1E69658", VA = "0x1E69658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1E6965C", Offset = "0x1E6965C", VA = "0x1E6965C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1E69840", Offset = "0x1E69840", VA = "0x1E69840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pair quest;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Pair playstation;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Pair otherPlatforms;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem particles;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int waitFrames;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1E6959C", Offset = "0x1E6959C", VA = "0x1E6959C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BAA4", Offset = "0xA3BAA4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1E6963C", Offset = "0x1E6963C", VA = "0x1E6963C")]
	public Pair GetPair()
	{
		return default(Pair);
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1E69650", Offset = "0x1E69650", VA = "0x1E69650")]
	public SetParticlesColorForPlatform()
	{
	}
}
[Token(Token = "0x20001A4")]
public class ShakeableCamera : MonoBehaviour
{
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C7EC", Offset = "0xA2C7EC")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x1E6B688", Offset = "0x1E6B688", VA = "0x1E6B688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0x1E6B6F8", Offset = "0x1E6B6F8", VA = "0x1E6B6F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x1E6B110", Offset = "0x1E6B110", VA = "0x1E6B110")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1E6B598", Offset = "0x1E6B598", VA = "0x1E6B598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1E6B59C", Offset = "0x1E6B59C", VA = "0x1E6B59C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1E6B690", Offset = "0x1E6B690", VA = "0x1E6B690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C7FC", Offset = "0xA2C7FC")]
	private sealed class <Shake>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShakeableCamera <>4__this;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float magnitude;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float wearOff;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <originalPosition>5__2;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForFixedUpdate <wait>5__3;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x1E6B520", Offset = "0x1E6B520", VA = "0x1E6B520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x1E6B590", Offset = "0x1E6B590", VA = "0x1E6B590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1E6B210", Offset = "0x1E6B210", VA = "0x1E6B210")]
		[DebuggerHidden]
		public <Shake>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1E6B244", Offset = "0x1E6B244", VA = "0x1E6B244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1E6B248", Offset = "0x1E6B248", VA = "0x1E6B248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1E6B528", Offset = "0x1E6B528", VA = "0x1E6B528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShakeableCamera[] cameras;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isShaking;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x1E6B0B0", Offset = "0x1E6B0B0", VA = "0x1E6B0B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BB58", Offset = "0xA3BB58")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x1E6B13C", Offset = "0x1E6B13C", VA = "0x1E6B13C")]
	public static void ShakeAll(float magnitude = 2f, float time = 1f, float wearOff = 0.9f)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1E6B140", Offset = "0x1E6B140", VA = "0x1E6B140")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BBBC", Offset = "0xA3BBBC")]
	public IEnumerator Shake(float magnitude = 2f, float time = 1f, float wearOff = 0.9f)
	{
		return null;
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1E6B23C", Offset = "0x1E6B23C", VA = "0x1E6B23C")]
	public ShakeableCamera()
	{
	}
}
[Token(Token = "0x20001A7")]
public class SimpleMover : AffectPlayerVelocity, IHasDirection, IHasSpeed
{
	[Token(Token = "0x20001A8")]
	private struct ForNetworkTime
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<double> atTime;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<Vector3> pos;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> direction;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double period;
	}

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool turnToFaceDirection;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float speed;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 direction;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool dontUseNetworkTime;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastDelta;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 lastPos;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ForNetworkTime forNetworkTime;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1E71DA8", Offset = "0x1E71DA8", VA = "0x1E71DA8", Slot = "4")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1E72468", Offset = "0x1E72468", VA = "0x1E72468")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1E7290C", Offset = "0x1E7290C", VA = "0x1E7290C")]
	public static double DoubleMod(double a, double b)
	{
		return default(double);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1E72988", Offset = "0x1E72988", VA = "0x1E72988", Slot = "5")]
	public override Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1E723C0", Offset = "0x1E723C0", VA = "0x1E723C0", Slot = "6")]
	public void SetDirection(Vector3 direction, bool turnImmediately = false)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1E7288C", Offset = "0x1E7288C", VA = "0x1E7288C")]
	public bool UseNetworkTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1E72A68", Offset = "0x1E72A68", VA = "0x1E72A68")]
	public SimpleMover()
	{
	}
}
[Token(Token = "0x20001A9")]
public class HideInOnlyVr : MonoBehaviour, IConditionalShow
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool visibleOnlyVr;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool visibleBothVrAndScreen;

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xBABE94", Offset = "0xBABE94", VA = "0xBABE94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xBABE98", Offset = "0xBABE98", VA = "0xBABE98")]
	private void UpdateHide()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xBAC004", Offset = "0xBAC004", VA = "0xBAC004", Slot = "4")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xBAC00C", Offset = "0xBAC00C", VA = "0xBAC00C")]
	public HideInOnlyVr()
	{
	}
}
[Token(Token = "0x20001AA")]
public class HideInSinglePlayerMode : MonoBehaviour, IConditionalShow
{
	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool visibleInSinglePlayerMode;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool visibleInMultiplayerMode;

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xBAC01C", Offset = "0xBAC01C", VA = "0xBAC01C")]
	private void Start()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xBAC020", Offset = "0xBAC020", VA = "0xBAC020")]
	private void UpdateHide()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xBAC18C", Offset = "0xBAC18C", VA = "0xBAC18C", Slot = "4")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xBAC1C0", Offset = "0xBAC1C0", VA = "0xBAC1C0")]
	public HideInSinglePlayerMode()
	{
	}
}
[Token(Token = "0x20001AB")]
public class SetLayerByGameMode : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001AC")]
	public struct ForMode
	{
		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameMode gameMode;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[LayerField]
		public int layer;
	}

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ForMode[] modes;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool dontSetRecursive;

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x1E673F0", Offset = "0x1E673F0", VA = "0x1E673F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x1E67520", Offset = "0x1E67520", VA = "0x1E67520")]
	public SetLayerByGameMode()
	{
	}
}
[Token(Token = "0x20001AD")]
public class LayerField : PropertyAttribute
{
	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1E24BE8", Offset = "0x1E24BE8", VA = "0x1E24BE8")]
	public LayerField()
	{
	}
}
[Token(Token = "0x20001AE")]
public class SinglePlayerModeLayer : MonoBehaviour
{
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Layer]
	public int singlePlayerModeLayer;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Layer]
	public int multiPlayerModeLayer;

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1E735F4", Offset = "0x1E735F4", VA = "0x1E735F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1E735F8", Offset = "0x1E735F8", VA = "0x1E735F8")]
	private void UpdateLayer()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1E736A4", Offset = "0x1E736A4", VA = "0x1E736A4")]
	public SinglePlayerModeLayer()
	{
	}
}
[Token(Token = "0x20001AF")]
public class SpeedDependantSound : MonoBehaviour
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter soundEvent;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string parameter;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour speedTarget;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IHasSpeed hasSpeed;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1E7894C", Offset = "0x1E7894C", VA = "0x1E7894C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1E789B4", Offset = "0x1E789B4", VA = "0x1E789B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1E78B4C", Offset = "0x1E78B4C", VA = "0x1E78B4C")]
	public SpeedDependantSound()
	{
	}
}
[Token(Token = "0x20001B0")]
public class ChangeStateOnButtonPress : WandComponent
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public VrButton button;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool changeStateOnButtonUp;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StateMachine stateMachine;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string state;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool value;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1E5CA80", Offset = "0x1E5CA80", VA = "0x1E5CA80", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1E5CB0C", Offset = "0x1E5CB0C", VA = "0x1E5CB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1E5CBBC", Offset = "0x1E5CBBC", VA = "0x1E5CBBC")]
	public ChangeStateOnButtonPress()
	{
	}
}
[Token(Token = "0x20001B1")]
public class PlayParticlesOnState : MonoBehaviour
{
	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateMachine stateMachine;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string state;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem ParticleSystem;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1EA1354", Offset = "0x1EA1354", VA = "0x1EA1354")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1EA1474", Offset = "0x1EA1474", VA = "0x1EA1474")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1EA1594", Offset = "0x1EA1594", VA = "0x1EA1594")]
	private void StateChange(string s, bool value)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1EA1794", Offset = "0x1EA1794", VA = "0x1EA1794")]
	public PlayParticlesOnState()
	{
	}
}
[Token(Token = "0x20001B2")]
public class SetKinematicOnState : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateMachine stateMachine;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string state;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool includeChildren;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool setIsKinematicTo;

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1E67038", Offset = "0x1E67038", VA = "0x1E67038")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1E67158", Offset = "0x1E67158", VA = "0x1E67158")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1E67278", Offset = "0x1E67278", VA = "0x1E67278")]
	private void StateChange(string s, bool v)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1E673E0", Offset = "0x1E673E0", VA = "0x1E673E0")]
	public SetKinematicOnState()
	{
	}
}
[Token(Token = "0x20001B3")]
public class SetStateOnCollision : MonoBehaviour
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateMachine stateMachine;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string setStateOnEnter;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string clearStateOnEnter;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string setStateOnExit;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string clearStateOnExit;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string collisionTag;

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1E6A7AC", Offset = "0x1E6A7AC", VA = "0x1E6A7AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1E6A868", Offset = "0x1E6A868", VA = "0x1E6A868")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1E6A960", Offset = "0x1E6A960", VA = "0x1E6A960")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1E6AA5C", Offset = "0x1E6AA5C", VA = "0x1E6AA5C")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1E6AB54", Offset = "0x1E6AB54", VA = "0x1E6AB54")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1E6AC50", Offset = "0x1E6AC50", VA = "0x1E6AC50")]
	public SetStateOnCollision()
	{
	}
}
[Token(Token = "0x20001B4")]
public class StateAwareComponent : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component component;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StateMachine stateMachine;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string state;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool disableWhenTrue;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool fireOnce;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool m_fired;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1E798E4", Offset = "0x1E798E4", VA = "0x1E798E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1E79D44", Offset = "0x1E79D44", VA = "0x1E79D44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1E79A84", Offset = "0x1E79A84", VA = "0x1E79A84")]
	private void CheckState(string checkState, bool value)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1E79E98", Offset = "0x1E79E98", VA = "0x1E79E98")]
	public StateAwareComponent()
	{
	}
}
[Token(Token = "0x20001B5")]
public class StateMachine : SaveableClass
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Dictionary<string, bool> states;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<string, bool> OnStateChange;

	[Token(Token = "0x17000109")]
	protected virtual bool persist
	{
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1E79EA0", Offset = "0x1E79EA0", VA = "0x1E79EA0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010A")]
	public override string UniqueId
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1E79EA8", Offset = "0x1E79EA8", VA = "0x1E79EA8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	protected virtual Dictionary<string, bool> stateDictionary
	{
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1E7A0DC", Offset = "0x1E7A0DC", VA = "0x1E7A0DC", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1E79F04", Offset = "0x1E79F04", VA = "0x1E79F04", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1E7A0D8", Offset = "0x1E7A0D8", VA = "0x1E7A0D8", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1E7A0E4", Offset = "0x1E7A0E4", VA = "0x1E7A0E4", Slot = "10")]
	public virtual void SetState(string state, bool value, bool persist = true, bool throwStateChangeEvent = true)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1E7A294", Offset = "0x1E7A294", VA = "0x1E7A294", Slot = "11")]
	public virtual bool GetState(string state)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1E7A35C", Offset = "0x1E7A35C", VA = "0x1E7A35C")]
	public void ClearStates()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1E7A3C4", Offset = "0x1E7A3C4", VA = "0x1E7A3C4")]
	public StateMachine()
	{
	}
}
[Token(Token = "0x20001B6")]
public class SwitchMaterialForPlatform : MonoBehaviour
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material questMaterial;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material playstationMaterial;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material otherPlatformsMaterial;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer renderer;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1DF1FBC", Offset = "0x1DF1FBC", VA = "0x1DF1FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1DF20E8", Offset = "0x1DF20E8", VA = "0x1DF20E8")]
	public Material GetMaterial()
	{
		return null;
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1DF20F0", Offset = "0x1DF20F0", VA = "0x1DF20F0")]
	public SwitchMaterialForPlatform()
	{
	}
}
[Token(Token = "0x20001B7")]
public class TreeRoot : MonoBehaviour
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1DF5AB4", Offset = "0x1DF5AB4", VA = "0x1DF5AB4")]
	private void Destroy()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1DF5B4C", Offset = "0x1DF5B4C", VA = "0x1DF5B4C")]
	public TreeRoot()
	{
	}
}
[Token(Token = "0x20001B8")]
public class TriggerHapticPulseOnCollision : MonoBehaviour
{
	[Token(Token = "0x20001B9")]
	public enum CollisionTypeEnum
	{
		[Token(Token = "0x40008B5")]
		Both,
		[Token(Token = "0x40008B6")]
		Collision,
		[Token(Token = "0x40008B7")]
		Trigger
	}

	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C80C", Offset = "0xA2C80C")]
	private sealed class <TriggerPulse>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerHapticPulseOnCollision <>4__this;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_GrabbingController wand;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x1DF60E4", Offset = "0x1DF60E4", VA = "0x1DF60E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x1DF6154", Offset = "0x1DF6154", VA = "0x1DF6154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1DF5F34", Offset = "0x1DF5F34", VA = "0x1DF5F34")]
		[DebuggerHidden]
		public <TriggerPulse>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x1DF5F7C", Offset = "0x1DF5F7C", VA = "0x1DF5F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1DF5F80", Offset = "0x1DF5F80", VA = "0x1DF5F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1DF60EC", Offset = "0x1DF60EC", VA = "0x1DF60EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool looping;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float strength;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool trigger;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CollisionTypeEnum collisionType;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1DF5B54", Offset = "0x1DF5B54", VA = "0x1DF5B54")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1DF5CC4", Offset = "0x1DF5CC4", VA = "0x1DF5CC4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1DF5D78", Offset = "0x1DF5D78", VA = "0x1DF5D78")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1DF5E68", Offset = "0x1DF5E68", VA = "0x1DF5E68")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1DF5C2C", Offset = "0x1DF5C2C", VA = "0x1DF5C2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BCC0", Offset = "0xA3BCC0")]
	private IEnumerator TriggerPulse(SteamVR_GrabbingController wand)
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1DF5F60", Offset = "0x1DF5F60", VA = "0x1DF5F60")]
	public TriggerHapticPulseOnCollision()
	{
	}
}
[Token(Token = "0x20001BB")]
public class VisibleForBoth : MonoBehaviour
{
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C81C", Offset = "0xA2C81C")]
	private sealed class <FadeIn>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer renderer;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialPropertyBlock materialProperties;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VisibleForBoth <>4__this;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <dissolve>5__2;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x1E1F8F0", Offset = "0x1E1F8F0", VA = "0x1E1F8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x1E1F960", Offset = "0x1E1F960", VA = "0x1E1F960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1E1F63C", Offset = "0x1E1F63C", VA = "0x1E1F63C")]
		[DebuggerHidden]
		public <FadeIn>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1E1F7A8", Offset = "0x1E1F7A8", VA = "0x1E1F7A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1E1F7AC", Offset = "0x1E1F7AC", VA = "0x1E1F7AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x1E1F8F8", Offset = "0x1E1F8F8", VA = "0x1E1F8F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C82C", Offset = "0xA2C82C")]
	private sealed class <FadeOut>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialPropertyBlock materialProperties;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer renderer;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VisibleForBoth <>4__this;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <dissolve>5__2;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x1E1FAB8", Offset = "0x1E1FAB8", VA = "0x1E1FAB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x1E1FB28", Offset = "0x1E1FB28", VA = "0x1E1FB28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1E1F714", Offset = "0x1E1F714", VA = "0x1E1F714")]
		[DebuggerHidden]
		public <FadeOut>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1E1F968", Offset = "0x1E1F968", VA = "0x1E1F968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1E1F96C", Offset = "0x1E1F96C", VA = "0x1E1F96C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1E1FAC0", Offset = "0x1E1FAC0", VA = "0x1E1FAC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CameraController camCtrl;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer[] renderers;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock[] mpb;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider[] colliders;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool includeColliders;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool includerTriggers;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForFixedUpdate wffu;

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x1E1EDE0", Offset = "0x1E1EDE0", VA = "0x1E1EDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1E1F0C4", Offset = "0x1E1F0C4", VA = "0x1E1F0C4")]
	private void ChangeCamera(Transform camera)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1E1F46C", Offset = "0x1E1F46C", VA = "0x1E1F46C")]
	private void Destroy()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x1E1F58C", Offset = "0x1E1F58C", VA = "0x1E1F58C", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BD74", Offset = "0xA3BD74")]
	public virtual IEnumerator FadeIn(Renderer renderer, MaterialPropertyBlock materialProperties)
	{
		return null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1E1F668", Offset = "0x1E1F668", VA = "0x1E1F668", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BDD8", Offset = "0xA3BDD8")]
	public virtual IEnumerator FadeOut(Renderer renderer, MaterialPropertyBlock materialProperties)
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1E1F740", Offset = "0x1E1F740", VA = "0x1E1F740")]
	public VisibleForBoth()
	{
	}
}
[Token(Token = "0x20001BE")]
public class WillTakeDamage : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxHealth;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float health;

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1F60388", Offset = "0x1F60388", VA = "0x1F60388")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1F60398", Offset = "0x1F60398", VA = "0x1F60398")]
	private void TakeDamage(float damage)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1F603B4", Offset = "0x1F603B4", VA = "0x1F603B4")]
	private void Die()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1F60430", Offset = "0x1F60430", VA = "0x1F60430")]
	public WillTakeDamage()
	{
	}
}
[Token(Token = "0x20001BF")]
public class HideDuringRuntime : MonoBehaviour
{
	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xBABDBC", Offset = "0xBABDBC", VA = "0xBABDBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xBABE88", Offset = "0xBABE88", VA = "0xBABE88")]
	private void Update()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xBABE8C", Offset = "0xBABE8C", VA = "0xBABE8C")]
	public HideDuringRuntime()
	{
	}
}
[Token(Token = "0x20001C0")]
public class InGameTV : MonoBehaviour
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camera;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture renderTexture;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform head;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int layerMask;

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xCDD1D4", Offset = "0xCDD1D4", VA = "0xCDD1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xCDD2F8", Offset = "0xCDD2F8", VA = "0xCDD2F8")]
	private void SetMeAsCamera()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xCDD3C0", Offset = "0xCDD3C0", VA = "0xCDD3C0")]
	private void ResetCamera()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xCDD460", Offset = "0xCDD460", VA = "0xCDD460")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xCDD464", Offset = "0xCDD464", VA = "0xCDD464")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xCDD468", Offset = "0xCDD468", VA = "0xCDD468")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xCDD6CC", Offset = "0xCDD6CC", VA = "0xCDD6CC")]
	public InGameTV()
	{
	}
}
[Token(Token = "0x20001C1")]
public interface ICanBeAffectedBySpeed
{
	[Token(Token = "0x60008F5")]
	void SetAddSpeedFromObject(AffectPlayerVelocity apv);
}
[Token(Token = "0x20001C2")]
public interface IConditionalShow
{
	[Token(Token = "0x60008F6")]
	bool IsVisible();
}
[Token(Token = "0x20001C3")]
public interface IHasDirection
{
	[Token(Token = "0x60008F7")]
	void SetDirection(Vector3 direction, bool turnImmediately = false);
}
[Token(Token = "0x20001C4")]
public interface IHasSpeed
{
	[Token(Token = "0x60008F8")]
	Vector3 GetPointVelocity(Vector3 point);
}
[Token(Token = "0x20001C5")]
public interface ISetSpeed
{
	[Token(Token = "0x60008F9")]
	void SetSpeed(float speed);
}
[Token(Token = "0x20001C6")]
public class InventoryItem : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerCharacter.InventoryItem item;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool deleteOnPickup;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool respawnOnDeath;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xCDFC6C", Offset = "0xCDFC6C", VA = "0xCDFC6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xCDFC84", Offset = "0xCDFC84", VA = "0xCDFC84")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xCDFDC8", Offset = "0xCDFDC8", VA = "0xCDFDC8")]
	public void TriggeredWithPlayerCharacter()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xCDFEDC", Offset = "0xCDFEDC", VA = "0xCDFEDC")]
	private void WasRecreated()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xCDFF0C", Offset = "0xCDFF0C", VA = "0xCDFF0C")]
	public InventoryItem()
	{
	}
}
[Token(Token = "0x20001C7")]
public class KillOnCollision : MonoBehaviour
{
	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RestartLevelOnDeath;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask KillOnTriggerEnter;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask KillOnTriggerExit;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool neverDeactivate;

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xCE3F10", Offset = "0xCE3F10", VA = "0xCE3F10")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xCE4280", Offset = "0xCE4280", VA = "0xCE4280")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xCE3F18", Offset = "0xCE3F18", VA = "0xCE3F18")]
	private void Kill(Collider collider, LayerMask layerMask)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xCE4288", Offset = "0xCE4288", VA = "0xCE4288")]
	public KillOnCollision()
	{
	}
}
[Token(Token = "0x20001C8")]
public class Level : Manager<Level>
{
	[Serializable]
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C83C", Offset = "0xA2C83C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Pickup> <>9__65_0;

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x1E26EA0", Offset = "0x1E26EA0", VA = "0x1E26EA0")]
		public <>c()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1E26EA8", Offset = "0x1E26EA8", VA = "0x1E26EA8")]
		internal int <Start>b__65_0(Pickup a, Pickup b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C84C", Offset = "0xA2C84C")]
	private sealed class <Start>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level <>4__this;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0x1E2A19C", Offset = "0x1E2A19C", VA = "0x1E2A19C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x1E2A20C", Offset = "0x1E2A20C", VA = "0x1E2A20C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1E26314", Offset = "0x1E26314", VA = "0x1E26314")]
		[DebuggerHidden]
		public <Start>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1E296DC", Offset = "0x1E296DC", VA = "0x1E296DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1E296E0", Offset = "0x1E296E0", VA = "0x1E296E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x1E2A1A4", Offset = "0x1E2A1A4", VA = "0x1E2A1A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C85C", Offset = "0xA2C85C")]
	private sealed class <ShowCameraAngles>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level <>4__this;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x1E28EAC", Offset = "0x1E28EAC", VA = "0x1E28EAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x1E28F1C", Offset = "0x1E28F1C", VA = "0x1E28F1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x1E263B4", Offset = "0x1E263B4", VA = "0x1E263B4")]
		[DebuggerHidden]
		public <ShowCameraAngles>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x1E28C44", Offset = "0x1E28C44", VA = "0x1E28C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x1E28C48", Offset = "0x1E28C48", VA = "0x1E28C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x1E28EB4", Offset = "0x1E28EB4", VA = "0x1E28EB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C86C", Offset = "0xA2C86C")]
	private sealed class <EnterThroughEntrance>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level <>4__this;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <go>5__2;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BoxCollider[] <colliders>5__3;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OddRavenCharacterController <player>5__4;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OddRavenCharacterInput <input>5__5;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForFixedUpdate <wait>5__6;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <time>5__7;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x1E28310", Offset = "0x1E28310", VA = "0x1E28310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x1E28380", Offset = "0x1E28380", VA = "0x1E28380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1E26454", Offset = "0x1E26454", VA = "0x1E26454")]
		[DebuggerHidden]
		public <EnterThroughEntrance>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1E27274", Offset = "0x1E27274", VA = "0x1E27274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x1E27278", Offset = "0x1E27278", VA = "0x1E27278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1E28318", Offset = "0x1E28318", VA = "0x1E28318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C87C", Offset = "0xA2C87C")]
	private sealed class <SetCameraRigPosition>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform <cameraRig>5__2;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <headPosition>5__3;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x1E28BCC", Offset = "0x1E28BCC", VA = "0x1E28BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x1E28C3C", Offset = "0x1E28C3C", VA = "0x1E28C3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1E264E0", Offset = "0x1E264E0", VA = "0x1E264E0")]
		[DebuggerHidden]
		public <SetCameraRigPosition>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1E286EC", Offset = "0x1E286EC", VA = "0x1E286EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1E286F0", Offset = "0x1E286F0", VA = "0x1E286F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1E28BD4", Offset = "0x1E28BD4", VA = "0x1E28BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C88C", Offset = "0xA2C88C")]
	private sealed class <SpawnTunnel>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level <>4__this;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <playerStart>5__2;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EntryTunnel <tunnel>5__3;

		[Token(Token = "0x1700011C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x1E29664", Offset = "0x1E29664", VA = "0x1E29664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0x1E296D4", Offset = "0x1E296D4", VA = "0x1E296D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1E26580", Offset = "0x1E26580", VA = "0x1E26580")]
		[DebuggerHidden]
		public <SpawnTunnel>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1E28F24", Offset = "0x1E28F24", VA = "0x1E28F24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1E28F28", Offset = "0x1E28F28", VA = "0x1E28F28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1E2966C", Offset = "0x1E2966C", VA = "0x1E2966C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C89C", Offset = "0xA2C89C")]
	private sealed class <LoadLevel>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showLoadScreen;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level <>4__this;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeOutTime;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string levelName;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool activateWhenReady;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x1E28674", Offset = "0x1E28674", VA = "0x1E28674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x1E286E4", Offset = "0x1E286E4", VA = "0x1E286E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1E267BC", Offset = "0x1E267BC", VA = "0x1E267BC")]
		[DebuggerHidden]
		public <LoadLevel>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x1E28388", Offset = "0x1E28388", VA = "0x1E28388", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x1E2838C", Offset = "0x1E2838C", VA = "0x1E2838C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x1E2867C", Offset = "0x1E2867C", VA = "0x1E2867C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2C8AC", Offset = "0xA2C8AC")]
	private sealed class <CheckAchievements>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x1E271FC", Offset = "0x1E271FC", VA = "0x1E271FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0x1E2726C", Offset = "0x1E2726C", VA = "0x1E2726C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x1E26848", Offset = "0x1E26848", VA = "0x1E26848")]
		[DebuggerHidden]
		public <CheckAchievements>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1E26EF0", Offset = "0x1E26EF0", VA = "0x1E26EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1E26EF4", Offset = "0x1E26EF4", VA = "0x1E26EF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x1E27204", Offset = "0x1E27204", VA = "0x1E27204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float levelTime;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hasTime;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action LevelEnded;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] respawnWithPlayer;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timePassed;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public FootSounds.SurfaceEnum defaultSurface;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerCharacter playerCharacter;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string levelCaption;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite levelIntroImage;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32770", Offset = "0xA32770")]
	public List<GameObject> items;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA327A8", Offset = "0xA327A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA327A8", Offset = "0xA327A8")]
	public string GameOverScene;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject tunnelPrefab;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EndLevel levelEntrance;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CustomSpawner customSpawner;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool manuallySetIntroSeenFlag;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool enableInputAfterEntrance;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject thirdPersonGUIPrefab;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool restartLevelOnDeath;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject gui;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA327F8", Offset = "0xA327F8")]
	public bool useVolumetricLight;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float extraDensity;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float intensity;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32830", Offset = "0xA32830")]
	public Color dustTint;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Color dustEmission;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32868", Offset = "0xA32868")]
	public Vector3 worldScale;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool playerlessLevel;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool noReapermanHands;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool forceSocialScreen;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public bool fadeInAtStart;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool shouldSetCameraRigPosition;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ShaderVariantCollection[] shaderVariants;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float renderscaleMultiplicator;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float maximumRenderScale;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BlackFadeManager blackFade;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float extraAmbientAdd;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int quest2Fps;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA328A0", Offset = "0xA328A0")]
	public string ScoreParameterName;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float ScoreParameterValue;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool noMusic;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA328D8", Offset = "0xA328D8")]
	[World]
	public string WorldID;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameData GD;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32924", Offset = "0xA32924")]
	public Transform[] cameraAngles;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float fadeTime;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float showTime;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public OddRavenVrPriorityOrder skipIntroPriorityOrder;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VrButton skipIntroButton;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool forceIntroInSinglePlayerMode;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3295C", Offset = "0xA3295C")]
	public bool overrideCameraClearColor;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color overrideColor;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Color playstationMinOutputColor;

	[NonSerialized]
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int totalPoints;

	[NonSerialized]
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public int collectedPoints;

	[NonSerialized]
	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Pickup[] pickupsOnLevel;

	[NonSerialized]
	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool isLoading;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Action LevelLoadStarted;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GoogleAnalyticsV4 analytics;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CATRSettings _settings;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool analyticsSessionStarted;

	[Token(Token = "0x17000112")]
	public static CATRSettings Settings
	{
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1E24E10", Offset = "0x1E24E10", VA = "0x1E24E10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000113")]
	public IEnumerable<GameObject> InventoryItems
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1E26AC4", Offset = "0x1E26AC4", VA = "0x1E26AC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1E24F84", Offset = "0x1E24F84", VA = "0x1E24F84", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1E25B44", Offset = "0x1E25B44", VA = "0x1E25B44")]
	private void StartAnalyticsSession()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1E25B4C", Offset = "0x1E25B4C", VA = "0x1E25B4C")]
	public void LogAnalyticsEvent(string category, string action, string label = "", long value = -1L, params KeyValuePair<int, int>[] customMetrics)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1E25DA0", Offset = "0x1E25DA0", VA = "0x1E25DA0")]
	public void LogAnalyticsTiming(string category, long value, string name = "", string label = "", params KeyValuePair<int, int>[] customMetrics)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x1E26000", Offset = "0x1E26000", VA = "0x1E26000")]
	private void SetupPlayerCharacter()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1E262A0", Offset = "0x1E262A0", VA = "0x1E262A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BEDC", Offset = "0xA3BEDC")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x1E26340", Offset = "0x1E26340", VA = "0x1E26340")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BF40", Offset = "0xA3BF40")]
	private IEnumerator ShowCameraAngles()
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x1E263E0", Offset = "0x1E263E0", VA = "0x1E263E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3BFA4", Offset = "0xA3BFA4")]
	public IEnumerator EnterThroughEntrance()
	{
		return null;
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x1E26480", Offset = "0x1E26480", VA = "0x1E26480")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C008", Offset = "0xA3C008")]
	public IEnumerator SetCameraRigPosition()
	{
		return null;
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x1E2650C", Offset = "0x1E2650C", VA = "0x1E2650C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C06C", Offset = "0xA3C06C")]
	public IEnumerator SpawnTunnel()
	{
		return null;
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1E265AC", Offset = "0x1E265AC", VA = "0x1E265AC")]
	public void GameOver()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x1E266C0", Offset = "0x1E266C0", VA = "0x1E266C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C0D0", Offset = "0xA3C0D0")]
	private IEnumerator LoadLevel(string levelName, float fadeOutTime = 0.5f, bool activateWhenReady = true, bool showLoadScreen = true)
	{
		return null;
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x1E267E8", Offset = "0x1E267E8", VA = "0x1E267E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C134", Offset = "0xA3C134")]
	public IEnumerator CheckAchievements()
	{
		return null;
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x1E26874", Offset = "0x1E26874", VA = "0x1E26874")]
	public static void LoadLevel(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f, bool loadAdditive = false)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1E26958", Offset = "0x1E26958", VA = "0x1E26958")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1E269E4", Offset = "0x1E269E4", VA = "0x1E269E4")]
	public void AddToInventory(GameObject item)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1E26A54", Offset = "0x1E26A54", VA = "0x1E26A54")]
	public void RemoveFromInventory(GameObject item)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1E26ACC", Offset = "0x1E26ACC", VA = "0x1E26ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1E26B40", Offset = "0x1E26B40", VA = "0x1E26B40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1E26C44", Offset = "0x1E26C44", VA = "0x1E26C44")]
	public Level()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x1E26D80", Offset = "0x1E26D80", VA = "0x1E26D80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C198", Offset = "0xA3C198")]
	private void <SetupPlayerCharacter>b__64_0()
	{
	}
}
[Token(Token = "0x20001D1")]
public class LevelButton : MonoBehaviour
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string collisionTag;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StateMachine stateMachine;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string changeState;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1E2ADC8", Offset = "0x1E2ADC8", VA = "0x1E2ADC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1E2AFBC", Offset = "0x1E2AFBC", VA = "0x1E2AFBC")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x1E2B1C0", Offset = "0x1E2B1C0", VA = "0x1E2B1C0")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1E2B2B8", Offset = "0x1E2B2B8", VA = "0x1E2B2B8")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1E2B420", Offset = "0x1E2B420", VA = "0x1E2B420")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1E2B518", Offset = "0x1E2B518", VA = "0x1E2B518")]
	public LevelButton()
	{
	}
}
[Token(Token = "0x20001D2")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C8BC", Offset = "0xA2C8BC")]
public class LevelObject : MonoBehaviour
{
	[Token(Token = "0x20001D3")]
	public struct Scale
	{
		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Right;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Left;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Up;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Down;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Forward;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Back;

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1E330F8", Offset = "0x1E330F8", VA = "0x1E330F8")]
		public static Scale FromBounds(Bounds bounds)
		{
			return default(Scale);
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1E33F4C", Offset = "0x1E33F4C", VA = "0x1E33F4C")]
		public static Scale FromUniform(float size)
		{
			return default(Scale);
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x1E33F5C", Offset = "0x1E33F5C", VA = "0x1E33F5C")]
		public static bool operator ==(Scale s1, Scale s2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1E33FC8", Offset = "0x1E33FC8", VA = "0x1E33FC8")]
		public static bool operator !=(Scale s1, Scale s2)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scale scale;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 newPosition;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 newSize;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1E3301C", Offset = "0x1E3301C", VA = "0x1E3301C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1E33154", Offset = "0x1E33154", VA = "0x1E33154")]
	public void Begin()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1E33278", Offset = "0x1E33278", VA = "0x1E33278")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x1E332B4", Offset = "0x1E332B4", VA = "0x1E332B4")]
	public void Commit()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x1E336F0", Offset = "0x1E336F0", VA = "0x1E336F0")]
	public void UpdateTextureOffsets()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1E335E4", Offset = "0x1E335E4", VA = "0x1E335E4")]
	public bool HasChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1E33A1C", Offset = "0x1E33A1C", VA = "0x1E33A1C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1E33F44", Offset = "0x1E33F44", VA = "0x1E33F44")]
	public LevelObject()
	{
	}
}
[Token(Token = "0x20001D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2C94C", Offset = "0xA2C94C")]
[ExecuteInEditMode]
public class LevelObjectStreaming : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	public struct Scale
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Right;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Left;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Up;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Down;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Forward;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Back;

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1E34110", Offset = "0x1E34110", VA = "0x1E34110")]
		public static Scale FromBounds(Bounds bounds)
		{
			return default(Scale);
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1E34F98", Offset = "0x1E34F98", VA = "0x1E34F98")]
		public static bool operator ==(Scale s1, Scale s2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1E35004", Offset = "0x1E35004", VA = "0x1E35004")]
		public static bool operator !=(Scale s1, Scale s2)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scale scale;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 newPosition;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 newSize;

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x1E34034", Offset = "0x1E34034", VA = "0x1E34034")]
	public void Awake()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x1E3416C", Offset = "0x1E3416C", VA = "0x1E3416C")]
	public void Begin()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x1E34290", Offset = "0x1E34290", VA = "0x1E34290")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x1E342CC", Offset = "0x1E342CC", VA = "0x1E342CC")]
	public void Commit()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1E34708", Offset = "0x1E34708", VA = "0x1E34708")]
	public void UpdateTextureOffsets()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1E345FC", Offset = "0x1E345FC", VA = "0x1E345FC")]
	public bool HasChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x1E34A68", Offset = "0x1E34A68", VA = "0x1E34A68")]
	public void Update()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x1E34F90", Offset = "0x1E34F90", VA = "0x1E34F90")]
	public LevelObjectStreaming()
	{
	}
}
[Token(Token = "0x20001D6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2C9C0", Offset = "0xA2C9C0")]
public class ListOfStrings : ScriptableObject
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> Ids;

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1E351B4", Offset = "0x1E351B4", VA = "0x1E351B4")]
	public ListOfStrings()
	{
	}
}
[Token(Token = "0x20001D7")]
public class loadingScreenSimple : MonoBehaviour
{
	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string nextScene;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1F6128C", Offset = "0x1F6128C", VA = "0x1F6128C")]
	private void OnLevelWasLoaded()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1F61354", Offset = "0x1F61354", VA = "0x1F61354")]
	public loadingScreenSimple()
	{
	}
}
[Token(Token = "0x20001D8")]
public class LooseIntegrityWatcher : MonoBehaviour
{
	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<LooseIntegrityWatcher> LostIntegrity;

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1E3B10C", Offset = "0x1E3B10C", VA = "0x1E3B10C")]
	private void DidLooseIntegrity()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1E3B170", Offset = "0x1E3B170", VA = "0x1E3B170")]
	public LooseIntegrityWatcher()
	{
	}
}
[Token(Token = "0x20001D9")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x20001DA")]
	private struct SaveCompletionData
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int gamePercent;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int fireflyCount;

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x902974", Offset = "0x902974", VA = "0x902974")]
		public SaveCompletionData(int gamePercent, int fireflyCount)
		{
		}
	}

	[Token(Token = "0x20001DB")]
	private enum CurrentSaveHeader
	{
		[Token(Token = "0x40009B2")]
		None,
		[Token(Token = "0x40009B3")]
		Level1,
		[Token(Token = "0x40009B4")]
		Level2,
		[Token(Token = "0x40009B5")]
		Level3,
		[Token(Token = "0x40009B6")]
		Level4,
		[Token(Token = "0x40009B7")]
		Level5,
		[Token(Token = "0x40009B8")]
		Level6,
		[Token(Token = "0x40009B9")]
		Level7,
		[Token(Token = "0x40009BA")]
		Ending,
		[Token(Token = "0x40009BB")]
		FireFlyClub,
		[Token(Token = "0x40009BC")]
		FireFlies
	}

	[Serializable]
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CA20", Offset = "0xA2CA20")]
	private sealed class <>c
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Localization, bool> <>9__91_0;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<VRMenuItem, bool> <>9__136_0;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<VRMenuItem, bool> <>9__136_1;

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1E3FDB8", Offset = "0x1E3FDB8", VA = "0x1E3FDB8")]
		public <>c()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1E3FDC0", Offset = "0x1E3FDC0", VA = "0x1E3FDC0")]
		internal bool <UpdateOptions>b__91_0(Localization x)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1E3FE08", Offset = "0x1E3FE08", VA = "0x1E3FE08")]
		internal bool <Update>b__136_0(VRMenuItem x)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1E3FE68", Offset = "0x1E3FE68", VA = "0x1E3FE68")]
		internal bool <Update>b__136_1(VRMenuItem x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CA30", Offset = "0xA2CA30")]
	private sealed class <LoadGame>d__128 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string game;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x1E40144", Offset = "0x1E40144", VA = "0x1E40144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x1E401B4", Offset = "0x1E401B4", VA = "0x1E401B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x1E3DC50", Offset = "0x1E3DC50", VA = "0x1E3DC50")]
		[DebuggerHidden]
		public <LoadGame>d__128(int <>1__state)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1E3FEC8", Offset = "0x1E3FEC8", VA = "0x1E3FEC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1E3FECC", Offset = "0x1E3FECC", VA = "0x1E3FECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1E4014C", Offset = "0x1E4014C", VA = "0x1E4014C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CA40", Offset = "0xA2CA40")]
	private sealed class <ReadGameCompletionFromAllSaves>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenu <>4__this;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x1E40820", Offset = "0x1E40820", VA = "0x1E40820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x1E40890", Offset = "0x1E40890", VA = "0x1E40890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1E3FC60", Offset = "0x1E3FC60", VA = "0x1E3FC60")]
		[DebuggerHidden]
		public <ReadGameCompletionFromAllSaves>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1E401BC", Offset = "0x1E401BC", VA = "0x1E401BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x1E401C0", Offset = "0x1E401C0", VA = "0x1E401C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1E40828", Offset = "0x1E40828", VA = "0x1E40828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string startMethod;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32994", Offset = "0xA32994")]
	public RectTransform root;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform mainMenu;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform optionsMenu;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform controlsMenu;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform graphicsMenu;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform audioMenu;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform languageMenu;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform newGame;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform continueGame;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform pauseMenu;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform disconnectedMenu;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform credits;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RectTransform howToPlay;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform confirmDelete;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RectTransform remotePlayMenu;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RectTransform joinMenu;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RectTransform enterNameMenu;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RectTransform playMenu;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public RectTransform emptyRoomMenu;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RectTransform fullRoomMenu;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform connectingMenu;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RectTransform connectedMenu;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public RectTransform failedToJoinRoomMenu;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RectTransform noConnectionMenu;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public RectTransform connectToServerMenu;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public RectTransform hasConnectedToServerMenu;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public RectTransform failedToConnectToServerMenu;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RectTransform wrongPhotonVersionMenu;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA329CC", Offset = "0xA329CC")]
	public VRMenuItem[] startGameButtons;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public VRMenuItem newGameButton;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public VRMenuItem continueGameButton;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SaveFileMenuItem gameButtonTemplate;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public VRMenuItem pauseGameButton;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public VRMenuItem resumeGameButton;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public VRMenuItem quitToHubButton;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public VRMenuItem restartGameButton;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public VRMenuItem PrevSavePageButton;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public VRMenuItem NextSavePageButton;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public VRMenuItem playerReconnectAcceptButton;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Button setNameButton;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32A04", Offset = "0xA32A04")]
	public VRCheckbox invertY;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public VRCheckbox mouseLook;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public VRCheckbox rotateLevel;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public VRCheckbox vrVolumetricLight;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public VRCheckbox screenVolumetricLight;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public VRCheckbox vrBloom;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public VRCheckbox screenBloom;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public VRCheckbox vrAmbientOcclusion;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public VRCheckbox screenAmbientOcclusion;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public VRCheckbox vrAntiAliasing;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public VRCheckbox screenAntiAliasing;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32A3C", Offset = "0xA32A3C")]
	public VRDropDown vrResolution;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public VRDropDown screenResolution;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public VRDropDown detailLevel;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public VRDropDown quality;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public VRDropDown screenSoundDevice;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public VRDropDown vrSoundDevice;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public VRDropDown screenInputDevice;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public VRDropDown language;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public VRDropDown keyboardType;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32A74", Offset = "0xA32A74")]
	public TextMeshProUGUI selectedGame;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public VRTextbox newGameName;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public TextMeshProUGUI joinRoomWaitInfo;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public TextMeshProUGUI joinedRoomInfo;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public TextMeshProUGUI emptyRoomWaitInfo;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public TextMeshProUGUI fullRoomPlayerJoinedInfo;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public TextMeshProUGUI playerDisconnectInfo;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public TextMeshProUGUI playerDisconnectDots;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public TextMeshProUGUI playerDisconnectRoomCode;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public TextMeshProUGUI continuePageInfo;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32AAC", Offset = "0xA32AAC")]
	public RectTransform InviteNewGame;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public RectTransform InviteLoadGame;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public VRMenuItem inviteFromPauseMenuButton;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32AE4", Offset = "0xA32AE4")]
	public GameObject toggleOnMuteVoice;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public RectTransform logo;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject clickStop;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32B1C", Offset = "0xA32B1C")]
	public LocalizedString legacySaveFile;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public LocalizedString lastPlayedWith;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private List<VRMenuItem> savedGames;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private int savedGamesPage;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private int numberOfSavedGames;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Localization lastLanguage;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Vector3 DefaultLogoPosition;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private Vector3 DefaultContinuePosition;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private bool isMainMenu;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool pausedGame;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Dictionary<string, SaveCompletionData> saveFileCompletion;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private bool loading;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private string[] saves;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private bool saveListUpdated;

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1E3B178", Offset = "0x1E3B178", VA = "0x1E3B178")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1E3B330", Offset = "0x1E3B330", VA = "0x1E3B330")]
	private void Start()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1E3B428", Offset = "0x1E3B428", VA = "0x1E3B428")]
	private void UpdateOptions()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1E3BB20", Offset = "0x1E3BB20", VA = "0x1E3BB20")]
	private void Init()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1E3C938", Offset = "0x1E3C938", VA = "0x1E3C938")]
	public void ShowOptions()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1E3C8DC", Offset = "0x1E3C8DC", VA = "0x1E3C8DC")]
	private void ShowMainMenu()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1E3CAB8", Offset = "0x1E3CAB8", VA = "0x1E3CAB8")]
	private void ShowCredits()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1E3CB0C", Offset = "0x1E3CB0C", VA = "0x1E3CB0C")]
	private void ShowLoadGame()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1E3CC1C", Offset = "0x1E3CC1C", VA = "0x1E3CC1C")]
	private void ShowHowToPlay()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1E3CC70", Offset = "0x1E3CC70", VA = "0x1E3CC70")]
	private void NewGame()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1E3CCC4", Offset = "0x1E3CCC4", VA = "0x1E3CCC4")]
	public void ShowControlsMenu()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1E3CD18", Offset = "0x1E3CD18", VA = "0x1E3CD18")]
	public void ShowGfxMenu()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1E3CD6C", Offset = "0x1E3CD6C", VA = "0x1E3CD6C")]
	public void ShowAudioMenu()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1E3CDC0", Offset = "0x1E3CDC0", VA = "0x1E3CDC0")]
	public void ShowLanguageMenu()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1E3CE14", Offset = "0x1E3CE14", VA = "0x1E3CE14")]
	private void ToggleMuteVoice()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1E3CF10", Offset = "0x1E3CF10", VA = "0x1E3CF10")]
	public void ShowPauseMenu()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1E3CF64", Offset = "0x1E3CF64", VA = "0x1E3CF64")]
	private void ShowDisconnectedMenu()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1E3CFB8", Offset = "0x1E3CFB8", VA = "0x1E3CFB8")]
	public void ShowPlayMenu()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1E3D068", Offset = "0x1E3D068", VA = "0x1E3D068")]
	public void ShowEnterNameMenu()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1E3D170", Offset = "0x1E3D170", VA = "0x1E3D170")]
	public void ShowJoinOrEnterNameMenu()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1E3D2CC", Offset = "0x1E3D2CC", VA = "0x1E3D2CC")]
	public void SetName()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1E3D1E4", Offset = "0x1E3D1E4", VA = "0x1E3D1E4")]
	public void ShowJoinMenu()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1E3D348", Offset = "0x1E3D348", VA = "0x1E3D348")]
	public void ShowEmptyRoomMenu()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1E3D39C", Offset = "0x1E3D39C", VA = "0x1E3D39C")]
	public void ShowFullRoomMenu()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1E3D5C8", Offset = "0x1E3D5C8", VA = "0x1E3D5C8")]
	public void ShowConnectingMenu()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1E3D61C", Offset = "0x1E3D61C", VA = "0x1E3D61C")]
	public void ShowConnectedMenu()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1E3D670", Offset = "0x1E3D670", VA = "0x1E3D670")]
	public void ShowNoConnectionMenu()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1E3D6C4", Offset = "0x1E3D6C4", VA = "0x1E3D6C4")]
	public void ShowWrongPhotonVersionMenu()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1E3D718", Offset = "0x1E3D718", VA = "0x1E3D718")]
	public void ShowFailedToJoinRoomMenu()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1E3D76C", Offset = "0x1E3D76C", VA = "0x1E3D76C")]
	public void ShowConnectToServerMenu()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1E3D7C0", Offset = "0x1E3D7C0", VA = "0x1E3D7C0")]
	public void ShowHasConnectedToServerMenu()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1E3D814", Offset = "0x1E3D814", VA = "0x1E3D814")]
	public void ShowFailedToConnectToServerMenu()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1E3BE0C", Offset = "0x1E3BE0C", VA = "0x1E3BE0C")]
	private void HideAll()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1E3D868", Offset = "0x1E3D868", VA = "0x1E3D868")]
	private void SelectGame(string game)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1E3C98C", Offset = "0x1E3C98C", VA = "0x1E3C98C")]
	private void WipeGameSetups()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1E3D964", Offset = "0x1E3D964", VA = "0x1E3D964")]
	private void StartNewGameSinglePlayer(string _)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1E3DADC", Offset = "0x1E3DADC", VA = "0x1E3DADC")]
	private void LoadGameSinglePlayer(string game)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1E3DB98", Offset = "0x1E3DB98", VA = "0x1E3DB98")]
	private void LoadGameCoop(string game)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1E3DA68", Offset = "0x1E3DA68", VA = "0x1E3DA68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C3D8", Offset = "0xA3C3D8")]
	private IEnumerator LoadGame(string game)
	{
		return null;
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1E3DC7C", Offset = "0x1E3DC7C", VA = "0x1E3DC7C")]
	private void ShowDeleteConfirmation()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1E3DCC8", Offset = "0x1E3DCC8", VA = "0x1E3DCC8")]
	private void DeleteGame(string game)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1E3B3B8", Offset = "0x1E3B3B8", VA = "0x1E3B3B8")]
	private void UpdateSaveGames()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1E3DD7C", Offset = "0x1E3DD7C", VA = "0x1E3DD7C")]
	private void UpdateSaveGamesWith(string[] saves)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1E3DE20", Offset = "0x1E3DE20", VA = "0x1E3DE20")]
	private void SaveFilesPageChange(string text)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1E3DF8C", Offset = "0x1E3DF8C", VA = "0x1E3DF8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1E3EAB4", Offset = "0x1E3EAB4", VA = "0x1E3EAB4")]
	private void PauseGame()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1E3EBBC", Offset = "0x1E3EBBC", VA = "0x1E3EBBC")]
	private void ResumeGame()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1E3ED70", Offset = "0x1E3ED70", VA = "0x1E3ED70")]
	public void RestartLevel()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1E3EE7C", Offset = "0x1E3EE7C", VA = "0x1E3EE7C")]
	public void AcceptReconnection()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1E3F008", Offset = "0x1E3F008", VA = "0x1E3F008")]
	private void QuitToHub()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x1E3F1FC", Offset = "0x1E3F1FC", VA = "0x1E3F1FC")]
	private void QuitToMenu()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1E3F344", Offset = "0x1E3F344", VA = "0x1E3F344")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1E3F360", Offset = "0x1E3F360", VA = "0x1E3F360")]
	private void TextChange(VRTextbox text)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1E3F418", Offset = "0x1E3F418", VA = "0x1E3F418")]
	private void ValueChange()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1E3FB34", Offset = "0x1E3FB34", VA = "0x1E3FB34")]
	private string GetDevice(string device)
	{
		return null;
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1E3FBA0", Offset = "0x1E3FBA0", VA = "0x1E3FBA0")]
	private string Truncate(string value, int maxLength)
	{
		return null;
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1E3BAAC", Offset = "0x1E3BAAC", VA = "0x1E3BAAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C43C", Offset = "0xA3C43C")]
	private IEnumerator ReadGameCompletionFromAllSaves()
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1E3FC8C", Offset = "0x1E3FC8C", VA = "0x1E3FC8C")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x20001DF")]
public class MakeDynamic : MonoBehaviour
{
	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xD4FE1C", Offset = "0xD4FE1C", VA = "0xD4FE1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xD4FE88", Offset = "0xD4FE88", VA = "0xD4FE88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xD4FF10", Offset = "0xD4FF10", VA = "0xD4FF10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xD4FF7C", Offset = "0xD4FF7C", VA = "0xD4FF7C")]
	public MakeDynamic()
	{
	}
}
[Token(Token = "0x20001E0")]
public class MaterialStore : MonoBehaviour
{
	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32B54", Offset = "0xA32B54")]
	public Material physicsBlockCubeMaterial;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material airBlockCubeMaterial;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material disintegratingBlockCubeMaterial;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material jumpBlockCubeMaterial;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material fallBlockCubeMaterial;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32B8C", Offset = "0xA32B8C")]
	public Material physicsBlockThirdMaterial;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material airBlockThirdMaterial;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material disintegratingBlockThirdMaterial;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material jumpBlockThirdMaterial;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material fallBlockThirdMaterial;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32BC4", Offset = "0xA32BC4")]
	public Material physicsBlockElongatedMaterial;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material airBlockElongatedMaterial;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material disintegratingBlockElongatedMaterial;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material jumpBlockElongatedMaterial;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material fallBlockElongatedMaterial;

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xD50100", Offset = "0xD50100", VA = "0xD50100")]
	public Material GetMaterialForPlatform(string size, string type)
	{
		return null;
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xD502A0", Offset = "0xD502A0", VA = "0xD502A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xD502A4", Offset = "0xD502A4", VA = "0xD502A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xD502A8", Offset = "0xD502A8", VA = "0xD502A8")]
	public MaterialStore()
	{
	}
}
[Token(Token = "0x20001E1")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CA50", Offset = "0xA2CA50")]
public class MovingPlatformVisualizer : MonoBehaviour
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MovingPlatform movingPlatform;

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xD54364", Offset = "0xD54364", VA = "0xD54364")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xD54368", Offset = "0xD54368", VA = "0xD54368")]
	public MovingPlatformVisualizer()
	{
	}
}
[Token(Token = "0x20001E2")]
public class CarlyPlayerNetwork : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20001E3")]
	private struct TransformData
	{
		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float angle;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 direction;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 networkPosition;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 storedPosition;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion networkRotation;
	}

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform leftHand;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform leftHandMarker;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform rightHand;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform rightHandMarker;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform voice;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_SimpleHand leftHandTarget;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_SimpleHand rightHandTarget;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform headTarget;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TransformData leftHandData;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private TransformData rightHandData;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private TransformData headData;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool leftHandGrabbing;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	private bool rightHandGrabbing;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private TrailRenderer leftTrail;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private TrailRenderer rightTrail;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private ParticleSystem leftEffect;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private ParticleSystem rightEffect;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CarlyPlayerNetwork instance;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SteamVR_SimpleHand leftHandInstance;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public SteamVR_SimpleHand rightHandInstance;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform headInstance;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool isSetup;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool firstTake;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	private bool hasDisabledDumy;

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1E4EC14", Offset = "0x1E4EC14", VA = "0x1E4EC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1E4EC80", Offset = "0x1E4EC80", VA = "0x1E4EC80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1E4ED38", Offset = "0x1E4ED38", VA = "0x1E4ED38")]
	public void Setup(SteamVR_SimpleHand left, SteamVR_SimpleHand right, Transform head)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1E4ED88", Offset = "0x1E4ED88", VA = "0x1E4ED88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1E4ED94", Offset = "0x1E4ED94", VA = "0x1E4ED94")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x1E4FA20", Offset = "0x1E4FA20", VA = "0x1E4FA20")]
	private void lerpTransform(Transform target, TransformData source, int positionSpeed, int rotationSpeed, float snapFactor)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x1E4FD7C", Offset = "0x1E4FD7C", VA = "0x1E4FD7C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x1E50268", Offset = "0x1E50268", VA = "0x1E50268")]
	public CarlyPlayerNetwork()
	{
	}
}
[Token(Token = "0x20001E4")]
public class CatrNetworkManager : MonoBehaviourPunCallbacks, IOnEventCallback
{
	[Token(Token = "0x20001E5")]
	private struct SaveDataMessage
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string userName;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string saveName;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hostIsReaperMan;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] content;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveDataPart?[] parts;
	}

	[Token(Token = "0x20001E6")]
	private struct SaveDataPart
	{
		[Token(Token = "0x4000A0C")]
		public const int maxLinesPerPart = 300;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] lines;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xA4476C", Offset = "0xA4476C", VA = "0xA4476C")]
		public SaveDataPart(string[] lines)
		{
		}
	}

	[Token(Token = "0x20001E7")]
	public struct DialogParts
	{
		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte id;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int currentLine;
	}

	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CAC4", Offset = "0xA2CAC4")]
	private sealed class <spawnNetworkObjects>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatrNetworkManager <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x1E5AB08", Offset = "0x1E5AB08", VA = "0x1E5AB08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x1E5AB78", Offset = "0x1E5AB78", VA = "0x1E5AB78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1E5A6D0", Offset = "0x1E5A6D0", VA = "0x1E5A6D0")]
		[DebuggerHidden]
		public <spawnNetworkObjects>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x1E5A758", Offset = "0x1E5A758", VA = "0x1E5A758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x1E5A75C", Offset = "0x1E5A75C", VA = "0x1E5A75C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x1E5AB10", Offset = "0x1E5AB10", VA = "0x1E5AB10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CatrNetworkManager instance;

	[Token(Token = "0x40009F7")]
	public const string pancakeOnlyProperty = "IsPancakeOnly";

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool localPlayerIsPancakeOnly;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static DialogParts dialogParts;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string otherHasLoadedLevel;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string currentScene;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string localUserNickName;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool forceTestLevel;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string testLevel;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string userName;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string saveName;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SaveDataMessage? receivedSaveData;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string connectedRoomCode;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool playerDroped;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool dialogIsForced;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool enteredNewSceneReceived;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Player pancakePlayer;

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x1E582D4", Offset = "0x1E582D4", VA = "0x1E582D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C9")]
	private static T RandomItem<T>(T[] items)
	{
		return (T)null;
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x1E58548", Offset = "0x1E58548", VA = "0x1E58548")]
	private static void ClearStatics()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x1E585B4", Offset = "0x1E585B4", VA = "0x1E585B4")]
	private void OnLevelWasLoaded()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1E466F0", Offset = "0x1E466F0", VA = "0x1E466F0")]
	public static void LoadLevel(string levelName, bool loadAdditive = false)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1E588CC", Offset = "0x1E588CC", VA = "0x1E588CC")]
	public static void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1E52EA4", Offset = "0x1E52EA4", VA = "0x1E52EA4")]
	public void TransferSave(string saveNameSent, bool isNewGame, bool hostIsReaperman = true)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x1E58960", Offset = "0x1E58960", VA = "0x1E58960")]
	public bool HasPancakeOnlyPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1E58AAC", Offset = "0x1E58AAC", VA = "0x1E58AAC", Slot = "54")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1E59870", Offset = "0x1E59870", VA = "0x1E59870")]
	private void OnReceiveSaveHeader(string userName, string saveName, bool isNewGame, int count, bool hostIsReaperMan)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1E59A48", Offset = "0x1E59A48", VA = "0x1E59A48")]
	private void OnReceiveSavePart(int index, int count, string[] saveContents)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1E5A02C", Offset = "0x1E5A02C", VA = "0x1E5A02C")]
	private void OnGotFullSave(bool isNewGame)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1E59C24", Offset = "0x1E59C24", VA = "0x1E59C24")]
	private void OnGotSaveFileContent(object[] args)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1E59E6C", Offset = "0x1E59E6C", VA = "0x1E59E6C")]
	private void OnReceivePlayerGotSaveFile()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1E59770", Offset = "0x1E59770", VA = "0x1E59770")]
	private void OnReceiveLoadLevel(string levelName, bool loadAdditive)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1E5A480", Offset = "0x1E5A480", VA = "0x1E5A480", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x1E5A68C", Offset = "0x1E5A68C", VA = "0x1E5A68C", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x1E5A53C", Offset = "0x1E5A53C", VA = "0x1E5A53C")]
	private void HandlePancakeProperty(Player otherPlayer, ExitGames.Client.Photon.Hashtable props)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1E58858", Offset = "0x1E58858", VA = "0x1E58858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C540", Offset = "0xA3C540")]
	private IEnumerator spawnNetworkObjects()
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1E5A6FC", Offset = "0x1E5A6FC", VA = "0x1E5A6FC")]
	public CatrNetworkManager()
	{
	}
}
[Token(Token = "0x20001E9")]
public class DeactivateForGameModes : MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameMode[] setOnModes;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool activeIfCorrectMode;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xAB4710", Offset = "0xAB4710", VA = "0xAB4710")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xAB489C", Offset = "0xAB489C", VA = "0xAB489C")]
	public DeactivateForGameModes()
	{
	}
}
[Token(Token = "0x20001EA")]
public class DebugVrCamera : MonoBehaviour
{
	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CameraObject;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 MouseLookSpeed;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MovementSpeed;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode Forward;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode Backward;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public KeyCode Left;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public KeyCode Right;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public KeyCode Up;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode Down;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationX;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotationY;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xAB4BB0", Offset = "0xAB4BB0", VA = "0xAB4BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xAB4D68", Offset = "0xAB4D68", VA = "0xAB4D68")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xAB4D08", Offset = "0xAB4D08", VA = "0xAB4D08")]
	public void SetCameraStartValues()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xAB4D6C", Offset = "0xAB4D6C", VA = "0xAB4D6C")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xAB4FB0", Offset = "0xAB4FB0", VA = "0xAB4FB0")]
	public DebugVrCamera()
	{
	}
}
[Token(Token = "0x20001EB")]
public enum GameMode
{
	[Token(Token = "0x4000A21")]
	MainMenu,
	[Token(Token = "0x4000A22")]
	LocalWithSocialScreen,
	[Token(Token = "0x4000A23")]
	LocalOnlyVrHeadset,
	[Token(Token = "0x4000A24")]
	OnlineAsCarly,
	[Token(Token = "0x4000A25")]
	OnlineAsReaperman,
	[Token(Token = "0x4000A26")]
	OnlineAsCarlySocialScreen
}
[Token(Token = "0x20001EC")]
public enum GameCharacter
{
	[Token(Token = "0x4000A28")]
	Carly,
	[Token(Token = "0x4000A29")]
	Reaperman
}
[Token(Token = "0x20001ED")]
public static class GameModeManager
{
	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameMode gameMode;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static GameMode defaultLocalMode;

	[Token(Token = "0x17000128")]
	public static bool isLocal
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xBA57A0", Offset = "0xBA57A0", VA = "0xBA57A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000129")]
	public static bool isOnline
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xBA1D28", Offset = "0xBA1D28", VA = "0xBA1D28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012A")]
	public static bool isOnlineAsCarly
	{
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xBA5814", Offset = "0xBA5814", VA = "0xBA5814")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012B")]
	public static bool usingSocialScreen
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xBA58B4", Offset = "0xBA58B4", VA = "0xBA58B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xBA5934", Offset = "0xBA5934", VA = "0xBA5934")]
	static GameModeManager()
	{
	}
}
[Token(Token = "0x20001EE")]
public class GiveNetworkOwnershipTo : MonoBehaviour
{
	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameCharacter giveOwnershipTo;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xBA761C", Offset = "0xBA761C", VA = "0xBA761C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xBA7718", Offset = "0xBA7718", VA = "0xBA7718")]
	public GiveNetworkOwnershipTo()
	{
	}
}
[Token(Token = "0x20001EF")]
public class HandDataProxy : MonoBehaviour
{
	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isHoldingAnything;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isGrabbing;

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xBA9088", Offset = "0xBA9088", VA = "0xBA9088")]
	public HandDataProxy()
	{
	}
}
[Token(Token = "0x20001F0")]
public class MicrophoneRequest : MonoBehaviour
{
	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xD502B0", Offset = "0xD502B0", VA = "0xD502B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xD50318", Offset = "0xD50318", VA = "0xD50318")]
	public MicrophoneRequest()
	{
	}
}
[Token(Token = "0x20001F1")]
public class MovingNetworkPlatform : MonoBehaviour
{
	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte id;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<MovingNetworkPlatform> byId;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xD5326C", Offset = "0xD5326C", VA = "0xD5326C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xD533CC", Offset = "0xD533CC", VA = "0xD533CC")]
	public static bool GetTransform(byte id, out Transform transform)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xD53528", Offset = "0xD53528", VA = "0xD53528")]
	public MovingNetworkPlatform()
	{
	}
}
[Token(Token = "0x20001F2")]
public static class NetworkEventCodes
{
	[Token(Token = "0x20001F3")]
	public static class CustomTypeCodes
	{
		[Token(Token = "0x4000A3C")]
		public const byte pickupSync = 199;
	}

	[Token(Token = "0x4000A31")]
	public const byte loadLevel = 1;

	[Token(Token = "0x4000A32")]
	public const byte onReceiveSaveHeader = 2;

	[Token(Token = "0x4000A33")]
	public const byte onReceiveSavePart = 3;

	[Token(Token = "0x4000A34")]
	public const byte playerGotSaveFile = 4;

	[Token(Token = "0x4000A35")]
	public const byte dialogPress = 5;

	[Token(Token = "0x4000A36")]
	public const byte setState = 6;

	[Token(Token = "0x4000A37")]
	public const byte onReceiveSaveContent = 7;

	[Token(Token = "0x4000A38")]
	public const byte enteredNewScene = 8;

	[Token(Token = "0x4000A39")]
	public const byte dialogForce = 9;

	[Token(Token = "0x4000A3A")]
	public const byte fadeInToLevel = 10;

	[Token(Token = "0x4000A3B")]
	public const byte dbgStart = 80;
}
[Token(Token = "0x20001F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CAD4", Offset = "0xA2CAD4")]
public class NetworkFollowTransform : NetworkBehaviour
{
	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Target;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xD558A8", Offset = "0xD558A8", VA = "0xD558A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xD559BC", Offset = "0xD559BC", VA = "0xD559BC")]
	public NetworkFollowTransform()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xD55A24", Offset = "0xD55A24", VA = "0xD55A24")]
	private void UNetVersion()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xD55A28", Offset = "0xD55A28", VA = "0xD55A28", Slot = "8")]
	public override bool OnSerialize(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xD55A30", Offset = "0xD55A30", VA = "0xD55A30", Slot = "9")]
	public override void OnDeserialize(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001F5")]
public class PickupNetwork : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PickupNetwork Instance;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isConsumed;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private new PhotonView photonView;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x1E99B58", Offset = "0x1E99B58", VA = "0x1E99B58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x1E99BF4", Offset = "0x1E99BF4", VA = "0x1E99BF4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x1E99DE0", Offset = "0x1E99DE0", VA = "0x1E99DE0")]
	[PunRPC]
	private void deactivate()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x1E99E18", Offset = "0x1E99E18", VA = "0x1E99E18")]
	public PickupNetwork()
	{
	}
}
[Token(Token = "0x20001F6")]
public class PlatformNetwork : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_Distance;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_Angle;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody body;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform trans;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform parent;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 networkPosition;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion networkRotation;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform grabbedBy;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 grabbedPos;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion grabbedRot;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private ControllerOrientation grabbedByHand;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Platform platform;

	[NonSerialized]
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isGrabbed;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool grabbedOnOwner;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool m_SynchronizeVelocity;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool m_TeleportEnabled;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float m_TeleportIfDistanceGreaterThan;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool? wasKinematic;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool hasCollided;

	[Token(Token = "0x14000003")]
	public event Action<SteamVR_GrabbableObject> WasGrabbedViaNetwork
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1E9ED74", Offset = "0x1E9ED74", VA = "0x1E9ED74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C604", Offset = "0xA3C604")]
		add
		{
		}
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1E9EE60", Offset = "0x1E9EE60", VA = "0x1E9EE60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C614", Offset = "0xA3C614")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<SteamVR_GrabbableObject> WasReleasedViaNetwork
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1E9EF4C", Offset = "0x1E9EF4C", VA = "0x1E9EF4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C624", Offset = "0xA3C624")]
		add
		{
		}
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1E9F038", Offset = "0x1E9F038", VA = "0x1E9F038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C634", Offset = "0xA3C634")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1E9F124", Offset = "0x1E9F124", VA = "0x1E9F124")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x1E9F2D4", Offset = "0x1E9F2D4", VA = "0x1E9F2D4")]
	private void OnLocalGrab(SteamVR_GrabbableObject grabObj)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x1E9F3E0", Offset = "0x1E9F3E0", VA = "0x1E9F3E0")]
	private void OnLocalDrop(SteamVR_GrabbableObject grabObj)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x1E9F47C", Offset = "0x1E9F47C", VA = "0x1E9F47C")]
	private void GrabRpc(ControllerOrientation hand)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x1E9F684", Offset = "0x1E9F684", VA = "0x1E9F684")]
	private void DropRpc(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x1E9F790", Offset = "0x1E9F790", VA = "0x1E9F790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x1E9F8F0", Offset = "0x1E9F8F0", VA = "0x1E9F8F0")]
	private void lerpTransform(Transform target, Vector3 networkPosition, Quaternion networkRotation, int positionSpeed, int rotationSpeed, float snapFactor)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x1E9FE1C", Offset = "0x1E9FE1C", VA = "0x1E9FE1C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x1EA0300", Offset = "0x1EA0300", VA = "0x1EA0300")]
	public PlatformNetwork()
	{
	}
}
[Token(Token = "0x20001F7")]
public class PlayerCharacterNetwork : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20001F8")]
	public struct SyncedState
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 localPosition;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion localRotation;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OddRavenCharacterState state;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int jumpState;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float inputState;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float forward;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool controlMovementLocally;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool inDialog;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool syncDieState;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool syncDieimmediately;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool syncRespawnState;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float syncRespawnDelay;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int fistBumpState;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 pointPos;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isPointing;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool otherIsForcedControlled;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public byte standOnPlatform;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 platformLocalPos;
	}

	[Token(Token = "0x20001F9")]
	private struct LagCompisation
	{
		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float angle;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 dir;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 pos;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 prevPos;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rot;
	}

	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CB38", Offset = "0xA2CB38")]
	private sealed class <HardSyncFireFlyCoins>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerCharacterNetwork <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x1EA5E74", Offset = "0x1EA5E74", VA = "0x1EA5E74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x1EA5EE4", Offset = "0x1EA5EE4", VA = "0x1EA5EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1EA5B2C", Offset = "0x1EA5B2C", VA = "0x1EA5B2C")]
		[DebuggerHidden]
		public <HardSyncFireFlyCoins>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1EA5C9C", Offset = "0x1EA5C9C", VA = "0x1EA5C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1EA5CA0", Offset = "0x1EA5CA0", VA = "0x1EA5CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1EA5E7C", Offset = "0x1EA5E7C", VA = "0x1EA5E7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerCharacterNetwork Instance;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OddRavenCharacterController characterController;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CarlyExpressions carlyExpressions;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerCharacter playerStateMethods;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasCharacter;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SyncedState synced;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool forceLocalMovement;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public static bool locallyRespawning;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public static bool clientsAreStillRespawning;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool otherClientRespawning;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private LagCompisation lagComp;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool firstTake;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private byte lastFistBumpId;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool localDie;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool localRespawn;

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x1EA49C8", Offset = "0x1EA49C8", VA = "0x1EA49C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x1EA4A50", Offset = "0x1EA4A50", VA = "0x1EA4A50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x1EA4AEC", Offset = "0x1EA4AEC", VA = "0x1EA4AEC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x1EA4EE0", Offset = "0x1EA4EE0", VA = "0x1EA4EE0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x1EA59A8", Offset = "0x1EA59A8", VA = "0x1EA59A8")]
	public void SendExpression(int expression)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1EA4560", Offset = "0x1EA4560", VA = "0x1EA4560")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C644", Offset = "0xA3C644")]
	public IEnumerator HardSyncFireFlyCoins()
	{
		return null;
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x1EA5B58", Offset = "0x1EA5B58", VA = "0x1EA5B58")]
	[PunRPC]
	private void PlayExpressionRpc(int expression)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x1EA5C0C", Offset = "0x1EA5C0C", VA = "0x1EA5C0C")]
	[PunRPC]
	private void HardSyncFireFlyCoinsRpc(Pickup.PickupSync pickupSync)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1EA5C84", Offset = "0x1EA5C84", VA = "0x1EA5C84")]
	public PlayerCharacterNetwork()
	{
	}
}
[Token(Token = "0x20001FB")]
public class PlayerCharacterRigidbodyView : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_Distance;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_Angle;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Body;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool m_SynchronizeVelocity;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool m_TeleportEnabled;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_TeleportIfDistanceGreaterThan;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1EA5EEC", Offset = "0x1EA5EEC", VA = "0x1EA5EEC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x1EA5EFC", Offset = "0x1EA5EFC", VA = "0x1EA5EFC")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x1EA6258", Offset = "0x1EA6258", VA = "0x1EA6258", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x1EA69D0", Offset = "0x1EA69D0", VA = "0x1EA69D0")]
	public PlayerCharacterRigidbodyView()
	{
	}
}
[Token(Token = "0x20001FC")]
public class PlayerCharacterTransformViewClassic : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonTransformViewPositionControl m_PositionControl;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonTransformViewRotationControl m_RotationControl;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonTransformViewScaleControl m_ScaleControl;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform playerTransform;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_firstTake;

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x1EA69E8", Offset = "0x1EA69E8", VA = "0x1EA69E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x1EA6AC0", Offset = "0x1EA6AC0", VA = "0x1EA6AC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x1EA6ACC", Offset = "0x1EA6ACC", VA = "0x1EA6ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x1EA6CF8", Offset = "0x1EA6CF8", VA = "0x1EA6CF8")]
	private void SnapToNetworkPosition()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x1EA6D9C", Offset = "0x1EA6D9C", VA = "0x1EA6D9C")]
	private void SnapToNetworkRotation()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x1EA6E48", Offset = "0x1EA6E48", VA = "0x1EA6E48")]
	private void SnapToNetworkScale()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x1EA6EEC", Offset = "0x1EA6EEC", VA = "0x1EA6EEC")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x1EA7004", Offset = "0x1EA7004", VA = "0x1EA7004")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1EA70F0", Offset = "0x1EA70F0", VA = "0x1EA70F0")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x1EA71CC", Offset = "0x1EA71CC", VA = "0x1EA71CC")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x1EA722C", Offset = "0x1EA722C", VA = "0x1EA722C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x1EA7800", Offset = "0x1EA7800", VA = "0x1EA7800")]
	public PlayerCharacterTransformViewClassic()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FD")]
public class PhotonTransformViewPositionModel
{
	[Token(Token = "0x20001FE")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4000A9F")]
		Disabled,
		[Token(Token = "0x4000AA0")]
		FixedSpeed,
		[Token(Token = "0x4000AA1")]
		EstimatedSpeed,
		[Token(Token = "0x4000AA2")]
		SynchronizeValues,
		[Token(Token = "0x4000AA3")]
		Lerp
	}

	[Token(Token = "0x20001FF")]
	public enum ExtrapolateOptions
	{
		[Token(Token = "0x4000AA5")]
		Disabled,
		[Token(Token = "0x4000AA6")]
		SynchronizeValues,
		[Token(Token = "0x4000AA7")]
		EstimateSpeedAndTurn,
		[Token(Token = "0x4000AA8")]
		FixedSpeed
	}

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool TeleportEnabled;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TeleportIfDistanceGreaterThan;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ExtrapolateOptions ExtrapolateOption;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ExtrapolateSpeed;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ExtrapolateIncludingRoundTripTime;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int ExtrapolateNumberOfStoredPositions;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x1E976A0", Offset = "0x1E976A0", VA = "0x1E976A0")]
	public PhotonTransformViewPositionModel()
	{
	}
}
[Token(Token = "0x2000200")]
public class PhotonTransformViewPositionControl
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewPositionModel m_Model;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_CurrentSpeed;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double m_LastSerializeTime;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_SynchronizedSpeed;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_SynchronizedTurnSpeed;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Vector3> m_OldNetworkPositions;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_UpdatedPositionAfterOnSerialize;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 prevEstimatedPos;

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x1E9674C", Offset = "0x1E9674C", VA = "0x1E9674C")]
	public PhotonTransformViewPositionControl(PhotonTransformViewPositionModel model)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x1E96818", Offset = "0x1E96818", VA = "0x1E96818")]
	private Vector3 GetOldestStoredNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1E968D8", Offset = "0x1E968D8", VA = "0x1E968D8")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1E968E4", Offset = "0x1E968E4", VA = "0x1E968E4")]
	public Vector3 UpdatePosition(Vector3 currentPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1E96E00", Offset = "0x1E96E00", VA = "0x1E96E00")]
	public Vector3 GetNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1E96E0C", Offset = "0x1E96E0C", VA = "0x1E96E0C")]
	public Vector3 GetExtrapolatedPositionOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1E97154", Offset = "0x1E97154", VA = "0x1E97154")]
	public void ScrapSerializedValues(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1E97218", Offset = "0x1E97218", VA = "0x1E97218")]
	public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1E9730C", Offset = "0x1E9730C", VA = "0x1E9730C")]
	private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1E97470", Offset = "0x1E97470", VA = "0x1E97470")]
	private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000201")]
public class PhotonTransformViewRotationModel
{
	[Token(Token = "0x2000202")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4000AB7")]
		Disabled,
		[Token(Token = "0x4000AB8")]
		RotateTowards,
		[Token(Token = "0x4000AB9")]
		Lerp
	}

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateRotateTowardsSpeed;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1E97A5C", Offset = "0x1E97A5C", VA = "0x1E97A5C")]
	public PhotonTransformViewRotationModel()
	{
	}
}
[Token(Token = "0x2000203")]
public class PhotonTransformViewRotationControl
{
	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewRotationModel m_Model;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1E976D4", Offset = "0x1E976D4", VA = "0x1E976D4")]
	public PhotonTransformViewRotationControl(PhotonTransformViewRotationModel model)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1E97700", Offset = "0x1E97700", VA = "0x1E97700")]
	public Quaternion GetNetworkRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x1E9770C", Offset = "0x1E9770C", VA = "0x1E9770C")]
	public Quaternion GetRotation(Quaternion currentRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x1E978B8", Offset = "0x1E978B8", VA = "0x1E978B8")]
	public void ScrapSerializedValues(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x1E97928", Offset = "0x1E97928", VA = "0x1E97928")]
	public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000204")]
public class PhotonTransformViewScaleModel
{
	[Token(Token = "0x2000205")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4000AC1")]
		Disabled,
		[Token(Token = "0x4000AC2")]
		MoveTowards,
		[Token(Token = "0x4000AC3")]
		Lerp
	}

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x1E97E1C", Offset = "0x1E97E1C", VA = "0x1E97E1C")]
	public PhotonTransformViewScaleModel()
	{
	}
}
[Token(Token = "0x2000206")]
public class PhotonTransformViewScaleControl
{
	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewScaleModel m_Model;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_NetworkScale;

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1E97A78", Offset = "0x1E97A78", VA = "0x1E97A78")]
	public PhotonTransformViewScaleControl(PhotonTransformViewScaleModel model)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x1E97B04", Offset = "0x1E97B04", VA = "0x1E97B04")]
	public Vector3 GetNetworkScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1E97B10", Offset = "0x1E97B10", VA = "0x1E97B10")]
	public Vector3 GetScale(Vector3 currentScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x1E97C88", Offset = "0x1E97C88", VA = "0x1E97C88")]
	public void ScrapSerializedValues(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1E97CF8", Offset = "0x1E97CF8", VA = "0x1E97CF8")]
	public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Token(Token = "0x2000207")]
public class ReapermanNetwork : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x2000208")]
	public struct TransformData
	{
		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float angle;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 direction;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 networkPosition;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 storedPosition;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion networkRotation;
	}

	[Token(Token = "0x2000209")]
	public struct HandExtraData
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isHoldingGrab;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool thumbUp;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool point;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool isHoldingAnything;
	}

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform leftHand;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator leftHandAnim;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform leftGrab;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform leftGrabTransform;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform rightHand;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator rightHandAnim;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform rightGrab;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform rightGrabTransform;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Animator headAnim;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform voice;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SteamVR_SimpleHand leftHandTarget;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SteamVR_SimpleHand rightHandTarget;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform headTarget;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TransformData leftHandData;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private TransformData rightHandData;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private TransformData headData;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private HandExtraData leftHandExtraData;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private HandExtraData rightHandExtraData;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private HandDataProxy leftHandDataProxy;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private HandDataProxy rightHandDataProxy;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int grabAnimationId;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int thumbsUpAnimationId;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int pointAnimationId;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ReapermanNetwork instance;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SteamVR_SimpleHand leftHandInstance;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SteamVR_SimpleHand rightHandInstance;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Transform headInstance;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool isSetup;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool firstTake;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	private bool hasDisabledReaperman;

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x1EB2038", Offset = "0x1EB2038", VA = "0x1EB2038")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x1EB20BC", Offset = "0x1EB20BC", VA = "0x1EB20BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1EB21A8", Offset = "0x1EB21A8", VA = "0x1EB21A8")]
	public void Setup(SteamVR_SimpleHand left, SteamVR_SimpleHand right, Transform head)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1E9F65C", Offset = "0x1E9F65C", VA = "0x1E9F65C")]
	public Transform GetHandGrabPoint(ControllerOrientation hand)
	{
		return null;
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x1EB226C", Offset = "0x1EB226C", VA = "0x1EB226C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1EB2278", Offset = "0x1EB2278", VA = "0x1EB2278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1EB2B7C", Offset = "0x1EB2B7C", VA = "0x1EB2B7C")]
	private void lerpTransform(Transform target, TransformData source, int positionSpeed, int rotationSpeed, float snapFactor)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x1EB2ED8", Offset = "0x1EB2ED8", VA = "0x1EB2ED8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1EB3794", Offset = "0x1EB3794", VA = "0x1EB3794")]
	public ReapermanNetwork()
	{
	}
}
[Token(Token = "0x200020A")]
public class TestNetwork : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playAsCarly;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string loadLevel;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string state;

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1DF35A4", Offset = "0x1DF35A4", VA = "0x1DF35A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1DF3700", Offset = "0x1DF3700", VA = "0x1DF3700", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1DF3774", Offset = "0x1DF3774", VA = "0x1DF3774", Slot = "36")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1DF389C", Offset = "0x1DF389C", VA = "0x1DF389C", Slot = "35")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x1DF395C", Offset = "0x1DF395C", VA = "0x1DF395C")]
	public TestNetwork()
	{
	}
}
[Token(Token = "0x200020B")]
public class VoiceHandler : MonoBehaviour
{
	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<VoiceHandler> activeVoices;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool carlySpeaking;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool reapermanSpeaking;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool muted;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonVoiceView voice;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float volume;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1E216FC", Offset = "0x1E216FC", VA = "0x1E216FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1E217A8", Offset = "0x1E217A8", VA = "0x1E217A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x1E2180C", Offset = "0x1E2180C", VA = "0x1E2180C")]
	public static void ToggleMute()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1E21984", Offset = "0x1E21984", VA = "0x1E21984")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1E21A10", Offset = "0x1E21A10", VA = "0x1E21A10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1E21A9C", Offset = "0x1E21A9C", VA = "0x1E21A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1E21D44", Offset = "0x1E21D44", VA = "0x1E21D44")]
	public VoiceHandler()
	{
	}
}
[Token(Token = "0x200020C")]
public class VoiceManager : MonoBehaviour
{
	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA32D7C", Offset = "0xA32D7C")]
	private PhotonVoiceNetwork <voiceConnection>k__BackingField;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Recorder rec;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VoiceManager instance;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private bool triggerBoost;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[HideInInspector]
	private float amplification;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private float boost;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA32E34", Offset = "0xA32E34")]
	private RemoteVoiceLink <currentLink>k__BackingField;

	[Token(Token = "0x1700012E")]
	public PhotonVoiceNetwork voiceConnection
	{
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x1E21DCC", Offset = "0x1E21DCC", VA = "0x1E21DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C718", Offset = "0xA3C718")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1E21DD4", Offset = "0x1E21DD4", VA = "0x1E21DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C728", Offset = "0xA3C728")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public RemoteVoiceLink currentLink
	{
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1E21DDC", Offset = "0x1E21DDC", VA = "0x1E21DDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C738", Offset = "0xA3C738")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1E21DE4", Offset = "0x1E21DE4", VA = "0x1E21DE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3C748", Offset = "0xA3C748")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1E21DEC", Offset = "0x1E21DEC", VA = "0x1E21DEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1E22028", Offset = "0x1E22028", VA = "0x1E22028")]
	private void RemoteVoiceAdded(RemoteVoiceLink link)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x1E220C0", Offset = "0x1E220C0", VA = "0x1E220C0")]
	private void RemoteVoiceRemoved()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1E22158", Offset = "0x1E22158", VA = "0x1E22158")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1E22244", Offset = "0x1E22244", VA = "0x1E22244")]
	private void OnSpeakerCreated(Speaker speaker)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1E22380", Offset = "0x1E22380", VA = "0x1E22380")]
	private void OnSpeakerRemoved(Speaker speaker)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1E22440", Offset = "0x1E22440", VA = "0x1E22440")]
	public VoiceManager()
	{
	}
}
[Token(Token = "0x200020D")]
public class BaseDialogAction : ScriptableObject
{
	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new string name;

	[NonSerialized]
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool triggered;

	[NonSerialized]
	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	protected bool hidden;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xB9B610", Offset = "0xB9B610", VA = "0xB9B610", Slot = "4")]
	public virtual void Trigger()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xB9B61C", Offset = "0xB9B61C", VA = "0xB9B61C", Slot = "5")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xB9B628", Offset = "0xB9B628", VA = "0xB9B628", Slot = "6")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xB9B62C", Offset = "0xB9B62C", VA = "0xB9B62C", Slot = "7")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xB9B634", Offset = "0xB9B634", VA = "0xB9B634", Slot = "8")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xB9B638", Offset = "0xB9B638", VA = "0xB9B638")]
	public BaseDialogAction()
	{
	}
}
[Token(Token = "0x200020E")]
public class DAActivateBehaviour : BaseDialogAction
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour behaviour;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool deactivateOnExit;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool broadcast;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xAB07EC", Offset = "0xAB07EC", VA = "0xAB07EC", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xAB08C4", Offset = "0xAB08C4", VA = "0xAB08C4", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xAB097C", Offset = "0xAB097C", VA = "0xAB097C")]
	public DAActivateBehaviour()
	{
	}
}
[Token(Token = "0x200020F")]
public class DAAwardInventoryItem : BaseDialogAction
{
	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string itemId;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool persist;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool setToFixedValue;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int value;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerCharacter playerCharacter;

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xAB0984", Offset = "0xAB0984", VA = "0xAB0984", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xAB0A04", Offset = "0xAB0A04", VA = "0xAB0A04", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xAB0B2C", Offset = "0xAB0B2C", VA = "0xAB0B2C")]
	public DAAwardInventoryItem()
	{
	}
}
[Token(Token = "0x2000210")]
public class DADeactivateBehaviour : BaseDialogAction
{
	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour behaviour;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xAB0B34", Offset = "0xAB0B34", VA = "0xAB0B34", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xAB0B9C", Offset = "0xAB0B9C", VA = "0xAB0B9C")]
	public DADeactivateBehaviour()
	{
	}
}
[Token(Token = "0x2000211")]
public class DADisablePlayerMovement : BaseDialogAction
{
	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OddRavenCharacterInput input;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OddRavenCharacterController occ;

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xAB0BA4", Offset = "0xAB0BA4", VA = "0xAB0BA4", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xAB0BAC", Offset = "0xAB0BAC", VA = "0xAB0BAC", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xAB0D44", Offset = "0xAB0D44", VA = "0xAB0D44")]
	public DADisablePlayerMovement()
	{
	}
}
[Token(Token = "0x2000212")]
public class DAEnableBehaviour : BaseDialogAction
{
	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Behaviour target;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool deactivateOnExit;

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xAB0D4C", Offset = "0xAB0D4C", VA = "0xAB0D4C", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xAB0D80", Offset = "0xAB0D80", VA = "0xAB0D80", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xAB0DD4", Offset = "0xAB0DD4", VA = "0xAB0DD4")]
	public DAEnableBehaviour()
	{
	}
}
[Token(Token = "0x2000213")]
public class DAEnableGameObject : BaseDialogAction
{
	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gameObject;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool deactivateOnExit;

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xAB0DDC", Offset = "0xAB0DDC", VA = "0xAB0DDC", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xAB0E10", Offset = "0xAB0E10", VA = "0xAB0E10", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xAB0E64", Offset = "0xAB0E64", VA = "0xAB0E64")]
	public DAEnableGameObject()
	{
	}
}
[Token(Token = "0x2000214")]
public class DAEnablePlayerMovement : BaseDialogAction
{
	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OddRavenCharacterInput input;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OddRavenCharacterController occ;

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xAB0E6C", Offset = "0xAB0E6C", VA = "0xAB0E6C", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xAB0EEC", Offset = "0xAB0EEC", VA = "0xAB0EEC", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xAB1080", Offset = "0xAB1080", VA = "0xAB1080")]
	public DAEnablePlayerMovement()
	{
	}
}
[Token(Token = "0x2000215")]
public class DAFadeCameraToColor : BaseDialogAction
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera[] cameras;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color toColor;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color fromColor;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fadeTime;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float delay;

	[NonSerialized]
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float elapsedDelay;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color startColor;

	[NonSerialized]
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float elapsedTime;

	[NonSerialized]
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasFinished;

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xAB1088", Offset = "0xAB1088", VA = "0xAB1088", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xAB10BC", Offset = "0xAB10BC", VA = "0xAB10BC", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xAB10EC", Offset = "0xAB10EC", VA = "0xAB10EC", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xAB11C0", Offset = "0xAB11C0", VA = "0xAB11C0")]
	private void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xAB128C", Offset = "0xAB128C", VA = "0xAB128C")]
	public DAFadeCameraToColor()
	{
	}
}
[Token(Token = "0x2000216")]
public class DAFadeInCanvasGroup : BaseDialogAction
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeTime;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delay;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool fadeOutOnExit;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fadeOutTime;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fadeOutDelay;

	[NonSerialized]
	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float elapsedDelay;

	[NonSerialized]
	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float elapsedTime;

	[NonSerialized]
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool hasFinished;

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xAB129C", Offset = "0xAB129C", VA = "0xAB129C", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xAB1328", Offset = "0xAB1328", VA = "0xAB1328", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xAB1350", Offset = "0xAB1350", VA = "0xAB1350", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xAB1358", Offset = "0xAB1358", VA = "0xAB1358", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xAB1384", Offset = "0xAB1384", VA = "0xAB1384", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xAB1510", Offset = "0xAB1510", VA = "0xAB1510")]
	public DAFadeInCanvasGroup()
	{
	}
}
[Token(Token = "0x2000217")]
public class DAFadeInCanvasGroups : BaseDialogAction
{
	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup[] canvasGroups;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeTime;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delay;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool fadeOutOnExit;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fadeOutTime;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fadeOutDelay;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool setAlphaOnInit;

	[NonSerialized]
	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float elapsedDelay;

	[NonSerialized]
	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float elapsedTime;

	[NonSerialized]
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasFinished;

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xAB1528", Offset = "0xAB1528", VA = "0xAB1528", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xAB15E8", Offset = "0xAB15E8", VA = "0xAB15E8", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xAB1618", Offset = "0xAB1618", VA = "0xAB1618", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xAB1644", Offset = "0xAB1644", VA = "0xAB1644", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xAB153C", Offset = "0xAB153C", VA = "0xAB153C")]
	private void SetAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xAB17B4", Offset = "0xAB17B4", VA = "0xAB17B4")]
	public DAFadeInCanvasGroups()
	{
	}
}
[Token(Token = "0x2000218")]
public class DAFadeOutCanvasGroup : BaseDialogAction
{
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeTime;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delay;

	[NonSerialized]
	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float elapsedDelay;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float elapsedTime;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xAB17D0", Offset = "0xAB17D0", VA = "0xAB17D0", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xAB1804", Offset = "0xAB1804", VA = "0xAB1804", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xAB182C", Offset = "0xAB182C", VA = "0xAB182C", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xAB1930", Offset = "0xAB1930", VA = "0xAB1930")]
	public DAFadeOutCanvasGroup()
	{
	}
}
[Token(Token = "0x2000219")]
public class DAFadeOutCanvasGroups : BaseDialogAction
{
	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup[] canvasGroups;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeTime;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float delay;

	[NonSerialized]
	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float elapsedDelay;

	[NonSerialized]
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float elapsedTime;

	[NonSerialized]
	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool hasFinished;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xAB1940", Offset = "0xAB1940", VA = "0xAB1940", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xAB1970", Offset = "0xAB1970", VA = "0xAB1970", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xAB199C", Offset = "0xAB199C", VA = "0xAB199C", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xAB1A9C", Offset = "0xAB1A9C", VA = "0xAB1A9C")]
	private void SetAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xAB1B48", Offset = "0xAB1B48", VA = "0xAB1B48")]
	public DAFadeOutCanvasGroups()
	{
	}
}
[Token(Token = "0x200021A")]
public class DAFadeSkyboxTint : BaseDialogAction
{
	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color toColor;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color fromColor;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fadeTime;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float delay;

	[NonSerialized]
	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float elapsedDelay;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color startColor;

	[NonSerialized]
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float elapsedTime;

	[NonSerialized]
	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool hasFinished;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xAB1B58", Offset = "0xAB1B58", VA = "0xAB1B58", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xAB1B8C", Offset = "0xAB1B8C", VA = "0xAB1B8C", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xAB1BBC", Offset = "0xAB1BBC", VA = "0xAB1BBC", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xAB1C8C", Offset = "0xAB1C8C", VA = "0xAB1C8C")]
	private void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xAB1D20", Offset = "0xAB1D20", VA = "0xAB1D20")]
	public DAFadeSkyboxTint()
	{
	}
}
[Token(Token = "0x200021B")]
public class DAGrantAchievement : BaseDialogAction
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string achievementId;

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xAB1D30", Offset = "0xAB1D30", VA = "0xAB1D30", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xAB1E0C", Offset = "0xAB1E0C", VA = "0xAB1E0C")]
	public DAGrantAchievement()
	{
	}
}
[Token(Token = "0x200021C")]
public class DAInvokeMethod : BaseDialogAction
{
	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MonoBehaviour script;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string whenTriggered;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string whenHidden;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xAB1E14", Offset = "0xAB1E14", VA = "0xAB1E14", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xAB1E78", Offset = "0xAB1E78", VA = "0xAB1E78", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xAB1EDC", Offset = "0xAB1EDC", VA = "0xAB1EDC")]
	public DAInvokeMethod()
	{
	}
}
[Token(Token = "0x200021D")]
public class DALoadScene : BaseDialogAction
{
	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA32E44", Offset = "0xA32E44")]
	public string scene;

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xAB1F34", Offset = "0xAB1F34", VA = "0xAB1F34", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xAB205C", Offset = "0xAB205C", VA = "0xAB205C")]
	public DALoadScene()
	{
	}
}
[Token(Token = "0x200021E")]
public class DASaveData : BaseDialogAction
{
	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xAB2064", Offset = "0xAB2064", VA = "0xAB2064", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xAB2140", Offset = "0xAB2140", VA = "0xAB2140")]
	public DASaveData()
	{
	}
}
[Token(Token = "0x200021F")]
public class DASetAnimationBoolean : BaseDialogAction
{
	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string parameter;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool setTo;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xAB2148", Offset = "0xAB2148", VA = "0xAB2148", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xAB2190", Offset = "0xAB2190", VA = "0xAB2190")]
	public DASetAnimationBoolean()
	{
	}
}
[Token(Token = "0x2000220")]
public class DASetState : BaseDialogAction
{
	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StateMachine stateMachine;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string state;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool setToState;

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xAB2198", Offset = "0xAB2198", VA = "0xAB2198", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xAB2228", Offset = "0xAB2228", VA = "0xAB2228", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xAB2288", Offset = "0xAB2288", VA = "0xAB2288")]
	public DASetState()
	{
	}
}
[Token(Token = "0x2000221")]
public class DAShowParticles : BaseDialogAction
{
	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem particles;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool stopOnExit;

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xAB2290", Offset = "0xAB2290", VA = "0xAB2290", Slot = "5")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xAB22E0", Offset = "0xAB22E0", VA = "0xAB22E0", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xAB231C", Offset = "0xAB231C", VA = "0xAB231C")]
	public DAShowParticles()
	{
	}
}
[Token(Token = "0x2000222")]
public class DATriggerAnimation : BaseDialogAction
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string trigger;

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xAB232C", Offset = "0xAB232C", VA = "0xAB232C", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xAB2360", Offset = "0xAB2360", VA = "0xAB2360")]
	public DATriggerAnimation()
	{
	}
}
[Token(Token = "0x2000223")]
public class DATriggerSound : BaseDialogAction
{
	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ORFmodStudioEventEmitter sound;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParamRef[] Params;

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xAB2368", Offset = "0xAB2368", VA = "0xAB2368", Slot = "4")]
	public override void Trigger()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xAB2518", Offset = "0xAB2518", VA = "0xAB2518")]
	public DATriggerSound()
	{
	}
}
[Token(Token = "0x2000224")]
public class DAWalkCharacter : BaseDialogAction
{
	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float time;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool followWithCamera;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool followCameraWhenReady;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OddRavenCharacterController occ;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startPosition;

	[NonSerialized]
	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float elapsedTime;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 forward;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xAB2578", Offset = "0xAB2578", VA = "0xAB2578", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xAB2630", Offset = "0xAB2630", VA = "0xAB2630", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xAB27DC", Offset = "0xAB27DC", VA = "0xAB27DC")]
	public DAWalkCharacter()
	{
	}
}
[Token(Token = "0x2000225")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CB48", Offset = "0xA2CB48")]
public class VisualizeWaitForButtonPresses : MonoBehaviour
{
	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CBAC", Offset = "0xA2CBAC")]
	private sealed class <CrossFade>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup fadeIn;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CanvasGroup fadeOut;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <elapsed>5__2;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x1E2083C", Offset = "0x1E2083C", VA = "0x1E2083C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x1E208AC", Offset = "0x1E208AC", VA = "0x1E208AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1E20240", Offset = "0x1E20240", VA = "0x1E20240")]
		[DebuggerHidden]
		public <CrossFade>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1E206F8", Offset = "0x1E206F8", VA = "0x1E206F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1E206FC", Offset = "0x1E206FC", VA = "0x1E206FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1E20844", Offset = "0x1E20844", VA = "0x1E20844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CBBC", Offset = "0xA2CBBC")]
	private sealed class <FadeOutWaiting>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VisualizeWaitForButtonPresses <>4__this;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x1E20B10", Offset = "0x1E20B10", VA = "0x1E20B10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x1E20B80", Offset = "0x1E20B80", VA = "0x1E20B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1E2026C", Offset = "0x1E2026C", VA = "0x1E2026C")]
		[DebuggerHidden]
		public <FadeOutWaiting>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1E20A1C", Offset = "0x1E20A1C", VA = "0x1E20A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1E20A20", Offset = "0x1E20A20", VA = "0x1E20A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1E20B18", Offset = "0x1E20B18", VA = "0x1E20B18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CBCC", Offset = "0xA2CBCC")]
	private sealed class <FadeInButtonTexts>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VisualizeWaitForButtonPresses <>4__this;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x1E209A4", Offset = "0x1E209A4", VA = "0x1E209A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x1E20A14", Offset = "0x1E20A14", VA = "0x1E20A14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1E20574", Offset = "0x1E20574", VA = "0x1E20574")]
		[DebuggerHidden]
		public <FadeInButtonTexts>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1E208B4", Offset = "0x1E208B4", VA = "0x1E208B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1E208B8", Offset = "0x1E208B8", VA = "0x1E208B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1E209AC", Offset = "0x1E209AC", VA = "0x1E209AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DialogManager dialogManager;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup screenButtonCanvasGroup;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup vrButtonCanvasGroup;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CanvasGroup screenWaitingCanvasGroup;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CanvasGroup vrWaitingCanvasGroup;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForButtonPresses wait;

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x1E1FB30", Offset = "0x1E1FB30", VA = "0x1E1FB30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1E1FDE4", Offset = "0x1E1FDE4", VA = "0x1E1FDE4")]
	private void WillHideBlock(BaseDialogBlock obj)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1E200C0", Offset = "0x1E200C0", VA = "0x1E200C0")]
	private void VrIsReady()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x1E201DC", Offset = "0x1E201DC", VA = "0x1E201DC")]
	private void ScreenIsReady()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1E20124", Offset = "0x1E20124", VA = "0x1E20124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C758", Offset = "0xA3C758")]
	private IEnumerator CrossFade(CanvasGroup fadeIn, CanvasGroup fadeOut, float time)
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x1E2004C", Offset = "0x1E2004C", VA = "0x1E2004C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C7BC", Offset = "0xA3C7BC")]
	private IEnumerator FadeOutWaiting()
	{
		return null;
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x1E20298", Offset = "0x1E20298", VA = "0x1E20298")]
	private void BlockStarted(BaseDialogBlock obj)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x1E20500", Offset = "0x1E20500", VA = "0x1E20500")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C820", Offset = "0xA3C820")]
	private IEnumerator FadeInButtonTexts()
	{
		return null;
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x1E205A0", Offset = "0x1E205A0", VA = "0x1E205A0")]
	private void WillStartBlock(BaseDialogBlock obj)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x1E206F0", Offset = "0x1E206F0", VA = "0x1E206F0")]
	public VisualizeWaitForButtonPresses()
	{
	}
}
[Token(Token = "0x2000229")]
public class BaseDialogBlock : ScriptableObject
{
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CBDC", Offset = "0xA2CBDC")]
	private sealed class <Show>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseDialogBlock <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xB9BE2C", Offset = "0xB9BE2C", VA = "0xB9BE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0xB9BE9C", Offset = "0xB9BE9C", VA = "0xB9BE9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xB9B854", Offset = "0xB9B854", VA = "0xB9B854")]
		[DebuggerHidden]
		public <Show>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xB9BC88", Offset = "0xB9BC88", VA = "0xB9BC88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xB9BC8C", Offset = "0xB9BC8C", VA = "0xB9BC8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xB9BE34", Offset = "0xB9BE34", VA = "0xB9BE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CBEC", Offset = "0xA2CBEC")]
	private sealed class <Hide>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseDialogBlock <>4__this;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0xB9BC10", Offset = "0xB9BC10", VA = "0xB9BC10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0xB9BC80", Offset = "0xB9BC80", VA = "0xB9BC80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xB9B8F4", Offset = "0xB9B8F4", VA = "0xB9B8F4")]
		[DebuggerHidden]
		public <Hide>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xB9BA6C", Offset = "0xB9BA6C", VA = "0xB9BA6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xB9BA70", Offset = "0xB9BA70", VA = "0xB9BA70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xB9BC18", Offset = "0xB9BC18", VA = "0xB9BC18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tag;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float preActionDelay;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float postActionDelay;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<BaseDialogAction> actions;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<BaseDialogBlock> WillStartBlock;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<BaseDialogBlock> BlockStarted;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<BaseDialogBlock> WillHideBlock;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<BaseDialogBlock> BlockHidden;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool blockVisible;

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xB9B640", Offset = "0xB9B640", VA = "0xB9B640", Slot = "4")]
	public virtual bool HasFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xB9B648", Offset = "0xB9B648", VA = "0xB9B648", Slot = "5")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xB9B714", Offset = "0xB9B714", VA = "0xB9B714", Slot = "6")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xB9B7E0", Offset = "0xB9B7E0", VA = "0xB9B7E0", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C974", Offset = "0xA3C974")]
	public virtual IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xB9B880", Offset = "0xB9B880", VA = "0xB9B880", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3C9D8", Offset = "0xA3C9D8")]
	public virtual IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xB9B920", Offset = "0xB9B920", VA = "0xB9B920", Slot = "9")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xB9B9EC", Offset = "0xB9B9EC", VA = "0xB9B9EC")]
	public BaseDialogBlock()
	{
	}
}
[Token(Token = "0x200022C")]
public class WaitForButtonPresses : BaseDialogBlock
{
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CBFC", Offset = "0xA2CBFC")]
	private sealed class <Hide>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaitForButtonPresses <>4__this;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x1F5B304", Offset = "0x1F5B304", VA = "0x1F5B304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x1F5B374", Offset = "0x1F5B374", VA = "0x1F5B374", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1F5AED0", Offset = "0x1F5AED0", VA = "0x1F5AED0")]
		[DebuggerHidden]
		public <Hide>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1F5B168", Offset = "0x1F5B168", VA = "0x1F5B168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1F5B16C", Offset = "0x1F5B16C", VA = "0x1F5B16C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1F5B30C", Offset = "0x1F5B30C", VA = "0x1F5B30C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CC0C", Offset = "0xA2CC0C")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type bestType;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1F5AEFC", Offset = "0x1F5AEFC", VA = "0x1F5AEFC")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1F5B0CC", Offset = "0x1F5B0CC", VA = "0x1F5B0CC")]
		internal bool <AcquireDevice>b__0(InputDeviceBase d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public VrButton screenButton;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton vrButton;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public OddRavenVrPriorityOrder screenPriorityOrder;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public OddRavenVrPriorityOrder vrPriorityOrder;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action ScreenIsReady;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action VrIsReady;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA32E88", Offset = "0xA32E88")]
	private bool <screenReady>k__BackingField;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA32E98", Offset = "0xA32E98")]
	private bool <vrReady>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private InputDeviceBase[] _vrDevice;

	[NonSerialized]
	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private InputDeviceBase _screenDevice;

	[Token(Token = "0x1700013A")]
	public bool screenReady
	{
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x1F5AAB8", Offset = "0x1F5AAB8", VA = "0x1F5AAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CADC", Offset = "0xA3CADC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1F5AAC0", Offset = "0x1F5AAC0", VA = "0x1F5AAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CAEC", Offset = "0xA3CAEC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public bool vrReady
	{
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1F5AACC", Offset = "0x1F5AACC", VA = "0x1F5AACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CAFC", Offset = "0xA3CAFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1F5AAD4", Offset = "0x1F5AAD4", VA = "0x1F5AAD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CB0C", Offset = "0xA3CB0C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public InputDeviceBase[] VrDevice
	{
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1F5AAE0", Offset = "0x1F5AAE0", VA = "0x1F5AAE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1F5ACBC", Offset = "0x1F5ACBC", VA = "0x1F5ACBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public InputDeviceBase ScreenDevice
	{
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1F5ACC4", Offset = "0x1F5ACC4", VA = "0x1F5ACC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1F5ACF4", Offset = "0x1F5ACF4", VA = "0x1F5ACF4")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1F5ACFC", Offset = "0x1F5ACFC", VA = "0x1F5ACFC", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x1F5AE34", Offset = "0x1F5AE34", VA = "0x1F5AE34", Slot = "6")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x1F5AE5C", Offset = "0x1F5AE5C", VA = "0x1F5AE5C", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CB1C", Offset = "0xA3CB1C")]
	public override IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x1F5AB10", Offset = "0x1F5AB10", VA = "0x1F5AB10")]
	public void AcquireDevice()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x1F5AF04", Offset = "0x1F5AF04", VA = "0x1F5AF04", Slot = "4")]
	public override bool HasFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x1F5AF2C", Offset = "0x1F5AF2C", VA = "0x1F5AF2C", Slot = "9")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x1F5B07C", Offset = "0x1F5B07C", VA = "0x1F5B07C")]
	public WaitForButtonPresses()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x1F5B084", Offset = "0x1F5B084", VA = "0x1F5B084")]
	[DebuggerHidden]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CB80", Offset = "0xA3CB80")]
	private IEnumerator <>n__0()
	{
		return null;
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x1F5B08C", Offset = "0x1F5B08C", VA = "0x1F5B08C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CBB8", Offset = "0xA3CBB8")]
	private bool <Update>b__27_0(InputDeviceBase d)
	{
		return default(bool);
	}
}
[Token(Token = "0x200022F")]
public class WaitForDialogs : BaseDialogBlock
{
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CC1C", Offset = "0xA2CC1C")]
	private sealed class <Show>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaitForDialogs <>4__this;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x1F5C008", Offset = "0x1F5C008", VA = "0x1F5C008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x1F5C078", Offset = "0x1F5C078", VA = "0x1F5C078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1F5B508", Offset = "0x1F5B508", VA = "0x1F5B508")]
		[DebuggerHidden]
		public <Show>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1F5B788", Offset = "0x1F5B788", VA = "0x1F5B788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1F5B78C", Offset = "0x1F5B78C", VA = "0x1F5B78C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1F5C010", Offset = "0x1F5C010", VA = "0x1F5C010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public VrButton screenButton;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VrButton vrButton;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fadeTime;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool broadcastOnAfterFade;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool broadcastOffAfterFadeOut;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public OddRavenVrPriorityOrder screenPriorityOrder;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public OddRavenVrPriorityOrder vrPriorityOrder;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup[] dialogs;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MaskableGraphic waitForScreenText;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MaskableGraphic waitForVrText;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MaskableGraphic pressButtonScreenText;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MaskableGraphic pressButtonVrText;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int currentDialog;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForMultiButtonPress wait;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x1F5B3E8", Offset = "0x1F5B3E8", VA = "0x1F5B3E8", Slot = "6")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x1F5B494", Offset = "0x1F5B494", VA = "0x1F5B494", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CC18", Offset = "0xA3CC18")]
	public override IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x1F5B534", Offset = "0x1F5B534", VA = "0x1F5B534", Slot = "9")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x1F5B730", Offset = "0x1F5B730", VA = "0x1F5B730", Slot = "4")]
	public override bool HasFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x1F5B768", Offset = "0x1F5B768", VA = "0x1F5B768")]
	public WaitForDialogs()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x1F5B780", Offset = "0x1F5B780", VA = "0x1F5B780")]
	[DebuggerHidden]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CC7C", Offset = "0xA3CC7C")]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x2000231")]
public class WaitForTime : BaseDialogBlock
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float time;

	[NonSerialized]
	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lifeTime;

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x1F5D04C", Offset = "0x1F5D04C", VA = "0x1F5D04C", Slot = "6")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x1F5D074", Offset = "0x1F5D074", VA = "0x1F5D074", Slot = "4")]
	public override bool HasFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1F5D084", Offset = "0x1F5D084", VA = "0x1F5D084", Slot = "9")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x1F5D0CC", Offset = "0x1F5D0CC", VA = "0x1F5D0CC")]
	public WaitForTime()
	{
	}
}
[Token(Token = "0x2000232")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2CC2C", Offset = "0xA2CC2C")]
public class Dialog : ScriptableObject
{
	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xAB5F2C", Offset = "0xAB5F2C", VA = "0xAB5F2C")]
	public Dialog()
	{
	}
}
[Token(Token = "0x2000233")]
public class DialogManager : MonoBehaviour
{
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CC8C", Offset = "0xA2CC8C")]
	private sealed class <Run>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogManager <>4__this;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<BaseDialogBlock>.Enumerator <>7__wrap1;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BaseDialogBlock <block>5__3;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xAB6BC4", Offset = "0xAB6BC4", VA = "0xAB6BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0xAB6C34", Offset = "0xAB6C34", VA = "0xAB6C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xAB6168", Offset = "0xAB6168", VA = "0xAB6168")]
		[DebuggerHidden]
		public <Run>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xAB62D0", Offset = "0xAB62D0", VA = "0xAB62D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xAB6354", Offset = "0xAB6354", VA = "0xAB6354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xAB62FC", Offset = "0xAB62FC", VA = "0xAB62FC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xAB6BCC", Offset = "0xAB6BCC", VA = "0xAB6BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BaseDialogBlock> dialogBlocks;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoStart;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<BaseDialogBlock> WillStartBlock;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<BaseDialogBlock> BlockStarted;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<BaseDialogBlock> WillHideBlock;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<BaseDialogBlock> BlockHidden;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xAB5F34", Offset = "0xAB5F34", VA = "0xAB5F34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xAB6060", Offset = "0xAB6060", VA = "0xAB6060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xAB60C8", Offset = "0xAB60C8", VA = "0xAB60C8")]
	public void On()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xAB60F4", Offset = "0xAB60F4", VA = "0xAB60F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CD04", Offset = "0xA3CD04")]
	private IEnumerator Run()
	{
		return null;
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xAB6194", Offset = "0xAB6194", VA = "0xAB6194")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xAB6260", Offset = "0xAB6260", VA = "0xAB6260")]
	public DialogManager()
	{
	}
}
[Token(Token = "0x2000235")]
public class WaitForDialogBlock : CustomYieldInstruction
{
	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private BaseDialogBlock dialogBlock;

	[Token(Token = "0x17000144")]
	public override bool keepWaiting
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1F5B3A8", Offset = "0x1F5B3A8", VA = "0x1F5B3A8", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1F5B37C", Offset = "0x1F5B37C", VA = "0x1F5B37C")]
	public WaitForDialogBlock(BaseDialogBlock dialogBlock)
	{
	}
}
[Token(Token = "0x2000236")]
public class Patroling : MonoBehaviour
{
	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] points;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool turnAroundOnObstacle;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int destPoint;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent agent;

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1E94BC8", Offset = "0x1E94BC8", VA = "0x1E94BC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1E94D38", Offset = "0x1E94D38", VA = "0x1E94D38")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1E94E1C", Offset = "0x1E94E1C", VA = "0x1E94E1C")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1E94C40", Offset = "0x1E94C40", VA = "0x1E94C40")]
	private void GotoNextPoint()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1E94F00", Offset = "0x1E94F00", VA = "0x1E94F00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x1E94F54", Offset = "0x1E94F54", VA = "0x1E94F54")]
	public Patroling()
	{
	}
}
[Token(Token = "0x2000237")]
[ExecuteInEditMode]
public class addSyncIfNessesary : MonoBehaviour
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicMaterial maxFriction;

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1F60900", Offset = "0x1F60900", VA = "0x1F60900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x1F60B3C", Offset = "0x1F60B3C", VA = "0x1F60B3C")]
	public addSyncIfNessesary()
	{
	}
}
[Token(Token = "0x2000238")]
public class AppearingPlatform : Platform
{
	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public StateMachine stateMachine;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string state;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float appearTime;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool appearing;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	private bool appeared;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float opacity;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool saveKinematic;

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xB8CFDC", Offset = "0xB8CFDC", VA = "0xB8CFDC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xB8D0E8", Offset = "0xB8D0E8", VA = "0xB8D0E8")]
	private void Appear()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xB8D1C4", Offset = "0xB8D1C4", VA = "0xB8D1C4")]
	private new void Respawn()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xB8D2BC", Offset = "0xB8D2BC", VA = "0xB8D2BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xB8D3E8", Offset = "0xB8D3E8", VA = "0xB8D3E8")]
	public AppearingPlatform()
	{
	}
}
[Token(Token = "0x2000239")]
public class BouncePlatform : InputComponent
{
	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ForceWithoutJump;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ForceWithJump;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float force;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x1E469A0", Offset = "0x1E469A0", VA = "0x1E469A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x1E469AC", Offset = "0x1E469AC", VA = "0x1E469AC")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x1E46B94", Offset = "0x1E46B94", VA = "0x1E46B94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x1E46BDC", Offset = "0x1E46BDC", VA = "0x1E46BDC")]
	public BouncePlatform()
	{
	}
}
[Token(Token = "0x200023A")]
public class ChangingPlatform : MonoBehaviour
{
	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject turnsIntoOnEnter;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject turnsIntoOnExit;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float enterDelay;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float exitDelay;

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x1E5CBC4", Offset = "0x1E5CBC4", VA = "0x1E5CBC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1E5CBC8", Offset = "0x1E5CBC8", VA = "0x1E5CBC8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x1E5CC84", Offset = "0x1E5CC84", VA = "0x1E5CC84")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x1E5CD40", Offset = "0x1E5CD40", VA = "0x1E5CD40")]
	private void ChangeOnEnter()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x1E5CEE0", Offset = "0x1E5CEE0", VA = "0x1E5CEE0")]
	private void ChangeOnExit()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1E5D080", Offset = "0x1E5D080", VA = "0x1E5D080")]
	public ChangingPlatform()
	{
	}
}
[Token(Token = "0x200023B")]
public class DisappearingPlatform : Platform
{
	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public StateMachine stateMachine;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string state;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float appearTime;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool disappearing;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	private bool disappeared;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float time;

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xAB7BC0", Offset = "0xAB7BC0", VA = "0xAB7BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xAB7D18", Offset = "0xAB7D18", VA = "0xAB7D18")]
	private float easeInQuad(float t, float startValue, float changeInValue, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xAB7D2C", Offset = "0xAB7D2C", VA = "0xAB7D2C")]
	public DisappearingPlatform()
	{
	}
}
[Token(Token = "0x200023C")]
public class DisintigratePlatform : FreePlatform
{
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CCAC", Offset = "0xA2CCAC")]
	private sealed class <DelaySounds>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisintigratePlatform <>4__this;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <currentRespawnId>5__2;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0xAB90A4", Offset = "0xAB90A4", VA = "0xAB90A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xAB9114", Offset = "0xAB9114", VA = "0xAB9114", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xAB8494", Offset = "0xAB8494", VA = "0xAB8494")]
		[DebuggerHidden]
		public <DelaySounds>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xAB8EE8", Offset = "0xAB8EE8", VA = "0xAB8EE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xAB8EEC", Offset = "0xAB8EEC", VA = "0xAB8EEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xAB90AC", Offset = "0xAB90AC", VA = "0xAB90AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CCBC", Offset = "0xA2CCBC")]
	private sealed class <Respawn>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisintigratePlatform <>4__this;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer <renderer>5__2;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <dissolve>5__3;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xAB9664", Offset = "0xAB9664", VA = "0xAB9664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xAB96D4", Offset = "0xAB96D4", VA = "0xAB96D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xAB8534", Offset = "0xAB8534", VA = "0xAB8534")]
		[DebuggerHidden]
		public <Respawn>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xAB911C", Offset = "0xAB911C", VA = "0xAB911C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xAB9120", Offset = "0xAB9120", VA = "0xAB9120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xAB966C", Offset = "0xAB966C", VA = "0xAB966C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32EC8", Offset = "0xA32EC8")]
	public float disintegrateAfter;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isDisintigrated;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ORFmodStudioEventEmitter disintigrateSound;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ORFmodStudioEventEmitter ReleaseSound;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool disintegrateNow;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float timer;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool disintegrate;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ParticleSystem disintegratingParticles;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ParticleSystem endParticles;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Material mat;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Quaternion originalRotation;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private BoxCollider collider;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float? delayDisintegrateSound;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int respawnId;

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xAB7DAC", Offset = "0xAB7DAC", VA = "0xAB7DAC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xAB8258", Offset = "0xAB8258", VA = "0xAB8258")]
	private void StartDisintigrating(SteamVR_GrabbableObject obj)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xAB83FC", Offset = "0xAB83FC", VA = "0xAB83FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CDB8", Offset = "0xA3CDB8")]
	private IEnumerator DelaySounds(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xAB81AC", Offset = "0xAB81AC", VA = "0xAB81AC")]
	private void SetParticleShape(ParticleSystem particle)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xAB84C0", Offset = "0xAB84C0", VA = "0xAB84C0", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CE1C", Offset = "0xA3CE1C")]
	protected override IEnumerator Respawn()
	{
		return null;
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xAB8560", Offset = "0xAB8560", VA = "0xAB8560")]
	[PunRPC]
	private void RespawnRpc()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xAB8594", Offset = "0xAB8594", VA = "0xAB8594")]
	private void NotInReach()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xAB86FC", Offset = "0xAB86FC", VA = "0xAB86FC")]
	private void ActivationProgress(float progress)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xAB8700", Offset = "0xAB8700", VA = "0xAB8700")]
	public void Disintegrate()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xAB8AB4", Offset = "0xAB8AB4", VA = "0xAB8AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xAB8B98", Offset = "0xAB8B98", VA = "0xAB8B98", Slot = "9")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xAB8E40", Offset = "0xAB8E40", VA = "0xAB8E40", Slot = "13")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xAB8ED8", Offset = "0xAB8ED8", VA = "0xAB8ED8")]
	public DisintigratePlatform()
	{
	}
}
[Token(Token = "0x200023F")]
public class DynamicPlatform : Platform
{
	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xABF5A0", Offset = "0xABF5A0", VA = "0xABF5A0")]
	private void ActivationProgress(float progress)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xABF63C", Offset = "0xABF63C", VA = "0xABF63C")]
	public DynamicPlatform()
	{
	}
}
[Token(Token = "0x2000240")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CCCC", Offset = "0xA2CCCC")]
public class ElevatorPlatform : MonoBehaviour
{
	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Elevator elevator;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Platform platform;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlatformNetwork platformNetwork;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startPosition;

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xAC0090", Offset = "0xAC0090", VA = "0xAC0090")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xAC02B8", Offset = "0xAC02B8", VA = "0xAC02B8")]
	private void WasGrabbed(SteamVR_GrabbableObject o)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xAC02EC", Offset = "0xAC02EC", VA = "0xAC02EC")]
	private void WasReleased(SteamVR_GrabbableObject o)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xAC04CC", Offset = "0xAC04CC", VA = "0xAC04CC")]
	public ElevatorPlatform()
	{
	}
}
[Token(Token = "0x2000241")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CD4C", Offset = "0xA2CD4C")]
public class FallingPlatform : MonoBehaviour
{
	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CDB0", Offset = "0xA2CDB0")]
	private sealed class <Fall>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FallingPlatform <>4__this;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <wait>5__2;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__3;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0xAC7D78", Offset = "0xAC7D78", VA = "0xAC7D78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xAC7DE8", Offset = "0xAC7DE8", VA = "0xAC7DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xAC7BE8", Offset = "0xAC7BE8", VA = "0xAC7BE8")]
		[DebuggerHidden]
		public <Fall>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xAC7C24", Offset = "0xAC7C24", VA = "0xAC7C24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xAC7C28", Offset = "0xAC7C28", VA = "0xAC7C28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xAC7D80", Offset = "0xAC7D80", VA = "0xAC7D80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xAC7ABC", Offset = "0xAC7ABC", VA = "0xAC7ABC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xAC7B74", Offset = "0xAC7B74", VA = "0xAC7B74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CF30", Offset = "0xA3CF30")]
	private IEnumerator Fall()
	{
		return null;
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xAC7C14", Offset = "0xAC7C14", VA = "0xAC7C14")]
	public FallingPlatform()
	{
	}
}
[Token(Token = "0x2000243")]
public class MovingPlatform : Platform
{
	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Vector3 rotateAround;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3 moveAlong;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool moveInLocalSpace;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float speed;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float distance;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 originalPosition;

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xD535A4", Offset = "0xD535A4", VA = "0xD535A4", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xD536BC", Offset = "0xD536BC", VA = "0xD536BC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xD53D1C", Offset = "0xD53D1C", VA = "0xD53D1C", Slot = "8")]
	public override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xD5412C", Offset = "0xD5412C", VA = "0xD5412C")]
	public MovingPlatform()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xD541E4", Offset = "0xD541E4", VA = "0xD541E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CFE4", Offset = "0xA3CFE4")]
	private void <Start>b__6_0(SteamVR_GrabbableObject <p0>)
	{
	}
}
[Token(Token = "0x2000244")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CDC0", Offset = "0xA2CDC0")]
public class Platform : MonoBehaviour, IDeactivateWhenDestroyed, ICanBeAffectedBySpeed
{
	[Token(Token = "0x2000245")]
	public enum PlatformColorsEnum
	{
		[Token(Token = "0x4000C21")]
		Unknown,
		[Token(Token = "0x4000C22")]
		Physics,
		[Token(Token = "0x4000C23")]
		Disintegrating,
		[Token(Token = "0x4000C24")]
		Air,
		[Token(Token = "0x4000C25")]
		Elevator,
		[Token(Token = "0x4000C26")]
		OneTwoThree,
		[Token(Token = "0x4000C27")]
		Puzzle
	}

	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CE64", Offset = "0xA2CE64")]
	private sealed class <FadeInCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Platform <>4__this;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <o>5__2;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x1E9DA14", Offset = "0x1E9DA14", VA = "0x1E9DA14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x1E9DA84", Offset = "0x1E9DA84", VA = "0x1E9DA84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1E9D894", Offset = "0x1E9D894", VA = "0x1E9D894")]
		[DebuggerHidden]
		public <FadeInCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1E9D8C0", Offset = "0x1E9D8C0", VA = "0x1E9D8C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1E9D8C4", Offset = "0x1E9D8C4", VA = "0x1E9D8C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1E9DA1C", Offset = "0x1E9DA1C", VA = "0x1E9DA1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CE74", Offset = "0xA2CE74")]
	private sealed class <FadeIn>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Platform <>4__this;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <dissolve>5__2;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x1E9D81C", Offset = "0x1E9D81C", VA = "0x1E9D81C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x1E9D88C", Offset = "0x1E9D88C", VA = "0x1E9D88C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1E9D608", Offset = "0x1E9D608", VA = "0x1E9D608")]
		[DebuggerHidden]
		public <FadeIn>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1E9D634", Offset = "0x1E9D634", VA = "0x1E9D634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1E9D638", Offset = "0x1E9D638", VA = "0x1E9D638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1E9D824", Offset = "0x1E9D824", VA = "0x1E9D824", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CE84", Offset = "0xA2CE84")]
	private sealed class <FadeOut>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Platform <>4__this;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <dissolve>5__2;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x1E9DCB0", Offset = "0x1E9DCB0", VA = "0x1E9DCB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0x1E9DD20", Offset = "0x1E9DD20", VA = "0x1E9DD20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1E9DA8C", Offset = "0x1E9DA8C", VA = "0x1E9DA8C")]
		[DebuggerHidden]
		public <FadeOut>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1E9DAB8", Offset = "0x1E9DAB8", VA = "0x1E9DAB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1E9DABC", Offset = "0x1E9DABC", VA = "0x1E9DABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x1E9DCB8", Offset = "0x1E9DCB8", VA = "0x1E9DCB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CE94", Offset = "0xA2CE94")]
	private sealed class <Respawn>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Platform <>4__this;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x1E9E628", Offset = "0x1E9E628", VA = "0x1E9E628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x1E9E698", Offset = "0x1E9E698", VA = "0x1E9E698", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1E9E070", Offset = "0x1E9E070", VA = "0x1E9E070")]
		[DebuggerHidden]
		public <Respawn>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1E9E09C", Offset = "0x1E9E09C", VA = "0x1E9E09C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1E9E0A0", Offset = "0x1E9E0A0", VA = "0x1E9E0A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x1E9E630", Offset = "0x1E9E630", VA = "0x1E9E630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2CEA4", Offset = "0xA2CEA4")]
	private sealed class <MoveUntilClear>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Platform <>4__this;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <saveKinematic>5__2;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <boundingBox>5__3;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] <results>5__4;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <pos>5__5;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x1E9DFF8", Offset = "0x1E9DFF8", VA = "0x1E9DFF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x1E9E068", Offset = "0x1E9E068", VA = "0x1E9E068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x1E9DD28", Offset = "0x1E9DD28", VA = "0x1E9DD28")]
		[DebuggerHidden]
		public <MoveUntilClear>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x1E9DD54", Offset = "0x1E9DD54", VA = "0x1E9DD54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1E9DD58", Offset = "0x1E9DD58", VA = "0x1E9DD58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x1E9E000", Offset = "0x1E9E000", VA = "0x1E9E000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF2")]
	private const string platformTag = "Platform";

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Rigidbody m_Rigidbody;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerCharacter player;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider playerCollider;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32F00", Offset = "0xA32F00")]
	public bool automaticFreezing;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool willFreeze;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool touchingPlayer;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool willRespawn;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool dectivateWhenDestroyed;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float density;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float FreezeTime;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool createKinematicCollider;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float movementThreshold;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool noRotationAroundXZ;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32F38", Offset = "0xA32F38")]
	public bool moveUntilClear;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool isKinematic;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color[] PlatformColors;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32F70", Offset = "0xA32F70")]
	public PlatformColorsEnum emissionColor;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float emission;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float Opacity;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected MaterialPropertyBlock materialProperties;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer m_Renderer;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color platformColor;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA32FA8", Offset = "0xA32FA8")]
	public ORFmodStudioEventEmitter collisionSound;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FootSounds.SurfaceEnum soundSurface;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ORFmodStudioEventEmitter spawnSound;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal bool isDisabled;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	internal Vector3 startPosition;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal Quaternion startRotation;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AffectPlayerVelocity affectPlayerVelocity;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int defaultLayer;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Material defaultMaterial;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected FootSounds footSounds;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected List<Collider> collidesWith;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected WaitForFixedUpdate wffu;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int holdingLayer;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private BoxCollider kinematicCollider;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private PlatformNetwork platformNetwork;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public bool isFrozen;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool hasValidCollisionChain;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ICanBeAffectedBySpeed collidingWith;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Platform collidingPlatform;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float fixedFrameRate;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	internal bool isQuitting;

	[Token(Token = "0x1700014B")]
	public SteamVR_GrabbableObject Grabbable
	{
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1E99E34", Offset = "0x1E99E34", VA = "0x1E99E34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x1E99E3C", Offset = "0x1E99E3C", VA = "0x1E99E3C", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x1E99E40", Offset = "0x1E99E40", VA = "0x1E99E40")]
	protected void Init()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x1E9A94C", Offset = "0x1E9A94C", VA = "0x1E9A94C")]
	private void SetupPlayer()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x1E9A944", Offset = "0x1E9A944", VA = "0x1E9A944")]
	protected void SetEmission(Color color, float emission)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x1E9AA94", Offset = "0x1E9AA94", VA = "0x1E9AA94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x1E9AB10", Offset = "0x1E9AB10", VA = "0x1E9AB10", Slot = "7")]
	public virtual string GetPlatformType()
	{
		return null;
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1E9A80C", Offset = "0x1E9A80C", VA = "0x1E9A80C")]
	public void SetOpacity(float opacity)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1E9AB48", Offset = "0x1E9AB48", VA = "0x1E9AB48")]
	private void SetTransparent(Material material)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1E9AD5C", Offset = "0x1E9AD5C", VA = "0x1E9AD5C")]
	private void SetOpaque(Material material)
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x1E9AF70", Offset = "0x1E9AF70", VA = "0x1E9AF70")]
	public void FadeIn(float speed = 2f)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1E9AFF0", Offset = "0x1E9AFF0", VA = "0x1E9AFF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3CFF4", Offset = "0xA3CFF4")]
	private IEnumerator FadeInCoroutine(float speed)
	{
		return null;
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x1E9B088", Offset = "0x1E9B088", VA = "0x1E9B088")]
	private void Disable(SteamVR_GrabbableObject grabbable)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1E9B1C8", Offset = "0x1E9B1C8", VA = "0x1E9B1C8")]
	private void Enable(SteamVR_GrabbableObject grabbable)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1E9B08C", Offset = "0x1E9B08C", VA = "0x1E9B08C")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x1E9B264", Offset = "0x1E9B264", VA = "0x1E9B264")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x1E9B324", Offset = "0x1E9B324", VA = "0x1E9B324")]
	private void Freeze()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x1E9B594", Offset = "0x1E9B594", VA = "0x1E9B594")]
	protected void Unfreeze()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x1E9B6D8", Offset = "0x1E9B6D8", VA = "0x1E9B6D8")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x1E9BACC", Offset = "0x1E9BACC", VA = "0x1E9BACC")]
	public void InvalidateCollisionChain()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x1E9BAD4", Offset = "0x1E9BAD4", VA = "0x1E9BAD4")]
	private void OnCollisionStay(Collision coll)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1E9BDE4", Offset = "0x1E9BDE4", VA = "0x1E9BDE4")]
	private void UpdateCollisionChain(Collision coll)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x1E9C0D8", Offset = "0x1E9C0D8", VA = "0x1E9C0D8")]
	private void ClearSpeedFromObject()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x1E9C0E0", Offset = "0x1E9C0E0", VA = "0x1E9C0E0", Slot = "5")]
	public void SetAddSpeedFromObject(AffectPlayerVelocity apv)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x1E9C1C4", Offset = "0x1E9C1C4", VA = "0x1E9C1C4")]
	private void WakeUp()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1E9C270", Offset = "0x1E9C270", VA = "0x1E9C270")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x1E9C43C", Offset = "0x1E9C43C", VA = "0x1E9C43C")]
	public void QueueUnfreeze(float time)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x1E9BA38", Offset = "0x1E9BA38", VA = "0x1E9BA38")]
	private void SetSurfaceSound(GameObject go, FootSounds.SurfaceEnum surface)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x1E9C588", Offset = "0x1E9C588", VA = "0x1E9C588")]
	private void ResetSurfaceSound(GameObject go)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x1E9C648", Offset = "0x1E9C648", VA = "0x1E9C648", Slot = "8")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x1E9CD44", Offset = "0x1E9CD44", VA = "0x1E9CD44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x1E9CD4C", Offset = "0x1E9CD4C", VA = "0x1E9CD4C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x1E9CD58", Offset = "0x1E9CD58", VA = "0x1E9CD58", Slot = "9")]
	public virtual void Destroy()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x1E9CDF8", Offset = "0x1E9CDF8", VA = "0x1E9CDF8", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D058", Offset = "0xA3D058")]
	public virtual IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x1E9CE6C", Offset = "0x1E9CE6C", VA = "0x1E9CE6C", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D0BC", Offset = "0xA3D0BC")]
	public virtual IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x1E9CEE0", Offset = "0x1E9CEE0", VA = "0x1E9CEE0", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D120", Offset = "0xA3D120")]
	protected virtual IEnumerator Respawn()
	{
		return null;
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x1E9CF54", Offset = "0x1E9CF54", VA = "0x1E9CF54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D184", Offset = "0xA3D184")]
	protected IEnumerator MoveUntilClear()
	{
		return null;
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x1E9CFC8", Offset = "0x1E9CFC8", VA = "0x1E9CFC8", Slot = "13")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x1E9D28C", Offset = "0x1E9D28C", VA = "0x1E9D28C")]
	public Platform()
	{
	}
}
[Token(Token = "0x200024B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CEB4", Offset = "0xA2CEB4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CEB4", Offset = "0xA2CEB4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CEB4", Offset = "0xA2CEB4")]
public class PlayAudioOnImpact : MonoBehaviour
{
	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playOnce;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minSpeed;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string collisionTag;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x1EA04D4", Offset = "0x1EA04D4", VA = "0x1EA04D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x1EA052C", Offset = "0x1EA052C", VA = "0x1EA052C")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x1EA0684", Offset = "0x1EA0684", VA = "0x1EA0684")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x1EA07DC", Offset = "0x1EA07DC", VA = "0x1EA07DC")]
	public PlayAudioOnImpact()
	{
	}
}
[Token(Token = "0x200024C")]
public class PreserveTransform : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	private class SavedTransform
	{
		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x1EAD26C", Offset = "0x1EAD26C", VA = "0x1EAD26C")]
		public SavedTransform()
		{
		}
	}

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, SavedTransform> savedTransforms;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string uniqueId;

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x1EAD008", Offset = "0x1EAD008", VA = "0x1EAD008")]
	private static void SaveTransform(string id, Transform transform)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1EAD274", Offset = "0x1EAD274", VA = "0x1EAD274")]
	private static void LoadTransform(string id, Transform transform)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x1EAD3D8", Offset = "0x1EAD3D8", VA = "0x1EAD3D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x1EAD404", Offset = "0x1EAD404", VA = "0x1EAD404")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x1EAD430", Offset = "0x1EAD430", VA = "0x1EAD430")]
	public PreserveTransform()
	{
	}
}
[Token(Token = "0x200024E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CF68", Offset = "0xA2CF68")]
public class RandomAudioClip : MonoBehaviour
{
	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] clips;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minPitch;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxPitch;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasPlayed;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x1EB19B8", Offset = "0x1EB19B8", VA = "0x1EB19B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x1EB1A14", Offset = "0x1EB1A14", VA = "0x1EB1A14")]
	private void ResetSound()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x1EB1B14", Offset = "0x1EB1B14", VA = "0x1EB1B14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x1EB1B70", Offset = "0x1EB1B70", VA = "0x1EB1B70")]
	public RandomAudioClip()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x1EB1B80", Offset = "0x1EB1B80", VA = "0x1EB1B80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D378", Offset = "0xA3D378")]
	private int <ResetSound>b__6_0(AudioClip c)
	{
		return default(int);
	}
}
[Token(Token = "0x200024F")]
public class RememberOriginalTransform : MonoBehaviour
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion originalRotation;

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x1EB3CA4", Offset = "0x1EB3CA4", VA = "0x1EB3CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x1EB3D14", Offset = "0x1EB3D14", VA = "0x1EB3D14")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x1EB3DAC", Offset = "0x1EB3DAC", VA = "0x1EB3DAC")]
	public RememberOriginalTransform()
	{
	}
}
[Token(Token = "0x2000250")]
public class RenderPortal : MonoBehaviour
{
	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Player;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera Camera;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform StandardPoint;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cameraStart;

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x1EB3DB4", Offset = "0x1EB3DB4", VA = "0x1EB3DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x1EB3DF0", Offset = "0x1EB3DF0", VA = "0x1EB3DF0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x1EB3F20", Offset = "0x1EB3F20", VA = "0x1EB3F20")]
	public RenderPortal()
	{
	}
}
[Token(Token = "0x2000251")]
public class ReportActualSpeed : AffectPlayerVelocity
{
	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x1EB41D0", Offset = "0x1EB41D0", VA = "0x1EB41D0", Slot = "5")]
	public override Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1EB42C8", Offset = "0x1EB42C8", VA = "0x1EB42C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1EB430C", Offset = "0x1EB430C", VA = "0x1EB430C")]
	public ReportActualSpeed()
	{
	}
}
[Token(Token = "0x2000252")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2CFCC", Offset = "0xA2CFCC")]
public class RopeLine : MonoBehaviour
{
	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ropeWidth;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float resolution;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ropeDrag;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ropeMass;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int radialSegments;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool startRestrained;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool endRestrained;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool useMeshCollision;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] segmentPos;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] joints;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject tubeRenderer;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TubeRenderer line;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int segments;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool rope;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 swingAxis;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lowTwistLimit;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float highTwistLimit;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float swing1Limit;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1EB8938", Offset = "0x1EB8938", VA = "0x1EB8938")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1EB8B8C", Offset = "0x1EB8B8C", VA = "0x1EB8B8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x1EB9464", Offset = "0x1EB9464", VA = "0x1EB9464")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x1EB8C10", Offset = "0x1EB8C10", VA = "0x1EB8C10")]
	private void BuildRope()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x1EB96A8", Offset = "0x1EB96A8", VA = "0x1EB96A8")]
	private void AddJointPhysics(int n)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x1EB9C18", Offset = "0x1EB9C18", VA = "0x1EB9C18")]
	public RopeLine()
	{
	}
}
[Token(Token = "0x2000253")]
public class SetCameraRigPosition : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D030", Offset = "0xA2D030")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetCameraRigPosition <>4__this;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <headPosition>5__2;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0x1E65D98", Offset = "0x1E65D98", VA = "0x1E65D98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x1E65E08", Offset = "0x1E65E08", VA = "0x1E65E08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1E65A5C", Offset = "0x1E65A5C", VA = "0x1E65A5C")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1E65A90", Offset = "0x1E65A90", VA = "0x1E65A90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1E65A94", Offset = "0x1E65A94", VA = "0x1E65A94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1E65DA0", Offset = "0x1E65DA0", VA = "0x1E65DA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraRig;

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x1E659E8", Offset = "0x1E659E8", VA = "0x1E659E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D388", Offset = "0xA3D388")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x1E65A88", Offset = "0x1E65A88", VA = "0x1E65A88")]
	public SetCameraRigPosition()
	{
	}
}
[Token(Token = "0x2000255")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA2D040", Offset = "0xA2D040")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int[] m_queues;

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1E6A350", Offset = "0x1E6A350", VA = "0x1E6A350")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x1E6A488", Offset = "0x1E6A488", VA = "0x1E6A488")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x2000256")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D078", Offset = "0xA2D078")]
public class ShakeableObject : MonoBehaviour
{
	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected SteamVR_GrabbableObject GrabbableObject;

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x1E6B700", Offset = "0x1E6B700", VA = "0x1E6B700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1E6B758", Offset = "0x1E6B758", VA = "0x1E6B758")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1E6B76C", Offset = "0x1E6B76C", VA = "0x1E6B76C")]
	public ShakeableObject()
	{
	}
}
[Token(Token = "0x2000257")]
public class SmoothFollow : MonoBehaviour
{
	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform anchor;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAt;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 LookAtOffset;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool smoothRotation;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lookAtSpeed;

	[Token(Token = "0x17000158")]
	public bool IsAtTarget
	{
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1E64CDC", Offset = "0x1E64CDC", VA = "0x1E64CDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1E76964", Offset = "0x1E76964", VA = "0x1E76964")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1E76D14", Offset = "0x1E76D14", VA = "0x1E76D14")]
	public SmoothFollow()
	{
	}
}
[Token(Token = "0x2000258")]
public class SnapToGrid : MonoBehaviour
{
	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 snapSteps;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 snapFloor;

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x1E77040", Offset = "0x1E77040", VA = "0x1E77040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1E77214", Offset = "0x1E77214", VA = "0x1E77214")]
	public SnapToGrid()
	{
	}
}
[Token(Token = "0x2000259")]
public class SpawnObjectOnCollision : MonoBehaviour
{
	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawn;

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1E775DC", Offset = "0x1E775DC", VA = "0x1E775DC")]
	private void OnCollisioEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x1E7770C", Offset = "0x1E7770C", VA = "0x1E7770C")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1E7783C", Offset = "0x1E7783C", VA = "0x1E7783C")]
	public SpawnObjectOnCollision()
	{
	}
}
[Token(Token = "0x200025A")]
public class SpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spawns;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spawnImmediately;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int minSpawnFrequency;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxSpawnFrequency;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int firstSpawnDelay;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool autoSpawn;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool inheritRotation;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool broadcastOnToObjectWhenSpawned;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33000", Offset = "0xA33000")]
	public ORFmodStudioEventEmitter SpawnSound;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33038", Offset = "0xA33038")]
	public int poolSize;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] pool;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int poolPointer;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonView photonView;

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1E77844", Offset = "0x1E77844", VA = "0x1E77844")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1E7792C", Offset = "0x1E7792C", VA = "0x1E7792C")]
	private void InstantiatePool()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1E78380", Offset = "0x1E78380", VA = "0x1E78380")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x1E78384", Offset = "0x1E78384", VA = "0x1E78384")]
	private void Off()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x1E77BCC", Offset = "0x1E77BCC", VA = "0x1E77BCC")]
	private void On()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x1E783D8", Offset = "0x1E783D8", VA = "0x1E783D8")]
	[PunRPC]
	private void InvokeRpc(int delay)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x1E7843C", Offset = "0x1E7843C", VA = "0x1E7843C")]
	public SpawnPoint()
	{
	}
}
[Token(Token = "0x200025B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D0DC", Offset = "0xA2D0DC")]
public class SpawnPrefabOnPlayer : MonoBehaviour
{
	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerStartPosition psp;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string nameOfTransform;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool doNotSpawnIfTransformIsNotFound;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject go;

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x1E78458", Offset = "0x1E78458", VA = "0x1E78458")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x1E78640", Offset = "0x1E78640", VA = "0x1E78640")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x1E786DC", Offset = "0x1E786DC", VA = "0x1E786DC")]
	private void SpawnPrefab(GameObject obj)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x1E78908", Offset = "0x1E78908", VA = "0x1E78908")]
	private void HideThis()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x1E7893C", Offset = "0x1E7893C", VA = "0x1E7893C")]
	public SpawnPrefabOnPlayer()
	{
	}
}
[Token(Token = "0x200025C")]
public class ActivateForWearableMirror : MonoBehaviour
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject toActivate;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> objs;

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xB8648C", Offset = "0xB8648C", VA = "0xB8648C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xB8651C", Offset = "0xB8651C", VA = "0xB8651C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xB865AC", Offset = "0xB865AC", VA = "0xB865AC")]
	public static void SetActivate(bool active)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xB86720", Offset = "0xB86720", VA = "0xB86720")]
	public ActivateForWearableMirror()
	{
	}
}
[Token(Token = "0x200025D")]
public class AffectPlayerVelocity : MonoBehaviour
{
	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Rigidbody rb;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IHasSpeed hasSpeed;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static OddRavenCharacterController cc;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject attachPoint;

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xB89D38", Offset = "0xB89D38", VA = "0xB89D38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xB89EA4", Offset = "0xB89EA4", VA = "0xB89EA4", Slot = "4")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xB89FC0", Offset = "0xB89FC0", VA = "0xB89FC0")]
	private void OnCollisionStay(Collision coll)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xB8A11C", Offset = "0xB8A11C", VA = "0xB8A11C")]
	public Transform GetAttachPoint()
	{
		return null;
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xB8A14C", Offset = "0xB8A14C", VA = "0xB8A14C", Slot = "5")]
	public virtual Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xB8A2C4", Offset = "0xB8A2C4", VA = "0xB8A2C4")]
	public AffectPlayerVelocity()
	{
	}
}
[Token(Token = "0x200025E")]
public class AngryReaperman : MonoBehaviour
{
	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_SimpleHand[] hands;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xB8B160", Offset = "0xB8B160", VA = "0xB8B160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xB8B1B8", Offset = "0xB8B1B8", VA = "0xB8B1B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xB8B324", Offset = "0xB8B324", VA = "0xB8B324")]
	public AngryReaperman()
	{
	}
}
[Token(Token = "0x200025F")]
public class AppearingBlock : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D140", Offset = "0xA2D140")]
	private sealed class <Show>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AppearingBlock <>4__this;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <o>5__2;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xB8C570", Offset = "0xB8C570", VA = "0xB8C570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xB8C5E0", Offset = "0xB8C5E0", VA = "0xB8C5E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xB8BF68", Offset = "0xB8BF68", VA = "0xB8BF68")]
		[DebuggerHidden]
		public <Show>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xB8C310", Offset = "0xB8C310", VA = "0xB8C310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xB8C314", Offset = "0xB8C314", VA = "0xB8C314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xB8C578", Offset = "0xB8C578", VA = "0xB8C578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D150", Offset = "0xA2D150")]
	private sealed class <Hide>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AppearingBlock <>4__this;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <delay>5__2;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <o>5__3;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0xB8C298", Offset = "0xB8C298", VA = "0xB8C298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0xB8C308", Offset = "0xB8C308", VA = "0xB8C308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xB8C008", Offset = "0xB8C008", VA = "0xB8C008")]
		[DebuggerHidden]
		public <Hide>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xB8C03C", Offset = "0xB8C03C", VA = "0xB8C03C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xB8C040", Offset = "0xB8C040", VA = "0xB8C040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xB8C2A0", Offset = "0xB8C2A0", VA = "0xB8C2A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer eyes;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider m_Collider;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer m_Renderer;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _on;

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xB8BCCC", Offset = "0xB8BCCC", VA = "0xB8BCCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xB8BE0C", Offset = "0xB8BE0C", VA = "0xB8BE0C")]
	private void On()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xB8BE8C", Offset = "0xB8BE8C", VA = "0xB8BE8C")]
	private void Off()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xB8BEF4", Offset = "0xB8BEF4", VA = "0xB8BEF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D44C", Offset = "0xA3D44C")]
	private IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xB8BF94", Offset = "0xB8BF94", VA = "0xB8BF94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D4B0", Offset = "0xA3D4B0")]
	private IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xB8C034", Offset = "0xB8C034", VA = "0xB8C034")]
	public AppearingBlock()
	{
	}
}
[Token(Token = "0x2000262")]
public class AttachPoint : MonoBehaviour
{
	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xB8D468", Offset = "0xB8D468", VA = "0xB8D468")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xB8D46C", Offset = "0xB8D46C", VA = "0xB8D46C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xB8D470", Offset = "0xB8D470", VA = "0xB8D470")]
	public AttachPoint()
	{
	}
}
[Token(Token = "0x2000263")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D160", Offset = "0xA2D160")]
public class AudioToMouth : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D1C4", Offset = "0xA2D1C4")]
	private sealed class <SetupPhotonVoice>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioToMouth <>4__this;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xB8E8A0", Offset = "0xB8E8A0", VA = "0xB8E8A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xB8E910", Offset = "0xB8E910", VA = "0xB8E910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xB8D6C4", Offset = "0xB8D6C4", VA = "0xB8D6C4")]
		[DebuggerHidden]
		public <SetupPhotonVoice>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xB8E66C", Offset = "0xB8E66C", VA = "0xB8E66C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xB8E670", Offset = "0xB8E670", VA = "0xB8E670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xB8E8A8", Offset = "0xB8E8A8", VA = "0xB8E8A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 maxAngle;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA33070", Offset = "0xA33070")]
	public float laspMultiplicator;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA330A8", Offset = "0xA330A8")]
	public float laspResponsiveness;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fmodMultiplicator;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fmodResponsiveness;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float photonMultiplicator;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float photonResponsiveness;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int maxNoDataFrames;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator animator;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useLasp;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool usePeakLevel;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool running;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioSource;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float avgSound;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int recordId;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int soundLevelId;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] buffer;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int lastPosition;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Sound sound;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VoiceConnection voiceConnection;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RemoteVoiceLink currentLink;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float peakLevel;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float lastPeakLevel;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int noDataFrames;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private uint position;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xB8D5E0", Offset = "0xB8D5E0", VA = "0xB8D5E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xB8D650", Offset = "0xB8D650", VA = "0xB8D650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D5B4", Offset = "0xA3D5B4")]
	private IEnumerator SetupPhotonVoice()
	{
		return null;
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xB8D6F0", Offset = "0xB8D6F0", VA = "0xB8D6F0")]
	private void RemoteVoiceAdded(RemoteVoiceLink link)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xB8D7D8", Offset = "0xB8D7D8", VA = "0xB8D7D8")]
	private void RemoteVoiceRemoved()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xB8D8C4", Offset = "0xB8D8C4", VA = "0xB8D8C4")]
	private void FrameDecoded(FrameOut<float> frame)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xB8D9E0", Offset = "0xB8D9E0", VA = "0xB8D9E0")]
	private void PhotonUpdate()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xB8D978", Offset = "0xB8D978", VA = "0xB8D978")]
	private float GetPeakLevel(float[] data)
	{
		return default(float);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xB8DC90", Offset = "0xB8DC90", VA = "0xB8DC90")]
	private void SetupFmod()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xB8DFEC", Offset = "0xB8DFEC", VA = "0xB8DFEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xB8DEB4", Offset = "0xB8DEB4", VA = "0xB8DEB4")]
	private int GetMicrophone()
	{
		return default(int);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xB8E084", Offset = "0xB8E084", VA = "0xB8E084")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xB8E110", Offset = "0xB8E110", VA = "0xB8E110")]
	private void FmodUpdate()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xB8E638", Offset = "0xB8E638", VA = "0xB8E638")]
	private void LaspUpdate()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xB8E63C", Offset = "0xB8E63C", VA = "0xB8E63C")]
	public AudioToMouth()
	{
	}
}
[Token(Token = "0x2000265")]
public class AudioToPulse : MonoBehaviour
{
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D1D4", Offset = "0xA2D1D4")]
	private sealed class <SetupPhotonVoice>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioToPulse <>4__this;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xB8F220", Offset = "0xB8F220", VA = "0xB8F220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xB8F290", Offset = "0xB8F290", VA = "0xB8F290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xB8E9E0", Offset = "0xB8E9E0", VA = "0xB8E9E0")]
		[DebuggerHidden]
		public <SetupPhotonVoice>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xB8EFEC", Offset = "0xB8EFEC", VA = "0xB8EFEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xB8EFF0", Offset = "0xB8EFF0", VA = "0xB8EFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xB8F228", Offset = "0xB8F228", VA = "0xB8F228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem pulse;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 maxAngle;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA330F0", Offset = "0xA330F0")]
	public float laspMultiplicator;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA33128", Offset = "0xA33128")]
	public float laspResponsiveness;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fmodMultiplicator;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fmodResponsiveness;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float photonMultiplicator;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float photonResponsiveness;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int maxNoDataFrames;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useLasp;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool usePeakLevel;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool running;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int recordId;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startSize;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VoiceConnection voiceConnection;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RemoteVoiceLink currentLink;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float peakLevel;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastPeakLevel;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int noDataFrames;

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xB8E918", Offset = "0xB8E918", VA = "0xB8E918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xB8E96C", Offset = "0xB8E96C", VA = "0xB8E96C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D668", Offset = "0xA3D668")]
	private IEnumerator SetupPhotonVoice()
	{
		return null;
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xB8EA0C", Offset = "0xB8EA0C", VA = "0xB8EA0C")]
	private void RemoteVoiceAdded(RemoteVoiceLink link)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xB8EAF4", Offset = "0xB8EAF4", VA = "0xB8EAF4")]
	private void RemoteVoiceRemoved()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xB8EBE0", Offset = "0xB8EBE0", VA = "0xB8EBE0")]
	private void FrameDecoded(FrameOut<float> frame)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xB8ECFC", Offset = "0xB8ECFC", VA = "0xB8ECFC")]
	private void PhotonUpdate()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xB8EC94", Offset = "0xB8EC94", VA = "0xB8EC94")]
	private float GetPeakLevel(float[] data)
	{
		return default(float);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xB8EE90", Offset = "0xB8EE90", VA = "0xB8EE90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xB8EF28", Offset = "0xB8EF28", VA = "0xB8EF28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xB8EFB4", Offset = "0xB8EFB4", VA = "0xB8EFB4")]
	public AudioToPulse()
	{
	}
}
[Token(Token = "0x2000267")]
public class AutoJumpTrigger : MonoBehaviour
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OddRavenCharacterController characterController;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float autoJumpHeight;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool couldJump;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LayerMask floor;

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xB8F600", Offset = "0xB8F600", VA = "0xB8F600")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xB8F678", Offset = "0xB8F678", VA = "0xB8F678")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xB8FA84", Offset = "0xB8FA84", VA = "0xB8FA84")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xB8FA8C", Offset = "0xB8FA8C", VA = "0xB8FA8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xB8FD84", Offset = "0xB8FD84", VA = "0xB8FD84")]
	public AutoJumpTrigger()
	{
	}
}
[Token(Token = "0x2000268")]
public class AwardLifeClaim : MonoBehaviour
{
	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xB9B114", Offset = "0xB9B114", VA = "0xB9B114")]
	private void Consume()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xB9B238", Offset = "0xB9B238", VA = "0xB9B238")]
	public AwardLifeClaim()
	{
	}
}
[Token(Token = "0x2000269")]
public abstract class BaseCheckpoint : MonoBehaviour
{
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool oneShot;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ORFmodStudioEventEmitter activationSound;

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xB9B3A0", Offset = "0xB9B3A0", VA = "0xB9B3A0", Slot = "4")]
	public virtual void ActivateCheckpoint()
	{
	}

	[Token(Token = "0x6000C3C")]
	protected abstract void DeactivateCheckpoint();

	[Token(Token = "0x6000C3D")]
	public abstract void PrepareRespawn();

	[Token(Token = "0x6000C3E")]
	public abstract IEnumerator DoRespawn();

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xB9B5FC", Offset = "0xB9B5FC", VA = "0xB9B5FC")]
	protected BaseCheckpoint()
	{
	}
}
[Token(Token = "0x200026A")]
[ExecuteInEditMode]
public class BlinkingObject : MonoBehaviour
{
	[Token(Token = "0x200026B")]
	public enum DisappearType
	{
		[Token(Token = "0x4000CE9")]
		NoCollision,
		[Token(Token = "0x4000CEA")]
		MakeTrigger,
		[Token(Token = "0x4000CEB")]
		HasCollision
	}

	[Serializable]
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D1F4", Offset = "0xA2D1F4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Renderer, MaterialPropertyBlock> <>9__19_0;

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1E45A50", Offset = "0x1E45A50", VA = "0x1E45A50")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1E45A58", Offset = "0x1E45A58", VA = "0x1E45A58")]
		internal MaterialPropertyBlock <OnEnable>b__19_0(Renderer r)
		{
			return null;
		}
	}

	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D204", Offset = "0xA2D204")]
	private sealed class <DoLoop>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlinkingObject <>4__this;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <goneWait>5__2;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <visibleWait>5__3;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x1E45E74", Offset = "0x1E45E74", VA = "0x1E45E74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x1E45EE4", Offset = "0x1E45EE4", VA = "0x1E45EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1E45458", Offset = "0x1E45458", VA = "0x1E45458")]
		[DebuggerHidden]
		public <DoLoop>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1E45C3C", Offset = "0x1E45C3C", VA = "0x1E45C3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1E45C40", Offset = "0x1E45C40", VA = "0x1E45C40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1E45E7C", Offset = "0x1E45E7C", VA = "0x1E45E7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D214", Offset = "0xA2D214")]
	private sealed class <DissolveTo>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlinkingObject <>4__this;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float from;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float dissolve;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__2;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x1E45BC4", Offset = "0x1E45BC4", VA = "0x1E45BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x1E45C34", Offset = "0x1E45C34", VA = "0x1E45C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1E456BC", Offset = "0x1E456BC", VA = "0x1E456BC")]
		[DebuggerHidden]
		public <DissolveTo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1E45AB4", Offset = "0x1E45AB4", VA = "0x1E45AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1E45AB8", Offset = "0x1E45AB8", VA = "0x1E45AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1E45BCC", Offset = "0x1E45BCC", VA = "0x1E45BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33160", Offset = "0xA33160")]
	public DisappearType collisionWhenGone;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool includeChildColliders;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool includeChildRenderes;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33198", Offset = "0xA33198")]
	public float goneTime;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float visibleTime;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offsetTime;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA331D0", Offset = "0xA331D0")]
	public bool useDissolve;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Collider> nonTriggerColliders;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] renderers;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA33208", Offset = "0xA33208")]
	private bool <IsHidden>k__BackingField;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 bounds;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Platform platform;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock[] mpbs;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float dissolveTime;

	[Token(Token = "0x17000161")]
	public bool IsHidden
	{
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1E44CB0", Offset = "0x1E44CB0", VA = "0x1E44CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D71C", Offset = "0xA3D71C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1E44CB8", Offset = "0x1E44CB8", VA = "0x1E44CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D72C", Offset = "0xA3D72C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1E44CC4", Offset = "0x1E44CC4", VA = "0x1E44CC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x1E4540C", Offset = "0x1E4540C", VA = "0x1E4540C")]
	internal void Preview(bool start)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x1E45398", Offset = "0x1E45398", VA = "0x1E45398")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D73C", Offset = "0xA3D73C")]
	private IEnumerator DoLoop()
	{
		return null;
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x1E45484", Offset = "0x1E45484", VA = "0x1E45484")]
	public void Show(bool renderersOnly = false)
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x1E45184", Offset = "0x1E45184", VA = "0x1E45184")]
	internal void Hide()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x1E45610", Offset = "0x1E45610", VA = "0x1E45610")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D7A0", Offset = "0xA3D7A0")]
	private IEnumerator DissolveTo(float dissolve, float from)
	{
		return null;
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x1E456E8", Offset = "0x1E456E8", VA = "0x1E456E8")]
	internal void SetDissolve(float dissolve)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x1E458D4", Offset = "0x1E458D4", VA = "0x1E458D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1E4595C", Offset = "0x1E4595C", VA = "0x1E4595C")]
	public BlinkingObject()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x1E459E4", Offset = "0x1E459E4", VA = "0x1E459E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D804", Offset = "0xA3D804")]
	private void <OnEnable>b__19_1(SteamVR_GrabbableObject <p0>)
	{
	}
}
[Token(Token = "0x200026F")]
public class BloomSettings : MonoBehaviour
{
	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera[] cameras;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA33218", Offset = "0xA33218")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33218", Offset = "0xA33218")]
	public float threshold;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA3326C", Offset = "0xA3326C")]
	public float intensity;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA33284", Offset = "0xA33284")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33284", Offset = "0xA33284")]
	public float blurSize;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA332D8", Offset = "0xA332D8")]
	public int blurIterations;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BloomOptimized.BlurType blurType;

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x1E45FB4", Offset = "0x1E45FB4", VA = "0x1E45FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x1E46134", Offset = "0x1E46134", VA = "0x1E46134")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1E4632C", Offset = "0x1E4632C", VA = "0x1E4632C")]
	public BloomSettings()
	{
	}
}
[Token(Token = "0x2000270")]
public class BombIndicator : MonoBehaviour
{
	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer renderer;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x1E46348", Offset = "0x1E46348", VA = "0x1E46348")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x1E4657C", Offset = "0x1E4657C", VA = "0x1E4657C")]
	public BombIndicator()
	{
	}
}
[Token(Token = "0x2000271")]
public class BulletTimeSphere : MonoBehaviour
{
	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float factor;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool active;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color activeColor;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color inactiveColor;

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x1E4808C", Offset = "0x1E4808C", VA = "0x1E4808C")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x1E48178", Offset = "0x1E48178", VA = "0x1E48178")]
	public BulletTimeSphere()
	{
	}
}
[Token(Token = "0x2000272")]
public class CameraFocusPoint : MonoBehaviour
{
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CameraController cameraController;

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x1E4CDC8", Offset = "0x1E4CDC8", VA = "0x1E4CDC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x1E4CE6C", Offset = "0x1E4CE6C", VA = "0x1E4CE6C")]
	public CameraFocusPoint()
	{
	}
}
[Token(Token = "0x2000273")]
public class CarlyExpressions : InputComponent
{
	[Serializable]
	[Token(Token = "0x2000274")]
	public class ExpressionBinding
	{
		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem expression;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VrButton triggerButton;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ORFmodStudioEventEmitter soundEmitter;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string animationTrigger;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CarlyFacialExpressions.Expression facialExpression;

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1E4DFE0", Offset = "0x1E4DFE0", VA = "0x1E4DFE0")]
		public ExpressionBinding()
		{
		}
	}

	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D224", Offset = "0xA2D224")]
	private sealed class <PlayExpressionWithDelay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CarlyExpressions <>4__this;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int e;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool dontSendRpc;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x1E4DF68", Offset = "0x1E4DF68", VA = "0x1E4DF68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x1E4DFD8", Offset = "0x1E4DFD8", VA = "0x1E4DFD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1E4D6F4", Offset = "0x1E4D6F4", VA = "0x1E4D6F4")]
		[DebuggerHidden]
		public <PlayExpressionWithDelay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1E4DE90", Offset = "0x1E4DE90", VA = "0x1E4DE90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1E4DE94", Offset = "0x1E4DE94", VA = "0x1E4DE94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1E4DF70", Offset = "0x1E4DF70", VA = "0x1E4DF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExpressionBinding[] expressions;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<int> DidPlayExpression;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OddRavenCharacterInput playerInput;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CarlyFacialExpressions facialExpressions;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool dead;

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1E4D568", Offset = "0x1E4D568", VA = "0x1E4D568", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x1E4D5FC", Offset = "0x1E4D5FC", VA = "0x1E4D5FC", Slot = "10")]
	public override OddRavenVrPriorityOrder GetPriorityOrder()
	{
		return null;
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1E4D604", Offset = "0x1E4D604", VA = "0x1E4D604")]
	private void Died()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1E4D610", Offset = "0x1E4D610", VA = "0x1E4D610")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1E4D618", Offset = "0x1E4D618", VA = "0x1E4D618", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x1E4D620", Offset = "0x1E4D620", VA = "0x1E4D620")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D8B4", Offset = "0xA3D8B4")]
	public IEnumerator PlayExpressionWithDelay(int e, float delay, bool dontSendRpc = false)
	{
		return null;
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x1E4D720", Offset = "0x1E4D720", VA = "0x1E4D720")]
	public void PlayExpression(int e, bool dontSendRpc = false)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x1E4DB3C", Offset = "0x1E4DB3C", VA = "0x1E4DB3C")]
	private void StopAll()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x1E4DE88", Offset = "0x1E4DE88", VA = "0x1E4DE88")]
	public CarlyExpressions()
	{
	}
}
[Token(Token = "0x2000276")]
public class CarlyFacialExpressions : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000277")]
	public struct Expression
	{
		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Expression Default;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Expression HappySmile;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Expression Frustrated;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Expression Bored;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Expression Pouty;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Expression ProudSmile;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Expression Angry;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Expression HugeSmile;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Expression Cheeky;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Expression Surprised;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static Expression Serious;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static Expression Running;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static Expression Hngh;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static Expression Smirk;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static Expression Sad;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static Expression Anxious;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 offset;

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xA44690", Offset = "0xA44690", VA = "0xA44690")]
		public Expression(float x, float y, string name)
		{
		}
	}

	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D234", Offset = "0xA2D234")]
	private sealed class <ResetExpression>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CarlyFacialExpressions <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x1E4E274", Offset = "0x1E4E274", VA = "0x1E4E274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x1E4E2E4", Offset = "0x1E4E2E4", VA = "0x1E4E2E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1E4E140", Offset = "0x1E4E140", VA = "0x1E4E140")]
		[DebuggerHidden]
		public <ResetExpression>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1E4E174", Offset = "0x1E4E174", VA = "0x1E4E174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1E4E178", Offset = "0x1E4E178", VA = "0x1E4E178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1E4E27C", Offset = "0x1E4E27C", VA = "0x1E4E27C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer faceRenderer;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Expression currentExpression;

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x1E4DFE8", Offset = "0x1E4DFE8", VA = "0x1E4DFE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x1E4DC90", Offset = "0x1E4DC90", VA = "0x1E4DC90")]
	public void SetExpression(Expression expression, float time = 2f, bool onlyIfDefault = false)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x1E4E0A8", Offset = "0x1E4E0A8", VA = "0x1E4E0A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3D968", Offset = "0xA3D968")]
	private IEnumerator ResetExpression(float time)
	{
		return null;
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x1E4E16C", Offset = "0x1E4E16C", VA = "0x1E4E16C")]
	public CarlyFacialExpressions()
	{
	}
}
[Token(Token = "0x2000279")]
public class CarlyMoveTutorial : MonoBehaviour
{
	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool hasInstance;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CarlyMoveTutorial instance;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject canvas;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeUntilShow;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float targetAlpha;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float alpha;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float inputTimer;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasPlayerInstance;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OddRavenCharacterInput playerInstance;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool skipNextTimer;

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1E4E700", Offset = "0x1E4E700", VA = "0x1E4E700")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x1E4E830", Offset = "0x1E4E830", VA = "0x1E4E830")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x1E4E8D8", Offset = "0x1E4E8D8", VA = "0x1E4E8D8")]
	public static void Deactivate()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x1E4E96C", Offset = "0x1E4E96C", VA = "0x1E4E96C")]
	public static void MovedOrJumpedThisFrame()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x1E4E9F0", Offset = "0x1E4E9F0", VA = "0x1E4E9F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x1E4EC04", Offset = "0x1E4EC04", VA = "0x1E4EC04")]
	public CarlyMoveTutorial()
	{
	}
}
[Token(Token = "0x200027A")]
public class CarlyVrCameraSpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string dontRaycastSpawnForScene;

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x1E50270", Offset = "0x1E50270", VA = "0x1E50270")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x1E503D8", Offset = "0x1E503D8", VA = "0x1E503D8")]
	public CarlyVrCameraSpawnPoint()
	{
	}
}
[Token(Token = "0x200027B")]
public class CATRSettings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200027C")]
	private class SettingsData
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool volumetricLightEnabledVR;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool volumetricLightEnabledScreen;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool bloomEnabledVR;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool bloomEnabledScreen;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool aoEnabledVR;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool aoEnabledScreen;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool aaEnabledVR;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool aaEnabledScreen;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Setting detailLevel;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Setting resolutionVR;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Setting resolutionScreen;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public QualitySetting quality;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Setting frameRate;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float screenRenderRatio;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool invertedYAxis;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool rotateEnabled;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool forceSteamInput;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool saveStateToDisk;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool savePerformanceReport;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool vrWorksEnabled;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float mouseSensitivity;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool audioToMouth;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool fairMode;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string preferredScreenAudio;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string preferredVrAudio;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string preferredInputDevice;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int keyboardType;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string language;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public byte logVerbosity;

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1E490D0", Offset = "0x1E490D0", VA = "0x1E490D0")]
		public SettingsData()
		{
		}
	}

	[Token(Token = "0x200027D")]
	public enum Setting
	{
		[Token(Token = "0x4000D7D")]
		Low,
		[Token(Token = "0x4000D7E")]
		Medium,
		[Token(Token = "0x4000D7F")]
		High
	}

	[Token(Token = "0x200027E")]
	public enum QualitySetting
	{
		[Token(Token = "0x4000D81")]
		Fastest,
		[Token(Token = "0x4000D82")]
		Fast,
		[Token(Token = "0x4000D83")]
		Simple,
		[Token(Token = "0x4000D84")]
		Good,
		[Token(Token = "0x4000D85")]
		Beautiful,
		[Token(Token = "0x4000D86")]
		Fantastic,
		[Token(Token = "0x4000D87")]
		PS4,
		[Token(Token = "0x4000D88")]
		Quest
	}

	[Token(Token = "0x200027F")]
	public enum AvailableSettings
	{
		[Token(Token = "0x4000D8A")]
		volumetricLightEnabled,
		[Token(Token = "0x4000D8B")]
		bloomEnabled,
		[Token(Token = "0x4000D8C")]
		aoEnabled,
		[Token(Token = "0x4000D8D")]
		aaEnabled,
		[Token(Token = "0x4000D8E")]
		resolution
	}

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool volumetricLightEnabledVR;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool volumetricLightEnabledScreen;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool bloomEnabledVR;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool bloomEnabledScreen;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool aoEnabledVR;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool aoEnabledScreen;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool aaEnabledVR;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool aaEnabledScreen;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Setting detailLevel;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Setting resolutionVR;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Setting resolutionScreen;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public QualitySetting quality;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Setting frameRate;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float mouseSensitivity;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool audioToMouth;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool fairMode;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool invertedYAxis;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool rotateEnabled;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool forceSteamInput;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool saveStateToDisk;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool savePerformanceReport;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public byte logVerbosity;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float screenRenderRatio;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool vrWorksEnabled;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string preferredScreenAudio;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string preferredVrAudio;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string preferredInputDevice;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string language;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int keyboardType;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private KeyValueFile ini;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PostProcessVolume screenVolume;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PostProcessVolume vrVolume;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture3D lutTexture;

	[Token(Token = "0x4000D5D")]
	public const string SETTINGS_FILENAME = "settings";

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA332F0", Offset = "0xA332F0")]
	private static bool <DeveloperMode>k__BackingField;

	[Token(Token = "0x1700016A")]
	public bool mouseCamera
	{
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1E4874C", Offset = "0x1E4874C", VA = "0x1E4874C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016B")]
	public float defaultScreenRenderRatio
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1E48754", Offset = "0x1E48754", VA = "0x1E48754")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700016C")]
	public static bool DeveloperMode
	{
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1E4993C", Offset = "0x1E4993C", VA = "0x1E4993C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DA1C", Offset = "0xA3DA1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1E49298", Offset = "0x1E49298", VA = "0x1E49298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DA2C", Offset = "0xA3DA2C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x1E4875C", Offset = "0x1E4875C", VA = "0x1E4875C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x1E48760", Offset = "0x1E48760", VA = "0x1E48760")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x1E48FE4", Offset = "0x1E48FE4", VA = "0x1E48FE4")]
	private SettingsData GetDefaultSettings()
	{
		return null;
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x1E48A50", Offset = "0x1E48A50", VA = "0x1E48A50")]
	public void ReadSettingsFromFile()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x1E48D3C", Offset = "0x1E48D3C", VA = "0x1E48D3C")]
	public void WriteSettingsToFile()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x1E49178", Offset = "0x1E49178", VA = "0x1E49178")]
	public void ApplySettings()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x1E49308", Offset = "0x1E49308", VA = "0x1E49308")]
	private void ApplyVolumetricLightSetting()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x1E4930C", Offset = "0x1E4930C", VA = "0x1E4930C")]
	private void ApplyPostSettings()
	{
	}

	[Token(Token = "0x6000C94")]
	private T ApplyPostProcessing<T>(PostProcessProfile volume, bool enabled) where T : PostProcessEffectSettings
	{
		return null;
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x1E493FC", Offset = "0x1E493FC", VA = "0x1E493FC")]
	private void ApplyDetailLevelSettings()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x1E494D0", Offset = "0x1E494D0", VA = "0x1E494D0")]
	private void ApplyQualitySettings()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x1E494DC", Offset = "0x1E494DC", VA = "0x1E494DC")]
	public void ApplyResolutionSettings()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x1E494E0", Offset = "0x1E494E0", VA = "0x1E494E0")]
	private void ApplyOtherSettings()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x1E499A4", Offset = "0x1E499A4", VA = "0x1E499A4")]
	public float GetVRRenderScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x1E49C38", Offset = "0x1E49C38", VA = "0x1E49C38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x1E49D3C", Offset = "0x1E49D3C", VA = "0x1E49D3C")]
	public CATRSettings()
	{
	}
}
[Token(Token = "0x2000280")]
public class CATRSettingsDetailLevel : MonoBehaviour, IConditionalShow
{
	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool visibleLow;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool visibleMedium;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool visibleHigh;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int originalLayer;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool awake;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] _renderers;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider[] _colliders;

	[Token(Token = "0x1700016D")]
	private Renderer[] renderers
	{
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1E49DE4", Offset = "0x1E49DE4", VA = "0x1E49DE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016E")]
	private Collider[] colliders
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1E49E44", Offset = "0x1E49E44", VA = "0x1E49E44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x1E49EA4", Offset = "0x1E49EA4", VA = "0x1E49EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x1E49F48", Offset = "0x1E49F48", VA = "0x1E49F48", Slot = "4")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x1E497EC", Offset = "0x1E497EC", VA = "0x1E497EC")]
	public void Apply()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x1E49F50", Offset = "0x1E49F50", VA = "0x1E49F50")]
	public void Show(bool visible)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x1E4A318", Offset = "0x1E4A318", VA = "0x1E4A318")]
	public CATRSettingsDetailLevel()
	{
	}
}
[Token(Token = "0x2000281")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D244", Offset = "0xA2D244")]
public class ChallengeDoor : MonoBehaviour
{
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D2A8", Offset = "0xA2D2A8")]
	private sealed class <OnTriggerEnter>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider collider;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChallengeDoor <>4__this;

		[Token(Token = "0x1700016F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x1E5C83C", Offset = "0x1E5C83C", VA = "0x1E5C83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x1E5C8AC", Offset = "0x1E5C8AC", VA = "0x1E5C8AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1E5AEE4", Offset = "0x1E5AEE4", VA = "0x1E5AEE4")]
		[DebuggerHidden]
		public <OnTriggerEnter>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1E5C53C", Offset = "0x1E5C53C", VA = "0x1E5C53C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1E5C540", Offset = "0x1E5C540", VA = "0x1E5C540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1E5C844", Offset = "0x1E5C844", VA = "0x1E5C844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D2B8", Offset = "0xA2D2B8")]
	private sealed class <EnterDoor>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeDoor <>4__this;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool asOnlineReaperman;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameData.ChallengeData <c>5__2;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <worldId>5__3;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x1E5C100", Offset = "0x1E5C100", VA = "0x1E5C100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x1E5C170", Offset = "0x1E5C170", VA = "0x1E5C170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1E5B100", Offset = "0x1E5B100", VA = "0x1E5B100")]
		[DebuggerHidden]
		public <EnterDoor>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1E5BC68", Offset = "0x1E5BC68", VA = "0x1E5BC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1E5BC6C", Offset = "0x1E5BC6C", VA = "0x1E5BC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1E5C108", Offset = "0x1E5C108", VA = "0x1E5C108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D2C8", Offset = "0xA2D2C8")]
	private sealed class <Open>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000173")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x1E5C8D0", Offset = "0x1E5C8D0", VA = "0x1E5C8D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x1E5C940", Offset = "0x1E5C940", VA = "0x1E5C940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1E5B3C4", Offset = "0x1E5B3C4", VA = "0x1E5B3C4")]
		[DebuggerHidden]
		public <Open>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1E5C8B4", Offset = "0x1E5C8B4", VA = "0x1E5C8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1E5C8B8", Offset = "0x1E5C8B8", VA = "0x1E5C8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1E5C8D8", Offset = "0x1E5C8D8", VA = "0x1E5C8D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D2D8", Offset = "0xA2D2D8")]
	private sealed class <LoadLevel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChallengeDoor <>4__this;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string nextLevel;

		[Token(Token = "0x17000175")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x1E5C4C4", Offset = "0x1E5C4C4", VA = "0x1E5C4C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x1E5C534", Offset = "0x1E5C534", VA = "0x1E5C534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1E5B5C0", Offset = "0x1E5B5C0", VA = "0x1E5B5C0")]
		[DebuggerHidden]
		public <LoadLevel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1E5C178", Offset = "0x1E5C178", VA = "0x1E5C178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1E5C17C", Offset = "0x1E5C17C", VA = "0x1E5C17C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1E5C4CC", Offset = "0x1E5C4CC", VA = "0x1E5C4CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D2E8", Offset = "0xA2D2E8")]
	private sealed class <DoExitWalk>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeDoor <>4__this;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OddRavenCharacterController <occ>5__2;

		[Token(Token = "0x17000177")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x1E5BBF0", Offset = "0x1E5BBF0", VA = "0x1E5BBF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x1E5BC60", Offset = "0x1E5BC60", VA = "0x1E5BC60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1E5B660", Offset = "0x1E5B660", VA = "0x1E5B660")]
		[DebuggerHidden]
		public <DoExitWalk>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1E5B7C0", Offset = "0x1E5B7C0", VA = "0x1E5B7C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1E5B7C4", Offset = "0x1E5B7C4", VA = "0x1E5B7C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1E5BBF8", Offset = "0x1E5BBF8", VA = "0x1E5BBF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string worldId;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string challengeId;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool finishChallenge;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool loadWorld;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OcclusionBox occlusionBox;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 openScale;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 closedScale;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color notFinishedColor;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color finishedColor;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float emission;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer m_Renderer;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Light m_Light;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PhotonView photonView;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ORFmodStudioEventEmitter enterSound;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ORFmodStudioEventEmitter idleSound;

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x1E5AB80", Offset = "0x1E5AB80", VA = "0x1E5AB80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x1E5ACD0", Offset = "0x1E5ACD0", VA = "0x1E5ACD0")]
	private GameData.ChallengeData GetChallenge()
	{
		return null;
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x1E5AE4C", Offset = "0x1E5AE4C", VA = "0x1E5AE4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DA3C", Offset = "0xA3DA3C")]
	private IEnumerator OnTriggerEnter(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x1E5AF10", Offset = "0x1E5AF10", VA = "0x1E5AF10")]
	[PunRPC]
	private void EnterDoorRpc(Pickup.PickupSync pickupSync)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x1E5B064", Offset = "0x1E5B064", VA = "0x1E5B064")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DAB0", Offset = "0xA3DAB0")]
	private IEnumerator EnterDoor(bool asOnlineReaperman)
	{
		return null;
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x1E5B12C", Offset = "0x1E5B12C", VA = "0x1E5B12C")]
	private void On()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x1E5B364", Offset = "0x1E5B364", VA = "0x1E5B364")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DB14", Offset = "0xA3DB14")]
	private IEnumerator Open()
	{
		return null;
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x1E5B3F0", Offset = "0x1E5B3F0", VA = "0x1E5B3F0")]
	private void Off()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x1E5B50C", Offset = "0x1E5B50C", VA = "0x1E5B50C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DB78", Offset = "0xA3DB78")]
	private IEnumerator LoadLevel(string nextLevel, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x1E5B5EC", Offset = "0x1E5B5EC", VA = "0x1E5B5EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DBDC", Offset = "0xA3DBDC")]
	private IEnumerator DoExitWalk()
	{
		return null;
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x1E5B68C", Offset = "0x1E5B68C", VA = "0x1E5B68C")]
	public ChallengeDoor()
	{
	}
}
[Token(Token = "0x2000287")]
public class ChangeGenerativeScoreOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ScoreParameterValue;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject WorldMusic;

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x1E5C948", Offset = "0x1E5C948", VA = "0x1E5C948")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x1E5C9A0", Offset = "0x1E5C9A0", VA = "0x1E5C9A0")]
	private void OnTriggerEnter(Collider Coll)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x1E5CA78", Offset = "0x1E5CA78", VA = "0x1E5CA78")]
	public ChangeGenerativeScoreOnTrigger()
	{
	}
}
[Token(Token = "0x2000288")]
public class CheckpointEmission : MonoBehaviour
{
	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool on;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rnd;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x1E5D088", Offset = "0x1E5D088", VA = "0x1E5D088")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x1E5D100", Offset = "0x1E5D100", VA = "0x1E5D100")]
	private void On()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x1E5D10C", Offset = "0x1E5D10C", VA = "0x1E5D10C")]
	private void Off()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x1E5D1A0", Offset = "0x1E5D1A0", VA = "0x1E5D1A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x1E5D2D8", Offset = "0x1E5D2D8", VA = "0x1E5D2D8")]
	public CheckpointEmission()
	{
	}
}
[Token(Token = "0x2000289")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D2F8", Offset = "0xA2D2F8")]
public class Coffer : MonoBehaviour
{
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D35C", Offset = "0xA2D35C")]
	private sealed class <Open>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Coffer <>4__this;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000179")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x1E5EA54", Offset = "0x1E5EA54", VA = "0x1E5EA54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x1E5EAC4", Offset = "0x1E5EAC4", VA = "0x1E5EAC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1E5E1FC", Offset = "0x1E5E1FC", VA = "0x1E5E1FC")]
		[DebuggerHidden]
		public <Open>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x1E5E704", Offset = "0x1E5E704", VA = "0x1E5E704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x1E5E708", Offset = "0x1E5E708", VA = "0x1E5E708", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x1E5EA5C", Offset = "0x1E5EA5C", VA = "0x1E5EA5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D36C", Offset = "0xA2D36C")]
	private sealed class <Close>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Coffer <>4__this;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x1E5E68C", Offset = "0x1E5E68C", VA = "0x1E5E68C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x1E5E6FC", Offset = "0x1E5E6FC", VA = "0x1E5E6FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x1E5E228", Offset = "0x1E5E228", VA = "0x1E5E228")]
		[DebuggerHidden]
		public <Close>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1E5E384", Offset = "0x1E5E384", VA = "0x1E5E384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1E5E388", Offset = "0x1E5E388", VA = "0x1E5E388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1E5E694", Offset = "0x1E5E694", VA = "0x1E5E694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lid;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 openRotation;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float openTime;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WearableMenu gui;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33300", Offset = "0xA33300")]
	public ORFmodStudioEventEmitter openSound;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ORFmodStudioEventEmitter closeSound;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InteractionSystem interactionSystem;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isOpen;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool shouldBeOpen;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonView photonView;

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x1E5DDB8", Offset = "0x1E5DDB8", VA = "0x1E5DDB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x1E5DE10", Offset = "0x1E5DE10", VA = "0x1E5DE10")]
	private void On()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x1E5E008", Offset = "0x1E5E008", VA = "0x1E5E008")]
	private void Off()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x1E5DF94", Offset = "0x1E5DF94", VA = "0x1E5DF94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DDD0", Offset = "0xA3DDD0")]
	private IEnumerator Open()
	{
		return null;
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x1E5E188", Offset = "0x1E5E188", VA = "0x1E5E188")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DE34", Offset = "0xA3DE34")]
	private IEnumerator Close()
	{
		return null;
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x1E5E254", Offset = "0x1E5E254", VA = "0x1E5E254")]
	[PunRPC]
	private void SetCofferOpenRpc(bool open)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x1E5E320", Offset = "0x1E5E320", VA = "0x1E5E320")]
	public Coffer()
	{
	}
}
[Token(Token = "0x200028C")]
public class Coin : MonoBehaviour
{
	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int value;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ORFmodStudioEventEmitter PickupSound;

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x1E5EACC", Offset = "0x1E5EACC", VA = "0x1E5EACC")]
	private void Consume()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x1E5EB6C", Offset = "0x1E5EB6C", VA = "0x1E5EB6C")]
	private void HasBeenConsumed()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x1E5EB78", Offset = "0x1E5EB78", VA = "0x1E5EB78")]
	private void WasRecreated()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x1E5EB88", Offset = "0x1E5EB88", VA = "0x1E5EB88")]
	public Coin()
	{
	}
}
[Token(Token = "0x200028D")]
public class CoinLifeReward : MonoBehaviour
{
	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int CoinsToLife;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int LifesToAdd;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerCharacter pc;

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x1E5EB98", Offset = "0x1E5EB98", VA = "0x1E5EB98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x1E5ECA0", Offset = "0x1E5ECA0", VA = "0x1E5ECA0")]
	private void UpdateCoins()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x1E5ED14", Offset = "0x1E5ED14", VA = "0x1E5ED14")]
	public CoinLifeReward()
	{
	}
}
[Token(Token = "0x200028E")]
public class CollisionParticleEffect : MonoBehaviour
{
	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleEffect;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minimumImpulse;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem[] pfxPool;

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x1E5ED24", Offset = "0x1E5ED24", VA = "0x1E5ED24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x1E5F308", Offset = "0x1E5F308", VA = "0x1E5F308")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x1E5F3FC", Offset = "0x1E5F3FC", VA = "0x1E5F3FC")]
	public void PlayParticleEffectAtPoint(Vector3 point)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x1E5F4FC", Offset = "0x1E5F4FC", VA = "0x1E5F4FC")]
	private ParticleSystem GetNextAvailableParticleEffect()
	{
		return null;
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x1E5F5D8", Offset = "0x1E5F5D8", VA = "0x1E5F5D8")]
	public CollisionParticleEffect()
	{
	}
}
[Token(Token = "0x200028F")]
public class copyLod0Color : MonoBehaviour
{
	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer sourceRender;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock targetMB;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer targetRender;

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x1F60C14", Offset = "0x1F60C14", VA = "0x1F60C14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x1F61274", Offset = "0x1F61274", VA = "0x1F61274")]
	public copyLod0Color()
	{
	}
}
[Token(Token = "0x2000290")]
[ExecuteInEditMode]
public class copyLOD0StaticSetting : MonoBehaviour
{
	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Lod1Object;

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x1F60B44", Offset = "0x1F60B44", VA = "0x1F60B44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1F60C0C", Offset = "0x1F60C0C", VA = "0x1F60C0C")]
	public copyLOD0StaticSetting()
	{
	}
}
[Token(Token = "0x2000291")]
public class CreatePerformanceReport : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000292")]
	private class PerformanceReport
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Scene;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int averageFps;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maximumFps;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int minimumFps;

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xAACEFC", Offset = "0xAACEFC", VA = "0xAACEFC")]
		public PerformanceReport()
		{
		}
	}

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fpsPeriodLength;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float fpsNextMeasurement;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int framesSinceLastMeasurement;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private long totalFPS;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private long measurements;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lowestFps;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int highestFps;

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xAACB28", Offset = "0xAACB28", VA = "0xAACB28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xAACB58", Offset = "0xAACB58", VA = "0xAACB58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xAACBE8", Offset = "0xAACBE8", VA = "0xAACBE8")]
	private void SaveFPS(int fps)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xAACC1C", Offset = "0xAACC1C", VA = "0xAACC1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xAACDB0", Offset = "0xAACDB0", VA = "0xAACDB0")]
	private string GetSystemInfo()
	{
		return null;
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xAACEE4", Offset = "0xAACEE4", VA = "0xAACEE4")]
	public CreatePerformanceReport()
	{
	}
}
[Token(Token = "0x2000293")]
public abstract class CustomSpawner : MonoBehaviour
{
	[Token(Token = "0x6000D02")]
	public abstract bool ShouldBeUsed();

	[Token(Token = "0x6000D03")]
	public abstract IEnumerator Spawn();

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xAAF0B8", Offset = "0xAAF0B8", VA = "0xAAF0B8", Slot = "6")]
	public virtual void OnPostSpawn()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xAAF0BC", Offset = "0xAAF0BC", VA = "0xAAF0BC", Slot = "7")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xAAF0C0", Offset = "0xAAF0C0", VA = "0xAAF0C0")]
	protected CustomSpawner()
	{
	}
}
[Token(Token = "0x2000294")]
public class DeactivateCheckpoint : MonoBehaviour
{
	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xAB43EC", Offset = "0xAB43EC", VA = "0xAB43EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xAB452C", Offset = "0xAB452C", VA = "0xAB452C")]
	public DeactivateCheckpoint()
	{
	}
}
[Token(Token = "0x2000295")]
public class DeathCamera : MonoBehaviour
{
	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xAB4B98", Offset = "0xAB4B98", VA = "0xAB4B98")]
	public DeathCamera()
	{
	}
}
[Token(Token = "0x2000296")]
public class DeathHand : MonoBehaviour
{
	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xAB4BA0", Offset = "0xAB4BA0", VA = "0xAB4BA0")]
	public DeathHand()
	{
	}
}
[Token(Token = "0x2000297")]
public class DeveloperMenu : MonoBehaviour
{
	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int checkFreeCpuMillis;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameData GD;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GUIStyle red;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CanvasGroup hud;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FPSCounter fpsCounter;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool showDevMenu;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xAB558C", Offset = "0xAB558C", VA = "0xAB558C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xAB5688", Offset = "0xAB5688", VA = "0xAB5688")]
	private void ToggleDevMenu()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xAB5698", Offset = "0xAB5698", VA = "0xAB5698")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xAB5F24", Offset = "0xAB5F24", VA = "0xAB5F24")]
	public DeveloperMenu()
	{
	}
}
[Token(Token = "0x2000298")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D38C", Offset = "0xA2D38C")]
public class DisableHandsWhenGrabbed : MonoBehaviour
{
	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xAB7400", Offset = "0xAB7400", VA = "0xAB7400")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xAB74FC", Offset = "0xAB74FC", VA = "0xAB74FC")]
	private void WasGrabbed(SteamVR_GrabbableObject g)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xAB7650", Offset = "0xAB7650", VA = "0xAB7650")]
	private void WasReleased(SteamVR_GrabbableObject g)
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xAB77A4", Offset = "0xAB77A4", VA = "0xAB77A4")]
	public DisableHandsWhenGrabbed()
	{
	}
}
[Token(Token = "0x2000299")]
public class Door : StateMachine
{
	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string needsKey;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int keyCount;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ORFmodStudioEventEmitter IdleSound;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ORFmodStudioEventEmitter EnterSound;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer OpenIndicator;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MonoBehaviour enterScript;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool manuallyCheckOpen;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool showKeysInGUI;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator anim;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PhotonView photonView;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool isOpen;

	[Token(Token = "0x1700017D")]
	protected override bool persist
	{
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xABA300", Offset = "0xABA300", VA = "0xABA300", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xABA308", Offset = "0xABA308", VA = "0xABA308", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xABA4F8", Offset = "0xABA4F8", VA = "0xABA4F8")]
	public void AcquireTarget()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xABA5E4", Offset = "0xABA5E4", VA = "0xABA5E4")]
	private void Open()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xABA7EC", Offset = "0xABA7EC", VA = "0xABA7EC")]
	[PunRPC]
	private void OnOpenRpc()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xABA7F0", Offset = "0xABA7F0", VA = "0xABA7F0")]
	private void Close()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xABAA28", Offset = "0xABAA28", VA = "0xABAA28")]
	[PunRPC]
	private void OnCloseRpc()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xABAA2C", Offset = "0xABAA2C", VA = "0xABAA2C")]
	private void CheckOpen()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xABABC4", Offset = "0xABABC4", VA = "0xABABC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xABACCC", Offset = "0xABACCC", VA = "0xABACCC")]
	public Door()
	{
	}
}
[Token(Token = "0x200029A")]
public class DuckerTrigger : MonoBehaviour
{
	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter Sound;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int Counter;

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xABF280", Offset = "0xABF280", VA = "0xABF280")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xABF3F8", Offset = "0xABF3F8", VA = "0xABF3F8")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xABF4F0", Offset = "0xABF4F0", VA = "0xABF4F0")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xABF594", Offset = "0xABF594", VA = "0xABF594")]
	public DuckerTrigger()
	{
	}
}
[Token(Token = "0x200029B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D3F0", Offset = "0xA2D3F0")]
public class Elevator : AffectPlayerVelocity, ISetSpeed
{
	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 minPosition;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 maxPosition;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float moveSpeed;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ORFmodStudioEventEmitter sound;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 currentSpeed;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 lastSpeed;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 lastDelta;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 lastPos;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xABF6A4", Offset = "0xABF6A4", VA = "0xABF6A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xABF714", Offset = "0xABF714", VA = "0xABF714", Slot = "6")]
	public void SetSpeed(float speed)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xABF948", Offset = "0xABF948", VA = "0xABF948", Slot = "5")]
	public override Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xABF9E0", Offset = "0xABF9E0", VA = "0xABF9E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xABFC74", Offset = "0xABFC74", VA = "0xABFC74")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xABFF38", Offset = "0xABFF38", VA = "0xABFF38")]
	public Elevator()
	{
	}
}
[Token(Token = "0x200029C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D454", Offset = "0xA2D454")]
public class ElevatorLever : MonoBehaviour
{
	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Elevator elevator;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SimpleLever lever;

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xABFFD8", Offset = "0xABFFD8", VA = "0xABFFD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xAC0030", Offset = "0xAC0030", VA = "0xAC0030")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xAC0088", Offset = "0xAC0088", VA = "0xAC0088")]
	public ElevatorLever()
	{
	}
}
[Token(Token = "0x200029D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D4B8", Offset = "0xA2D4B8")]
public class EntryTunnel : MonoBehaviour
{
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D51C", Offset = "0xA2D51C")]
	private sealed class <Activate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EntryTunnel <>4__this;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xAC32A0", Offset = "0xAC32A0", VA = "0xAC32A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xAC3310", Offset = "0xAC3310", VA = "0xAC3310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xAC2EB0", Offset = "0xAC2EB0", VA = "0xAC2EB0")]
		[DebuggerHidden]
		public <Activate>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xAC2FEC", Offset = "0xAC2FEC", VA = "0xAC2FEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xAC2FF0", Offset = "0xAC2FF0", VA = "0xAC2FF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xAC32A8", Offset = "0xAC32A8", VA = "0xAC32A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableInputAfterEntrance;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TunnelLight tunnelLight;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OddRavenCharacterController player;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OddRavenCharacterInput playerInput;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _on;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OcclusionBox occlusionBox;

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xAC2BE8", Offset = "0xAC2BE8", VA = "0xAC2BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xAC2E3C", Offset = "0xAC2E3C", VA = "0xAC2E3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3DF68", Offset = "0xA3DF68")]
	private IEnumerator Activate()
	{
		return null;
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xAC2EDC", Offset = "0xAC2EDC", VA = "0xAC2EDC")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xAC2FD8", Offset = "0xAC2FD8", VA = "0xAC2FD8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xAC2FDC", Offset = "0xAC2FDC", VA = "0xAC2FDC")]
	public EntryTunnel()
	{
	}
}
[Token(Token = "0x200029F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D52C", Offset = "0xA2D52C")]
public class ExitTunnel : MonoBehaviour
{
	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool found;

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xAC364C", Offset = "0xAC364C", VA = "0xAC364C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xAC3654", Offset = "0xAC3654", VA = "0xAC3654")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xAC36D8", Offset = "0xAC36D8", VA = "0xAC36D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xAC371C", Offset = "0xAC371C", VA = "0xAC371C")]
	public ExitTunnel()
	{
	}
}
[Token(Token = "0x20002A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D590", Offset = "0xA2D590")]
public class FloorCheckpoint : BaseCheckpoint
{
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D5F4", Offset = "0xA2D5F4")]
	private sealed class <DoRespawn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xB9F2D4", Offset = "0xB9F2D4", VA = "0xB9F2D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xB9F344", Offset = "0xB9F344", VA = "0xB9F344", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xB9F1F8", Offset = "0xB9F1F8", VA = "0xB9F1F8")]
		[DebuggerHidden]
		public <DoRespawn>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xB9F234", Offset = "0xB9F234", VA = "0xB9F234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xB9F238", Offset = "0xB9F238", VA = "0xB9F238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xB9F2DC", Offset = "0xB9F2DC", VA = "0xB9F2DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool disableMeshRenderer;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color inactiveColor;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color activeColor;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Mesh replacementMesh;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4[] offsets;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer[] renderers;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock[] mpb;

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xB9E214", Offset = "0xB9E214", VA = "0xB9E214")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xB9EA4C", Offset = "0xB9EA4C", VA = "0xB9EA4C", Slot = "4")]
	public override void ActivateCheckpoint()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xB9ECDC", Offset = "0xB9ECDC", VA = "0xB9ECDC", Slot = "5")]
	protected override void DeactivateCheckpoint()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xB9EE90", Offset = "0xB9EE90", VA = "0xB9EE90")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xB9EF74", Offset = "0xB9EF74", VA = "0xB9EF74")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xB9F070", Offset = "0xB9F070", VA = "0xB9F070", Slot = "6")]
	public override void PrepareRespawn()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xB9F198", Offset = "0xB9F198", VA = "0xB9F198", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E01C", Offset = "0xA3E01C")]
	public override IEnumerator DoRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xB9F224", Offset = "0xB9F224", VA = "0xB9F224")]
	public FloorCheckpoint()
	{
	}
}
[Token(Token = "0x20002A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D604", Offset = "0xA2D604")]
public class FootSounds : MonoBehaviour
{
	[Token(Token = "0x20002A3")]
	public enum SurfaceEnum
	{
		[Token(Token = "0x4000E27")]
		Unknown0,
		[Token(Token = "0x4000E28")]
		Grass,
		[Token(Token = "0x4000E29")]
		Gravel,
		[Token(Token = "0x4000E2A")]
		Sand,
		[Token(Token = "0x4000E2B")]
		Concrete,
		[Token(Token = "0x4000E2C")]
		Stone,
		[Token(Token = "0x4000E2D")]
		Metal,
		[Token(Token = "0x4000E2E")]
		Wood
	}

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter[] soundEvents;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceEnum surface;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33348", Offset = "0xA33348")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA33348", Offset = "0xA33348")]
	public ParticleSystem bigHitGroundEffect;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem smallHitGroundEffect;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA333A8", Offset = "0xA333A8")]
	public float minVelocityForBig;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem[] runEffect;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minForwardSpeed;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	internal SurfaceEnum defaultSurface;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OddRavenCharacterController cc;

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xBA1FDC", Offset = "0xBA1FDC", VA = "0xBA1FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xBA2150", Offset = "0xBA2150", VA = "0xBA2150")]
	private void HitGround(int velocity)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xBA2248", Offset = "0xBA2248", VA = "0xBA2248")]
	public void FootDown(int foot)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xBA2510", Offset = "0xBA2510", VA = "0xBA2510")]
	public FootSounds()
	{
	}
}
[Token(Token = "0x20002A4")]
public class GameData : StateMachine
{
	[Token(Token = "0x20002A5")]
	public enum ChallengeTypeEnum
	{
		[Token(Token = "0x4000E3A")]
		Puzzle,
		[Token(Token = "0x4000E3B")]
		Action,
		[Token(Token = "0x4000E3C")]
		Build,
		[Token(Token = "0x4000E3D")]
		Platform,
		[Token(Token = "0x4000E3E")]
		Dark
	}

	[Serializable]
	[Token(Token = "0x20002A6")]
	public class ChallengeData
	{
		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string challengeId;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA33400", Offset = "0xA33400")]
		public string scene;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool finished;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ChallengeTypeEnum type;

		[NonSerialized]
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string worldId;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xBA5580", Offset = "0xBA5580", VA = "0xBA5580")]
		public ChallengeData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002A7")]
	public class WorldData
	{
		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string worldId;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA33414", Offset = "0xA33414")]
		public string scene;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeData[] challenges;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool lifeClaimAwarded;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[EventRef]
		public string VrScore;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[EventRef]
		public string ScreenScore;

		[Token(Token = "0x17000185")]
		public bool hasBeenFinished
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xBA3E54", Offset = "0xBA3E54", VA = "0xBA3E54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xBA3D68", Offset = "0xBA3D68", VA = "0xBA3D68")]
		public ChallengeData GetChallengeById(string challengeId)
		{
			return null;
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xBA37A0", Offset = "0xBA37A0", VA = "0xBA37A0")]
		public WorldData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002A8")]
	public class WearableData
	{
		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uniqueId;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool unlocked;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject instance;

		[Token(Token = "0x17000186")]
		public GameObject Instance
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xBA5588", Offset = "0xBA5588", VA = "0xBA5588")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xBA567C", Offset = "0xBA567C", VA = "0xBA567C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xBA5500", Offset = "0xBA5500", VA = "0xBA5500")]
		public WearableData()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	public struct LevelFireflies
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int collectedFireflies;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int totalFireflies;

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x8FB778", Offset = "0x8FB778", VA = "0x8FB778")]
		public LevelFireflies(int collectedFireflies, int totalFireflies)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D668", Offset = "0xA2D668")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<WorldData, bool> <>9__37_0;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xBA4E80", Offset = "0xBA4E80", VA = "0xBA4E80")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xBA4E88", Offset = "0xBA4E88", VA = "0xBA4E88")]
		internal bool <GetFinishedWorlds>b__37_0(WorldData w)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D678", Offset = "0xA2D678")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool includeLocked;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xBA4704", Offset = "0xBA4704", VA = "0xBA4704")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xBA4EB4", Offset = "0xBA4EB4", VA = "0xBA4EB4")]
		internal bool <GetWearableById>b__0(WearableData w)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D688", Offset = "0xA2D688")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xBA470C", Offset = "0xBA470C", VA = "0xBA470C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xBA4F1C", Offset = "0xBA4F1C", VA = "0xBA4F1C")]
		internal bool <GetWorldById>b__0(WorldData w)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D698", Offset = "0xA2D698")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool onlyUnlocked;

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xBA492C", Offset = "0xBA492C", VA = "0xBA492C")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xBA4F54", Offset = "0xBA4F54", VA = "0xBA4F54")]
		internal bool <GetWearables>b__0(WearableData w)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D6A8", Offset = "0xA2D6A8")]
	private sealed class <DownloadAdditionalContent>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0xBA4FD8", Offset = "0xBA4FD8", VA = "0xBA4FD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0xBA5048", Offset = "0xBA5048", VA = "0xBA5048", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xBA4D1C", Offset = "0xBA4D1C", VA = "0xBA4D1C")]
		[DebuggerHidden]
		public <DownloadAdditionalContent>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xBA4F98", Offset = "0xBA4F98", VA = "0xBA4F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xBA4F9C", Offset = "0xBA4F9C", VA = "0xBA4F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xBA4FE0", Offset = "0xBA4FE0", VA = "0xBA4FE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D6B8", Offset = "0xA2D6B8")]
	private sealed class <DownloadContent>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string id;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameData <>4__this;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0xBA5508", Offset = "0xBA5508", VA = "0xBA5508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0xBA5578", Offset = "0xBA5578", VA = "0xBA5578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xBA4DE0", Offset = "0xBA4DE0", VA = "0xBA4DE0")]
		[DebuggerHidden]
		public <DownloadContent>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xBA5050", Offset = "0xBA5050", VA = "0xBA5050", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xBA512C", Offset = "0xBA512C", VA = "0xBA512C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xBA506C", Offset = "0xBA506C", VA = "0xBA506C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xBA5510", Offset = "0xBA5510", VA = "0xBA5510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool showTutorial;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int firefliesTotal;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ListOfStrings[] firefliesPerLevel;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ListOfStrings MultipleLevelTest;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_SpriteAsset spriteAsset;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA333E0", Offset = "0xA333E0")]
	private static bool <singlePlayerMode>k__BackingField;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WorldData[] worlds;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<WorldData> SavedWorlds;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private WearableData[] wearables;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameData s_instance;

	[Token(Token = "0x17000182")]
	private static bool singlePlayerMode
	{
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xBA2590", Offset = "0xBA2590", VA = "0xBA2590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E0D0", Offset = "0xA3E0D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xBA25E0", Offset = "0xBA25E0", VA = "0xBA25E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E0E0", Offset = "0xA3E0E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public string lastLevel
	{
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xBA29D4", Offset = "0xBA29D4", VA = "0xBA29D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xBA2A60", Offset = "0xBA2A60", VA = "0xBA2A60")]
		set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public static GameData Instance
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xBA2DE8", Offset = "0xBA2DE8", VA = "0xBA2DE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xBA2EB8", Offset = "0xBA2EB8", VA = "0xBA2EB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xBA2638", Offset = "0xBA2638", VA = "0xBA2638")]
	public LevelFireflies CollectedFireflies(string levelName)
	{
		return default(LevelFireflies);
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xBA28F8", Offset = "0xBA28F8", VA = "0xBA28F8")]
	public LevelFireflies CollectedFireflies(List<string> levels)
	{
		return default(LevelFireflies);
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xBA2BB0", Offset = "0xBA2BB0", VA = "0xBA2BB0")]
	public static void ClearStatesAndStaticData()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xBA2C74", Offset = "0xBA2C74", VA = "0xBA2C74")]
	public static void SetSinglePlayerMode(bool activated)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xBA2D70", Offset = "0xBA2D70", VA = "0xBA2D70")]
	public static bool GetSinglePlayerMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xBA2DE0", Offset = "0xBA2DE0", VA = "0xBA2DE0")]
	public static bool IsVrOnlyMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xBA2F0C", Offset = "0xBA2F0C", VA = "0xBA2F0C", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xBA30F0", Offset = "0xBA30F0", VA = "0xBA30F0")]
	private void CheckFireflyClub()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xBA3608", Offset = "0xBA3608", VA = "0xBA3608", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xBA37F8", Offset = "0xBA37F8", VA = "0xBA37F8")]
	public KeyValuePair<WorldData, ChallengeData> FindWorldChallengeForScene(string scene)
	{
		return default(KeyValuePair<WorldData, ChallengeData>);
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xBA3B38", Offset = "0xBA3B38", VA = "0xBA3B38", Slot = "11")]
	public override bool GetState(string state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xBA3EF4", Offset = "0xBA3EF4", VA = "0xBA3EF4", Slot = "10")]
	public override void SetState(string state, bool value, bool persist = true, bool throwStateChangeEvent = true)
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xBA4228", Offset = "0xBA4228", VA = "0xBA4228")]
	public void SetStateWithoutSync(string state, bool value, bool persist = true, bool throwStateChangeEvent = true)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xBA42A0", Offset = "0xBA42A0", VA = "0xBA42A0")]
	public WorldData[] GetFinishedWorlds()
	{
		return null;
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xBA4390", Offset = "0xBA4390", VA = "0xBA4390")]
	public string GetWearableId(GameObject wearable)
	{
		return null;
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xBA44BC", Offset = "0xBA44BC", VA = "0xBA44BC")]
	public void ResetWorldState()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xBA461C", Offset = "0xBA461C", VA = "0xBA461C")]
	public WearableData GetWearableById(string id, bool includeLocked = false)
	{
		return null;
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xBA3CA4", Offset = "0xBA3CA4", VA = "0xBA3CA4")]
	public WorldData GetWorldById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xBA4714", Offset = "0xBA4714", VA = "0xBA4714")]
	public ChallengeData GetNextChallenge(string worldId, string challengeId)
	{
		return null;
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xBA4864", Offset = "0xBA4864", VA = "0xBA4864")]
	public WearableData[] GetWearables(bool onlyUnlocked = true)
	{
		return null;
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xBA4934", Offset = "0xBA4934", VA = "0xBA4934")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xBA3348", Offset = "0xBA3348", VA = "0xBA3348")]
	private void LoadGameData()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xBA49E0", Offset = "0xBA49E0", VA = "0xBA49E0")]
	private void SaveGameData()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xBA35A8", Offset = "0xBA35A8", VA = "0xBA35A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E0F0", Offset = "0xA3E0F0")]
	private IEnumerator DownloadAdditionalContent()
	{
		return null;
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xBA4D48", Offset = "0xBA4D48", VA = "0xBA4D48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E154", Offset = "0xA3E154")]
	private IEnumerator DownloadContent(string id)
	{
		return null;
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xBA4E0C", Offset = "0xBA4E0C", VA = "0xBA4E0C")]
	public GameData()
	{
	}
}
[Token(Token = "0x20002B0")]
public class GlubGlubDistanceSound : MonoBehaviour
{
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D6C8", Offset = "0xA2D6C8")]
	private sealed class <CheckDistance>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlubGlubDistanceSound <>4__this;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForEndOfFrame <waitframe>5__3;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xBA7E0C", Offset = "0xBA7E0C", VA = "0xBA7E0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xBA7E7C", Offset = "0xBA7E7C", VA = "0xBA7E7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xBA7B30", Offset = "0xBA7B30", VA = "0xBA7B30")]
		[DebuggerHidden]
		public <CheckDistance>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xBA7B6C", Offset = "0xBA7B6C", VA = "0xBA7B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xBA7B70", Offset = "0xBA7B70", VA = "0xBA7B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xBA7E14", Offset = "0xBA7E14", VA = "0xBA7E14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float WaitTime;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ORFmodStudioEventEmitter GlubSound;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerCharacter Player;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xBA7A68", Offset = "0xBA7A68", VA = "0xBA7A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xBA7ABC", Offset = "0xBA7ABC", VA = "0xBA7ABC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E258", Offset = "0xA3E258")]
	private IEnumerator CheckDistance()
	{
		return null;
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xBA7B5C", Offset = "0xBA7B5C", VA = "0xBA7B5C")]
	public GlubGlubDistanceSound()
	{
	}
}
[Token(Token = "0x20002B2")]
public class GrabbableTutorial : MonoBehaviour
{
	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xBA8790", Offset = "0xBA8790", VA = "0xBA8790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xBA8828", Offset = "0xBA8828", VA = "0xBA8828")]
	private void Disable(SteamVR_GrabbableObject g)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xBA8860", Offset = "0xBA8860", VA = "0xBA8860")]
	public GrabbableTutorial()
	{
	}
}
[Token(Token = "0x20002B3")]
public class HeartBeat : MonoBehaviour
{
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D6D8", Offset = "0xA2D6D8")]
	private sealed class <Heartbeat>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeartBeat <>4__this;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitShort>5__2;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <waitLong>5__3;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xBA99A0", Offset = "0xBA99A0", VA = "0xBA99A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xBA9A10", Offset = "0xBA9A10", VA = "0xBA9A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xBA94CC", Offset = "0xBA94CC", VA = "0xBA94CC")]
		[DebuggerHidden]
		public <Heartbeat>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xBA9830", Offset = "0xBA9830", VA = "0xBA9830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xBA9834", Offset = "0xBA9834", VA = "0xBA9834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xBA99A8", Offset = "0xBA99A8", VA = "0xBA99A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool touchesCarly;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WandComponent controller;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerCharacter player;

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xBA9400", Offset = "0xBA9400", VA = "0xBA9400")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xBA9458", Offset = "0xBA9458", VA = "0xBA9458")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E30C", Offset = "0xA3E30C")]
	private IEnumerator Heartbeat()
	{
		return null;
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xBA94F8", Offset = "0xBA94F8", VA = "0xBA94F8")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xBA96A0", Offset = "0xBA96A0", VA = "0xBA96A0")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xBA97D4", Offset = "0xBA97D4", VA = "0xBA97D4")]
	private void StopHeartbeat()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xBA9828", Offset = "0xBA9828", VA = "0xBA9828")]
	public HeartBeat()
	{
	}
}
[Token(Token = "0x20002B5")]
public class HingeDoor : MonoBehaviour
{
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D6E8", Offset = "0xA2D6E8")]
	private sealed class <OpenIt>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HingeDoor <>4__this;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <openAngle>5__2;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xBACFE4", Offset = "0xBACFE4", VA = "0xBACFE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xBAD054", Offset = "0xBAD054", VA = "0xBAD054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xBAC83C", Offset = "0xBAC83C", VA = "0xBAC83C")]
		[DebuggerHidden]
		public <OpenIt>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xBACD18", Offset = "0xBACD18", VA = "0xBACD18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xBACD1C", Offset = "0xBACD1C", VA = "0xBACD1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xBACFEC", Offset = "0xBACFEC", VA = "0xBACFEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D6F8", Offset = "0xA2D6F8")]
	private sealed class <CloseIt>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HingeDoor <>4__this;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <openAngle>5__2;

		[Token(Token = "0x17000191")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0xBACCA0", Offset = "0xBACCA0", VA = "0xBACCA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0xBACD10", Offset = "0xBACD10", VA = "0xBACD10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xBAC908", Offset = "0xBAC908", VA = "0xBAC908")]
		[DebuggerHidden]
		public <CloseIt>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xBAC948", Offset = "0xBAC948", VA = "0xBAC948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xBAC94C", Offset = "0xBAC94C", VA = "0xBAC94C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xBACCA8", Offset = "0xBACCA8", VA = "0xBACCA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float openedAngle;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoxCollider doorCollider;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33448", Offset = "0xA33448")]
	public ORFmodStudioEventEmitter openSound;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ORFmodStudioEventEmitter closeSound;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion initialRotation;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject safetyCollision;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float elapsed;

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xBAC670", Offset = "0xBAC670", VA = "0xBAC670")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xBAC79C", Offset = "0xBAC79C", VA = "0xBAC79C")]
	private void On()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xBAC7C8", Offset = "0xBAC7C8", VA = "0xBAC7C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E3C0", Offset = "0xA3E3C0")]
	private IEnumerator OpenIt()
	{
		return null;
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xBAC868", Offset = "0xBAC868", VA = "0xBAC868")]
	private void Off()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xBAC894", Offset = "0xBAC894", VA = "0xBAC894")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E424", Offset = "0xA3E424")]
	private IEnumerator CloseIt()
	{
		return null;
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xBAC934", Offset = "0xBAC934", VA = "0xBAC934")]
	public HingeDoor()
	{
	}
}
[Token(Token = "0x20002B8")]
public interface IIntegration
{
	[Token(Token = "0x6000DB4")]
	void Init();

	[Token(Token = "0x6000DB5")]
	IEnumerator UnlockAchievement(string id);

	[Token(Token = "0x6000DB6")]
	IEnumerator AddAchievmentCount(string id, int count);

	[Token(Token = "0x6000DB7")]
	void Update();

	[Token(Token = "0x6000DB8")]
	void Cleanup();
}
[Token(Token = "0x20002B9")]
public class OculusIntegration : UnityEngine.Object, IIntegration
{
	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D708", Offset = "0xA2D708")]
	private sealed class <AddAchievmentCount>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x1E7FB3C", Offset = "0x1E7FB3C", VA = "0x1E7FB3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x1E7FBAC", Offset = "0x1E7FBAC", VA = "0x1E7FBAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1E7FAF4", Offset = "0x1E7FAF4", VA = "0x1E7FAF4")]
		[DebuggerHidden]
		public <AddAchievmentCount>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1E7FB20", Offset = "0x1E7FB20", VA = "0x1E7FB20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1E7FB24", Offset = "0x1E7FB24", VA = "0x1E7FB24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1E7FB44", Offset = "0x1E7FB44", VA = "0x1E7FB44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D718", Offset = "0xA2D718")]
	private sealed class <UnlockAchievement>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x1E7FBFC", Offset = "0x1E7FBFC", VA = "0x1E7FBFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x1E7FC6C", Offset = "0x1E7FC6C", VA = "0x1E7FC6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x1E7FBB4", Offset = "0x1E7FBB4", VA = "0x1E7FBB4")]
		[DebuggerHidden]
		public <UnlockAchievement>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1E7FBE0", Offset = "0x1E7FBE0", VA = "0x1E7FBE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1E7FBE4", Offset = "0x1E7FBE4", VA = "0x1E7FBE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1E7FC04", Offset = "0x1E7FC04", VA = "0x1E7FC04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string userName;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasCalledInit;

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xE7EDD0", Offset = "0xE7EDD0", VA = "0xE7EDD0", Slot = "4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xE7F028", Offset = "0xE7F028", VA = "0xE7F028", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E528", Offset = "0xA3E528")]
	public IEnumerator AddAchievmentCount(string id, int count)
	{
		return null;
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xE7F088", Offset = "0xE7F088", VA = "0xE7F088", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E58C", Offset = "0xA3E58C")]
	public IEnumerator UnlockAchievement(string id)
	{
		return null;
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xE7F0E8", Offset = "0xE7F0E8", VA = "0xE7F0E8", Slot = "7")]
	public void Update()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xE7F0EC", Offset = "0xE7F0EC", VA = "0xE7F0EC", Slot = "8")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xE7F0F0", Offset = "0xE7F0F0", VA = "0xE7F0F0")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xE7F22C", Offset = "0xE7F22C", VA = "0xE7F22C")]
	private void GetLoggedInOculusUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xE7F34C", Offset = "0xE7F34C", VA = "0xE7F34C")]
	public OculusIntegration()
	{
	}
}
[Token(Token = "0x20002BC")]
public class PlatformIntegration : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D728", Offset = "0xA2D728")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<string> <>9__5_0;

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1E9ED64", Offset = "0x1E9ED64", VA = "0x1E9ED64")]
		public <>c()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x1E9ED6C", Offset = "0x1E9ED6C", VA = "0x1E9ED6C")]
		internal void <OnEnable>b__5_0(string msg)
		{
		}
	}

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static IIntegration Integration;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<string> EntitlementFailed;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static PlatformIntegration activeInstance;

	[Token(Token = "0x17000197")]
	public string version
	{
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x1E9E6A0", Offset = "0x1E9E6A0", VA = "0x1E9E6A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x1E9E70C", Offset = "0x1E9E70C", VA = "0x1E9E70C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x1E9EB0C", Offset = "0x1E9EB0C", VA = "0x1E9EB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x1E9EBD0", Offset = "0x1E9EBD0", VA = "0x1E9EBD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x1E9ECF8", Offset = "0x1E9ECF8", VA = "0x1E9ECF8")]
	public PlatformIntegration()
	{
	}
}
[Token(Token = "0x20002BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D738", Offset = "0xA2D738")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D738", Offset = "0xA2D738")]
public class KeyAnimal : MonoBehaviour
{
	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject key;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform deathCage;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform girlCage;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NavMeshAgent m_navAgent;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject m_vivePlayer;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rect deathCageArea;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rect girlCageArea;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_searching;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FixedJoint m_joint;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xCE13CC", Offset = "0xCE13CC", VA = "0xCE13CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xCE1638", Offset = "0xCE1638", VA = "0xCE1638")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xCE1830", Offset = "0xCE1830", VA = "0xCE1830")]
	private void ReleaseKey()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xCE1870", Offset = "0xCE1870", VA = "0xCE1870")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xCE1B74", Offset = "0xCE1B74", VA = "0xCE1B74")]
	public KeyAnimal()
	{
	}
}
[Token(Token = "0x20002BF")]
public class LegacyPuzzle : MonoBehaviour
{
	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] pattern;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpawnPoint[] spawns;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float stateTime;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int state;

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x1E24BF0", Offset = "0x1E24BF0", VA = "0x1E24BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x1E24BFC", Offset = "0x1E24BFC", VA = "0x1E24BFC")]
	private void StartState(int s)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x1E24D7C", Offset = "0x1E24D7C", VA = "0x1E24D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x1E24E00", Offset = "0x1E24E00", VA = "0x1E24E00")]
	public LegacyPuzzle()
	{
	}
}
[Token(Token = "0x20002C0")]
public class FireflyClub_RememberEntrance : MonoBehaviour
{
	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string entrance;

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xAC8964", Offset = "0xAC8964", VA = "0xAC8964")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xAC8A00", Offset = "0xAC8A00", VA = "0xAC8A00")]
	public FireflyClub_RememberEntrance()
	{
	}
}
[Token(Token = "0x20002C1")]
public class Hub_Dip : InputComponent
{
	[Token(Token = "0x20002C2")]
	public enum DialogKind
	{
		[Token(Token = "0x4000EAE")]
		NotOpen,
		[Token(Token = "0x4000EAF")]
		HundredPrecent,
		[Token(Token = "0x4000EB0")]
		IsOpen,
		[Token(Token = "0x4000EB1")]
		NeedMoreFireflies
	}

	[Serializable]
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D7C4", Offset = "0xA2D7C4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameData.ChallengeData, bool> <>9__25_0;

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xBAF58C", Offset = "0xBAF58C", VA = "0xBAF58C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xBAF594", Offset = "0xBAF594", VA = "0xBAF594")]
		internal bool <OnUpdate>b__25_0(GameData.ChallengeData c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D7D4", Offset = "0xA2D7D4")]
	private sealed class <Talk>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hub_Dip <>4__this;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasGroup[] dialog;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int nextLevel;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForMultiButtonPress <waitForButton>5__2;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <rot>5__3;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__4;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0xBB010C", Offset = "0xBB010C", VA = "0xBB010C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0xBB017C", Offset = "0xBB017C", VA = "0xBB017C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xBAF40C", Offset = "0xBAF40C", VA = "0xBAF40C")]
		[DebuggerHidden]
		public <Talk>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xBAF5F0", Offset = "0xBAF5F0", VA = "0xBAF5F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xBAF5F4", Offset = "0xBAF5F4", VA = "0xBAF5F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xBB0114", Offset = "0xBB0114", VA = "0xBB0114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton talkButton;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform talkPosition;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CanvasGroup[] notOpen;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CanvasGroup[] isOpen;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CanvasGroup[] needMoreFireflies;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CanvasGroup[] hundredPercent;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33480", Offset = "0xA33480")]
	public ORFmodStudioEventEmitter talkSound;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA334B8", Offset = "0xA334B8")]
	public VrButton firstButton;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VrButton secondButton;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public OddRavenVrPriorityOrder firstPriorityOrder;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OddRavenVrPriorityOrder secondPriorityOrder;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CanvasGroup pushFirstButton;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CanvasGroup waitingFirstButton;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CanvasGroup pushSecondButton;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CanvasGroup waitingSecondButton;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool canActivate;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OddRavenCharacterController player;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OddRavenCharacterInput input;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Canvas canvas;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ShowTutorial showTutorial;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private PhotonView photonView;

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xBAE65C", Offset = "0xBAE65C", VA = "0xBAE65C", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xBAE6F0", Offset = "0xBAE6F0", VA = "0xBAE6F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xBAE724", Offset = "0xBAE724", VA = "0xBAE724")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xBAE754", Offset = "0xBAE754", VA = "0xBAE754")]
	private void SetupPlayer()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xBAE7E4", Offset = "0xBAE7E4", VA = "0xBAE7E4", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xBAF2E4", Offset = "0xBAF2E4", VA = "0xBAF2E4")]
	[PunRPC]
	private void TalkRpc(byte dialogId, DialogKind kind, int nextLevel)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xBAF238", Offset = "0xBAF238", VA = "0xBAF238")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E6A0", Offset = "0xA3E6A0")]
	private IEnumerator Talk(CanvasGroup[] dialog, int nextLevel)
	{
		return null;
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xBAF438", Offset = "0xBAF438", VA = "0xBAF438")]
	public Hub_Dip()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xBAF440", Offset = "0xBAF440", VA = "0xBAF440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E704", Offset = "0xA3E704")]
	private void <Talk>b__28_0()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xBAF4B4", Offset = "0xBAF4B4", VA = "0xBAF4B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3E714", Offset = "0xA3E714")]
	private void <Talk>b__28_1()
	{
	}
}
[Token(Token = "0x20002C5")]
public class Hub_Ending : CustomSpawner
{
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D7E4", Offset = "0xA2D7E4")]
	private sealed class <Start>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hub_Ending <>4__this;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xBB33B0", Offset = "0xBB33B0", VA = "0xBB33B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xBB3420", Offset = "0xBB3420", VA = "0xBB3420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xBB01F8", Offset = "0xBB01F8", VA = "0xBB01F8")]
		[DebuggerHidden]
		public <Start>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xBB30FC", Offset = "0xBB30FC", VA = "0xBB30FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xBB3100", Offset = "0xBB3100", VA = "0xBB3100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xBB33B8", Offset = "0xBB33B8", VA = "0xBB33B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D7F4", Offset = "0xA2D7F4")]
	private sealed class <OnTriggerEnterRoutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hub_Ending <>4__this;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OddRavenCharacterController <player>5__2;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OddRavenCharacterInput <input>5__3;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForMultiButtonPress <waitForButton>5__4;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <hasBeenFinished>5__5;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <rot>5__6;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CanvasGroup[] <dialogs>5__7;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <i>5__8;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xBB2D24", Offset = "0xBB2D24", VA = "0xBB2D24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xBB2D94", Offset = "0xBB2D94", VA = "0xBB2D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xBB0694", Offset = "0xBB0694", VA = "0xBB0694")]
		[DebuggerHidden]
		public <OnTriggerEnterRoutine>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xBB1E9C", Offset = "0xBB1E9C", VA = "0xBB1E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xBB1EA0", Offset = "0xBB1EA0", VA = "0xBB1EA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xBB2D2C", Offset = "0xBB2D2C", VA = "0xBB2D2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D804", Offset = "0xA2D804")]
	private sealed class <EndSequence>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hub_Ending <>4__this;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OddRavenCharacterController <player>5__2;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera <reaperMan>5__3;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator <anim>5__4;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock <mpb>5__5;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color <endColor>5__6;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <time>5__7;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <t>5__8;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xBB1C8C", Offset = "0xBB1C8C", VA = "0xBB1C8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xBB1CFC", Offset = "0xBB1CFC", VA = "0xBB1CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xBB0734", Offset = "0xBB0734", VA = "0xBB0734")]
		[DebuggerHidden]
		public <EndSequence>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xBB0DFC", Offset = "0xBB0DFC", VA = "0xBB0DFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xBB0E00", Offset = "0xBB0E00", VA = "0xBB0E00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xBB1C94", Offset = "0xBB1C94", VA = "0xBB1C94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D814", Offset = "0xA2D814")]
	private sealed class <StartSequence>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hub_Ending <>4__this;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OddRavenCharacterController <player>5__2;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xBB3A30", Offset = "0xBB3A30", VA = "0xBB3A30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xBB3AA0", Offset = "0xBB3AA0", VA = "0xBB3AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xBB07D4", Offset = "0xBB07D4", VA = "0xBB07D4")]
		[DebuggerHidden]
		public <StartSequence>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xBB3428", Offset = "0xBB3428", VA = "0xBB3428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xBB342C", Offset = "0xBB342C", VA = "0xBB342C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xBB3A38", Offset = "0xBB3A38", VA = "0xBB3A38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D824", Offset = "0xA2D824")]
	private sealed class <Show>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hub_Ending <>4__this;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <showTime>5__2;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0xBB2E60", Offset = "0xBB2E60", VA = "0xBB2E60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0xBB2ED0", Offset = "0xBB2ED0", VA = "0xBB2ED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xBB0874", Offset = "0xBB0874", VA = "0xBB0874")]
		[DebuggerHidden]
		public <Show>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xBB2D9C", Offset = "0xBB2D9C", VA = "0xBB2D9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xBB2DA0", Offset = "0xBB2DA0", VA = "0xBB2DA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xBB2E68", Offset = "0xBB2E68", VA = "0xBB2E68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D834", Offset = "0xA2D834")]
	private sealed class <Hide>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hub_Ending <>4__this;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <showTime>5__2;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0xBB1E24", Offset = "0xBB1E24", VA = "0xBB1E24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xBB1E94", Offset = "0xBB1E94", VA = "0xBB1E94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xBB0914", Offset = "0xBB0914", VA = "0xBB0914")]
		[DebuggerHidden]
		public <Hide>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xBB1D04", Offset = "0xBB1D04", VA = "0xBB1D04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xBB1D08", Offset = "0xBB1D08", VA = "0xBB1D08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xBB1E2C", Offset = "0xBB1E2C", VA = "0xBB1E2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D844", Offset = "0xA2D844")]
	private sealed class <Spawn>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xBB3084", Offset = "0xBB3084", VA = "0xBB3084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0xBB30F4", Offset = "0xBB30F4", VA = "0xBB30F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xBB0CE0", Offset = "0xBB0CE0", VA = "0xBB0CE0")]
		[DebuggerHidden]
		public <Spawn>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xBB2ED8", Offset = "0xBB2ED8", VA = "0xBB2ED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xBB2EDC", Offset = "0xBB2EDC", VA = "0xBB2EDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xBB308C", Offset = "0xBB308C", VA = "0xBB308C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trebuchet;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem beacon;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform talkPosition;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform lookAtTarget;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject waitingFx;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dissolvingCarly;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dissolve image;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform endingLookAt;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA334F0", Offset = "0xA334F0")]
	public Renderer hole;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem tunnel;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OcclusionBox occlusionBox;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33528", Offset = "0xA33528")]
	public CanvasGroup background;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup[] introDialogs;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup[] outroDialogs;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33560", Offset = "0xA33560")]
	public VrButton firstButton;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public VrButton secondButton;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OddRavenVrPriorityOrder firstPriorityOrder;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public OddRavenVrPriorityOrder secondPriorityOrder;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CanvasGroup pushFirstButton;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CanvasGroup waitingFirstButton;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CanvasGroup pushSecondButton;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CanvasGroup waitingSecondButton;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33598", Offset = "0xA33598")]
	public ActivatableCameraPosition dialogCamera;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ActivatableCameraPosition exitCamera;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ActivatableCameraPosition endingCamera;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA335D0", Offset = "0xA335D0")]
	public ORFmodStudioEventEmitter talkSound;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ORFmodStudioEventEmitter endingMusic;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ORFmodStudioEventEmitter carlyTouch;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33608", Offset = "0xA33608")]
	public Renderer[] fadeRenderers;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public PostGameCredits credits;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameData.WorldData world;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PhotonView photonView;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool hasTriggered;

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xBB0184", Offset = "0xBB0184", VA = "0xBB0184")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E774", Offset = "0xA3E774")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xBB0224", Offset = "0xBB0224", VA = "0xBB0224")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xBB031C", Offset = "0xBB031C", VA = "0xBB031C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xBB05DC", Offset = "0xBB05DC", VA = "0xBB05DC")]
	[PunRPC]
	private void OnTriggerEnterRpc(byte dialogId)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xBB0568", Offset = "0xBB0568", VA = "0xBB0568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E7E8", Offset = "0xA3E7E8")]
	private IEnumerator OnTriggerEnterRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xBB06C0", Offset = "0xBB06C0", VA = "0xBB06C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E84C", Offset = "0xA3E84C")]
	private IEnumerator EndSequence()
	{
		return null;
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xBB0760", Offset = "0xBB0760", VA = "0xBB0760")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E8B0", Offset = "0xA3E8B0")]
	private IEnumerator StartSequence()
	{
		return null;
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xBB0800", Offset = "0xBB0800", VA = "0xBB0800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E914", Offset = "0xA3E914")]
	private IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xBB08A0", Offset = "0xBB08A0", VA = "0xBB08A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E978", Offset = "0xA3E978")]
	private IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xBB0940", Offset = "0xBB0940", VA = "0xBB0940")]
	private void SetOpen(float open)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xBB0C14", Offset = "0xBB0C14", VA = "0xBB0C14", Slot = "4")]
	public override bool ShouldBeUsed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xBB0C80", Offset = "0xBB0C80", VA = "0xBB0C80", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3E9DC", Offset = "0xA3E9DC")]
	public override IEnumerator Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xBB0D0C", Offset = "0xBB0D0C", VA = "0xBB0D0C")]
	public Hub_Ending()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xBB0D14", Offset = "0xBB0D14", VA = "0xBB0D14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EA40", Offset = "0xA3EA40")]
	private void <OnTriggerEnterRoutine>b__39_0()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xBB0D88", Offset = "0xBB0D88", VA = "0xBB0D88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EA50", Offset = "0xA3EA50")]
	private void <OnTriggerEnterRoutine>b__39_1()
	{
	}
}
[Token(Token = "0x20002CD")]
public class Hub_TrebuchetDialogs : MonoBehaviour
{
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D854", Offset = "0xA2D854")]
	private sealed class <SnapCarlyToGround>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OddRavenCharacterController occ;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OddRavenCharacterInput input;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Hub_TrebuchetDialogs <>4__this;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xBB4D08", Offset = "0xBB4D08", VA = "0xBB4D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xBB4D78", Offset = "0xBB4D78", VA = "0xBB4D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xBB3BD8", Offset = "0xBB3BD8", VA = "0xBB3BD8")]
		[DebuggerHidden]
		public <SnapCarlyToGround>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xBB4A84", Offset = "0xBB4A84", VA = "0xBB4A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xBB4A88", Offset = "0xBB4A88", VA = "0xBB4A88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xBB4D10", Offset = "0xBB4D10", VA = "0xBB4D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D864", Offset = "0xA2D864")]
	private sealed class <OnTriggerEnterRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hub_TrebuchetDialogs <>4__this;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider other;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OddRavenCharacterController <occ>5__2;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OddRavenCharacterInput <input>5__3;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <talkPosition>5__4;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LookAtTarget <lookAtTarget>5__5;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xBB4A0C", Offset = "0xBB4A0C", VA = "0xBB4A0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xBB4A7C", Offset = "0xBB4A7C", VA = "0xBB4A7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xBB3C9C", Offset = "0xBB3C9C", VA = "0xBB3C9C")]
		[DebuggerHidden]
		public <OnTriggerEnterRoutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xBB416C", Offset = "0xBB416C", VA = "0xBB416C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xBB4170", Offset = "0xBB4170", VA = "0xBB4170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xBB4A14", Offset = "0xBB4A14", VA = "0xBB4A14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D874", Offset = "0xA2D874")]
	private sealed class <WaitOnCharacter>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xBB4E4C", Offset = "0xBB4E4C", VA = "0xBB4E4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xBB4EBC", Offset = "0xBB4EBC", VA = "0xBB4EBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xBB3E94", Offset = "0xBB3E94", VA = "0xBB3E94")]
		[DebuggerHidden]
		public <WaitOnCharacter>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xBB4D80", Offset = "0xBB4D80", VA = "0xBB4D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xBB4D84", Offset = "0xBB4D84", VA = "0xBB4D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xBB4E54", Offset = "0xBB4E54", VA = "0xBB4E54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject beacon;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem beaconPfx;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DialogManager standardDialog;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DialogManager introDialog;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DialogManager introDidTalk;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33640", Offset = "0xA33640")]
	public DialogManager demoIntroDialog;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DialogManager demoOutroDialog;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33678", Offset = "0xA33678")]
	public DialogManager level2introDialog;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DialogManager level2DidTalk;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA336B0", Offset = "0xA336B0")]
	public DialogManager level3introDialog;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DialogManager level3DidTalk;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA336E8", Offset = "0xA336E8")]
	public DialogManager level4introDialog;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public DialogManager level4DidTalk;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33720", Offset = "0xA33720")]
	public DialogManager level5introDialog;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public DialogManager level5DidTalk;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33758", Offset = "0xA33758")]
	public DialogManager level6introDialog;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public DialogManager level6DidTalk;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33790", Offset = "0xA33790")]
	public DialogManager level7introDialog;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public DialogManager level7DidTalk;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA337C8", Offset = "0xA337C8")]
	public DialogManager level8introDialog;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DialogManager level8DidTalk;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public DialogManager level8_2IntroDialog;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public DialogManager level8_3IntroDialog;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public DialogManager level8_4IntroDialog;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33800", Offset = "0xA33800")]
	public DialogManager endGameDialog;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool talkedToTrebuchetThisTime;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PhotonView photonView;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isRunning;

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xBB3AA8", Offset = "0xBB3AA8", VA = "0xBB3AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xBB3B28", Offset = "0xBB3B28", VA = "0xBB3B28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EC90", Offset = "0xA3EC90")]
	private IEnumerator SnapCarlyToGround(OddRavenCharacterController occ, OddRavenCharacterInput input)
	{
		return null;
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xBB3C04", Offset = "0xBB3C04", VA = "0xBB3C04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3ECF4", Offset = "0xA3ECF4")]
	private IEnumerator OnTriggerEnterRoutine(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xBB3CC8", Offset = "0xBB3CC8", VA = "0xBB3CC8")]
	[PunRPC]
	private void OnTriggerEnterRpc(byte dialogId)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xBB3E20", Offset = "0xBB3E20", VA = "0xBB3E20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3ED68", Offset = "0xA3ED68")]
	private IEnumerator WaitOnCharacter(Action action)
	{
		return null;
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xBB3EC0", Offset = "0xBB3EC0", VA = "0xBB3EC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xBB40E4", Offset = "0xBB40E4", VA = "0xBB40E4")]
	public Hub_TrebuchetDialogs()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xBB40EC", Offset = "0xBB40EC", VA = "0xBB40EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3EDCC", Offset = "0xA3EDCC")]
	private void <OnTriggerEnterRpc>b__31_0()
	{
	}
}
[Token(Token = "0x20002D1")]
public class HubSpawner : CustomSpawner
{
	[Serializable]
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D884", Offset = "0xA2D884")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameData.WorldData, bool> <>9__14_0;

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xBAD808", Offset = "0xBAD808", VA = "0xBAD808")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xBAD810", Offset = "0xBAD810", VA = "0xBAD810")]
		internal bool <ShouldBeUsed>b__14_0(GameData.WorldData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D894", Offset = "0xA2D894")]
	private sealed class <Spawn>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HubSpawner <>4__this;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xBAD9BC", Offset = "0xBAD9BC", VA = "0xBAD9BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0xBADA2C", Offset = "0xBADA2C", VA = "0xBADA2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xBAD58C", Offset = "0xBAD58C", VA = "0xBAD58C")]
		[DebuggerHidden]
		public <Spawn>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xBAD8A8", Offset = "0xBAD8A8", VA = "0xBAD8A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xBAD8AC", Offset = "0xBAD8AC", VA = "0xBAD8AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xBAD9C4", Offset = "0xBAD9C4", VA = "0xBAD9C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D8A4", Offset = "0xA2D8A4")]
	private sealed class <SpawnPlayerFirst>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HubSpawner <>4__this;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OddRavenCharacterInput <input>5__2;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OddRavenCharacterController <occ>5__3;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ORFmodStudioEventEmitter <closeSound>5__4;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <pos>5__5;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <openTime>5__6;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <closeTime>5__7;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <i>5__8;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0xBAE3CC", Offset = "0xBAE3CC", VA = "0xBAE3CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0xBAE43C", Offset = "0xBAE43C", VA = "0xBAE43C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xBAD630", Offset = "0xBAD630", VA = "0xBAD630")]
		[DebuggerHidden]
		public <SpawnPlayerFirst>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xBADC44", Offset = "0xBADC44", VA = "0xBADC44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xBADC48", Offset = "0xBADC48", VA = "0xBADC48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xBAE3D4", Offset = "0xBAE3D4", VA = "0xBAE3D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D8B4", Offset = "0xA2D8B4")]
	private sealed class <SpawnPlayerNormal>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HubSpawner <>4__this;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xBAE5E4", Offset = "0xBAE5E4", VA = "0xBAE5E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0xBAE654", Offset = "0xBAE654", VA = "0xBAE654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xBAD6D0", Offset = "0xBAD6D0", VA = "0xBAD6D0")]
		[DebuggerHidden]
		public <SpawnPlayerNormal>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xBAE444", Offset = "0xBAE444", VA = "0xBAE444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xBAE448", Offset = "0xBAE448", VA = "0xBAE448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xBAE5EC", Offset = "0xBAE5EC", VA = "0xBAE5EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D8C4", Offset = "0xA2D8C4")]
	private sealed class <SpawnPlayerEnding>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HubSpawner <>4__this;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xBADBCC", Offset = "0xBADBCC", VA = "0xBADBCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xBADC3C", Offset = "0xBADC3C", VA = "0xBADC3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xBAD770", Offset = "0xBAD770", VA = "0xBAD770")]
		[DebuggerHidden]
		public <SpawnPlayerEnding>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xBADA34", Offset = "0xBADA34", VA = "0xBADA34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xBADA38", Offset = "0xBADA38", VA = "0xBADA38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xBADBD4", Offset = "0xBADBD4", VA = "0xBADBD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerStartPosition firstStartPosition;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerStartPosition normalStartPosition;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform firstReapermanStartPosition;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33838", Offset = "0xA33838")]
	public MoveToPosition subway;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform staticSubway;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform openableDoor;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33870", Offset = "0xA33870")]
	public GameObject trebuchet;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ActivatableCameraPosition cameraPosition;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA338A8", Offset = "0xA338A8")]
	public PlayerStartPosition endingStartPosition;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ActivatableCameraPosition endingCameraPosition;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject endingTrebuchet;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA338E0", Offset = "0xA338E0")]
	public Transform fireflyClubCamera;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool firstTime;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool fireflyClubShouldOpen;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool showEnding;

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xBAD0D4", Offset = "0xBAD0D4", VA = "0xBAD0D4", Slot = "4")]
	public override bool ShouldBeUsed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xBAD2FC", Offset = "0xBAD2FC", VA = "0xBAD2FC", Slot = "7")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xBAD518", Offset = "0xBAD518", VA = "0xBAD518", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EECC", Offset = "0xA3EECC")]
	public override IEnumerator Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xBAD5B8", Offset = "0xBAD5B8", VA = "0xBAD5B8", Slot = "6")]
	public override void OnPostSpawn()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xBAD5BC", Offset = "0xBAD5BC", VA = "0xBAD5BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EF30", Offset = "0xA3EF30")]
	private IEnumerator SpawnPlayerFirst()
	{
		return null;
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xBAD65C", Offset = "0xBAD65C", VA = "0xBAD65C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EF94", Offset = "0xA3EF94")]
	private IEnumerator SpawnPlayerNormal()
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xBAD6FC", Offset = "0xBAD6FC", VA = "0xBAD6FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3EFF8", Offset = "0xA3EFF8")]
	private IEnumerator SpawnPlayerEnding()
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xBAD79C", Offset = "0xBAD79C", VA = "0xBAD79C")]
	public HubSpawner()
	{
	}
}
[Token(Token = "0x20002D7")]
public class Intro : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002D8")]
	public struct IntroSlide
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CanvasGroup screenSlide;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CanvasGroup screenPressButton;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CanvasGroup vrSlide;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup vrPressButton;
	}

	[Serializable]
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D8D4", Offset = "0xA2D8D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<InputDeviceBase, string> <>9__13_0;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<InputDeviceBase, string> <>9__13_1;

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xCDF6A8", Offset = "0xCDF6A8", VA = "0xCDF6A8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xCDF6B0", Offset = "0xCDF6B0", VA = "0xCDF6B0")]
		internal string <OnGUI>b__13_0(InputDeviceBase d)
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xCDF6E4", Offset = "0xCDF6E4", VA = "0xCDF6E4")]
		internal string <OnGUI>b__13_1(InputDeviceBase d)
		{
			return null;
		}
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D8E4", Offset = "0xA2D8E4")]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intro <>4__this;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IntroSlide[] <>7__wrap1;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IntroSlide <slide>5__4;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <i>5__5;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xCDFBF4", Offset = "0xCDFBF4", VA = "0xCDFBF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0xCDFC64", Offset = "0xCDFC64", VA = "0xCDFC64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xCDF498", Offset = "0xCDF498", VA = "0xCDF498")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xCDF718", Offset = "0xCDF718", VA = "0xCDF718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xCDF71C", Offset = "0xCDF71C", VA = "0xCDF71C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xCDFBFC", Offset = "0xCDFBFC", VA = "0xCDFBFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OddRavenVrPriorityOrder firstPriorityOrder;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OddRavenVrPriorityOrder secondPriorityOrder;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrButton firstButton;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public VrButton secondButton;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntroSlide[] slides;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA33918", Offset = "0xA33918")]
	public string nextLevel;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IntroSlide currentScreenSlide;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IntroSlide currentVrSlide;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForMultiButtonPress wait;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaitForFixedUpdate wffu;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool showDebugOverlay;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUIStyle redStyle;

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xCDF0F4", Offset = "0xCDF0F4", VA = "0xCDF0F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xCDF424", Offset = "0xCDF424", VA = "0xCDF424")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F19C", Offset = "0xA3F19C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xCDF4C4", Offset = "0xCDF4C4", VA = "0xCDF4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xCDF60C", Offset = "0xCDF60C", VA = "0xCDF60C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xCDF63C", Offset = "0xCDF63C", VA = "0xCDF63C")]
	public Intro()
	{
	}
}
[Token(Token = "0x20002DB")]
public class Level05_Train : MonoBehaviour
{
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D8F4", Offset = "0xA2D8F4")]
	private sealed class <DoTrain>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level05_Train <>4__this;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x1E2A718", Offset = "0x1E2A718", VA = "0x1E2A718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x1E2A788", Offset = "0x1E2A788", VA = "0x1E2A788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1E2A33C", Offset = "0x1E2A33C", VA = "0x1E2A33C")]
		[DebuggerHidden]
		public <DoTrain>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1E2A514", Offset = "0x1E2A514", VA = "0x1E2A514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x1E2A518", Offset = "0x1E2A518", VA = "0x1E2A518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1E2A720", Offset = "0x1E2A720", VA = "0x1E2A720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D904", Offset = "0xA2D904")]
	private sealed class <Show>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level05_Train <>4__this;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x1E2AD50", Offset = "0x1E2AD50", VA = "0x1E2AD50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x1E2ADC0", Offset = "0x1E2ADC0", VA = "0x1E2ADC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1E2A408", Offset = "0x1E2A408", VA = "0x1E2A408")]
		[DebuggerHidden]
		public <Show>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1E2AAAC", Offset = "0x1E2AAAC", VA = "0x1E2AAAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x1E2AAB0", Offset = "0x1E2AAB0", VA = "0x1E2AAB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x1E2AD58", Offset = "0x1E2AD58", VA = "0x1E2AD58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D914", Offset = "0xA2D914")]
	private sealed class <Hide>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level05_Train <>4__this;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x1E2AA34", Offset = "0x1E2AA34", VA = "0x1E2AA34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x1E2AAA4", Offset = "0x1E2AAA4", VA = "0x1E2AAA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1E2A4CC", Offset = "0x1E2A4CC", VA = "0x1E2A4CC")]
		[DebuggerHidden]
		public <Hide>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x1E2A790", Offset = "0x1E2A790", VA = "0x1E2A790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x1E2A794", Offset = "0x1E2A794", VA = "0x1E2A794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x1E2AA3C", Offset = "0x1E2AA3C", VA = "0x1E2AA3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minInterval;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxInterval;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float appearTime;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minVisibleTime;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxVisibleTime;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ORFmodStudioEventEmitter sound;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer m_Renderer;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float volume;

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x1E2A214", Offset = "0x1E2A214", VA = "0x1E2A214")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x1E2A2C8", Offset = "0x1E2A2C8", VA = "0x1E2A2C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F250", Offset = "0xA3F250")]
	private IEnumerator DoTrain()
	{
		return null;
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x1E2A368", Offset = "0x1E2A368", VA = "0x1E2A368")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x1E2A370", Offset = "0x1E2A370", VA = "0x1E2A370")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F2B4", Offset = "0xA3F2B4")]
	private IEnumerator Show(float time)
	{
		return null;
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x1E2A434", Offset = "0x1E2A434", VA = "0x1E2A434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F318", Offset = "0xA3F318")]
	private IEnumerator Hide(float time)
	{
		return null;
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x1E2A4F8", Offset = "0x1E2A4F8", VA = "0x1E2A4F8")]
	public Level05_Train()
	{
	}
}
[Token(Token = "0x20002DF")]
public class PostGameCredits : MonoBehaviour
{
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D924", Offset = "0xA2D924")]
	private sealed class <Run>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PostGameCredits <>4__this;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <showWait>5__2;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <betweenWait>5__3;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <cg>5__4;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <t>5__5;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x1EAC1A4", Offset = "0x1EAC1A4", VA = "0x1EAC1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x1EAC214", Offset = "0x1EAC214", VA = "0x1EAC214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x1EAB9C8", Offset = "0x1EAB9C8", VA = "0x1EAB9C8")]
		[DebuggerHidden]
		public <Run>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1EABB80", Offset = "0x1EABB80", VA = "0x1EABB80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1EABB84", Offset = "0x1EABB84", VA = "0x1EABB84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1EAC1AC", Offset = "0x1EAC1AC", VA = "0x1EAC1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup[] canvasGroups;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float initialDelay;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float showTime;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeTime;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delayBetweenScreens;

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1EAB928", Offset = "0x1EAB928", VA = "0x1EAB928")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x1EAB954", Offset = "0x1EAB954", VA = "0x1EAB954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F46C", Offset = "0xA3F46C")]
	private IEnumerator Run()
	{
		return null;
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x1EAB9F4", Offset = "0x1EAB9F4", VA = "0x1EAB9F4")]
	private void DestroyIfPresent(MonoBehaviour o)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x1EABAB0", Offset = "0x1EABAB0", VA = "0x1EABAB0")]
	private void DestroyIfPresent(GameObject o)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x1EABB6C", Offset = "0x1EABB6C", VA = "0x1EABB6C")]
	public PostGameCredits()
	{
	}
}
[Token(Token = "0x20002E1")]
public class SpiritScene_LifeParticles : MonoBehaviour
{
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D934", Offset = "0xA2D934")]
	private sealed class <_On>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpiritScene_LifeParticles <>4__this;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForEndOfFrame <wait>5__2;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPosition>5__3;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <i>5__4;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x1E793E4", Offset = "0x1E793E4", VA = "0x1E793E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x1E79454", Offset = "0x1E79454", VA = "0x1E79454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1E78E9C", Offset = "0x1E78E9C", VA = "0x1E78E9C")]
		[DebuggerHidden]
		public <_On>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1E78ED0", Offset = "0x1E78ED0", VA = "0x1E78ED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1E78ED4", Offset = "0x1E78ED4", VA = "0x1E78ED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1E793EC", Offset = "0x1E793EC", VA = "0x1E793EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer sandMesh;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AimIK playerHand;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 offset;

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x1E78D1C", Offset = "0x1E78D1C", VA = "0x1E78D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x1E78DD4", Offset = "0x1E78DD4", VA = "0x1E78DD4")]
	private void On()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x1E78E28", Offset = "0x1E78E28", VA = "0x1E78E28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F520", Offset = "0xA3F520")]
	private IEnumerator _On()
	{
		return null;
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x1E78EC8", Offset = "0x1E78EC8", VA = "0x1E78EC8")]
	public SpiritScene_LifeParticles()
	{
	}
}
[Token(Token = "0x20002E3")]
public class Splashscreen : MonoBehaviour
{
	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1E79784", Offset = "0x1E79784", VA = "0x1E79784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x1E79788", Offset = "0x1E79788", VA = "0x1E79788")]
	public Splashscreen()
	{
	}
}
[Token(Token = "0x20002E4")]
public class StoryIntro : MonoBehaviour
{
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D944", Offset = "0xA2D944")]
	private sealed class <DoFade>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <i>5__2;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x1DF1318", Offset = "0x1DF1318", VA = "0x1DF1318", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x1DF1388", Offset = "0x1DF1388", VA = "0x1DF1388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1DF117C", Offset = "0x1DF117C", VA = "0x1DF117C")]
		[DebuggerHidden]
		public <DoFade>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x1DF11B0", Offset = "0x1DF11B0", VA = "0x1DF11B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1DF11B4", Offset = "0x1DF11B4", VA = "0x1DF11B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1DF1320", Offset = "0x1DF1320", VA = "0x1DF1320", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter trainSound;

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x1DF0F2C", Offset = "0x1DF0F2C", VA = "0x1DF0F2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x1DF0FD0", Offset = "0x1DF0FD0", VA = "0x1DF0FD0")]
	private void StartTrainSound()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x1DF1084", Offset = "0x1DF1084", VA = "0x1DF1084")]
	private void LoadHub()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x1DF10F0", Offset = "0x1DF10F0", VA = "0x1DF10F0")]
	private void FadeToBlack()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x1DF111C", Offset = "0x1DF111C", VA = "0x1DF111C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F5D4", Offset = "0xA3F5D4")]
	private IEnumerator DoFade()
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x1DF11A8", Offset = "0x1DF11A8", VA = "0x1DF11A8")]
	public StoryIntro()
	{
	}
}
[Token(Token = "0x20002E6")]
public class LevelDoorTrailAnimation : MonoBehaviour
{
	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D954", Offset = "0xA2D954")]
	private sealed class <ShowTrail>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelDoorTrailAnimation <>4__this;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <lerpSpeed>5__2;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <endPos>5__3;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <speed>5__5;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <pos>5__6;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <targetPos>5__7;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <distance>5__8;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <lerpSpeedTarget>5__9;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x1E2C618", Offset = "0x1E2C618", VA = "0x1E2C618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x1E2C688", Offset = "0x1E2C688", VA = "0x1E2C688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1E2BDD8", Offset = "0x1E2BDD8", VA = "0x1E2BDD8")]
		[DebuggerHidden]
		public <ShowTrail>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1E2BE18", Offset = "0x1E2BE18", VA = "0x1E2BE18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1E2BE1C", Offset = "0x1E2BE1C", VA = "0x1E2BE1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x1E2C620", Offset = "0x1E2C620", VA = "0x1E2C620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform trailObj;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lerpAcc;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lingerTime;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool testRun;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LevelDoorTrailPoint> points;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> pointPos;

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x1E2BB2C", Offset = "0x1E2BB2C", VA = "0x1E2BB2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x1E2BD2C", Offset = "0x1E2BD2C", VA = "0x1E2BD2C")]
	private void On()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x1E2BD64", Offset = "0x1E2BD64", VA = "0x1E2BD64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F688", Offset = "0xA3F688")]
	private IEnumerator ShowTrail()
	{
		return null;
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1E2BE04", Offset = "0x1E2BE04", VA = "0x1E2BE04")]
	public LevelDoorTrailAnimation()
	{
	}
}
[Token(Token = "0x20002E8")]
public class LevelDoorTrailPoint : MonoBehaviour
{
	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lerpSpeed;

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x1E2C690", Offset = "0x1E2C690", VA = "0x1E2C690")]
	public LevelDoorTrailPoint()
	{
	}
}
[Token(Token = "0x20002E9")]
public class LevelEndSequence : CustomSpawner
{
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D964", Offset = "0xA2D964")]
	private sealed class <Spawn>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelEndSequence <>4__this;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x1E328EC", Offset = "0x1E328EC", VA = "0x1E328EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x1E3295C", Offset = "0x1E3295C", VA = "0x1E3295C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1E2F904", Offset = "0x1E2F904", VA = "0x1E2F904")]
		[DebuggerHidden]
		public <Spawn>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1E3268C", Offset = "0x1E3268C", VA = "0x1E3268C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1E32690", Offset = "0x1E32690", VA = "0x1E32690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1E328F4", Offset = "0x1E328F4", VA = "0x1E328F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D974", Offset = "0xA2D974")]
	private sealed class <OnTriggerEnterRoutine>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelEndSequence <>4__this;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForMultiButtonPress <waitForButton>5__2;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <rot>5__3;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CanvasGroup[] <dialogs>5__4;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__5;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x1E32444", Offset = "0x1E32444", VA = "0x1E32444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x1E324B4", Offset = "0x1E324B4", VA = "0x1E324B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1E2FEDC", Offset = "0x1E2FEDC", VA = "0x1E2FEDC")]
		[DebuggerHidden]
		public <OnTriggerEnterRoutine>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1E317A4", Offset = "0x1E317A4", VA = "0x1E317A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1E317A8", Offset = "0x1E317A8", VA = "0x1E317A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x1E3244C", Offset = "0x1E3244C", VA = "0x1E3244C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D984", Offset = "0xA2D984")]
	private sealed class <StartSequence>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelEndSequence <>4__this;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x1E32FA4", Offset = "0x1E32FA4", VA = "0x1E32FA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x1E33014", Offset = "0x1E33014", VA = "0x1E33014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1E2FF7C", Offset = "0x1E2FF7C", VA = "0x1E2FF7C")]
		[DebuggerHidden]
		public <StartSequence>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1E32964", Offset = "0x1E32964", VA = "0x1E32964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1E32968", Offset = "0x1E32968", VA = "0x1E32968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1E32FAC", Offset = "0x1E32FAC", VA = "0x1E32FAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D994", Offset = "0xA2D994")]
	private sealed class <EndSequence>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelEndSequence <>4__this;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SteamVR_SimpleHand[] <hands>5__2;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__3;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock <mpb>5__4;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <color>5__5;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <i>5__6;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x1E3156C", Offset = "0x1E3156C", VA = "0x1E3156C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x1E315DC", Offset = "0x1E315DC", VA = "0x1E315DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x1E3001C", Offset = "0x1E3001C", VA = "0x1E3001C")]
		[DebuggerHidden]
		public <EndSequence>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1E308C4", Offset = "0x1E308C4", VA = "0x1E308C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x1E308C8", Offset = "0x1E308C8", VA = "0x1E308C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1E31574", Offset = "0x1E31574", VA = "0x1E31574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D9A4", Offset = "0xA2D9A4")]
	private sealed class <ResetCamera>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x1E324D8", Offset = "0x1E324D8", VA = "0x1E324D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x1E32548", Offset = "0x1E32548", VA = "0x1E32548", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x1E3012C", Offset = "0x1E3012C", VA = "0x1E3012C")]
		[DebuggerHidden]
		public <ResetCamera>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1E324BC", Offset = "0x1E324BC", VA = "0x1E324BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1E324C0", Offset = "0x1E324C0", VA = "0x1E324C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x1E324E0", Offset = "0x1E324E0", VA = "0x1E324E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D9B4", Offset = "0xA2D9B4")]
	private sealed class <Show>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelEndSequence <>4__this;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <showTime>5__2;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x1E32614", Offset = "0x1E32614", VA = "0x1E32614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x1E32684", Offset = "0x1E32684", VA = "0x1E32684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x1E301CC", Offset = "0x1E301CC", VA = "0x1E301CC")]
		[DebuggerHidden]
		public <Show>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1E32550", Offset = "0x1E32550", VA = "0x1E32550", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1E32554", Offset = "0x1E32554", VA = "0x1E32554", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1E3261C", Offset = "0x1E3261C", VA = "0x1E3261C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2D9C4", Offset = "0xA2D9C4")]
	private sealed class <Hide>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelEndSequence <>4__this;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <showTime>5__2;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x1E3172C", Offset = "0x1E3172C", VA = "0x1E3172C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x1E3179C", Offset = "0x1E3179C", VA = "0x1E3179C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1E303E0", Offset = "0x1E303E0", VA = "0x1E303E0")]
		[DebuggerHidden]
		public <Hide>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1E315E4", Offset = "0x1E315E4", VA = "0x1E315E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x1E315E8", Offset = "0x1E315E8", VA = "0x1E315E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1E31734", Offset = "0x1E31734", VA = "0x1E31734", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer hole;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform talkPosition;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform reaperManPosition;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform carlyVrCameraPosition;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform anima;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject tunnel;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ChallengeDoor challengeDoor;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpriteRenderer image;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem beacon;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform lookAtTarget;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem[] eyes;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public OcclusionBox occlusionBox;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MonoBehaviour waiting;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3392C", Offset = "0xA3392C")]
	public CanvasGroup background;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CanvasGroup[] introDialogs;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CanvasGroup[] outroDialogs;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33964", Offset = "0xA33964")]
	public ORFmodStudioEventEmitter spiritSnapshot;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ORFmodStudioEventEmitter talkSound;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ORFmodStudioEventEmitter waitSound;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ORFmodStudioEventEmitter fadeSound;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ORFmodStudioEventEmitter tunnelSound;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3399C", Offset = "0xA3399C")]
	public VrButton firstButton;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public VrButton secondButton;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OddRavenVrPriorityOrder firstPriorityOrder;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public OddRavenVrPriorityOrder secondPriorityOrder;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CanvasGroup pushFirstButton;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public CanvasGroup waitingFirstButton;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public CanvasGroup pushSecondButton;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public CanvasGroup waitingSecondButton;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA339D4", Offset = "0xA339D4")]
	public ActivatableCameraPosition dialogCamera;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ActivatableCameraPosition exitCamera;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ActivatableCameraPosition endingCamera;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OddRavenCharacterController player;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OddRavenCharacterInput input;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool hasTriggered;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameData.WorldData world;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WaitForMultiButtonPress currentWaitForButton;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private PhotonView photonView;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float saveSpeed;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float saveLookAtSpeed;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _on;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool networkOn;

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x1E2F418", Offset = "0x1E2F418", VA = "0x1E2F418", Slot = "4")]
	public override bool ShouldBeUsed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x1E2F478", Offset = "0x1E2F478", VA = "0x1E2F478")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1E2F890", Offset = "0x1E2F890", VA = "0x1E2F890", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F73C", Offset = "0xA3F73C")]
	public override IEnumerator Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x1E2F930", Offset = "0x1E2F930", VA = "0x1E2F930")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x1E2FA14", Offset = "0x1E2FA14", VA = "0x1E2FA14")]
	private void SetupPlayer()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x1E2FAA4", Offset = "0x1E2FAA4", VA = "0x1E2FAA4")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x1E2FDE4", Offset = "0x1E2FDE4", VA = "0x1E2FDE4")]
	[PunRPC]
	private void OnTriggerEnterRpc(byte dialogId, Pickup.PickupSync pickupSync)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x1E2FD70", Offset = "0x1E2FD70", VA = "0x1E2FD70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F7B0", Offset = "0xA3F7B0")]
	private IEnumerator OnTriggerEnterRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x1E2FF08", Offset = "0x1E2FF08", VA = "0x1E2FF08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F814", Offset = "0xA3F814")]
	private IEnumerator StartSequence()
	{
		return null;
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x1E2FFA8", Offset = "0x1E2FFA8", VA = "0x1E2FFA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F878", Offset = "0xA3F878")]
	private IEnumerator EndSequence()
	{
		return null;
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x1E30048", Offset = "0x1E30048", VA = "0x1E30048")]
	private void On()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x1E300C4", Offset = "0x1E300C4", VA = "0x1E300C4")]
	private void Off()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x1E300CC", Offset = "0x1E300CC", VA = "0x1E300CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F8DC", Offset = "0xA3F8DC")]
	private IEnumerator ResetCamera()
	{
		return null;
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x1E30158", Offset = "0x1E30158", VA = "0x1E30158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F940", Offset = "0xA3F940")]
	private IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x1E301F8", Offset = "0x1E301F8", VA = "0x1E301F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x1E30300", Offset = "0x1E30300", VA = "0x1E30300")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x1E3036C", Offset = "0x1E3036C", VA = "0x1E3036C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3F9A4", Offset = "0xA3F9A4")]
	private IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x1E3040C", Offset = "0x1E3040C", VA = "0x1E3040C")]
	private void SetOpen(float open)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x1E30750", Offset = "0x1E30750", VA = "0x1E30750")]
	[PunRPC]
	private void OnGotNetworkPlayerPress()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x1E307BC", Offset = "0x1E307BC", VA = "0x1E307BC")]
	public LevelEndSequence()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x1E307C4", Offset = "0x1E307C4", VA = "0x1E307C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FA18", Offset = "0xA3FA18")]
	private void <OnTriggerEnterRoutine>b__49_0()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x1E30844", Offset = "0x1E30844", VA = "0x1E30844")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FA28", Offset = "0xA3FA28")]
	private void <OnTriggerEnterRoutine>b__49_1()
	{
	}
}
[Token(Token = "0x20002F1")]
public class LoadGameObjectForVrDevice : MonoBehaviour
{
	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA33A0C", Offset = "0xA33A0C")]
	public GameObject oculusRiftPrefab;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oculusQuestPrefab;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA33A44", Offset = "0xA33A44")]
	public GameObject steamVrPrefab;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject psVrPrefab;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject noVrPrefab;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA33A7C", Offset = "0xA33A7C")]
	public GameObject fallbackPrefab;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool scaleToWorld;

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x1E35224", Offset = "0x1E35224", VA = "0x1E35224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x1E35968", Offset = "0x1E35968", VA = "0x1E35968")]
	public LoadGameObjectForVrDevice()
	{
	}
}
[Token(Token = "0x20002F2")]
public class LoadLevelWithDelay : MonoBehaviour
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SceneAttribute", RVA = "0xA33AB4", Offset = "0xA33AB4")]
	public string level;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x1E35970", Offset = "0x1E35970", VA = "0x1E35970")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x1E359C8", Offset = "0x1E359C8", VA = "0x1E359C8")]
	private void LoadLevel()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x1E35A38", Offset = "0x1E35A38", VA = "0x1E35A38")]
	public LoadLevelWithDelay()
	{
	}
}
[Token(Token = "0x20002F3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2D9D4", Offset = "0xA2D9D4")]
public class MakeKinematicAfterFirstGrab : MonoBehaviour
{
	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool kinematic;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xD4FF84", Offset = "0xD4FF84", VA = "0xD4FF84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xD5004C", Offset = "0xD5004C", VA = "0xD5004C")]
	public MakeKinematicAfterFirstGrab()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xD50054", Offset = "0xD50054", VA = "0xD50054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FC68", Offset = "0xA3FC68")]
	private void <Start>b__3_0(SteamVR_GrabbableObject <p0>)
	{
	}
}
[Token(Token = "0x20002F4")]
public class NoVolumetricLight : MonoBehaviour
{
	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xD55A3C", Offset = "0xD55A3C", VA = "0xD55A3C")]
	public NoVolumetricLight()
	{
	}
}
[Token(Token = "0x20002F5")]
public class OnlyShowForLanguage : MonoBehaviour, IConditionalShow
{
	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] alwaysShowForLanguages;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] alwaysHideForLanguages;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool defaultShow;

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x1E92BDC", Offset = "0x1E92BDC", VA = "0x1E92BDC", Slot = "4")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x1E92D60", Offset = "0x1E92D60", VA = "0x1E92D60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x1E92F74", Offset = "0x1E92F74", VA = "0x1E92F74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x1E92EB0", Offset = "0x1E92EB0", VA = "0x1E92EB0")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x1E9307C", Offset = "0x1E9307C", VA = "0x1E9307C")]
	public OnlyShowForLanguage()
	{
	}
}
[Token(Token = "0x20002F6")]
public class OnlyShowForVrDevice : MonoBehaviour, IConditionalShow
{
	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showForOculus;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showForCosmos;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool showForSteamVR;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool showForOpenVR;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA33AC8", Offset = "0xA33AC8")]
	public bool showForPlaystation;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA33B00", Offset = "0xA33B00")]
	public bool showForOculusQuest;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool showWhenNoVR;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Behaviour onlyComponent;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool removeWhenNotPresent;

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x1E9308C", Offset = "0x1E9308C", VA = "0x1E9308C", Slot = "4")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x1E930F0", Offset = "0x1E930F0", VA = "0x1E930F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1E93314", Offset = "0x1E93314", VA = "0x1E93314")]
	public OnlyShowForVrDevice()
	{
	}
}
[Token(Token = "0x20002F7")]
public class OverrideRenderscale : MonoBehaviour
{
	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float renderScale;

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1E9393C", Offset = "0x1E9393C", VA = "0x1E9393C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x1E93940", Offset = "0x1E93940", VA = "0x1E93940")]
	public OverrideRenderscale()
	{
	}
}
[Token(Token = "0x20002F8")]
public class OVRLoadscreen : MonoBehaviour
{
	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay[] overlays;

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xD55D44", Offset = "0xD55D44", VA = "0xD55D44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xD55DE8", Offset = "0xD55DE8", VA = "0xD55DE8")]
	private void On()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xD55D48", Offset = "0xD55D48", VA = "0xD55D48")]
	private void Off()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xD55E88", Offset = "0xD55E88", VA = "0xD55E88")]
	public OVRLoadscreen()
	{
	}
}
[Token(Token = "0x20002F9")]
public class PhysicsManager : MonoBehaviour
{
	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1E97E2C", Offset = "0x1E97E2C", VA = "0x1E97E2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x1E97E38", Offset = "0x1E97E38", VA = "0x1E97E38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x1E97E44", Offset = "0x1E97E44", VA = "0x1E97E44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x1E97E60", Offset = "0x1E97E60", VA = "0x1E97E60")]
	public PhysicsManager()
	{
	}
}
[Token(Token = "0x20002FA")]
public class PlayerStartPosition : SaveableClass
{
	[Serializable]
	[Token(Token = "0x20002FB")]
	public class PlayerPosition
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1EA974C", Offset = "0x1EA974C", VA = "0x1EA974C")]
		public PlayerPosition()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1EA9754", Offset = "0x1EA9754", VA = "0x1EA9754")]
		public PlayerPosition(Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DA54", Offset = "0xA2DA54")]
	private sealed class <_Spawn>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerStartPosition <>4__this;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x1EAA594", Offset = "0x1EAA594", VA = "0x1EAA594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x1EAA604", Offset = "0x1EAA604", VA = "0x1EAA604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x1EA9B38", Offset = "0x1EA9B38", VA = "0x1EA9B38")]
		[DebuggerHidden]
		public <_Spawn>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x1EA9BDC", Offset = "0x1EA9BDC", VA = "0x1EA9BDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x1EA9BE0", Offset = "0x1EA9BE0", VA = "0x1EA9BE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1EAA59C", Offset = "0x1EAA59C", VA = "0x1EAA59C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startAutomatically;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool autoEnable;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerPrefab;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<GameObject> PlayerSpawned;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool destroyThisAfterSpawn;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Dictionary<string, PlayerPosition>> startPositions;

	[Token(Token = "0x170001D4")]
	public override string UniqueId
	{
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1EA9378", Offset = "0x1EA9378", VA = "0x1EA9378", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x1EA93C0", Offset = "0x1EA93C0", VA = "0x1EA93C0")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x1EA9410", Offset = "0x1EA9410", VA = "0x1EA9410")]
	public static void SetStartPosition(string tag, string scene, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x1EA97C4", Offset = "0x1EA97C4", VA = "0x1EA97C4")]
	public static void ClearStartPosition(string tag)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x1EA9804", Offset = "0x1EA9804", VA = "0x1EA9804")]
	public static void ClearStartPosition(string tag, string scene)
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x1EA45D4", Offset = "0x1EA45D4", VA = "0x1EA45D4")]
	public static bool HasNewStartPosition(string tag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x1EA9964", Offset = "0x1EA9964", VA = "0x1EA9964")]
	public static void SetStartPosition(string tag, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1EA9A04", Offset = "0x1EA9A04", VA = "0x1EA9A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1EA9A98", Offset = "0x1EA9A98", VA = "0x1EA9A98")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1EA9AC4", Offset = "0x1EA9AC4", VA = "0x1EA9AC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FC78", Offset = "0xA3FC78")]
	private IEnumerator _Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x1EA9B64", Offset = "0x1EA9B64", VA = "0x1EA9B64")]
	public PlayerStartPosition()
	{
	}
}
[Token(Token = "0x20002FD")]
public class PlayerTreadMill : AffectPlayerVelocity
{
	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 velocity;

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1EAA60C", Offset = "0x1EAA60C", VA = "0x1EAA60C", Slot = "5")]
	public override Vector3 GetPointVelocity(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1EAA618", Offset = "0x1EAA618", VA = "0x1EAA618")]
	public PlayerTreadMill()
	{
	}
}
[Token(Token = "0x20002FE")]
public class PreloadShaders : MonoBehaviour
{
	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShaderVariantCollection[] shaderVariants;

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x1EAC21C", Offset = "0x1EAC21C", VA = "0x1EAC21C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x1EAC2B8", Offset = "0x1EAC2B8", VA = "0x1EAC2B8")]
	public PreloadShaders()
	{
	}
}
[Token(Token = "0x20002FF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DA64", Offset = "0xA2DA64")]
public class PrisonDoor : MonoBehaviour
{
	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerCharacter m_PlayerCharacter;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_isOpen;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion m_openRotation;

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x1EAD438", Offset = "0x1EAD438", VA = "0x1EAD438")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x1EAD4B0", Offset = "0x1EAD4B0", VA = "0x1EAD4B0")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x1EAD5A8", Offset = "0x1EAD5A8", VA = "0x1EAD5A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x1EAD728", Offset = "0x1EAD728", VA = "0x1EAD728")]
	public PrisonDoor()
	{
	}
}
[Token(Token = "0x2000300")]
public class PrisonKey : MonoBehaviour
{
	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private KeyAnimal m_keyAnimal;

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x1EAD7B0", Offset = "0x1EAD7B0", VA = "0x1EAD7B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x1EAD824", Offset = "0x1EAD824", VA = "0x1EAD824")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x1EAD918", Offset = "0x1EAD918", VA = "0x1EAD918")]
	public PrisonKey()
	{
	}
}
[Token(Token = "0x2000301")]
public class ProximityIndicator : MonoBehaviour
{
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DAC8", Offset = "0xA2DAC8")]
	private sealed class <DetectProximity>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProximityIndicator <>4__this;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x1EAE854", Offset = "0x1EAE854", VA = "0x1EAE854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x1EAE8C4", Offset = "0x1EAE8C4", VA = "0x1EAE8C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x1EAE598", Offset = "0x1EAE598", VA = "0x1EAE598")]
		[DebuggerHidden]
		public <DetectProximity>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1EAE5CC", Offset = "0x1EAE5CC", VA = "0x1EAE5CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x1EAE5D0", Offset = "0x1EAE5D0", VA = "0x1EAE5D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x1EAE85C", Offset = "0x1EAE85C", VA = "0x1EAE85C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer renderer;

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x1EAE4B8", Offset = "0x1EAE4B8", VA = "0x1EAE4B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x1EAE524", Offset = "0x1EAE524", VA = "0x1EAE524")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FD2C", Offset = "0xA3FD2C")]
	private IEnumerator DetectProximity()
	{
		return null;
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x1EAE5C4", Offset = "0x1EAE5C4", VA = "0x1EAE5C4")]
	public ProximityIndicator()
	{
	}
}
[Token(Token = "0x2000303")]
public class PS4ControllerSetup : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrButton screenButton;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public VrButton vrButton;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string loadLevel;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool controllerSetupFinished;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public OddRavenVrPriorityOrder screenPriorityOrder;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public OddRavenVrPriorityOrder vrPriorityOrder;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI reapermanText;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI carlyText;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI singlePlayerText;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject singlePlayer;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject coop;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool singlePlayerMode;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool screenReady;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool vrReady;

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x1E94508", Offset = "0x1E94508", VA = "0x1E94508")]
	public PS4ControllerSetup()
	{
	}
}
[Token(Token = "0x2000304")]
public class PSMoveOffset : MonoBehaviour
{
	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotation;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x1E94524", Offset = "0x1E94524", VA = "0x1E94524")]
	public PSMoveOffset()
	{
	}
}
[Token(Token = "0x2000305")]
public class PulsatingEmissionManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000306")]
	public class PulsatingMaterial
	{
		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float frequency;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float amplitude;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Color emissionColor;

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x1EAEBBC", Offset = "0x1EAEBBC", VA = "0x1EAEBBC")]
		public PulsatingMaterial()
		{
		}
	}

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PulsatingMaterial[] materials;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float time;

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x1EAE8CC", Offset = "0x1EAE8CC", VA = "0x1EAE8CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x1EAEAC0", Offset = "0x1EAEAC0", VA = "0x1EAEAC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x1EAEBB4", Offset = "0x1EAEBB4", VA = "0x1EAEBB4")]
	public PulsatingEmissionManager()
	{
	}
}
[Token(Token = "0x2000307")]
public class QuitOnCollision : MonoBehaviour
{
	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject player;

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x1EB17C0", Offset = "0x1EB17C0", VA = "0x1EB17C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x1EB184C", Offset = "0x1EB184C", VA = "0x1EB184C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x1EB1954", Offset = "0x1EB1954", VA = "0x1EB1954")]
	public QuitOnCollision()
	{
	}
}
[Token(Token = "0x2000308")]
public class ReapermanHUD : MonoBehaviour
{
	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup cg;

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x1EB1E70", Offset = "0x1EB1E70", VA = "0x1EB1E70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x1EB1EC8", Offset = "0x1EB1EC8", VA = "0x1EB1EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x1EB2030", Offset = "0x1EB2030", VA = "0x1EB2030")]
	public ReapermanHUD()
	{
	}
}
[Token(Token = "0x2000309")]
public class ReapermanScoreRandomizer : MonoBehaviour
{
	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter ScoreEmitter;

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x1EB3840", Offset = "0x1EB3840", VA = "0x1EB3840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x1EB38F0", Offset = "0x1EB38F0", VA = "0x1EB38F0")]
	public ReapermanScoreRandomizer()
	{
	}
}
[Token(Token = "0x200030A")]
public class RoomInRoomDoor : BaseCheckpoint
{
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DAD8", Offset = "0xA2DAD8")]
	private sealed class <Exit>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInRoomDoor <>4__this;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x1EB84F8", Offset = "0x1EB84F8", VA = "0x1EB84F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1EB8568", Offset = "0x1EB8568", VA = "0x1EB8568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1EB6D74", Offset = "0x1EB6D74", VA = "0x1EB6D74")]
		[DebuggerHidden]
		public <Exit>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1EB7958", Offset = "0x1EB7958", VA = "0x1EB7958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1EB795C", Offset = "0x1EB795C", VA = "0x1EB795C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1EB8500", Offset = "0x1EB8500", VA = "0x1EB8500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DAE8", Offset = "0xA2DAE8")]
	private sealed class <Walk>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInRoomDoor <>4__this;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color startColor;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color endColor;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 <move>5__2;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForFixedUpdate <wait>5__3;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x1EB88C0", Offset = "0x1EB88C0", VA = "0x1EB88C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x1EB8930", Offset = "0x1EB8930", VA = "0x1EB8930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1EB6E84", Offset = "0x1EB6E84", VA = "0x1EB6E84")]
		[DebuggerHidden]
		public <Walk>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1EB8570", Offset = "0x1EB8570", VA = "0x1EB8570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1EB8574", Offset = "0x1EB8574", VA = "0x1EB8574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1EB88C8", Offset = "0x1EB88C8", VA = "0x1EB88C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DAF8", Offset = "0xA2DAF8")]
	private sealed class <DoRespawn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomInRoomDoor <>4__this;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x1EB78E0", Offset = "0x1EB78E0", VA = "0x1EB78E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x1EB7950", Offset = "0x1EB7950", VA = "0x1EB7950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1EB7178", Offset = "0x1EB7178", VA = "0x1EB7178")]
		[DebuggerHidden]
		public <DoRespawn>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1EB71C8", Offset = "0x1EB71C8", VA = "0x1EB71C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x1EB71CC", Offset = "0x1EB71CC", VA = "0x1EB71CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x1EB78E8", Offset = "0x1EB78E8", VA = "0x1EB78E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RoomInRoomDoor moveTo;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool teleportVR;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform teleportVRTo;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform teleportCarlyVrTo;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SetLevelPosition PlayAreaToDisable;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetLevelPosition PlayAreaToEnable;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool autoSetCameraRotation;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform enterPosition;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33B68", Offset = "0xA33B68")]
	public float time;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float speed;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33BA0", Offset = "0xA33BA0")]
	public MonoBehaviour activate;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool broadcast;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public HingeDoor hingeDoor;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OddRavenCharacterController orcc;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OddRavenCharacterInput orci;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SteamVR_SimpleHand[] GrabbingHand;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ActivatableCameraRotation acr;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private SkinnedMeshRenderer[] renderers;

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x1EB6B14", Offset = "0x1EB6B14", VA = "0x1EB6B14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1EB6C04", Offset = "0x1EB6C04", VA = "0x1EB6C04")]
	private void On()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x1EB6D00", Offset = "0x1EB6D00", VA = "0x1EB6D00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FDE0", Offset = "0xA3FDE0")]
	private IEnumerator Exit()
	{
		return null;
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x1EB6DA0", Offset = "0x1EB6DA0", VA = "0x1EB6DA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FE44", Offset = "0xA3FE44")]
	private IEnumerator Walk(Color startColor, Color endColor)
	{
		return null;
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x1EB6EB0", Offset = "0x1EB6EB0", VA = "0x1EB6EB0", Slot = "5")]
	protected override void DeactivateCheckpoint()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x1EB6EB4", Offset = "0x1EB6EB4", VA = "0x1EB6EB4", Slot = "6")]
	public override void PrepareRespawn()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x1EB7104", Offset = "0x1EB7104", VA = "0x1EB7104", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FEA8", Offset = "0xA3FEA8")]
	public override IEnumerator DoRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x1EB71A4", Offset = "0x1EB71A4", VA = "0x1EB71A4")]
	public RoomInRoomDoor()
	{
	}
}
[Token(Token = "0x200030E")]
public class RotateSkybox : MonoBehaviour
{
	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA33BE8", Offset = "0xA33BE8")]
	public float Speed;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material skybox;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotation;

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1EBA2E8", Offset = "0x1EBA2E8", VA = "0x1EBA2E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x1EBA374", Offset = "0x1EBA374", VA = "0x1EBA374")]
	public RotateSkybox()
	{
	}
}
[Token(Token = "0x200030F")]
public class RotateTowardsReaperman : MonoBehaviour
{
	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyInSinglePlayerMode;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onlyWhenVisible;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1E61270", Offset = "0x1E61270", VA = "0x1E61270")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1E612C8", Offset = "0x1E612C8", VA = "0x1E612C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1E6152C", Offset = "0x1E6152C", VA = "0x1E6152C")]
	public RotateTowardsReaperman()
	{
	}
}
[Token(Token = "0x2000310")]
public class RunLevelFunction : MonoBehaviour
{
	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelFunction;

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x1E6153C", Offset = "0x1E6153C", VA = "0x1E6153C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x1E615A8", Offset = "0x1E615A8", VA = "0x1E615A8")]
	public RunLevelFunction()
	{
	}
}
[Token(Token = "0x2000311")]
public class SaveGameReader : SaveableClass
{
	[Token(Token = "0x170001DF")]
	public override string UniqueId
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x1E615B8", Offset = "0x1E615B8", VA = "0x1E615B8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F72")]
	public static T ReadSaveData<T>(string header, string key, [Optional] T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x1E61600", Offset = "0x1E61600", VA = "0x1E61600")]
	public SaveGameReader()
	{
	}
}
[Token(Token = "0x2000312")]
public class SecretBlock : MonoBehaviour
{
	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool overrideScale;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 scale;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer renderer;

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x1E63FA4", Offset = "0x1E63FA4", VA = "0x1E63FA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x1E64188", Offset = "0x1E64188", VA = "0x1E64188")]
	public SecretBlock()
	{
	}
}
[Token(Token = "0x2000313")]
public class SecretHapticFeedback : MonoBehaviour
{
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DB08", Offset = "0xA2DB08")]
	private sealed class <HapticFeedback>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SecretHapticFeedback <>4__this;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <WaitShort>5__2;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x1E645B8", Offset = "0x1E645B8", VA = "0x1E645B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x1E64628", Offset = "0x1E64628", VA = "0x1E64628", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x1E64270", Offset = "0x1E64270", VA = "0x1E64270")]
		[DebuggerHidden]
		public <HapticFeedback>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1E64468", Offset = "0x1E64468", VA = "0x1E64468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1E6446C", Offset = "0x1E6446C", VA = "0x1E6446C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1E645C0", Offset = "0x1E645C0", VA = "0x1E645C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WandComponent Controller;

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x1E641FC", Offset = "0x1E641FC", VA = "0x1E641FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA3FFFC", Offset = "0xA3FFFC")]
	private IEnumerator HapticFeedback()
	{
		return null;
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x1E6429C", Offset = "0x1E6429C", VA = "0x1E6429C")]
	private void OnTriggerEnter(Collider Coll)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x1E643C8", Offset = "0x1E643C8", VA = "0x1E643C8")]
	private void OnTriggerExit(Collider Coll)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x1E64460", Offset = "0x1E64460", VA = "0x1E64460")]
	public SecretHapticFeedback()
	{
	}
}
[Token(Token = "0x2000315")]
public class SetFmodParameterToRandomAtInterval : MonoBehaviour
{
	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ORFmodStudioEventEmitter emitter;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string parameter;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int minValue;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxValue;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int interval;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float elapsed;

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x1E66DA4", Offset = "0x1E66DA4", VA = "0x1E66DA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x1E66E3C", Offset = "0x1E66E3C", VA = "0x1E66E3C")]
	public SetFmodParameterToRandomAtInterval()
	{
	}
}
[Token(Token = "0x2000316")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DB18", Offset = "0xA2DB18")]
public class SetFOVOnPreCull : MonoBehaviour
{
	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera camera;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fov;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float savedFov;

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x1E66808", Offset = "0x1E66808", VA = "0x1E66808")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x1E6687C", Offset = "0x1E6687C", VA = "0x1E6687C")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x1E668BC", Offset = "0x1E668BC", VA = "0x1E668BC")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x1E668FC", Offset = "0x1E668FC", VA = "0x1E668FC")]
	public SetFOVOnPreCull()
	{
	}
}
[Token(Token = "0x2000317")]
public class SetLevelPosition : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DB7C", Offset = "0xA2DB7C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<XRNodeState> <>9__19_0;

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1E688FC", Offset = "0x1E688FC", VA = "0x1E688FC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1E68904", Offset = "0x1E68904", VA = "0x1E68904")]
		internal void <Start>b__19_0(XRNodeState node)
		{
		}
	}

	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DB8C", Offset = "0xA2DB8C")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetLevelPosition <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x1E68BA4", Offset = "0x1E68BA4", VA = "0x1E68BA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x1E68C14", Offset = "0x1E68C14", VA = "0x1E68C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1E677FC", Offset = "0x1E677FC", VA = "0x1E677FC")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1E68908", Offset = "0x1E68908", VA = "0x1E68908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1E6890C", Offset = "0x1E6890C", VA = "0x1E6890C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1E68BAC", Offset = "0x1E68BAC", VA = "0x1E68BAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WandComponent[] controllers;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VrButton moveButton;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 scaleMovement;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool additive;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SetLevelPosition active;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public VrButton moveModeButton;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33C10", Offset = "0xA33C10")]
	public Vector3 center;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 size;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform target;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Bounds bounds;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WandComponent movingWithController;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 initialPosition;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 initialLevelPosition;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Camera mainCamera;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int retries;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] originalVector;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float lastAngle;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool isRotating;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 lastCenterPoint;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WandComponent didLooseTracking;

	[Token(Token = "0x170001E2")]
	public static SetLevelPosition Active
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1E6757C", Offset = "0x1E6757C", VA = "0x1E6757C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E3")]
	public bool rotateEnabled
	{
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1E67714", Offset = "0x1E67714", VA = "0x1E67714")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x1E67528", Offset = "0x1E67528", VA = "0x1E67528")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x1E67788", Offset = "0x1E67788", VA = "0x1E67788")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA400B0", Offset = "0xA400B0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x1E67828", Offset = "0x1E67828", VA = "0x1E67828")]
	private void GetPlayAreaBounds()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x1E6782C", Offset = "0x1E6782C", VA = "0x1E6782C")]
	private void CalculateBounds()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x1E67870", Offset = "0x1E67870", VA = "0x1E67870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x1E68730", Offset = "0x1E68730", VA = "0x1E68730")]
	public SetLevelPosition()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x1E6881C", Offset = "0x1E6881C", VA = "0x1E6881C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40114", Offset = "0xA40114")]
	private bool <Update>b__28_0(WandComponent c)
	{
		return default(bool);
	}
}
[Token(Token = "0x200031A")]
public class SetPlayerAnimatorState : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string state;

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x1E698B0", Offset = "0x1E698B0", VA = "0x1E698B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x1E69AD8", Offset = "0x1E69AD8", VA = "0x1E69AD8")]
	private void PlayerDied()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x1E69B10", Offset = "0x1E69B10", VA = "0x1E69B10")]
	private void PlayerDidRespawn()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x1E69B48", Offset = "0x1E69B48", VA = "0x1E69B48")]
	public SetPlayerAnimatorState()
	{
	}
}
[Token(Token = "0x200031B")]
public class SetPlayerStartPosition : MonoBehaviour
{
	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string onlyForTag;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform toOtherTransform;

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x1E69B50", Offset = "0x1E69B50", VA = "0x1E69B50")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x1E69C98", Offset = "0x1E69C98", VA = "0x1E69C98")]
	public SetPlayerStartPosition()
	{
	}
}
[Token(Token = "0x200031C")]
public class SetReapermanPosition : MonoBehaviour
{
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DB9C", Offset = "0xA2DB9C")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetReapermanPosition <>4__this;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <cameraRig>5__2;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <headPosition>5__3;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x1E6A2D8", Offset = "0x1E6A2D8", VA = "0x1E6A2D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x1E6A348", Offset = "0x1E6A348", VA = "0x1E6A348", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x1E69D14", Offset = "0x1E69D14", VA = "0x1E69D14")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1E69D48", Offset = "0x1E69D48", VA = "0x1E69D48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x1E69D4C", Offset = "0x1E69D4C", VA = "0x1E69D4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1E6A2E0", Offset = "0x1E6A2E0", VA = "0x1E6A2E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x1E69CA0", Offset = "0x1E69CA0", VA = "0x1E69CA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40174", Offset = "0xA40174")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x1E69D40", Offset = "0x1E69D40", VA = "0x1E69D40")]
	public SetReapermanPosition()
	{
	}
}
[Token(Token = "0x200031E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DBAC", Offset = "0xA2DBAC")]
public class SetWiggleDistance : MonoBehaviour
{
	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] renderers;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 scale;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SmoothFollow follow;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 distance;

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x1E6ACBC", Offset = "0x1E6ACBC", VA = "0x1E6ACBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x1E6AD88", Offset = "0x1E6AD88", VA = "0x1E6AD88")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x1E6B038", Offset = "0x1E6B038", VA = "0x1E6B038")]
	public SetWiggleDistance()
	{
	}
}
[Token(Token = "0x200031F")]
public class ShowFPS : MonoBehaviour
{
	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x1E6BE44", Offset = "0x1E6BE44", VA = "0x1E6BE44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x1E6BE7C", Offset = "0x1E6BE7C", VA = "0x1E6BE7C")]
	public ShowFPS()
	{
	}
}
[Token(Token = "0x2000320")]
public class ShowStatueWings : MonoBehaviour
{
	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DC10", Offset = "0xA2DC10")]
	private sealed class <ShowWings>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowStatueWings <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x1E6F300", Offset = "0x1E6F300", VA = "0x1E6F300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x1E6F370", Offset = "0x1E6F370", VA = "0x1E6F370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1E6EEB8", Offset = "0x1E6EEB8", VA = "0x1E6EEB8")]
		[DebuggerHidden]
		public <ShowWings>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1E6F210", Offset = "0x1E6F210", VA = "0x1E6F210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1E6F214", Offset = "0x1E6F214", VA = "0x1E6F214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1E6F308", Offset = "0x1E6F308", VA = "0x1E6F308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DC20", Offset = "0xA2DC20")]
	private sealed class <HideWings>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowStatueWings <>4__this;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1E6F198", Offset = "0x1E6F198", VA = "0x1E6F198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1E6F208", Offset = "0x1E6F208", VA = "0x1E6F208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1E6EEE4", Offset = "0x1E6EEE4", VA = "0x1E6EEE4")]
		[DebuggerHidden]
		public <HideWings>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1E6F0E4", Offset = "0x1E6F0E4", VA = "0x1E6F0E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1E6F0E8", Offset = "0x1E6F0E8", VA = "0x1E6F0E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1E6F1A0", Offset = "0x1E6F1A0", VA = "0x1E6F1A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Door StatueDoor;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject StatueMark;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject StatueWingsParticle;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float WaitForWingsKey;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float WaitForWingsDoor;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds WaitWings;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds WaitDoor;

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x1E6E948", Offset = "0x1E6E948", VA = "0x1E6E948")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x1E6EC84", Offset = "0x1E6EC84", VA = "0x1E6EC84")]
	private void InventoryItemAdded(PlayerCharacter.InventoryItem item)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x1E6EDD0", Offset = "0x1E6EDD0", VA = "0x1E6EDD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40228", Offset = "0xA40228")]
	private IEnumerator ShowWings()
	{
		return null;
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x1E6EE44", Offset = "0x1E6EE44", VA = "0x1E6EE44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4028C", Offset = "0xA4028C")]
	private IEnumerator HideWings()
	{
		return null;
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x1E6EF10", Offset = "0x1E6EF10", VA = "0x1E6EF10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x1E6F0CC", Offset = "0x1E6F0CC", VA = "0x1E6F0CC")]
	public ShowStatueWings()
	{
	}
}
[Token(Token = "0x2000323")]
public class SinglePlayerMode : MonoBehaviour
{
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DC30", Offset = "0xA2DC30")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SinglePlayerMode <>4__this;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x1E7357C", Offset = "0x1E7357C", VA = "0x1E7357C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x1E735EC", Offset = "0x1E735EC", VA = "0x1E735EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1E72E50", Offset = "0x1E72E50", VA = "0x1E72E50")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1E732A0", Offset = "0x1E732A0", VA = "0x1E732A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1E732A4", Offset = "0x1E732A4", VA = "0x1E732A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1E73584", Offset = "0x1E73584", VA = "0x1E73584", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OddRavenCharacterInput input;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject PivotPoint;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraController cc;

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x1E72DDC", Offset = "0x1E72DDC", VA = "0x1E72DDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40390", Offset = "0xA40390")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x1E72E7C", Offset = "0x1E72E7C", VA = "0x1E72E7C")]
	private void CheckMainController()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x1E72F64", Offset = "0x1E72F64", VA = "0x1E72F64")]
	private void ActivateSinglePlayerMode()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x1E730B0", Offset = "0x1E730B0", VA = "0x1E730B0")]
	private void DeactivateSinglePlayerMode()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x1E731EC", Offset = "0x1E731EC", VA = "0x1E731EC")]
	private void DeactivateStudioListener()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x1E73298", Offset = "0x1E73298", VA = "0x1E73298")]
	public SinglePlayerMode()
	{
	}
}
[Token(Token = "0x2000325")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DC40", Offset = "0xA2DC40")]
public class OVRSlideshowProjectorController : GamePadComponent
{
	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ORFmodStudioEventEmitter NewSlide;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform button;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D neutralTexture;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D rightTexture;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D leftTexture;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D lastTexture;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer _renderer;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool waitingForZero;

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xD55E90", Offset = "0xD55E90", VA = "0xD55E90")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xD55F44", Offset = "0xD55F44", VA = "0xD55F44")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xD56304", Offset = "0xD56304", VA = "0xD56304")]
	public OVRSlideshowProjectorController()
	{
	}
}
[Token(Token = "0x2000326")]
public class SlideshowProjector : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DCA4", Offset = "0xA2DCA4")]
	private sealed class <MoveCartridge>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlideshowProjector <>4__this;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <step>5__3;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <i>5__4;

		[Token(Token = "0x170001EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x1E75714", Offset = "0x1E75714", VA = "0x1E75714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x1E75784", Offset = "0x1E75784", VA = "0x1E75784", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1E7418C", Offset = "0x1E7418C", VA = "0x1E7418C")]
		[DebuggerHidden]
		public <MoveCartridge>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1E750B4", Offset = "0x1E750B4", VA = "0x1E750B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1E750B8", Offset = "0x1E750B8", VA = "0x1E750B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x1E7571C", Offset = "0x1E7571C", VA = "0x1E7571C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DCB4", Offset = "0xA2DCB4")]
	private sealed class <DoFade>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlideshowProjector <>4__this;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture texture;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForEndOfFrame <wait>5__2;

		[Token(Token = "0x170001F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x1E7503C", Offset = "0x1E7503C", VA = "0x1E7503C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x1E750AC", Offset = "0x1E750AC", VA = "0x1E750AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1E7450C", Offset = "0x1E7450C", VA = "0x1E7450C")]
		[DebuggerHidden]
		public <DoFade>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x1E74E8C", Offset = "0x1E74E8C", VA = "0x1E74E8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x1E74E90", Offset = "0x1E74E90", VA = "0x1E74E90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1E75044", Offset = "0x1E75044", VA = "0x1E75044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DCC4", Offset = "0xA2DCC4")]
	private sealed class <newSlide>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlideshowProjector <>4__this;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <exposure>5__2;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForEndOfFrame <eof>5__3;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <blur>5__4;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <targetBlur>5__5;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture <texture>5__6;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <targetExposure>5__7;

		[Token(Token = "0x170001F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x1E75B94", Offset = "0x1E75B94", VA = "0x1E75B94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x1E75C04", Offset = "0x1E75C04", VA = "0x1E75C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1E745AC", Offset = "0x1E745AC", VA = "0x1E745AC")]
		[DebuggerHidden]
		public <newSlide>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1E7578C", Offset = "0x1E7578C", VA = "0x1E7578C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1E75790", Offset = "0x1E75790", VA = "0x1E75790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1E75B9C", Offset = "0x1E75B9C", VA = "0x1E75B9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D black;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer screen;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float standardExposure;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float slideSwitchExposure;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float blackDuration;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float blurTime;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float overExposureTime;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DropArea cartridgeSlot;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SlideshowProjectorCartridge cartridge;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	private ORFmodStudioEventEmitter emitter;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SlideshowProjector instance;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Texture2D[] slides;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock screenMPB;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator animator;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D emptyTexture;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject frameAnchor;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool switchingSlides;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool renderCamera;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float fadeIntensity;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture screenOverlayTexture;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture fadeBackgroundTexture;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material overlayMaterial;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material tiltShiftMaterial;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float blurArea;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public RenderTexture renderTexture;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Shader overlayShader;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Shader tiltShiftShader;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WaitForFixedUpdate wffu;

	[Token(Token = "0x170001EE")]
	public static SlideshowProjector Instance
	{
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1E745D8", Offset = "0x1E745D8", VA = "0x1E745D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x1E736B4", Offset = "0x1E736B4", VA = "0x1E736B4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x1E73B54", Offset = "0x1E73B54", VA = "0x1E73B54")]
	private void AlignProjectorCartridge(SlideshowProjectorCartridge c)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x1E73E68", Offset = "0x1E73E68", VA = "0x1E73E68")]
	private void RemoveCartridge(SteamVR_GrabbableObject grabbable)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x1E739A0", Offset = "0x1E739A0", VA = "0x1E739A0")]
	private void LoadCartridge(Droppable obj)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x1E74118", Offset = "0x1E74118", VA = "0x1E74118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40444", Offset = "0xA40444")]
	private IEnumerator MoveCartridge()
	{
		return null;
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x1E73A88", Offset = "0x1E73A88", VA = "0x1E73A88")]
	public void InitCartridge(bool showSlideAutomatically = true, int slide = 0)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x1E741B8", Offset = "0x1E741B8", VA = "0x1E741B8")]
	private void showSlide(int slide)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x1E74410", Offset = "0x1E74410", VA = "0x1E74410")]
	public void FadeInSlide(Texture backgroundTexture)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x1E74474", Offset = "0x1E74474", VA = "0x1E74474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA404A8", Offset = "0xA404A8")]
	private IEnumerator DoFade(Texture texture)
	{
		return null;
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x1E74538", Offset = "0x1E74538", VA = "0x1E74538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4050C", Offset = "0xA4050C")]
	private IEnumerator newSlide()
	{
		return null;
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x1E74628", Offset = "0x1E74628", VA = "0x1E74628")]
	public void NextSlide()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1E746D8", Offset = "0x1E746D8", VA = "0x1E746D8")]
	public void PrevSlide()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1E74788", Offset = "0x1E74788", VA = "0x1E74788")]
	private void UpdateTexture()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x1E74C54", Offset = "0x1E74C54", VA = "0x1E74C54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x1E748D8", Offset = "0x1E748D8", VA = "0x1E748D8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x1E74C60", Offset = "0x1E74C60", VA = "0x1E74C60")]
	protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x1E74DE8", Offset = "0x1E74DE8", VA = "0x1E74DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x1E74DF8", Offset = "0x1E74DF8", VA = "0x1E74DF8")]
	public SlideshowProjector()
	{
	}
}
[Token(Token = "0x200032A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DCD4", Offset = "0xA2DCD4")]
public class SlideshowProjectorCartridge : MonoBehaviour
{
	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] slides;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject slidePrefab;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> slideObjects;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<int> DidShowSlide;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_GrabbableObject grabbable;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DropArea attachedTo;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int currentSlide;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 firstSlidePosition;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float slideDistance;

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x1E75C0C", Offset = "0x1E75C0C", VA = "0x1E75C0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x1E75CC4", Offset = "0x1E75CC4", VA = "0x1E75CC4")]
	private void CreateSlides()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x1E75F30", Offset = "0x1E75F30", VA = "0x1E75F30")]
	public Vector3 GetPositionForSlide(int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x1E76024", Offset = "0x1E76024", VA = "0x1E76024")]
	private void WasDropped(DropArea dropArea)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x1E75544", Offset = "0x1E75544", VA = "0x1E75544")]
	public void ShowAll()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x1E75610", Offset = "0x1E75610", VA = "0x1E75610")]
	public void SlideShowing(int slide)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x1E74074", Offset = "0x1E74074", VA = "0x1E74074")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x1E76084", Offset = "0x1E76084", VA = "0x1E76084")]
	public SlideshowProjectorCartridge()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x1E760F0", Offset = "0x1E760F0", VA = "0x1E760F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40660", Offset = "0xA40660")]
	private void <Awake>b__9_0(SteamVR_GrabbableObject <p0>)
	{
	}
}
[Token(Token = "0x200032B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DD54", Offset = "0xA2DD54")]
public class SlideshowProjectorRememberSettings : MonoBehaviour
{
	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SlideshowProjector projector;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string loadedCartridgeName;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int loadedCartridgeSlide;

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x1E761B8", Offset = "0x1E761B8", VA = "0x1E761B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x1E762F0", Offset = "0x1E762F0", VA = "0x1E762F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x1E76410", Offset = "0x1E76410", VA = "0x1E76410")]
	public SlideshowProjectorRememberSettings()
	{
	}
}
[Token(Token = "0x200032C")]
public class SmallMovement : MonoBehaviour
{
	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool XAxis;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool YAxis;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool ZAxis;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool onlyMoveWhenVisible;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float OX;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float OY;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float OZ;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer r;

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x1E76480", Offset = "0x1E76480", VA = "0x1E76480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x1E76550", Offset = "0x1E76550", VA = "0x1E76550")]
	private void OnTransformParentChanged()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x1E765E0", Offset = "0x1E765E0", VA = "0x1E765E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x1E7694C", Offset = "0x1E7694C", VA = "0x1E7694C")]
	public SmallMovement()
	{
	}
}
[Token(Token = "0x200032D")]
public class SoundStore : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200032E")]
	public class Sound
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string label;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ORFmodStudioEventEmitter emitter;

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1E772D0", Offset = "0x1E772D0", VA = "0x1E772D0")]
		public Sound()
		{
		}
	}

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sound[] sounds;

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x1E772C8", Offset = "0x1E772C8", VA = "0x1E772C8")]
	public SoundStore()
	{
	}
}
[Token(Token = "0x200032F")]
public class SoundSurfaceTrigger : MonoBehaviour
{
	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FootSounds.SurfaceEnum surface;

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x1E772D8", Offset = "0x1E772D8", VA = "0x1E772D8")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x1E77418", Offset = "0x1E77418", VA = "0x1E77418")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x1E77458", Offset = "0x1E77458", VA = "0x1E77458")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x1E77594", Offset = "0x1E77594", VA = "0x1E77594")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x1E77318", Offset = "0x1E77318", VA = "0x1E77318")]
	private void SetSurfaceSound(GameObject go, FootSounds.SurfaceEnum surface)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x1E77498", Offset = "0x1E77498", VA = "0x1E77498")]
	private void ResetSurfaceSound(GameObject go)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x1E775D4", Offset = "0x1E775D4", VA = "0x1E775D4")]
	public SoundSurfaceTrigger()
	{
	}
}
[Token(Token = "0x2000330")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DDB8", Offset = "0xA2DDB8")]
public class SpeedLever : MonoBehaviour
{
	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform target;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ISetSpeed setSpeedTarget;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float max;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float min;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SimpleLever lever;

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x1E78BA4", Offset = "0x1E78BA4", VA = "0x1E78BA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x1E78C24", Offset = "0x1E78C24", VA = "0x1E78C24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x1E78D0C", Offset = "0x1E78D0C", VA = "0x1E78D0C")]
	public SpeedLever()
	{
	}
}
[Token(Token = "0x2000331")]
public class SplashIntroSequence : MonoBehaviour
{
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE1C", Offset = "0xA2DE1C")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplashIntroSequence <>4__this;

		[Token(Token = "0x170001F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x1E7970C", Offset = "0x1E7970C", VA = "0x1E7970C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x1E7977C", Offset = "0x1E7977C", VA = "0x1E7977C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1E794D0", Offset = "0x1E794D0", VA = "0x1E794D0")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1E79554", Offset = "0x1E79554", VA = "0x1E79554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1E79558", Offset = "0x1E79558", VA = "0x1E79558", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1E79714", Offset = "0x1E79714", VA = "0x1E79714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeBeforeVideo;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] activateForVideo;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float durationToLoad;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string loadScene;

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x1E7945C", Offset = "0x1E7945C", VA = "0x1E7945C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40670", Offset = "0xA40670")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x1E794FC", Offset = "0x1E794FC", VA = "0x1E794FC")]
	public SplashIntroSequence()
	{
	}
}
[Token(Token = "0x2000333")]
public class StartParticleEffect : MonoBehaviour
{
	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ParticleEffect;

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x1E79790", Offset = "0x1E79790", VA = "0x1E79790")]
	public void StartEffect(Vector3 position)
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x1E798DC", Offset = "0x1E798DC", VA = "0x1E798DC")]
	public StartParticleEffect()
	{
	}
}
[Token(Token = "0x2000334")]
public class Symbol : MonoBehaviour
{
	[Token(Token = "0x2000335")]
	public enum SymbolEnum
	{
		[Token(Token = "0x4001122")]
		Bird,
		[Token(Token = "0x4001123")]
		Rat,
		[Token(Token = "0x4001124")]
		Face,
		[Token(Token = "0x4001125")]
		Horns,
		[Token(Token = "0x4001126")]
		Dragon,
		[Token(Token = "0x4001127")]
		Sun,
		[Token(Token = "0x4001128")]
		Cube,
		[Token(Token = "0x4001129")]
		Apple,
		[Token(Token = "0x400112A")]
		Cross,
		[Token(Token = "0x400112B")]
		Bone,
		[Token(Token = "0x400112C")]
		Feather,
		[Token(Token = "0x400112D")]
		Snake,
		[Token(Token = "0x400112E")]
		Fish,
		[Token(Token = "0x400112F")]
		Spider,
		[Token(Token = "0x4001130")]
		CrabClaw,
		[Token(Token = "0x4001131")]
		Flower
	}

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SymbolEnum symbol;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer[] renderers;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x1DF20F8", Offset = "0x1DF20F8", VA = "0x1DF20F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x1DF239C", Offset = "0x1DF239C", VA = "0x1DF239C")]
	private void Init()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x1DF20FC", Offset = "0x1DF20FC", VA = "0x1DF20FC")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x1DF2468", Offset = "0x1DF2468", VA = "0x1DF2468")]
	public Symbol()
	{
	}
}
[Token(Token = "0x2000336")]
public class Teleport : MonoBehaviour
{
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE2C", Offset = "0xA2DE2C")]
	private sealed class <DoTeleport>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleport <>4__this;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider coll;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OddRavenCharacterInput <input>5__2;

		[Token(Token = "0x170001F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x1DF3200", Offset = "0x1DF3200", VA = "0x1DF3200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x1DF3270", Offset = "0x1DF3270", VA = "0x1DF3270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1DF2718", Offset = "0x1DF2718", VA = "0x1DF2718")]
		[DebuggerHidden]
		public <DoTeleport>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1DF2B28", Offset = "0x1DF2B28", VA = "0x1DF2B28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1DF2B2C", Offset = "0x1DF2B2C", VA = "0x1DF2B2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x1DF3208", Offset = "0x1DF3208", VA = "0x1DF3208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE3C", Offset = "0xA2DE3C")]
	private sealed class <WaitForTeleport>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x1DF334C", Offset = "0x1DF334C", VA = "0x1DF334C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x1DF33BC", Offset = "0x1DF33BC", VA = "0x1DF33BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1DF2A90", Offset = "0x1DF2A90", VA = "0x1DF2A90")]
		[DebuggerHidden]
		public <WaitForTeleport>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1DF3278", Offset = "0x1DF3278", VA = "0x1DF3278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1DF327C", Offset = "0x1DF327C", VA = "0x1DF327C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1DF3354", Offset = "0x1DF3354", VA = "0x1DF3354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform teleportTo;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool teleportVR;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform teleportVRTo;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showEntryTunnel;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool shouldWalk;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fadeTime;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MonoBehaviour PlayAreaToDisable;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MonoBehaviour PlayAreaToEnable;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MonoBehaviour activateBehaviour;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool walk;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool tpOnce;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OddRavenCharacterController orcc;

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x1DF25AC", Offset = "0x1DF25AC", VA = "0x1DF25AC")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x1DF2680", Offset = "0x1DF2680", VA = "0x1DF2680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40724", Offset = "0xA40724")]
	private IEnumerator DoTeleport(Collider coll)
	{
		return null;
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x1DF2744", Offset = "0x1DF2744", VA = "0x1DF2744")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x1DF2A30", Offset = "0x1DF2A30", VA = "0x1DF2A30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40788", Offset = "0xA40788")]
	private IEnumerator WaitForTeleport()
	{
		return null;
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x1DF2ABC", Offset = "0x1DF2ABC", VA = "0x1DF2ABC")]
	public Teleport()
	{
	}
}
[Token(Token = "0x2000339")]
public class TreadMill : MonoBehaviour
{
	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x1DF5144", Offset = "0x1DF5144", VA = "0x1DF5144")]
	private void OnCollisionStay(Collision coll)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x1DF5298", Offset = "0x1DF5298", VA = "0x1DF5298")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x1DF534C", Offset = "0x1DF534C", VA = "0x1DF534C")]
	public TreadMill()
	{
	}
}
[Token(Token = "0x200033A")]
public class TrebuchetChallengeMenu : InputComponent
{
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE4C", Offset = "0xA2DE4C")]
	private sealed class <Show>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrebuchetChallengeMenu <>4__this;

		[Token(Token = "0x170001FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x1DF5A3C", Offset = "0x1DF5A3C", VA = "0x1DF5A3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x1DF5AAC", Offset = "0x1DF5AAC", VA = "0x1DF5AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1DF55FC", Offset = "0x1DF55FC", VA = "0x1DF55FC")]
		[DebuggerHidden]
		public <Show>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x1DF5924", Offset = "0x1DF5924", VA = "0x1DF5924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1DF5928", Offset = "0x1DF5928", VA = "0x1DF5928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1DF5A44", Offset = "0x1DF5A44", VA = "0x1DF5A44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE5C", Offset = "0xA2DE5C")]
	private sealed class <Hide>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrebuchetChallengeMenu <>4__this;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x1DF58AC", Offset = "0x1DF58AC", VA = "0x1DF58AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x1DF591C", Offset = "0x1DF591C", VA = "0x1DF591C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1DF5628", Offset = "0x1DF5628", VA = "0x1DF5628")]
		[DebuggerHidden]
		public <Hide>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1DF579C", Offset = "0x1DF579C", VA = "0x1DF579C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1DF57A0", Offset = "0x1DF57A0", VA = "0x1DF57A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1DF58B4", Offset = "0x1DF58B4", VA = "0x1DF58B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton startButton;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool active;

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x1DF5354", Offset = "0x1DF5354", VA = "0x1DF5354", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x1DF53CC", Offset = "0x1DF53CC", VA = "0x1DF53CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x1DF54E4", Offset = "0x1DF54E4", VA = "0x1DF54E4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x1DF5470", Offset = "0x1DF5470", VA = "0x1DF5470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4088C", Offset = "0xA4088C")]
	private IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x1DF5588", Offset = "0x1DF5588", VA = "0x1DF5588")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA408F0", Offset = "0xA408F0")]
	private IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x1DF5654", Offset = "0x1DF5654", VA = "0x1DF5654", Slot = "17")]
	public override void OnFixedUpdate()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x1DF5790", Offset = "0x1DF5790", VA = "0x1DF5790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x1DF5794", Offset = "0x1DF5794", VA = "0x1DF5794")]
	public TrebuchetChallengeMenu()
	{
	}
}
[Token(Token = "0x200033D")]
public class TunnelLight : MonoBehaviour
{
	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] particleSystems;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _on;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lightIntensity;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float saveRange;

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x1DF7914", Offset = "0x1DF7914", VA = "0x1DF7914")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x1DF7A80", Offset = "0x1DF7A80", VA = "0x1DF7A80")]
	private void On()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x1DF7B70", Offset = "0x1DF7B70", VA = "0x1DF7B70")]
	private void Update()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x1DF7CC4", Offset = "0x1DF7CC4", VA = "0x1DF7CC4")]
	public TunnelLight()
	{
	}
}
[Token(Token = "0x200033E")]
public class WearableMenu : InputComponent, IPunObservable
{
	[Serializable]
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE6C", Offset = "0xA2DE6C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameData.WearableData, bool> <>9__24_0;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1F5EB7C", Offset = "0x1F5EB7C", VA = "0x1F5EB7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1F5EB84", Offset = "0x1F5EB84", VA = "0x1F5EB84")]
		internal bool <On>b__24_0(GameData.WearableData w)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE7C", Offset = "0xA2DE7C")]
	private sealed class <ShowNextWearable>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WearableMenu <>4__this;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int direction;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x17000200")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x1F5F614", Offset = "0x1F5F614", VA = "0x1F5F614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x1F5F684", Offset = "0x1F5F684", VA = "0x1F5F684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x1F5DB70", Offset = "0x1F5DB70", VA = "0x1F5DB70")]
		[DebuggerHidden]
		public <ShowNextWearable>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1F5F05C", Offset = "0x1F5F05C", VA = "0x1F5F05C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1F5F060", Offset = "0x1F5F060", VA = "0x1F5F060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1F5F61C", Offset = "0x1F5F61C", VA = "0x1F5F61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE8C", Offset = "0xA2DE8C")]
	private sealed class <HideCurrentWearable>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WearableMenu <>4__this;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000202")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x1F5EFE4", Offset = "0x1F5EFE4", VA = "0x1F5EFE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x1F5F054", Offset = "0x1F5F054", VA = "0x1F5F054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1F5DC10", Offset = "0x1F5DC10", VA = "0x1F5DC10")]
		[DebuggerHidden]
		public <HideCurrentWearable>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1F5ED5C", Offset = "0x1F5ED5C", VA = "0x1F5ED5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1F5ED60", Offset = "0x1F5ED60", VA = "0x1F5ED60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1F5EFEC", Offset = "0x1F5EFEC", VA = "0x1F5EFEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DE9C", Offset = "0xA2DE9C")]
	private sealed class <CloseMenu>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WearableMenu <>4__this;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x1F5ECE4", Offset = "0x1F5ECE4", VA = "0x1F5ECE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x1F5ED54", Offset = "0x1F5ED54", VA = "0x1F5ED54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x1F5E600", Offset = "0x1F5E600", VA = "0x1F5E600")]
		[DebuggerHidden]
		public <CloseMenu>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1F5EBB0", Offset = "0x1F5EBB0", VA = "0x1F5EBB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x1F5EBB4", Offset = "0x1F5EBB4", VA = "0x1F5EBB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1F5ECEC", Offset = "0x1F5ECEC", VA = "0x1F5ECEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OddRavenVrPriorityOrder singlePlayerModePriorityOrder;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject wearable;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentWearable;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameData.WearableData[] unlockedWearables;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float cooldown;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public VrButton selectWearable;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VrButton clearWearable;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public VrButton cancelMenu;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MonoBehaviour[] deactivateAtClose;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform mirror;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject carlyVrInstructions;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33C78", Offset = "0xA33C78")]
	public ORFmodStudioEventEmitter hideItemSound;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ORFmodStudioEventEmitter showItemSound;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ORFmodStudioEventEmitter selectItemSound;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ORFmodStudioEventEmitter cancelSound;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ORFmodStudioEventEmitter clearSound;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PhotonView photonView;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int syncedWearableIndex;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ReleaseWearable _wearableMount;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool runningShowNext;

	[Token(Token = "0x170001FF")]
	private ReleaseWearable wearableMount
	{
		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1F5D4CC", Offset = "0x1F5D4CC", VA = "0x1F5D4CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x1F5D580", Offset = "0x1F5D580", VA = "0x1F5D580", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x1F5D6F4", Offset = "0x1F5D6F4", VA = "0x1F5D6F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x1F5D6F8", Offset = "0x1F5D6F8", VA = "0x1F5D6F8", Slot = "10")]
	public override OddRavenVrPriorityOrder GetPriorityOrder()
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x1F5D738", Offset = "0x1F5D738", VA = "0x1F5D738")]
	private void On()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x1F5DAD8", Offset = "0x1F5DAD8", VA = "0x1F5DAD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA409F4", Offset = "0xA409F4")]
	private IEnumerator ShowNextWearable(int direction = 1)
	{
		return null;
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x1F5DB9C", Offset = "0x1F5DB9C", VA = "0x1F5DB9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40A58", Offset = "0xA40A58")]
	private IEnumerator HideCurrentWearable()
	{
		return null;
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x1F5DC3C", Offset = "0x1F5DC3C", VA = "0x1F5DC3C")]
	private void Off()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x1F5DE84", Offset = "0x1F5DE84", VA = "0x1F5DE84")]
	private void Update()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x1F5DE10", Offset = "0x1F5DE10", VA = "0x1F5DE10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40ABC", Offset = "0xA40ABC")]
	private IEnumerator CloseMenu()
	{
		return null;
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x1F5E62C", Offset = "0x1F5E62C", VA = "0x1F5E62C", Slot = "26")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x1F5E774", Offset = "0x1F5E774", VA = "0x1F5E774")]
	[PunRPC]
	private void AddWearableRpc(int index)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x1F5EA00", Offset = "0x1F5EA00", VA = "0x1F5EA00")]
	[PunRPC]
	private void ClearWearablesRpc()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x1F5EAFC", Offset = "0x1F5EAFC", VA = "0x1F5EAFC")]
	public WearableMenu()
	{
	}
}
[Token(Token = "0x2000343")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA2DEAC", Offset = "0xA2DEAC")]
public class WearablePack : ScriptableObject
{
	[Token(Token = "0x600106C")]
	[Address(RVA = "0x1F5F68C", Offset = "0x1F5F68C", VA = "0x1F5F68C")]
	public WearablePack()
	{
	}
}
[Token(Token = "0x2000344")]
public class WearablePickup : MonoBehaviour
{
	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string wearableId;

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x1F5F694", Offset = "0x1F5F694", VA = "0x1F5F694")]
	private void Consume()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x1F5F818", Offset = "0x1F5F818", VA = "0x1F5F818")]
	public WearablePickup()
	{
	}
}
[Token(Token = "0x2000345")]
public class Wiggle : MonoBehaviour
{
	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] renderers;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 scale;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 currentPosition;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 distance;

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x1F5FAFC", Offset = "0x1F5FAFC", VA = "0x1F5FAFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x1F5FBDC", Offset = "0x1F5FBDC", VA = "0x1F5FBDC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x1F5FEF4", Offset = "0x1F5FEF4", VA = "0x1F5FEF4")]
	public Wiggle()
	{
	}
}
[Token(Token = "0x2000346")]
public class Wigstand : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2DF0C", Offset = "0xA2DF0C")]
	private sealed class <>c
	{
		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameData.WearableData, bool> <>9__2_0;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameData.WearableData, GameObject> <>9__2_1;

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1F60324", Offset = "0x1F60324", VA = "0x1F60324")]
		public <>c()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x1F6032C", Offset = "0x1F6032C", VA = "0x1F6032C")]
		internal bool <Awake>b__2_0(GameData.WearableData w)
		{
			return default(bool);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x1F60358", Offset = "0x1F60358", VA = "0x1F60358")]
		internal GameObject <Awake>b__2_1(GameData.WearableData w)
		{
			return null;
		}
	}

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReleaseWearable[] wigstands;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] unlockedWearables;

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x1F5FF74", Offset = "0x1F5FF74", VA = "0x1F5FF74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x1F602B8", Offset = "0x1F602B8", VA = "0x1F602B8")]
	public Wigstand()
	{
	}
}
[Token(Token = "0x2000348")]
public class Tankship : MonoBehaviour
{
	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_time;

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x1DF2470", Offset = "0x1DF2470", VA = "0x1DF2470")]
	private void Update()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x1DF25A4", Offset = "0x1DF25A4", VA = "0x1DF25A4")]
	public Tankship()
	{
	}
}
[Token(Token = "0x2000349")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DF1C", Offset = "0xA2DF1C")]
public class TemporaryAirborneVelocityModifier : MonoBehaviour
{
	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float newSpeed;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldSpeed;

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x1DF33C4", Offset = "0x1DF33C4", VA = "0x1DF33C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x1DF347C", Offset = "0x1DF347C", VA = "0x1DF347C")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x1DF3594", Offset = "0x1DF3594", VA = "0x1DF3594")]
	public TemporaryAirborneVelocityModifier()
	{
	}
}
[Token(Token = "0x200034A")]
public class TimeBoard : MonoBehaviour
{
	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text timeText;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Level level;

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x1DF3964", Offset = "0x1DF3964", VA = "0x1DF3964")]
	private void Start()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x1DF39B8", Offset = "0x1DF39B8", VA = "0x1DF39B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x1DF3C7C", Offset = "0x1DF3C7C", VA = "0x1DF3C7C")]
	public TimeBoard()
	{
	}
}
[Token(Token = "0x200034B")]
public class TubeRenderer : MonoBehaviour
{
	[Token(Token = "0x200034C")]
	public class TubeVertex
	{
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 point;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1DF6378", Offset = "0x1DF6378", VA = "0x1DF6378")]
		public TubeVertex(Vector3 pt, float r, Color c)
		{
		}
	}

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TubeVertex[] vertices;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int crossSegments;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float flatAtDistance;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int movePixelsForRebuild;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxRebuildTime;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useMeshCollision;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] crossPoints;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lastCrossSegments;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh mesh;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool colliderExists;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool usingBumpmap;

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x1DF615C", Offset = "0x1DF615C", VA = "0x1DF615C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x1DF645C", Offset = "0x1DF645C", VA = "0x1DF645C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x1DF65D8", Offset = "0x1DF65D8", VA = "0x1DF65D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x1DF7234", Offset = "0x1DF7234", VA = "0x1DF7234")]
	private Vector4[] CalculateTangents(Vector3[] verts)
	{
		return null;
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x1DF7430", Offset = "0x1DF7430", VA = "0x1DF7430")]
	public void SetPoints(Vector3[] points, float radius, Color col)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x1DF78F4", Offset = "0x1DF78F4", VA = "0x1DF78F4")]
	public TubeRenderer()
	{
	}
}
[Token(Token = "0x200034D")]
public class TutorialRenderer : MonoBehaviour
{
	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xA33CB0", Offset = "0xA33CB0")]
	public string tutorialText;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float textElevation;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshFilter outlineMesh;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject m_Camera;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject labelGameObject;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject outlineGameObject;

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x1DF7CCC", Offset = "0x1DF7CCC", VA = "0x1DF7CCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x1DF861C", Offset = "0x1DF861C", VA = "0x1DF861C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x1DF86D8", Offset = "0x1DF86D8", VA = "0x1DF86D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x1DF88F4", Offset = "0x1DF88F4", VA = "0x1DF88F4")]
	public TutorialRenderer()
	{
	}
}
[Token(Token = "0x200034E")]
public class AnimateDots : MonoBehaviour
{
	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string waitAnimationDots;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI text;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timePassed;

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xB8B32C", Offset = "0xB8B32C", VA = "0xB8B32C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xB8B3D4", Offset = "0xB8B3D4", VA = "0xB8B3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xB8B4BC", Offset = "0xB8B4BC", VA = "0xB8B4BC")]
	public AnimateDots()
	{
	}
}
[Token(Token = "0x200034F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DF80", Offset = "0xA2DF80")]
public class AudioDeviceDropdown : MonoBehaviour
{
	[Token(Token = "0x600108E")]
	[Address(RVA = "0xB8D478", Offset = "0xB8D478", VA = "0xB8D478")]
	private void Start()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xB8D5D8", Offset = "0xB8D5D8", VA = "0xB8D5D8")]
	public AudioDeviceDropdown()
	{
	}
}
[Token(Token = "0x2000350")]
public class BlackFadeManager : MonoBehaviour
{
	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RawImage fadeImage;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool fadeImageFound;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool shouldFadeUp;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool forceToBlack;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float extraFadeTime;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color? prevColor;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CameraClearFlags? prevClearFlag;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int? prevCullMask;

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x1E442CC", Offset = "0x1E442CC", VA = "0x1E442CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x1E44528", Offset = "0x1E44528", VA = "0x1E44528")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x1E445C8", Offset = "0x1E445C8", VA = "0x1E445C8")]
	public void ForceToBlack()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x1E44984", Offset = "0x1E44984", VA = "0x1E44984")]
	public void ForceToGame()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x1E44C98", Offset = "0x1E44C98", VA = "0x1E44C98")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x1E44CA8", Offset = "0x1E44CA8", VA = "0x1E44CA8")]
	public BlackFadeManager()
	{
	}
}
[Token(Token = "0x2000351")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2DFE4", Offset = "0xA2DFE4")]
public class CanvasGroupSprite : MonoBehaviour
{
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup cg;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer sprite;

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x1E4D3CC", Offset = "0x1E4D3CC", VA = "0x1E4D3CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x1E4D43C", Offset = "0x1E4D43C", VA = "0x1E4D43C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x1E4D4D8", Offset = "0x1E4D4D8", VA = "0x1E4D4D8")]
	public CanvasGroupSprite()
	{
	}
}
[Token(Token = "0x2000352")]
public class CatrInGameConnectionManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E058", Offset = "0xA2E058")]
	private sealed class <animateDots>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatrInGameConnectionManager <>4__this;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x1E50D9C", Offset = "0x1E50D9C", VA = "0x1E50D9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x1E50E0C", Offset = "0x1E50E0C", VA = "0x1E50E0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1E50B68", Offset = "0x1E50B68", VA = "0x1E50B68")]
		[DebuggerHidden]
		public <animateDots>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1E50C28", Offset = "0x1E50C28", VA = "0x1E50C28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1E50C2C", Offset = "0x1E50C2C", VA = "0x1E50C2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1E50DA4", Offset = "0x1E50DA4", VA = "0x1E50DA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E068", Offset = "0xA2E068")]
	private sealed class <tryingHotReconnect>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x1E51004", Offset = "0x1E51004", VA = "0x1E51004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x1E51074", Offset = "0x1E51074", VA = "0x1E51074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1E50BF4", Offset = "0x1E50BF4", VA = "0x1E50BF4")]
		[DebuggerHidden]
		public <tryingHotReconnect>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1E50E14", Offset = "0x1E50E14", VA = "0x1E50E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x1E50E18", Offset = "0x1E50E18", VA = "0x1E50E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1E5100C", Offset = "0x1E5100C", VA = "0x1E5100C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRMenu disconnectMenu;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MainMenu menu;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33CC8", Offset = "0xA33CC8")]
	public LocalizedString lostConnection;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public LocalizedString hasDisconnected;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public LocalizedString hasReconnected;

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x1E5043C", Offset = "0x1E5043C", VA = "0x1E5043C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x1E504DC", Offset = "0x1E504DC", VA = "0x1E504DC", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x1E50678", Offset = "0x1E50678", VA = "0x1E50678", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x1E50724", Offset = "0x1E50724", VA = "0x1E50724", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x1E5090C", Offset = "0x1E5090C", VA = "0x1E5090C", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x1E50AF4", Offset = "0x1E50AF4", VA = "0x1E50AF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40C30", Offset = "0xA40C30")]
	private IEnumerator animateDots()
	{
		return null;
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x1E50B94", Offset = "0x1E50B94", VA = "0x1E50B94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40C94", Offset = "0xA40C94")]
	private IEnumerator tryingHotReconnect()
	{
		return null;
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x1E50C20", Offset = "0x1E50C20", VA = "0x1E50C20")]
	public CatrInGameConnectionManager()
	{
	}
}
[Token(Token = "0x2000355")]
public class CatrLobby : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x2000356")]
	public enum State
	{
		[Token(Token = "0x40011E6")]
		idle,
		[Token(Token = "0x40011E7")]
		connectingToRegion,
		[Token(Token = "0x40011E8")]
		creatingRoom,
		[Token(Token = "0x40011E9")]
		failedCreateRoom,
		[Token(Token = "0x40011EA")]
		joiningRoom,
		[Token(Token = "0x40011EB")]
		joinedFailed,
		[Token(Token = "0x40011EC")]
		inRoom,
		[Token(Token = "0x40011ED")]
		connectinToMaster
	}

	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E078", Offset = "0xA2E078")]
	private sealed class <Start>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatrLobby <>4__this;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x1E57FC8", Offset = "0x1E57FC8", VA = "0x1E57FC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x1E58038", Offset = "0x1E58038", VA = "0x1E58038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1E51BB8", Offset = "0x1E51BB8", VA = "0x1E51BB8")]
		[DebuggerHidden]
		public <Start>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1E57A80", Offset = "0x1E57A80", VA = "0x1E57A80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1E57B5C", Offset = "0x1E57B5C", VA = "0x1E57B5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1E57A9C", Offset = "0x1E57A9C", VA = "0x1E57A9C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1E57FD0", Offset = "0x1E57FD0", VA = "0x1E57FD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E088", Offset = "0xA2E088")]
	private sealed class <CheckPhotonVersion>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatrLobby <>4__this;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x1E56B4C", Offset = "0x1E56B4C", VA = "0x1E56B4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x1E56BBC", Offset = "0x1E56BBC", VA = "0x1E56BBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1E51C58", Offset = "0x1E51C58", VA = "0x1E51C58")]
		[DebuggerHidden]
		public <CheckPhotonVersion>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1E567E4", Offset = "0x1E567E4", VA = "0x1E567E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1E568C0", Offset = "0x1E568C0", VA = "0x1E568C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1E56800", Offset = "0x1E56800", VA = "0x1E56800")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x1E56B54", Offset = "0x1E56B54", VA = "0x1E56B54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E098", Offset = "0xA2E098")]
	private sealed class <ConnectToRoomCodeRoutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string region;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string roomCode;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CatrLobby <>4__this;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x1E571FC", Offset = "0x1E571FC", VA = "0x1E571FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x1E5726C", Offset = "0x1E5726C", VA = "0x1E5726C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1E53E28", Offset = "0x1E53E28", VA = "0x1E53E28")]
		[DebuggerHidden]
		public <ConnectToRoomCodeRoutine>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1E56BC4", Offset = "0x1E56BC4", VA = "0x1E56BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1E56BC8", Offset = "0x1E56BC8", VA = "0x1E56BC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1E57204", Offset = "0x1E57204", VA = "0x1E57204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E0A8", Offset = "0xA2E0A8")]
	private sealed class <CreateRoomRoutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatrLobby <>4__this;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <regionIndex>5__2;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Photon.Realtime.RoomOptions <roomOptions>5__3;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <hasRoom>5__4;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <attemptCount>5__5;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <roomPart>5__6;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <roomCode>5__7;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x1E5786C", Offset = "0x1E5786C", VA = "0x1E5786C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x1E578DC", Offset = "0x1E578DC", VA = "0x1E578DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1E53E54", Offset = "0x1E53E54", VA = "0x1E53E54")]
		[DebuggerHidden]
		public <CreateRoomRoutine>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1E57274", Offset = "0x1E57274", VA = "0x1E57274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1E57278", Offset = "0x1E57278", VA = "0x1E57278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1E57874", Offset = "0x1E57874", VA = "0x1E57874", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E0B8", Offset = "0xA2E0B8")]
	private sealed class <TryConnectToServerRoutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatrLobby <>4__this;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x1E5825C", Offset = "0x1E5825C", VA = "0x1E5825C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x1E582CC", Offset = "0x1E582CC", VA = "0x1E582CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x1E53E80", Offset = "0x1E53E80", VA = "0x1E53E80")]
		[DebuggerHidden]
		public <TryConnectToServerRoutine>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1E58040", Offset = "0x1E58040", VA = "0x1E58040", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1E58044", Offset = "0x1E58044", VA = "0x1E58044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1E58264", Offset = "0x1E58264", VA = "0x1E58264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E0C8", Offset = "0xA2E0C8")]
	private sealed class <Fade2Sec>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatrLobby <>4__this;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0x1E57A08", Offset = "0x1E57A08", VA = "0x1E57A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x1E57A78", Offset = "0x1E57A78", VA = "0x1E57A78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1E53F20", Offset = "0x1E53F20", VA = "0x1E53F20")]
		[DebuggerHidden]
		public <Fade2Sec>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1E578E4", Offset = "0x1E578E4", VA = "0x1E578E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1E578E8", Offset = "0x1E578E8", VA = "0x1E578E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1E57A10", Offset = "0x1E57A10", VA = "0x1E57A10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] regionCodes;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string[] regionNames;

	[Token(Token = "0x40011B6")]
	private const int roomCodeRange = 999999;

	[Token(Token = "0x40011B7")]
	private const int roomCodeSymbolCount = 6;

	[Token(Token = "0x40011B8")]
	private const int regionBits = 4;

	[Token(Token = "0x40011B9")]
	private const int regionMaxValue = 15;

	[Token(Token = "0x40011BA")]
	private const int roomPartMaxValue = 62499;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<string> previousJoinedRooms;

	[Token(Token = "0x40011BC")]
	private const int keepPreviousJoinedRoomCount = 10;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int? connectedRegionIndex;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string connectedRoomCode;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State _state;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool debugMode;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<string> debugLogs;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string debugLogsAsText;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StringBuilder strBuilder;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RoomCodeInput roomCodeInput;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI stateText;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int randomAttemptCount;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private MainMenu menu;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject activeIfPickedReaperman;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject activeIfPickedCarly;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject newVersionAvailable;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private int playerTtl;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private int emptyRoomTtl;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private BlackFadeManager blackFade;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject toggleOnMute;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI failedJoinRoomLabel;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private LocalizedString failedToJoinRoomText;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject[] hideWithPancakePlayers;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject menuVoicePrefab;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool playAsReaperman;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool isHost;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string waitAnimationDots;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool noConnectionBackToJoinMenu;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA33E24", Offset = "0xA33E24")]
	public LocalizedString searchingForFriendsLocStr;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LocalizedString joinedGameHostedByLocStr;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LocalizedString awaitFriendToJoinLocStr;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LocalizedString couldNotJoinRoomLocStr;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LocalizedString playerJoinedGameLocStr;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public LocalizedString fullRoomLocStr;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public LocalizedString enterRoomCodeLocStr;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int clientVersion;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string versionFileUrl;

	[Token(Token = "0x40011E0")]
	private const string photonVersionUrl = "https://catr.s3-us-west-1.amazonaws.com/photon_version.txt";

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool hasCheckedPhotonVersion;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private static bool isCorrectPhotonVersion;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float timeUntilNextPhotonVersionCheck;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static CatrLobby Instance;

	[Token(Token = "0x1700020A")]
	public State state
	{
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x1E5107C", Offset = "0x1E5107C", VA = "0x1E5107C")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x1E51084", Offset = "0x1E51084", VA = "0x1E51084")]
		set
		{
		}
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x1E51618", Offset = "0x1E51618", VA = "0x1E51618")]
	public static void SetDebugMode(bool newMode)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x1E51774", Offset = "0x1E51774", VA = "0x1E51774")]
	public static void PushToDebugLog(string msg)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x1E5108C", Offset = "0x1E5108C", VA = "0x1E5108C")]
	private void UpdateStateDebugText()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x1E51940", Offset = "0x1E51940", VA = "0x1E51940")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x1E51A74", Offset = "0x1E51A74", VA = "0x1E51A74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x1E51B44", Offset = "0x1E51B44", VA = "0x1E51B44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40D98", Offset = "0xA40D98")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x1E51BE4", Offset = "0x1E51BE4", VA = "0x1E51BE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40DFC", Offset = "0xA40DFC")]
	private IEnumerator CheckPhotonVersion()
	{
		return null;
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x1E51C84", Offset = "0x1E51C84", VA = "0x1E51C84")]
	private static int CompareVersions(string a, string b)
	{
		return default(int);
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x1E51D0C", Offset = "0x1E51D0C", VA = "0x1E51D0C")]
	private static int[] GetVersionsInts(string version)
	{
		return null;
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x1E51E9C", Offset = "0x1E51E9C", VA = "0x1E51E9C")]
	private static int CompareVersions(int[] aInts, int[] bInts)
	{
		return default(int);
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x1E51FDC", Offset = "0x1E51FDC", VA = "0x1E51FDC")]
	public void SetHasPancakePlayer(bool on)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x1E520E8", Offset = "0x1E520E8", VA = "0x1E520E8")]
	public void OnClickJoin()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x1E52710", Offset = "0x1E52710", VA = "0x1E52710")]
	private void CreateRoom()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x1E52868", Offset = "0x1E52868", VA = "0x1E52868")]
	private void ShowJoinMenu()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x1E529B4", Offset = "0x1E529B4", VA = "0x1E529B4")]
	private void ShowJoinMenuNoConnectionTest()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x1E52A30", Offset = "0x1E52A30", VA = "0x1E52A30")]
	public void LeaveRoom()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x1E52C10", Offset = "0x1E52C10", VA = "0x1E52C10")]
	private void PicNextChar()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x1E52B14", Offset = "0x1E52B14", VA = "0x1E52B14")]
	private void PickReaperman()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x1E52DAC", Offset = "0x1E52DAC", VA = "0x1E52DAC")]
	private void StartNewGameNetwork(string _)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x1E53A10", Offset = "0x1E53A10", VA = "0x1E53A10")]
	private void LoadGameNetwork(string saveName)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x1E53AAC", Offset = "0x1E53AAC", VA = "0x1E53AAC")]
	private void KickOtherPlayer()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x1E53BEC", Offset = "0x1E53BEC", VA = "0x1E53BEC")]
	public void ToggleMute()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x1E53CE8", Offset = "0x1E53CE8", VA = "0x1E53CE8")]
	private void TryConnectToServer()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x1E53D88", Offset = "0x1E53D88", VA = "0x1E53D88")]
	private void NoConnectionBack()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x1E52660", Offset = "0x1E52660", VA = "0x1E52660")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40E60", Offset = "0xA40E60")]
	private IEnumerator ConnectToRoomCodeRoutine(string region, string roomCode)
	{
		return null;
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x1E527F4", Offset = "0x1E527F4", VA = "0x1E527F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40EC4", Offset = "0xA40EC4")]
	private IEnumerator CreateRoomRoutine()
	{
		return null;
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x1E53D14", Offset = "0x1E53D14", VA = "0x1E53D14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40F28", Offset = "0xA40F28")]
	private IEnumerator TryConnectToServerRoutine()
	{
		return null;
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x1E5259C", Offset = "0x1E5259C", VA = "0x1E5259C")]
	private bool CanPlayOnline()
	{
		return default(bool);
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x1E53EAC", Offset = "0x1E53EAC", VA = "0x1E53EAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA40F8C", Offset = "0xA40F8C")]
	private IEnumerator Fade2Sec()
	{
		return null;
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x1E53F4C", Offset = "0x1E53F4C", VA = "0x1E53F4C", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x1E54334", Offset = "0x1E54334", VA = "0x1E54334", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x1E5440C", Offset = "0x1E5440C", VA = "0x1E5440C", Slot = "36")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x1E5454C", Offset = "0x1E5454C", VA = "0x1E5454C", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x1E54980", Offset = "0x1E54980", VA = "0x1E54980", Slot = "34")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x1E54B3C", Offset = "0x1E54B3C", VA = "0x1E54B3C", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x1E54C00", Offset = "0x1E54C00", VA = "0x1E54C00", Slot = "44")]
	public override void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x1E54CEC", Offset = "0x1E54CEC", VA = "0x1E54CEC", Slot = "35")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x1E54DD4", Offset = "0x1E54DD4", VA = "0x1E54DD4", Slot = "33")]
	public override void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x1E54EAC", Offset = "0x1E54EAC", VA = "0x1E54EAC", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x1E55068", Offset = "0x1E55068", VA = "0x1E55068", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x1E547EC", Offset = "0x1E547EC", VA = "0x1E547EC")]
	private void AddRoomCodeToList(string roomCode)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x1E5514C", Offset = "0x1E5514C", VA = "0x1E5514C")]
	private static int RandomRoomPart()
	{
		return default(int);
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x1E5417C", Offset = "0x1E5417C", VA = "0x1E5417C")]
	private static int? FindRegionIndex(string regionCode)
	{
		return null;
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x1E5515C", Offset = "0x1E5515C", VA = "0x1E5515C")]
	private static string GetRoomCodeFromParts(int regionIndex, int roomPart)
	{
		return null;
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x1E525FC", Offset = "0x1E525FC", VA = "0x1E525FC")]
	private static bool GetRoomPartsFromCode(string roomCode, out int regionIndex, out int roomPart)
	{
		return default(bool);
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x1E55408", Offset = "0x1E55408", VA = "0x1E55408")]
	private static void TestRoomCodes()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x1E55C90", Offset = "0x1E55C90", VA = "0x1E55C90")]
	private void animateDots()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x1E55D50", Offset = "0x1E55D50", VA = "0x1E55D50")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA40FF0", Offset = "0xA40FF0")]
	private static void DbgLog(string log)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x1E55DB8", Offset = "0x1E55DB8", VA = "0x1E55DB8")]
	public CatrLobby()
	{
	}
}
[Token(Token = "0x200035D")]
public class ClickButtonOnKey : MonoBehaviour
{
	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button button;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode[] keys;

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x1E5D2E0", Offset = "0x1E5D2E0", VA = "0x1E5D2E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x1E5D460", Offset = "0x1E5D460", VA = "0x1E5D460")]
	public ClickButtonOnKey()
	{
	}
}
[Token(Token = "0x200035E")]
public class Cutscene : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200035F")]
	public class Scene
	{
		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationTrigger;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem playParticles;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonoBehaviour activateBehaviour;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MonoBehaviour deactivateBehaviour;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ORFmodStudioEventEmitter sound;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minDuration;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool waitForButton;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool dontHideCanvasGroup;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool showPanel;

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xAB07D8", Offset = "0xAB07D8", VA = "0xAB07D8")]
		public Scene()
		{
		}
	}

	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E0D8", Offset = "0xA2E0D8")]
	private sealed class <StartCutscene>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cutscene <>4__this;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForEndOfFrame <weof>5__2;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForButtonPress <wfb>5__3;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds <sceneWait>5__4;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <panelColor>5__5;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <s>5__6;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Scene <scene>5__7;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color <continueColor>5__8;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <alpha>5__9;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color <sceneColor>5__10;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0xAB0760", Offset = "0xAB0760", VA = "0xAB0760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0xAB07D0", Offset = "0xAB07D0", VA = "0xAB07D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xAAF478", Offset = "0xAAF478", VA = "0xAAF478")]
		[DebuggerHidden]
		public <StartCutscene>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xAAF4B4", Offset = "0xAAF4B4", VA = "0xAAF4B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xAAF4B8", Offset = "0xAAF4B8", VA = "0xAAF4B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xAB0768", Offset = "0xAB0768", VA = "0xAB0768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scene[] scenes;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text continueText;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image panel;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton continueButton;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float waitBetweenScenes;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float panelOpacity;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string originalContinueText;

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xAAF0C8", Offset = "0xAAF0C8", VA = "0xAAF0C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xAAF320", Offset = "0xAAF320", VA = "0xAAF320")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xAAF404", Offset = "0xAAF404", VA = "0xAAF404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41208", Offset = "0xA41208")]
	private IEnumerator StartCutscene()
	{
		return null;
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xAAF4A4", Offset = "0xAAF4A4", VA = "0xAAF4A4")]
	public Cutscene()
	{
	}
}
[Token(Token = "0x2000361")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E0E8", Offset = "0xA2E0E8")]
public class DeTokenize : MonoBehaviour
{
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E14C", Offset = "0xA2E14C")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeTokenize <>4__this;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0xAB3A6C", Offset = "0xAB3A6C", VA = "0xAB3A6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0xAB3ADC", Offset = "0xAB3ADC", VA = "0xAB3ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xAB3550", Offset = "0xAB3550", VA = "0xAB3550")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xAB3828", Offset = "0xAB3828", VA = "0xAB3828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xAB382C", Offset = "0xAB382C", VA = "0xAB382C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xAB3A74", Offset = "0xAB3A74", VA = "0xAB3A74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OddRavenVrPriorityOrder priorityOrder;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string originalText;

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xAB34DC", Offset = "0xAB34DC", VA = "0xAB34DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA412BC", Offset = "0xA412BC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xAB357C", Offset = "0xAB357C", VA = "0xAB357C")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xAB3700", Offset = "0xAB3700", VA = "0xAB3700")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xAB3820", Offset = "0xAB3820", VA = "0xAB3820")]
	public DeTokenize()
	{
	}
}
[Token(Token = "0x2000363")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E15C", Offset = "0xA2E15C")]
public class DeTokenizeTextMesh : MonoBehaviour
{
	[Token(Token = "0x2000364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E1C0", Offset = "0xA2E1C0")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeTokenizeTextMesh <>4__this;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0xAB4374", Offset = "0xAB4374", VA = "0xAB4374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0xAB43E4", Offset = "0xAB43E4", VA = "0xAB43E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xAB3B58", Offset = "0xAB3B58", VA = "0xAB3B58")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xAB3F70", Offset = "0xAB3F70", VA = "0xAB3F70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xAB3F74", Offset = "0xAB3F74", VA = "0xAB3F74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xAB437C", Offset = "0xAB437C", VA = "0xAB437C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text text;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OddRavenVrPriorityOrder priorityOrder;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string originalText;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LocalizedTextMeshPro ltmp;

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xAB3AE4", Offset = "0xAB3AE4", VA = "0xAB3AE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41370", Offset = "0xA41370")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xAB3B84", Offset = "0xAB3B84", VA = "0xAB3B84")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xAB3D94", Offset = "0xAB3D94", VA = "0xAB3D94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xAB3F68", Offset = "0xAB3F68", VA = "0xAB3F68")]
	public DeTokenizeTextMesh()
	{
	}
}
[Token(Token = "0x2000365")]
public class FadeIn : MonoBehaviour
{
	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float duration;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float elapsedTime;

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xAC7084", Offset = "0xAC7084", VA = "0xAC7084")]
	private void Start()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xAC7114", Offset = "0xAC7114", VA = "0xAC7114")]
	private void Update()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xAC722C", Offset = "0xAC722C", VA = "0xAC722C")]
	public FadeIn()
	{
	}
}
[Token(Token = "0x2000366")]
public class FadeOut : MonoBehaviour
{
	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float duration;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float elapsedTime;

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xAC7234", Offset = "0xAC7234", VA = "0xAC7234")]
	private void Start()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xAC72C4", Offset = "0xAC72C4", VA = "0xAC72C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xAC73DC", Offset = "0xAC73DC", VA = "0xAC73DC")]
	public FadeOut()
	{
	}
}
[Token(Token = "0x2000367")]
public class GamepadMenu : GamePadComponent
{
	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRMenuItem[] items;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button[] buttons;

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xBA66CC", Offset = "0xBA66CC", VA = "0xBA66CC")]
	public GamepadMenu()
	{
	}
}
[Token(Token = "0x2000368")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E1D0", Offset = "0xA2E1D0")]
public class InputDeviceDropdown : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E234", Offset = "0xA2E234")]
	private sealed class <>c
	{
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<InputDeviceBase, string> <>9__2_0;

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xCDE964", Offset = "0xCDE964", VA = "0xCDE964")]
		public <>c()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xCDE96C", Offset = "0xCDE96C", VA = "0xCDE96C")]
		internal string <UpdateList>b__2_0(InputDeviceBase d)
		{
			return null;
		}
	}

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OddRavenVrPriorityOrder priorityOrder;

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xCDE410", Offset = "0xCDE410", VA = "0xCDE410")]
	private void Start()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xCDE538", Offset = "0xCDE538", VA = "0xCDE538")]
	private void UpdateList()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xCDE7D8", Offset = "0xCDE7D8", VA = "0xCDE7D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xCDE8F8", Offset = "0xCDE8F8", VA = "0xCDE8F8")]
	public InputDeviceDropdown()
	{
	}
}
[Token(Token = "0x200036A")]
public class InventoryUI : MonoBehaviour
{
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E244", Offset = "0xA2E244")]
	private sealed class <ReorganizeIcons>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InventoryUI <>4__this;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0xCE0F38", Offset = "0xCE0F38", VA = "0xCE0F38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0xCE0FA8", Offset = "0xCE0FA8", VA = "0xCE0FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xCE0504", Offset = "0xCE0504", VA = "0xCE0504")]
		[DebuggerHidden]
		public <ReorganizeIcons>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xCE0D80", Offset = "0xCE0D80", VA = "0xCE0D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xCE0D84", Offset = "0xCE0D84", VA = "0xCE0D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xCE0F40", Offset = "0xCE0F40", VA = "0xCE0F40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, GameObject> inventory;

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xCDFF1C", Offset = "0xCDFF1C", VA = "0xCDFF1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xCE00E0", Offset = "0xCE00E0", VA = "0xCE00E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xCE02A4", Offset = "0xCE02A4", VA = "0xCE02A4")]
	private void InventoryItemConsumed(PlayerCharacter.InventoryItem item)
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xCE0490", Offset = "0xCE0490", VA = "0xCE0490")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41424", Offset = "0xA41424")]
	private IEnumerator ReorganizeIcons()
	{
		return null;
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xCE0530", Offset = "0xCE0530", VA = "0xCE0530")]
	private void InventoryItemAdded(PlayerCharacter.InventoryItem item)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xCE0D10", Offset = "0xCE0D10", VA = "0xCE0D10")]
	public InventoryUI()
	{
	}
}
[Token(Token = "0x200036C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E254", Offset = "0xA2E254")]
public class LanguageDropdown : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E2B8", Offset = "0xA2E2B8")]
	private sealed class <>c
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Localization, string> <>9__2_0;

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1E2378C", Offset = "0x1E2378C", VA = "0x1E2378C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1E23794", Offset = "0x1E23794", VA = "0x1E23794")]
		internal string <Refresh>b__2_0(Localization x)
		{
			return null;
		}
	}

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRDropDown dropdown;

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x1E23460", Offset = "0x1E23460", VA = "0x1E23460")]
	private void Start()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x1E23588", Offset = "0x1E23588", VA = "0x1E23588")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x1E23720", Offset = "0x1E23720", VA = "0x1E23720")]
	public LanguageDropdown()
	{
	}
}
[Token(Token = "0x200036E")]
public class LoadProgress : MonoBehaviour
{
	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image progressImage;

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x1E35A40", Offset = "0x1E35A40", VA = "0x1E35A40")]
	private void UpdateProgress(float p)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x1E35A80", Offset = "0x1E35A80", VA = "0x1E35A80")]
	public LoadProgress()
	{
	}
}
[Token(Token = "0x200036F")]
public class LobbyDebugHandler : MonoBehaviour
{
	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int clicksToToggle;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int clicks;

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x1E37F68", Offset = "0x1E37F68", VA = "0x1E37F68")]
	private void OnClick()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x1E37FFC", Offset = "0x1E37FFC", VA = "0x1E37FFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x1E38004", Offset = "0x1E38004", VA = "0x1E38004")]
	public LobbyDebugHandler()
	{
	}
}
[Token(Token = "0x2000370")]
public class MirrorCanvas : MonoBehaviour
{
	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvas;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<KeyValuePair<CanvasGroup, CanvasGroup>> canvasGroupPairs;

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xD50320", Offset = "0xD50320", VA = "0xD50320")]
	private void Start()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xD5050C", Offset = "0xD5050C", VA = "0xD5050C")]
	private void Update()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xD50644", Offset = "0xD50644", VA = "0xD50644")]
	public MirrorCanvas()
	{
	}
}
[Token(Token = "0x2000371")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E2C8", Offset = "0xA2E2C8")]
public class NoMenuInput : MonoBehaviour
{
	[Token(Token = "0x6001150")]
	[Address(RVA = "0xD55A34", Offset = "0xD55A34", VA = "0xD55A34")]
	public NoMenuInput()
	{
	}
}
[Token(Token = "0x2000372")]
public class PauseMenu : InputComponent
{
	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton showMenuButton;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasRenderer gui;

	[NonSerialized]
	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool showMenu;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform volumetricLightSetting;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform bloomSetting;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform resolutionSetting;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform detailLevelSetting;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform qualitySetting;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform framerateSetting;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RectTransform mainMenu;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform settingsMenu;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Toggle invertYAxisSetting;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Toggle rotateLevelSetting;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool blurVR;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float saveRenderScale;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BlurOptimized blur;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action DidShow;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action DidHide;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PauseMenu isMirrorOf;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool loading;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool readingSettings;

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x1E94F5C", Offset = "0x1E94F5C", VA = "0x1E94F5C", Slot = "15")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x1E94F8C", Offset = "0x1E94F8C", VA = "0x1E94F8C", Slot = "16")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x1E95324", Offset = "0x1E95324", VA = "0x1E95324")]
	public void Show(bool doCallbacks = true)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x1E9551C", Offset = "0x1E9551C", VA = "0x1E9551C")]
	public void Hide(bool doCallbacks = true)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x1E95B5C", Offset = "0x1E95B5C", VA = "0x1E95B5C")]
	public void SelectMainMenu()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x1E95C6C", Offset = "0x1E95C6C", VA = "0x1E95C6C")]
	public void SelectSettings()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x1E95D7C", Offset = "0x1E95D7C", VA = "0x1E95D7C")]
	public void SelectGfxSettings()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x1E95E8C", Offset = "0x1E95E8C", VA = "0x1E95E8C")]
	public void SelectControlSettings()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x1E95F80", Offset = "0x1E95F80", VA = "0x1E95F80")]
	public void ResumeGame()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x1E95F8C", Offset = "0x1E95F8C", VA = "0x1E95F8C")]
	public void RestartLevel()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x1E96048", Offset = "0x1E96048", VA = "0x1E96048")]
	public void QuitToReaperOffice()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x1E96100", Offset = "0x1E96100", VA = "0x1E96100")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x1E96190", Offset = "0x1E96190", VA = "0x1E96190")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x1E96198", Offset = "0x1E96198", VA = "0x1E96198")]
	public void SaveSettingsToFile()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x1E9565C", Offset = "0x1E9565C", VA = "0x1E9565C")]
	public void ReadSettings()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x1E96210", Offset = "0x1E96210", VA = "0x1E96210")]
	public void ApplySettings()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x1E9673C", Offset = "0x1E9673C", VA = "0x1E9673C")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x2000373")]
public class RoomCodeInput : MonoBehaviour
{
	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numberOfCharacters;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRMenuItem[] activeWhenValidCode;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private Button[] activeButtonWhenValidCode;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StringBuilder strBuilder;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> charList;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action<List<string>> onConstructCode;

	[NonSerialized]
	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string roomCode;

	[NonSerialized]
	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool validCode;

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x1EB5E98", Offset = "0x1EB5E98", VA = "0x1EB5E98")]
	public void Register(Action<List<string>> onConstructCode)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x1EB5F84", Offset = "0x1EB5F84", VA = "0x1EB5F84")]
	public void SetCode(string roomCode)
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x1EB62D0", Offset = "0x1EB62D0", VA = "0x1EB62D0")]
	public void ClearCode()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x1EB6338", Offset = "0x1EB6338", VA = "0x1EB6338")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x1EB6094", Offset = "0x1EB6094", VA = "0x1EB6094")]
	private void ConstructCode()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x1EB63C4", Offset = "0x1EB63C4", VA = "0x1EB63C4")]
	private void AddNumber(string c)
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x1EB647C", Offset = "0x1EB647C", VA = "0x1EB647C")]
	private void Backspace()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x1EB6558", Offset = "0x1EB6558", VA = "0x1EB6558")]
	private void Add0()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x1EB65A8", Offset = "0x1EB65A8", VA = "0x1EB65A8")]
	private void Add1()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x1EB65F8", Offset = "0x1EB65F8", VA = "0x1EB65F8")]
	private void Add2()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x1EB6648", Offset = "0x1EB6648", VA = "0x1EB6648")]
	private void Add3()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x1EB6698", Offset = "0x1EB6698", VA = "0x1EB6698")]
	private void Add4()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x1EB66E8", Offset = "0x1EB66E8", VA = "0x1EB66E8")]
	private void Add5()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x1EB6738", Offset = "0x1EB6738", VA = "0x1EB6738")]
	private void Add6()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x1EB6788", Offset = "0x1EB6788", VA = "0x1EB6788")]
	private void Add7()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x1EB67D8", Offset = "0x1EB67D8", VA = "0x1EB67D8")]
	private void Add8()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x1EB6828", Offset = "0x1EB6828", VA = "0x1EB6828")]
	private void Add9()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x1EB6878", Offset = "0x1EB6878", VA = "0x1EB6878")]
	public RoomCodeInput()
	{
	}
}
[Token(Token = "0x2000374")]
public class RoomCodeLabel : MonoBehaviour
{
	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomCodeInput input;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI[] labels;

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x1EB6888", Offset = "0x1EB6888", VA = "0x1EB6888")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x1EB691C", Offset = "0x1EB691C", VA = "0x1EB691C")]
	private void OnCodeUpdate(List<string> charList)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x1EB6B0C", Offset = "0x1EB6B0C", VA = "0x1EB6B0C")]
	public RoomCodeLabel()
	{
	}
}
[Token(Token = "0x2000375")]
public class SaveFileMenuItem : MonoBehaviour
{
	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI textMesh;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fireFlyIcon;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI fireFlyText;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRMenuItem button;

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x1E615B0", Offset = "0x1E615B0", VA = "0x1E615B0")]
	public SaveFileMenuItem()
	{
	}
}
[Token(Token = "0x2000376")]
public class ShowActiveCamera : MonoBehaviour
{
	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIBehaviour[] indicators;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CameraController cameraController;

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x1E6B774", Offset = "0x1E6B774", VA = "0x1E6B774")]
	private void Start()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x1E6B8CC", Offset = "0x1E6B8CC", VA = "0x1E6B8CC")]
	private void CameraChanged(Transform obj)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x1E6B948", Offset = "0x1E6B948", VA = "0x1E6B948")]
	private void HideAll()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x1E6B9E8", Offset = "0x1E6B9E8", VA = "0x1E6B9E8")]
	public ShowActiveCamera()
	{
	}
}
[Token(Token = "0x2000377")]
public class ShowCoins : MonoBehaviour
{
	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x1E6BC4C", Offset = "0x1E6BC4C", VA = "0x1E6BC4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x1E6BD74", Offset = "0x1E6BD74", VA = "0x1E6BD74")]
	private void UpdateCoins()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x1E6BD78", Offset = "0x1E6BD78", VA = "0x1E6BD78")]
	public void WriteCoins()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x1E6BE3C", Offset = "0x1E6BE3C", VA = "0x1E6BE3C")]
	public ShowCoins()
	{
	}
}
[Token(Token = "0x2000378")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E32C", Offset = "0xA2E32C")]
public class ShowFinishedLevels : MonoBehaviour
{
	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x1E6BE84", Offset = "0x1E6BE84", VA = "0x1E6BE84")]
	private void Start()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x1E6BFD8", Offset = "0x1E6BFD8", VA = "0x1E6BFD8")]
	public ShowFinishedLevels()
	{
	}
}
[Token(Token = "0x2000379")]
public class ShowKeys : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E390", Offset = "0xA2E390")]
	private sealed class <>c
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Door, bool> <>9__3_0;

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x1E6C708", Offset = "0x1E6C708", VA = "0x1E6C708")]
		public <>c()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1E6C710", Offset = "0x1E6C710", VA = "0x1E6C710")]
		internal bool <Start>b__3_0(Door d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI text;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CanvasGroup cg;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Door door;

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x1E6BFE0", Offset = "0x1E6BFE0", VA = "0x1E6BFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x1E6C368", Offset = "0x1E6C368", VA = "0x1E6C368")]
	private void UpdateText(PlayerCharacter.InventoryItem item)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x1E6C4E0", Offset = "0x1E6C4E0", VA = "0x1E6C4E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x1E6C69C", Offset = "0x1E6C69C", VA = "0x1E6C69C")]
	public ShowKeys()
	{
	}
}
[Token(Token = "0x200037B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E3A0", Offset = "0xA2E3A0")]
public class ShowLevelCaption : MonoBehaviour
{
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E404", Offset = "0xA2E404")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowLevelCaption <>4__this;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CanvasGroup <cg>5__2;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x1E6CD90", Offset = "0x1E6CD90", VA = "0x1E6CD90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x1E6CE00", Offset = "0x1E6CE00", VA = "0x1E6CE00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x1E6C7B0", Offset = "0x1E6C7B0", VA = "0x1E6C7B0")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1E6C7F4", Offset = "0x1E6C7F4", VA = "0x1E6C7F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1E6C7F8", Offset = "0x1E6C7F8", VA = "0x1E6C7F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1E6CD98", Offset = "0x1E6CD98", VA = "0x1E6CD98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeTime;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float displayTime;

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x1E6C73C", Offset = "0x1E6C73C", VA = "0x1E6C73C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA414D8", Offset = "0xA414D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x1E6C7DC", Offset = "0x1E6C7DC", VA = "0x1E6C7DC")]
	public ShowLevelCaption()
	{
	}
}
[Token(Token = "0x200037D")]
public class ShowLevels : MonoBehaviour
{
	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int levelCount;

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x1E6D004", Offset = "0x1E6D004", VA = "0x1E6D004")]
	private void Start()
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x1E6D1DC", Offset = "0x1E6D1DC", VA = "0x1E6D1DC")]
	public ShowLevels()
	{
	}
}
[Token(Token = "0x200037E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E414", Offset = "0xA2E414")]
public class ShowLevelTime : MonoBehaviour
{
	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Level level;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x1E6CE08", Offset = "0x1E6CE08", VA = "0x1E6CE08")]
	private void Start()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x1E6CEB4", Offset = "0x1E6CEB4", VA = "0x1E6CEB4")]
	private void UpdateTime()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x1E6CFFC", Offset = "0x1E6CFFC", VA = "0x1E6CFFC")]
	public ShowLevelTime()
	{
	}
}
[Token(Token = "0x200037F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E478", Offset = "0xA2E478")]
public class ShowLife : MonoBehaviour
{
	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E4DC", Offset = "0xA2E4DC")]
	private sealed class <HideHealth>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowLife <>4__this;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int health;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x1E6D804", Offset = "0x1E6D804", VA = "0x1E6D804", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x1E6D874", Offset = "0x1E6D874", VA = "0x1E6D874", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x1E6D598", Offset = "0x1E6D598", VA = "0x1E6D598")]
		[DebuggerHidden]
		public <HideHealth>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x1E6D5CC", Offset = "0x1E6D5CC", VA = "0x1E6D5CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x1E6D5D0", Offset = "0x1E6D5D0", VA = "0x1E6D5D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1E6D80C", Offset = "0x1E6D80C", VA = "0x1E6D80C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerCharacter playerCharacter;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] digitalLifeMeter;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text text;

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x1E6D1EC", Offset = "0x1E6D1EC", VA = "0x1E6D1EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x1E6D33C", Offset = "0x1E6D33C", VA = "0x1E6D33C")]
	private void UpdateHealth()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x1E6D500", Offset = "0x1E6D500", VA = "0x1E6D500")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4158C", Offset = "0xA4158C")]
	private IEnumerator HideHealth(int health)
	{
		return null;
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x1E6D5C4", Offset = "0x1E6D5C4", VA = "0x1E6D5C4")]
	public ShowLife()
	{
	}
}
[Token(Token = "0x2000381")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E4EC", Offset = "0xA2E4EC")]
public class ShowLives : MonoBehaviour
{
	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E550", Offset = "0xA2E550")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text text;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1E6DA58", Offset = "0x1E6DA58", VA = "0x1E6DA58")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1E6DA68", Offset = "0x1E6DA68", VA = "0x1E6DA68")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerCharacter playerCharacter;

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x1E6D87C", Offset = "0x1E6D87C", VA = "0x1E6D87C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x1E6DA60", Offset = "0x1E6DA60", VA = "0x1E6DA60")]
	public ShowLives()
	{
	}
}
[Token(Token = "0x2000383")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E560", Offset = "0xA2E560")]
public class ShowLivesAtChange : MonoBehaviour
{
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E5C4", Offset = "0xA2E5C4")]
	private sealed class <ShowMe>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowLivesAtChange <>4__this;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <wfu>5__2;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x1E6E2D8", Offset = "0x1E6E2D8", VA = "0x1E6E2D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x1E6E348", Offset = "0x1E6E348", VA = "0x1E6E348", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x1E6DF50", Offset = "0x1E6DF50", VA = "0x1E6DF50")]
		[DebuggerHidden]
		public <ShowMe>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x1E6E0D0", Offset = "0x1E6E0D0", VA = "0x1E6E0D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x1E6E0D4", Offset = "0x1E6E0D4", VA = "0x1E6E0D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1E6E2E0", Offset = "0x1E6E2E0", VA = "0x1E6E2E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerCharacter player;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CanvasGroup cg;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text text;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastLives;

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x1E6DACC", Offset = "0x1E6DACC", VA = "0x1E6DACC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x1E6DD10", Offset = "0x1E6DD10", VA = "0x1E6DD10")]
	private void PlayerRespawned()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x1E6DDCC", Offset = "0x1E6DDCC", VA = "0x1E6DDCC")]
	private void LivesChanged()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x1E6DEDC", Offset = "0x1E6DEDC", VA = "0x1E6DEDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41640", Offset = "0xA41640")]
	private IEnumerator ShowMe()
	{
		return null;
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x1E6DF7C", Offset = "0x1E6DF7C", VA = "0x1E6DF7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x1E6E0C8", Offset = "0x1E6E0C8", VA = "0x1E6E0C8")]
	public ShowLivesAtChange()
	{
	}
}
[Token(Token = "0x2000385")]
public class ShowPoints : MonoBehaviour
{
	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI text;

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x1E6E350", Offset = "0x1E6E350", VA = "0x1E6E350")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x1E6E6C4", Offset = "0x1E6E6C4", VA = "0x1E6E6C4")]
	private void ShowTotalPoints()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x1E6E5DC", Offset = "0x1E6E5DC", VA = "0x1E6E5DC")]
	private void CoinsChanged()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x1E6E78C", Offset = "0x1E6E78C", VA = "0x1E6E78C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x1E6E940", Offset = "0x1E6E940", VA = "0x1E6E940")]
	public ShowPoints()
	{
	}
}
[Token(Token = "0x2000386")]
public class ToggleOnButtonPress : InputComponent
{
	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VrButton toggleButton;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform[] toggle;

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x1DF3C84", Offset = "0x1DF3C84", VA = "0x1DF3C84")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x1DF3DCC", Offset = "0x1DF3DCC", VA = "0x1DF3DCC")]
	public ToggleOnButtonPress()
	{
	}
}
[Token(Token = "0x2000387")]
public class VersionNumberLabel : MonoBehaviour
{
	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x1E1ECF8", Offset = "0x1E1ECF8", VA = "0x1E1ECF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x1E1EDD8", Offset = "0x1E1EDD8", VA = "0x1E1EDD8")]
	public VersionNumberLabel()
	{
	}
}
[Token(Token = "0x2000388")]
public class VRMenuMirror : MonoBehaviour
{
	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PauseMenu mirrorMenu;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask hitMask;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image cursor;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer pointer;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OddRavenVrPriorityOrder priorityOrder;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VrButton showMenuButton;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BoxCollider menuCollider;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PauseMenu menu;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_SimpleHand hand;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hitInfo;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 endPoint;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Selectable lastSelectable;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dropdown lastOpened;

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x1DFBB6C", Offset = "0x1DFBB6C", VA = "0x1DFBB6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x1DFC37C", Offset = "0x1DFC37C", VA = "0x1DFC37C")]
	private void MenuStateChanged()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x1DFC48C", Offset = "0x1DFC48C", VA = "0x1DFC48C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x1DFCF1C", Offset = "0x1DFCF1C", VA = "0x1DFCF1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x1DFD0F0", Offset = "0x1DFD0F0", VA = "0x1DFD0F0")]
	public VRMenuMirror()
	{
	}
}
[Token(Token = "0x2000389")]
public class WorldAttribute : PropertyAttribute
{
	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x1F60448", Offset = "0x1F60448", VA = "0x1F60448")]
	public WorldAttribute()
	{
	}
}
[Token(Token = "0x200038A")]
public struct GazeEventArgs
{
	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distance;
}
[Token(Token = "0x200038B")]
public delegate void GazeEventHandler(object sender, GazeEventArgs e);
[Token(Token = "0x200038C")]
public class SteamVR_GazeTracker : MonoBehaviour
{
	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInGaze;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gazeInCutoff;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float gazeOutCutoff;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform hmdTrackedObject;

	[Token(Token = "0x14000005")]
	public event GazeEventHandler GazeOn
	{
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x1EC2A44", Offset = "0x1EC2A44", VA = "0x1EC2A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA416F4", Offset = "0xA416F4")]
		add
		{
		}
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1EC2B30", Offset = "0x1EC2B30", VA = "0x1EC2B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41704", Offset = "0xA41704")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event GazeEventHandler GazeOff
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1EC2C1C", Offset = "0x1EC2C1C", VA = "0x1EC2C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41714", Offset = "0xA41714")]
		add
		{
		}
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1EC2D08", Offset = "0x1EC2D08", VA = "0x1EC2D08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41724", Offset = "0xA41724")]
		remove
		{
		}
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1EC2DF4", Offset = "0x1EC2DF4", VA = "0x1EC2DF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x1EC2DF8", Offset = "0x1EC2DF8", VA = "0x1EC2DF8", Slot = "4")]
	public virtual void OnGazeOn(GazeEventArgs e)
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1EC2E14", Offset = "0x1EC2E14", VA = "0x1EC2E14", Slot = "5")]
	public virtual void OnGazeOff(GazeEventArgs e)
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x1EC2E30", Offset = "0x1EC2E30", VA = "0x1EC2E30")]
	private void Update()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x1EC3200", Offset = "0x1EC3200", VA = "0x1EC3200")]
	public SteamVR_GazeTracker()
	{
	}
}
[Token(Token = "0x200038D")]
public struct PointerEventArgs
{
	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float distance;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform target;
}
[Token(Token = "0x200038E")]
public delegate void PointerEventHandler(object sender, PointerEventArgs e);
[Token(Token = "0x200038F")]
public class SteamVR_LaserPointer : MonoBehaviour
{
	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject holder;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pointer;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool addRigidBody;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform reference;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform previousContact;

	[Token(Token = "0x14000007")]
	public event PointerEventHandler PointerIn
	{
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x1EC6F0C", Offset = "0x1EC6F0C", VA = "0x1EC6F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41734", Offset = "0xA41734")]
		add
		{
		}
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x1EC6FF8", Offset = "0x1EC6FF8", VA = "0x1EC6FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41744", Offset = "0xA41744")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event PointerEventHandler PointerOut
	{
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1EC70E4", Offset = "0x1EC70E4", VA = "0x1EC70E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41754", Offset = "0xA41754")]
		add
		{
		}
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1EC71D0", Offset = "0x1EC71D0", VA = "0x1EC71D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41764", Offset = "0xA41764")]
		remove
		{
		}
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x1EC72BC", Offset = "0x1EC72BC", VA = "0x1EC72BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x1EC77D8", Offset = "0x1EC77D8", VA = "0x1EC77D8", Slot = "4")]
	public virtual void OnPointerIn(PointerEventArgs e)
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x1EC781C", Offset = "0x1EC781C", VA = "0x1EC781C", Slot = "5")]
	public virtual void OnPointerOut(PointerEventArgs e)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x1EC7860", Offset = "0x1EC7860", VA = "0x1EC7860")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x1EC7D60", Offset = "0x1EC7D60", VA = "0x1EC7D60")]
	public SteamVR_LaserPointer()
	{
	}
}
[Token(Token = "0x2000390")]
public class SteamVR_Teleporter : MonoBehaviour
{
	[Token(Token = "0x2000391")]
	public enum TeleportType
	{
		[Token(Token = "0x40012C5")]
		TeleportTypeUseTerrain,
		[Token(Token = "0x40012C6")]
		TeleportTypeUseCollider,
		[Token(Token = "0x40012C7")]
		TeleportTypeUseZeroY
	}

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool teleportOnClick;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TeleportType teleportType;

	[Token(Token = "0x17000225")]
	private Transform reference
	{
		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1ED5A3C", Offset = "0x1ED5A3C", VA = "0x1ED5A3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x1ED5ADC", Offset = "0x1ED5ADC", VA = "0x1ED5ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x1ED5D0C", Offset = "0x1ED5D0C", VA = "0x1ED5D0C")]
	private void DoClick(object sender, ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x1ED6144", Offset = "0x1ED6144", VA = "0x1ED6144")]
	public SteamVR_Teleporter()
	{
	}
}
[Token(Token = "0x2000392")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E5D4", Offset = "0xA2E5D4")]
public class SteamVR_TestThrow : MonoBehaviour
{
	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody attachPoint;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SteamVR_TrackedObject trackedObj;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FixedJoint joint;

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x1ED6C7C", Offset = "0x1ED6C7C", VA = "0x1ED6C7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x1ED6CD4", Offset = "0x1ED6CD4", VA = "0x1ED6CD4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x1ED7170", Offset = "0x1ED7170", VA = "0x1ED7170")]
	public SteamVR_TestThrow()
	{
	}
}
[Token(Token = "0x2000393")]
public class SteamVR_TestTrackedCamera : MonoBehaviour
{
	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool undistorted;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool cropped;

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x1ED7178", Offset = "0x1ED7178", VA = "0x1ED7178")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x1ED7220", Offset = "0x1ED7220", VA = "0x1ED7220")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x1ED7290", Offset = "0x1ED7290", VA = "0x1ED7290")]
	private void Update()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x1ED7618", Offset = "0x1ED7618", VA = "0x1ED7618")]
	public SteamVR_TestTrackedCamera()
	{
	}
}
[Token(Token = "0x2000394")]
public struct ClickedEventArgs
{
	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint controllerIndex;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint flags;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float padX;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float padY;
}
[Token(Token = "0x2000395")]
public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);
[Token(Token = "0x2000396")]
public class SteamVR_TrackedController : MonoBehaviour
{
	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint controllerIndex;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRControllerState_t controllerState;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool triggerPressed;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool steamPressed;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool menuPressed;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool padPressed;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool padTouched;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool gripped;

	[Token(Token = "0x14000009")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x1DEA95C", Offset = "0x1DEA95C", VA = "0x1DEA95C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41774", Offset = "0xA41774")]
		add
		{
		}
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x1DEAA48", Offset = "0x1DEAA48", VA = "0x1DEAA48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41784", Offset = "0xA41784")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x1DEAB34", Offset = "0x1DEAB34", VA = "0x1DEAB34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41794", Offset = "0xA41794")]
		add
		{
		}
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x1DEAC20", Offset = "0x1DEAC20", VA = "0x1DEAC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA417A4", Offset = "0xA417A4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x1DEAD0C", Offset = "0x1DEAD0C", VA = "0x1DEAD0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA417B4", Offset = "0xA417B4")]
		add
		{
		}
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1DEADF8", Offset = "0x1DEADF8", VA = "0x1DEADF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA417C4", Offset = "0xA417C4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x1DEAEE4", Offset = "0x1DEAEE4", VA = "0x1DEAEE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA417D4", Offset = "0xA417D4")]
		add
		{
		}
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1DEAFD0", Offset = "0x1DEAFD0", VA = "0x1DEAFD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA417E4", Offset = "0xA417E4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event ClickedEventHandler SteamClicked
	{
		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x1DEB0BC", Offset = "0x1DEB0BC", VA = "0x1DEB0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA417F4", Offset = "0xA417F4")]
		add
		{
		}
		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x1DEB1A8", Offset = "0x1DEB1A8", VA = "0x1DEB1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41804", Offset = "0xA41804")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x1DEB294", Offset = "0x1DEB294", VA = "0x1DEB294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41814", Offset = "0xA41814")]
		add
		{
		}
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x1DEB380", Offset = "0x1DEB380", VA = "0x1DEB380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41824", Offset = "0xA41824")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x1DEB46C", Offset = "0x1DEB46C", VA = "0x1DEB46C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41834", Offset = "0xA41834")]
		add
		{
		}
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x1DEB558", Offset = "0x1DEB558", VA = "0x1DEB558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41844", Offset = "0xA41844")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x1DEB644", Offset = "0x1DEB644", VA = "0x1DEB644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41854", Offset = "0xA41854")]
		add
		{
		}
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x1DEB730", Offset = "0x1DEB730", VA = "0x1DEB730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41864", Offset = "0xA41864")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x1DEB81C", Offset = "0x1DEB81C", VA = "0x1DEB81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41874", Offset = "0xA41874")]
		add
		{
		}
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1DEB908", Offset = "0x1DEB908", VA = "0x1DEB908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41884", Offset = "0xA41884")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1DEB9F4", Offset = "0x1DEB9F4", VA = "0x1DEB9F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41894", Offset = "0xA41894")]
		add
		{
		}
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1DEBAE0", Offset = "0x1DEBAE0", VA = "0x1DEBAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA418A4", Offset = "0xA418A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x1DEBBCC", Offset = "0x1DEBBCC", VA = "0x1DEBBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA418B4", Offset = "0xA418B4")]
		add
		{
		}
		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x1DEBCB8", Offset = "0x1DEBCB8", VA = "0x1DEBCB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA418C4", Offset = "0xA418C4")]
		remove
		{
		}
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x1DEBDA4", Offset = "0x1DEBDA4", VA = "0x1DEBDA4", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x1DEBF1C", Offset = "0x1DEBF1C", VA = "0x1DEBF1C")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x1DEBF24", Offset = "0x1DEBF24", VA = "0x1DEBF24", Slot = "5")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x1DEBF50", Offset = "0x1DEBF50", VA = "0x1DEBF50", Slot = "6")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x1DEBF7C", Offset = "0x1DEBF7C", VA = "0x1DEBF7C", Slot = "7")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x1DEBFA8", Offset = "0x1DEBFA8", VA = "0x1DEBFA8", Slot = "8")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x1DEBFD4", Offset = "0x1DEBFD4", VA = "0x1DEBFD4", Slot = "9")]
	public virtual void OnSteamClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x1DEC000", Offset = "0x1DEC000", VA = "0x1DEC000", Slot = "10")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x1DEC02C", Offset = "0x1DEC02C", VA = "0x1DEC02C", Slot = "11")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x1DEC058", Offset = "0x1DEC058", VA = "0x1DEC058", Slot = "12")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x1DEC084", Offset = "0x1DEC084", VA = "0x1DEC084", Slot = "13")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x1DEC0B0", Offset = "0x1DEC0B0", VA = "0x1DEC0B0", Slot = "14")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x1DEC0DC", Offset = "0x1DEC0DC", VA = "0x1DEC0DC", Slot = "15")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x1DEC108", Offset = "0x1DEC108", VA = "0x1DEC108", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x1DEC3F8", Offset = "0x1DEC3F8", VA = "0x1DEC3F8")]
	public SteamVR_TrackedController()
	{
	}
}
[Token(Token = "0x2000397")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA33FC4", Offset = "0xA33FC4")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA33FD4", Offset = "0xA33FD4")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA33FE4", Offset = "0xA33FE4")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA33FF4", Offset = "0xA33FF4")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34004", Offset = "0xA34004")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34014", Offset = "0xA34014")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34024", Offset = "0xA34024")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34034", Offset = "0xA34034")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34044", Offset = "0xA34044")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34054", Offset = "0xA34054")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34064", Offset = "0xA34064")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34074", Offset = "0xA34074")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34084", Offset = "0xA34084")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x17000226")]
	public static bool active
	{
		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1E7AC54", Offset = "0x1E7AC54", VA = "0x1E7AC54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000227")]
	public static bool enabled
	{
		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1E7ACC4", Offset = "0x1E7ACC4", VA = "0x1E7ACC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1E7AD60", Offset = "0x1E7AD60", VA = "0x1E7AD60")]
		set
		{
		}
	}

	[Token(Token = "0x17000228")]
	public static SteamVR instance
	{
		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1E7AEAC", Offset = "0x1E7AEAC", VA = "0x1E7AEAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000229")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1E7B170", Offset = "0x1E7B170", VA = "0x1E7B170")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022A")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6001214")]
		[Address(RVA = "0x1E7BC74", Offset = "0x1E7BC74", VA = "0x1E7BC74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA418D4", Offset = "0xA418D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1E7BC7C", Offset = "0x1E7BC7C", VA = "0x1E7BC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA418E4", Offset = "0xA418E4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022B")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1E7BC84", Offset = "0x1E7BC84", VA = "0x1E7BC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA418F4", Offset = "0xA418F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1E7BC8C", Offset = "0x1E7BC8C", VA = "0x1E7BC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41904", Offset = "0xA41904")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022C")]
	public CVROverlay overlay
	{
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x1E7BC94", Offset = "0x1E7BC94", VA = "0x1E7BC94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41914", Offset = "0xA41914")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001219")]
		[Address(RVA = "0x1E7BC9C", Offset = "0x1E7BC9C", VA = "0x1E7BC9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41924", Offset = "0xA41924")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	public static bool initializing
	{
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1E7BCA4", Offset = "0x1E7BCA4", VA = "0x1E7BCA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41934", Offset = "0xA41934")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1E7BD0C", Offset = "0x1E7BD0C", VA = "0x1E7BD0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41944", Offset = "0xA41944")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public static bool calibrating
	{
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x1E7BD7C", Offset = "0x1E7BD7C", VA = "0x1E7BD7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41954", Offset = "0xA41954")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1E7BDE4", Offset = "0x1E7BDE4", VA = "0x1E7BDE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41964", Offset = "0xA41964")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public static bool outOfRange
	{
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1E7BE54", Offset = "0x1E7BE54", VA = "0x1E7BE54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41974", Offset = "0xA41974")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x1E7BEBC", Offset = "0x1E7BEBC", VA = "0x1E7BEBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41984", Offset = "0xA41984")]
		private set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public float sceneWidth
	{
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x1E7BF2C", Offset = "0x1E7BF2C", VA = "0x1E7BF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41994", Offset = "0xA41994")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1E7BF34", Offset = "0x1E7BF34", VA = "0x1E7BF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA419A4", Offset = "0xA419A4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000231")]
	public float sceneHeight
	{
		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1E7BF3C", Offset = "0x1E7BF3C", VA = "0x1E7BF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA419B4", Offset = "0xA419B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1E7BF44", Offset = "0x1E7BF44", VA = "0x1E7BF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA419C4", Offset = "0xA419C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000232")]
	public float aspect
	{
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1E7BF4C", Offset = "0x1E7BF4C", VA = "0x1E7BF4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA419D4", Offset = "0xA419D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1E7BF54", Offset = "0x1E7BF54", VA = "0x1E7BF54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA419E4", Offset = "0xA419E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public float fieldOfView
	{
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1E7BF5C", Offset = "0x1E7BF5C", VA = "0x1E7BF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA419F4", Offset = "0xA419F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1E7BF64", Offset = "0x1E7BF64", VA = "0x1E7BF64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A04", Offset = "0xA41A04")]
		private set
		{
		}
	}

	[Token(Token = "0x17000234")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1E7BF6C", Offset = "0x1E7BF6C", VA = "0x1E7BF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A14", Offset = "0xA41A14")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1E7BF74", Offset = "0x1E7BF74", VA = "0x1E7BF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A24", Offset = "0xA41A24")]
		private set
		{
		}
	}

	[Token(Token = "0x17000235")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1E7BF7C", Offset = "0x1E7BF7C", VA = "0x1E7BF7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A34", Offset = "0xA41A34")]
		get
		{
			return null;
		}
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1E7BF84", Offset = "0x1E7BF84", VA = "0x1E7BF84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A44", Offset = "0xA41A44")]
		private set
		{
		}
	}

	[Token(Token = "0x17000236")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1E7BF8C", Offset = "0x1E7BF8C", VA = "0x1E7BF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A54", Offset = "0xA41A54")]
		get
		{
			return null;
		}
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1E7BF94", Offset = "0x1E7BF94", VA = "0x1E7BF94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A64", Offset = "0xA41A64")]
		private set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1E7BF9C", Offset = "0x1E7BF9C", VA = "0x1E7BF9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000238")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x1E7C120", Offset = "0x1E7C120", VA = "0x1E7C120")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000239")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1E7C12C", Offset = "0x1E7C12C", VA = "0x1E7C12C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023A")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1E7C138", Offset = "0x1E7C138", VA = "0x1E7C138")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700023B")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1E7C198", Offset = "0x1E7C198", VA = "0x1E7C198")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x1E7AFC4", Offset = "0x1E7AFC4", VA = "0x1E7AFC4")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x1E7B1DC", Offset = "0x1E7B1DC", VA = "0x1E7B1DC")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x1E7C1A4", Offset = "0x1E7C1A4", VA = "0x1E7C1A4")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x1E7BFA8", Offset = "0x1E7BFA8", VA = "0x1E7BFA8")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x1E7C144", Offset = "0x1E7C144", VA = "0x1E7C144")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x1E7C2A8", Offset = "0x1E7C2A8", VA = "0x1E7C2A8")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x1E7C30C", Offset = "0x1E7C30C", VA = "0x1E7C30C")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x1E7C370", Offset = "0x1E7C370", VA = "0x1E7C370")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x1E7C3D4", Offset = "0x1E7C3D4", VA = "0x1E7C3D4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x1E7C484", Offset = "0x1E7C484", VA = "0x1E7C484")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x1E7B1E0", Offset = "0x1E7B1E0", VA = "0x1E7B1E0")]
	private SteamVR()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x1E7C908", Offset = "0x1E7C908", VA = "0x1E7C908", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x1E7CBE8", Offset = "0x1E7CBE8", VA = "0x1E7CBE8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x1E7C980", Offset = "0x1E7C980", VA = "0x1E7C980")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x1E7AE00", Offset = "0x1E7AE00", VA = "0x1E7AE00")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x2000398")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E638", Offset = "0xA2E638")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA340A4", Offset = "0xA340A4")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Collections.Hashtable values;

	[Token(Token = "0x40012FD")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x40012FE")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x40012FF")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x4001300")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x1700023C")]
	public Transform head
	{
		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1E7CCE0", Offset = "0x1E7CCE0", VA = "0x1E7CCE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023D")]
	public Transform offset
	{
		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1E7CCE8", Offset = "0x1E7CCE8", VA = "0x1E7CCE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023E")]
	public Transform origin
	{
		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1E7CCF0", Offset = "0x1E7CCF0", VA = "0x1E7CCF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023F")]
	public Camera camera
	{
		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1E7CD20", Offset = "0x1E7CD20", VA = "0x1E7CD20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A74", Offset = "0xA41A74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1E7CD28", Offset = "0x1E7CD28", VA = "0x1E7CD28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A84", Offset = "0xA41A84")]
		private set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public Transform ears
	{
		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1E7CD30", Offset = "0x1E7CD30", VA = "0x1E7CD30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000241")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1E7CDDC", Offset = "0x1E7CDDC", VA = "0x1E7CDDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1E7CDE4", Offset = "0x1E7CDE4", VA = "0x1E7CDE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000242")]
	public string baseName
	{
		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1E7E440", Offset = "0x1E7E440", VA = "0x1E7E440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x1E7CD38", Offset = "0x1E7CD38", VA = "0x1E7CD38")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x1E7CDEC", Offset = "0x1E7CDEC", VA = "0x1E7CDEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x1E7CDF4", Offset = "0x1E7CDF4", VA = "0x1E7CDF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x1E7DD40", Offset = "0x1E7DD40", VA = "0x1E7DD40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x1E7DD9C", Offset = "0x1E7DD9C", VA = "0x1E7DD9C")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x1E7D2A0", Offset = "0x1E7D2A0", VA = "0x1E7D2A0")]
	public void Expand()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x1E7E54C", Offset = "0x1E7E54C", VA = "0x1E7E54C")]
	public void Collapse()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x1E7EAEC", Offset = "0x1E7EAEC", VA = "0x1E7EAEC")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x2000399")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x6001252")]
	[Address(RVA = "0x1EBB37C", Offset = "0x1EBB37C", VA = "0x1EBB37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x1EBB3E4", Offset = "0x1EBB3E4", VA = "0x1EBB3E4")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x200039A")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x6001254")]
	[Address(RVA = "0x1EBB3EC", Offset = "0x1EBB3EC", VA = "0x1EBB3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x1EBB454", Offset = "0x1EBB454", VA = "0x1EBB454")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x200039B")]
public class SteamVR_Controller
{
	[Token(Token = "0x200039C")]
	public class ButtonMask
	{
		[Token(Token = "0x4001302")]
		public const ulong System = 1uL;

		[Token(Token = "0x4001303")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4001304")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4001305")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4001306")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4001307")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4001308")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4001309")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x400130A")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x400130B")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1EBBBF0", Offset = "0x1EBBBF0", VA = "0x1EBBBF0")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x200039D")]
	public class Device
	{
		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA340C4", Offset = "0xA340C4")]
		private uint <index>k__BackingField;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA340D4", Offset = "0xA340D4")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x17000243")]
		public uint index
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x1EBBC00", Offset = "0x1EBBC00", VA = "0x1EBBC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41A94", Offset = "0xA41A94")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x1EBBBF8", Offset = "0x1EBBBF8", VA = "0x1EBBBF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41AA4", Offset = "0xA41AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public bool valid
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x1EBBC08", Offset = "0x1EBBC08", VA = "0x1EBBC08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41AB4", Offset = "0xA41AB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x1EBBC10", Offset = "0x1EBBC10", VA = "0x1EBBC10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41AC4", Offset = "0xA41AC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public bool connected
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x1EBBBC4", Offset = "0x1EBBBC4", VA = "0x1EBBBC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000246")]
		public bool hasTracking
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x1EBBC1C", Offset = "0x1EBBC1C", VA = "0x1EBBC1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000247")]
		public bool outOfRange
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x1EBBC40", Offset = "0x1EBBC40", VA = "0x1EBBC40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public bool calibrating
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x1EBBC78", Offset = "0x1EBBC78", VA = "0x1EBBC78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000249")]
		public bool uninitialized
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x1EBBCA8", Offset = "0x1EBBCA8", VA = "0x1EBBCA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024A")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x1EBBB64", Offset = "0x1EBBB64", VA = "0x1EBBB64")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x1700024B")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x1EBBCD4", Offset = "0x1EBBCD4", VA = "0x1EBBCD4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700024C")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x1EBBD24", Offset = "0x1EBBD24", VA = "0x1EBBD24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1EBB5F0", Offset = "0x1EBB5F0", VA = "0x1EBB5F0")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x1EBBD78", Offset = "0x1EBBD78", VA = "0x1EBBD78")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x1EBBDBC", Offset = "0x1EBBDBC", VA = "0x1EBBDBC")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x1EBBE00", Offset = "0x1EBBE00", VA = "0x1EBBE00")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x1EBB66C", Offset = "0x1EBB66C", VA = "0x1EBB66C")]
		public void Update()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1EBC068", Offset = "0x1EBC068", VA = "0x1EBC068")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x1EBC098", Offset = "0x1EBC098", VA = "0x1EBC098")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x1EBC0DC", Offset = "0x1EBC0DC", VA = "0x1EBC0DC")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x1EBC120", Offset = "0x1EBC120", VA = "0x1EBC120")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x1EBC158", Offset = "0x1EBC158", VA = "0x1EBC158")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x1EBC1A4", Offset = "0x1EBC1A4", VA = "0x1EBC1A4")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x1EBC1F0", Offset = "0x1EBC1F0", VA = "0x1EBC1F0")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x1EBC220", Offset = "0x1EBC220", VA = "0x1EBC220")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x1EBC264", Offset = "0x1EBC264", VA = "0x1EBC264")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1EBC2A8", Offset = "0x1EBC2A8", VA = "0x1EBC2A8")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x1EBC2E0", Offset = "0x1EBC2E0", VA = "0x1EBC2E0")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1EBC32C", Offset = "0x1EBC32C", VA = "0x1EBC32C")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1EBC378", Offset = "0x1EBC378", VA = "0x1EBC378")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1EBC454", Offset = "0x1EBC454", VA = "0x1EBC454")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1EBBF68", Offset = "0x1EBBF68", VA = "0x1EBBF68")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x1EBC4F0", Offset = "0x1EBC4F0", VA = "0x1EBC4F0")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x1EBC514", Offset = "0x1EBC514", VA = "0x1EBC514")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x1EBC550", Offset = "0x1EBC550", VA = "0x1EBC550")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200039E")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4001317")]
		First,
		[Token(Token = "0x4001318")]
		Leftmost,
		[Token(Token = "0x4001319")]
		Rightmost,
		[Token(Token = "0x400131A")]
		FarthestLeft,
		[Token(Token = "0x400131B")]
		FarthestRight
	}

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x1EBB45C", Offset = "0x1EBB45C", VA = "0x1EBB45C")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x1EBB628", Offset = "0x1EBB628", VA = "0x1EBB628")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x1EBB7F4", Offset = "0x1EBB7F4", VA = "0x1EBB7F4")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x1EBBBE8", Offset = "0x1EBBBE8", VA = "0x1EBBBE8")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x200039F")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA340E4", Offset = "0xA340E4")]
	public GameObject[] objects;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3411C", Offset = "0xA3411C")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x1EBC58C", Offset = "0x1EBC58C", VA = "0x1EBC58C")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x1EBC6BC", Offset = "0x1EBC6BC", VA = "0x1EBC6BC")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x1EBC834", Offset = "0x1EBC834", VA = "0x1EBC834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x1EBC838", Offset = "0x1EBC838", VA = "0x1EBC838")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x1EBCB78", Offset = "0x1EBCB78", VA = "0x1EBCB78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x1EBD2B4", Offset = "0x1EBD2B4", VA = "0x1EBD2B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x1EBD338", Offset = "0x1EBD338", VA = "0x1EBD338")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x1EBD7AC", Offset = "0x1EBD7AC", VA = "0x1EBD7AC")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x1EBD678", Offset = "0x1EBD678", VA = "0x1EBD678")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x1EBD94C", Offset = "0x1EBD94C", VA = "0x1EBD94C")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x1EBDC64", Offset = "0x1EBDC64", VA = "0x1EBDC64")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x1EBD140", Offset = "0x1EBD140", VA = "0x1EBD140")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x1EBCDDC", Offset = "0x1EBCDDC", VA = "0x1EBCDDC")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x20003A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E6BC", Offset = "0xA2E6BC")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x1EBDDB4", Offset = "0x1EBDDB4", VA = "0x1EBDDB4")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x1EBDF58", Offset = "0x1EBDF58", VA = "0x1EBDF58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x1EBE104", Offset = "0x1EBE104", VA = "0x1EBE104")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x1EBE1DC", Offset = "0x1EBE1DC", VA = "0x1EBE1DC")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x20003A1")]
public static class SteamVR_Events
{
	[Token(Token = "0x20003A2")]
	public abstract class Action
	{
		[Token(Token = "0x1700024D")]
		public bool enabled
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x1EBD2A4", Offset = "0x1EBD2A4", VA = "0x1EBD2A4")]
			set
			{
			}
		}

		[Token(Token = "0x60012A1")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x1EBED90", Offset = "0x1EBED90", VA = "0x1EBED90")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A3")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1EBE3C4", Offset = "0x1EBE3C4", VA = "0x1EBE3C4")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1EBED98", Offset = "0x1EBED98", VA = "0x1EBED98", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A4")]
	public class Action<T> : Action
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x60012A6")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x60012A7")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A5")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x60012A8")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60012A9")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A6")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x60012AA")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60012AB")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x20003A7")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x1EBE0FC", Offset = "0x1EBE0FC", VA = "0x1EBE0FC")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x1EBE1D4", Offset = "0x1EBE1D4", VA = "0x1EBE1D4")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1EBEDFC", Offset = "0x1EBEDFC", VA = "0x1EBEDFC")]
		public void Send()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1EBED88", Offset = "0x1EBED88", VA = "0x1EBED88")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20003A8")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x60012B0")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x60012B1")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x60012B2")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x60012B3")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20003A9")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x60012B4")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60012B5")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x60012B6")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x60012B7")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20003AA")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x60012B8")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60012B9")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x60012BA")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x60012BB")]
		public Event()
		{
		}
	}

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x1EBE1E4", Offset = "0x1EBE1E4", VA = "0x1EBE1E4")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x1EBCA28", Offset = "0x1EBCA28", VA = "0x1EBCA28")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x1EBE288", Offset = "0x1EBE288", VA = "0x1EBE288")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x1EBE32C", Offset = "0x1EBE32C", VA = "0x1EBE32C")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x1EBE3FC", Offset = "0x1EBE3FC", VA = "0x1EBE3FC")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x1EBE4A0", Offset = "0x1EBE4A0", VA = "0x1EBE4A0")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x1EBC984", Offset = "0x1EBC984", VA = "0x1EBC984")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x1EBE544", Offset = "0x1EBE544", VA = "0x1EBE544")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x1EBE5E8", Offset = "0x1EBE5E8", VA = "0x1EBE5E8")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x1EBE68C", Offset = "0x1EBE68C", VA = "0x1EBE68C")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x1EBE730", Offset = "0x1EBE730", VA = "0x1EBE730")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x1EBE7D4", Offset = "0x1EBE7D4", VA = "0x1EBE7D4")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x1EBE86C", Offset = "0x1EBE86C", VA = "0x1EBE86C")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x1EBE910", Offset = "0x1EBE910", VA = "0x1EBE910")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x1EBE9B4", Offset = "0x1EBE9B4", VA = "0x1EBE9B4")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x1EBCACC", Offset = "0x1EBCACC", VA = "0x1EBCACC")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x20003AB")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003AC")]
	public struct Config
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x1EBEE04", Offset = "0x1EBEE04", VA = "0x1EBEE04")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x1EBF764", Offset = "0x1EBF764", VA = "0x1EBF764")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x1EBF768", Offset = "0x1EBF768", VA = "0x1EBF768")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x1EC003C", Offset = "0x1EC003C", VA = "0x1EC003C")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x1EC0344", Offset = "0x1EC0344", VA = "0x1EC0344")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x1EC0CF0", Offset = "0x1EC0CF0", VA = "0x1EC0CF0")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x1EC0E4C", Offset = "0x1EC0E4C", VA = "0x1EC0E4C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x1EC0E50", Offset = "0x1EC0E50", VA = "0x1EC0E50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x1EC1110", Offset = "0x1EC1110", VA = "0x1EC1110")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x1EC12B0", Offset = "0x1EC12B0", VA = "0x1EC12B0")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x20003AD")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x1EC12B8", Offset = "0x1EC12B8", VA = "0x1EC12B8")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x1EC1384", Offset = "0x1EC1384", VA = "0x1EC1384")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x1EC144C", Offset = "0x1EC144C", VA = "0x1EC144C")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x1EC14B4", Offset = "0x1EC14B4", VA = "0x1EC14B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x1EC1684", Offset = "0x1EC1684", VA = "0x1EC1684")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x1EC174C", Offset = "0x1EC174C", VA = "0x1EC174C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x1EC1B00", Offset = "0x1EC1B00", VA = "0x1EC1B00")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x20003AE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E720", Offset = "0xA2E720")]
[ExecuteInEditMode]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x1EC1C38", Offset = "0x1EC1C38", VA = "0x1EC1C38")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x1EC25FC", Offset = "0x1EC25FC", VA = "0x1EC25FC")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x1EC27C4", Offset = "0x1EC27C4", VA = "0x1EC27C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x1EC28BC", Offset = "0x1EC28BC", VA = "0x1EC28BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x1EC29B4", Offset = "0x1EC29B4", VA = "0x1EC29B4")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x20003AF")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x1EC29D4", Offset = "0x1EC29D4", VA = "0x1EC29D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x1EC2A3C", Offset = "0x1EC2A3C", VA = "0x1EC2A3C")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x20003B0")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x1EC5D30", Offset = "0x1EC5D30", VA = "0x1EC5D30")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x1EC69F0", Offset = "0x1EC69F0", VA = "0x1EC69F0")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x1EC6EFC", Offset = "0x1EC6EFC", VA = "0x1EC6EFC")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x20003B1")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E7C8", Offset = "0xA2E7C8")]
	private sealed class <LoadLevel>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <maxOutTime>5__5;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SteamVR_Controller.Device <hmd>5__6;

		[Token(Token = "0x17000251")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x1ECA1A8", Offset = "0x1ECA1A8", VA = "0x1ECA1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x1ECA218", Offset = "0x1ECA218", VA = "0x1ECA218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1EC8C8C", Offset = "0x1EC8C8C", VA = "0x1EC8C8C")]
		[DebuggerHidden]
		public <LoadLevel>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1EC8E14", Offset = "0x1EC8E14", VA = "0x1EC8E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x1EC8E18", Offset = "0x1EC8E18", VA = "0x1EC8E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1ECA1B0", Offset = "0x1ECA1B0", VA = "0x1ECA1B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool allowSceneActivation;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x1700024E")]
	public static bool loading
	{
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x1EC7D7C", Offset = "0x1EC7D7C", VA = "0x1EC7D7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700024F")]
	public static float progress
	{
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x1EC7E14", Offset = "0x1EC7E14", VA = "0x1EC7E14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000250")]
	public static Texture progressTexture
	{
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1EC7F44", Offset = "0x1EC7F44", VA = "0x1EC7F44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x1EC8020", Offset = "0x1EC8020", VA = "0x1EC8020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x1EC8030", Offset = "0x1EC8030", VA = "0x1EC8030")]
	public void Trigger()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x1EC813C", Offset = "0x1EC813C", VA = "0x1EC813C")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x1EC82A0", Offset = "0x1EC82A0", VA = "0x1EC82A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x1EC8B24", Offset = "0x1EC8B24", VA = "0x1EC8B24")]
	private void Update()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x1EC80C8", Offset = "0x1EC80C8", VA = "0x1EC80C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41AD4", Offset = "0xA41AD4")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x1EC8728", Offset = "0x1EC8728", VA = "0x1EC8728")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x1EC8DA8", Offset = "0x1EC8DA8", VA = "0x1EC8DA8")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x20003B3")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34184", Offset = "0xA34184")]
	private float <scale>k__BackingField;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x17000253")]
	public RenderTexture texture
	{
		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x1ECAF84", Offset = "0x1ECAF84", VA = "0x1ECAF84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000254")]
	public float scale
	{
		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x1ECB054", Offset = "0x1ECB054", VA = "0x1ECB054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41B88", Offset = "0xA41B88")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1ECB05C", Offset = "0x1ECB05C", VA = "0x1ECB05C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41B98", Offset = "0xA41B98")]
		private set
		{
		}
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x1ECB064", Offset = "0x1ECB064", VA = "0x1ECB064")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x1ECB1EC", Offset = "0x1ECB1EC", VA = "0x1ECB1EC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x1ECC1C0", Offset = "0x1ECC1C0", VA = "0x1ECC1C0")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x1ECC094", Offset = "0x1ECC094", VA = "0x1ECC094")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x1ECC578", Offset = "0x1ECC578", VA = "0x1ECC578")]
	private void Update()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x1ECBFA0", Offset = "0x1ECBFA0", VA = "0x1ECBFA0")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x1ECC510", Offset = "0x1ECC510", VA = "0x1ECC510")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x1ECC548", Offset = "0x1ECC548", VA = "0x1ECC548")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x1ECC748", Offset = "0x1ECC748", VA = "0x1ECC748")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x20003B4")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x20003B5")]
	public struct IntersectionResults
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA34194", Offset = "0xA34194")]
	public float scale;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA341CC", Offset = "0xA341CC")]
	public float distance;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA34204", Offset = "0xA34204")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA34204", Offset = "0xA34204")]
	public float alpha;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34258", Offset = "0xA34258")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x17000255")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1EC1AB0", Offset = "0x1EC1AB0", VA = "0x1EC1AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41BA8", Offset = "0xA41BA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x1ECC79C", Offset = "0x1ECC79C", VA = "0x1ECC79C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41BB8", Offset = "0xA41BB8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000256")]
	public static string key
	{
		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1EC8CB8", Offset = "0x1EC8CB8", VA = "0x1EC8CB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x1ECC7F0", Offset = "0x1ECC7F0", VA = "0x1ECC7F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x1ECC904", Offset = "0x1ECC904", VA = "0x1ECC904")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x1ECC9C0", Offset = "0x1ECC9C0", VA = "0x1ECC9C0")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x1ECCE88", Offset = "0x1ECCE88", VA = "0x1ECCE88")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x1ECCF94", Offset = "0x1ECCF94", VA = "0x1ECCF94")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x1ECD158", Offset = "0x1ECD158", VA = "0x1ECD158")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x20003B6")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E7D8", Offset = "0xA2E7D8")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x20003B7")]
	public enum Size
	{
		[Token(Token = "0x40013D0")]
		Calibrated,
		[Token(Token = "0x40013D1")]
		_400x300,
		[Token(Token = "0x40013D2")]
		_300x225,
		[Token(Token = "0x40013D3")]
		_200x150
	}

	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E868", Offset = "0xA2E868")]
	private sealed class <UpdateBounds>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x17000257")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x1ECE730", Offset = "0x1ECE730", VA = "0x1ECE730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x1ECE7A0", Offset = "0x1ECE7A0", VA = "0x1ECE7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1ECE590", Offset = "0x1ECE590", VA = "0x1ECE590")]
		[DebuggerHidden]
		public <UpdateBounds>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1ECE608", Offset = "0x1ECE608", VA = "0x1ECE608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1ECE60C", Offset = "0x1ECE60C", VA = "0x1ECE60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1ECE738", Offset = "0x1ECE738", VA = "0x1ECE738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SteamVR_PlayArea Instance;

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x1ECD230", Offset = "0x1ECD230", VA = "0x1ECD230")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x1ECD5A4", Offset = "0x1ECD5A4", VA = "0x1ECD5A4")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x1ECE138", Offset = "0x1ECE138", VA = "0x1ECE138")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x1ECE434", Offset = "0x1ECE434", VA = "0x1ECE434")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x1ECE148", Offset = "0x1ECE148", VA = "0x1ECE148")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x1ECE444", Offset = "0x1ECE444", VA = "0x1ECE444")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x1ECE51C", Offset = "0x1ECE51C", VA = "0x1ECE51C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41BC8", Offset = "0xA41BC8")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x1ECE5BC", Offset = "0x1ECE5BC", VA = "0x1ECE5BC")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x20003B9")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E878", Offset = "0xA2E878")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132A")]
			[Address(RVA = "0x1ED04F8", Offset = "0x1ED04F8", VA = "0x1ED04F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0x1ED0568", Offset = "0x1ED0568", VA = "0x1ED0568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1ECF088", Offset = "0x1ECF088", VA = "0x1ECF088")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1ED0318", Offset = "0x1ED0318", VA = "0x1ED0318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1ED031C", Offset = "0x1ED031C", VA = "0x1ED031C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1ED0500", Offset = "0x1ED0500", VA = "0x1ED0500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34278", Offset = "0xA34278")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x17000259")]
	public static EVREye eye
	{
		[Token(Token = "0x600130D")]
		[Address(RVA = "0x1ECE7A8", Offset = "0x1ECE7A8", VA = "0x1ECE7A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41C7C", Offset = "0xA41C7C")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1ECE7F8", Offset = "0x1ECE7F8", VA = "0x1ECE7F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41C8C", Offset = "0xA41C8C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700025A")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x600130F")]
		[Address(RVA = "0x1EBBE30", Offset = "0x1EBBE30", VA = "0x1EBBE30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025B")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6001318")]
		[Address(RVA = "0x1ECEFC4", Offset = "0x1ECEFC4", VA = "0x1ECEFC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001319")]
		[Address(RVA = "0x1ECA098", Offset = "0x1ECA098", VA = "0x1ECA098")]
		set
		{
		}
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x1ECE84C", Offset = "0x1ECE84C", VA = "0x1ECE84C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x1ECE89C", Offset = "0x1ECE89C", VA = "0x1ECE89C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x1ECE914", Offset = "0x1ECE914", VA = "0x1ECE914")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x1ECEC84", Offset = "0x1ECEC84", VA = "0x1ECEC84")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x1EC8D30", Offset = "0x1EC8D30", VA = "0x1EC8D30")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x1ECE990", Offset = "0x1ECE990", VA = "0x1ECE990")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x1ECED38", Offset = "0x1ECED38", VA = "0x1ECED38")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x1ECEF44", Offset = "0x1ECEF44", VA = "0x1ECEF44")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x1ECF014", Offset = "0x1ECF014", VA = "0x1ECF014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41C9C", Offset = "0xA41C9C")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x1ECF0B4", Offset = "0x1ECF0B4", VA = "0x1ECF0B4")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x1ECF23C", Offset = "0x1ECF23C", VA = "0x1ECF23C")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x1ECF2AC", Offset = "0x1ECF2AC", VA = "0x1ECF2AC")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x1ECF2B4", Offset = "0x1ECF2B4", VA = "0x1ECF2B4")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x1ECF41C", Offset = "0x1ECF41C", VA = "0x1ECF41C")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x1ECF6E4", Offset = "0x1ECF6E4", VA = "0x1ECF6E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x1ECF98C", Offset = "0x1ECF98C", VA = "0x1ECF98C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x1ECFB58", Offset = "0x1ECFB58", VA = "0x1ECFB58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x1ECFD04", Offset = "0x1ECFD04", VA = "0x1ECFD04")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x1ECFE08", Offset = "0x1ECFE08", VA = "0x1ECFE08")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x1ECFE0C", Offset = "0x1ECFE0C", VA = "0x1ECFE0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x1ED024C", Offset = "0x1ED024C", VA = "0x1ED024C")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x20003BB")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x20003BC")]
	public class RenderModel
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343B0", Offset = "0xA343B0")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343C0", Offset = "0xA343C0")]
		private Material <material>k__BackingField;

		[Token(Token = "0x1700025F")]
		public Mesh mesh
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0x1ED1E90", Offset = "0x1ED1E90", VA = "0x1ED1E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41E38", Offset = "0xA41E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x1ED41AC", Offset = "0x1ED41AC", VA = "0x1ED41AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41E48", Offset = "0xA41E48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public Material material
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0x1ED2AB8", Offset = "0x1ED2AB8", VA = "0x1ED2AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41E58", Offset = "0xA41E58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x1ED41B4", Offset = "0x1ED41B4", VA = "0x1ED41B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41E68", Offset = "0xA41E68")]
			private set
			{
			}
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x1ED2F14", Offset = "0x1ED2F14", VA = "0x1ED2F14")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x20003BD")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x17000261")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0x1ED17B4", Offset = "0x1ED17B4", VA = "0x1ED17B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x1ED41BC", Offset = "0x1ED41BC", VA = "0x1ED41BC", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x1ED0EF0", Offset = "0x1ED0EF0", VA = "0x1ED0EF0")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E898", Offset = "0xA2E898")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0x1ED4134", Offset = "0x1ED4134", VA = "0x1ED4134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x1ED41A4", Offset = "0x1ED41A4", VA = "0x1ED41A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1ED0944", Offset = "0x1ED0944", VA = "0x1ED0944")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1ED36BC", Offset = "0x1ED36BC", VA = "0x1ED36BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1ED3798", Offset = "0x1ED3798", VA = "0x1ED3798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x1ED36D8", Offset = "0x1ED36D8", VA = "0x1ED36D8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x1ED413C", Offset = "0x1ED413C", VA = "0x1ED413C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E8A8", Offset = "0xA2E8A8")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x1ED3644", Offset = "0x1ED3644", VA = "0x1ED3644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x1ED36B4", Offset = "0x1ED36B4", VA = "0x1ED36B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1ED2F4C", Offset = "0x1ED2F4C", VA = "0x1ED2F4C")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1ED3494", Offset = "0x1ED3494", VA = "0x1ED3494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1ED3498", Offset = "0x1ED3498", VA = "0x1ED3498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1ED364C", Offset = "0x1ED364C", VA = "0x1ED364C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x40013EB")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA34288", Offset = "0xA34288")]
	public string modelOverride;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA342C0", Offset = "0xA342C0")]
	public Shader shader;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA342F8", Offset = "0xA342F8")]
	public bool verbose;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA34330", Offset = "0xA34330")]
	public bool createComponents;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA34368", Offset = "0xA34368")]
	public bool updateDynamically;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x40013F2")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343A0", Offset = "0xA343A0")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static System.Collections.Hashtable models;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static System.Collections.Hashtable materials;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x1700025E")]
	public string renderModelName
	{
		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1ED0570", Offset = "0x1ED0570", VA = "0x1ED0570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D50", Offset = "0xA41D50")]
		get
		{
			return null;
		}
		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1ED0578", Offset = "0x1ED0578", VA = "0x1ED0578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41D60", Offset = "0xA41D60")]
		private set
		{
		}
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x1ED0580", Offset = "0x1ED0580", VA = "0x1ED0580")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x1ED073C", Offset = "0x1ED073C", VA = "0x1ED073C")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x1ED0894", Offset = "0x1ED0894", VA = "0x1ED0894")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x1ED05F0", Offset = "0x1ED05F0", VA = "0x1ED05F0")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x1ED08AC", Offset = "0x1ED08AC", VA = "0x1ED08AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41D70", Offset = "0xA41D70")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x1ED0970", Offset = "0x1ED0970", VA = "0x1ED0970")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x1ED1E98", Offset = "0x1ED1E98", VA = "0x1ED1E98")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x1ED2EA0", Offset = "0x1ED2EA0", VA = "0x1ED2EA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41DD4", Offset = "0xA41DD4")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x1ED2F78", Offset = "0x1ED2F78", VA = "0x1ED2F78")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x1ED0DA4", Offset = "0x1ED0DA4", VA = "0x1ED0DA4")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x1ED0EF8", Offset = "0x1ED0EF8", VA = "0x1ED0EF8")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x1ED3020", Offset = "0x1ED3020", VA = "0x1ED3020")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x1ED3160", Offset = "0x1ED3160", VA = "0x1ED3160")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x1ED3274", Offset = "0x1ED3274", VA = "0x1ED3274")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x1ED32F8", Offset = "0x1ED32F8", VA = "0x1ED32F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x1ED18DC", Offset = "0x1ED18DC", VA = "0x1ED18DC")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1ED337C", Offset = "0x1ED337C", VA = "0x1ED337C")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x1ED2AC0", Offset = "0x1ED2AC0", VA = "0x1ED2AC0")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x1ED2ACC", Offset = "0x1ED2ACC", VA = "0x1ED2ACC")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x1ED2CC8", Offset = "0x1ED2CC8", VA = "0x1ED2CC8")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x20003C0")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x20003C1")]
	public enum CellSize
	{
		[Token(Token = "0x4001412")]
		x1024,
		[Token(Token = "0x4001413")]
		x64,
		[Token(Token = "0x4001414")]
		x32,
		[Token(Token = "0x4001415")]
		x16,
		[Token(Token = "0x4001416")]
		x8
	}

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x1ED5038", Offset = "0x1ED5038", VA = "0x1ED5038")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x1ED508C", Offset = "0x1ED508C", VA = "0x1ED508C")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x1EC9C78", Offset = "0x1EC9C78", VA = "0x1EC9C78")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x1ECA130", Offset = "0x1ECA130", VA = "0x1ECA130")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x1ED50E8", Offset = "0x1ED50E8", VA = "0x1ED50E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x1ED50FC", Offset = "0x1ED50FC", VA = "0x1ED50FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x1ED5100", Offset = "0x1ED5100", VA = "0x1ED5100")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x20003C2")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x1ED5114", Offset = "0x1ED5114", VA = "0x1ED5114")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x1ED55AC", Offset = "0x1ED55AC", VA = "0x1ED55AC")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x1ED563C", Offset = "0x1ED563C", VA = "0x1ED563C")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x20003C3")]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUIText text;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color fadeColor;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeDuration;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private double lastUpdate;

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x1ED5644", Offset = "0x1ED5644", VA = "0x1ED5644")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x1ED5774", Offset = "0x1ED5774", VA = "0x1ED5774")]
	private void Update()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x1ED5A00", Offset = "0x1ED5A00", VA = "0x1ED5A00")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x20003C4")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x1ED6154", Offset = "0x1ED6154", VA = "0x1ED6154")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x1ED6280", Offset = "0x1ED6280", VA = "0x1ED6280")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x1ED6348", Offset = "0x1ED6348", VA = "0x1ED6348")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x1ED624C", Offset = "0x1ED624C", VA = "0x1ED624C")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x1ED6410", Offset = "0x1ED6410", VA = "0x1ED6410")]
	private void Update()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x1ED6B74", Offset = "0x1ED6B74", VA = "0x1ED6B74")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x20003C5")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x20003C6")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343D0", Offset = "0xA343D0")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343E0", Offset = "0xA343E0")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x17000266")]
		public bool undistorted
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0x1DEA094", Offset = "0x1DEA094", VA = "0x1DEA094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F18", Offset = "0xA41F18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x1DEA088", Offset = "0x1DEA088", VA = "0x1DEA088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F28", Offset = "0xA41F28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public uint deviceIndex
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x1DEA09C", Offset = "0x1DEA09C", VA = "0x1DEA09C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000268")]
		public bool hasCamera
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x1DEA0C8", Offset = "0x1DEA0C8", VA = "0x1DEA0C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000269")]
		public bool hasTracking
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x1DEA0F4", Offset = "0x1DEA0F4", VA = "0x1DEA0F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026A")]
		public uint frameId
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x1DEA4C8", Offset = "0x1DEA4C8", VA = "0x1DEA4C8")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700026B")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x1DEA4EC", Offset = "0x1DEA4EC", VA = "0x1DEA4EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F38", Offset = "0xA41F38")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x1DEA4F8", Offset = "0x1DEA4F8", VA = "0x1DEA4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F48", Offset = "0xA41F48")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x1DEA504", Offset = "0x1DEA504", VA = "0x1DEA504")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x1700026D")]
		public Texture2D texture
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x1DEA50C", Offset = "0x1DEA50C", VA = "0x1DEA50C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x1DEA530", Offset = "0x1DEA530", VA = "0x1DEA530")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x1700026F")]
		public Vector3 velocity
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x1DEA7A8", Offset = "0x1DEA7A8", VA = "0x1DEA7A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000270")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x1DEA7F8", Offset = "0x1DEA7F8", VA = "0x1DEA7F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1DEA034", Offset = "0x1DEA034", VA = "0x1DEA034")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1DEA84C", Offset = "0x1DEA84C", VA = "0x1DEA84C")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1DEA87C", Offset = "0x1DEA87C", VA = "0x1DEA87C")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1DEA8A8", Offset = "0x1DEA8A8", VA = "0x1DEA8A8")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1DEA118", Offset = "0x1DEA118", VA = "0x1DEA118")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x20003C7")]
	private class VideoStream
	{
		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA343F0", Offset = "0xA343F0")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x17000271")]
		public uint deviceIndex
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x1DE9ED8", Offset = "0x1DE9ED8", VA = "0x1DE9ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F58", Offset = "0xA41F58")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x1DE9ED0", Offset = "0x1DE9ED0", VA = "0x1DE9ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F68", Offset = "0xA41F68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public ulong handle
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x1DE9EE0", Offset = "0x1DE9EE0", VA = "0x1DE9EE0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000273")]
		public bool hasCamera
		{
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x1DE9EE8", Offset = "0x1DE9EE8", VA = "0x1DE9EE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x1DE9E2C", Offset = "0x1DE9E2C", VA = "0x1DE9E2C")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1DE9EF0", Offset = "0x1DE9EF0", VA = "0x1DE9EF0")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1DE9F90", Offset = "0x1DE9F90", VA = "0x1DE9F90")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x1ED7628", Offset = "0x1ED7628", VA = "0x1ED7628")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x1ED77B8", Offset = "0x1ED77B8", VA = "0x1ED77B8")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x1ED720C", Offset = "0x1ED720C", VA = "0x1ED720C")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x1ED7944", Offset = "0x1ED7944", VA = "0x1ED7944")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x1ED7ACC", Offset = "0x1ED7ACC", VA = "0x1ED7ACC")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x20003C8")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x20003C9")]
	public enum EIndex
	{
		[Token(Token = "0x4001434")]
		None = -1,
		[Token(Token = "0x4001435")]
		Hmd,
		[Token(Token = "0x4001436")]
		Device1,
		[Token(Token = "0x4001437")]
		Device2,
		[Token(Token = "0x4001438")]
		Device3,
		[Token(Token = "0x4001439")]
		Device4,
		[Token(Token = "0x400143A")]
		Device5,
		[Token(Token = "0x400143B")]
		Device6,
		[Token(Token = "0x400143C")]
		Device7,
		[Token(Token = "0x400143D")]
		Device8,
		[Token(Token = "0x400143E")]
		Device9,
		[Token(Token = "0x400143F")]
		Device10,
		[Token(Token = "0x4001440")]
		Device11,
		[Token(Token = "0x4001441")]
		Device12,
		[Token(Token = "0x4001442")]
		Device13,
		[Token(Token = "0x4001443")]
		Device14,
		[Token(Token = "0x4001444")]
		Device15
	}

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA34400", Offset = "0xA34400")]
	public Transform origin;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34438", Offset = "0xA34438")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x17000274")]
	public bool isValid
	{
		[Token(Token = "0x600138A")]
		[Address(RVA = "0x1DEC400", Offset = "0x1DEC400", VA = "0x1DEC400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F78", Offset = "0xA41F78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x1DEC408", Offset = "0x1DEC408", VA = "0x1DEC408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41F88", Offset = "0xA41F88")]
		private set
		{
		}
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x1DEC414", Offset = "0x1DEC414", VA = "0x1DEC414")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x1DEC750", Offset = "0x1DEC750", VA = "0x1DEC750")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x1DEC800", Offset = "0x1DEC800", VA = "0x1DEC800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x1DEC8B8", Offset = "0x1DEC8B8", VA = "0x1DEC8B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x1DEC8F8", Offset = "0x1DEC8F8", VA = "0x1DEC8F8")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x20003CA")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x6001391")]
	[Address(RVA = "0x1DEC9E0", Offset = "0x1DEC9E0", VA = "0x1DEC9E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x1DECA48", Offset = "0x1DECA48", VA = "0x1DECA48")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x20003CB")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x20003CC")]
	public struct RigidTransform
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000275")]
		public static RigidTransform identity
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x1DEF0E8", Offset = "0x1DEF0E8", VA = "0x1DEF0E8")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1DEF1B8", Offset = "0x1DEF1B8", VA = "0x1DEF1B8")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xA44028", Offset = "0xA44028", VA = "0xA44028")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xA4403C", Offset = "0xA4403C", VA = "0xA4403C")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xA44044", Offset = "0xA44044", VA = "0xA44044")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xA4404C", Offset = "0xA4404C", VA = "0xA4404C")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xA44088", Offset = "0xA44088", VA = "0xA44088")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xA440CC", Offset = "0xA440CC", VA = "0xA440CC")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xA440D4", Offset = "0xA440D4", VA = "0xA440D4")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xA440DC", Offset = "0xA440DC", VA = "0xA440DC", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xA440E4", Offset = "0xA440E4", VA = "0xA440E4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x1DEFE14", Offset = "0x1DEFE14", VA = "0x1DEFE14")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1DEFF4C", Offset = "0x1DEFF4C", VA = "0x1DEFF4C")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1DF0084", Offset = "0x1DF0084", VA = "0x1DF0084")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xA44120", Offset = "0xA44120", VA = "0xA44120")]
		public void Inverse()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xA44128", Offset = "0xA44128", VA = "0xA44128")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xA44130", Offset = "0xA44130", VA = "0xA44130")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xA44178", Offset = "0xA44178", VA = "0xA44178")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xA44180", Offset = "0xA44180", VA = "0xA44180")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1DF06B0", Offset = "0x1DF06B0", VA = "0x1DF06B0")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1DF06B4", Offset = "0x1DF06B4", VA = "0x1DF06B4")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xA44188", Offset = "0xA44188", VA = "0xA44188")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x20003CD")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x1DECA50", Offset = "0x1DECA50", VA = "0x1DECA50")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x1DECC1C", Offset = "0x1DECC1C", VA = "0x1DECC1C")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x1DECC74", Offset = "0x1DECC74", VA = "0x1DECC74")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x1DECC84", Offset = "0x1DECC84", VA = "0x1DECC84")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x1DECC94", Offset = "0x1DECC94", VA = "0x1DECC94")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x1DECD98", Offset = "0x1DECD98", VA = "0x1DECD98")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x1DECDA8", Offset = "0x1DECDA8", VA = "0x1DECDA8")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x1DECDB8", Offset = "0x1DECDB8", VA = "0x1DECDB8")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x1DECDD4", Offset = "0x1DECDD4", VA = "0x1DECDD4")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x1DECE20", Offset = "0x1DECE20", VA = "0x1DECE20")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x1DECE30", Offset = "0x1DECE30", VA = "0x1DECE30")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x1DECE74", Offset = "0x1DECE74", VA = "0x1DECE74")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x1DECF30", Offset = "0x1DECF30", VA = "0x1DECF30")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x1DED0FC", Offset = "0x1DED0FC", VA = "0x1DED0FC")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x1DED138", Offset = "0x1DED138", VA = "0x1DED138")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x1DED270", Offset = "0x1DED270", VA = "0x1DED270")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x1DEDB6C", Offset = "0x1DEDB6C", VA = "0x1DEDB6C")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x20003CE")]
public class DebugController : WandComponent
{
	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public VrButton button;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WandComponent[] controllers;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool dynamicResolutionOn;

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xAB4BA8", Offset = "0xAB4BA8", VA = "0xAB4BA8")]
	public DebugController()
	{
	}
}
[Token(Token = "0x20003CF")]
public class Wearable_Cosmetic : MonoBehaviour
{
	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SteamVR_GrabbableObject GrabObject;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x1F5F870", Offset = "0x1F5F870", VA = "0x1F5F870")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x1F5F874", Offset = "0x1F5F874", VA = "0x1F5F874")]
	private void Update()
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x1F5F878", Offset = "0x1F5F878", VA = "0x1F5F878")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x1F5FAF4", Offset = "0x1F5FAF4", VA = "0x1F5FAF4")]
	public Wearable_Cosmetic()
	{
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA2E8E8", Offset = "0xA2E8E8")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x400144C")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4001450")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x1DF8C50", Offset = "0x1DF8C50", VA = "0x1DF8C50")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1DF8C88", Offset = "0x1DF8C88", VA = "0x1DF8C88")]
		public FPSCounter()
		{
		}
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x20003D1")]
	public class VRCameraFade : MonoBehaviour
	{
		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E94C", Offset = "0xA2E94C")]
		private sealed class <BeginFadeOut>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool forceFade;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013DA")]
				[Address(RVA = "0x1DFE53C", Offset = "0x1DFE53C", VA = "0x1DFE53C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013DC")]
				[Address(RVA = "0x1DFE5AC", Offset = "0x1DFE5AC", VA = "0x1DFE5AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x1DFD9A0", Offset = "0x1DFD9A0", VA = "0x1DFD9A0")]
			[DebuggerHidden]
			public <BeginFadeOut>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x1DFE408", Offset = "0x1DFE408", VA = "0x1DFE408", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x1DFE40C", Offset = "0x1DFE40C", VA = "0x1DFE40C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x1DFE544", Offset = "0x1DFE544", VA = "0x1DFE544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E95C", Offset = "0xA2E95C")]
		private sealed class <BeginFadeOut>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool forceFade;

			[Token(Token = "0x17000279")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E0")]
				[Address(RVA = "0x1DFE6E8", Offset = "0x1DFE6E8", VA = "0x1DFE6E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E2")]
				[Address(RVA = "0x1DFE758", Offset = "0x1DFE758", VA = "0x1DFE758", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x1DFDAA4", Offset = "0x1DFDAA4", VA = "0x1DFDAA4")]
			[DebuggerHidden]
			public <BeginFadeOut>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x1DFE5B4", Offset = "0x1DFE5B4", VA = "0x1DFE5B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x1DFE5B8", Offset = "0x1DFE5B8", VA = "0x1DFE5B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x1DFE6F0", Offset = "0x1DFE6F0", VA = "0x1DFE6F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E96C", Offset = "0xA2E96C")]
		private sealed class <BeginFadeIn>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool forceFade;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013E6")]
				[Address(RVA = "0x1DFE1E4", Offset = "0x1DFE1E4", VA = "0x1DFE1E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013E8")]
				[Address(RVA = "0x1DFE254", Offset = "0x1DFE254", VA = "0x1DFE254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x1DFDB8C", Offset = "0x1DFDB8C", VA = "0x1DFDB8C")]
			[DebuggerHidden]
			public <BeginFadeIn>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x1DFE0B0", Offset = "0x1DFE0B0", VA = "0x1DFE0B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x1DFE0B4", Offset = "0x1DFE0B4", VA = "0x1DFE0B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x1DFE1EC", Offset = "0x1DFE1EC", VA = "0x1DFE1EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E97C", Offset = "0xA2E97C")]
		private sealed class <BeginFadeIn>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool forceFade;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013EC")]
				[Address(RVA = "0x1DFE390", Offset = "0x1DFE390", VA = "0x1DFE390", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013EE")]
				[Address(RVA = "0x1DFE400", Offset = "0x1DFE400", VA = "0x1DFE400", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x1DFDC90", Offset = "0x1DFDC90", VA = "0x1DFDC90")]
			[DebuggerHidden]
			public <BeginFadeIn>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x1DFE25C", Offset = "0x1DFE25C", VA = "0x1DFE25C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x1DFE260", Offset = "0x1DFE260", VA = "0x1DFE260", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x1DFE398", Offset = "0x1DFE398", VA = "0x1DFE398", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E98C", Offset = "0xA2E98C")]
		private sealed class <BeginFade>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool forceFade;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Color endCol;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Color startCol;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float duration;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <timer>5__2;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F2")]
				[Address(RVA = "0x1DFE038", Offset = "0x1DFE038", VA = "0x1DFE038", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F4")]
				[Address(RVA = "0x1DFE0A8", Offset = "0x1DFE0A8", VA = "0x1DFE0A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x1DFDCBC", Offset = "0x1DFDCBC", VA = "0x1DFDCBC")]
			[DebuggerHidden]
			public <BeginFade>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x1DFDDA0", Offset = "0x1DFDDA0", VA = "0x1DFDDA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x1DFDDA4", Offset = "0x1DFDDA4", VA = "0x1DFDDA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x1DFE040", Offset = "0x1DFE040", VA = "0x1DFE040", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Image m_FadeImage;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixerSnapshot m_DefaultSnapshot;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioMixerSnapshot m_FadedSnapshot;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_FadeColor;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_FadeInOnSceneLoad;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool m_FadeInOnStart;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool m_IsFading;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_FadeStartTime;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_FadeOutColor;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Canvas canvas;

		[Token(Token = "0x17000276")]
		public bool IsFading
		{
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x1DFD2D0", Offset = "0x1DFD2D0", VA = "0x1DFD2D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000014")]
		public event Action OnFadeComplete
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x1DFD0F8", Offset = "0x1DFD0F8", VA = "0x1DFD0F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41FC8", Offset = "0xA41FC8")]
			add
			{
			}
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x1DFD1E4", Offset = "0x1DFD1E4", VA = "0x1DFD1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA41FD8", Offset = "0xA41FD8")]
			remove
			{
			}
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1DFD2D8", Offset = "0x1DFD2D8", VA = "0x1DFD2D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1DFD3D4", Offset = "0x1DFD3D4", VA = "0x1DFD3D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1DFD478", Offset = "0x1DFD478", VA = "0x1DFD478")]
		private void HandleSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1DFD50C", Offset = "0x1DFD50C", VA = "0x1DFD50C")]
		public void blackScreen()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x1DFD5A8", Offset = "0x1DFD5A8", VA = "0x1DFD5A8")]
		public void FadeOut(bool fadeAudio, bool forceFade)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1DFD5B8", Offset = "0x1DFD5B8", VA = "0x1DFD5B8")]
		public void FadeOut(float duration, bool fadeAudio, bool forceFade)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x1DFD468", Offset = "0x1DFD468", VA = "0x1DFD468")]
		public void FadeIn(bool fadeAudio, bool forceFade)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1DFD7DC", Offset = "0x1DFD7DC", VA = "0x1DFD7DC")]
		public void FadeIn(float duration, bool fadeAudio, bool forceFade)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x1DFD8E4", Offset = "0x1DFD8E4", VA = "0x1DFD8E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA41FE8", Offset = "0xA41FE8")]
		public IEnumerator BeginFadeOut(bool fadeAudio, bool forceFade)
		{
			return null;
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x1DFD9CC", Offset = "0x1DFD9CC", VA = "0x1DFD9CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4204C", Offset = "0xA4204C")]
		public IEnumerator BeginFadeOut(float duration, bool fadeAudio, bool forceFade)
		{
			return null;
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1DFDAD0", Offset = "0x1DFDAD0", VA = "0x1DFDAD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA420B0", Offset = "0xA420B0")]
		public IEnumerator BeginFadeIn(bool fadeAudio, bool forceFade)
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1DFDBB8", Offset = "0x1DFDBB8", VA = "0x1DFDBB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42114", Offset = "0xA42114")]
		public IEnumerator BeginFadeIn(float duration, bool fadeAudio, bool forceFade)
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1DFD6C0", Offset = "0x1DFD6C0", VA = "0x1DFD6C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42178", Offset = "0xA42178")]
		private IEnumerator BeginFade(Color startCol, Color endCol, float duration, bool forceFade)
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1DFDCE8", Offset = "0x1DFDCE8", VA = "0x1DFDCE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1DFDD64", Offset = "0x1DFDD64", VA = "0x1DFDD64")]
		public VRCameraFade()
		{
		}
	}
}
namespace InControl
{
	[Token(Token = "0x20003D7")]
	public class InControlManager : MonoBehaviour
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool logDebugInfo;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool invertYAxis;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool enableXInput;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool useFixedUpdate;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> customProfiles;

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1B40710", Offset = "0x1B40710", VA = "0x1B40710")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1B4109C", Offset = "0x1B4109C", VA = "0x1B4109C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x1B41214", Offset = "0x1B41214", VA = "0x1B41214")]
		private void Update()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x1B41400", Offset = "0x1B41400", VA = "0x1B41400")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x1B41474", Offset = "0x1B41474", VA = "0x1B41474")]
		private void OnApplicationFocus(bool focusState)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x1B41658", Offset = "0x1B41658", VA = "0x1B41658")]
		private void OnApplicationPause(bool pauseState)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x1B416C0", Offset = "0x1B416C0", VA = "0x1B416C0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x1B41728", Offset = "0x1B41728", VA = "0x1B41728")]
		private void HandleOnLogMessage(LogMessage logMessage)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x1B4172C", Offset = "0x1B4172C", VA = "0x1B4172C")]
		public InControlManager()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class InputControl
	{
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly InputControl Null;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344C8", Offset = "0xA344C8")]
		private string <Handle>k__BackingField;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344D8", Offset = "0xA344D8")]
		private InputControlType <Target>k__BackingField;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344E8", Offset = "0xA344E8")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Sensitivity;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LowerDeadZone;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float UpperDeadZone;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA344F8", Offset = "0xA344F8")]
		private bool <IsButton>k__BackingField;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputControlState thisState;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputControlState lastState;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputControlState tempState;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ulong zeroTick;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal float? RawValue;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal float? PreValue;

		[Token(Token = "0x17000281")]
		public string Handle
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x1B4179C", Offset = "0x1B4179C", VA = "0x1B4179C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4236C", Offset = "0xA4236C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x1B417A4", Offset = "0x1B417A4", VA = "0x1B417A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4237C", Offset = "0xA4237C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public InputControlType Target
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x1B417AC", Offset = "0x1B417AC", VA = "0x1B417AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4238C", Offset = "0xA4238C")]
			get
			{
				return default(InputControlType);
			}
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x1B417B4", Offset = "0x1B417B4", VA = "0x1B417B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4239C", Offset = "0xA4239C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public ulong UpdateTick
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x1B417BC", Offset = "0x1B417BC", VA = "0x1B417BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA423AC", Offset = "0xA423AC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x1B417C4", Offset = "0x1B417C4", VA = "0x1B417C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA423BC", Offset = "0xA423BC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool IsButton
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x1B417CC", Offset = "0x1B417CC", VA = "0x1B417CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA423CC", Offset = "0xA423CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x1B417D4", Offset = "0x1B417D4", VA = "0x1B417D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA423DC", Offset = "0xA423DC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000285")]
		internal bool IsOnZeroTick
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0x1B41CCC", Offset = "0x1B41CCC", VA = "0x1B41CCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000286")]
		public bool State
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x1B41CE0", Offset = "0x1B41CE0", VA = "0x1B41CE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000287")]
		public bool LastState
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x1B41CE8", Offset = "0x1B41CE8", VA = "0x1B41CE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000288")]
		public float Value
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x1B41CF0", Offset = "0x1B41CF0", VA = "0x1B41CF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000289")]
		public float LastValue
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x1B41CF8", Offset = "0x1B41CF8", VA = "0x1B41CF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028A")]
		public bool HasChanged
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x1B41D00", Offset = "0x1B41D00", VA = "0x1B41D00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028B")]
		public bool IsPressed
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x1B41D0C", Offset = "0x1B41D0C", VA = "0x1B41D0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028C")]
		public bool WasPressed
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x1B41D14", Offset = "0x1B41D14", VA = "0x1B41D14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028D")]
		public bool WasReleased
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0x1B41D40", Offset = "0x1B41D40", VA = "0x1B41D40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		public bool IsNull
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x1B4198C", Offset = "0x1B4198C", VA = "0x1B4198C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		public bool IsNotNull
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0x1B41D60", Offset = "0x1B41D60", VA = "0x1B41D60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000290")]
		public InputControlType? Obverse
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0x1B41EAC", Offset = "0x1B41EAC", VA = "0x1B41EAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x1B417E0", Offset = "0x1B417E0", VA = "0x1B417E0")]
		private InputControl(string handle)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x1B41818", Offset = "0x1B41818", VA = "0x1B41818")]
		public InputControl(string handle, InputControlType target)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x1B41894", Offset = "0x1B41894", VA = "0x1B41894")]
		public void UpdateWithState(bool state, ulong updateTick)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x1B41A20", Offset = "0x1B41A20", VA = "0x1B41A20")]
		public void UpdateWithValue(float value, ulong updateTick)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1B41BCC", Offset = "0x1B41BCC", VA = "0x1B41BCC")]
		internal void PreUpdate(ulong updateTick)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x1B41BF0", Offset = "0x1B41BF0", VA = "0x1B41BF0")]
		internal void PostUpdate(ulong updateTick)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x1B41CC0", Offset = "0x1B41CC0", VA = "0x1B41CC0")]
		internal void SetZeroTick()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x1B41DD4", Offset = "0x1B41DD4", VA = "0x1B41DD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x1B41E5C", Offset = "0x1B41E5C", VA = "0x1B41E5C")]
		public static implicit operator bool(InputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x1B41E84", Offset = "0x1B41E84", VA = "0x1B41E84")]
		public static implicit operator float(InputControl control)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003D9")]
	public class InputControlMapping
	{
		[Token(Token = "0x20003DA")]
		public class Range
		{
			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Range Complete;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Range Positive;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Range Negative;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Minimum;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Maximum;

			[Token(Token = "0x6001422")]
			[Address(RVA = "0x1B422A8", Offset = "0x1B422A8", VA = "0x1B422A8")]
			public Range()
			{
			}
		}

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputControlSource Source;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputControlType Target;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Invert;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Scale;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool Raw;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool IgnoreInitialZeroValue;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Range SourceRange;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Range TargetRange;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string handle;

		[Token(Token = "0x17000291")]
		public string Handle
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x1B421F0", Offset = "0x1B421F0", VA = "0x1B421F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x1B39188", Offset = "0x1B39188", VA = "0x1B39188")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		private bool IsYAxis
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x1B421D4", Offset = "0x1B421D4", VA = "0x1B421D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x1B42004", Offset = "0x1B42004", VA = "0x1B42004")]
		public float MapValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x1B390FC", Offset = "0x1B390FC", VA = "0x1B390FC")]
		public InputControlMapping()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public interface InputControlSource
	{
		[Token(Token = "0x6001424")]
		float GetValue(InputDevice inputDevice);

		[Token(Token = "0x6001425")]
		bool GetState(InputDevice inputDevice);
	}
	[Token(Token = "0x20003DC")]
	public struct InputControlState
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool State;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Value;

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x9241CC", Offset = "0x9241CC", VA = "0x9241CC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x9241D8", Offset = "0x9241D8", VA = "0x9241D8")]
		public void Set(float value)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x9241E0", Offset = "0x9241E0", VA = "0x9241E0")]
		public void Set(float value, float threshold)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x9241E8", Offset = "0x9241E8", VA = "0x9241E8")]
		public void Set(bool state)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x1B41D34", Offset = "0x1B41D34", VA = "0x1B41D34")]
		public static implicit operator bool(InputControlState state)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1B42464", Offset = "0x1B42464", VA = "0x1B42464")]
		public static implicit operator float(InputControlState state)
		{
			return default(float);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1B42470", Offset = "0x1B42470", VA = "0x1B42470")]
		public static bool operator ==(InputControlState a, InputControlState b)
		{
			return default(bool);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1B41C24", Offset = "0x1B41C24", VA = "0x1B41C24")]
		public static bool operator !=(InputControlState a, InputControlState b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DD")]
	public enum InputControlType
	{
		[Token(Token = "0x40014A1")]
		None,
		[Token(Token = "0x40014A2")]
		LeftStickX,
		[Token(Token = "0x40014A3")]
		LeftStickY,
		[Token(Token = "0x40014A4")]
		LeftStickButton,
		[Token(Token = "0x40014A5")]
		RightStickX,
		[Token(Token = "0x40014A6")]
		RightStickY,
		[Token(Token = "0x40014A7")]
		RightStickButton,
		[Token(Token = "0x40014A8")]
		DPadUp,
		[Token(Token = "0x40014A9")]
		DPadDown,
		[Token(Token = "0x40014AA")]
		DPadLeft,
		[Token(Token = "0x40014AB")]
		DPadRight,
		[Token(Token = "0x40014AC")]
		Action1,
		[Token(Token = "0x40014AD")]
		Action2,
		[Token(Token = "0x40014AE")]
		Action3,
		[Token(Token = "0x40014AF")]
		Action4,
		[Token(Token = "0x40014B0")]
		LeftTrigger,
		[Token(Token = "0x40014B1")]
		RightTrigger,
		[Token(Token = "0x40014B2")]
		LeftBumper,
		[Token(Token = "0x40014B3")]
		RightBumper,
		[Token(Token = "0x40014B4")]
		Back,
		[Token(Token = "0x40014B5")]
		Start,
		[Token(Token = "0x40014B6")]
		Select,
		[Token(Token = "0x40014B7")]
		System,
		[Token(Token = "0x40014B8")]
		Pause,
		[Token(Token = "0x40014B9")]
		Menu,
		[Token(Token = "0x40014BA")]
		Share,
		[Token(Token = "0x40014BB")]
		View,
		[Token(Token = "0x40014BC")]
		Options,
		[Token(Token = "0x40014BD")]
		TiltX,
		[Token(Token = "0x40014BE")]
		TiltY,
		[Token(Token = "0x40014BF")]
		TiltZ,
		[Token(Token = "0x40014C0")]
		ScrollWheel,
		[Token(Token = "0x40014C1")]
		TouchPadTap,
		[Token(Token = "0x40014C2")]
		TouchPadXAxis,
		[Token(Token = "0x40014C3")]
		TouchPadYAxis,
		[Token(Token = "0x40014C4")]
		Analog0,
		[Token(Token = "0x40014C5")]
		Analog1,
		[Token(Token = "0x40014C6")]
		Analog2,
		[Token(Token = "0x40014C7")]
		Analog3,
		[Token(Token = "0x40014C8")]
		Analog4,
		[Token(Token = "0x40014C9")]
		Analog5,
		[Token(Token = "0x40014CA")]
		Analog6,
		[Token(Token = "0x40014CB")]
		Analog7,
		[Token(Token = "0x40014CC")]
		Analog8,
		[Token(Token = "0x40014CD")]
		Analog9,
		[Token(Token = "0x40014CE")]
		Analog10,
		[Token(Token = "0x40014CF")]
		Analog11,
		[Token(Token = "0x40014D0")]
		Analog12,
		[Token(Token = "0x40014D1")]
		Analog13,
		[Token(Token = "0x40014D2")]
		Analog14,
		[Token(Token = "0x40014D3")]
		Analog15,
		[Token(Token = "0x40014D4")]
		Analog16,
		[Token(Token = "0x40014D5")]
		Analog17,
		[Token(Token = "0x40014D6")]
		Analog18,
		[Token(Token = "0x40014D7")]
		Analog19,
		[Token(Token = "0x40014D8")]
		Button0,
		[Token(Token = "0x40014D9")]
		Button1,
		[Token(Token = "0x40014DA")]
		Button2,
		[Token(Token = "0x40014DB")]
		Button3,
		[Token(Token = "0x40014DC")]
		Button4,
		[Token(Token = "0x40014DD")]
		Button5,
		[Token(Token = "0x40014DE")]
		Button6,
		[Token(Token = "0x40014DF")]
		Button7,
		[Token(Token = "0x40014E0")]
		Button8,
		[Token(Token = "0x40014E1")]
		Button9,
		[Token(Token = "0x40014E2")]
		Button10,
		[Token(Token = "0x40014E3")]
		Button11,
		[Token(Token = "0x40014E4")]
		Button12,
		[Token(Token = "0x40014E5")]
		Button13,
		[Token(Token = "0x40014E6")]
		Button14,
		[Token(Token = "0x40014E7")]
		Button15,
		[Token(Token = "0x40014E8")]
		Button16,
		[Token(Token = "0x40014E9")]
		Button17,
		[Token(Token = "0x40014EA")]
		Button18,
		[Token(Token = "0x40014EB")]
		Button19,
		[Token(Token = "0x40014EC")]
		Count
	}
	[Token(Token = "0x20003DE")]
	public class OneAxisInputControl
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34508", Offset = "0xA34508")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputControlState thisState;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputControlState lastState;

		[Token(Token = "0x17000293")]
		public ulong UpdateTick
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x1A48F88", Offset = "0x1A48F88", VA = "0x1A48F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA423EC", Offset = "0xA423EC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x1A48F90", Offset = "0x1A48F90", VA = "0x1A48F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA423FC", Offset = "0xA423FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public bool State
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x1A49078", Offset = "0x1A49078", VA = "0x1A49078")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000295")]
		public bool LastState
		{
			[Token(Token = "0x6001432")]
			[Address(RVA = "0x1A49080", Offset = "0x1A49080", VA = "0x1A49080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000296")]
		public float Value
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x1A49088", Offset = "0x1A49088", VA = "0x1A49088")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000297")]
		public float LastValue
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x1A49090", Offset = "0x1A49090", VA = "0x1A49090")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000298")]
		public bool HasChanged
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x1A49098", Offset = "0x1A49098", VA = "0x1A49098")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000299")]
		public bool IsPressed
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x1A490A8", Offset = "0x1A490A8", VA = "0x1A490A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029A")]
		public bool WasPressed
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x1A490B0", Offset = "0x1A490B0", VA = "0x1A490B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029B")]
		public bool WasReleased
		{
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x1A490F8", Offset = "0x1A490F8", VA = "0x1A490F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x1A48F98", Offset = "0x1A48F98", VA = "0x1A48F98")]
		public void UpdateWithValue(float value, ulong updateTick, float stateThreshold)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x1A4913C", Offset = "0x1A4913C", VA = "0x1A4913C")]
		public static implicit operator bool(OneAxisInputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x1A49164", Offset = "0x1A49164", VA = "0x1A49164")]
		public static implicit operator float(OneAxisInputControl control)
		{
			return default(float);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x1A4918C", Offset = "0x1A4918C", VA = "0x1A4918C")]
		public OneAxisInputControl()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class TwoAxisInputControl
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34518", Offset = "0xA34518")]
		private float <X>k__BackingField;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34528", Offset = "0xA34528")]
		private float <Y>k__BackingField;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34538", Offset = "0xA34538")]
		private OneAxisInputControl <Left>k__BackingField;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34548", Offset = "0xA34548")]
		private OneAxisInputControl <Right>k__BackingField;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34558", Offset = "0xA34558")]
		private OneAxisInputControl <Up>k__BackingField;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34568", Offset = "0xA34568")]
		private OneAxisInputControl <Down>k__BackingField;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34578", Offset = "0xA34578")]
		private ulong <UpdateTick>k__BackingField;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool thisState;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool lastState;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float StateThreshold;

		[Token(Token = "0x1700029C")]
		public float X
		{
			[Token(Token = "0x600143C")]
			[Address(RVA = "0xCC9190", Offset = "0xCC9190", VA = "0xCC9190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4240C", Offset = "0xA4240C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600143D")]
			[Address(RVA = "0xCC9198", Offset = "0xCC9198", VA = "0xCC9198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4241C", Offset = "0xA4241C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public float Y
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0xCC91A0", Offset = "0xCC91A0", VA = "0xCC91A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4242C", Offset = "0xA4242C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600143F")]
			[Address(RVA = "0xCC91A8", Offset = "0xCC91A8", VA = "0xCC91A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4243C", Offset = "0xA4243C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public OneAxisInputControl Left
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0xCC91B0", Offset = "0xCC91B0", VA = "0xCC91B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4244C", Offset = "0xA4244C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001441")]
			[Address(RVA = "0xCC91B8", Offset = "0xCC91B8", VA = "0xCC91B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4245C", Offset = "0xA4245C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public OneAxisInputControl Right
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xCC91C0", Offset = "0xCC91C0", VA = "0xCC91C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4246C", Offset = "0xA4246C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001443")]
			[Address(RVA = "0xCC91C8", Offset = "0xCC91C8", VA = "0xCC91C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4247C", Offset = "0xA4247C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public OneAxisInputControl Up
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0xCC91D0", Offset = "0xCC91D0", VA = "0xCC91D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4248C", Offset = "0xA4248C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xCC91D8", Offset = "0xCC91D8", VA = "0xCC91D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4249C", Offset = "0xA4249C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public OneAxisInputControl Down
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0xCC91E0", Offset = "0xCC91E0", VA = "0xCC91E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA424AC", Offset = "0xA424AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xCC91E8", Offset = "0xCC91E8", VA = "0xCC91E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA424BC", Offset = "0xA424BC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public ulong UpdateTick
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xCC91F0", Offset = "0xCC91F0", VA = "0xCC91F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA424CC", Offset = "0xA424CC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xCC91F8", Offset = "0xCC91F8", VA = "0xCC91F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA424DC", Offset = "0xA424DC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public bool State
		{
			[Token(Token = "0x600144C")]
			[Address(RVA = "0xCC9608", Offset = "0xCC9608", VA = "0xCC9608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A4")]
		public bool HasChanged
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0xCC9610", Offset = "0xCC9610", VA = "0xCC9610")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A5")]
		public Vector2 Vector
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0xCC9630", Offset = "0xCC9630", VA = "0xCC9630")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xCC9200", Offset = "0xCC9200", VA = "0xCC9200")]
		internal TwoAxisInputControl()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xCC92BC", Offset = "0xCC92BC", VA = "0xCC92BC")]
		internal void Update(float x, float y, ulong updateTick)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xCC9660", Offset = "0xCC9660", VA = "0xCC9660")]
		public static implicit operator bool(TwoAxisInputControl control)
		{
			return default(bool);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xCC9688", Offset = "0xCC9688", VA = "0xCC9688")]
		public static implicit operator Vector2(TwoAxisInputControl control)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xCC96C4", Offset = "0xCC96C4", VA = "0xCC96C4")]
		public static implicit operator Vector3(TwoAxisInputControl control)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003E0")]
	public enum LogMessageType
	{
		[Token(Token = "0x40014FB")]
		Info,
		[Token(Token = "0x40014FC")]
		Warning,
		[Token(Token = "0x40014FD")]
		Error
	}
	[Token(Token = "0x20003E1")]
	public struct LogMessage
	{
		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string text;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LogMessageType type;
	}
	[Token(Token = "0x20003E2")]
	public class Logger
	{
		[Token(Token = "0x20003E3")]
		public delegate void LogMessageHandler(LogMessage message);

		[Token(Token = "0x14000015")]
		public static event LogMessageHandler OnLogMessage
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x1B40A2C", Offset = "0x1B40A2C", VA = "0x1B40A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA424EC", Offset = "0xA424EC")]
			add
			{
			}
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x1B45A7C", Offset = "0x1B45A7C", VA = "0x1B45A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA424FC", Offset = "0xA424FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1B45B78", Offset = "0x1B45B78", VA = "0x1B45B78")]
		public static void LogInfo(string text)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1B4604C", Offset = "0x1B4604C", VA = "0x1B4604C")]
		public static void LogWarning(string text)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1B460B8", Offset = "0x1B460B8", VA = "0x1B460B8")]
		public static void LogError(string text)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1B46124", Offset = "0x1B46124", VA = "0x1B46124")]
		public Logger()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class InputDevice
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly InputDevice Null;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int SortOrder;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34598", Offset = "0xA34598")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345A8", Offset = "0xA345A8")]
		private string <Meta>k__BackingField;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345B8", Offset = "0xA345B8")]
		private ulong <LastChangeTick>k__BackingField;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345C8", Offset = "0xA345C8")]
		private InputControl[] <Controls>k__BackingField;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345D8", Offset = "0xA345D8")]
		private TwoAxisInputControl <LeftStick>k__BackingField;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345E8", Offset = "0xA345E8")]
		private TwoAxisInputControl <RightStick>k__BackingField;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA345F8", Offset = "0xA345F8")]
		private TwoAxisInputControl <DPad>k__BackingField;

		[Token(Token = "0x170002A6")]
		public string Name
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0x1B42500", Offset = "0x1B42500", VA = "0x1B42500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4250C", Offset = "0xA4250C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600145E")]
			[Address(RVA = "0x1B42508", Offset = "0x1B42508", VA = "0x1B42508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4251C", Offset = "0xA4251C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public string Meta
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0x1B42510", Offset = "0x1B42510", VA = "0x1B42510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4252C", Offset = "0xA4252C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001460")]
			[Address(RVA = "0x1B42518", Offset = "0x1B42518", VA = "0x1B42518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4253C", Offset = "0xA4253C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public ulong LastChangeTick
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0x1B42520", Offset = "0x1B42520", VA = "0x1B42520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4254C", Offset = "0xA4254C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001462")]
			[Address(RVA = "0x1B42528", Offset = "0x1B42528", VA = "0x1B42528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4255C", Offset = "0xA4255C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public InputControl[] Controls
		{
			[Token(Token = "0x6001463")]
			[Address(RVA = "0x1B42530", Offset = "0x1B42530", VA = "0x1B42530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4256C", Offset = "0xA4256C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x1B42538", Offset = "0x1B42538", VA = "0x1B42538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4257C", Offset = "0xA4257C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public TwoAxisInputControl LeftStick
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x1B42540", Offset = "0x1B42540", VA = "0x1B42540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4258C", Offset = "0xA4258C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x1B42548", Offset = "0x1B42548", VA = "0x1B42548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4259C", Offset = "0xA4259C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public TwoAxisInputControl RightStick
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x1B42550", Offset = "0x1B42550", VA = "0x1B42550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425AC", Offset = "0xA425AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x1B42558", Offset = "0x1B42558", VA = "0x1B42558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425BC", Offset = "0xA425BC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public TwoAxisInputControl DPad
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0x1B42560", Offset = "0x1B42560", VA = "0x1B42560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425CC", Offset = "0xA425CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600146A")]
			[Address(RVA = "0x1B42568", Offset = "0x1B42568", VA = "0x1B42568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425DC", Offset = "0xA425DC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		private Vector2 DPadVector
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x1B42F24", Offset = "0x1B42F24", VA = "0x1B42F24")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170002AE")]
		public virtual bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x1B433D4", Offset = "0x1B433D4", VA = "0x1B433D4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AF")]
		public virtual bool IsKnown
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x1B433DC", Offset = "0x1B433DC", VA = "0x1B433DC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B0")]
		public bool MenuWasPressed
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0x1B433E4", Offset = "0x1B433E4", VA = "0x1B433E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B1")]
		public InputControl AnyButton
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x1B43500", Offset = "0x1B43500", VA = "0x1B43500")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		public InputControl LeftStickX
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x1B42F04", Offset = "0x1B42F04", VA = "0x1B42F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public InputControl LeftStickY
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x1B42F0C", Offset = "0x1B42F0C", VA = "0x1B42F0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public InputControl RightStickX
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x1B42F14", Offset = "0x1B42F14", VA = "0x1B42F14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		public InputControl RightStickY
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x1B42F1C", Offset = "0x1B42F1C", VA = "0x1B42F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		public InputControl DPadUp
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x1B43378", Offset = "0x1B43378", VA = "0x1B43378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public InputControl DPadDown
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x1B43380", Offset = "0x1B43380", VA = "0x1B43380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		public InputControl DPadLeft
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x1B43368", Offset = "0x1B43368", VA = "0x1B43368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		public InputControl DPadRight
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x1B43370", Offset = "0x1B43370", VA = "0x1B43370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		public InputControl Action1
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x1B435F8", Offset = "0x1B435F8", VA = "0x1B435F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public InputControl Action2
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x1B43600", Offset = "0x1B43600", VA = "0x1B43600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		public InputControl Action3
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x1B43608", Offset = "0x1B43608", VA = "0x1B43608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		public InputControl Action4
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x1B43610", Offset = "0x1B43610", VA = "0x1B43610")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		public InputControl LeftTrigger
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0x1B43618", Offset = "0x1B43618", VA = "0x1B43618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		public InputControl RightTrigger
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x1B43620", Offset = "0x1B43620", VA = "0x1B43620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		public InputControl LeftBumper
		{
			[Token(Token = "0x600148F")]
			[Address(RVA = "0x1B43628", Offset = "0x1B43628", VA = "0x1B43628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C1")]
		public InputControl RightBumper
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0x1B43630", Offset = "0x1B43630", VA = "0x1B43630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public InputControl LeftStickButton
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x1B43638", Offset = "0x1B43638", VA = "0x1B43638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public InputControl RightStickButton
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x1B43640", Offset = "0x1B43640", VA = "0x1B43640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public float DPadX
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x1B43648", Offset = "0x1B43648", VA = "0x1B43648")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C5")]
		public float DPadY
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x1B43678", Offset = "0x1B43678", VA = "0x1B43678")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C6")]
		public TwoAxisInputControl Direction
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x1B436A8", Offset = "0x1B436A8", VA = "0x1B436A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x1B42570", Offset = "0x1B42570", VA = "0x1B42570")]
		public InputDevice(string name)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x1B4264C", Offset = "0x1B4264C", VA = "0x1B4264C")]
		public InputControl GetControl(InputControlType inputControlType)
		{
			return null;
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x1B42700", Offset = "0x1B42700", VA = "0x1B42700")]
		public static InputControlType GetInputControlTypeByName(string inputControlName)
		{
			return default(InputControlType);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1B42834", Offset = "0x1B42834", VA = "0x1B42834")]
		public InputControl GetControlByName(string inputControlName)
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1B428B0", Offset = "0x1B428B0", VA = "0x1B428B0")]
		public InputControl AddControl(InputControlType inputControlType, string handle)
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1B4298C", Offset = "0x1B4298C", VA = "0x1B4298C")]
		public void UpdateWithState(InputControlType inputControlType, bool state, ulong updateTick)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1B429D0", Offset = "0x1B429D0", VA = "0x1B429D0")]
		public void UpdateWithValue(InputControlType inputControlType, float value, ulong updateTick)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1B42A14", Offset = "0x1B42A14", VA = "0x1B42A14")]
		public void PreUpdate(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1B42AC0", Offset = "0x1B42AC0", VA = "0x1B42AC0", Slot = "4")]
		public virtual void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1B42AC4", Offset = "0x1B42AC4", VA = "0x1B42AC4")]
		public void PostUpdate(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x1B42D48", Offset = "0x1B42D48", VA = "0x1B42D48")]
		private float ProcessAnalogControlValue(InputControl control, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1B4319C", Offset = "0x1B4319C", VA = "0x1B4319C")]
		private float ApplyDeadZone(float value, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x1B43098", Offset = "0x1B43098", VA = "0x1B43098")]
		private float ApplyCircularDeadZone(float axisValue1, float axisValue2, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1B4323C", Offset = "0x1B4323C", VA = "0x1B4323C")]
		private float ApplySmoothing(float thisValue, float lastValue, float deltaTime, float sensitivity)
		{
			return default(float);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1B43388", Offset = "0x1B43388", VA = "0x1B43388")]
		public bool LastChangedAfter(InputDevice otherDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1B433C0", Offset = "0x1B433C0", VA = "0x1B433C0", Slot = "5")]
		public virtual void Vibrate(float leftMotor, float rightMotor)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1B433C4", Offset = "0x1B433C4", VA = "0x1B433C4")]
		public void Vibrate(float intensity)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class InputDeviceManager
	{
		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<InputDevice> devices;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x1B43784", Offset = "0x1B43784", VA = "0x1B43784", Slot = "4")]
		public virtual void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x1B43788", Offset = "0x1B43788", VA = "0x1B43788")]
		public InputDeviceManager()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class InputManager
	{
		[Serializable]
		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2E99C", Offset = "0xA2E99C")]
		private sealed class <>c
		{
			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<InputDevice> <>9__55_0;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<InputDevice> <>9__56_0;

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x1B459E4", Offset = "0x1B459E4", VA = "0x1B459E4")]
			public <>c()
			{
			}

			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x1B459EC", Offset = "0x1B459EC", VA = "0x1B459EC")]
			internal int <AttachDevice>b__55_0(InputDevice d1, InputDevice d2)
			{
				return default(int);
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x1B45A34", Offset = "0x1B45A34", VA = "0x1B45A34")]
			internal int <DetachDevice>b__56_0(InputDevice d1, InputDevice d2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly VersionInfo Version;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<InputDeviceManager> inputDeviceManagers;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static InputDevice activeDevice;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static List<InputDevice> devices;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static ReadOnlyCollection<InputDevice> Devices;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34658", Offset = "0xA34658")]
		private static string <Platform>k__BackingField;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34668", Offset = "0xA34668")]
		private static bool <MenuWasPressed>k__BackingField;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public static bool InvertYAxis;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private static bool enableXInput;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private static bool isSetup;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static float initialTime;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static float currentTime;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static float lastUpdateTime;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static ulong currentTick;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static VersionInfo? unityVersion;

		[Token(Token = "0x170002C7")]
		public static string Platform
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x1B443D8", Offset = "0x1B443D8", VA = "0x1B443D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4268C", Offset = "0xA4268C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x1B44440", Offset = "0x1B44440", VA = "0x1B44440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4269C", Offset = "0xA4269C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public static bool MenuWasPressed
		{
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0x1B444AC", Offset = "0x1B444AC", VA = "0x1B444AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA426AC", Offset = "0xA426AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0x1B44514", Offset = "0x1B44514", VA = "0x1B44514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA426BC", Offset = "0xA426BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		private static InputDevice DefaultActiveDevice
		{
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x1B455F8", Offset = "0x1B455F8", VA = "0x1B455F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		public static InputDevice ActiveDevice
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x1B45094", Offset = "0x1B45094", VA = "0x1B45094")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x1B45150", Offset = "0x1B45150", VA = "0x1B45150")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public static bool EnableXInput
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x1B45700", Offset = "0x1B45700", VA = "0x1B45700")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x1B40B28", Offset = "0x1B40B28", VA = "0x1B40B28")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public static VersionInfo UnityVersion
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x1B45768", Offset = "0x1B45768", VA = "0x1B45768")]
			get
			{
				return default(VersionInfo);
			}
		}

		[Token(Token = "0x14000016")]
		public static event Action OnSetup
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x1B437F8", Offset = "0x1B437F8", VA = "0x1B437F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425EC", Offset = "0xA425EC")]
			add
			{
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x1B43928", Offset = "0x1B43928", VA = "0x1B43928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA425FC", Offset = "0xA425FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public static event Action<ulong, float> OnUpdate
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x1B43A58", Offset = "0x1B43A58", VA = "0x1B43A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4260C", Offset = "0xA4260C")]
			add
			{
			}
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x1B43B88", Offset = "0x1B43B88", VA = "0x1B43B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4261C", Offset = "0xA4261C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event Action<InputDevice> OnDeviceAttached
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x1B43CB8", Offset = "0x1B43CB8", VA = "0x1B43CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4262C", Offset = "0xA4262C")]
			add
			{
			}
			[Token(Token = "0x600149E")]
			[Address(RVA = "0x1B43DE8", Offset = "0x1B43DE8", VA = "0x1B43DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4263C", Offset = "0xA4263C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public static event Action<InputDevice> OnDeviceDetached
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0x1B43F18", Offset = "0x1B43F18", VA = "0x1B43F18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4264C", Offset = "0xA4264C")]
			add
			{
			}
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x1B44048", Offset = "0x1B44048", VA = "0x1B44048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4265C", Offset = "0xA4265C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public static event Action<InputDevice> OnActiveDeviceChanged
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x1B44178", Offset = "0x1B44178", VA = "0x1B44178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4266C", Offset = "0xA4266C")]
			add
			{
			}
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x1B442A8", Offset = "0x1B442A8", VA = "0x1B442A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4267C", Offset = "0xA4267C")]
			remove
			{
			}
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x1B44584", Offset = "0x1B44584", VA = "0x1B44584")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA426CC", Offset = "0xA426CC")]
		public static void Setup()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x1B40B98", Offset = "0x1B40B98", VA = "0x1B40B98")]
		internal static void SetupInternal()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x1B445E0", Offset = "0x1B445E0", VA = "0x1B445E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA42704", Offset = "0xA42704")]
		public static void Reset()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1B410F8", Offset = "0x1B410F8", VA = "0x1B410F8")]
		internal static void ResetInternal()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1B4463C", Offset = "0x1B4463C", VA = "0x1B4463C")]
		private static void AssertIsSetup()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x1B446EC", Offset = "0x1B446EC", VA = "0x1B446EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA4273C", Offset = "0xA4273C")]
		public static void Update()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x1B412D4", Offset = "0x1B412D4", VA = "0x1B412D4")]
		internal static void UpdateInternal()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x1B414D8", Offset = "0x1B414D8", VA = "0x1B414D8")]
		internal static void OnApplicationFocus(bool focusState)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x1B416BC", Offset = "0x1B416BC", VA = "0x1B416BC")]
		internal static void OnApplicationPause(bool pauseState)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x1B41724", Offset = "0x1B41724", VA = "0x1B41724")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x1B44E08", Offset = "0x1B44E08", VA = "0x1B44E08")]
		private static void UpdateActiveDevice()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x1B451EC", Offset = "0x1B451EC", VA = "0x1B451EC")]
		public static void AddDeviceManager(InputDeviceManager inputDeviceManager)
		{
		}

		[Token(Token = "0x60014B3")]
		public static void AddDeviceManager<T>() where T : InputDeviceManager, new()
		{
		}

		[Token(Token = "0x60014B4")]
		public static bool HasDeviceManager<T>() where T : InputDeviceManager
		{
			return default(bool);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x1B44748", Offset = "0x1B44748", VA = "0x1B44748")]
		private static void UpdateCurrentTime()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x1B44868", Offset = "0x1B44868", VA = "0x1B44868")]
		private static void UpdateDeviceManagers(float deltaTime)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x1B449A0", Offset = "0x1B449A0", VA = "0x1B449A0")]
		private static void PreUpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x1B44AB8", Offset = "0x1B44AB8", VA = "0x1B44AB8")]
		private static void UpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x1B44C90", Offset = "0x1B44C90", VA = "0x1B44C90")]
		private static void PostUpdateDevices(float deltaTime)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x1B40E00", Offset = "0x1B40E00", VA = "0x1B40E00")]
		public static void AttachDevice(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x1B452C0", Offset = "0x1B452C0", VA = "0x1B452C0")]
		public static void DetachDevice(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x1B45520", Offset = "0x1B45520", VA = "0x1B45520")]
		public static void HideDevicesWithProfile(Type type)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x1B45888", Offset = "0x1B45888", VA = "0x1B45888")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class UnityAnalogSource : InputControlSource
	{
		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int analogId;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[,] analogQueries;

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xCC9738", Offset = "0xCC9738", VA = "0xCC9738")]
		public UnityAnalogSource(int analogId)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xCC9A48", Offset = "0xCC9A48", VA = "0xCC9A48", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xCC9BD0", Offset = "0xCC9BD0", VA = "0xCC9BD0", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xCC9764", Offset = "0xCC9764", VA = "0xCC9764")]
		private static void SetupAnalogQueries()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xCC9B0C", Offset = "0xCC9B0C", VA = "0xCC9B0C")]
		private static string GetAnalogKey(int joystickId, int analogId)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E9")]
	public class UnityButtonSource : InputControlSource
	{
		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int buttonId;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[,] buttonQueries;

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xCC9C6C", Offset = "0xCC9C6C", VA = "0xCC9C6C")]
		public UnityButtonSource(int buttonId)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xCC9F7C", Offset = "0xCC9F7C", VA = "0xCC9F7C", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xCC9FA0", Offset = "0xCC9FA0", VA = "0xCC9FA0", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xCC9C98", Offset = "0xCC9C98", VA = "0xCC9C98")]
		private static void SetupButtonQueries()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xCCA05C", Offset = "0xCCA05C", VA = "0xCCA05C")]
		private static string GetButtonKey(int joystickId, int buttonId)
		{
			return null;
		}
	}
	[Token(Token = "0x20003EA")]
	public class UnityGyroAxisSource : InputControlSource
	{
		[Token(Token = "0x20003EB")]
		public enum GyroAxis
		{
			[Token(Token = "0x4001529")]
			X,
			[Token(Token = "0x400152A")]
			Y
		}

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int axis;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Quaternion zeroAttitude;

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xCCA120", Offset = "0xCCA120", VA = "0xCCA120")]
		public UnityGyroAxisSource(GyroAxis axis)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xCCA1C0", Offset = "0xCCA1C0", VA = "0xCCA1C0", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xCCA378", Offset = "0xCCA378", VA = "0xCCA378", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xCCA404", Offset = "0xCCA404", VA = "0xCCA404")]
		private static Quaternion GetAttitude()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xCCA200", Offset = "0xCCA200", VA = "0xCCA200")]
		private static Vector3 GetAxis()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xCCA4F4", Offset = "0xCCA4F4", VA = "0xCCA4F4")]
		private static float ApplyDeadZone(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xCCA14C", Offset = "0xCCA14C", VA = "0xCCA14C")]
		public static void Calibrate()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class UnityKeyCodeAxisSource : InputControlSource
	{
		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode negativeKeyCode;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private KeyCode positiveKeyCode;

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xCCD850", Offset = "0xCCD850", VA = "0xCCD850")]
		public UnityKeyCodeAxisSource(KeyCode negativeKeyCode, KeyCode positiveKeyCode)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xCCF5DC", Offset = "0xCCF5DC", VA = "0xCCF5DC", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xCCF628", Offset = "0xCCF628", VA = "0xCCF628", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003ED")]
	public class UnityKeyCodeComboSource : InputControlSource
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode[] keyCodeList;

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xCCD7B4", Offset = "0xCCD7B4", VA = "0xCCD7B4")]
		public UnityKeyCodeComboSource(params KeyCode[] keyCodeList)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xCCF6DC", Offset = "0xCCF6DC", VA = "0xCCF6DC", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xCCF700", Offset = "0xCCF700", VA = "0xCCF700", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003EE")]
	public class UnityKeyCodeSource : InputControlSource
	{
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyCode[] keyCodeList;

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xCCD724", Offset = "0xCCD724", VA = "0xCCD724")]
		public UnityKeyCodeSource(params KeyCode[] keyCodeList)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xCCF798", Offset = "0xCCF798", VA = "0xCCF798", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xCCF7BC", Offset = "0xCCF7BC", VA = "0xCCF7BC", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003EF")]
	public class UnityMouseAxisSource : InputControlSource
	{
		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mouseAxisQuery;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xCCDD54", Offset = "0xCCDD54", VA = "0xCCDD54")]
		public UnityMouseAxisSource(string axis)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xCCF854", Offset = "0xCCF854", VA = "0xCCF854", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xCCF860", Offset = "0xCCF860", VA = "0xCCF860", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F0")]
	public class UnityMouseButtonSource : InputControlSource
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int buttonId;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xCCDD28", Offset = "0xCCDD28", VA = "0xCCDD28")]
		public UnityMouseButtonSource(int buttonId)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xCCF8F0", Offset = "0xCCF8F0", VA = "0xCCF8F0", Slot = "4")]
		public float GetValue(InputDevice inputDevice)
		{
			return default(float);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xCCF91C", Offset = "0xCCF91C", VA = "0xCCF91C", Slot = "5")]
		public bool GetState(InputDevice inputDevice)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F1")]
	[AutoDiscover]
	public class AmazonFireTVProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xBB6828", Offset = "0xBB6828", VA = "0xBB6828")]
		public AmazonFireTVProfile()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AutoDiscover]
	public class AmazonFireTVRemote : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xBB7B34", Offset = "0xBB7B34", VA = "0xBB7B34")]
		public AmazonFireTVRemote()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AutoDiscover]
	public class AndroidTVProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xBB83D8", Offset = "0xBB83D8", VA = "0xBB83D8")]
		public AndroidTVProfile()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AutoDiscover]
	public class AndroidTVRemoteProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xBB9598", Offset = "0xBB9598", VA = "0xBB9598")]
		public AndroidTVRemoteProfile()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AutoDiscover]
	public class AppleMFiProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xBB9CF8", Offset = "0xBB9CF8", VA = "0xBB9CF8")]
		public AppleMFiProfile()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AutoDiscover]
	public class ExecutionerXProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xBBACAC", Offset = "0xBBACAC", VA = "0xBBACAC")]
		public ExecutionerXProfile()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	[AutoDiscover]
	public class GameStickLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xBBC0AC", Offset = "0xBBC0AC", VA = "0xBBC0AC")]
		public GameStickLinuxProfile()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AutoDiscover]
	public class GameStickProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1B38020", Offset = "0x1B38020", VA = "0x1B38020")]
		public GameStickProfile()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[AutoDiscover]
	public class GenericAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1B39190", Offset = "0x1B39190", VA = "0x1B39190")]
		public GenericAndroidProfile()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	[AutoDiscover]
	public class GenericBlackBerryProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1B3A3B0", Offset = "0x1B3A3B0", VA = "0x1B3A3B0")]
		public GenericBlackBerryProfile()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	[AutoDiscover]
	public class GenericLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1B3B690", Offset = "0x1B3B690", VA = "0x1B3B690")]
		public GenericLinuxProfile()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[AutoDiscover]
	public class GoogleNexusPlayerProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x1B3C9AC", Offset = "0x1B3C9AC", VA = "0x1B3C9AC")]
		public GoogleNexusPlayerProfile()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	[AutoDiscover]
	public class GoogleNexusPlayerRemoteProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1B3DBF4", Offset = "0x1B3DBF4", VA = "0x1B3DBF4")]
		public GoogleNexusPlayerRemoteProfile()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	[AutoDiscover]
	public class GreenThrottleAtlasAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1B3E390", Offset = "0x1B3E390", VA = "0x1B3E390")]
		public GreenThrottleAtlasAndroidProfile()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	[AutoDiscover]
	public class HamaBlackForceWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1B3F4F0", Offset = "0x1B3F4F0", VA = "0x1B3F4F0")]
		public HamaBlackForceWinProfile()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AutoDiscover]
	public class LogitechF310LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1B461C4", Offset = "0x1B461C4", VA = "0x1B461C4")]
		public LogitechF310LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000401")]
	[AutoDiscover]
	public class LogitechF310ModeDMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1B47420", Offset = "0x1B47420", VA = "0x1B47420")]
		public LogitechF310ModeDMacProfile()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AutoDiscover]
	public class LogitechF310ModeDWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1B48640", Offset = "0x1B48640", VA = "0x1B48640")]
		public LogitechF310ModeDWinProfile()
		{
		}
	}
	[Token(Token = "0x2000403")]
	[AutoDiscover]
	public class LogitechF310ModeXMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1B498B4", Offset = "0x1B498B4", VA = "0x1B498B4")]
		public LogitechF310ModeXMacProfile()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[AutoDiscover]
	public class LogitechF310ModeXWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1B4AAE4", Offset = "0x1B4AAE4", VA = "0x1B4AAE4")]
		public LogitechF310ModeXWinProfile()
		{
		}
	}
	[Token(Token = "0x2000405")]
	[AutoDiscover]
	public class LogitechF510LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1B4BD9C", Offset = "0x1B4BD9C", VA = "0x1B4BD9C")]
		public LogitechF510LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000406")]
	[AutoDiscover]
	public class LogitechF510WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x1B4CFF8", Offset = "0x1B4CFF8", VA = "0x1B4CFF8")]
		public LogitechF510WinProfile()
		{
		}
	}
	[Token(Token = "0x2000407")]
	[AutoDiscover]
	public class LogitechF710LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1B4E2B0", Offset = "0x1B4E2B0", VA = "0x1B4E2B0")]
		public LogitechF710LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000408")]
	[AutoDiscover]
	public class LogitechF710MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1B4F4D0", Offset = "0x1B4F4D0", VA = "0x1B4F4D0")]
		public LogitechF710MacProfile()
		{
		}
	}
	[Token(Token = "0x2000409")]
	[AutoDiscover]
	public class LogitechF710ModeDWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1B506F0", Offset = "0x1B506F0", VA = "0x1B506F0")]
		public LogitechF710ModeDWinProfile()
		{
		}
	}
	[Token(Token = "0x200040A")]
	[AutoDiscover]
	public class LogitechF710ModeXWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1B51910", Offset = "0x1B51910", VA = "0x1B51910")]
		public LogitechF710ModeXWinProfile()
		{
		}
	}
	[Token(Token = "0x200040B")]
	[AutoDiscover]
	public class LogitechRumblePad2MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001503")]
		[Address(RVA = "0x1B52B30", Offset = "0x1B52B30", VA = "0x1B52B30")]
		public LogitechRumblePad2MacProfile()
		{
		}
	}
	[Token(Token = "0x200040C")]
	[AutoDiscover]
	public class LogitechRumblePad2WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001504")]
		[Address(RVA = "0x1B53BB0", Offset = "0x1B53BB0", VA = "0x1B53BB0")]
		public LogitechRumblePad2WinProfile()
		{
		}
	}
	[Token(Token = "0x200040D")]
	[AutoDiscover]
	public class LogitechWingManWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1B54CF0", Offset = "0x1B54CF0", VA = "0x1B54CF0")]
		public LogitechWingManWinProfile()
		{
		}
	}
	[Token(Token = "0x200040E")]
	[AutoDiscover]
	public class MaxFireBlaze5Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1B55F10", Offset = "0x1B55F10", VA = "0x1B55F10")]
		public MaxFireBlaze5Profile()
		{
		}
	}
	[Token(Token = "0x200040F")]
	[AutoDiscover]
	public class MogaProLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001507")]
		[Address(RVA = "0x1B571C0", Offset = "0x1B571C0", VA = "0x1B571C0")]
		public MogaProLinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000410")]
	[AutoDiscover]
	public class MogaProMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1A418C0", Offset = "0x1A418C0", VA = "0x1A418C0")]
		public MogaProMacProfile()
		{
		}
	}
	[Token(Token = "0x2000411")]
	[AutoDiscover]
	public class MogaProWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001509")]
		[Address(RVA = "0x1A42CB8", Offset = "0x1A42CB8", VA = "0x1A42CB8")]
		public MogaProWinProfile()
		{
		}
	}
	[Token(Token = "0x2000412")]
	[AutoDiscover]
	public class NatecGenesisP44Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1A468AC", Offset = "0x1A468AC", VA = "0x1A468AC")]
		public NatecGenesisP44Profile()
		{
		}
	}
	[Token(Token = "0x2000413")]
	[AutoDiscover]
	public class NVidiaShieldAndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600150B")]
		[Address(RVA = "0x1A440B0", Offset = "0x1A440B0", VA = "0x1A440B0")]
		public NVidiaShieldAndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[AutoDiscover]
	public class NVidiaShieldTabletProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600150C")]
		[Address(RVA = "0x1A453AC", Offset = "0x1A453AC", VA = "0x1A453AC")]
		public NVidiaShieldTabletProfile()
		{
		}
	}
	[Token(Token = "0x2000415")]
	[AutoDiscover]
	public class OculusRemoteProfile : OpenVrBaseControllerProfile
	{
		[Token(Token = "0x170002CD")]
		public override VrControllerOrientation Orientation
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x1A47E30", Offset = "0x1A47E30", VA = "0x1A47E30", Slot = "6")]
			get
			{
				return default(VrControllerOrientation);
			}
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1A47CDC", Offset = "0x1A47CDC", VA = "0x1A47CDC")]
		public OculusRemoteProfile()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AutoDiscover]
	public class OculusTouchLeftControllerProfile : OpenVrBaseControllerProfile
	{
		[Token(Token = "0x170002CE")]
		public override VrControllerOrientation Orientation
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x1A48670", Offset = "0x1A48670", VA = "0x1A48670", Slot = "6")]
			get
			{
				return default(VrControllerOrientation);
			}
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1A47E38", Offset = "0x1A47E38", VA = "0x1A47E38")]
		public OculusTouchLeftControllerProfile()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[AutoDiscover]
	public class OculusTouchRightControllerProfile : OpenVrBaseControllerProfile
	{
		[Token(Token = "0x170002CF")]
		public override VrControllerOrientation Orientation
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x1A48F80", Offset = "0x1A48F80", VA = "0x1A48F80", Slot = "6")]
			get
			{
				return default(VrControllerOrientation);
			}
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1A48678", Offset = "0x1A48678", VA = "0x1A48678")]
		public OculusTouchRightControllerProfile()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public abstract class OpenVrBaseControllerProfile : VrControllerBaseProfile
	{
		[Token(Token = "0x2000419")]
		public enum VrControllerOrientation
		{
			[Token(Token = "0x4001532")]
			Unknown,
			[Token(Token = "0x4001533")]
			Right,
			[Token(Token = "0x4001534")]
			Left,
			[Token(Token = "0x4001535")]
			Hmd
		}

		[Token(Token = "0x170002D0")]
		public abstract VrControllerOrientation Orientation
		{
			[Token(Token = "0x6001513")]
			get;
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1A47E28", Offset = "0x1A47E28", VA = "0x1A47E28")]
		protected OpenVrBaseControllerProfile()
		{
		}
	}
	[Token(Token = "0x200041A")]
	[AutoDiscover]
	public class OpenVrKnucklesLeftControllerProfile : OpenVrBaseControllerProfile
	{
		[Token(Token = "0x170002D1")]
		public override VrControllerOrientation Orientation
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x1A499F4", Offset = "0x1A499F4", VA = "0x1A499F4", Slot = "6")]
			get
			{
				return default(VrControllerOrientation);
			}
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1A49194", Offset = "0x1A49194", VA = "0x1A49194")]
		public OpenVrKnucklesLeftControllerProfile()
		{
		}
	}
	[Token(Token = "0x200041B")]
	[AutoDiscover]
	public class OpenVrKnucklesRightControllerProfile : OpenVrBaseControllerProfile
	{
		[Token(Token = "0x170002D2")]
		public override VrControllerOrientation Orientation
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x1A4A25C", Offset = "0x1A4A25C", VA = "0x1A4A25C", Slot = "6")]
			get
			{
				return default(VrControllerOrientation);
			}
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1A499FC", Offset = "0x1A499FC", VA = "0x1A499FC")]
		public OpenVrKnucklesRightControllerProfile()
		{
		}
	}
	[Token(Token = "0x200041C")]
	[AutoDiscover]
	public class OpenVrLeftControllerProfile : OpenVrBaseControllerProfile
	{
		[Token(Token = "0x170002D3")]
		public override VrControllerOrientation Orientation
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x1A4ABD8", Offset = "0x1A4ABD8", VA = "0x1A4ABD8", Slot = "6")]
			get
			{
				return default(VrControllerOrientation);
			}
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x1A4A264", Offset = "0x1A4A264", VA = "0x1A4A264")]
		public OpenVrLeftControllerProfile()
		{
		}
	}
	[Token(Token = "0x200041D")]
	[AutoDiscover]
	public class OpenVrRightControllerProfile : OpenVrBaseControllerProfile
	{
		[Token(Token = "0x170002D4")]
		public override VrControllerOrientation Orientation
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x1A4B440", Offset = "0x1A4B440", VA = "0x1A4B440", Slot = "6")]
			get
			{
				return default(VrControllerOrientation);
			}
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1A4ABE0", Offset = "0x1A4ABE0", VA = "0x1A4ABE0")]
		public OpenVrRightControllerProfile()
		{
		}
	}
	[Token(Token = "0x200041E")]
	[AutoDiscover]
	public class OuyaLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1A4B448", Offset = "0x1A4B448", VA = "0x1A4B448")]
		public OuyaLinuxProfile()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[AutoDiscover]
	public class OuyaWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1A4C8E0", Offset = "0x1A4C8E0", VA = "0x1A4C8E0")]
		public OuyaWinProfile()
		{
		}
	}
	[Token(Token = "0x2000420")]
	[AutoDiscover]
	public class PlayStation2WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1A4DD84", Offset = "0x1A4DD84", VA = "0x1A4DD84")]
		public PlayStation2WinProfile()
		{
		}
	}
	[Token(Token = "0x2000421")]
	[AutoDiscover]
	public class PlayStation3AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001520")]
		[Address(RVA = "0x1A4F0E4", Offset = "0x1A4F0E4", VA = "0x1A4F0E4")]
		public PlayStation3AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000422")]
	[AutoDiscover]
	public class PlayStation3LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001521")]
		[Address(RVA = "0x1A50578", Offset = "0x1A50578", VA = "0x1A50578")]
		public PlayStation3LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000423")]
	[AutoDiscover]
	public class PlayStation3MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1A51928", Offset = "0x1A51928", VA = "0x1A51928")]
		public PlayStation3MacProfile()
		{
		}
	}
	[Token(Token = "0x2000424")]
	[AutoDiscover]
	public class PlayStation3ShenghicWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1A52C9C", Offset = "0x1A52C9C", VA = "0x1A52C9C")]
		public PlayStation3ShenghicWinProfile()
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AutoDiscover]
	public class PlayStation3WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1A53FBC", Offset = "0x1A53FBC", VA = "0x1A53FBC")]
		public PlayStation3WinProfile()
		{
		}
	}
	[Token(Token = "0x2000426")]
	[AutoDiscover]
	public class PlayStation4AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1A5558C", Offset = "0x1A5558C", VA = "0x1A5558C")]
		public PlayStation4AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000427")]
	[AutoDiscover]
	public class PlayStation4LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1A56988", Offset = "0x1A56988", VA = "0x1A56988")]
		public PlayStation4LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000428")]
	[AutoDiscover]
	public class PlayStation4MacBTProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1A57CE8", Offset = "0x1A57CE8", VA = "0x1A57CE8")]
		public PlayStation4MacBTProfile()
		{
		}
	}
	[Token(Token = "0x2000429")]
	[AutoDiscover]
	public class PlayStation4MacUSBProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1A596D8", Offset = "0x1A596D8", VA = "0x1A596D8")]
		public PlayStation4MacUSBProfile()
		{
		}
	}
	[Token(Token = "0x200042A")]
	[AutoDiscover]
	public class PlayStation4Profile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1A5AC58", Offset = "0x1A5AC58", VA = "0x1A5AC58")]
		public PlayStation4Profile()
		{
		}
	}
	[Token(Token = "0x200042B")]
	[AutoDiscover]
	public class PlayStation4WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1A5C104", Offset = "0x1A5C104", VA = "0x1A5C104")]
		public PlayStation4WinProfile()
		{
		}
	}
	[Token(Token = "0x200042C")]
	[AutoDiscover]
	public class PlayStationVitaPSMProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1A5D8CC", Offset = "0x1A5D8CC", VA = "0x1A5D8CC")]
		public PlayStationVitaPSMProfile()
		{
		}
	}
	[Token(Token = "0x200042D")]
	[AutoDiscover]
	public class SamsungGP20AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1A5E9E8", Offset = "0x1A5E9E8", VA = "0x1A5E9E8")]
		public SamsungGP20AndroidProfile()
		{
		}
	}
	[Token(Token = "0x200042E")]
	[AutoDiscover]
	public class SpeedlinkStrikeMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1A5FA08", Offset = "0x1A5FA08", VA = "0x1A5FA08")]
		public SpeedlinkStrikeMacProfile()
		{
		}
	}
	[Token(Token = "0x200042F")]
	[AutoDiscover]
	public class SpeedlinkStrikeWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1A60D68", Offset = "0x1A60D68", VA = "0x1A60D68")]
		public SpeedlinkStrikeWinProfile()
		{
		}
	}
	[Token(Token = "0x2000430")]
	[AutoDiscover]
	public class SteelSeriesFreeLinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1A620C8", Offset = "0x1A620C8", VA = "0x1A620C8")]
		public SteelSeriesFreeLinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000431")]
	[AutoDiscover]
	public class SteelSeriesFreeMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1A630F8", Offset = "0x1A630F8", VA = "0x1A630F8")]
		public SteelSeriesFreeMacProfile()
		{
		}
	}
	[Token(Token = "0x2000432")]
	[AutoDiscover]
	public class SteelSeriesFreeWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1A64500", Offset = "0x1A64500", VA = "0x1A64500")]
		public SteelSeriesFreeWinProfile()
		{
		}
	}
	[Token(Token = "0x2000433")]
	[AutoDiscover]
	public class ValveStreamingWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001532")]
		[Address(RVA = "0xCD0DCC", Offset = "0xCD0DCC", VA = "0xCD0DCC")]
		public ValveStreamingWinProfile()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public abstract class VrControllerBaseProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001533")]
		[Address(RVA = "0xCD28F4", Offset = "0xCD28F4", VA = "0xCD28F4")]
		protected VrControllerBaseProfile()
		{
		}
	}
	[Token(Token = "0x2000435")]
	[AutoDiscover]
	public class Xbox360AndroidProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001534")]
		[Address(RVA = "0xCD2958", Offset = "0xCD2958", VA = "0xCD2958")]
		public Xbox360AndroidProfile()
		{
		}
	}
	[Token(Token = "0x2000436")]
	[AutoDiscover]
	public class Xbox360LinuxProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001535")]
		[Address(RVA = "0xCD3CA0", Offset = "0xCD3CA0", VA = "0xCD3CA0")]
		public Xbox360LinuxProfile()
		{
		}
	}
	[Token(Token = "0x2000437")]
	[AutoDiscover]
	public class Xbox360MacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001536")]
		[Address(RVA = "0xCD5488", Offset = "0xCD5488", VA = "0xCD5488")]
		public Xbox360MacProfile()
		{
		}
	}
	[Token(Token = "0x2000438")]
	[AutoDiscover]
	public class Xbox360WinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001537")]
		[Address(RVA = "0xCD6940", Offset = "0xCD6940", VA = "0xCD6940")]
		public Xbox360WinProfile()
		{
		}
	}
	[Token(Token = "0x2000439")]
	[AutoDiscover]
	public class XboxOneMacProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001538")]
		[Address(RVA = "0xCD84B4", Offset = "0xCD84B4", VA = "0xCD84B4")]
		public XboxOneMacProfile()
		{
		}
	}
	[Token(Token = "0x200043A")]
	[AutoDiscover]
	public class XboxOneProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x6001539")]
		[Address(RVA = "0xCD9848", Offset = "0xCD9848", VA = "0xCD9848")]
		public XboxOneProfile()
		{
		}
	}
	[Token(Token = "0x200043B")]
	[AutoDiscover]
	public class XboxOneWinProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x600153A")]
		[Address(RVA = "0xCDAE0C", Offset = "0xCDAE0C", VA = "0xCDAE0C")]
		public XboxOneWinProfile()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class UnityInputDevice : InputDevice
	{
		[Token(Token = "0x4001536")]
		public const int MaxDevices = 10;

		[Token(Token = "0x4001537")]
		public const int MaxButtons = 20;

		[Token(Token = "0x4001538")]
		public const int MaxAnalogs = 20;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34678", Offset = "0xA34678")]
		private int <JoystickId>k__BackingField;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34688", Offset = "0xA34688")]
		private UnityInputDeviceProfile <Profile>k__BackingField;

		[Token(Token = "0x170002D5")]
		internal int JoystickId
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0xCC9B04", Offset = "0xCC9B04", VA = "0xCC9B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42774", Offset = "0xA42774")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600153C")]
			[Address(RVA = "0xCCA588", Offset = "0xCCA588", VA = "0xCCA588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42784", Offset = "0xA42784")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public UnityInputDeviceProfile Profile
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0xCCA590", Offset = "0xCCA590", VA = "0xCCA590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42794", Offset = "0xA42794")]
			get
			{
				return null;
			}
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xCCA598", Offset = "0xCCA598", VA = "0xCCA598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA427A4", Offset = "0xA427A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public override bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0xCCB03C", Offset = "0xCCB03C", VA = "0xCCB03C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D8")]
		public override bool IsKnown
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0xCCB234", Offset = "0xCCB234", VA = "0xCCB234", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xCCA5A0", Offset = "0xCCA5A0", VA = "0xCCA5A0")]
		public UnityInputDevice(UnityInputDeviceProfile profile, int joystickId)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xCCAA48", Offset = "0xCCAA48", VA = "0xCCAA48")]
		public UnityInputDevice(UnityInputDeviceProfile profile)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xCCA644", Offset = "0xCCA644", VA = "0xCCA644")]
		private void Initialize(UnityInputDeviceProfile profile, int joystickId)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xCCAB68", Offset = "0xCCAB68", VA = "0xCCAB68", Slot = "4")]
		public override void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xCCAF58", Offset = "0xCCAF58", VA = "0xCCAF58")]
		private float Combine(float? value1, float value2)
		{
			return default(float);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xCCB018", Offset = "0xCCB018", VA = "0xCCB018")]
		public bool IsConfiguredWith(UnityInputDeviceProfile deviceProfile, int joystickId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200043D")]
	public class UnityInputDeviceManager : InputDeviceManager
	{
		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EE2C", Offset = "0xA2EE2C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string unityJoystickName;

			[Token(Token = "0x6001552")]
			[Address(RVA = "0xCCC830", Offset = "0xCCC830", VA = "0xCCC830")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001553")]
			[Address(RVA = "0xCCCDE4", Offset = "0xCCCDE4", VA = "0xCCCDE4")]
			internal bool <DetectAttachedJoystickDevice>b__0(UnityInputDeviceProfile config)
			{
				return default(bool);
			}

			[Token(Token = "0x6001554")]
			[Address(RVA = "0xCCCF7C", Offset = "0xCCCF7C", VA = "0xCCCF7C")]
			internal bool <DetectAttachedJoystickDevice>b__1(UnityInputDeviceProfile config)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float deviceRefreshTimer;

		[Token(Token = "0x400153C")]
		private const float deviceRefreshInterval = 1f;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<UnityInputDeviceProfile> deviceProfiles;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool keyboardDevicesAttached;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string joystickHash;

		[Token(Token = "0x170002D9")]
		private static string JoystickHash
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xCCB5E4", Offset = "0xCCB5E4", VA = "0xCCB5E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xCCB268", Offset = "0xCCB268", VA = "0xCCB268")]
		public UnityInputDeviceManager()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xCCB524", Offset = "0xCCB524", VA = "0xCCB524", Slot = "4")]
		public override void Update(ulong updateTick, float deltaTime)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xCCB4EC", Offset = "0xCCB4EC", VA = "0xCCB4EC")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xCCBB1C", Offset = "0xCCBB1C", VA = "0xCCBB1C")]
		private void AttachDevice(UnityInputDevice device)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xCCB694", Offset = "0xCCB694", VA = "0xCCB694")]
		private void AttachKeyboardDevices()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xCCBBDC", Offset = "0xCCBBDC", VA = "0xCCBBDC")]
		private void AttachKeyboardDeviceWithConfig(UnityInputDeviceProfile config)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xCCB784", Offset = "0xCCB784", VA = "0xCCB784")]
		private void DetectAttachedJoystickDevices()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xCCBC60", Offset = "0xCCBC60", VA = "0xCCBC60")]
		private void DetectAttachedJoystickDevice(int unityJoystickId, string unityJoystickName)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xCCB900", Offset = "0xCCB900", VA = "0xCCB900")]
		private void DetectDetachedJoystickDevices()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xCCB2F8", Offset = "0xCCB2F8", VA = "0xCCB2F8")]
		private void AutoDiscoverDeviceProfiles()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public sealed class AutoDiscover : Attribute
	{
		[Token(Token = "0x6001555")]
		[Address(RVA = "0xBBACA4", Offset = "0xBBACA4", VA = "0xBBACA4")]
		public AutoDiscover()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class UnityInputDeviceProfile
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34698", Offset = "0xA34698")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346A8", Offset = "0xA346A8")]
		private string <Meta>k__BackingField;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346B8", Offset = "0xA346B8")]
		private string <SpritePrefix>k__BackingField;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346C8", Offset = "0xA346C8")]
		private InputControlMapping[] <AnalogMappings>k__BackingField;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346D8", Offset = "0xA346D8")]
		private InputControlMapping[] <ButtonMappings>k__BackingField;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string[] SupportedPlatforms;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346E8", Offset = "0xA346E8")]
		private string[] <ExcludePlatforms>k__BackingField;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected string[] JoystickNames;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected string[] JoystickRegex;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected string LastResortRegex;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA346F8", Offset = "0xA346F8")]
		private VersionInfo <MinUnityVersion>k__BackingField;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34708", Offset = "0xA34708")]
		private VersionInfo <MaxUnityVersion>k__BackingField;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<Type> hideList;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sensitivity;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lowerDeadZone;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float upperDeadZone;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static InputControlSource Button0;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static InputControlSource Button1;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static InputControlSource Button2;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static InputControlSource Button3;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static InputControlSource Button4;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static InputControlSource Button5;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static InputControlSource Button6;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static InputControlSource Button7;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static InputControlSource Button8;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static InputControlSource Button9;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static InputControlSource Button10;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static InputControlSource Button11;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static InputControlSource Button12;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected static InputControlSource Button13;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected static InputControlSource Button14;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected static InputControlSource Button15;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected static InputControlSource Button16;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected static InputControlSource Button17;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected static InputControlSource Button18;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected static InputControlSource Button19;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected static InputControlSource Analog0;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected static InputControlSource Analog1;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected static InputControlSource Analog2;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected static InputControlSource Analog3;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected static InputControlSource Analog4;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected static InputControlSource Analog5;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected static InputControlSource Analog6;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected static InputControlSource Analog7;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected static InputControlSource Analog8;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected static InputControlSource Analog9;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected static InputControlSource Analog10;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected static InputControlSource Analog11;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected static InputControlSource Analog12;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected static InputControlSource Analog13;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected static InputControlSource Analog14;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected static InputControlSource Analog15;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected static InputControlSource Analog16;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected static InputControlSource Analog17;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected static InputControlSource Analog18;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected static InputControlSource Analog19;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected static InputControlSource MouseButton0;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected static InputControlSource MouseButton1;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected static InputControlSource MouseButton2;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected static InputControlSource MouseXAxis;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected static InputControlSource MouseYAxis;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected static InputControlSource MouseScrollWheel;

		[Token(Token = "0x170002DA")]
		public string Name
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0xCCA63C", Offset = "0xCCA63C", VA = "0xCCA63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA427B4", Offset = "0xA427B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001557")]
			[Address(RVA = "0xCCD05C", Offset = "0xCCD05C", VA = "0xCCD05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA427C4", Offset = "0xA427C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public string Meta
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0xCCAAE0", Offset = "0xCCAAE0", VA = "0xCCAAE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA427D4", Offset = "0xA427D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001559")]
			[Address(RVA = "0xCCD064", Offset = "0xCCD064", VA = "0xCCD064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA427E4", Offset = "0xA427E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public string SpritePrefix
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0xCCD06C", Offset = "0xCCD06C", VA = "0xCCD06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA427F4", Offset = "0xA427F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xCCD074", Offset = "0xCCD074", VA = "0xCCD074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42804", Offset = "0xA42804")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public InputControlMapping[] AnalogMappings
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0xCCAB14", Offset = "0xCCAB14", VA = "0xCCAB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42814", Offset = "0xA42814")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xCCD07C", Offset = "0xCCD07C", VA = "0xCCD07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42824", Offset = "0xA42824")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public InputControlMapping[] ButtonMappings
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0xCCAB60", Offset = "0xCCAB60", VA = "0xCCAB60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42834", Offset = "0xA42834")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155F")]
			[Address(RVA = "0xCCD084", Offset = "0xCCD084", VA = "0xCCD084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42844", Offset = "0xA42844")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public string[] ExcludePlatforms
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xCCD08C", Offset = "0xCCD08C", VA = "0xCCD08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42854", Offset = "0xA42854")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001561")]
			[Address(RVA = "0xCCD094", Offset = "0xCCD094", VA = "0xCCD094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42864", Offset = "0xA42864")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public VersionInfo MinUnityVersion
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0xCCD09C", Offset = "0xCCD09C", VA = "0xCCD09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42874", Offset = "0xA42874")]
			get
			{
				return default(VersionInfo);
			}
			[Token(Token = "0x6001563")]
			[Address(RVA = "0xCCD0A8", Offset = "0xCCD0A8", VA = "0xCCD0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42884", Offset = "0xA42884")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public VersionInfo MaxUnityVersion
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0xCCD0B0", Offset = "0xCCD0B0", VA = "0xCCD0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42894", Offset = "0xA42894")]
			get
			{
				return default(VersionInfo);
			}
			[Token(Token = "0x6001565")]
			[Address(RVA = "0xCCD0BC", Offset = "0xCCD0BC", VA = "0xCCD0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA428A4", Offset = "0xA428A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public float Sensitivity
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0xCCAB1C", Offset = "0xCCAB1C", VA = "0xCCAB1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001568")]
			[Address(RVA = "0xCCD178", Offset = "0xCCD178", VA = "0xCCD178")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public float LowerDeadZone
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0xCCAB2C", Offset = "0xCCAB2C", VA = "0xCCAB2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600156A")]
			[Address(RVA = "0xCCD1F4", Offset = "0xCCD1F4", VA = "0xCCD1F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public float UpperDeadZone
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0xCCAB24", Offset = "0xCCAB24", VA = "0xCCAB24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600156C")]
			[Address(RVA = "0xCCD270", Offset = "0xCCD270", VA = "0xCCD270")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public bool IsSupportedOnThisPlatform
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0xCCB068", Offset = "0xCCB068", VA = "0xCCB068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E6")]
		public bool IsSupportedOnThisVersionOfUnity
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0xCCD2EC", Offset = "0xCCD2EC", VA = "0xCCD2EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E7")]
		public virtual bool IsJoystick
		{
			[Token(Token = "0x600156F")]
			[Address(RVA = "0xCCD51C", Offset = "0xCCD51C", VA = "0xCCD51C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E8")]
		public bool IsNotJoystick
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0xCCBBB8", Offset = "0xCCBBB8", VA = "0xCCBBB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E9")]
		public bool IsHidden
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0xCCCD08", Offset = "0xCCCD08", VA = "0xCCCD08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EA")]
		public virtual bool IsKnown
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0xCCD5E8", Offset = "0xCCD5E8", VA = "0xCCD5E8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EB")]
		public int AnalogCount
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xCCAAE8", Offset = "0xCCAAE8", VA = "0xCCAAE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EC")]
		public int ButtonCount
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0xCCAB34", Offset = "0xCCAB34", VA = "0xCCAB34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xCCD0C4", Offset = "0xCCD0C4", VA = "0xCCD0C4")]
		public UnityInputDeviceProfile()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xCCCE18", Offset = "0xCCCE18", VA = "0xCCCE18")]
		public bool HasJoystickName(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xCCCFB0", Offset = "0xCCCFB0", VA = "0xCCCFB0")]
		public bool HasLastResortRegex(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xCCCDA4", Offset = "0xCCCDA4", VA = "0xCCCDA4")]
		public bool HasJoystickOrRegexName(string joystickName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xCCD55C", Offset = "0xCCD55C", VA = "0xCCD55C")]
		public static void Hide(Type type)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xCCD5F0", Offset = "0xCCD5F0", VA = "0xCCD5F0")]
		protected static InputControlSource Button(int index)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xCCD658", Offset = "0xCCD658", VA = "0xCCD658")]
		protected static InputControlSource Analog(int index)
		{
			return null;
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xCCD6C0", Offset = "0xCCD6C0", VA = "0xCCD6C0")]
		protected static InputControlSource KeyCodeButton(params KeyCode[] keyCodeList)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xCCD750", Offset = "0xCCD750", VA = "0xCCD750")]
		protected static InputControlSource KeyCodeComboButton(params KeyCode[] keyCodeList)
		{
			return null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xCCD7E0", Offset = "0xCCD7E0", VA = "0xCCD7E0")]
		protected static InputControlSource KeyCodeAxis(KeyCode negativeKeyCode, KeyCode positiveKeyCode)
		{
			return null;
		}
	}
	[Token(Token = "0x2000441")]
	public class UnityInputDeviceProfileList : ScriptableObject
	{
		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] Profiles;

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xCCDDC8", Offset = "0xCCDDC8", VA = "0xCCDDC8")]
		public UnityInputDeviceProfileList()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class UnityUnknownDeviceProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x170002ED")]
		public override bool IsKnown
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0xCCF928", Offset = "0xCCF928", VA = "0xCCF928", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xCCC8BC", Offset = "0xCCC8BC", VA = "0xCCC8BC")]
		public UnityUnknownDeviceProfile(string joystickName)
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class SingletonMonoBehavior<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA34718", Offset = "0xA34718")]
		private static T <Instance>k__BackingField;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x170002EE")]
		public static T Instance
		{
			[Token(Token = "0x6001583")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA428B4", Offset = "0xA428B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA428C4", Offset = "0xA428C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001585")]
		protected void SetSingletonInstance()
		{
		}

		[Token(Token = "0x6001586")]
		public SingletonMonoBehavior()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public static class Utility
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2[] circleVertexList;

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xCCF930", Offset = "0xCCF930", VA = "0xCCF930")]
		public static void DrawCircleGizmo(Vector2 center, float radius)
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xCCFB5C", Offset = "0xCCFB5C", VA = "0xCCFB5C")]
		public static void DrawCircleGizmo(Vector2 center, float radius, Color color)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xCCFC18", Offset = "0xCCFC18", VA = "0xCCFC18")]
		public static void DrawOvalGizmo(Vector2 center, Vector2 size)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xCCFE6C", Offset = "0xCCFE6C", VA = "0xCCFE6C")]
		public static void DrawOvalGizmo(Vector2 center, Vector2 size, Color color)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xCCFF30", Offset = "0xCCFF30", VA = "0xCCFF30")]
		public static void DrawRectGizmo(Rect rect)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xCD0098", Offset = "0xCD0098", VA = "0xCD0098")]
		public static void DrawRectGizmo(Rect rect, Color color)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xCD015C", Offset = "0xCD015C", VA = "0xCD015C")]
		public static void DrawRectGizmo(Vector2 center, Vector2 size)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xCD0280", Offset = "0xCD0280", VA = "0xCD0280")]
		public static void DrawRectGizmo(Vector2 center, Vector2 size, Color color)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xCD0344", Offset = "0xCD0344", VA = "0xCD0344")]
		public static bool GameObjectIsCulledOnCurrentCamera(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xCD03B0", Offset = "0xCD03B0", VA = "0xCD03B0")]
		public static Color MoveColorTowards(Color color0, Color color1, float maxDelta)
		{
			return default(Color);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xCD04DC", Offset = "0xCD04DC", VA = "0xCD04DC")]
		public static float ApplyDeadZone(float value, float lowerDeadZone, float upperDeadZone)
		{
			return default(float);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xCD057C", Offset = "0xCD057C", VA = "0xCD057C")]
		public static Vector2 ApplyCircularDeadZone(Vector2 axisVector, float lowerDeadZone, float upperDeadZone)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xCD066C", Offset = "0xCD066C", VA = "0xCD066C")]
		public static Vector2 ApplyCircularDeadZone(float axisX, float axisY, float lowerDeadZone, float upperDeadZone)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000445")]
	public struct VersionInfo : IComparable<VersionInfo>
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Major;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Minor;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Patch;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Build;

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x8FF6C8", Offset = "0x8FF6C8", VA = "0x8FF6C8")]
		public VersionInfo(int major, int minor = 0, int patch = 0, int build = 0)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xCD219C", Offset = "0xCD219C", VA = "0xCD219C")]
		public static VersionInfo InControlVersion()
		{
			return default(VersionInfo);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xCCD358", Offset = "0xCCD358", VA = "0xCCD358")]
		public static VersionInfo UnityVersion()
		{
			return default(VersionInfo);
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x8FF6E4", Offset = "0x8FF6E4", VA = "0x8FF6E4", Slot = "4")]
		public int CompareTo(VersionInfo other)
		{
			return default(int);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xCD220C", Offset = "0xCD220C", VA = "0xCD220C")]
		public static bool operator ==(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xCD2240", Offset = "0xCD2240", VA = "0xCD2240")]
		public static bool operator !=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xCCC854", Offset = "0xCCC854", VA = "0xCCC854")]
		public static bool operator <=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xCCC888", Offset = "0xCCC888", VA = "0xCCC888")]
		public static bool operator >=(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xCD2274", Offset = "0xCD2274", VA = "0xCD2274")]
		public static bool operator <(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xCD22A4", Offset = "0xCD22A4", VA = "0xCD22A4")]
		public static bool operator >(VersionInfo a, VersionInfo b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x8FF6EC", Offset = "0x8FF6EC", VA = "0x8FF6EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x8FF6F4", Offset = "0x8FF6F4", VA = "0x8FF6F4")]
		public string ToShortString()
		{
			return null;
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x8FF6FC", Offset = "0x8FF6FC", VA = "0x8FF6FC", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x8FF704", Offset = "0x8FF704", VA = "0x8FF704", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000446")]
	public class TestInputManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EE3C", Offset = "0xA2EE3C")]
		private sealed class <>c
		{
			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<InputDevice> <>9__4_1;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<InputDevice> <>9__4_2;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<InputDevice> <>9__4_3;

			[Token(Token = "0x60015B0")]
			[Address(RVA = "0xCC917C", Offset = "0xCC917C", VA = "0xCC917C")]
			public <>c()
			{
			}

			[Token(Token = "0x60015B1")]
			[Address(RVA = "0xCC9184", Offset = "0xCC9184", VA = "0xCC9184")]
			internal void <OnEnable>b__4_1(InputDevice inputDevice)
			{
			}

			[Token(Token = "0x60015B2")]
			[Address(RVA = "0xCC9188", Offset = "0xCC9188", VA = "0xCC9188")]
			internal void <OnEnable>b__4_2(InputDevice inputDevice)
			{
			}

			[Token(Token = "0x60015B3")]
			[Address(RVA = "0xCC918C", Offset = "0xCC918C", VA = "0xCC918C")]
			internal void <OnEnable>b__4_3(InputDevice inputDevice)
			{
			}
		}

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font font;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle style;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LogMessage> logMessages;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isPaused;

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1A658F8", Offset = "0x1A658F8", VA = "0x1A658F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x1A65E30", Offset = "0x1A65E30", VA = "0x1A65E30")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x1A65ED8", Offset = "0x1A65ED8", VA = "0x1A65ED8")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x1A65E34", Offset = "0x1A65E34", VA = "0x1A65E34")]
		private void CheckForPauseButton()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x1A65F54", Offset = "0x1A65F54", VA = "0x1A65F54")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1A65FCC", Offset = "0x1A65FCC", VA = "0x1A65FCC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x1A66C68", Offset = "0x1A66C68", VA = "0x1A66C68")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x1A65BA8", Offset = "0x1A65BA8", VA = "0x1A65BA8")]
		private void TestInputMappings()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1A66D80", Offset = "0x1A66D80", VA = "0x1A66D80")]
		private void TestInputMapping(InputControlMapping.Range sourceRange, InputControlMapping.Range targetRange, bool invert, float expectA, float expectB, float expectC)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1A66EFC", Offset = "0x1A66EFC", VA = "0x1A66EFC")]
		public TestInputManager()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1A66F8C", Offset = "0x1A66F8C", VA = "0x1A66F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA428D4", Offset = "0xA428D4")]
		private void <OnEnable>b__4_0(LogMessage logMessage)
		{
		}
	}
}
namespace MultiplayerExample
{
	[Token(Token = "0x2000448")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerNum;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer cubeRenderer;

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xD54370", Offset = "0xD54370", VA = "0xD54370")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xD543C8", Offset = "0xD543C8", VA = "0xD543C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xD54544", Offset = "0xD54544", VA = "0xD54544")]
		private void UpdateCubeWithInputDevice(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xD54A44", Offset = "0xD54A44", VA = "0xD54A44")]
		public CubeController()
		{
		}
	}
}
namespace InterfaceMovement
{
	[Token(Token = "0x2000449")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button up;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button down;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button left;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button right;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer cubeRenderer;

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xCDEA18", Offset = "0xCDEA18", VA = "0xCDEA18")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xCDEA70", Offset = "0xCDEA70", VA = "0xCDEA70")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xCDEC34", Offset = "0xCDEC34", VA = "0xCDEC34")]
		public Button()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class ButtonFocus : MonoBehaviour
	{
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xCDEC3C", Offset = "0xCDEC3C", VA = "0xCDEC3C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xCDEDF4", Offset = "0xCDEDF4", VA = "0xCDEDF4")]
		public ButtonFocus()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class ButtonManager : MonoBehaviour
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button focusedButton;

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xCDEDFC", Offset = "0xCDEDFC", VA = "0xCDEDFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xCDEE6C", Offset = "0xCDEE6C", VA = "0xCDEE6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xCDF068", Offset = "0xCDF068", VA = "0xCDF068")]
		private void MoveFocusTo(Button newFocusedButton)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xCDF0EC", Offset = "0xCDF0EC", VA = "0xCDF0EC")]
		public ButtonManager()
		{
		}
	}
}
namespace GyroExample
{
	[Token(Token = "0x200044C")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EE4C", Offset = "0xA2EE4C")]
		private sealed class <CalibrateGyro>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015C8")]
				[Address(RVA = "0xBA8C30", Offset = "0xBA8C30", VA = "0xBA8C30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015CA")]
				[Address(RVA = "0xBA8CA0", Offset = "0xBA8CA0", VA = "0xBA8CA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xBA88F4", Offset = "0xBA88F4", VA = "0xBA88F4")]
			[DebuggerHidden]
			public <CalibrateGyro>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xBA8B8C", Offset = "0xBA8B8C", VA = "0xBA8B8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xBA8B90", Offset = "0xBA8B90", VA = "0xBA8B90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xBA8C38", Offset = "0xBA8C38", VA = "0xBA8C38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xBA8868", Offset = "0xBA8868", VA = "0xBA8868")]
		private void Start()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xBA8894", Offset = "0xBA8894", VA = "0xBA8894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA428E4", Offset = "0xA428E4")]
		private IEnumerator CalibrateGyro()
		{
			return null;
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xBA8920", Offset = "0xBA8920", VA = "0xBA8920")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xBA8B84", Offset = "0xBA8B84", VA = "0xBA8B84")]
		public CubeController()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class GyroProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xBA8CA8", Offset = "0xBA8CA8", VA = "0xBA8CA8")]
		public GyroProfile()
		{
		}
	}
}
namespace CustomProfileExample
{
	[Token(Token = "0x200044F")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 targetPosition;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer cubeRenderer;

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xAADA64", Offset = "0xAADA64", VA = "0xAADA64")]
		private void Start()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xAADAE8", Offset = "0xAADAE8", VA = "0xAADAE8")]
		private void Update()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xAADFE4", Offset = "0xAADFE4", VA = "0xAADFE4")]
		private Color GetColorFromActionButtons(InputDevice inputDevice)
		{
			return default(Color);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xAAE204", Offset = "0xAAE204", VA = "0xAAE204")]
		public CubeController()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class KeyboardAndMouseProfile : UnityInputDeviceProfile
	{
		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xAAE20C", Offset = "0xAAE20C", VA = "0xAAE20C")]
		public KeyboardAndMouseProfile()
		{
		}
	}
}
namespace BasicExample
{
	[Token(Token = "0x2000451")]
	public class CubeController : MonoBehaviour
	{
		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xB9BEA4", Offset = "0xB9BEA4", VA = "0xB9BEA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xB9C08C", Offset = "0xB9C08C", VA = "0xB9C08C")]
		public CubeController()
		{
		}
	}
}
namespace FMODUnity
{
	[Token(Token = "0x2000452")]
	public class ORFmodRuntimeManager : RuntimeManager
	{
		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xAC3C84", Offset = "0xAC3C84", VA = "0xAC3C84")]
		public ORFmodRuntimeManager()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class ORFmodSettings : MonoBehaviour
	{
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EE5C", Offset = "0xA2EE5C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Regex r;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string driverName;

			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xAC4264", Offset = "0xAC4264", VA = "0xAC4264")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60015DF")]
			[Address(RVA = "0xAC5AF4", Offset = "0xAC5AF4", VA = "0xAC5AF4")]
			internal bool <SetVrDriver>b__1(<>f__AnonymousType3<string, int> pair)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EE6C", Offset = "0xA2EE6C")]
		private sealed class <>c
		{
			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, int, <>f__AnonymousType3<string, int>> <>9__8_0;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<<>f__AnonymousType3<string, int>, int> <>9__8_2;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, int, <>f__AnonymousType3<string, int>> <>9__9_0;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<<>f__AnonymousType3<string, int>, int> <>9__9_2;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<string, int, <>f__AnonymousType3<string, int>> <>9__10_0;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<<>f__AnonymousType3<string, int>, int> <>9__10_2;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<string, int, <>f__AnonymousType3<string, int>> <>9__11_0;

			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<<>f__AnonymousType3<string, int>, int> <>9__11_2;

			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xAC5554", Offset = "0xAC5554", VA = "0xAC5554")]
			public <>c()
			{
			}

			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xAC555C", Offset = "0xAC555C", VA = "0xAC555C")]
			internal <>f__AnonymousType3<string, int> <SetVrDriver>b__8_0(string value, int index)
			{
				return null;
			}

			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xAC55D8", Offset = "0xAC55D8", VA = "0xAC55D8")]
			internal int <SetVrDriver>b__8_2(<>f__AnonymousType3<string, int> pair)
			{
				return default(int);
			}

			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xAC5634", Offset = "0xAC5634", VA = "0xAC5634")]
			internal <>f__AnonymousType3<string, int> <SetScreenDriver>b__9_0(string value, int index)
			{
				return null;
			}

			[Token(Token = "0x60015E5")]
			[Address(RVA = "0xAC56B0", Offset = "0xAC56B0", VA = "0xAC56B0")]
			internal int <SetScreenDriver>b__9_2(<>f__AnonymousType3<string, int> pair)
			{
				return default(int);
			}

			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xAC570C", Offset = "0xAC570C", VA = "0xAC570C")]
			internal <>f__AnonymousType3<string, int> <SetVrDriver>b__10_0(string value, int index)
			{
				return null;
			}

			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xAC5788", Offset = "0xAC5788", VA = "0xAC5788")]
			internal int <SetVrDriver>b__10_2(<>f__AnonymousType3<string, int> pair)
			{
				return default(int);
			}

			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xAC57E4", Offset = "0xAC57E4", VA = "0xAC57E4")]
			internal <>f__AnonymousType3<string, int> <SetScreenDriver>b__11_0(string value, int index)
			{
				return null;
			}

			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xAC5860", Offset = "0xAC5860", VA = "0xAC5860")]
			internal int <SetScreenDriver>b__11_2(<>f__AnonymousType3<string, int> pair)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EE7C", Offset = "0xA2EE7C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Regex r;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string driverName;

			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xAC486C", Offset = "0xAC486C", VA = "0xAC486C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xAC5BD0", Offset = "0xAC5BD0", VA = "0xAC5BD0")]
			internal bool <SetScreenDriver>b__1(<>f__AnonymousType3<string, int> pair)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EE8C", Offset = "0xA2EE8C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string driverName;

			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xAC4D98", Offset = "0xAC4D98", VA = "0xAC4D98")]
			public <>c__DisplayClass10_0()
			{
			}
		}

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EE9C", Offset = "0xA2EE9C")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Regex r;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xAC4DA0", Offset = "0xAC4DA0", VA = "0xAC4DA0")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xAC58BC", Offset = "0xAC58BC", VA = "0xAC58BC")]
			internal bool <SetVrDriver>b__1(<>f__AnonymousType3<string, int> pair)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EEAC", Offset = "0xA2EEAC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] availableDrivers;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ORFmodSettings <>4__this;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<string, bool> <>9__3;

			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xAC54D4", Offset = "0xAC54D4", VA = "0xAC54D4")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xAC59A8", Offset = "0xAC59A8", VA = "0xAC59A8")]
			internal bool <SetScreenDriver>b__3(string drv)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EEBC", Offset = "0xA2EEBC")]
		private sealed class <>c__DisplayClass11_1
		{
			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Regex r;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string driverName;

			[Token(Token = "0x60015F1")]
			[Address(RVA = "0xAC54DC", Offset = "0xAC54DC", VA = "0xAC54DC")]
			public <>c__DisplayClass11_1()
			{
			}

			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xAC5A18", Offset = "0xAC5A18", VA = "0xAC5A18")]
			internal bool <SetScreenDriver>b__1(<>f__AnonymousType3<string, int> pair)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string[] vrDriver;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string[] screenDriver;

		[NonSerialized]
		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int currentVrDriverIndex;

		[NonSerialized]
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int currentScreenDriverIndex;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool screenSoundDisabled;

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xAC3CEC", Offset = "0xAC3CEC", VA = "0xAC3CEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xAC3CF0", Offset = "0xAC3CF0", VA = "0xAC3CF0")]
		private void ReadFromIniFile()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xAC3ED4", Offset = "0xAC3ED4", VA = "0xAC3ED4")]
		public void UpdateDrivers()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xAC3ED8", Offset = "0xAC3ED8", VA = "0xAC3ED8")]
		public bool SetVrDriver(string driverName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xAC43FC", Offset = "0xAC43FC", VA = "0xAC43FC")]
		public bool SetScreenDriver(string driverName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xAC4874", Offset = "0xAC4874", VA = "0xAC4874")]
		private void SetVrDriver()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xAC4DA8", Offset = "0xAC4DA8", VA = "0xAC4DA8")]
		private void SetScreenDriver()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xAC426C", Offset = "0xAC426C", VA = "0xAC426C")]
		public static string[] GetAvailableDrivers()
		{
			return null;
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xAC54E4", Offset = "0xAC54E4", VA = "0xAC54E4")]
		public ORFmodSettings()
		{
		}
	}
	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA2EECC", Offset = "0xA2EECC")]
	public class ORFmodStudioEventEmitter : MonoBehaviour
	{
		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string label;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[EventRef]
		public string VrEvent;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[EventRef]
		public string ScreenEvent;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EmitterGameEvent PlayEvent;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EmitterGameEvent StopEvent;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string CollisionTag;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AllowFadeout;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool TriggerOnce;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool Preload;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool alwaysStopOnDestroy;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform playAtLocation;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool randomStartPosition;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ParamRef[] Params;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventDescription screenEventDescription;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventDescription vrEventDescription;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventInstance vrInstance;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventInstance screenInstance;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool hasTriggered;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool isQuitting;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ORFmodStudioListener _vrListener;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StudioListener _screenListener;

		[Token(Token = "0x170002F1")]
		private ORFmodStudioListener vrListener
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0xAC5CAC", Offset = "0xAC5CAC", VA = "0xAC5CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private StudioListener screenListener
		{
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0xAC5D74", Offset = "0xAC5D74", VA = "0xAC5D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F3")]
		public float Duration
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xAC6580", Offset = "0xAC6580", VA = "0xAC6580")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xAC5E40", Offset = "0xAC5E40", VA = "0xAC5E40")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xAC61C8", Offset = "0xAC61C8", VA = "0xAC61C8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xAC61D4", Offset = "0xAC61D4", VA = "0xAC61D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xAC62E0", Offset = "0xAC62E0", VA = "0xAC62E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xAC62E8", Offset = "0xAC62E8", VA = "0xAC62E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xAC62F0", Offset = "0xAC62F0", VA = "0xAC62F0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xAC6364", Offset = "0xAC6364", VA = "0xAC6364")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xAC63D8", Offset = "0xAC63D8", VA = "0xAC63D8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xAC6464", Offset = "0xAC6464", VA = "0xAC6464")]
		private void OnCollisionExit(Collision other)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xAC6178", Offset = "0xAC6178", VA = "0xAC6178")]
		private void HandleGameEvent(EmitterGameEvent gameEvent)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xAC60B0", Offset = "0xAC60B0", VA = "0xAC60B0")]
		private void Lookup()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xAAFF28", Offset = "0xAAFF28", VA = "0xAAFF28")]
		public void Play()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xAB8DB4", Offset = "0xAB8DB4", VA = "0xAB8DB4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xAB2484", Offset = "0xAB2484", VA = "0xAB2484")]
		public void SetParameter(string name, float value)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xABF8B0", Offset = "0xABF8B0", VA = "0xABF8B0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xAC64F0", Offset = "0xAC64F0", VA = "0xAC64F0")]
		private void ReleaseInstance(ref EventInstance instance)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xAC65D8", Offset = "0xAC65D8", VA = "0xAC65D8")]
		public void PlayCue()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xAC663C", Offset = "0xAC663C", VA = "0xAC663C")]
		public ORFmodStudioEventEmitter()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class ORFmodStudioListener : MonoBehaviour
	{
		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rigidBody;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int listenerIndex;

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xAC66C0", Offset = "0xAC66C0", VA = "0xAC66C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xAC679C", Offset = "0xAC679C", VA = "0xAC679C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xAC683C", Offset = "0xAC683C", VA = "0xAC683C")]
		private void Update()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xAC6840", Offset = "0xAC6840", VA = "0xAC6840")]
		private void SetListenerLocation()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xAC68D4", Offset = "0xAC68D4", VA = "0xAC68D4")]
		public ORFmodStudioListener()
		{
		}
	}
}
namespace OddRaven
{
	[Token(Token = "0x200045D")]
	public static class OddRavenHelpers
	{
		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EF14", Offset = "0xA2EF14")]
		private sealed class <Fade>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaskableGraphic element;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color toColor;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x170002F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600164C")]
				[Address(RVA = "0x1E8395C", Offset = "0x1E8395C", VA = "0x1E8395C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600164E")]
				[Address(RVA = "0x1E839CC", Offset = "0x1E839CC", VA = "0x1E839CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001649")]
			[Address(RVA = "0x1E82774", Offset = "0x1E82774", VA = "0x1E82774")]
			[DebuggerHidden]
			public <Fade>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600164A")]
			[Address(RVA = "0x1E838C0", Offset = "0x1E838C0", VA = "0x1E838C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600164B")]
			[Address(RVA = "0x1E838C4", Offset = "0x1E838C4", VA = "0x1E838C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600164D")]
			[Address(RVA = "0x1E83964", Offset = "0x1E83964", VA = "0x1E83964", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EF24", Offset = "0xA2EF24")]
		private sealed class <Fade>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaskableGraphic element;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color fromColor;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool forceFade;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Color toColor;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float fadeTime;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <time>5__2;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Color <startColor>5__3;

			[Token(Token = "0x170002F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001652")]
				[Address(RVA = "0x1E83B9C", Offset = "0x1E83B9C", VA = "0x1E83B9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001654")]
				[Address(RVA = "0x1E83C0C", Offset = "0x1E83C0C", VA = "0x1E83C0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600164F")]
			[Address(RVA = "0x1E828BC", Offset = "0x1E828BC", VA = "0x1E828BC")]
			[DebuggerHidden]
			public <Fade>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001650")]
			[Address(RVA = "0x1E839D4", Offset = "0x1E839D4", VA = "0x1E839D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001651")]
			[Address(RVA = "0x1E839D8", Offset = "0x1E839D8", VA = "0x1E839D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001653")]
			[Address(RVA = "0x1E83BA4", Offset = "0x1E83BA4", VA = "0x1E83BA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EF34", Offset = "0xA2EF34")]
		private sealed class <Fade>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup element;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool forceFade;

			[Token(Token = "0x40015E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float alpha;

			[Token(Token = "0x40015E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40015E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <time>5__2;

			[Token(Token = "0x40015E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startColor>5__3;

			[Token(Token = "0x170002F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001658")]
				[Address(RVA = "0x1E83DC0", Offset = "0x1E83DC0", VA = "0x1E83DC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600165A")]
				[Address(RVA = "0x1E83E30", Offset = "0x1E83E30", VA = "0x1E83E30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001655")]
			[Address(RVA = "0x1E829B4", Offset = "0x1E829B4", VA = "0x1E829B4")]
			[DebuggerHidden]
			public <Fade>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001656")]
			[Address(RVA = "0x1E83C14", Offset = "0x1E83C14", VA = "0x1E83C14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001657")]
			[Address(RVA = "0x1E83C18", Offset = "0x1E83C18", VA = "0x1E83C18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001659")]
			[Address(RVA = "0x1E83DC8", Offset = "0x1E83DC8", VA = "0x1E83DC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Camera screenCamera;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera vrCamera;

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x1E81B7C", Offset = "0x1E81B7C", VA = "0x1E81B7C")]
		public static bool InLayerMask(this int layer, LayerMask layerMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x1E81BD8", Offset = "0x1E81BD8", VA = "0x1E81BD8")]
		public static void SetLayerRecursively(this GameObject go, int layer)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x1E81CB0", Offset = "0x1E81CB0", VA = "0x1E81CB0")]
		public static bool AllCamerasAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x1E81DE4", Offset = "0x1E81DE4", VA = "0x1E81DE4")]
		public static Camera GetScreenCamera()
		{
			return null;
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x1E81E80", Offset = "0x1E81E80", VA = "0x1E81E80")]
		public static Camera GetVrCamera()
		{
			return null;
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x1E82040", Offset = "0x1E82040", VA = "0x1E82040")]
		public static SteamVR_SimpleHand GetVrHand(ControllerOrientation orientation)
		{
			return null;
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x1E82108", Offset = "0x1E82108", VA = "0x1E82108")]
		public static SteamVR_SimpleHand[] GetVrHands()
		{
			return null;
		}

		[Token(Token = "0x6001614")]
		public static T SetDefaultValues<T>(this T builder) where T : HitBuilder<T>
		{
			return null;
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x1E82278", Offset = "0x1E82278", VA = "0x1E82278")]
		public static ORFmodStudioEventEmitter FindEmitterByLabel(this GameObject gameObject, string label)
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		public static T[] FindObjectsOfTypeAll<T>()
		{
			return null;
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1E82380", Offset = "0x1E82380", VA = "0x1E82380")]
		internal static bool IsTracking(WandComponent controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1E82444", Offset = "0x1E82444", VA = "0x1E82444")]
		public static int GetIndex(this string[] names, string current)
		{
			return default(int);
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x1E8250C", Offset = "0x1E8250C", VA = "0x1E8250C")]
		public static void SetEmission(this Renderer r, MaterialPropertyBlock mpb, Color color, float emission)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x1E826A8", Offset = "0x1E826A8", VA = "0x1E826A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA429F8", Offset = "0xA429F8")]
		public static IEnumerator Fade(this MaskableGraphic element, Color toColor, float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x1E827A0", Offset = "0x1E827A0", VA = "0x1E827A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42A6C", Offset = "0xA42A6C")]
		public static IEnumerator Fade(this MaskableGraphic element, Color fromColor, Color toColor, float fadeTime, bool forceFade = false)
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x1E828E8", Offset = "0x1E828E8", VA = "0x1E828E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA42AE0", Offset = "0xA42AE0")]
		public static IEnumerator Fade(this CanvasGroup element, float alpha, float fadeTime, bool forceFade = false)
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x1E829E0", Offset = "0x1E829E0", VA = "0x1E829E0")]
		public static int GetOculusTrackerCount()
		{
			return default(int);
		}

		[Token(Token = "0x600161E")]
		public static T GetComponentInParent<T>(this Component c, bool includeInactive)
		{
			return (T)null;
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x1E82A80", Offset = "0x1E82A80", VA = "0x1E82A80")]
		public static Vector3 ToVector3(this Vector2 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x1E82AB4", Offset = "0x1E82AB4", VA = "0x1E82AB4")]
		public static float Mod(float a, float n)
		{
			return default(float);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x1E821A8", Offset = "0x1E821A8", VA = "0x1E821A8")]
		public static Transform GetCameraRig()
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x1E8268C", Offset = "0x1E8268C", VA = "0x1E8268C")]
		public static Vector4 ToEmission(this Color color, float emission)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x1E82ADC", Offset = "0x1E82ADC", VA = "0x1E82ADC")]
		public static bool IsFixed(this SmoothFollow follow)
		{
			return default(bool);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x1E82BC4", Offset = "0x1E82BC4", VA = "0x1E82BC4")]
		public static bool IsVrCamera(this Behaviour mb)
		{
			return default(bool);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x1E82C58", Offset = "0x1E82C58", VA = "0x1E82C58")]
		public static bool IsScreenCamera(this Behaviour mb)
		{
			return default(bool);
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x1E82C5C", Offset = "0x1E82C5C", VA = "0x1E82C5C")]
		public static float Volume(this Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1E82C68", Offset = "0x1E82C68", VA = "0x1E82C68")]
		public static Vector3 Clamp(this Bounds bounds, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x1E82E00", Offset = "0x1E82E00", VA = "0x1E82E00")]
		public static Transform FindDeepChild(this Transform aParent, string aName, bool includeRoot = false)
		{
			return null;
		}

		[Token(Token = "0x6001629")]
		public static List<T> Flatten<T>(this IEnumerable<T[]> list)
		{
			return null;
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x1E831D8", Offset = "0x1E831D8", VA = "0x1E831D8")]
		public static float Sum(this float[] list)
		{
			return default(float);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x1E83258", Offset = "0x1E83258", VA = "0x1E83258")]
		public static Vector3 Sum(this Vector3[] list)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600162C")]
		public static int Sum<T>(this T[] list, Func<T, int> func)
		{
			return default(int);
		}

		[Token(Token = "0x600162D")]
		public static bool Any<T>(this T[] list, Func<T, bool> func)
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		public static bool Contains<T>(this T[] list, T o)
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1E83398", Offset = "0x1E83398", VA = "0x1E83398")]
		public static bool Contains(this string[] list, string text, StringComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001630")]
		public static T[] Reverse<T>(this T[] list)
		{
			return null;
		}

		[Token(Token = "0x6001631")]
		public static T FirstOrDefault<T>(this T[] source)
		{
			return (T)null;
		}

		[Token(Token = "0x6001632")]
		public static T FirstOrDefault<T>(this List<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x6001633")]
		public static T FirstOrDefault<T>(this T[] source, Func<T, bool> predicate)
		{
			return (T)null;
		}

		[Token(Token = "0x6001634")]
		public static T FirstOrDefault<T>(this List<T> source, Func<T, bool> predicate)
		{
			return (T)null;
		}

		[Token(Token = "0x6001635")]
		public static int IndexOf<T>(this T[] source, Func<T, bool> predicate)
		{
			return default(int);
		}

		[Token(Token = "0x6001636")]
		public static TResult[] Select<TSource, TResult>(this TSource[] source, Func<TSource, TResult> selector)
		{
			return null;
		}

		[Token(Token = "0x6001637")]
		public static TResult[] Select<TSource, TResult>(this TSource[] source, Func<TSource, int, TResult> selector)
		{
			return null;
		}

		[Token(Token = "0x6001638")]
		public static TResult[] Select<TSource, TResult>(this IList<TSource> source, Func<TSource, int, TResult> selector)
		{
			return null;
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1E8243C", Offset = "0x1E8243C", VA = "0x1E8243C")]
		public static bool DeviceIsOculus(bool includeQuest = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1E83444", Offset = "0x1E83444", VA = "0x1E83444")]
		public static bool DeviceIsSteamVR()
		{
			return default(bool);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x1E83528", Offset = "0x1E83528", VA = "0x1E83528")]
		public static bool DeviceIsOpenVR()
		{
			return default(bool);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1E8357C", Offset = "0x1E8357C", VA = "0x1E8357C")]
		public static bool DeviceIsCosmos()
		{
			return default(bool);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1E835F0", Offset = "0x1E835F0", VA = "0x1E835F0")]
		public static bool DeviceIsOculusQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x1E835F8", Offset = "0x1E835F8", VA = "0x1E835F8")]
		public static bool DeviceIsPSVR()
		{
			return default(bool);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x1E83600", Offset = "0x1E83600", VA = "0x1E83600")]
		public static bool DeviceIsNoVR()
		{
			return default(bool);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x1E83608", Offset = "0x1E83608", VA = "0x1E83608")]
		public static bool IsCarly(this Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x1E837BC", Offset = "0x1E837BC", VA = "0x1E837BC")]
		public static bool IsCarly(this GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001642")]
		public static T[] Where<T>(this T[] list, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		public static T[] Where<T>(this List<T> list, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6001644")]
		public static int Count<TSource>(this IEnumerable<TSource> source)
		{
			return default(int);
		}

		[Token(Token = "0x6001645")]
		public static TSource Max<TSource, TKey>(this TSource[] source, Func<TSource, TKey> keySelector) where TKey : IComparable
		{
			return (TSource)null;
		}

		[Token(Token = "0x6001646")]
		public static TSource[] OrderBy<TSource, TKey>(this TSource[] source, Func<TSource, TKey> keySelector) where TKey : IComparable
		{
			return null;
		}

		[Token(Token = "0x6001647")]
		public static List<TSource> OrderBy<TSource, TKey>(this List<TSource> source, Func<TSource, TKey> keySelector) where TKey : IComparable
		{
			return null;
		}

		[Token(Token = "0x6001648")]
		private static void Quicksort<T, TKey>(T[] elements, Func<T, TKey> compare, int left, int right) where TKey : IComparable
		{
		}
	}
	[Token(Token = "0x2000461")]
	public static class Linq
	{
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000462")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xD56AD4", Offset = "0xD56AD4", VA = "0xD56AD4")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xD56BD8", Offset = "0xD56BD8", VA = "0xD56BD8")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xD56D00", Offset = "0xD56D00", VA = "0xD56D00")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xD56E28", Offset = "0xD56E28", VA = "0xD56E28")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xD56E78", Offset = "0xD56E78", VA = "0xD56E78", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40015E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34768", Offset = "0xA34768")]
		Unknown,
		[Token(Token = "0x40015E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA347A0", Offset = "0xA347A0")]
		Object,
		[Token(Token = "0x40015E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA347D8", Offset = "0xA347D8")]
		User
	}
	[Token(Token = "0x2000464")]
	public enum AchievementType
	{
		[Token(Token = "0x40015EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34810", Offset = "0xA34810")]
		Unknown,
		[Token(Token = "0x40015EB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34848", Offset = "0xA34848")]
		Simple,
		[Token(Token = "0x40015EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34880", Offset = "0xA34880")]
		Bitfield,
		[Token(Token = "0x40015ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA348B8", Offset = "0xA348B8")]
		Count
	}
	[Token(Token = "0x2000465")]
	public class AndroidPlatform
	{
		[Token(Token = "0x6001660")]
		[Address(RVA = "0xD57F58", Offset = "0xD57F58", VA = "0xD57F58")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xD580CC", Offset = "0xD580CC", VA = "0xD580CC")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xD58274", Offset = "0xD58274", VA = "0xD58274")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class ApplicationOptions
	{
		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xD5876C", Offset = "0xD5876C", VA = "0xD5876C")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xD58870", Offset = "0xD58870", VA = "0xD58870")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xD584D8", Offset = "0xD584D8", VA = "0xD584D8")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xD58994", Offset = "0xD58994", VA = "0xD58994", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public static class Callback
	{
		[Token(Token = "0x2000468")]
		private class RequestCallback
		{
			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6001670")]
			[Address(RVA = "0xBFE3C4", Offset = "0xBFE3C4", VA = "0xBFE3C4")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6001671")]
			[Address(RVA = "0xBFDB94", Offset = "0xBFDB94", VA = "0xBFDB94")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6001672")]
			[Address(RVA = "0xBFE3CC", Offset = "0xBFE3CC", VA = "0xBFE3CC", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x2000469")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6001673")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001674")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6001667")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xBFDA90", Offset = "0xBFDA90", VA = "0xBFDA90")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xBFDBC0", Offset = "0xBFDBC0", VA = "0xBFDBC0")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xBFDCB8", Offset = "0xBFDCB8", VA = "0xBFDCB8")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xBFDFEC", Offset = "0xBFDFEC", VA = "0xBFDFEC")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xBFE084", Offset = "0xBFE084", VA = "0xBFE084")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xBFE134", Offset = "0xBFE134", VA = "0xBFE134")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xBFDDE4", Offset = "0xBFDDE4", VA = "0xBFDDE4")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6001675")]
		[Address(RVA = "0xBFEB10", Offset = "0xBFEB10", VA = "0xBFEB10")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xBFEB9C", Offset = "0xBFEB9C", VA = "0xBFEB9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xBFEC98", Offset = "0xBFEC98", VA = "0xBFEC98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xBFED24", Offset = "0xBFED24", VA = "0xBFED24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xBFED28", Offset = "0xBFED28", VA = "0xBFED28")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xBFED84", Offset = "0xBFED84", VA = "0xBFED84")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class CAPI
	{
		[Token(Token = "0x200046C")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x8FBBE8", Offset = "0x8FBBE8", VA = "0x8FBBE8")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x8FBC00", Offset = "0x8FBC00", VA = "0x8FBC00")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x8FBC1C", Offset = "0x8FBC1C", VA = "0x8FBC1C")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x200046D")]
		public struct ovrNetSyncVec3
		{
			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;
		}

		[Token(Token = "0x200046E")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x8FBCE8", Offset = "0x8FBCE8", VA = "0x8FBCE8")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x200046F")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x4001608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x2000470")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4001609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x400160A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x400160B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x400160C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x400160D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2EF44", Offset = "0xA2EF44")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x40015F6")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x40015F8")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xD59DF0", Offset = "0xD59DF0", VA = "0xD59DF0")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xD59FB4", Offset = "0xD59FB4", VA = "0xD59FB4")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xD5A724", Offset = "0xD5A724", VA = "0xD5A724")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xD5A7E8", Offset = "0xD5A7E8", VA = "0xD5A7E8")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xD5AB18", Offset = "0xD5AB18", VA = "0xD5AB18")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xD5AC38", Offset = "0xD5AC38", VA = "0xD5AC38")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xD5ACC4", Offset = "0xD5ACC4", VA = "0xD5ACC4")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xD5AD34", Offset = "0xD5AD34", VA = "0xD5AD34")]
		public static ulong DateTimeToNative(DateTime dt)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xD5AE30", Offset = "0xD5AE30", VA = "0xD5AE30")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xD5AF28", Offset = "0xD5AF28", VA = "0xD5AF28")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xD5AFCC", Offset = "0xD5AFCC", VA = "0xD5AFCC")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6001686")]
		[Address(RVA = "0xD58010", Offset = "0xD58010", VA = "0xD58010")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6001687")]
		[Address(RVA = "0xD5B16C", Offset = "0xD5B16C", VA = "0xD5B16C")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001688")]
		[Address(RVA = "0xD581BC", Offset = "0xD581BC", VA = "0xD581BC")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6001689")]
		[Address(RVA = "0xD5B20C", Offset = "0xD5B20C", VA = "0xD5B20C")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x600168A")]
		[Address(RVA = "0xD5B2D8", Offset = "0xD5B2D8", VA = "0xD5B2D8")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x600168B")]
		[Address(RVA = "0xD5B3D4", Offset = "0xD5B3D4", VA = "0xD5B3D4")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xD5B4A0", Offset = "0xD5B4A0", VA = "0xD5B4A0")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x600168D")]
		[Address(RVA = "0xD5B56C", Offset = "0xD5B56C", VA = "0xD5B56C")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x600168E")]
		[Address(RVA = "0xD5B634", Offset = "0xD5B634", VA = "0xD5B634")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xD5B6F0", Offset = "0xD5B6F0", VA = "0xD5B6F0")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001690")]
		[Address(RVA = "0xD5B750", Offset = "0xD5B750", VA = "0xD5B750")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6001691")]
		[Address(RVA = "0xD5B7E0", Offset = "0xD5B7E0", VA = "0xD5B7E0")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6001692")]
		[Address(RVA = "0xD5B870", Offset = "0xD5B870", VA = "0xD5B870")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001693")]
		[Address(RVA = "0xD5B910", Offset = "0xD5B910", VA = "0xD5B910")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6001694")]
		[Address(RVA = "0xD5B9A0", Offset = "0xD5B9A0", VA = "0xD5B9A0")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6001695")]
		[Address(RVA = "0xD5BA40", Offset = "0xD5BA40", VA = "0xD5BA40")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6001696")]
		[Address(RVA = "0xD5BAD0", Offset = "0xD5BAD0", VA = "0xD5BAD0")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6001697")]
		[Address(RVA = "0xD5BB70", Offset = "0xD5BB70", VA = "0xD5BB70")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001698")]
		[Address(RVA = "0xD5BC30", Offset = "0xD5BC30", VA = "0xD5BC30")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6001699")]
		[Address(RVA = "0xD5BCC0", Offset = "0xD5BCC0", VA = "0xD5BCC0")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600169A")]
		[Address(RVA = "0xD5BD60", Offset = "0xD5BD60", VA = "0xD5BD60")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x600169B")]
		[Address(RVA = "0xD5BE00", Offset = "0xD5BE00", VA = "0xD5BE00")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x600169C")]
		[Address(RVA = "0xD5BEA0", Offset = "0xD5BEA0", VA = "0xD5BEA0")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x600169D")]
		[Address(RVA = "0xD57D34", Offset = "0xD57D34", VA = "0xD57D34")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x600169E")]
		[Address(RVA = "0xD5BF30", Offset = "0xD5BF30", VA = "0xD5BF30")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x600169F")]
		[Address(RVA = "0xD5BFC0", Offset = "0xD5BFC0", VA = "0xD5BFC0")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xD5C064", Offset = "0xD5C064", VA = "0xD5C064")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xD5C118", Offset = "0xD5C118", VA = "0xD5C118")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xD5C498", Offset = "0xD5C498", VA = "0xD5C498")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xD58664", Offset = "0xD58664", VA = "0xD58664")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xD5C558", Offset = "0xD5C558", VA = "0xD5C558")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xD5C650", Offset = "0xD5C650", VA = "0xD5C650")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xD5C7CC", Offset = "0xD5C7CC", VA = "0xD5C7CC")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xD5C894", Offset = "0xD5C894", VA = "0xD5C894")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xD5C930", Offset = "0xD5C930", VA = "0xD5C930")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xD5C998", Offset = "0xD5C998", VA = "0xD5C998")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xD5CA38", Offset = "0xD5CA38", VA = "0xD5CA38")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xD5CAF8", Offset = "0xD5CAF8", VA = "0xD5CAF8")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xD5CBB8", Offset = "0xD5CBB8", VA = "0xD5CBB8")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xD5CC78", Offset = "0xD5CC78", VA = "0xD5CC78")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xD5CD38", Offset = "0xD5CD38", VA = "0xD5CD38")]
		public static extern bool ovr_NetSync_GetListenerPosition(long connection_id, ulong sessionId, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xD5CDF8", Offset = "0xD5CDF8", VA = "0xD5CDF8")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamFloatPCM(long connection_id, ulong sessionId, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xD5CEC8", Offset = "0xD5CEC8", VA = "0xD5CEC8")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamInt16PCM(long connection_id, ulong session_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xD5CF98", Offset = "0xD5CF98", VA = "0xD5CF98")]
		public static extern UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();

		[PreserveSig]
		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xD5D028", Offset = "0xD5D028", VA = "0xD5D028")]
		public static extern bool ovr_NetSync_GetVoipAmplitude(long connection_id, ulong sessionId, ref float amplitude);

		[PreserveSig]
		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xD5D0E8", Offset = "0xD5D0E8", VA = "0xD5D0E8")]
		public static extern void ovr_NetSync_SetListenerPosition(long connection_id, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xD5D198", Offset = "0xD5D198", VA = "0xD5D198")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xD5D238", Offset = "0xD5D238", VA = "0xD5D238")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xD5D2D0", Offset = "0xD5D2D0", VA = "0xD5D2D0")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xD5D370", Offset = "0xD5D370", VA = "0xD5D370")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xD5D400", Offset = "0xD5D400", VA = "0xD5D400")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xD5D4A0", Offset = "0xD5D4A0", VA = "0xD5D4A0")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xD5D548", Offset = "0xD5D548", VA = "0xD5D548")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xD5D5E8", Offset = "0xD5D5E8", VA = "0xD5D5E8")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xD5D678", Offset = "0xD5D678", VA = "0xD5D678")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xD5D750", Offset = "0xD5D750", VA = "0xD5D750")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xD5D818", Offset = "0xD5D818", VA = "0xD5D818")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xD5D8A8", Offset = "0xD5D8A8", VA = "0xD5D8A8")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xD5D938", Offset = "0xD5D938", VA = "0xD5D938")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xD5D9D0", Offset = "0xD5D9D0", VA = "0xD5D9D0")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xD5DA60", Offset = "0xD5DA60", VA = "0xD5DA60")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xD5DB00", Offset = "0xD5DB00", VA = "0xD5DB00")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xD5DBA0", Offset = "0xD5DBA0", VA = "0xD5DBA0")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xD5DC40", Offset = "0xD5DC40", VA = "0xD5DC40")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xD5DCD0", Offset = "0xD5DCD0", VA = "0xD5DCD0")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xD5DD90", Offset = "0xD5DD90", VA = "0xD5DD90")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xD5DE50", Offset = "0xD5DE50", VA = "0xD5DE50")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xD5DEF0", Offset = "0xD5DEF0", VA = "0xD5DEF0")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xD5DFC8", Offset = "0xD5DFC8", VA = "0xD5DFC8")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xD5E0A0", Offset = "0xD5E0A0", VA = "0xD5E0A0")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xD5E140", Offset = "0xD5E140", VA = "0xD5E140")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xD5E1E0", Offset = "0xD5E1E0", VA = "0xD5E1E0")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xD5E290", Offset = "0xD5E290", VA = "0xD5E290")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xD5E320", Offset = "0xD5E320", VA = "0xD5E320")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xD5E3B0", Offset = "0xD5E3B0", VA = "0xD5E3B0")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xD5E450", Offset = "0xD5E450", VA = "0xD5E450")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xD5E4F0", Offset = "0xD5E4F0", VA = "0xD5E4F0")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xD5E590", Offset = "0xD5E590", VA = "0xD5E590")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xD5E630", Offset = "0xD5E630", VA = "0xD5E630")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xD570B4", Offset = "0xD570B4", VA = "0xD570B4")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xD5E6D0", Offset = "0xD5E6D0", VA = "0xD5E6D0")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xD57248", Offset = "0xD57248", VA = "0xD57248")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xD5E780", Offset = "0xD5E780", VA = "0xD5E780")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xD573E0", Offset = "0xD573E0", VA = "0xD573E0")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xD57534", Offset = "0xD57534", VA = "0xD57534")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xD576A4", Offset = "0xD576A4", VA = "0xD576A4")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xD578F4", Offset = "0xD578F4", VA = "0xD578F4")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xD57B30", Offset = "0xD57B30", VA = "0xD57B30")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xD5E830", Offset = "0xD5E830", VA = "0xD5E830")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xD5E8D0", Offset = "0xD5E8D0", VA = "0xD5E8D0")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xD5E980", Offset = "0xD5E980", VA = "0xD5E980")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xD58340", Offset = "0xD58340", VA = "0xD58340")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xD58528", Offset = "0xD58528", VA = "0xD58528")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xD5EA10", Offset = "0xD5EA10", VA = "0xD5EA10")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xD5EAA0", Offset = "0xD5EAA0", VA = "0xD5EAA0")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xD5EB30", Offset = "0xD5EB30", VA = "0xD5EB30")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xD5EBD8", Offset = "0xD5EBD8", VA = "0xD5EBD8")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xD58BC0", Offset = "0xD58BC0", VA = "0xD58BC0")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xD58D2C", Offset = "0xD58D2C", VA = "0xD58D2C")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xD58E98", Offset = "0xD58E98", VA = "0xD58E98")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xD5EC78", Offset = "0xD5EC78", VA = "0xD5EC78")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xD5900C", Offset = "0xD5900C", VA = "0xD5900C")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xD59178", Offset = "0xD59178", VA = "0xD59178")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xD592E4", Offset = "0xD592E4", VA = "0xD592E4")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xD5ED18", Offset = "0xD5ED18", VA = "0xD5ED18")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xD59458", Offset = "0xD59458", VA = "0xD59458")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xD595C4", Offset = "0xD595C4", VA = "0xD595C4")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xD59730", Offset = "0xD59730", VA = "0xD59730")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xD5EDB8", Offset = "0xD5EDB8", VA = "0xD5EDB8")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xD5989C", Offset = "0xD5989C", VA = "0xD5989C")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xD599F8", Offset = "0xD599F8", VA = "0xD599F8")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xD59B64", Offset = "0xD59B64", VA = "0xD59B64")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xD59CD0", Offset = "0xD59CD0", VA = "0xD59CD0")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xD5EE58", Offset = "0xD5EE58", VA = "0xD5EE58")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xD5EEF8", Offset = "0xD5EEF8", VA = "0xD5EEF8")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xD5EFCC", Offset = "0xD5EFCC", VA = "0xD5EFCC")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xD5F07C", Offset = "0xD5F07C", VA = "0xD5F07C")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xD5F14C", Offset = "0xD5F14C", VA = "0xD5F14C")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xD5F20C", Offset = "0xD5F20C", VA = "0xD5F20C")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xD5F2DC", Offset = "0xD5F2DC", VA = "0xD5F2DC")]
		public static ulong ovr_Challenges_Create(string leaderboardName, IntPtr challengeOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xD5F394", Offset = "0xD5F394", VA = "0xD5F394")]
		private static extern ulong ovr_Challenges_Create_Native(IntPtr leaderboardName, IntPtr challengeOptions);

		[PreserveSig]
		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xD5F444", Offset = "0xD5F444", VA = "0xD5F444")]
		public static extern ulong ovr_Challenges_DeclineInvite(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x6001700")]
		[Address(RVA = "0xD5F4E4", Offset = "0xD5F4E4", VA = "0xD5F4E4")]
		public static extern ulong ovr_Challenges_Delete(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x6001701")]
		[Address(RVA = "0xD5F584", Offset = "0xD5F584", VA = "0xD5F584")]
		public static extern ulong ovr_Challenges_Get(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x6001702")]
		[Address(RVA = "0xD5F624", Offset = "0xD5F624", VA = "0xD5F624")]
		public static extern ulong ovr_Challenges_GetEntries(ulong challengeID, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[PreserveSig]
		[Token(Token = "0x6001703")]
		[Address(RVA = "0xD5F6EC", Offset = "0xD5F6EC", VA = "0xD5F6EC")]
		public static extern ulong ovr_Challenges_GetEntriesAfterRank(ulong challengeID, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6001704")]
		[Address(RVA = "0xD5F7A4", Offset = "0xD5F7A4", VA = "0xD5F7A4")]
		public static extern ulong ovr_Challenges_GetEntriesByIds(ulong challengeID, int limit, LeaderboardStartAt startAt, ulong[] userIDs, uint userIDLength);

		[PreserveSig]
		[Token(Token = "0x6001705")]
		[Address(RVA = "0xD5F87C", Offset = "0xD5F87C", VA = "0xD5F87C")]
		public static extern ulong ovr_Challenges_GetList(IntPtr challengeOptions, int limit);

		[PreserveSig]
		[Token(Token = "0x6001706")]
		[Address(RVA = "0xD5F92C", Offset = "0xD5F92C", VA = "0xD5F92C")]
		public static extern ulong ovr_Challenges_GetNextChallenges(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001707")]
		[Address(RVA = "0xD5F9CC", Offset = "0xD5F9CC", VA = "0xD5F9CC")]
		public static extern ulong ovr_Challenges_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001708")]
		[Address(RVA = "0xD5FA6C", Offset = "0xD5FA6C", VA = "0xD5FA6C")]
		public static extern ulong ovr_Challenges_GetPreviousChallenges(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001709")]
		[Address(RVA = "0xD5FB0C", Offset = "0xD5FB0C", VA = "0xD5FB0C")]
		public static extern ulong ovr_Challenges_GetPreviousEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600170A")]
		[Address(RVA = "0xD5FBAC", Offset = "0xD5FBAC", VA = "0xD5FBAC")]
		public static extern ulong ovr_Challenges_Join(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x600170B")]
		[Address(RVA = "0xD5FC4C", Offset = "0xD5FC4C", VA = "0xD5FC4C")]
		public static extern ulong ovr_Challenges_Leave(ulong challengeID);

		[PreserveSig]
		[Token(Token = "0x600170C")]
		[Address(RVA = "0xD5FCEC", Offset = "0xD5FCEC", VA = "0xD5FCEC")]
		public static extern ulong ovr_Challenges_UpdateInfo(ulong challengeID, IntPtr challengeOptions);

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xD5FD9C", Offset = "0xD5FD9C", VA = "0xD5FD9C")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600170E")]
		[Address(RVA = "0xD5FE70", Offset = "0xD5FE70", VA = "0xD5FE70")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xD5FF20", Offset = "0xD5FF20", VA = "0xD5FF20")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001710")]
		[Address(RVA = "0xD5FFF4", Offset = "0xD5FFF4", VA = "0xD5FFF4")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xD600A4", Offset = "0xD600A4", VA = "0xD600A4")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001712")]
		[Address(RVA = "0xD6014C", Offset = "0xD6014C", VA = "0xD6014C")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xD601EC", Offset = "0xD601EC", VA = "0xD601EC")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001714")]
		[Address(RVA = "0xD602C0", Offset = "0xD602C0", VA = "0xD602C0")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xD60370", Offset = "0xD60370", VA = "0xD60370")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001716")]
		[Address(RVA = "0xD60418", Offset = "0xD60418", VA = "0xD60418")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xD604B8", Offset = "0xD604B8", VA = "0xD604B8")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001718")]
		[Address(RVA = "0xD6058C", Offset = "0xD6058C", VA = "0xD6058C")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xD6063C", Offset = "0xD6063C", VA = "0xD6063C")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600171A")]
		[Address(RVA = "0xD60730", Offset = "0xD60730", VA = "0xD60730")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD607E8", Offset = "0xD607E8", VA = "0xD607E8")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600171C")]
		[Address(RVA = "0xD608DC", Offset = "0xD608DC", VA = "0xD608DC")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xD60994", Offset = "0xD60994", VA = "0xD60994")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600171E")]
		[Address(RVA = "0xD60AB0", Offset = "0xD60AB0", VA = "0xD60AB0")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x600171F")]
		[Address(RVA = "0xD60B98", Offset = "0xD60B98", VA = "0xD60B98")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6001720")]
		[Address(RVA = "0xD60C28", Offset = "0xD60C28", VA = "0xD60C28")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xD60CB8", Offset = "0xD60CB8", VA = "0xD60CB8")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001722")]
		[Address(RVA = "0xD60D60", Offset = "0xD60D60", VA = "0xD60D60")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xD60E00", Offset = "0xD60E00", VA = "0xD60E00")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001724")]
		[Address(RVA = "0xD60EA8", Offset = "0xD60EA8", VA = "0xD60EA8")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6001725")]
		[Address(RVA = "0xD60F48", Offset = "0xD60F48", VA = "0xD60F48")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xD60FD8", Offset = "0xD60FD8", VA = "0xD60FD8")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001727")]
		[Address(RVA = "0xD61080", Offset = "0xD61080", VA = "0xD61080")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xD61120", Offset = "0xD61120", VA = "0xD61120")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001729")]
		[Address(RVA = "0xD611C8", Offset = "0xD611C8", VA = "0xD611C8")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xD61264", Offset = "0xD61264", VA = "0xD61264")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600172B")]
		[Address(RVA = "0xD6130C", Offset = "0xD6130C", VA = "0xD6130C")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xD613AC", Offset = "0xD613AC", VA = "0xD613AC")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600172D")]
		[Address(RVA = "0xD61480", Offset = "0xD61480", VA = "0xD61480")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xD61530", Offset = "0xD61530", VA = "0xD61530")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600172F")]
		[Address(RVA = "0xD61690", Offset = "0xD61690", VA = "0xD61690")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xD6183C", Offset = "0xD6183C", VA = "0xD6183C")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001731")]
		[Address(RVA = "0xD618E4", Offset = "0xD618E4", VA = "0xD618E4")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xD61984", Offset = "0xD61984", VA = "0xD61984")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001733")]
		[Address(RVA = "0xD61A2C", Offset = "0xD61A2C", VA = "0xD61A2C")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001734")]
		[Address(RVA = "0xD61ACC", Offset = "0xD61ACC", VA = "0xD61ACC")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6001735")]
		[Address(RVA = "0xD61C3C", Offset = "0xD61C3C", VA = "0xD61C3C")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6001736")]
		[Address(RVA = "0xD61CCC", Offset = "0xD61CCC", VA = "0xD61CCC")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xD61D5C", Offset = "0xD61D5C", VA = "0xD61D5C")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001738")]
		[Address(RVA = "0xD61E04", Offset = "0xD61E04", VA = "0xD61E04")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001739")]
		[Address(RVA = "0xD61EA4", Offset = "0xD61EA4", VA = "0xD61EA4")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xD61F34", Offset = "0xD61F34", VA = "0xD61F34")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600173B")]
		[Address(RVA = "0xD61FDC", Offset = "0xD61FDC", VA = "0xD61FDC")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xD6207C", Offset = "0xD6207C", VA = "0xD6207C")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600173D")]
		[Address(RVA = "0xD6214C", Offset = "0xD6214C", VA = "0xD6214C")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xD62214", Offset = "0xD62214", VA = "0xD62214")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600173F")]
		[Address(RVA = "0xD622D4", Offset = "0xD622D4", VA = "0xD622D4")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xD6238C", Offset = "0xD6238C", VA = "0xD6238C")]
		public static ulong ovr_Leaderboard_GetEntriesByIds(string leaderboardName, int limit, LeaderboardStartAt startAt, ulong[] userIDs, uint userIDLength)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001741")]
		[Address(RVA = "0xD62464", Offset = "0xD62464", VA = "0xD62464")]
		private static extern ulong ovr_Leaderboard_GetEntriesByIds_Native(IntPtr leaderboardName, int limit, LeaderboardStartAt startAt, ulong[] userIDs, uint userIDLength);

		[PreserveSig]
		[Token(Token = "0x6001742")]
		[Address(RVA = "0xD6253C", Offset = "0xD6253C", VA = "0xD6253C")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001743")]
		[Address(RVA = "0xD625DC", Offset = "0xD625DC", VA = "0xD625DC")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xD6267C", Offset = "0xD6267C", VA = "0xD6267C")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001745")]
		[Address(RVA = "0xD62754", Offset = "0xD62754", VA = "0xD62754")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6001746")]
		[Address(RVA = "0xD6282C", Offset = "0xD6282C", VA = "0xD6282C")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xD628BC", Offset = "0xD628BC", VA = "0xD628BC")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001748")]
		[Address(RVA = "0xD62964", Offset = "0xD62964", VA = "0xD62964")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6001749")]
		[Address(RVA = "0xD62A04", Offset = "0xD62A04", VA = "0xD62A04")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x600174A")]
		[Address(RVA = "0xD62A94", Offset = "0xD62A94", VA = "0xD62A94")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x600174B")]
		[Address(RVA = "0xD62B24", Offset = "0xD62B24", VA = "0xD62B24")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x600174C")]
		[Address(RVA = "0xD62BB4", Offset = "0xD62BB4", VA = "0xD62BB4")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x600174D")]
		[Address(RVA = "0xD62C64", Offset = "0xD62C64", VA = "0xD62C64")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x600174E")]
		[Address(RVA = "0xD62CF4", Offset = "0xD62CF4", VA = "0xD62CF4")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x600174F")]
		[Address(RVA = "0xD62D84", Offset = "0xD62D84", VA = "0xD62D84")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6001750")]
		[Address(RVA = "0xD62E24", Offset = "0xD62E24", VA = "0xD62E24")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xD62EC4", Offset = "0xD62EC4", VA = "0xD62EC4")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001752")]
		[Address(RVA = "0xD62F7C", Offset = "0xD62F7C", VA = "0xD62F7C")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xD6302C", Offset = "0xD6302C", VA = "0xD6302C")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001754")]
		[Address(RVA = "0xD630E4", Offset = "0xD630E4", VA = "0xD630E4")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xD63194", Offset = "0xD63194", VA = "0xD63194")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001756")]
		[Address(RVA = "0xD63268", Offset = "0xD63268", VA = "0xD63268")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6001757")]
		[Address(RVA = "0xD63318", Offset = "0xD63318", VA = "0xD63318")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xD633A8", Offset = "0xD633A8", VA = "0xD633A8")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001759")]
		[Address(RVA = "0xD63478", Offset = "0xD63478", VA = "0xD63478")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xD63540", Offset = "0xD63540", VA = "0xD63540")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600175B")]
		[Address(RVA = "0xD635F8", Offset = "0xD635F8", VA = "0xD635F8")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xD636A8", Offset = "0xD636A8", VA = "0xD636A8")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600175D")]
		[Address(RVA = "0xD63768", Offset = "0xD63768", VA = "0xD63768")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xD63820", Offset = "0xD63820", VA = "0xD63820")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600175F")]
		[Address(RVA = "0xD638D8", Offset = "0xD638D8", VA = "0xD638D8")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xD63988", Offset = "0xD63988", VA = "0xD63988")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001761")]
		[Address(RVA = "0xD63A40", Offset = "0xD63A40", VA = "0xD63A40")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xD63AF0", Offset = "0xD63AF0", VA = "0xD63AF0")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001763")]
		[Address(RVA = "0xD63BA8", Offset = "0xD63BA8", VA = "0xD63BA8")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001764")]
		[Address(RVA = "0xD63C58", Offset = "0xD63C58", VA = "0xD63C58")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6001765")]
		[Address(RVA = "0xD63D08", Offset = "0xD63D08", VA = "0xD63D08")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001766")]
		[Address(RVA = "0xD63DB8", Offset = "0xD63DB8", VA = "0xD63DB8")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xD63E48", Offset = "0xD63E48", VA = "0xD63E48")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001768")]
		[Address(RVA = "0xD63F08", Offset = "0xD63F08", VA = "0xD63F08")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6001769")]
		[Address(RVA = "0xD63FC0", Offset = "0xD63FC0", VA = "0xD63FC0")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xD64070", Offset = "0xD64070", VA = "0xD64070")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600176B")]
		[Address(RVA = "0xD64128", Offset = "0xD64128", VA = "0xD64128")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x600176C")]
		[Address(RVA = "0xD642A4", Offset = "0xD642A4", VA = "0xD642A4")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xD64344", Offset = "0xD64344", VA = "0xD64344")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600176E")]
		[Address(RVA = "0xD64420", Offset = "0xD64420", VA = "0xD64420")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x600176F")]
		[Address(RVA = "0xD644D8", Offset = "0xD644D8", VA = "0xD644D8")]
		public static extern ulong ovr_NetSync_Connect(IntPtr connect_options);

		[PreserveSig]
		[Token(Token = "0x6001770")]
		[Address(RVA = "0xD64578", Offset = "0xD64578", VA = "0xD64578")]
		public static extern ulong ovr_NetSync_Disconnect(long connection_id);

		[PreserveSig]
		[Token(Token = "0x6001771")]
		[Address(RVA = "0xD64618", Offset = "0xD64618", VA = "0xD64618")]
		public static extern ulong ovr_NetSync_GetSessions(long connection_id);

		[PreserveSig]
		[Token(Token = "0x6001772")]
		[Address(RVA = "0xD646B8", Offset = "0xD646B8", VA = "0xD646B8")]
		public static extern ulong ovr_NetSync_GetVoipAttenuation(long connection_id);

		[PreserveSig]
		[Token(Token = "0x6001773")]
		[Address(RVA = "0xD64758", Offset = "0xD64758", VA = "0xD64758")]
		public static extern ulong ovr_NetSync_GetVoipAttenuationDefault();

		[PreserveSig]
		[Token(Token = "0x6001774")]
		[Address(RVA = "0xD647E8", Offset = "0xD647E8", VA = "0xD647E8")]
		public static extern ulong ovr_NetSync_SetVoipAttenuation(long connection_id, float[] distances, float[] decibels, UIntPtr count);

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xD648C0", Offset = "0xD648C0", VA = "0xD648C0")]
		public static ulong ovr_NetSync_SetVoipAttenuationModel(long connection_id, string name, float[] distances, float[] decibels, UIntPtr count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001776")]
		[Address(RVA = "0xD6499C", Offset = "0xD6499C", VA = "0xD6499C")]
		private static extern ulong ovr_NetSync_SetVoipAttenuationModel_Native(long connection_id, IntPtr name, float[] distances, float[] decibels, UIntPtr count);

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xD64A7C", Offset = "0xD64A7C", VA = "0xD64A7C")]
		public static ulong ovr_NetSync_SetVoipChannelCfg(long connection_id, string channel_name, string attnmodel, bool disable_spatialization)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001778")]
		[Address(RVA = "0xD64B68", Offset = "0xD64B68", VA = "0xD64B68")]
		private static extern ulong ovr_NetSync_SetVoipChannelCfg_Native(long connection_id, IntPtr channel_name, IntPtr attnmodel, bool disable_spatialization);

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xD64C30", Offset = "0xD64C30", VA = "0xD64C30")]
		public static ulong ovr_NetSync_SetVoipGroup(long connection_id, string group_id)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600177A")]
		[Address(RVA = "0xD64CEC", Offset = "0xD64CEC", VA = "0xD64CEC")]
		private static extern ulong ovr_NetSync_SetVoipGroup_Native(long connection_id, IntPtr group_id);

		[PreserveSig]
		[Token(Token = "0x600177B")]
		[Address(RVA = "0xD64D9C", Offset = "0xD64D9C", VA = "0xD64D9C")]
		public static extern ulong ovr_NetSync_SetVoipListentoChannels(long connection_id, string[] listento_channels, UIntPtr count);

		[PreserveSig]
		[Token(Token = "0x600177C")]
		[Address(RVA = "0xD64F1C", Offset = "0xD64F1C", VA = "0xD64F1C")]
		public static extern ulong ovr_NetSync_SetVoipMicSource(long connection_id, NetSyncVoipMicSource mic_source);

		[PreserveSig]
		[Token(Token = "0x600177D")]
		[Address(RVA = "0xD64FCC", Offset = "0xD64FCC", VA = "0xD64FCC")]
		public static extern ulong ovr_NetSync_SetVoipSessionMuted(long connection_id, ulong session_id, bool muted);

		[PreserveSig]
		[Token(Token = "0x600177E")]
		[Address(RVA = "0xD65084", Offset = "0xD65084", VA = "0xD65084")]
		public static extern ulong ovr_NetSync_SetVoipSpeaktoChannels(long connection_id, string[] speakto_channels, UIntPtr count);

		[PreserveSig]
		[Token(Token = "0x600177F")]
		[Address(RVA = "0xD65204", Offset = "0xD65204", VA = "0xD65204")]
		public static extern ulong ovr_NetSync_SetVoipStreamMode(long connection_id, ulong sessionId, NetSyncVoipStreamMode streamMode);

		[PreserveSig]
		[Token(Token = "0x6001780")]
		[Address(RVA = "0xD652BC", Offset = "0xD652BC", VA = "0xD652BC")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6001781")]
		[Address(RVA = "0xD6534C", Offset = "0xD6534C", VA = "0xD6534C")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6001782")]
		[Address(RVA = "0xD653EC", Offset = "0xD653EC", VA = "0xD653EC")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6001783")]
		[Address(RVA = "0xD6547C", Offset = "0xD6547C", VA = "0xD6547C")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6001784")]
		[Address(RVA = "0xD6552C", Offset = "0xD6552C", VA = "0xD6552C")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001785")]
		[Address(RVA = "0xD655CC", Offset = "0xD655CC", VA = "0xD655CC")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001786")]
		[Address(RVA = "0xD6565C", Offset = "0xD6565C", VA = "0xD6565C")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001787")]
		[Address(RVA = "0xD656FC", Offset = "0xD656FC", VA = "0xD656FC")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD657A8", Offset = "0xD657A8", VA = "0xD657A8")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD65848", Offset = "0xD65848", VA = "0xD65848")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x600178A")]
		[Address(RVA = "0xD658E8", Offset = "0xD658E8", VA = "0xD658E8")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x600178B")]
		[Address(RVA = "0xD65978", Offset = "0xD65978", VA = "0xD65978")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x600178C")]
		[Address(RVA = "0xD65A08", Offset = "0xD65A08", VA = "0xD65A08")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x600178D")]
		[Address(RVA = "0xD65AA8", Offset = "0xD65AA8", VA = "0xD65AA8")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x600178E")]
		[Address(RVA = "0xD65B60", Offset = "0xD65B60", VA = "0xD65B60")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x600178F")]
		[Address(RVA = "0xD65C18", Offset = "0xD65C18", VA = "0xD65C18")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001790")]
		[Address(RVA = "0xD65CB8", Offset = "0xD65CB8", VA = "0xD65CB8")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001791")]
		[Address(RVA = "0xD65D48", Offset = "0xD65D48", VA = "0xD65D48")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001792")]
		[Address(RVA = "0xD65DE8", Offset = "0xD65DE8", VA = "0xD65DE8")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6001793")]
		[Address(RVA = "0xD65E78", Offset = "0xD65E78", VA = "0xD65E78")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001794")]
		[Address(RVA = "0xD65F18", Offset = "0xD65F18", VA = "0xD65F18")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6001795")]
		[Address(RVA = "0xD65FA8", Offset = "0xD65FA8", VA = "0xD65FA8")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xD66048", Offset = "0xD66048", VA = "0xD66048")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001797")]
		[Address(RVA = "0xD66104", Offset = "0xD66104", VA = "0xD66104")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6001798")]
		[Address(RVA = "0xD661B4", Offset = "0xD661B4", VA = "0xD661B4")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD66264", Offset = "0xD66264", VA = "0xD66264")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD66314", Offset = "0xD66314", VA = "0xD66314")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD663C8", Offset = "0xD663C8", VA = "0xD663C8")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x600179C")]
		[Address(RVA = "0xD66468", Offset = "0xD66468", VA = "0xD66468")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xD66508", Offset = "0xD66508", VA = "0xD66508")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600179E")]
		[Address(RVA = "0xD665C4", Offset = "0xD665C4", VA = "0xD665C4")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xD66674", Offset = "0xD66674", VA = "0xD66674")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xD6672C", Offset = "0xD6672C", VA = "0xD6672C")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xD668A4", Offset = "0xD668A4", VA = "0xD668A4")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xD66954", Offset = "0xD66954", VA = "0xD66954")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xD66A04", Offset = "0xD66A04", VA = "0xD66A04")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xD66AB4", Offset = "0xD66AB4", VA = "0xD66AB4")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xD66B54", Offset = "0xD66B54", VA = "0xD66B54")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xD66BF4", Offset = "0xD66BF4", VA = "0xD66BF4")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xD66C9C", Offset = "0xD66C9C", VA = "0xD66C9C")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xD66D3C", Offset = "0xD66D3C", VA = "0xD66D3C")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xD66DDC", Offset = "0xD66DDC", VA = "0xD66DDC")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xD66E6C", Offset = "0xD66E6C", VA = "0xD66E6C")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xD66F0C", Offset = "0xD66F0C", VA = "0xD66F0C")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xD66F9C", Offset = "0xD66F9C", VA = "0xD66F9C")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xD6702C", Offset = "0xD6702C", VA = "0xD6702C")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xD670BC", Offset = "0xD670BC", VA = "0xD670BC")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xD6715C", Offset = "0xD6715C", VA = "0xD6715C")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xD671FC", Offset = "0xD671FC", VA = "0xD671FC")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xD6728C", Offset = "0xD6728C", VA = "0xD6728C")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xD6731C", Offset = "0xD6731C", VA = "0xD6731C")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xD673BC", Offset = "0xD673BC", VA = "0xD673BC")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xD6745C", Offset = "0xD6745C", VA = "0xD6745C")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xD674FC", Offset = "0xD674FC", VA = "0xD674FC")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xD6759C", Offset = "0xD6759C", VA = "0xD6759C")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xD6764C", Offset = "0xD6764C", VA = "0xD6764C")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xD676EC", Offset = "0xD676EC", VA = "0xD676EC")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xD6777C", Offset = "0xD6777C", VA = "0xD6777C")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xD6780C", Offset = "0xD6780C", VA = "0xD6780C")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xD6789C", Offset = "0xD6789C", VA = "0xD6789C")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xD6792C", Offset = "0xD6792C", VA = "0xD6792C")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xD679E8", Offset = "0xD679E8", VA = "0xD679E8")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xD67A98", Offset = "0xD67A98", VA = "0xD67A98")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xD67B5C", Offset = "0xD67B5C", VA = "0xD67B5C")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xD67C14", Offset = "0xD67C14", VA = "0xD67C14")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xD67CD4", Offset = "0xD67CD4", VA = "0xD67CD4")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xD67D94", Offset = "0xD67D94", VA = "0xD67D94")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xD67E34", Offset = "0xD67E34", VA = "0xD67E34")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xD67E9C", Offset = "0xD67E9C", VA = "0xD67E9C")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xD67F3C", Offset = "0xD67F3C", VA = "0xD67F3C")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xD67FDC", Offset = "0xD67FDC", VA = "0xD67FDC")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xD68044", Offset = "0xD68044", VA = "0xD68044")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xD680E4", Offset = "0xD680E4", VA = "0xD680E4")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xD68184", Offset = "0xD68184", VA = "0xD68184")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xD68224", Offset = "0xD68224", VA = "0xD68224")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xD682D4", Offset = "0xD682D4", VA = "0xD682D4")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xD6833C", Offset = "0xD6833C", VA = "0xD6833C")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xD683DC", Offset = "0xD683DC", VA = "0xD683DC")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xD6847C", Offset = "0xD6847C", VA = "0xD6847C")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xD68524", Offset = "0xD68524", VA = "0xD68524")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xD6858C", Offset = "0xD6858C", VA = "0xD6858C")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xD6862C", Offset = "0xD6862C", VA = "0xD6862C")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xD686CC", Offset = "0xD686CC", VA = "0xD686CC")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xD68774", Offset = "0xD68774", VA = "0xD68774")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xD687DC", Offset = "0xD687DC", VA = "0xD687DC")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xD6887C", Offset = "0xD6887C", VA = "0xD6887C")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xD688E4", Offset = "0xD688E4", VA = "0xD688E4")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xD68984", Offset = "0xD68984", VA = "0xD68984")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xD68A34", Offset = "0xD68A34", VA = "0xD68A34")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xD68A9C", Offset = "0xD68A9C", VA = "0xD68A9C")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xD68B3C", Offset = "0xD68B3C", VA = "0xD68B3C")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xD68BDC", Offset = "0xD68BDC", VA = "0xD68BDC")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xD68C84", Offset = "0xD68C84", VA = "0xD68C84")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xD68D2C", Offset = "0xD68D2C", VA = "0xD68D2C")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xD68D94", Offset = "0xD68D94", VA = "0xD68D94")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xD68E34", Offset = "0xD68E34", VA = "0xD68E34")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xD68ED4", Offset = "0xD68ED4", VA = "0xD68ED4")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xD68F74", Offset = "0xD68F74", VA = "0xD68F74")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xD68FDC", Offset = "0xD68FDC", VA = "0xD68FDC")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xD6907C", Offset = "0xD6907C", VA = "0xD6907C")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xD6911C", Offset = "0xD6911C", VA = "0xD6911C")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xD69184", Offset = "0xD69184", VA = "0xD69184")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xD69224", Offset = "0xD69224", VA = "0xD69224")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xD692C4", Offset = "0xD692C4", VA = "0xD692C4")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xD6932C", Offset = "0xD6932C", VA = "0xD6932C")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xD693CC", Offset = "0xD693CC", VA = "0xD693CC")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xD69434", Offset = "0xD69434", VA = "0xD69434")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xD694D4", Offset = "0xD694D4", VA = "0xD694D4")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xD6953C", Offset = "0xD6953C", VA = "0xD6953C")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xD695DC", Offset = "0xD695DC", VA = "0xD695DC")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xD69644", Offset = "0xD69644", VA = "0xD69644")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xD696E4", Offset = "0xD696E4", VA = "0xD696E4")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xD69784", Offset = "0xD69784", VA = "0xD69784")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xD697EC", Offset = "0xD697EC", VA = "0xD697EC")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xD6988C", Offset = "0xD6988C", VA = "0xD6988C")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xD6993C", Offset = "0xD6993C", VA = "0xD6993C")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xD699DC", Offset = "0xD699DC", VA = "0xD699DC")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xD69A7C", Offset = "0xD69A7C", VA = "0xD69A7C")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xD69B1C", Offset = "0xD69B1C", VA = "0xD69B1C")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xD69B84", Offset = "0xD69B84", VA = "0xD69B84")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xD69C24", Offset = "0xD69C24", VA = "0xD69C24")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xD69CCC", Offset = "0xD69CCC", VA = "0xD69CCC")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xD69D6C", Offset = "0xD69D6C", VA = "0xD69D6C")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xD69E0C", Offset = "0xD69E0C", VA = "0xD69E0C")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xD69E74", Offset = "0xD69E74", VA = "0xD69E74")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xD69F14", Offset = "0xD69F14", VA = "0xD69F14")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xD69FBC", Offset = "0xD69FBC", VA = "0xD69FBC")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xD6A05C", Offset = "0xD6A05C", VA = "0xD6A05C")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001800")]
		[Address(RVA = "0xD6A0C4", Offset = "0xD6A0C4", VA = "0xD6A0C4")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001801")]
		[Address(RVA = "0xD6A164", Offset = "0xD6A164", VA = "0xD6A164")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001802")]
		[Address(RVA = "0xD6A204", Offset = "0xD6A204", VA = "0xD6A204")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001803")]
		[Address(RVA = "0xD6A2A4", Offset = "0xD6A2A4", VA = "0xD6A2A4")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001804")]
		[Address(RVA = "0xD6A344", Offset = "0xD6A344", VA = "0xD6A344")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001805")]
		[Address(RVA = "0xD6A3E4", Offset = "0xD6A3E4", VA = "0xD6A3E4")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001806")]
		[Address(RVA = "0xD6A48C", Offset = "0xD6A48C", VA = "0xD6A48C")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001807")]
		[Address(RVA = "0xD6A52C", Offset = "0xD6A52C", VA = "0xD6A52C")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xD6A5CC", Offset = "0xD6A5CC", VA = "0xD6A5CC")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001809")]
		[Address(RVA = "0xD6A634", Offset = "0xD6A634", VA = "0xD6A634")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600180A")]
		[Address(RVA = "0xD6A6D4", Offset = "0xD6A6D4", VA = "0xD6A6D4")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600180B")]
		[Address(RVA = "0xD6A774", Offset = "0xD6A774", VA = "0xD6A774")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xD6A814", Offset = "0xD6A814", VA = "0xD6A814")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600180D")]
		[Address(RVA = "0xD6A87C", Offset = "0xD6A87C", VA = "0xD6A87C")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600180E")]
		[Address(RVA = "0xD6A91C", Offset = "0xD6A91C", VA = "0xD6A91C")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600180F")]
		[Address(RVA = "0xD6A9CC", Offset = "0xD6A9CC", VA = "0xD6A9CC")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001810")]
		[Address(RVA = "0xD6AA6C", Offset = "0xD6AA6C", VA = "0xD6AA6C")]
		public static extern ChallengeCreationType ovr_Challenge_GetCreationType(IntPtr obj);

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xD6AB0C", Offset = "0xD6AB0C", VA = "0xD6AB0C")]
		public static string ovr_Challenge_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001812")]
		[Address(RVA = "0xD6AB74", Offset = "0xD6AB74", VA = "0xD6AB74")]
		private static extern IntPtr ovr_Challenge_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xD6AC14", Offset = "0xD6AC14", VA = "0xD6AC14")]
		public static DateTime ovr_Challenge_GetEndDate(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001814")]
		[Address(RVA = "0xD6AC7C", Offset = "0xD6AC7C", VA = "0xD6AC7C")]
		private static extern ulong ovr_Challenge_GetEndDate_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001815")]
		[Address(RVA = "0xD6AD1C", Offset = "0xD6AD1C", VA = "0xD6AD1C")]
		public static extern ulong ovr_Challenge_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001816")]
		[Address(RVA = "0xD6ADBC", Offset = "0xD6ADBC", VA = "0xD6ADBC")]
		public static extern IntPtr ovr_Challenge_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001817")]
		[Address(RVA = "0xD6AE5C", Offset = "0xD6AE5C", VA = "0xD6AE5C")]
		public static extern IntPtr ovr_Challenge_GetLeaderboard(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001818")]
		[Address(RVA = "0xD6AEFC", Offset = "0xD6AEFC", VA = "0xD6AEFC")]
		public static extern IntPtr ovr_Challenge_GetParticipants(IntPtr obj);

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xD6AF9C", Offset = "0xD6AF9C", VA = "0xD6AF9C")]
		public static DateTime ovr_Challenge_GetStartDate(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600181A")]
		[Address(RVA = "0xD6B004", Offset = "0xD6B004", VA = "0xD6B004")]
		private static extern ulong ovr_Challenge_GetStartDate_Native(IntPtr obj);

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xD6B0A4", Offset = "0xD6B0A4", VA = "0xD6B0A4")]
		public static string ovr_Challenge_GetTitle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600181C")]
		[Address(RVA = "0xD6B10C", Offset = "0xD6B10C", VA = "0xD6B10C")]
		private static extern IntPtr ovr_Challenge_GetTitle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600181D")]
		[Address(RVA = "0xD6B1AC", Offset = "0xD6B1AC", VA = "0xD6B1AC")]
		public static extern ChallengeVisibility ovr_Challenge_GetVisibility(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600181E")]
		[Address(RVA = "0xD6B24C", Offset = "0xD6B24C", VA = "0xD6B24C")]
		public static extern IntPtr ovr_ChallengeArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xD6B2FC", Offset = "0xD6B2FC", VA = "0xD6B2FC")]
		public static string ovr_ChallengeArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001820")]
		[Address(RVA = "0xD6B364", Offset = "0xD6B364", VA = "0xD6B364")]
		private static extern IntPtr ovr_ChallengeArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xD6B404", Offset = "0xD6B404", VA = "0xD6B404")]
		public static string ovr_ChallengeArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001822")]
		[Address(RVA = "0xD6B46C", Offset = "0xD6B46C", VA = "0xD6B46C")]
		private static extern IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001823")]
		[Address(RVA = "0xD6B50C", Offset = "0xD6B50C", VA = "0xD6B50C")]
		public static extern UIntPtr ovr_ChallengeArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001824")]
		[Address(RVA = "0xD6B5AC", Offset = "0xD6B5AC", VA = "0xD6B5AC")]
		public static extern ulong ovr_ChallengeArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001825")]
		[Address(RVA = "0xD6B64C", Offset = "0xD6B64C", VA = "0xD6B64C")]
		public static extern bool ovr_ChallengeArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001826")]
		[Address(RVA = "0xD6B6F4", Offset = "0xD6B6F4", VA = "0xD6B6F4")]
		public static extern bool ovr_ChallengeArray_HasPreviousPage(IntPtr obj);

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xD6B79C", Offset = "0xD6B79C", VA = "0xD6B79C")]
		public static byte[] ovr_ChallengeEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001828")]
		[Address(RVA = "0xD6B8B8", Offset = "0xD6B8B8", VA = "0xD6B8B8")]
		private static extern IntPtr ovr_ChallengeEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001829")]
		[Address(RVA = "0xD6B958", Offset = "0xD6B958", VA = "0xD6B958")]
		public static extern uint ovr_ChallengeEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600182A")]
		[Address(RVA = "0xD6B9F8", Offset = "0xD6B9F8", VA = "0xD6B9F8")]
		public static extern int ovr_ChallengeEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600182B")]
		[Address(RVA = "0xD6BA98", Offset = "0xD6BA98", VA = "0xD6BA98")]
		public static extern long ovr_ChallengeEntry_GetScore(IntPtr obj);

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xD6BB38", Offset = "0xD6BB38", VA = "0xD6BB38")]
		public static DateTime ovr_ChallengeEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600182D")]
		[Address(RVA = "0xD6BBA0", Offset = "0xD6BBA0", VA = "0xD6BBA0")]
		private static extern ulong ovr_ChallengeEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600182E")]
		[Address(RVA = "0xD6BC40", Offset = "0xD6BC40", VA = "0xD6BC40")]
		public static extern IntPtr ovr_ChallengeEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600182F")]
		[Address(RVA = "0xD6BCE0", Offset = "0xD6BCE0", VA = "0xD6BCE0")]
		public static extern IntPtr ovr_ChallengeEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xD6BD90", Offset = "0xD6BD90", VA = "0xD6BD90")]
		public static string ovr_ChallengeEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001831")]
		[Address(RVA = "0xD6BDF8", Offset = "0xD6BDF8", VA = "0xD6BDF8")]
		private static extern IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xD6BE98", Offset = "0xD6BE98", VA = "0xD6BE98")]
		public static string ovr_ChallengeEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001833")]
		[Address(RVA = "0xD6BF00", Offset = "0xD6BF00", VA = "0xD6BF00")]
		private static extern IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001834")]
		[Address(RVA = "0xD6BFA0", Offset = "0xD6BFA0", VA = "0xD6BFA0")]
		public static extern UIntPtr ovr_ChallengeEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001835")]
		[Address(RVA = "0xD6C040", Offset = "0xD6C040", VA = "0xD6C040")]
		public static extern ulong ovr_ChallengeEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001836")]
		[Address(RVA = "0xD6C0E0", Offset = "0xD6C0E0", VA = "0xD6C0E0")]
		public static extern bool ovr_ChallengeEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001837")]
		[Address(RVA = "0xD6C188", Offset = "0xD6C188", VA = "0xD6C188")]
		public static extern bool ovr_ChallengeEntryArray_HasPreviousPage(IntPtr obj);

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xD6C230", Offset = "0xD6C230", VA = "0xD6C230")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001839")]
		[Address(RVA = "0xD6C298", Offset = "0xD6C298", VA = "0xD6C298")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600183A")]
		[Address(RVA = "0xD6C338", Offset = "0xD6C338", VA = "0xD6C338")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600183B")]
		[Address(RVA = "0xD6C3D8", Offset = "0xD6C3D8", VA = "0xD6C3D8")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xD6C478", Offset = "0xD6C478", VA = "0xD6C478")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600183D")]
		[Address(RVA = "0xD6C4E0", Offset = "0xD6C4E0", VA = "0xD6C4E0")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xD6C580", Offset = "0xD6C580", VA = "0xD6C580")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600183F")]
		[Address(RVA = "0xD6C69C", Offset = "0xD6C69C", VA = "0xD6C69C")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001840")]
		[Address(RVA = "0xD6C5FC", Offset = "0xD6C5FC", VA = "0xD6C5FC")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xD6C73C", Offset = "0xD6C73C", VA = "0xD6C73C")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001842")]
		[Address(RVA = "0xD6C7A4", Offset = "0xD6C7A4", VA = "0xD6C7A4")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xD6C844", Offset = "0xD6C844", VA = "0xD6C844")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001844")]
		[Address(RVA = "0xD6C8AC", Offset = "0xD6C8AC", VA = "0xD6C8AC")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001845")]
		[Address(RVA = "0xD6C94C", Offset = "0xD6C94C", VA = "0xD6C94C")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001846")]
		[Address(RVA = "0xD6C9EC", Offset = "0xD6C9EC", VA = "0xD6C9EC")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xD6CA8C", Offset = "0xD6CA8C", VA = "0xD6CA8C")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001848")]
		[Address(RVA = "0xD6CAF4", Offset = "0xD6CAF4", VA = "0xD6CAF4")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xD6CB94", Offset = "0xD6CB94", VA = "0xD6CB94")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600184A")]
		[Address(RVA = "0xD6CBFC", Offset = "0xD6CBFC", VA = "0xD6CBFC")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600184B")]
		[Address(RVA = "0xD6CC9C", Offset = "0xD6CC9C", VA = "0xD6CC9C")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600184C")]
		[Address(RVA = "0xD6CD3C", Offset = "0xD6CD3C", VA = "0xD6CD3C")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xD6CDDC", Offset = "0xD6CDDC", VA = "0xD6CDDC")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600184E")]
		[Address(RVA = "0xD6CE44", Offset = "0xD6CE44", VA = "0xD6CE44")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600184F")]
		[Address(RVA = "0xD6CEE4", Offset = "0xD6CEE4", VA = "0xD6CEE4")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xD6CF94", Offset = "0xD6CF94", VA = "0xD6CF94")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001851")]
		[Address(RVA = "0xD6CFFC", Offset = "0xD6CFFC", VA = "0xD6CFFC")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001852")]
		[Address(RVA = "0xD6D09C", Offset = "0xD6D09C", VA = "0xD6D09C")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001853")]
		[Address(RVA = "0xD6D13C", Offset = "0xD6D13C", VA = "0xD6D13C")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xD6D1E4", Offset = "0xD6D1E4", VA = "0xD6D1E4")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001855")]
		[Address(RVA = "0xD6D24C", Offset = "0xD6D24C", VA = "0xD6D24C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xD6D2EC", Offset = "0xD6D2EC", VA = "0xD6D2EC")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001857")]
		[Address(RVA = "0xD6D354", Offset = "0xD6D354", VA = "0xD6D354")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001858")]
		[Address(RVA = "0xD6D3F4", Offset = "0xD6D3F4", VA = "0xD6D3F4")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xD6D494", Offset = "0xD6D494", VA = "0xD6D494")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600185A")]
		[Address(RVA = "0xD6D4FC", Offset = "0xD6D4FC", VA = "0xD6D4FC")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xD6D59C", Offset = "0xD6D59C", VA = "0xD6D59C")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x600185C")]
		[Address(RVA = "0xD6D658", Offset = "0xD6D658", VA = "0xD6D658")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xD5A9E0", Offset = "0xD5A9E0", VA = "0xD5A9E0")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600185E")]
		[Address(RVA = "0xD6D708", Offset = "0xD6D708", VA = "0xD6D708")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x600185F")]
		[Address(RVA = "0xD5A940", Offset = "0xD5A940", VA = "0xD5A940")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xD5AA58", Offset = "0xD5AA58", VA = "0xD5AA58")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001861")]
		[Address(RVA = "0xD6D7B8", Offset = "0xD6D7B8", VA = "0xD6D7B8")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xD6D868", Offset = "0xD6D868", VA = "0xD6D868")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001863")]
		[Address(RVA = "0xD6D8D0", Offset = "0xD6D8D0", VA = "0xD6D8D0")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xD6D970", Offset = "0xD6D970", VA = "0xD6D970")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001865")]
		[Address(RVA = "0xD6D9D8", Offset = "0xD6D9D8", VA = "0xD6D9D8")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xD6DA78", Offset = "0xD6DA78", VA = "0xD6DA78")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001867")]
		[Address(RVA = "0xD6DAE0", Offset = "0xD6DAE0", VA = "0xD6DAE0")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001868")]
		[Address(RVA = "0xD6DB80", Offset = "0xD6DB80", VA = "0xD6DB80")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xD6DC30", Offset = "0xD6DC30", VA = "0xD6DC30")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600186A")]
		[Address(RVA = "0xD6DC98", Offset = "0xD6DC98", VA = "0xD6DC98")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600186B")]
		[Address(RVA = "0xD6DD38", Offset = "0xD6DD38", VA = "0xD6DD38")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600186C")]
		[Address(RVA = "0xD6DDD8", Offset = "0xD6DDD8", VA = "0xD6DDD8")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600186D")]
		[Address(RVA = "0xD6DE80", Offset = "0xD6DE80", VA = "0xD6DE80")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xD6DF1C", Offset = "0xD6DF1C", VA = "0xD6DF1C")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600186F")]
		[Address(RVA = "0xD6DF84", Offset = "0xD6DF84", VA = "0xD6DF84")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001870")]
		[Address(RVA = "0xD6E024", Offset = "0xD6E024", VA = "0xD6E024")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xD6E0C4", Offset = "0xD6E0C4", VA = "0xD6E0C4")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001872")]
		[Address(RVA = "0xD6E12C", Offset = "0xD6E12C", VA = "0xD6E12C")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001873")]
		[Address(RVA = "0xD6E1CC", Offset = "0xD6E1CC", VA = "0xD6E1CC")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001874")]
		[Address(RVA = "0xD6E26C", Offset = "0xD6E26C", VA = "0xD6E26C")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001875")]
		[Address(RVA = "0xD6E30C", Offset = "0xD6E30C", VA = "0xD6E30C")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001876")]
		[Address(RVA = "0xD6E3AC", Offset = "0xD6E3AC", VA = "0xD6E3AC")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xD6E454", Offset = "0xD6E454", VA = "0xD6E454")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001878")]
		[Address(RVA = "0xD6E4BC", Offset = "0xD6E4BC", VA = "0xD6E4BC")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xD6E55C", Offset = "0xD6E55C", VA = "0xD6E55C")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600187A")]
		[Address(RVA = "0xD6E5C4", Offset = "0xD6E5C4", VA = "0xD6E5C4")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xD6E664", Offset = "0xD6E664", VA = "0xD6E664")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600187C")]
		[Address(RVA = "0xD6E6CC", Offset = "0xD6E6CC", VA = "0xD6E6CC")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600187D")]
		[Address(RVA = "0xD6E76C", Offset = "0xD6E76C", VA = "0xD6E76C")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xD6E80C", Offset = "0xD6E80C", VA = "0xD6E80C")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600187F")]
		[Address(RVA = "0xD6E874", Offset = "0xD6E874", VA = "0xD6E874")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001880")]
		[Address(RVA = "0xD6E914", Offset = "0xD6E914", VA = "0xD6E914")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001881")]
		[Address(RVA = "0xD6E9C4", Offset = "0xD6E9C4", VA = "0xD6E9C4")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xD6EA64", Offset = "0xD6EA64", VA = "0xD6EA64")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001883")]
		[Address(RVA = "0xD6EACC", Offset = "0xD6EACC", VA = "0xD6EACC")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xD6EB6C", Offset = "0xD6EB6C", VA = "0xD6EB6C")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001885")]
		[Address(RVA = "0xD6EBD4", Offset = "0xD6EBD4", VA = "0xD6EBD4")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xD6EC74", Offset = "0xD6EC74", VA = "0xD6EC74")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001887")]
		[Address(RVA = "0xD6ECDC", Offset = "0xD6ECDC", VA = "0xD6ECDC")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001888")]
		[Address(RVA = "0xD6ED7C", Offset = "0xD6ED7C", VA = "0xD6ED7C")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001889")]
		[Address(RVA = "0xD6EE24", Offset = "0xD6EE24", VA = "0xD6EE24")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xD6EECC", Offset = "0xD6EECC", VA = "0xD6EECC")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600188B")]
		[Address(RVA = "0xD6EF34", Offset = "0xD6EF34", VA = "0xD6EF34")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xD6EFD4", Offset = "0xD6EFD4", VA = "0xD6EFD4")]
		public static string ovr_LaunchDetails_GetDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600188D")]
		[Address(RVA = "0xD6F03C", Offset = "0xD6F03C", VA = "0xD6F03C")]
		private static extern IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(IntPtr obj);

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xD6F0DC", Offset = "0xD6F0DC", VA = "0xD6F0DC")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600188F")]
		[Address(RVA = "0xD6F144", Offset = "0xD6F144", VA = "0xD6F144")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001890")]
		[Address(RVA = "0xD6F1E4", Offset = "0xD6F1E4", VA = "0xD6F1E4")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001891")]
		[Address(RVA = "0xD6F284", Offset = "0xD6F284", VA = "0xD6F284")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001892")]
		[Address(RVA = "0xD6F324", Offset = "0xD6F324", VA = "0xD6F324")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001893")]
		[Address(RVA = "0xD6F3C4", Offset = "0xD6F3C4", VA = "0xD6F3C4")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001894")]
		[Address(RVA = "0xD6F46C", Offset = "0xD6F46C", VA = "0xD6F46C")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001895")]
		[Address(RVA = "0xD6F514", Offset = "0xD6F514", VA = "0xD6F514")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001896")]
		[Address(RVA = "0xD6F5BC", Offset = "0xD6F5BC", VA = "0xD6F5BC")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001897")]
		[Address(RVA = "0xD6F65C", Offset = "0xD6F65C", VA = "0xD6F65C")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001898")]
		[Address(RVA = "0xD6F704", Offset = "0xD6F704", VA = "0xD6F704")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xD6F7AC", Offset = "0xD6F7AC", VA = "0xD6F7AC")]
		public static string ovr_Leaderboard_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600189A")]
		[Address(RVA = "0xD6F814", Offset = "0xD6F814", VA = "0xD6F814")]
		private static extern IntPtr ovr_Leaderboard_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xD6F8B4", Offset = "0xD6F8B4", VA = "0xD6F8B4")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600189C")]
		[Address(RVA = "0xD6F930", Offset = "0xD6F930", VA = "0xD6F930")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600189D")]
		[Address(RVA = "0xD6B818", Offset = "0xD6B818", VA = "0xD6B818")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600189E")]
		[Address(RVA = "0xD6F9D0", Offset = "0xD6F9D0", VA = "0xD6F9D0")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600189F")]
		[Address(RVA = "0xD6FA70", Offset = "0xD6FA70", VA = "0xD6FA70")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xD6FB10", Offset = "0xD6FB10", VA = "0xD6FB10")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xD6FB78", Offset = "0xD6FB78", VA = "0xD6FB78")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xD6FC18", Offset = "0xD6FC18", VA = "0xD6FC18")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xD6FCB8", Offset = "0xD6FCB8", VA = "0xD6FCB8")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xD6FD68", Offset = "0xD6FD68", VA = "0xD6FD68")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xD6FDD0", Offset = "0xD6FDD0", VA = "0xD6FDD0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xD6FE70", Offset = "0xD6FE70", VA = "0xD6FE70")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xD6FED8", Offset = "0xD6FED8", VA = "0xD6FED8")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xD6FF78", Offset = "0xD6FF78", VA = "0xD6FF78")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xD70018", Offset = "0xD70018", VA = "0xD70018")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xD700B8", Offset = "0xD700B8", VA = "0xD700B8")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xD70160", Offset = "0xD70160", VA = "0xD70160")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xD70208", Offset = "0xD70208", VA = "0xD70208")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xD702B0", Offset = "0xD702B0", VA = "0xD702B0")]
		public static extern ulong ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xD70360", Offset = "0xD70360", VA = "0xD70360")]
		public static extern uint ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(IntPtr obj);

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xD70400", Offset = "0xD70400", VA = "0xD70400")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xD70468", Offset = "0xD70468", VA = "0xD70468")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xD70508", Offset = "0xD70508", VA = "0xD70508")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xD705A8", Offset = "0xD705A8", VA = "0xD705A8")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xD70610", Offset = "0xD70610", VA = "0xD70610")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xD706B0", Offset = "0xD706B0", VA = "0xD706B0")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xD70760", Offset = "0xD70760", VA = "0xD70760")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xD70800", Offset = "0xD70800", VA = "0xD70800")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xD708A8", Offset = "0xD708A8", VA = "0xD708A8")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xD70948", Offset = "0xD70948", VA = "0xD70948")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xD709F0", Offset = "0xD709F0", VA = "0xD709F0")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xD70A98", Offset = "0xD70A98", VA = "0xD70A98")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xD70B40", Offset = "0xD70B40", VA = "0xD70B40")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xD70BE0", Offset = "0xD70BE0", VA = "0xD70BE0")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xD70C88", Offset = "0xD70C88", VA = "0xD70C88")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xD70D28", Offset = "0xD70D28", VA = "0xD70D28")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xD70DC8", Offset = "0xD70DC8", VA = "0xD70DC8")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xD70E30", Offset = "0xD70E30", VA = "0xD70E30")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xD70ED0", Offset = "0xD70ED0", VA = "0xD70ED0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xD70F70", Offset = "0xD70F70", VA = "0xD70F70")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xD71010", Offset = "0xD71010", VA = "0xD71010")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xD710B8", Offset = "0xD710B8", VA = "0xD710B8")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xD71158", Offset = "0xD71158", VA = "0xD71158")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xD711F8", Offset = "0xD711F8", VA = "0xD711F8")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xD71298", Offset = "0xD71298", VA = "0xD71298")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xD71300", Offset = "0xD71300", VA = "0xD71300")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xD713A0", Offset = "0xD713A0", VA = "0xD713A0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xD71450", Offset = "0xD71450", VA = "0xD71450")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xD714F0", Offset = "0xD714F0", VA = "0xD714F0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xD71590", Offset = "0xD71590", VA = "0xD71590")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xD71630", Offset = "0xD71630", VA = "0xD71630")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xD71698", Offset = "0xD71698", VA = "0xD71698")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xD71738", Offset = "0xD71738", VA = "0xD71738")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xD717D8", Offset = "0xD717D8", VA = "0xD717D8")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xD71888", Offset = "0xD71888", VA = "0xD71888")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xD718F0", Offset = "0xD718F0", VA = "0xD718F0")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xD71990", Offset = "0xD71990", VA = "0xD71990")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xD71A30", Offset = "0xD71A30", VA = "0xD71A30")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xD71AD8", Offset = "0xD71AD8", VA = "0xD71AD8")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xD71B78", Offset = "0xD71B78", VA = "0xD71B78")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xD71C18", Offset = "0xD71C18", VA = "0xD71C18")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xD71CB8", Offset = "0xD71CB8", VA = "0xD71CB8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xD71D58", Offset = "0xD71D58", VA = "0xD71D58")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xD71DC0", Offset = "0xD71DC0", VA = "0xD71DC0")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xD71E60", Offset = "0xD71E60", VA = "0xD71E60")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xD71F00", Offset = "0xD71F00", VA = "0xD71F00")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xD71F68", Offset = "0xD71F68", VA = "0xD71F68")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xD72008", Offset = "0xD72008", VA = "0xD72008")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xD720A8", Offset = "0xD720A8", VA = "0xD720A8")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xD72148", Offset = "0xD72148", VA = "0xD72148")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xD721F8", Offset = "0xD721F8", VA = "0xD721F8")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xD72298", Offset = "0xD72298", VA = "0xD72298")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xD72338", Offset = "0xD72338", VA = "0xD72338")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xD723D8", Offset = "0xD723D8", VA = "0xD723D8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xD72488", Offset = "0xD72488", VA = "0xD72488")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xD72528", Offset = "0xD72528", VA = "0xD72528")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xD725C8", Offset = "0xD725C8", VA = "0xD725C8")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xD72668", Offset = "0xD72668", VA = "0xD72668")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xD726D0", Offset = "0xD726D0", VA = "0xD726D0")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xD72770", Offset = "0xD72770", VA = "0xD72770")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xD72810", Offset = "0xD72810", VA = "0xD72810")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xD728B0", Offset = "0xD728B0", VA = "0xD728B0")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xD72958", Offset = "0xD72958", VA = "0xD72958")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xD72A08", Offset = "0xD72A08", VA = "0xD72A08")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xD72AA8", Offset = "0xD72AA8", VA = "0xD72AA8")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xD72B48", Offset = "0xD72B48", VA = "0xD72B48")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xD72BE8", Offset = "0xD72BE8", VA = "0xD72BE8")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xD72C88", Offset = "0xD72C88", VA = "0xD72C88")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xD72D28", Offset = "0xD72D28", VA = "0xD72D28")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xD72DC8", Offset = "0xD72DC8", VA = "0xD72DC8")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xD72E68", Offset = "0xD72E68", VA = "0xD72E68")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xD72F08", Offset = "0xD72F08", VA = "0xD72F08")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xD72FA8", Offset = "0xD72FA8", VA = "0xD72FA8")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xD73048", Offset = "0xD73048", VA = "0xD73048")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xD730E8", Offset = "0xD730E8", VA = "0xD730E8")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xD73188", Offset = "0xD73188", VA = "0xD73188")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xD73228", Offset = "0xD73228", VA = "0xD73228")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xD732C8", Offset = "0xD732C8", VA = "0xD732C8")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xD73368", Offset = "0xD73368", VA = "0xD73368")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xD73408", Offset = "0xD73408", VA = "0xD73408")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xD734A8", Offset = "0xD734A8", VA = "0xD734A8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001900")]
		[Address(RVA = "0xD73548", Offset = "0xD73548", VA = "0xD73548")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001901")]
		[Address(RVA = "0xD735E8", Offset = "0xD735E8", VA = "0xD735E8")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001902")]
		[Address(RVA = "0xD73688", Offset = "0xD73688", VA = "0xD73688")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001903")]
		[Address(RVA = "0xD73728", Offset = "0xD73728", VA = "0xD73728")]
		public static extern IntPtr ovr_Message_GetChallenge(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001904")]
		[Address(RVA = "0xD737C8", Offset = "0xD737C8", VA = "0xD737C8")]
		public static extern IntPtr ovr_Message_GetChallengeArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001905")]
		[Address(RVA = "0xD73868", Offset = "0xD73868", VA = "0xD73868")]
		public static extern IntPtr ovr_Message_GetChallengeEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001906")]
		[Address(RVA = "0xD73908", Offset = "0xD73908", VA = "0xD73908")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001907")]
		[Address(RVA = "0xD739A8", Offset = "0xD739A8", VA = "0xD739A8")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001908")]
		[Address(RVA = "0xD73A48", Offset = "0xD73A48", VA = "0xD73A48")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001909")]
		[Address(RVA = "0xD73AE8", Offset = "0xD73AE8", VA = "0xD73AE8")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600190A")]
		[Address(RVA = "0xD73B88", Offset = "0xD73B88", VA = "0xD73B88")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600190B")]
		[Address(RVA = "0xD73C28", Offset = "0xD73C28", VA = "0xD73C28")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600190C")]
		[Address(RVA = "0xD73CC8", Offset = "0xD73CC8", VA = "0xD73CC8")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600190D")]
		[Address(RVA = "0xD73D68", Offset = "0xD73D68", VA = "0xD73D68")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600190E")]
		[Address(RVA = "0xD73E08", Offset = "0xD73E08", VA = "0xD73E08")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600190F")]
		[Address(RVA = "0xD73EA8", Offset = "0xD73EA8", VA = "0xD73EA8")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001910")]
		[Address(RVA = "0xD73F48", Offset = "0xD73F48", VA = "0xD73F48")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001911")]
		[Address(RVA = "0xD73FE8", Offset = "0xD73FE8", VA = "0xD73FE8")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001912")]
		[Address(RVA = "0xD74088", Offset = "0xD74088", VA = "0xD74088")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001913")]
		[Address(RVA = "0xD74128", Offset = "0xD74128", VA = "0xD74128")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001914")]
		[Address(RVA = "0xD741C8", Offset = "0xD741C8", VA = "0xD741C8")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001915")]
		[Address(RVA = "0xD74268", Offset = "0xD74268", VA = "0xD74268")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001916")]
		[Address(RVA = "0xD74308", Offset = "0xD74308", VA = "0xD74308")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001917")]
		[Address(RVA = "0xD743A8", Offset = "0xD743A8", VA = "0xD743A8")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001918")]
		[Address(RVA = "0xD74448", Offset = "0xD74448", VA = "0xD74448")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001919")]
		[Address(RVA = "0xD744E8", Offset = "0xD744E8", VA = "0xD744E8")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600191A")]
		[Address(RVA = "0xD74588", Offset = "0xD74588", VA = "0xD74588")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600191B")]
		[Address(RVA = "0xD74628", Offset = "0xD74628", VA = "0xD74628")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600191C")]
		[Address(RVA = "0xD746C8", Offset = "0xD746C8", VA = "0xD746C8")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600191D")]
		[Address(RVA = "0xD74768", Offset = "0xD74768", VA = "0xD74768")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600191E")]
		[Address(RVA = "0xD74808", Offset = "0xD74808", VA = "0xD74808")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600191F")]
		[Address(RVA = "0xD748A8", Offset = "0xD748A8", VA = "0xD748A8")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001920")]
		[Address(RVA = "0xD74948", Offset = "0xD74948", VA = "0xD74948")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001921")]
		[Address(RVA = "0xD749E8", Offset = "0xD749E8", VA = "0xD749E8")]
		public static extern IntPtr ovr_Message_GetNetSyncConnection(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001922")]
		[Address(RVA = "0xD74A88", Offset = "0xD74A88", VA = "0xD74A88")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001923")]
		[Address(RVA = "0xD74B28", Offset = "0xD74B28", VA = "0xD74B28")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001924")]
		[Address(RVA = "0xD74BC8", Offset = "0xD74BC8", VA = "0xD74BC8")]
		public static extern IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001925")]
		[Address(RVA = "0xD74C68", Offset = "0xD74C68", VA = "0xD74C68")]
		public static extern IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001926")]
		[Address(RVA = "0xD74D08", Offset = "0xD74D08", VA = "0xD74D08")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001927")]
		[Address(RVA = "0xD74DA8", Offset = "0xD74DA8", VA = "0xD74DA8")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001928")]
		[Address(RVA = "0xD74E48", Offset = "0xD74E48", VA = "0xD74E48")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001929")]
		[Address(RVA = "0xD74EE8", Offset = "0xD74EE8", VA = "0xD74EE8")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600192A")]
		[Address(RVA = "0xD74F88", Offset = "0xD74F88", VA = "0xD74F88")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600192B")]
		[Address(RVA = "0xD75028", Offset = "0xD75028", VA = "0xD75028")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600192C")]
		[Address(RVA = "0xD750C8", Offset = "0xD750C8", VA = "0xD750C8")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600192D")]
		[Address(RVA = "0xD75168", Offset = "0xD75168", VA = "0xD75168")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600192E")]
		[Address(RVA = "0xD75208", Offset = "0xD75208", VA = "0xD75208")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600192F")]
		[Address(RVA = "0xD752A8", Offset = "0xD752A8", VA = "0xD752A8")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001930")]
		[Address(RVA = "0xD75348", Offset = "0xD75348", VA = "0xD75348")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001931")]
		[Address(RVA = "0xD753E8", Offset = "0xD753E8", VA = "0xD753E8")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001932")]
		[Address(RVA = "0xD75488", Offset = "0xD75488", VA = "0xD75488")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001933")]
		[Address(RVA = "0xD75528", Offset = "0xD75528", VA = "0xD75528")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001934")]
		[Address(RVA = "0xD755C8", Offset = "0xD755C8", VA = "0xD755C8")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001935")]
		[Address(RVA = "0xD75668", Offset = "0xD75668", VA = "0xD75668")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001936")]
		[Address(RVA = "0xD75708", Offset = "0xD75708", VA = "0xD75708")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001937")]
		[Address(RVA = "0xD757A8", Offset = "0xD757A8", VA = "0xD757A8")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xD75848", Offset = "0xD75848", VA = "0xD75848")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001939")]
		[Address(RVA = "0xD758B0", Offset = "0xD758B0", VA = "0xD758B0")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600193A")]
		[Address(RVA = "0xD75950", Offset = "0xD75950", VA = "0xD75950")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600193B")]
		[Address(RVA = "0xD759F0", Offset = "0xD759F0", VA = "0xD759F0")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600193C")]
		[Address(RVA = "0xD75A90", Offset = "0xD75A90", VA = "0xD75A90")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600193D")]
		[Address(RVA = "0xD75B30", Offset = "0xD75B30", VA = "0xD75B30")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600193E")]
		[Address(RVA = "0xD75BD0", Offset = "0xD75BD0", VA = "0xD75BD0")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600193F")]
		[Address(RVA = "0xD75C70", Offset = "0xD75C70", VA = "0xD75C70")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001940")]
		[Address(RVA = "0xD75D10", Offset = "0xD75D10", VA = "0xD75D10")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001941")]
		[Address(RVA = "0xD75DB0", Offset = "0xD75DB0", VA = "0xD75DB0")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001942")]
		[Address(RVA = "0xD75E50", Offset = "0xD75E50", VA = "0xD75E50")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001943")]
		[Address(RVA = "0xD75EF8", Offset = "0xD75EF8", VA = "0xD75EF8")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001944")]
		[Address(RVA = "0xD75F98", Offset = "0xD75F98", VA = "0xD75F98")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001945")]
		[Address(RVA = "0xD76038", Offset = "0xD76038", VA = "0xD76038")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001946")]
		[Address(RVA = "0xD760F8", Offset = "0xD760F8", VA = "0xD760F8")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001947")]
		[Address(RVA = "0xD761B8", Offset = "0xD761B8", VA = "0xD761B8")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001948")]
		[Address(RVA = "0xD76278", Offset = "0xD76278", VA = "0xD76278")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6001949")]
		[Address(RVA = "0xD76328", Offset = "0xD76328", VA = "0xD76328")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600194A")]
		[Address(RVA = "0xD763C8", Offset = "0xD763C8", VA = "0xD763C8")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600194B")]
		[Address(RVA = "0xD76468", Offset = "0xD76468", VA = "0xD76468")]
		public static extern long ovr_NetSyncConnection_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600194C")]
		[Address(RVA = "0xD76508", Offset = "0xD76508", VA = "0xD76508")]
		public static extern NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600194D")]
		[Address(RVA = "0xD765A8", Offset = "0xD765A8", VA = "0xD765A8")]
		public static extern ulong ovr_NetSyncConnection_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600194E")]
		[Address(RVA = "0xD76648", Offset = "0xD76648", VA = "0xD76648")]
		public static extern NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(IntPtr obj);

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xD766E8", Offset = "0xD766E8", VA = "0xD766E8")]
		public static string ovr_NetSyncConnection_GetZoneId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001950")]
		[Address(RVA = "0xD76750", Offset = "0xD76750", VA = "0xD76750")]
		private static extern IntPtr ovr_NetSyncConnection_GetZoneId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001951")]
		[Address(RVA = "0xD767F0", Offset = "0xD767F0", VA = "0xD767F0")]
		public static extern long ovr_NetSyncSession_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001952")]
		[Address(RVA = "0xD76890", Offset = "0xD76890", VA = "0xD76890")]
		public static extern bool ovr_NetSyncSession_GetMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001953")]
		[Address(RVA = "0xD76938", Offset = "0xD76938", VA = "0xD76938")]
		public static extern ulong ovr_NetSyncSession_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001954")]
		[Address(RVA = "0xD769D8", Offset = "0xD769D8", VA = "0xD769D8")]
		public static extern ulong ovr_NetSyncSession_GetUserId(IntPtr obj);

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD76A78", Offset = "0xD76A78", VA = "0xD76A78")]
		public static string ovr_NetSyncSession_GetVoipGroup(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001956")]
		[Address(RVA = "0xD76AE0", Offset = "0xD76AE0", VA = "0xD76AE0")]
		private static extern IntPtr ovr_NetSyncSession_GetVoipGroup_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001957")]
		[Address(RVA = "0xD76B80", Offset = "0xD76B80", VA = "0xD76B80")]
		public static extern IntPtr ovr_NetSyncSessionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001958")]
		[Address(RVA = "0xD76C30", Offset = "0xD76C30", VA = "0xD76C30")]
		public static extern UIntPtr ovr_NetSyncSessionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001959")]
		[Address(RVA = "0xD76CD0", Offset = "0xD76CD0", VA = "0xD76CD0")]
		public static extern long ovr_NetSyncSessionsChangedNotification_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600195A")]
		[Address(RVA = "0xD76D70", Offset = "0xD76D70", VA = "0xD76D70")]
		public static extern IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600195B")]
		[Address(RVA = "0xD76E10", Offset = "0xD76E10", VA = "0xD76E10")]
		public static extern IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600195C")]
		[Address(RVA = "0xD76EB0", Offset = "0xD76EB0", VA = "0xD76EB0")]
		public static extern float ovr_NetSyncVoipAttenuationValue_GetDecibels(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600195D")]
		[Address(RVA = "0xD76F50", Offset = "0xD76F50", VA = "0xD76F50")]
		public static extern float ovr_NetSyncVoipAttenuationValue_GetDistance(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600195E")]
		[Address(RVA = "0xD76FF0", Offset = "0xD76FF0", VA = "0xD76FF0")]
		public static extern IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600195F")]
		[Address(RVA = "0xD770A0", Offset = "0xD770A0", VA = "0xD770A0")]
		public static extern UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001960")]
		[Address(RVA = "0xD77140", Offset = "0xD77140", VA = "0xD77140")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001961")]
		[Address(RVA = "0xD771E0", Offset = "0xD771E0", VA = "0xD771E0")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001962")]
		[Address(RVA = "0xD77280", Offset = "0xD77280", VA = "0xD77280")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD77320", Offset = "0xD77320", VA = "0xD77320")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001964")]
		[Address(RVA = "0xD773C0", Offset = "0xD773C0", VA = "0xD773C0")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD77460", Offset = "0xD77460", VA = "0xD77460")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD77500", Offset = "0xD77500", VA = "0xD77500")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001967")]
		[Address(RVA = "0xD775A0", Offset = "0xD775A0", VA = "0xD775A0")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD77640", Offset = "0xD77640", VA = "0xD77640")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001969")]
		[Address(RVA = "0xD776E0", Offset = "0xD776E0", VA = "0xD776E0")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600196A")]
		[Address(RVA = "0xD77780", Offset = "0xD77780", VA = "0xD77780")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600196B")]
		[Address(RVA = "0xD77820", Offset = "0xD77820", VA = "0xD77820")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD778BC", Offset = "0xD778BC", VA = "0xD778BC")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD7795C", Offset = "0xD7795C", VA = "0xD7795C")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD779F8", Offset = "0xD779F8", VA = "0xD779F8")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD77A98", Offset = "0xD77A98", VA = "0xD77A98")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD77B38", Offset = "0xD77B38", VA = "0xD77B38")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xD77BD8", Offset = "0xD77BD8", VA = "0xD77BD8")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD77C40", Offset = "0xD77C40", VA = "0xD77C40")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD77CE0", Offset = "0xD77CE0", VA = "0xD77CE0")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD77D48", Offset = "0xD77D48", VA = "0xD77D48")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD77DE8", Offset = "0xD77DE8", VA = "0xD77DE8")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xD77E88", Offset = "0xD77E88", VA = "0xD77E88")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001977")]
		[Address(RVA = "0xD77EF0", Offset = "0xD77EF0", VA = "0xD77EF0")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD77F90", Offset = "0xD77F90", VA = "0xD77F90")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001979")]
		[Address(RVA = "0xD77FF8", Offset = "0xD77FF8", VA = "0xD77FF8")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600197A")]
		[Address(RVA = "0xD78098", Offset = "0xD78098", VA = "0xD78098")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600197B")]
		[Address(RVA = "0xD78148", Offset = "0xD78148", VA = "0xD78148")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600197C")]
		[Address(RVA = "0xD781E8", Offset = "0xD781E8", VA = "0xD781E8")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600197D")]
		[Address(RVA = "0xD78288", Offset = "0xD78288", VA = "0xD78288")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600197E")]
		[Address(RVA = "0xD78328", Offset = "0xD78328", VA = "0xD78328")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600197F")]
		[Address(RVA = "0xD783D0", Offset = "0xD783D0", VA = "0xD783D0")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001980")]
		[Address(RVA = "0xD78470", Offset = "0xD78470", VA = "0xD78470")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD78510", Offset = "0xD78510", VA = "0xD78510")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD78578", Offset = "0xD78578", VA = "0xD78578")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD78618", Offset = "0xD78618", VA = "0xD78618")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD78680", Offset = "0xD78680", VA = "0xD78680")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD78720", Offset = "0xD78720", VA = "0xD78720")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD78788", Offset = "0xD78788", VA = "0xD78788")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD78828", Offset = "0xD78828", VA = "0xD78828")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD78890", Offset = "0xD78890", VA = "0xD78890")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xD78930", Offset = "0xD78930", VA = "0xD78930")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD78998", Offset = "0xD78998", VA = "0xD78998")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD78A38", Offset = "0xD78A38", VA = "0xD78A38")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD78AA0", Offset = "0xD78AA0", VA = "0xD78AA0")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD78B40", Offset = "0xD78B40", VA = "0xD78B40")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD78BF0", Offset = "0xD78BF0", VA = "0xD78BF0")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD78C58", Offset = "0xD78C58", VA = "0xD78C58")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD78CF8", Offset = "0xD78CF8", VA = "0xD78CF8")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD78D98", Offset = "0xD78D98", VA = "0xD78D98")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD78E40", Offset = "0xD78E40", VA = "0xD78E40")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD78EA8", Offset = "0xD78EA8", VA = "0xD78EA8")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD78F48", Offset = "0xD78F48", VA = "0xD78F48")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD78FB0", Offset = "0xD78FB0", VA = "0xD78FB0")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD79050", Offset = "0xD79050", VA = "0xD79050")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD790F0", Offset = "0xD790F0", VA = "0xD790F0")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD79158", Offset = "0xD79158", VA = "0xD79158")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD791F8", Offset = "0xD791F8", VA = "0xD791F8")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD792A8", Offset = "0xD792A8", VA = "0xD792A8")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD79310", Offset = "0xD79310", VA = "0xD79310")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600199C")]
		[Address(RVA = "0xD793B0", Offset = "0xD793B0", VA = "0xD793B0")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600199D")]
		[Address(RVA = "0xD79450", Offset = "0xD79450", VA = "0xD79450")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600199E")]
		[Address(RVA = "0xD794F8", Offset = "0xD794F8", VA = "0xD794F8")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD79598", Offset = "0xD79598", VA = "0xD79598")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD79638", Offset = "0xD79638", VA = "0xD79638")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD796A0", Offset = "0xD796A0", VA = "0xD796A0")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD79740", Offset = "0xD79740", VA = "0xD79740")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD797E0", Offset = "0xD797E0", VA = "0xD797E0")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xD79880", Offset = "0xD79880", VA = "0xD79880")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xD79928", Offset = "0xD79928", VA = "0xD79928")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xD799C8", Offset = "0xD799C8", VA = "0xD799C8")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xD79A68", Offset = "0xD79A68", VA = "0xD79A68")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xD79B08", Offset = "0xD79B08", VA = "0xD79B08")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xD79BA8", Offset = "0xD79BA8", VA = "0xD79BA8")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xD79C10", Offset = "0xD79C10", VA = "0xD79C10")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xD79CB0", Offset = "0xD79CB0", VA = "0xD79CB0")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xD79D4C", Offset = "0xD79D4C", VA = "0xD79D4C")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xD79DE8", Offset = "0xD79DE8", VA = "0xD79DE8")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xD79E88", Offset = "0xD79E88", VA = "0xD79E88")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xD79F24", Offset = "0xD79F24", VA = "0xD79F24")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xD79FC4", Offset = "0xD79FC4", VA = "0xD79FC4")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xD7A074", Offset = "0xD7A074", VA = "0xD7A074")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xD7A0DC", Offset = "0xD7A0DC", VA = "0xD7A0DC")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xD7A17C", Offset = "0xD7A17C", VA = "0xD7A17C")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xD7A21C", Offset = "0xD7A21C", VA = "0xD7A21C")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xD7A2C4", Offset = "0xD7A2C4", VA = "0xD7A2C4")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xD7A364", Offset = "0xD7A364", VA = "0xD7A364")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xD7A404", Offset = "0xD7A404", VA = "0xD7A404")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xD7A4A4", Offset = "0xD7A4A4", VA = "0xD7A4A4")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xD7A50C", Offset = "0xD7A50C", VA = "0xD7A50C")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xD7A5AC", Offset = "0xD7A5AC", VA = "0xD7A5AC")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xD7A65C", Offset = "0xD7A65C", VA = "0xD7A65C")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xD7A6C4", Offset = "0xD7A6C4", VA = "0xD7A6C4")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xD7A764", Offset = "0xD7A764", VA = "0xD7A764")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xD7A804", Offset = "0xD7A804", VA = "0xD7A804")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xD7A8AC", Offset = "0xD7A8AC", VA = "0xD7A8AC")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xD7A94C", Offset = "0xD7A94C", VA = "0xD7A94C")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xD7A9EC", Offset = "0xD7A9EC", VA = "0xD7A9EC")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xD7AA9C", Offset = "0xD7AA9C", VA = "0xD7AA9C")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xD7AB3C", Offset = "0xD7AB3C", VA = "0xD7AB3C")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xD7ABDC", Offset = "0xD7ABDC", VA = "0xD7ABDC")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xD7AC84", Offset = "0xD7AC84", VA = "0xD7AC84")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xD7AD24", Offset = "0xD7AD24", VA = "0xD7AD24")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xD7ADC4", Offset = "0xD7ADC4", VA = "0xD7ADC4")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xD7AE64", Offset = "0xD7AE64", VA = "0xD7AE64")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xD7AF04", Offset = "0xD7AF04", VA = "0xD7AF04")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xD7AFA4", Offset = "0xD7AFA4", VA = "0xD7AFA4")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xD7B044", Offset = "0xD7B044", VA = "0xD7B044")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xD7B0AC", Offset = "0xD7B0AC", VA = "0xD7B0AC")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xD7B14C", Offset = "0xD7B14C", VA = "0xD7B14C")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xD7B1FC", Offset = "0xD7B1FC", VA = "0xD7B1FC")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xD7B29C", Offset = "0xD7B29C", VA = "0xD7B29C")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xD7B304", Offset = "0xD7B304", VA = "0xD7B304")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xD7B3A4", Offset = "0xD7B3A4", VA = "0xD7B3A4")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xD7B444", Offset = "0xD7B444", VA = "0xD7B444")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xD7B4E4", Offset = "0xD7B4E4", VA = "0xD7B4E4")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xD7B54C", Offset = "0xD7B54C", VA = "0xD7B54C")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xD7B5EC", Offset = "0xD7B5EC", VA = "0xD7B5EC")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xD7B68C", Offset = "0xD7B68C", VA = "0xD7B68C")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xD7B6F4", Offset = "0xD7B6F4", VA = "0xD7B6F4")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xD7B794", Offset = "0xD7B794", VA = "0xD7B794")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xD7B834", Offset = "0xD7B834", VA = "0xD7B834")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xD7B8D4", Offset = "0xD7B8D4", VA = "0xD7B8D4")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xD7B93C", Offset = "0xD7B93C", VA = "0xD7B93C")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xD7B9DC", Offset = "0xD7B9DC", VA = "0xD7B9DC")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xD7BA7C", Offset = "0xD7BA7C", VA = "0xD7BA7C")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xD7BB1C", Offset = "0xD7BB1C", VA = "0xD7BB1C")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD7BBCC", Offset = "0xD7BBCC", VA = "0xD7BBCC")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD7BC6C", Offset = "0xD7BC6C", VA = "0xD7BC6C")]
		public static string ovr_User_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xD7BCD4", Offset = "0xD7BCD4", VA = "0xD7BCD4")]
		private static extern IntPtr ovr_User_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xD7BD74", Offset = "0xD7BD74", VA = "0xD7BD74")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD7BE14", Offset = "0xD7BE14", VA = "0xD7BE14")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xD7BE7C", Offset = "0xD7BE7C", VA = "0xD7BE7C")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xD7BF1C", Offset = "0xD7BF1C", VA = "0xD7BF1C")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xD7BF84", Offset = "0xD7BF84", VA = "0xD7BF84")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xD7C024", Offset = "0xD7C024", VA = "0xD7C024")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xD7C08C", Offset = "0xD7C08C", VA = "0xD7C08C")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xD7C12C", Offset = "0xD7C12C", VA = "0xD7C12C")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xD7C194", Offset = "0xD7C194", VA = "0xD7C194")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xD7C234", Offset = "0xD7C234", VA = "0xD7C234")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xD7C29C", Offset = "0xD7C29C", VA = "0xD7C29C")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xD7C33C", Offset = "0xD7C33C", VA = "0xD7C33C")]
		public static string ovr_User_GetPresenceDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xD7C3A4", Offset = "0xD7C3A4", VA = "0xD7C3A4")]
		private static extern IntPtr ovr_User_GetPresenceDestinationApiName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xD7C444", Offset = "0xD7C444", VA = "0xD7C444")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xD7C4E4", Offset = "0xD7C4E4", VA = "0xD7C4E4")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xD7C54C", Offset = "0xD7C54C", VA = "0xD7C54C")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xD7C5EC", Offset = "0xD7C5EC", VA = "0xD7C5EC")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xD7C68C", Offset = "0xD7C68C", VA = "0xD7C68C")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xD7C72C", Offset = "0xD7C72C", VA = "0xD7C72C")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xD7C7DC", Offset = "0xD7C7DC", VA = "0xD7C7DC")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xD7C844", Offset = "0xD7C844", VA = "0xD7C844")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xD7C8E4", Offset = "0xD7C8E4", VA = "0xD7C8E4")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xD7C984", Offset = "0xD7C984", VA = "0xD7C984")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xD7CA2C", Offset = "0xD7CA2C", VA = "0xD7CA2C")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xD7CADC", Offset = "0xD7CADC", VA = "0xD7CADC")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xD7CB44", Offset = "0xD7CB44", VA = "0xD7CB44")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xD7CBE4", Offset = "0xD7CBE4", VA = "0xD7CBE4")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xD7CC84", Offset = "0xD7CC84", VA = "0xD7CC84")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xD7CD2C", Offset = "0xD7CD2C", VA = "0xD7CD2C")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xD7CD94", Offset = "0xD7CD94", VA = "0xD7CD94")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xD7CE34", Offset = "0xD7CE34", VA = "0xD7CE34")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xD7CEDC", Offset = "0xD7CEDC", VA = "0xD7CEDC")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xD7CF7C", Offset = "0xD7CF7C", VA = "0xD7CF7C")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xD7D03C", Offset = "0xD7D03C", VA = "0xD7D03C")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xD7D0FC", Offset = "0xD7D0FC", VA = "0xD7D0FC")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xD7D1BC", Offset = "0xD7D1BC", VA = "0xD7D1BC")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xD7D27C", Offset = "0xD7D27C", VA = "0xD7D27C")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xD56B48", Offset = "0xD56B48", VA = "0xD56B48")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xD56F38", Offset = "0xD56F38", VA = "0xD56F38")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xD56C50", Offset = "0xD56C50", VA = "0xD56C50")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xD56D78", Offset = "0xD56D78", VA = "0xD56D78")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xD587E0", Offset = "0xD587E0", VA = "0xD587E0")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xD58A54", Offset = "0xD58A54", VA = "0xD58A54")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xD588E8", Offset = "0xD588E8", VA = "0xD588E8")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xD7D31C", Offset = "0xD7D31C", VA = "0xD7D31C")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xD7D3CC", Offset = "0xD7D3CC", VA = "0xD7D3CC")]
		public static extern IntPtr ovr_ChallengeOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xD7D45C", Offset = "0xD7D45C", VA = "0xD7D45C")]
		public static extern void ovr_ChallengeOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xD7D4FC", Offset = "0xD7D4FC", VA = "0xD7D4FC")]
		public static void ovr_ChallengeOptions_SetDescription(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xD7D5A8", Offset = "0xD7D5A8", VA = "0xD7D5A8")]
		private static extern void ovr_ChallengeOptions_SetDescription_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xD7D658", Offset = "0xD7D658", VA = "0xD7D658")]
		public static void ovr_ChallengeOptions_SetEndDate(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xD7D6D4", Offset = "0xD7D6D4", VA = "0xD7D6D4")]
		private static extern void ovr_ChallengeOptions_SetEndDate_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xD7D784", Offset = "0xD7D784", VA = "0xD7D784")]
		public static extern void ovr_ChallengeOptions_SetIncludeActiveChallenges(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xD7D834", Offset = "0xD7D834", VA = "0xD7D834")]
		public static extern void ovr_ChallengeOptions_SetIncludeFutureChallenges(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xD7D8E4", Offset = "0xD7D8E4", VA = "0xD7D8E4")]
		public static extern void ovr_ChallengeOptions_SetIncludePastChallenges(IntPtr handle, bool value);

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xD7D994", Offset = "0xD7D994", VA = "0xD7D994")]
		public static void ovr_ChallengeOptions_SetLeaderboardName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xD7DA40", Offset = "0xD7DA40", VA = "0xD7DA40")]
		private static extern void ovr_ChallengeOptions_SetLeaderboardName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xD7DAF0", Offset = "0xD7DAF0", VA = "0xD7DAF0")]
		public static void ovr_ChallengeOptions_SetStartDate(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xD7DB6C", Offset = "0xD7DB6C", VA = "0xD7DB6C")]
		private static extern void ovr_ChallengeOptions_SetStartDate_Native(IntPtr handle, ulong value);

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xD7DC1C", Offset = "0xD7DC1C", VA = "0xD7DC1C")]
		public static void ovr_ChallengeOptions_SetTitle(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xD7DCC8", Offset = "0xD7DCC8", VA = "0xD7DCC8")]
		private static extern void ovr_ChallengeOptions_SetTitle_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xD7DD78", Offset = "0xD7DD78", VA = "0xD7DD78")]
		public static extern void ovr_ChallengeOptions_SetViewerFilter(IntPtr handle, ChallengeViewerFilter value);

		[PreserveSig]
		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xD7DE28", Offset = "0xD7DE28", VA = "0xD7DE28")]
		public static extern void ovr_ChallengeOptions_SetVisibility(IntPtr handle, ChallengeVisibility value);

		[PreserveSig]
		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xD7DED8", Offset = "0xD7DED8", VA = "0xD7DED8")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xD7DF68", Offset = "0xD7DF68", VA = "0xD7DF68")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xD7E008", Offset = "0xD7E008", VA = "0xD7E008")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xD7E0D4", Offset = "0xD7E0D4", VA = "0xD7E0D4")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xD7E18C", Offset = "0xD7E18C", VA = "0xD7E18C")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xD7E22C", Offset = "0xD7E22C", VA = "0xD7E22C")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xD7E2DC", Offset = "0xD7E2DC", VA = "0xD7E2DC")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xD7E38C", Offset = "0xD7E38C", VA = "0xD7E38C")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xD7E43C", Offset = "0xD7E43C", VA = "0xD7E43C")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xD7E4DC", Offset = "0xD7E4DC", VA = "0xD7E4DC")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xD7E590", Offset = "0xD7E590", VA = "0xD7E590")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xD7E648", Offset = "0xD7E648", VA = "0xD7E648")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xD7E704", Offset = "0xD7E704", VA = "0xD7E704")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xD7E7C4", Offset = "0xD7E7C4", VA = "0xD7E7C4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xD7E890", Offset = "0xD7E890", VA = "0xD7E890")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xD7E948", Offset = "0xD7E948", VA = "0xD7E948")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xD7E9E8", Offset = "0xD7E9E8", VA = "0xD7E9E8")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xD7EA98", Offset = "0xD7EA98", VA = "0xD7EA98")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xD7EB44", Offset = "0xD7EB44", VA = "0xD7EB44")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xD7EBF4", Offset = "0xD7EBF4", VA = "0xD7EBF4")]
		public static extern IntPtr ovr_NetSyncOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xD7EC84", Offset = "0xD7EC84", VA = "0xD7EC84")]
		public static extern void ovr_NetSyncOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xD7ED24", Offset = "0xD7ED24", VA = "0xD7ED24")]
		public static void ovr_NetSyncOptions_SetVoipGroup(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xD7EDD0", Offset = "0xD7EDD0", VA = "0xD7EDD0")]
		private static extern void ovr_NetSyncOptions_SetVoipGroup_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xD7EE80", Offset = "0xD7EE80", VA = "0xD7EE80")]
		public static extern void ovr_NetSyncOptions_SetVoipStreamDefault(IntPtr handle, NetSyncVoipStreamMode value);

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xD7EF30", Offset = "0xD7EF30", VA = "0xD7EF30")]
		public static void ovr_NetSyncOptions_SetZoneId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xD7EFDC", Offset = "0xD7EFDC", VA = "0xD7EFDC")]
		private static extern void ovr_NetSyncOptions_SetZoneId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xD7F08C", Offset = "0xD7F08C", VA = "0xD7F08C")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xD7F11C", Offset = "0xD7F11C", VA = "0xD7F11C")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xD7F1BC", Offset = "0xD7F1BC", VA = "0xD7F1BC")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xD7F268", Offset = "0xD7F268", VA = "0xD7F268")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xD7F318", Offset = "0xD7F318", VA = "0xD7F318")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xD7F3E4", Offset = "0xD7F3E4", VA = "0xD7F3E4")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xD7F49C", Offset = "0xD7F49C", VA = "0xD7F49C")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xD7F53C", Offset = "0xD7F53C", VA = "0xD7F53C")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xD7F5EC", Offset = "0xD7F5EC", VA = "0xD7F5EC")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xD7F698", Offset = "0xD7F698", VA = "0xD7F698")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xD7F748", Offset = "0xD7F748", VA = "0xD7F748")]
		public static void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xD7F7C4", Offset = "0xD7F7C4", VA = "0xD7F7C4")]
		private static extern void ovr_RichPresenceOptions_SetEndTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xD7F874", Offset = "0xD7F874", VA = "0xD7F874")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xD7F924", Offset = "0xD7F924", VA = "0xD7F924")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xD7F9D4", Offset = "0xD7F9D4", VA = "0xD7F9D4")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xD7FA84", Offset = "0xD7FA84", VA = "0xD7FA84")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD7FB30", Offset = "0xD7FB30", VA = "0xD7FB30")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xD7FBE0", Offset = "0xD7FBE0", VA = "0xD7FBE0")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xD7FC90", Offset = "0xD7FC90", VA = "0xD7FC90")]
		public static void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xD7FD0C", Offset = "0xD7FD0C", VA = "0xD7FD0C")]
		private static extern void ovr_RichPresenceOptions_SetStartTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xD7FDBC", Offset = "0xD7FDBC", VA = "0xD7FDBC")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xD7FE4C", Offset = "0xD7FE4C", VA = "0xD7FE4C")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xD7FEEC", Offset = "0xD7FEEC", VA = "0xD7FEEC")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xD7FFB8", Offset = "0xD7FFB8", VA = "0xD7FFB8")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xD80070", Offset = "0xD80070", VA = "0xD80070")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xD80110", Offset = "0xD80110", VA = "0xD80110")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xD801C0", Offset = "0xD801C0", VA = "0xD801C0")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xD80270", Offset = "0xD80270", VA = "0xD80270")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xD80320", Offset = "0xD80320", VA = "0xD80320")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xD803D0", Offset = "0xD803D0", VA = "0xD803D0")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xD80480", Offset = "0xD80480", VA = "0xD80480")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xD80530", Offset = "0xD80530", VA = "0xD80530")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xD805C0", Offset = "0xD805C0", VA = "0xD805C0")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xD80660", Offset = "0xD80660", VA = "0xD80660")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xD80710", Offset = "0xD80710", VA = "0xD80710")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xD807C0", Offset = "0xD807C0", VA = "0xD807C0")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xD80860", Offset = "0xD80860", VA = "0xD80860")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xD80910", Offset = "0xD80910", VA = "0xD80910")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xD809A0", Offset = "0xD809A0", VA = "0xD809A0")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xD80A40", Offset = "0xD80A40", VA = "0xD80A40")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xD80AF0", Offset = "0xD80AF0", VA = "0xD80AF0")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xD80BA0", Offset = "0xD80BA0", VA = "0xD80BA0")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public enum ChallengeCreationType
	{
		[Token(Token = "0x400160F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA348F0", Offset = "0xA348F0")]
		Unknown,
		[Token(Token = "0x4001610")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34928", Offset = "0xA34928")]
		UserCreated,
		[Token(Token = "0x4001611")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34960", Offset = "0xA34960")]
		DeveloperCreated
	}
	[Token(Token = "0x2000473")]
	public class ChallengeOptions
	{
		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xBFED94", Offset = "0xBFED94", VA = "0xBFED94")]
		public ChallengeOptions()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xBFEE0C", Offset = "0xBFEE0C", VA = "0xBFEE0C")]
		public void SetDescription(string value)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xBFEE88", Offset = "0xBFEE88", VA = "0xBFEE88")]
		public void SetEndDate(DateTime value)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xBFEF04", Offset = "0xBFEF04", VA = "0xBFEF04")]
		public void SetIncludeActiveChallenges(bool value)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xBFEF80", Offset = "0xBFEF80", VA = "0xBFEF80")]
		public void SetIncludeFutureChallenges(bool value)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xBFEFFC", Offset = "0xBFEFFC", VA = "0xBFEFFC")]
		public void SetIncludePastChallenges(bool value)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xBFF078", Offset = "0xBFF078", VA = "0xBFF078")]
		public void SetLeaderboardName(string value)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xBFF0F4", Offset = "0xBFF0F4", VA = "0xBFF0F4")]
		public void SetStartDate(DateTime value)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xBFF170", Offset = "0xBFF170", VA = "0xBFF170")]
		public void SetTitle(string value)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xBFF1EC", Offset = "0xBFF1EC", VA = "0xBFF1EC")]
		public void SetViewerFilter(ChallengeViewerFilter value)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xBFF268", Offset = "0xBFF268", VA = "0xBFF268")]
		public void SetVisibility(ChallengeVisibility value)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xBFF2E4", Offset = "0xBFF2E4", VA = "0xBFF2E4")]
		public static explicit operator IntPtr(ChallengeOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xBFF334", Offset = "0xBFF334", VA = "0xBFF334", Slot = "1")]
		~ChallengeOptions()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public enum ChallengeViewerFilter
	{
		[Token(Token = "0x4001614")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34998", Offset = "0xA34998")]
		Unknown,
		[Token(Token = "0x4001615")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA349D0", Offset = "0xA349D0")]
		AllVisible,
		[Token(Token = "0x4001616")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34A08", Offset = "0xA34A08")]
		Participating,
		[Token(Token = "0x4001617")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34A40", Offset = "0xA34A40")]
		Invited,
		[Token(Token = "0x4001618")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34A78", Offset = "0xA34A78")]
		ParticipatingOrInvited
	}
	[Token(Token = "0x2000475")]
	public enum ChallengeVisibility
	{
		[Token(Token = "0x400161A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34AB0", Offset = "0xA34AB0")]
		Unknown,
		[Token(Token = "0x400161B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34AE8", Offset = "0xA34AE8")]
		InviteOnly,
		[Token(Token = "0x400161C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34B20", Offset = "0xA34B20")]
		Public,
		[Token(Token = "0x400161D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34B58", Offset = "0xA34B58")]
		Private
	}
	[Token(Token = "0x2000476")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x400161F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34B90", Offset = "0xA34B90")]
		Unknown,
		[Token(Token = "0x4001620")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34BC8", Offset = "0xA34BC8")]
		InSync,
		[Token(Token = "0x4001621")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34C00", Offset = "0xA34C00")]
		NeedsDownload,
		[Token(Token = "0x4001622")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34C38", Offset = "0xA34C38")]
		RemoteDownloading,
		[Token(Token = "0x4001623")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34C70", Offset = "0xA34C70")]
		NeedsUpload,
		[Token(Token = "0x4001624")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34CA8", Offset = "0xA34CA8")]
		LocalUploading,
		[Token(Token = "0x4001625")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34CE0", Offset = "0xA34CE0")]
		InConflict
	}
	[Token(Token = "0x2000477")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4001627")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34D18", Offset = "0xA34D18")]
		Unknown,
		[Token(Token = "0x4001628")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34D50", Offset = "0xA34D50")]
		Ok,
		[Token(Token = "0x4001629")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34D88", Offset = "0xA34D88")]
		BetterVersionStored,
		[Token(Token = "0x400162A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34DC0", Offset = "0xA34DC0")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000478")]
	public interface IMicrophone
	{
		[Token(Token = "0x6001A7A")]
		void Start();

		[Token(Token = "0x6001A7B")]
		void Stop();

		[Token(Token = "0x6001A7C")]
		float[] Update();
	}
	[Token(Token = "0x2000479")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6001A7D")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6001A7E")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6001A7F")]
		void Update();

		[Token(Token = "0x6001A80")]
		int PeekSizeElements();
	}
	[Token(Token = "0x200047A")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x400162C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34DF8", Offset = "0xA34DF8")]
		String,
		[Token(Token = "0x400162D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34E30", Offset = "0xA34E30")]
		Int,
		[Token(Token = "0x400162E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34E68", Offset = "0xA34E68")]
		Double,
		[Token(Token = "0x400162F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34EA0", Offset = "0xA34EA0")]
		Unknown
	}
	[Token(Token = "0x200047B")]
	public enum LaunchType
	{
		[Token(Token = "0x4001631")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34ED8", Offset = "0xA34ED8")]
		Unknown,
		[Token(Token = "0x4001632")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34F10", Offset = "0xA34F10")]
		Normal,
		[Token(Token = "0x4001633")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34F48", Offset = "0xA34F48")]
		Invite,
		[Token(Token = "0x4001634")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34F80", Offset = "0xA34F80")]
		Coordinated,
		[Token(Token = "0x4001635")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34FB8", Offset = "0xA34FB8")]
		Deeplink
	}
	[Token(Token = "0x200047C")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4001637")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA34FF0", Offset = "0xA34FF0")]
		None,
		[Token(Token = "0x4001638")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35028", Offset = "0xA35028")]
		Friends,
		[Token(Token = "0x4001639")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35060", Offset = "0xA35060")]
		Unknown,
		[Token(Token = "0x400163A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35098", Offset = "0xA35098")]
		UserIds
	}
	[Token(Token = "0x200047D")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x400163C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA350D0", Offset = "0xA350D0")]
		Top,
		[Token(Token = "0x400163D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35108", Offset = "0xA35108")]
		CenteredOnViewer,
		[Token(Token = "0x400163E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35140", Offset = "0xA35140")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x400163F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35178", Offset = "0xA35178")]
		Unknown
	}
	[Token(Token = "0x200047E")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4001641")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA351B0", Offset = "0xA351B0")]
		Unknown,
		[Token(Token = "0x4001642")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA351E8", Offset = "0xA351E8")]
		Public,
		[Token(Token = "0x4001643")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35220", Offset = "0xA35220")]
		Friends,
		[Token(Token = "0x4001644")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35258", Offset = "0xA35258")]
		OnlyMe
	}
	[Token(Token = "0x200047F")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4001646")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35290", Offset = "0xA35290")]
		Unknown,
		[Token(Token = "0x4001647")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA352C8", Offset = "0xA352C8")]
		MicrophoneOn,
		[Token(Token = "0x4001648")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35300", Offset = "0xA35300")]
		MicrophoneOff
	}
	[Token(Token = "0x2000480")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x400164A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35338", Offset = "0xA35338")]
		Success = 1,
		[Token(Token = "0x400164B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35370", Offset = "0xA35370")]
		Unknown = 0,
		[Token(Token = "0x400164C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA353A8", Offset = "0xA353A8")]
		NoPackageSet = -1,
		[Token(Token = "0x400164D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA353E0", Offset = "0xA353E0")]
		NoFbConnect = -2,
		[Token(Token = "0x400164E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35418", Offset = "0xA35418")]
		NoSessionId = -3,
		[Token(Token = "0x400164F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35450", Offset = "0xA35450")]
		MissingParameters = -4
	}
	[Token(Token = "0x2000481")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4001651")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35488", Offset = "0xA35488")]
		Required,
		[Token(Token = "0x4001652")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA354C0", Offset = "0xA354C0")]
		High,
		[Token(Token = "0x4001653")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA354F8", Offset = "0xA354F8")]
		Medium,
		[Token(Token = "0x4001654")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35530", Offset = "0xA35530")]
		Low,
		[Token(Token = "0x4001655")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35568", Offset = "0xA35568")]
		Unknown
	}
	[Token(Token = "0x2000482")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xC03E98", Offset = "0xC03E98", VA = "0xC03E98")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xC03F10", Offset = "0xC03F10", VA = "0xC03F10")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xC03F94", Offset = "0xC03F94", VA = "0xC03F94")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xC04000", Offset = "0xC04000", VA = "0xC04000")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xC0407C", Offset = "0xC0407C", VA = "0xC0407C")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xC040F8", Offset = "0xC040F8", VA = "0xC040F8")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xC04174", Offset = "0xC04174", VA = "0xC04174")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xC041E0", Offset = "0xC041E0", VA = "0xC041E0")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xC04264", Offset = "0xC04264", VA = "0xC04264")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xC042F0", Offset = "0xC042F0", VA = "0xC042F0")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xC04374", Offset = "0xC04374", VA = "0xC04374")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xC043E0", Offset = "0xC043E0", VA = "0xC043E0")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xC0445C", Offset = "0xC0445C", VA = "0xC0445C")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xC031B0", Offset = "0xC031B0", VA = "0xC031B0")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xC044D8", Offset = "0xC044D8", VA = "0xC044D8", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4001658")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA355A0", Offset = "0xA355A0")]
		Unknown,
		[Token(Token = "0x4001659")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA355D8", Offset = "0xA355D8")]
		Trailing,
		[Token(Token = "0x400165A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35610", Offset = "0xA35610")]
		Swingy
	}
	[Token(Token = "0x2000484")]
	public enum MediaContentType
	{
		[Token(Token = "0x400165C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35648", Offset = "0xA35648")]
		Unknown,
		[Token(Token = "0x400165D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35680", Offset = "0xA35680")]
		Photo
	}
	[Token(Token = "0x2000485")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x2000486")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170002FA")]
		public T Data
		{
			[Token(Token = "0x6001A91")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001A90")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001A92")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x2000487")]
	public class Message
	{
		[Token(Token = "0x2000488")]
		public delegate void Callback(Message message);

		[Token(Token = "0x2000489")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001664")]
			Unknown = 0u,
			[Token(Token = "0x4001665")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001666")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001667")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001668")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001669")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400166A")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400166B")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x400166C")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400166D")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x400166E")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x400166F")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4001670")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4001671")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4001672")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4001673")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4001674")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4001675")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4001676")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4001677")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4001678")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4001679")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x400167A")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x400167B")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x400167C")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x400167D")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x400167E")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x400167F")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4001680")]
			Challenges_Create = 1750718017u,
			[Token(Token = "0x4001681")]
			Challenges_DeclineInvite = 1452177088u,
			[Token(Token = "0x4001682")]
			Challenges_Delete = 642287050u,
			[Token(Token = "0x4001683")]
			Challenges_Get = 2002276083u,
			[Token(Token = "0x4001684")]
			Challenges_GetEntries = 303739999u,
			[Token(Token = "0x4001685")]
			Challenges_GetEntriesAfterRank = 143202943u,
			[Token(Token = "0x4001686")]
			Challenges_GetEntriesByIds = 828705244u,
			[Token(Token = "0x4001687")]
			Challenges_GetList = 1126581078u,
			[Token(Token = "0x4001688")]
			Challenges_GetNextChallenges = 1534894518u,
			[Token(Token = "0x4001689")]
			Challenges_GetNextEntries = 2135728326u,
			[Token(Token = "0x400168A")]
			Challenges_GetPreviousChallenges = 246678541u,
			[Token(Token = "0x400168B")]
			Challenges_GetPreviousEntries = 2026439792u,
			[Token(Token = "0x400168C")]
			Challenges_Join = 556040297u,
			[Token(Token = "0x400168D")]
			Challenges_Leave = 694228709u,
			[Token(Token = "0x400168E")]
			Challenges_UpdateInfo = 292929120u,
			[Token(Token = "0x400168F")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4001690")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4001691")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4001692")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4001693")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4001694")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4001695")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4001696")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4001697")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4001698")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4001699")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x400169A")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x400169B")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x400169C")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x400169D")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x400169E")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x400169F")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x40016A0")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x40016A1")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x40016A2")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x40016A3")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x40016A4")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x40016A5")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x40016A6")]
			Leaderboard_GetEntriesByIds = 962624508u,
			[Token(Token = "0x40016A7")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x40016A8")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x40016A9")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x40016AA")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x40016AB")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x40016AC")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x40016AD")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x40016AE")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x40016AF")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x40016B0")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x40016B1")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x40016B2")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x40016B3")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x40016B4")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x40016B5")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x40016B6")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x40016B7")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x40016B8")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x40016B9")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x40016BA")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x40016BB")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x40016BC")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x40016BD")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x40016BE")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x40016BF")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x40016C0")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x40016C1")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x40016C2")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x40016C3")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x40016C4")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x40016C5")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x40016C6")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x40016C7")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x40016C8")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x40016C9")]
			Room_Get = 1704628152u,
			[Token(Token = "0x40016CA")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x40016CB")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x40016CC")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x40016CD")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x40016CE")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x40016CF")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x40016D0")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x40016D1")]
			Room_Join = 382373641u,
			[Token(Token = "0x40016D2")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x40016D3")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x40016D4")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x40016D5")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x40016D6")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x40016D7")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x40016D8")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x40016D9")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x40016DA")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x40016DB")]
			User_Get = 1808768583u,
			[Token(Token = "0x40016DC")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x40016DD")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x40016DE")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x40016DF")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x40016E0")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x40016E1")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x40016E2")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x40016E3")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x40016E4")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x40016E5")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x40016E6")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x40016E7")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x40016E8")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x40016E9")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x40016EA")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x40016EB")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x40016EC")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x40016ED")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x40016EE")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x40016EF")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x40016F0")]
			Notification_NetSync_ConnectionStatusChanged = 120882378u,
			[Token(Token = "0x40016F1")]
			Notification_NetSync_SessionsChanged = 947814198u,
			[Token(Token = "0x40016F2")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x40016F3")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x40016F4")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x40016F5")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x40016F6")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x40016F7")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x40016F8")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x40016F9")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x40016FA")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x40016FB")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x40016FC")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x40016FD")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x40016FE")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x40016FF")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x200048A")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Oculus.Platform.Models.Error error;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356B8", Offset = "0xA356B8")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170002FB")]
		public MessageType Type
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xBFE2E0", Offset = "0xBFE2E0", VA = "0xBFE2E0")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170002FC")]
		public bool IsError
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0xC04904", Offset = "0xC04904", VA = "0xC04904")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FD")]
		public ulong RequestID
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xBFE2D8", Offset = "0xBFE2D8", VA = "0xBFE2D8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002FE")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xC08108", Offset = "0xC08108", VA = "0xC08108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42E64", Offset = "0xA42E64")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xC080B4", Offset = "0xC080B4", VA = "0xC080B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42E54", Offset = "0xA42E54")]
			set
			{
			}
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xC04684", Offset = "0xC04684", VA = "0xC04684")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xC048FC", Offset = "0xC048FC", VA = "0xC048FC", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xC04914", Offset = "0xC04914", VA = "0xC04914", Slot = "4")]
		public virtual Oculus.Platform.Models.Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xC0491C", Offset = "0xC0491C", VA = "0xC0491C", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xC04924", Offset = "0xC04924", VA = "0xC04924", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xC0492C", Offset = "0xC0492C", VA = "0xC0492C", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xC04934", Offset = "0xC04934", VA = "0xC04934", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xC0493C", Offset = "0xC0493C", VA = "0xC0493C", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xC04944", Offset = "0xC04944", VA = "0xC04944", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xC0494C", Offset = "0xC0494C", VA = "0xC0494C", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xC04954", Offset = "0xC04954", VA = "0xC04954", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xC0495C", Offset = "0xC0495C", VA = "0xC0495C", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xC04964", Offset = "0xC04964", VA = "0xC04964", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xC0496C", Offset = "0xC0496C", VA = "0xC0496C", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xC04974", Offset = "0xC04974", VA = "0xC04974", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xC0497C", Offset = "0xC0497C", VA = "0xC0497C", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xC04984", Offset = "0xC04984", VA = "0xC04984", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xC0498C", Offset = "0xC0498C", VA = "0xC0498C", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xC04994", Offset = "0xC04994", VA = "0xC04994", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xC0499C", Offset = "0xC0499C", VA = "0xC0499C", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xC049A4", Offset = "0xC049A4", VA = "0xC049A4", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xC049AC", Offset = "0xC049AC", VA = "0xC049AC", Slot = "23")]
		public virtual Challenge GetChallenge()
		{
			return null;
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xC049B4", Offset = "0xC049B4", VA = "0xC049B4", Slot = "24")]
		public virtual ChallengeEntryList GetChallengeEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xC049BC", Offset = "0xC049BC", VA = "0xC049BC", Slot = "25")]
		public virtual ChallengeList GetChallengeList()
		{
			return null;
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xC049C4", Offset = "0xC049C4", VA = "0xC049C4", Slot = "26")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xC049CC", Offset = "0xC049CC", VA = "0xC049CC", Slot = "27")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xC049D4", Offset = "0xC049D4", VA = "0xC049D4", Slot = "28")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xC049DC", Offset = "0xC049DC", VA = "0xC049DC", Slot = "29")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xC049E4", Offset = "0xC049E4", VA = "0xC049E4", Slot = "30")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xC049EC", Offset = "0xC049EC", VA = "0xC049EC", Slot = "31")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xC049F4", Offset = "0xC049F4", VA = "0xC049F4", Slot = "32")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xC049FC", Offset = "0xC049FC", VA = "0xC049FC", Slot = "33")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xC04A04", Offset = "0xC04A04", VA = "0xC04A04", Slot = "34")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xC04A0C", Offset = "0xC04A0C", VA = "0xC04A0C", Slot = "35")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xC04A14", Offset = "0xC04A14", VA = "0xC04A14", Slot = "36")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xC04A1C", Offset = "0xC04A1C", VA = "0xC04A1C", Slot = "37")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xC04A24", Offset = "0xC04A24", VA = "0xC04A24", Slot = "38")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xC04A2C", Offset = "0xC04A2C", VA = "0xC04A2C", Slot = "39")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xC04A34", Offset = "0xC04A34", VA = "0xC04A34", Slot = "40")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xC04A3C", Offset = "0xC04A3C", VA = "0xC04A3C", Slot = "41")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xC04A44", Offset = "0xC04A44", VA = "0xC04A44", Slot = "42")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xC04A4C", Offset = "0xC04A4C", VA = "0xC04A4C", Slot = "43")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xC04A54", Offset = "0xC04A54", VA = "0xC04A54", Slot = "44")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xC04A5C", Offset = "0xC04A5C", VA = "0xC04A5C", Slot = "45")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xC04A64", Offset = "0xC04A64", VA = "0xC04A64", Slot = "46")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xC04A6C", Offset = "0xC04A6C", VA = "0xC04A6C", Slot = "47")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xC04A74", Offset = "0xC04A74", VA = "0xC04A74", Slot = "48")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xC04A7C", Offset = "0xC04A7C", VA = "0xC04A7C", Slot = "49")]
		public virtual NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xC04A84", Offset = "0xC04A84", VA = "0xC04A84", Slot = "50")]
		public virtual NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xC04A8C", Offset = "0xC04A8C", VA = "0xC04A8C", Slot = "51")]
		public virtual NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xC04A94", Offset = "0xC04A94", VA = "0xC04A94", Slot = "52")]
		public virtual NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xC04A9C", Offset = "0xC04A9C", VA = "0xC04A9C", Slot = "53")]
		public virtual NetSyncVoipAttenuationValueList GetNetSyncVoipAttenuationValueList()
		{
			return null;
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xC04AA4", Offset = "0xC04AA4", VA = "0xC04AA4", Slot = "54")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xC04AAC", Offset = "0xC04AAC", VA = "0xC04AAC", Slot = "55")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xC04AB4", Offset = "0xC04AB4", VA = "0xC04AB4", Slot = "56")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xC04ABC", Offset = "0xC04ABC", VA = "0xC04ABC", Slot = "57")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xC04AC4", Offset = "0xC04AC4", VA = "0xC04AC4", Slot = "58")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xC04ACC", Offset = "0xC04ACC", VA = "0xC04ACC", Slot = "59")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xC04AD4", Offset = "0xC04AD4", VA = "0xC04AD4", Slot = "60")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xC04ADC", Offset = "0xC04ADC", VA = "0xC04ADC", Slot = "61")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xC04AE4", Offset = "0xC04AE4", VA = "0xC04AE4", Slot = "62")]
		public virtual Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xC04AEC", Offset = "0xC04AEC", VA = "0xC04AEC", Slot = "63")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xC04AF4", Offset = "0xC04AF4", VA = "0xC04AF4", Slot = "64")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xC04AFC", Offset = "0xC04AFC", VA = "0xC04AFC", Slot = "65")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xC04B04", Offset = "0xC04B04", VA = "0xC04B04", Slot = "66")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xC04B0C", Offset = "0xC04B0C", VA = "0xC04B0C", Slot = "67")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xC04B14", Offset = "0xC04B14", VA = "0xC04B14", Slot = "68")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xC04B1C", Offset = "0xC04B1C", VA = "0xC04B1C", Slot = "69")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xC04B24", Offset = "0xC04B24", VA = "0xC04B24", Slot = "70")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xC04B2C", Offset = "0xC04B2C", VA = "0xC04B2C", Slot = "71")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xC04B34", Offset = "0xC04B34", VA = "0xC04B34", Slot = "72")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xC04B3C", Offset = "0xC04B3C", VA = "0xC04B3C", Slot = "73")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xC04B44", Offset = "0xC04B44", VA = "0xC04B44", Slot = "74")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xC04B4C", Offset = "0xC04B4C", VA = "0xC04B4C", Slot = "75")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xC04B54", Offset = "0xC04B54", VA = "0xC04B54")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xBFDD34", Offset = "0xBFDD34", VA = "0xBFDD34")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x200048B")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xC086E8", Offset = "0xC086E8", VA = "0xC086E8")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xC08748", Offset = "0xC08748", VA = "0xC08748", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xC08798", Offset = "0xC08798", VA = "0xC08798", Slot = "76")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200048C")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xC06218", Offset = "0xC06218", VA = "0xC06218")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xC088BC", Offset = "0xC088BC", VA = "0xC088BC", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xC0890C", Offset = "0xC0890C", VA = "0xC0890C", Slot = "76")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200048D")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xC06278", Offset = "0xC06278", VA = "0xC06278")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xC08BB0", Offset = "0xC08BB0", VA = "0xC08BB0", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xC08C00", Offset = "0xC08C00", VA = "0xC08C00", Slot = "76")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200048E")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xC062D8", Offset = "0xC062D8", VA = "0xC062D8")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xC08EA4", Offset = "0xC08EA4", VA = "0xC08EA4", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xC08EF4", Offset = "0xC08EF4", VA = "0xC08EF4", Slot = "76")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200048F")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xC06338", Offset = "0xC06338", VA = "0xC06338")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xC0902C", Offset = "0xC0902C", VA = "0xC0902C", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xC0907C", Offset = "0xC0907C", VA = "0xC0907C", Slot = "76")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000490")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xC06398", Offset = "0xC06398", VA = "0xC06398")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xC091D0", Offset = "0xC091D0", VA = "0xC091D0", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xC09220", Offset = "0xC09220", VA = "0xC09220", Slot = "76")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000491")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xC063F8", Offset = "0xC063F8", VA = "0xC063F8")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xC09408", Offset = "0xC09408", VA = "0xC09408", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xC09458", Offset = "0xC09458", VA = "0xC09458", Slot = "76")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000492")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xC06458", Offset = "0xC06458", VA = "0xC06458")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xC096CC", Offset = "0xC096CC", VA = "0xC096CC", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xC0971C", Offset = "0xC0971C", VA = "0xC0971C", Slot = "76")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000493")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xC064B8", Offset = "0xC064B8", VA = "0xC064B8")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xC09874", Offset = "0xC09874", VA = "0xC09874", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xC098C4", Offset = "0xC098C4", VA = "0xC098C4", Slot = "76")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000494")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xC06518", Offset = "0xC06518", VA = "0xC06518")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xC09A1C", Offset = "0xC09A1C", VA = "0xC09A1C", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xC09A6C", Offset = "0xC09A6C", VA = "0xC09A6C", Slot = "76")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000495")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xC06578", Offset = "0xC06578", VA = "0xC06578")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xC09BA0", Offset = "0xC09BA0", VA = "0xC09BA0", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xC09BF0", Offset = "0xC09BF0", VA = "0xC09BF0", Slot = "76")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000496")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xC065D8", Offset = "0xC065D8", VA = "0xC065D8")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xC09D58", Offset = "0xC09D58", VA = "0xC09D58", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xC09DA8", Offset = "0xC09DA8", VA = "0xC09DA8", Slot = "76")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000497")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xC06638", Offset = "0xC06638", VA = "0xC06638")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xC09EEC", Offset = "0xC09EEC", VA = "0xC09EEC", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xC09F3C", Offset = "0xC09F3C", VA = "0xC09F3C", Slot = "76")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000498")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xC0A060", Offset = "0xC0A060", VA = "0xC0A060")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xC0A0C0", Offset = "0xC0A0C0", VA = "0xC0A0C0", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xC0A110", Offset = "0xC0A110", VA = "0xC0A110", Slot = "76")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000499")]
	public class MessageWithChallenge : Message<Challenge>
	{
		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xC06698", Offset = "0xC06698", VA = "0xC06698")]
		public MessageWithChallenge(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xC0A384", Offset = "0xC0A384", VA = "0xC0A384", Slot = "23")]
		public override Challenge GetChallenge()
		{
			return null;
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xC0A3D4", Offset = "0xC0A3D4", VA = "0xC0A3D4", Slot = "76")]
		protected override Challenge GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200049A")]
	public class MessageWithChallengeList : Message<ChallengeList>
	{
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xC066F8", Offset = "0xC066F8", VA = "0xC066F8")]
		public MessageWithChallengeList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xC0A978", Offset = "0xC0A978", VA = "0xC0A978", Slot = "25")]
		public override ChallengeList GetChallengeList()
		{
			return null;
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xC0A9C8", Offset = "0xC0A9C8", VA = "0xC0A9C8", Slot = "76")]
		protected override ChallengeList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200049B")]
	public class MessageWithChallengeEntryList : Message<ChallengeEntryList>
	{
		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xC06758", Offset = "0xC06758", VA = "0xC06758")]
		public MessageWithChallengeEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xC0A664", Offset = "0xC0A664", VA = "0xC0A664", Slot = "24")]
		public override ChallengeEntryList GetChallengeEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xC0A6B4", Offset = "0xC0A6B4", VA = "0xC0A6B4", Slot = "76")]
		protected override ChallengeEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200049C")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xC067B8", Offset = "0xC067B8", VA = "0xC067B8")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xC0AC8C", Offset = "0xC0AC8C", VA = "0xC0AC8C", Slot = "26")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xC0ACDC", Offset = "0xC0ACDC", VA = "0xC0ACDC", Slot = "76")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200049D")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xC06818", Offset = "0xC06818", VA = "0xC06818")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xC0AE58", Offset = "0xC0AE58", VA = "0xC0AE58", Slot = "27")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xC0AEA8", Offset = "0xC0AEA8", VA = "0xC0AEA8", Slot = "76")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200049E")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xC06878", Offset = "0xC06878", VA = "0xC06878")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xC0B2F0", Offset = "0xC0B2F0", VA = "0xC0B2F0", Slot = "28")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xC0B340", Offset = "0xC0B340", VA = "0xC0B340", Slot = "76")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200049F")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xC068D8", Offset = "0xC068D8", VA = "0xC068D8")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xC0AFFC", Offset = "0xC0AFFC", VA = "0xC0AFFC", Slot = "29")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xC0B04C", Offset = "0xC0B04C", VA = "0xC0B04C", Slot = "76")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A0")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xC06938", Offset = "0xC06938", VA = "0xC06938")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xC0B4D4", Offset = "0xC0B4D4", VA = "0xC0B4D4", Slot = "30")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xC0B524", Offset = "0xC0B524", VA = "0xC0B524", Slot = "76")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A1")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xC06998", Offset = "0xC06998", VA = "0xC06998")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xC0B678", Offset = "0xC0B678", VA = "0xC0B678", Slot = "31")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xC0B6C8", Offset = "0xC0B6C8", VA = "0xC0B6C8", Slot = "76")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A2")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xC0BBA0", Offset = "0xC0BBA0", VA = "0xC0BBA0")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xC0BC00", Offset = "0xC0BC00", VA = "0xC0BC00", Slot = "32")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xC0BC50", Offset = "0xC0BC50", VA = "0xC0BC50", Slot = "76")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A3")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xC0BEC4", Offset = "0xC0BEC4", VA = "0xC0BEC4")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xC0BF24", Offset = "0xC0BF24", VA = "0xC0BF24", Slot = "33")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xC0BF74", Offset = "0xC0BF74", VA = "0xC0BF74", Slot = "76")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A4")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xC069F8", Offset = "0xC069F8", VA = "0xC069F8")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xC0C0B0", Offset = "0xC0C0B0", VA = "0xC0C0B0", Slot = "34")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xC0C100", Offset = "0xC0C100", VA = "0xC0C100", Slot = "76")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A5")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xC0C23C", Offset = "0xC0C23C", VA = "0xC0C23C")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xC0C29C", Offset = "0xC0C29C", VA = "0xC0C29C", Slot = "35")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xC0C2EC", Offset = "0xC0C2EC", VA = "0xC0C2EC", Slot = "76")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A6")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xC0C424", Offset = "0xC0C424", VA = "0xC0C424")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xC0C484", Offset = "0xC0C484", VA = "0xC0C484", Slot = "36")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xC0C4D4", Offset = "0xC0C4D4", VA = "0xC0C4D4", Slot = "76")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A7")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xC06A58", Offset = "0xC06A58", VA = "0xC06A58")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xC0C6D8", Offset = "0xC0C6D8", VA = "0xC0C6D8", Slot = "38")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xC0C728", Offset = "0xC0C728", VA = "0xC0C728", Slot = "76")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A8")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xC0C9EC", Offset = "0xC0C9EC", VA = "0xC0C9EC")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xC0CA4C", Offset = "0xC0CA4C", VA = "0xC0CA4C", Slot = "39")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xC0CA9C", Offset = "0xC0CA9C", VA = "0xC0CA9C", Slot = "76")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004A9")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xC0CD10", Offset = "0xC0CD10", VA = "0xC0CD10")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xC0CD70", Offset = "0xC0CD70", VA = "0xC0CD70", Slot = "40")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xC0CDC0", Offset = "0xC0CDC0", VA = "0xC0CDC0", Slot = "76")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AA")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xC0CEE8", Offset = "0xC0CEE8", VA = "0xC0CEE8")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xC0CF48", Offset = "0xC0CF48", VA = "0xC0CF48", Slot = "41")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xC0CF98", Offset = "0xC0CF98", VA = "0xC0CF98", Slot = "76")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AB")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xC06B18", Offset = "0xC06B18", VA = "0xC06B18")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xC0D0BC", Offset = "0xC0D0BC", VA = "0xC0D0BC", Slot = "42")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xC0D10C", Offset = "0xC0D10C", VA = "0xC0D10C", Slot = "76")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AC")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xC0D280", Offset = "0xC0D280", VA = "0xC0D280")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xC0D2E0", Offset = "0xC0D2E0", VA = "0xC0D2E0", Slot = "43")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xC0D330", Offset = "0xC0D330", VA = "0xC0D330", Slot = "76")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AD")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xC06B78", Offset = "0xC06B78", VA = "0xC06B78")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xC0D474", Offset = "0xC0D474", VA = "0xC0D474", Slot = "44")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xC0D4C4", Offset = "0xC0D4C4", VA = "0xC0D4C4", Slot = "76")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AE")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xC06C38", Offset = "0xC06C38", VA = "0xC06C38")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xC0D860", Offset = "0xC0D860", VA = "0xC0D860", Slot = "46")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xC0D8B0", Offset = "0xC0D8B0", VA = "0xC0D8B0", Slot = "76")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AF")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xC06C98", Offset = "0xC06C98", VA = "0xC06C98")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xC0DA98", Offset = "0xC0DA98", VA = "0xC0DA98", Slot = "47")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xC0DAE8", Offset = "0xC0DAE8", VA = "0xC0DAE8", Slot = "76")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B0")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xC06CF8", Offset = "0xC06CF8", VA = "0xC06CF8")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xC0E0A0", Offset = "0xC0E0A0", VA = "0xC0E0A0", Slot = "48")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xC0E0F0", Offset = "0xC0E0F0", VA = "0xC0E0F0", Slot = "76")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B1")]
	public class MessageWithNetSyncConnection : Message<NetSyncConnection>
	{
		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xC06D58", Offset = "0xC06D58", VA = "0xC06D58")]
		public MessageWithNetSyncConnection(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xC0E264", Offset = "0xC0E264", VA = "0xC0E264", Slot = "49")]
		public override NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xC0E2B4", Offset = "0xC0E2B4", VA = "0xC0E2B4", Slot = "76")]
		protected override NetSyncConnection GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B2")]
	public class MessageWithNetSyncSessionList : Message<NetSyncSessionList>
	{
		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xC0E418", Offset = "0xC0E418", VA = "0xC0E418")]
		public MessageWithNetSyncSessionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xC0E478", Offset = "0xC0E478", VA = "0xC0E478", Slot = "50")]
		public override NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xC0E4C8", Offset = "0xC0E4C8", VA = "0xC0E4C8", Slot = "76")]
		protected override NetSyncSessionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B3")]
	public class MessageWithNetSyncSessionsChangedNotification : Message<NetSyncSessionsChangedNotification>
	{
		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xC06DB8", Offset = "0xC06DB8", VA = "0xC06DB8")]
		public MessageWithNetSyncSessionsChangedNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xC0E73C", Offset = "0xC0E73C", VA = "0xC0E73C", Slot = "51")]
		public override NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xC0E78C", Offset = "0xC0E78C", VA = "0xC0E78C", Slot = "76")]
		protected override NetSyncSessionsChangedNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B4")]
	public class MessageWithNetSyncSetSessionPropertyResult : Message<NetSyncSetSessionPropertyResult>
	{
		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xC0E8E4", Offset = "0xC0E8E4", VA = "0xC0E8E4")]
		public MessageWithNetSyncSetSessionPropertyResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xC0E944", Offset = "0xC0E944", VA = "0xC0E944", Slot = "52")]
		public override NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xC0E994", Offset = "0xC0E994", VA = "0xC0E994", Slot = "76")]
		protected override NetSyncSetSessionPropertyResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B5")]
	public class MessageWithNetSyncVoipAttenuationValueList : Message<NetSyncVoipAttenuationValueList>
	{
		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xC0EADC", Offset = "0xC0EADC", VA = "0xC0EADC")]
		public MessageWithNetSyncVoipAttenuationValueList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xC0EB3C", Offset = "0xC0EB3C", VA = "0xC0EB3C", Slot = "53")]
		public override NetSyncVoipAttenuationValueList GetNetSyncVoipAttenuationValueList()
		{
			return null;
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xC0EB8C", Offset = "0xC0EB8C", VA = "0xC0EB8C", Slot = "76")]
		protected override NetSyncVoipAttenuationValueList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B6")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xC06E18", Offset = "0xC06E18", VA = "0xC06E18")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xC0EF4C", Offset = "0xC0EF4C", VA = "0xC0EF4C", Slot = "54")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xC0EF9C", Offset = "0xC0EF9C", VA = "0xC0EF9C", Slot = "76")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B7")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xC0F0C0", Offset = "0xC0F0C0", VA = "0xC0F0C0")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xC0F120", Offset = "0xC0F120", VA = "0xC0F120", Slot = "55")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xC0F170", Offset = "0xC0F170", VA = "0xC0F170", Slot = "76")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B8")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xC06E78", Offset = "0xC06E78", VA = "0xC06E78")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xC0F600", Offset = "0xC0F600", VA = "0xC0F600", Slot = "55")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xC0F650", Offset = "0xC0F650", VA = "0xC0F650", Slot = "76")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B9")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xC0F42C", Offset = "0xC0F42C", VA = "0xC0F42C")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xC0F48C", Offset = "0xC0F48C", VA = "0xC0F48C", Slot = "56")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xC0F4DC", Offset = "0xC0F4DC", VA = "0xC0F4DC", Slot = "76")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BA")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xC06ED8", Offset = "0xC06ED8", VA = "0xC06ED8")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xC0F6EC", Offset = "0xC0F6EC", VA = "0xC0F6EC", Slot = "57")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xC0F73C", Offset = "0xC0F73C", VA = "0xC0F73C", Slot = "76")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BB")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xC06F38", Offset = "0xC06F38", VA = "0xC06F38")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xC0F8C0", Offset = "0xC0F8C0", VA = "0xC0F8C0", Slot = "58")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xC0F910", Offset = "0xC0F910", VA = "0xC0F910", Slot = "76")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BC")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xC06F98", Offset = "0xC06F98", VA = "0xC06F98")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xC0FEA4", Offset = "0xC0FEA4", VA = "0xC0FEA4", Slot = "59")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xC0FEF4", Offset = "0xC0FEF4", VA = "0xC0FEF4", Slot = "76")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BD")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xC06FF8", Offset = "0xC06FF8", VA = "0xC06FF8")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xC10198", Offset = "0xC10198", VA = "0xC10198", Slot = "60")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xC101E8", Offset = "0xC101E8", VA = "0xC101E8", Slot = "76")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BE")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xC07058", Offset = "0xC07058", VA = "0xC07058")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xC1033C", Offset = "0xC1033C", VA = "0xC1033C", Slot = "61")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xC1038C", Offset = "0xC1038C", VA = "0xC1038C", Slot = "76")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004BF")]
	public class MessageWithRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xC070B8", Offset = "0xC070B8", VA = "0xC070B8")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xC10630", Offset = "0xC10630", VA = "0xC10630", Slot = "62")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xC10680", Offset = "0xC10680", VA = "0xC10680", Slot = "76")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C0")]
	public class MessageWithRoomUnderCurrentRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xC07118", Offset = "0xC07118", VA = "0xC07118")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xC10EA8", Offset = "0xC10EA8", VA = "0xC10EA8", Slot = "62")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xC10EF8", Offset = "0xC10EF8", VA = "0xC10EF8", Slot = "76")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C1")]
	public class MessageWithRoomUnderViewerRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xC07178", Offset = "0xC07178", VA = "0xC07178")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xC10F94", Offset = "0xC10F94", VA = "0xC10F94", Slot = "62")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xC10FE4", Offset = "0xC10FE4", VA = "0xC10FE4", Slot = "76")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C2")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xC071D8", Offset = "0xC071D8", VA = "0xC071D8")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xC10BB4", Offset = "0xC10BB4", VA = "0xC10BB4", Slot = "65")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xC10C04", Offset = "0xC10C04", VA = "0xC10C04", Slot = "76")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C3")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xC07238", Offset = "0xC07238", VA = "0xC07238")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xC1071C", Offset = "0xC1071C", VA = "0xC1071C", Slot = "63")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xC1076C", Offset = "0xC1076C", VA = "0xC1076C", Slot = "76")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C4")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xC07298", Offset = "0xC07298", VA = "0xC07298")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xC108C0", Offset = "0xC108C0", VA = "0xC108C0", Slot = "64")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xC10910", Offset = "0xC10910", VA = "0xC10910", Slot = "76")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C5")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xC072F8", Offset = "0xC072F8", VA = "0xC072F8")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xC11080", Offset = "0xC11080", VA = "0xC11080", Slot = "66")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xC110D0", Offset = "0xC110D0", VA = "0xC110D0", Slot = "76")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C6")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xC07358", Offset = "0xC07358", VA = "0xC07358")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xC11344", Offset = "0xC11344", VA = "0xC11344", Slot = "67")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xC11394", Offset = "0xC11394", VA = "0xC11394", Slot = "76")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C7")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xC073B8", Offset = "0xC073B8", VA = "0xC073B8")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xC114B8", Offset = "0xC114B8", VA = "0xC114B8", Slot = "68")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xC11508", Offset = "0xC11508", VA = "0xC11508", Slot = "76")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C8")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xC11570", Offset = "0xC11570", VA = "0xC11570")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xC115D0", Offset = "0xC115D0", VA = "0xC115D0", Slot = "69")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xC11620", Offset = "0xC11620", VA = "0xC11620", Slot = "76")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C9")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xC07418", Offset = "0xC07418", VA = "0xC07418")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xC11758", Offset = "0xC11758", VA = "0xC11758", Slot = "70")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xC117A8", Offset = "0xC117A8", VA = "0xC117A8", Slot = "76")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CA")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xC07478", Offset = "0xC07478", VA = "0xC07478")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xC118DC", Offset = "0xC118DC", VA = "0xC118DC", Slot = "71")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xC1192C", Offset = "0xC1192C", VA = "0xC1192C", Slot = "76")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CB")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xC074D8", Offset = "0xC074D8", VA = "0xC074D8")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xC11AE0", Offset = "0xC11AE0", VA = "0xC11AE0", Slot = "72")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xC11B30", Offset = "0xC11B30", VA = "0xC11B30", Slot = "76")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CC")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xC07538", Offset = "0xC07538", VA = "0xC07538")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xC11DD4", Offset = "0xC11DD4", VA = "0xC11DD4", Slot = "73")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xC11E24", Offset = "0xC11E24", VA = "0xC11E24", Slot = "76")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CD")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xC07598", Offset = "0xC07598", VA = "0xC07598")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xC120C8", Offset = "0xC120C8", VA = "0xC120C8", Slot = "74")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xC12118", Offset = "0xC12118", VA = "0xC12118", Slot = "76")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CE")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xC1223C", Offset = "0xC1223C", VA = "0xC1223C")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xC1229C", Offset = "0xC1229C", VA = "0xC1229C", Slot = "75")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xC122EC", Offset = "0xC122EC", VA = "0xC122EC", Slot = "76")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CF")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xC075F8", Offset = "0xC075F8", VA = "0xC075F8")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xC0EE00", Offset = "0xC0EE00", VA = "0xC0EE00", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xC0EE50", Offset = "0xC0EE50", VA = "0xC0EE50", Slot = "76")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D0")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xC07658", Offset = "0xC07658", VA = "0xC07658")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xC0FB84", Offset = "0xC0FB84", VA = "0xC0FB84", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xC0FBD4", Offset = "0xC0FBD4", VA = "0xC0FBD4", Slot = "76")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D1")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xC06AB8", Offset = "0xC06AB8", VA = "0xC06AB8")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xC0C610", Offset = "0xC0C610", VA = "0xC0C610", Slot = "37")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xC0C660", Offset = "0xC0C660", VA = "0xC0C660", Slot = "76")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004D2")]
	public class MessageWithMatchmakingNotification : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xC076B8", Offset = "0xC076B8", VA = "0xC076B8")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xC0DC64", Offset = "0xC0DC64", VA = "0xC0DC64", Slot = "62")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xC0DCB4", Offset = "0xC0DCB4", VA = "0xC0DCB4", Slot = "76")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D3")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xC06BD8", Offset = "0xC06BD8", VA = "0xC06BD8")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xC0D61C", Offset = "0xC0D61C", VA = "0xC0D61C", Slot = "46")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xC0D680", Offset = "0xC0D680", VA = "0xC0D680", Slot = "65")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xC0D6E4", Offset = "0xC0D6E4", VA = "0xC0D6E4", Slot = "76")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D4")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xC07718", Offset = "0xC07718", VA = "0xC07718")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xC0B96C", Offset = "0xC0B96C", VA = "0xC0B96C", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xC0B9BC", Offset = "0xC0B9BC", VA = "0xC0B9BC", Slot = "76")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D5")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xC07778", Offset = "0xC07778", VA = "0xC07778")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xC0FD30", Offset = "0xC0FD30", VA = "0xC0FD30", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xC0FD80", Offset = "0xC0FD80", VA = "0xC0FD80", Slot = "76")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D6")]
	public enum NetSyncConnectionStatus
	{
		[Token(Token = "0x4001701")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA356C8", Offset = "0xA356C8")]
		Unknown,
		[Token(Token = "0x4001702")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35700", Offset = "0xA35700")]
		Connecting,
		[Token(Token = "0x4001703")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35738", Offset = "0xA35738")]
		Disconnected,
		[Token(Token = "0x4001704")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35770", Offset = "0xA35770")]
		Connected
	}
	[Token(Token = "0x20004D7")]
	public enum NetSyncDisconnectReason
	{
		[Token(Token = "0x4001706")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA357A8", Offset = "0xA357A8")]
		Unknown,
		[Token(Token = "0x4001707")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA357E0", Offset = "0xA357E0")]
		LocalTerminated,
		[Token(Token = "0x4001708")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35818", Offset = "0xA35818")]
		ServerTerminated,
		[Token(Token = "0x4001709")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35850", Offset = "0xA35850")]
		Failed,
		[Token(Token = "0x400170A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35888", Offset = "0xA35888")]
		Lost
	}
	[Token(Token = "0x20004D8")]
	public class NetSyncOptions
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xC14440", Offset = "0xC14440", VA = "0xC14440")]
		public NetSyncOptions()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xC144B8", Offset = "0xC144B8", VA = "0xC144B8")]
		public void SetVoipGroup(string value)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xC14534", Offset = "0xC14534", VA = "0xC14534")]
		public void SetVoipStreamDefault(NetSyncVoipStreamMode value)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xC145B0", Offset = "0xC145B0", VA = "0xC145B0")]
		public void SetZoneId(string value)
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xC1462C", Offset = "0xC1462C", VA = "0xC1462C")]
		public static explicit operator IntPtr(NetSyncOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xC1467C", Offset = "0xC1467C", VA = "0xC1467C", Slot = "1")]
		~NetSyncOptions()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public enum NetSyncVoipMicSource
	{
		[Token(Token = "0x400170D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA358C0", Offset = "0xA358C0")]
		Unknown,
		[Token(Token = "0x400170E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA358F8", Offset = "0xA358F8")]
		None,
		[Token(Token = "0x400170F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35930", Offset = "0xA35930")]
		Internal
	}
	[Token(Token = "0x20004DA")]
	public enum NetSyncVoipStreamMode
	{
		[Token(Token = "0x4001711")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35968", Offset = "0xA35968")]
		Unknown,
		[Token(Token = "0x4001712")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA359A0", Offset = "0xA359A0")]
		Ambisonic,
		[Token(Token = "0x4001713")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA359D8", Offset = "0xA359D8")]
		Mono
	}
	[Token(Token = "0x20004DB")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x170002FF")]
		public ulong SenderID
		{
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xC14B88", Offset = "0xC14B88", VA = "0xC14B88")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000300")]
		public ulong Size
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xC14BF4", Offset = "0xC14BF4", VA = "0xC14BF4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000301")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0xC14BFC", Offset = "0xC14BFC", VA = "0xC14BFC")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xC13AC0", Offset = "0xC13AC0", VA = "0xC13AC0")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xC14A28", Offset = "0xC14A28", VA = "0xC14A28")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xC14C68", Offset = "0xC14C68", VA = "0xC14C68", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xC14CDC", Offset = "0xC14CDC", VA = "0xC14CDC", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4001717")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35A10", Offset = "0xA35A10")]
		Unknown,
		[Token(Token = "0x4001718")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35A48", Offset = "0xA35A48")]
		Join,
		[Token(Token = "0x4001719")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35A80", Offset = "0xA35A80")]
		Leave,
		[Token(Token = "0x400171A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35AB8", Offset = "0xA35AB8")]
		Invite,
		[Token(Token = "0x400171B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35AF0", Offset = "0xA35AF0")]
		Uninvite
	}
	[Token(Token = "0x20004DD")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x400171D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35B28", Offset = "0xA35B28")]
		Unknown,
		[Token(Token = "0x400171E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35B60", Offset = "0xA35B60")]
		Connected,
		[Token(Token = "0x400171F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35B98", Offset = "0xA35B98")]
		Timeout,
		[Token(Token = "0x4001720")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35BD0", Offset = "0xA35BD0")]
		Closed
	}
	[Token(Token = "0x20004DE")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4001722")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35C08", Offset = "0xA35C08")]
		Unknown,
		[Token(Token = "0x4001723")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35C40", Offset = "0xA35C40")]
		Granted,
		[Token(Token = "0x4001724")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35C78", Offset = "0xA35C78")]
		Denied,
		[Token(Token = "0x4001725")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35CB0", Offset = "0xA35CB0")]
		Blocked
	}
	[Token(Token = "0x20004DF")]
	public enum PermissionType
	{
		[Token(Token = "0x4001727")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35CE8", Offset = "0xA35CE8")]
		Unknown,
		[Token(Token = "0x4001728")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35D20", Offset = "0xA35D20")]
		Microphone,
		[Token(Token = "0x4001729")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35D58", Offset = "0xA35D58")]
		WriteExternalStorage
	}
	[Token(Token = "0x20004E0")]
	public sealed class Core
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xBFF4F8", Offset = "0xBFF4F8", VA = "0xBFF4F8")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xC00CC8", Offset = "0xC00CC8", VA = "0xC00CC8")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xC00D34", Offset = "0xC00D34", VA = "0xC00D34")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xC00F24", Offset = "0xC00F24", VA = "0xC00F24")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xC01208", Offset = "0xC01208", VA = "0xC01208")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xC00EFC", Offset = "0xC00EFC", VA = "0xC00EFC")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xC0155C", Offset = "0xC0155C", VA = "0xC0155C")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xD585D8", Offset = "0xD585D8", VA = "0xD585D8")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xD586F4", Offset = "0xD586F4", VA = "0xD586F4")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public static class Rooms
	{
		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xC16644", Offset = "0xC16644", VA = "0xC16644")]
		public static Request<Oculus.Platform.Models.Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xC168D0", Offset = "0xC168D0", VA = "0xC168D0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA42E74", Offset = "0xA42E74")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xC1694C", Offset = "0xC1694C", VA = "0xC1694C")]
		public static Request<Oculus.Platform.Models.Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xC16A34", Offset = "0xC16A34", VA = "0xC16A34")]
		public static Request<Oculus.Platform.Models.Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xC16B48", Offset = "0xC16B48", VA = "0xC16B48")]
		public static Request<Oculus.Platform.Models.Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xC16C18", Offset = "0xC16C18", VA = "0xC16C18")]
		public static Request<Oculus.Platform.Models.Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xC16CE0", Offset = "0xC16CE0", VA = "0xC16CE0")]
		public static Request<Oculus.Platform.Models.Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xC16DB0", Offset = "0xC16DB0", VA = "0xC16DB0")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xC16E78", Offset = "0xC16E78", VA = "0xC16E78")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xC16F74", Offset = "0xC16F74", VA = "0xC16F74")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xC1703C", Offset = "0xC1703C", VA = "0xC1703C")]
		public static Request<Oculus.Platform.Models.Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xC1711C", Offset = "0xC1711C", VA = "0xC1711C")]
		public static Request<Oculus.Platform.Models.Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xC171FC", Offset = "0xC171FC", VA = "0xC171FC")]
		public static Request<Oculus.Platform.Models.Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xC17308", Offset = "0xC17308", VA = "0xC17308")]
		public static Request<Oculus.Platform.Models.Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xC173F0", Offset = "0xC173F0", VA = "0xC173F0")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xC174B8", Offset = "0xC174B8", VA = "0xC174B8")]
		public static Request<Oculus.Platform.Models.Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xC17588", Offset = "0xC17588", VA = "0xC17588")]
		public static Request<Oculus.Platform.Models.Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xC17668", Offset = "0xC17668", VA = "0xC17668")]
		public static Request<Oculus.Platform.Models.Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xC17748", Offset = "0xC17748", VA = "0xC17748")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xC17820", Offset = "0xC17820", VA = "0xC17820")]
		public static Request<Oculus.Platform.Models.Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xC168D4", Offset = "0xC168D4", VA = "0xC168D4")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xC17900", Offset = "0xC17900", VA = "0xC17900")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xC17978", Offset = "0xC17978", VA = "0xC17978")]
		public static void SetUpdateNotificationCallback(Message<Oculus.Platform.Models.Room>.Callback callback)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xC179F0", Offset = "0xC179F0", VA = "0xC179F0")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20004E3")]
	public static class Matchmaking
	{
		[Token(Token = "0x20004E4")]
		public class CustomQuery
		{
			[Token(Token = "0x20004E5")]
			public struct Criterion
			{
				[Token(Token = "0x400172E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x400172F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4001730")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6001C15")]
				[Address(RVA = "0x8FBD94", Offset = "0x8FBD94", VA = "0x8FBD94")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x400172C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x400172D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xC02BFC", Offset = "0xC02BFC", VA = "0xC02BFC")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6001C14")]
			[Address(RVA = "0xC03E80", Offset = "0xC03E80", VA = "0xC03E80")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xC02794", Offset = "0xC02794", VA = "0xC02794")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xC02A24", Offset = "0xC02A24", VA = "0xC02A24")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xC02B0C", Offset = "0xC02B0C", VA = "0xC02B0C")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xC030A4", Offset = "0xC030A4", VA = "0xC030A4")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xC03200", Offset = "0xC03200", VA = "0xC03200")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xC032D8", Offset = "0xC032D8", VA = "0xC032D8")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xC03398", Offset = "0xC03398", VA = "0xC03398")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xC034A0", Offset = "0xC034A0", VA = "0xC034A0")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xC035AC", Offset = "0xC035AC", VA = "0xC035AC")]
		public static Request<Oculus.Platform.Models.Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xC03694", Offset = "0xC03694", VA = "0xC03694")]
		public static Request<Oculus.Platform.Models.Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xC037A0", Offset = "0xC037A0", VA = "0xC037A0")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xC03890", Offset = "0xC03890", VA = "0xC03890")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xC0399C", Offset = "0xC0399C", VA = "0xC0399C")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xC03A8C", Offset = "0xC03A8C", VA = "0xC03A8C")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xC03B98", Offset = "0xC03B98", VA = "0xC03B98")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xC03C60", Offset = "0xC03C60", VA = "0xC03C60")]
		public static Request<Oculus.Platform.Models.Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xC03D40", Offset = "0xC03D40", VA = "0xC03D40")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xC03E08", Offset = "0xC03E08", VA = "0xC03E08")]
		public static void SetMatchFoundNotificationCallback(Message<Oculus.Platform.Models.Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public static class Net
	{
		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xC139F4", Offset = "0xC139F4", VA = "0xC139F4")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xC13B80", Offset = "0xC13B80", VA = "0xC13B80")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xC13C80", Offset = "0xC13C80", VA = "0xC13C80")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xC13D1C", Offset = "0xC13D1C", VA = "0xC13D1C")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xC13DB8", Offset = "0xC13DB8", VA = "0xC13DB8")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xC13E54", Offset = "0xC13E54", VA = "0xC13E54")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xC13EF4", Offset = "0xC13EF4", VA = "0xC13EF4")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xC13FEC", Offset = "0xC13FEC", VA = "0xC13FEC")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xC14084", Offset = "0xC14084", VA = "0xC14084")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xC14118", Offset = "0xC14118", VA = "0xC14118")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xC141E8", Offset = "0xC141E8", VA = "0xC141E8")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xC14260", Offset = "0xC14260", VA = "0xC14260")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xC142D8", Offset = "0xC142D8", VA = "0xC142D8")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public static class Leaderboards
	{
		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xC01ECC", Offset = "0xC01ECC", VA = "0xC01ECC")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xC01FCC", Offset = "0xC01FCC", VA = "0xC01FCC")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xC020CC", Offset = "0xC020CC", VA = "0xC020CC")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xC021C4", Offset = "0xC021C4", VA = "0xC021C4")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xC022AC", Offset = "0xC022AC", VA = "0xC022AC")]
		public static Request<LeaderboardEntryList> GetEntriesByIds(string leaderboardName, int limit, LeaderboardStartAt startAt, ulong[] userIDs)
		{
			return null;
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xC023B8", Offset = "0xC023B8", VA = "0xC023B8")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20004E8")]
	public static class Challenges
	{
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xBFF3F8", Offset = "0xBFF3F8", VA = "0xBFF3F8")]
		public static Request<ChallengeEntryList> GetNextEntries(ChallengeEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xBFF560", Offset = "0xBFF560", VA = "0xBFF560")]
		public static Request<ChallengeEntryList> GetPreviousEntries(ChallengeEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xBFF660", Offset = "0xBFF660", VA = "0xBFF660")]
		public static Request<ChallengeList> GetNextChallenges(ChallengeList list)
		{
			return null;
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xBFF760", Offset = "0xBFF760", VA = "0xBFF760")]
		public static Request<ChallengeList> GetPreviousChallenges(ChallengeList list)
		{
			return null;
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xBFF860", Offset = "0xBFF860", VA = "0xBFF860")]
		public static Request<Challenge> Create(string leaderboardName, ChallengeOptions challengeOptions)
		{
			return null;
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xBFF96C", Offset = "0xBFF96C", VA = "0xBFF96C")]
		public static Request<Challenge> DeclineInvite(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xBFFA3C", Offset = "0xBFFA3C", VA = "0xBFFA3C")]
		public static Request Delete(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xBFFB30", Offset = "0xBFFB30", VA = "0xBFFB30")]
		public static Request<Challenge> Get(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xBFFC00", Offset = "0xBFFC00", VA = "0xBFFC00")]
		public static Request<ChallengeEntryList> GetEntries(ulong challengeID, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xBFFCF8", Offset = "0xBFFCF8", VA = "0xBFFCF8")]
		public static Request<ChallengeEntryList> GetEntriesAfterRank(ulong challengeID, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xBFFDE0", Offset = "0xBFFDE0", VA = "0xBFFDE0")]
		public static Request<ChallengeEntryList> GetEntriesByIds(ulong challengeID, int limit, LeaderboardStartAt startAt, ulong[] userIDs)
		{
			return null;
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xBFFEEC", Offset = "0xBFFEEC", VA = "0xBFFEEC")]
		public static Request<ChallengeList> GetList(ChallengeOptions challengeOptions, int limit)
		{
			return null;
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xBFFFF8", Offset = "0xBFFFF8", VA = "0xBFFFF8")]
		public static Request<Challenge> Join(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xC000C8", Offset = "0xC000C8", VA = "0xC000C8")]
		public static Request<Challenge> Leave(ulong challengeID)
		{
			return null;
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xC00198", Offset = "0xC00198", VA = "0xC00198")]
		public static Request<Challenge> UpdateInfo(ulong challengeID, ChallengeOptions challengeOptions)
		{
			return null;
		}
	}
	[Token(Token = "0x20004E9")]
	public static class Voip
	{
		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xE7B1E8", Offset = "0xE7B1E8", VA = "0xE7B1E8")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xE7B554", Offset = "0xE7B554", VA = "0xE7B554")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xE7B288", Offset = "0xE7B288", VA = "0xE7B288")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xE7CCD8", Offset = "0xE7CCD8", VA = "0xE7CCD8")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xE7CDB0", Offset = "0xE7CDB0", VA = "0xE7CDB0")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xE7CE50", Offset = "0xE7CE50", VA = "0xE7CE50")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xE7CEEC", Offset = "0xE7CEEC", VA = "0xE7CEEC")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xE7CF88", Offset = "0xE7CF88", VA = "0xE7CF88")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xE7D02C", Offset = "0xE7D02C", VA = "0xE7D02C")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xE7D0D0", Offset = "0xE7D0D0", VA = "0xE7D0D0")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xE7D174", Offset = "0xE7D174", VA = "0xE7D174")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xE7D290", Offset = "0xE7D290", VA = "0xE7D290")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xE7B030", Offset = "0xE7B030", VA = "0xE7B030")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xE7B0A8", Offset = "0xE7B0A8", VA = "0xE7B0A8")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xE7D360", Offset = "0xE7D360", VA = "0xE7D360")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public static class Achievements
	{
		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xD56FD8", Offset = "0xD56FD8", VA = "0xD56FD8")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xD5716C", Offset = "0xD5716C", VA = "0xD5716C")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xD5731C", Offset = "0xD5731C", VA = "0xD5731C")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xD57470", Offset = "0xD57470", VA = "0xD57470")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xD575C4", Offset = "0xD575C4", VA = "0xD575C4")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xD57814", Offset = "0xD57814", VA = "0xD57814")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xD57A64", Offset = "0xD57A64", VA = "0xD57A64")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xD57BD8", Offset = "0xD57BD8", VA = "0xD57BD8")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xD57DFC", Offset = "0xD57DFC", VA = "0xD57DFC")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20004EB")]
	public static class Application
	{
		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xD5827C", Offset = "0xD5827C", VA = "0xD5827C")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xD583D0", Offset = "0xD583D0", VA = "0xD583D0")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x20004EC")]
	public static class AssetFile
	{
		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xD58AF4", Offset = "0xD58AF4", VA = "0xD58AF4")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xD58C60", Offset = "0xD58C60", VA = "0xD58C60")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xD58DCC", Offset = "0xD58DCC", VA = "0xD58DCC")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xD58F40", Offset = "0xD58F40", VA = "0xD58F40")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xD590AC", Offset = "0xD590AC", VA = "0xD590AC")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xD59218", Offset = "0xD59218", VA = "0xD59218")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xD5938C", Offset = "0xD5938C", VA = "0xD5938C")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xD594F8", Offset = "0xD594F8", VA = "0xD594F8")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xD59664", Offset = "0xD59664", VA = "0xD59664")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xD597D8", Offset = "0xD597D8", VA = "0xD597D8")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xD5992C", Offset = "0xD5992C", VA = "0xD5992C")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xD59A98", Offset = "0xD59A98", VA = "0xD59A98")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xD59C04", Offset = "0xD59C04", VA = "0xD59C04")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xD59D78", Offset = "0xD59D78", VA = "0xD59D78")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public static class Avatar
	{
	}
	[Token(Token = "0x20004EE")]
	public static class Cal
	{
	}
	[Token(Token = "0x20004EF")]
	public static class CloudStorage
	{
		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xC002A4", Offset = "0xC002A4", VA = "0xC002A4")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xC00384", Offset = "0xC00384", VA = "0xC00384")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xC00464", Offset = "0xC00464", VA = "0xC00464")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xC00534", Offset = "0xC00534", VA = "0xC00534")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xC00614", Offset = "0xC00614", VA = "0xC00614")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xC006E4", Offset = "0xC006E4", VA = "0xC006E4")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xC007C4", Offset = "0xC007C4", VA = "0xC007C4")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xC008AC", Offset = "0xC008AC", VA = "0xC008AC")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xC00994", Offset = "0xC00994", VA = "0xC00994")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xC00AA8", Offset = "0xC00AA8", VA = "0xC00AA8")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F0")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xC00C00", Offset = "0xC00C00", VA = "0xC00C00")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x20004F1")]
	public static class Colocation
	{
	}
	[Token(Token = "0x20004F2")]
	public static class Entitlements
	{
		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xC01568", Offset = "0xC01568", VA = "0xC01568")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x20004F3")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x20004F4")]
	public static class HTTP
	{
	}
	[Token(Token = "0x20004F5")]
	public static class IAP
	{
		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xC01628", Offset = "0xC01628", VA = "0xC01628")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xC016F0", Offset = "0xC016F0", VA = "0xC016F0")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xC017D4", Offset = "0xC017D4", VA = "0xC017D4")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xC0189C", Offset = "0xC0189C", VA = "0xC0189C")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xC01964", Offset = "0xC01964", VA = "0xC01964")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xC01A84", Offset = "0xC01A84", VA = "0xC01A84")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xC01BDC", Offset = "0xC01BDC", VA = "0xC01BDC")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F6")]
	public static class LanguagePack
	{
		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xC01D34", Offset = "0xC01D34", VA = "0xC01D34")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xC01DFC", Offset = "0xC01DFC", VA = "0xC01DFC")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F7")]
	public static class Livestreaming
	{
		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xC024C4", Offset = "0xC024C4", VA = "0xC024C4")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xC0258C", Offset = "0xC0258C", VA = "0xC0258C")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xC02654", Offset = "0xC02654", VA = "0xC02654")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xC0271C", Offset = "0xC0271C", VA = "0xC0271C")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public static class Media
	{
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xC0459C", Offset = "0xC0459C", VA = "0xC0459C")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F9")]
	public static class NetSync
	{
		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xC14350", Offset = "0xC14350", VA = "0xC14350")]
		public static void SetConnectionStatusChangedNotificationCallback(Message<NetSyncConnection>.Callback callback)
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xC143C8", Offset = "0xC143C8", VA = "0xC143C8")]
		public static void SetSessionsChangedNotificationCallback(Message<NetSyncSessionsChangedNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public static class Notifications
	{
		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xC14740", Offset = "0xC14740", VA = "0xC14740")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xC14808", Offset = "0xC14808", VA = "0xC14808")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xC148D0", Offset = "0xC148D0", VA = "0xC148D0")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20004FB")]
	public static class Parties
	{
		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xC14D74", Offset = "0xC14D74", VA = "0xC14D74")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xC14E3C", Offset = "0xC14E3C", VA = "0xC14E3C")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public static class RichPresence
	{
		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xC155B8", Offset = "0xC155B8", VA = "0xC155B8")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xC15678", Offset = "0xC15678", VA = "0xC15678")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xC15740", Offset = "0xC15740", VA = "0xC15740")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xC15884", Offset = "0xC15884", VA = "0xC15884")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20004FD")]
	public static class Users
	{
		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xE61138", Offset = "0xE61138", VA = "0xE61138")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xE7C45C", Offset = "0xE7C45C", VA = "0xE7C45C")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xE61070", Offset = "0xE61070", VA = "0xE61070")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xE61208", Offset = "0xE61208", VA = "0xE61208")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xE7C524", Offset = "0xE7C524", VA = "0xE7C524")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xE7C5EC", Offset = "0xE7C5EC", VA = "0xE7C5EC")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xE7C6E8", Offset = "0xE7C6E8", VA = "0xE7C6E8")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xE7C7B8", Offset = "0xE7C7B8", VA = "0xE7C7B8")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xE60FA8", Offset = "0xE60FA8", VA = "0xE60FA8")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xE7C880", Offset = "0xE7C880", VA = "0xE7C880")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xE7C950", Offset = "0xE7C950", VA = "0xE7C950")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xE7CA18", Offset = "0xE7CA18", VA = "0xE7CA18")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xE7CB78", Offset = "0xE7CB78", VA = "0xE7CB78")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20004FE")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4001732")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35D90", Offset = "0xA35D90")]
		Success = 0,
		[Token(Token = "0x4001733")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35DC8", Offset = "0xA35DC8")]
		Uninitialized = -1,
		[Token(Token = "0x4001734")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35E00", Offset = "0xA35E00")]
		PreLoaded = -2,
		[Token(Token = "0x4001735")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35E38", Offset = "0xA35E38")]
		FileInvalid = -3,
		[Token(Token = "0x4001736")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35E70", Offset = "0xA35E70")]
		SignatureInvalid = -4,
		[Token(Token = "0x4001737")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35EA8", Offset = "0xA35EA8")]
		UnableToVerify = -5,
		[Token(Token = "0x4001738")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35EE0", Offset = "0xA35EE0")]
		VersionMismatch = -6,
		[Token(Token = "0x4001739")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35F18", Offset = "0xA35F18")]
		Unknown = -7,
		[Token(Token = "0x400173A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35F50", Offset = "0xA35F50")]
		InvalidCredentials = -8,
		[Token(Token = "0x400173B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA35F88", Offset = "0xA35F88")]
		NotEntitled = -9
	}
	[Token(Token = "0x20004FF")]
	public static class PlatformInternal
	{
		[Token(Token = "0x2000500")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x400173D")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x400173E")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x400173F")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4001740")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4001741")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4001742")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4001743")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x4001744")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x4001745")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x4001746")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4001747")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4001748")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4001749")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x400174A")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x400174B")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x400174C")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x400174D")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x400174E")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x400174F")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4001750")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4001751")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4001752")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4001753")]
			NetSync_Connect = 1684899167u,
			[Token(Token = "0x4001754")]
			NetSync_Disconnect = 359268021u,
			[Token(Token = "0x4001755")]
			NetSync_GetSessions = 1859521077u,
			[Token(Token = "0x4001756")]
			NetSync_GetVoipAttenuation = 288016919u,
			[Token(Token = "0x4001757")]
			NetSync_GetVoipAttenuationDefault = 1467721888u,
			[Token(Token = "0x4001758")]
			NetSync_SetVoipAttenuation = 882366454u,
			[Token(Token = "0x4001759")]
			NetSync_SetVoipAttenuationModel = 1788128654u,
			[Token(Token = "0x400175A")]
			NetSync_SetVoipChannelCfg = 1553310963u,
			[Token(Token = "0x400175B")]
			NetSync_SetVoipGroup = 1477614734u,
			[Token(Token = "0x400175C")]
			NetSync_SetVoipListentoChannels = 1590749746u,
			[Token(Token = "0x400175D")]
			NetSync_SetVoipMicSource = 855832432u,
			[Token(Token = "0x400175E")]
			NetSync_SetVoipSessionMuted = 1434844938u,
			[Token(Token = "0x400175F")]
			NetSync_SetVoipSpeaktoChannels = 766496213u,
			[Token(Token = "0x4001760")]
			NetSync_SetVoipStreamMode = 1742839095u,
			[Token(Token = "0x4001761")]
			Party_Create = 450042703u,
			[Token(Token = "0x4001762")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4001763")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4001764")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4001765")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4001766")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4001767")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4001768")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4001769")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x400176A")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x400176B")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x400176C")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x400176D")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x400176E")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x400176F")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4001770")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4001771")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4001772")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4001773")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4001774")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4001775")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4001776")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4001777")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4001778")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4001779")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x2000501")]
		public static class HTTP
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xC15058", Offset = "0xC15058", VA = "0xC15058")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x2000502")]
		public static class Users
		{
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xC150D0", Offset = "0xC150D0", VA = "0xC150D0")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xC14EB4", Offset = "0xC14EB4", VA = "0xC14EB4")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xC077D8", Offset = "0xC077D8", VA = "0xC077D8")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xC14F14", Offset = "0xC14F14", VA = "0xC14F14")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000503")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000302")]
		public static string AppID
		{
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xC01530", Offset = "0xC01530", VA = "0xC01530")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xC15350", Offset = "0xC15350", VA = "0xC15350")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public static string MobileAppID
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xC01504", Offset = "0xC01504", VA = "0xC01504")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xC15380", Offset = "0xC15380", VA = "0xC15380")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xC011DC", Offset = "0xC011DC", VA = "0xC011DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0xC153B0", Offset = "0xC153B0", VA = "0xC153B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0xC1523C", Offset = "0xC1523C", VA = "0xC1523C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0xC153E4", Offset = "0xC153E4", VA = "0xC153E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xC15438", Offset = "0xC15438", VA = "0xC15438")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x6001CA0")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6001CA1")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001CA2")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class Request
	{
		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35FF0", Offset = "0xA35FF0")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x17000306")]
		public ulong RequestID
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xBFDCB0", Offset = "0xBFDCB0", VA = "0xBFDCB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42EAC", Offset = "0xA42EAC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xC15498", Offset = "0xC15498", VA = "0xC15498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42EBC", Offset = "0xA42EBC")]
			set
			{
			}
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xBFFB04", Offset = "0xBFFB04", VA = "0xBFFB04")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xC154A0", Offset = "0xC154A0", VA = "0xC154A0")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xC1551C", Offset = "0xC1551C", VA = "0xC1551C", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xBFECA0", Offset = "0xBFECA0", VA = "0xBFECA0")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000506")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4001782")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36000", Offset = "0xA36000")]
		Unknown,
		[Token(Token = "0x4001783")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36038", Offset = "0xA36038")]
		None,
		[Token(Token = "0x4001784")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36070", Offset = "0xA36070")]
		CurrentCapacity,
		[Token(Token = "0x4001785")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA360A8", Offset = "0xA360A8")]
		StartedAgo,
		[Token(Token = "0x4001786")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA360E0", Offset = "0xA360E0")]
		EndingIn,
		[Token(Token = "0x4001787")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36118", Offset = "0xA36118")]
		LookingForAMatch
	}
	[Token(Token = "0x2000507")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xC159DC", Offset = "0xC159DC", VA = "0xC159DC")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xC15A54", Offset = "0xC15A54", VA = "0xC15A54")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xC15AD0", Offset = "0xC15AD0", VA = "0xC15AD0")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xC15B54", Offset = "0xC15B54", VA = "0xC15B54")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xC15BC0", Offset = "0xC15BC0", VA = "0xC15BC0")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xC15C3C", Offset = "0xC15C3C", VA = "0xC15C3C")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xC15CB8", Offset = "0xC15CB8", VA = "0xC15CB8")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xC15D34", Offset = "0xC15D34", VA = "0xC15D34")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xC15DB0", Offset = "0xC15DB0", VA = "0xC15DB0")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xC15E2C", Offset = "0xC15E2C", VA = "0xC15E2C")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xC15EA8", Offset = "0xC15EA8", VA = "0xC15EA8")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xC15F24", Offset = "0xC15F24", VA = "0xC15F24")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xC15FA0", Offset = "0xC15FA0", VA = "0xC15FA0")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xC15834", Offset = "0xC15834", VA = "0xC15834")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xC1601C", Offset = "0xC1601C", VA = "0xC1601C", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public enum RoomJoinability
	{
		[Token(Token = "0x400178A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36150", Offset = "0xA36150")]
		Unknown,
		[Token(Token = "0x400178B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36188", Offset = "0xA36188")]
		AreIn,
		[Token(Token = "0x400178C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA361C0", Offset = "0xA361C0")]
		AreKicked,
		[Token(Token = "0x400178D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA361F8", Offset = "0xA361F8")]
		CanJoin,
		[Token(Token = "0x400178E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36230", Offset = "0xA36230")]
		IsFull,
		[Token(Token = "0x400178F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36268", Offset = "0xA36268")]
		NoViewer,
		[Token(Token = "0x4001790")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA362A0", Offset = "0xA362A0")]
		PolicyPrevents
	}
	[Token(Token = "0x2000509")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4001792")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA362D8", Offset = "0xA362D8")]
		None,
		[Token(Token = "0x4001793")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36310", Offset = "0xA36310")]
		Everyone,
		[Token(Token = "0x4001794")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36348", Offset = "0xA36348")]
		FriendsOfMembers,
		[Token(Token = "0x4001795")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36380", Offset = "0xA36380")]
		FriendsOfOwner,
		[Token(Token = "0x4001796")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA363B8", Offset = "0xA363B8")]
		InvitedUsers,
		[Token(Token = "0x4001797")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA363F0", Offset = "0xA363F0")]
		Unknown
	}
	[Token(Token = "0x200050A")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4001799")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36428", Offset = "0xA36428")]
		Unknown,
		[Token(Token = "0x400179A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36460", Offset = "0xA36460")]
		Lock,
		[Token(Token = "0x400179B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36498", Offset = "0xA36498")]
		Unlock
	}
	[Token(Token = "0x200050B")]
	public class RoomOptions
	{
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xC160E0", Offset = "0xC160E0", VA = "0xC160E0")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xC16158", Offset = "0xC16158", VA = "0xC16158")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xC161DC", Offset = "0xC161DC", VA = "0xC161DC")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xC16248", Offset = "0xC16248", VA = "0xC16248")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xC162C4", Offset = "0xC162C4", VA = "0xC162C4")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xC16340", Offset = "0xC16340", VA = "0xC16340")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xC163BC", Offset = "0xC163BC", VA = "0xC163BC")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xC16438", Offset = "0xC16438", VA = "0xC16438")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xC164B4", Offset = "0xC164B4", VA = "0xC164B4")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xC16530", Offset = "0xC16530", VA = "0xC16530")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xC16580", Offset = "0xC16580", VA = "0xC16580", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public enum RoomType
	{
		[Token(Token = "0x400179E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA364D0", Offset = "0xA364D0")]
		Unknown,
		[Token(Token = "0x400179F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36508", Offset = "0xA36508")]
		Matchmaking,
		[Token(Token = "0x40017A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36540", Offset = "0xA36540")]
		Moderated,
		[Token(Token = "0x40017A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36578", Offset = "0xA36578")]
		Private,
		[Token(Token = "0x40017A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA365B0", Offset = "0xA365B0")]
		Solo
	}
	[Token(Token = "0x200050D")]
	public enum SdkAccountType
	{
		[Token(Token = "0x40017A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA365E8", Offset = "0xA365E8")]
		Unknown,
		[Token(Token = "0x40017A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36620", Offset = "0xA36620")]
		Oculus,
		[Token(Token = "0x40017A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36658", Offset = "0xA36658")]
		FacebookGameroom
	}
	[Token(Token = "0x200050E")]
	public enum SendPolicy
	{
		[Token(Token = "0x40017A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36690", Offset = "0xA36690")]
		Unreliable,
		[Token(Token = "0x40017A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA366C8", Offset = "0xA366C8")]
		Reliable,
		[Token(Token = "0x40017AA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36700", Offset = "0xA36700")]
		Unknown
	}
	[Token(Token = "0x200050F")]
	public enum ServiceProvider
	{
		[Token(Token = "0x40017AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36738", Offset = "0xA36738")]
		Unknown,
		[Token(Token = "0x40017AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36770", Offset = "0xA36770")]
		Dropbox,
		[Token(Token = "0x40017AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA367A8", Offset = "0xA367A8")]
		Facebook,
		[Token(Token = "0x40017AF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA367E0", Offset = "0xA367E0")]
		Google,
		[Token(Token = "0x40017B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36818", Offset = "0xA36818")]
		Instagram,
		[Token(Token = "0x40017B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36850", Offset = "0xA36850")]
		RemoteMedia
	}
	[Token(Token = "0x2000510")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x40017B3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36888", Offset = "0xA36888")]
		Unknown,
		[Token(Token = "0x40017B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA368C0", Offset = "0xA368C0")]
		Shared,
		[Token(Token = "0x40017B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA368F8", Offset = "0xA368F8")]
		Canceled
	}
	[Token(Token = "0x2000511")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2EF58", Offset = "0xA2EF58")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xE7B8B4", Offset = "0xE7B8B4", VA = "0xE7B8B4")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xE7BA4C", Offset = "0xE7BA4C", VA = "0xE7BA4C")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xE7BB10", Offset = "0xE7BB10", VA = "0xE7BB10")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x17000307")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xE7C03C", Offset = "0xE7C03C", VA = "0xE7C03C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xE7C08C", Offset = "0xE7C08C", VA = "0xE7C08C")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xE7C090", Offset = "0xE7C090", VA = "0xE7C090")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xE7C0E0", Offset = "0xE7C0E0", VA = "0xE7C0E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xE7B9FC", Offset = "0xE7B9FC", VA = "0xE7B9FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xE7C0E4", Offset = "0xE7C0E4", VA = "0xE7C0E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xE7C0E8", Offset = "0xE7C0E8", VA = "0xE7C0E8")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x40017B7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36930", Offset = "0xA36930")]
		Unknown,
		[Token(Token = "0x40017B8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36968", Offset = "0xA36968")]
		Unavailable,
		[Token(Token = "0x40017B9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA369A0", Offset = "0xA369A0")]
		Suppressed,
		[Token(Token = "0x40017BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA369D8", Offset = "0xA369D8")]
		Active
	}
	[Token(Token = "0x2000515")]
	public enum TimeWindow
	{
		[Token(Token = "0x40017BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36A10", Offset = "0xA36A10")]
		Unknown,
		[Token(Token = "0x40017BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36A48", Offset = "0xA36A48")]
		OneHour,
		[Token(Token = "0x40017BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36A80", Offset = "0xA36A80")]
		OneDay,
		[Token(Token = "0x40017BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36AB8", Offset = "0xA36AB8")]
		OneWeek,
		[Token(Token = "0x40017C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36AF0", Offset = "0xA36AF0")]
		ThirtyDays,
		[Token(Token = "0x40017C1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36B28", Offset = "0xA36B28")]
		NinetyDays
	}
	[Token(Token = "0x2000516")]
	public class UserOptions
	{
		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xE7C0F0", Offset = "0xE7C0F0", VA = "0xE7C0F0")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xE7C168", Offset = "0xE7C168", VA = "0xE7C168")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xE7C1E4", Offset = "0xE7C1E4", VA = "0xE7C1E4")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xE7C260", Offset = "0xE7C260", VA = "0xE7C260")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xE7C2CC", Offset = "0xE7C2CC", VA = "0xE7C2CC")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xE7C348", Offset = "0xE7C348", VA = "0xE7C348")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xE7C398", Offset = "0xE7C398", VA = "0xE7C398", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public enum UserOrdering
	{
		[Token(Token = "0x40017C4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36B60", Offset = "0xA36B60")]
		Unknown,
		[Token(Token = "0x40017C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36B98", Offset = "0xA36B98")]
		None,
		[Token(Token = "0x40017C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36BD0", Offset = "0xA36BD0")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000518")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40017C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36C08", Offset = "0xA36C08")]
		Unknown,
		[Token(Token = "0x40017C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36C40", Offset = "0xA36C40")]
		Online,
		[Token(Token = "0x40017CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36C78", Offset = "0xA36C78")]
		Offline
	}
	[Token(Token = "0x2000519")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x200051A")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xE7DB54", Offset = "0xE7DB54", VA = "0xE7DB54")]
			private void Awake()
			{
			}

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xE7DC0C", Offset = "0xE7DC0C", VA = "0xE7DC0C")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xE7E1DC", Offset = "0xE7E1DC", VA = "0xE7E1DC")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x1700030A")]
		public ulong senderID
		{
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xE7B120", Offset = "0xE7B120", VA = "0xE7B120")]
			set
			{
			}
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xE7D3D8", Offset = "0xE7D3D8", VA = "0xE7D3D8")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xE7D3DC", Offset = "0xE7D3DC", VA = "0xE7D3DC")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xE7D418", Offset = "0xE7D418", VA = "0xE7D418")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xE7D714", Offset = "0xE7D714", VA = "0xE7D714")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xE7D744", Offset = "0xE7D744", VA = "0xE7D744", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xE7D7AC", Offset = "0xE7D7AC", VA = "0xE7D7AC")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xE7D834", Offset = "0xE7D834", VA = "0xE7D834")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xE7DB48", Offset = "0xE7DB48", VA = "0xE7DB48")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40017D4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36CB0", Offset = "0xA36CB0")]
		Unknown,
		[Token(Token = "0x40017D5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36CE8", Offset = "0xA36CE8")]
		B16000,
		[Token(Token = "0x40017D6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36D20", Offset = "0xA36D20")]
		B24000,
		[Token(Token = "0x40017D7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36D58", Offset = "0xA36D58")]
		B32000,
		[Token(Token = "0x40017D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36D90", Offset = "0xA36D90")]
		B64000,
		[Token(Token = "0x40017D9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36DC8", Offset = "0xA36DC8")]
		B96000,
		[Token(Token = "0x40017DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36E00", Offset = "0xA36E00")]
		B128000
	}
	[Token(Token = "0x200051C")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40017DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36E38", Offset = "0xA36E38")]
		Unknown,
		[Token(Token = "0x40017DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36E70", Offset = "0xA36E70")]
		Enabled,
		[Token(Token = "0x40017DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36EA8", Offset = "0xA36EA8")]
		Disabled
	}
	[Token(Token = "0x200051D")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40017E0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36EE0", Offset = "0xA36EE0")]
		Unknown,
		[Token(Token = "0x40017E1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36F18", Offset = "0xA36F18")]
		Muted,
		[Token(Token = "0x40017E2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36F50", Offset = "0xA36F50")]
		Unmuted
	}
	[Token(Token = "0x200051E")]
	public class VoipOptions
	{
		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xE7E1E4", Offset = "0xE7E1E4", VA = "0xE7E1E4")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xE7E25C", Offset = "0xE7E25C", VA = "0xE7E25C")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xE7E2D8", Offset = "0xE7E2D8", VA = "0xE7E2D8")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xE7D240", Offset = "0xE7D240", VA = "0xE7D240")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xE7E354", Offset = "0xE7E354", VA = "0xE7E354", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xE7E418", Offset = "0xE7E418", VA = "0xE7E418", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xE7E4D8", Offset = "0xE7E4D8", VA = "0xE7E4D8", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xE7E4E0", Offset = "0xE7E4E0", VA = "0xE7E4E0", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xE7E580", Offset = "0xE7E580", VA = "0xE7E580", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xE7D7A4", Offset = "0xE7D7A4", VA = "0xE7D7A4")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40017E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36F88", Offset = "0xA36F88")]
		Unknown,
		[Token(Token = "0x40017E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36FC0", Offset = "0xA36FC0")]
		HZ24000,
		[Token(Token = "0x40017E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA36FF8", Offset = "0xA36FF8")]
		HZ44100,
		[Token(Token = "0x40017E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xA37030", Offset = "0xA37030")]
		HZ48000
	}
	[Token(Token = "0x2000521")]
	public class WindowsPlatform
	{
		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2EF6C", Offset = "0xA2EF6C")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xE7E584", Offset = "0xE7E584", VA = "0xE7E584")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xE7E65C", Offset = "0xE7E65C", VA = "0xE7E65C")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xE7E69C", Offset = "0xE7E69C", VA = "0xE7E69C")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xE7E788", Offset = "0xE7E788", VA = "0xE7E788")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xE7E8A4", Offset = "0xE7E8A4", VA = "0xE7E8A4")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x2000523")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xC08834", Offset = "0xC08834", VA = "0xC08834")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xC12424", Offset = "0xC12424", VA = "0xC12424")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xC089A8", Offset = "0xC089A8", VA = "0xC089A8")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000526")]
	public class AchievementProgress
	{
		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xC124DC", Offset = "0xC124DC", VA = "0xC124DC")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xC08C9C", Offset = "0xC08C9C", VA = "0xC08C9C")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xC08F90", Offset = "0xC08F90", VA = "0xC08F90")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xC09118", Offset = "0xC09118", VA = "0xC09118")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class AssetDetails
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37068", Offset = "0xA37068")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xC092BC", Offset = "0xC092BC", VA = "0xC092BC")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xC094F4", Offset = "0xC094F4", VA = "0xC094F4")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xC097B8", Offset = "0xC097B8", VA = "0xC097B8")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200052D")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xC09960", Offset = "0xC09960", VA = "0xC09960")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xC09B08", Offset = "0xC09B08", VA = "0xC09B08")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xC09C8C", Offset = "0xC09C8C", VA = "0xC09C8C")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xC09E44", Offset = "0xC09E44", VA = "0xC09E44")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xC09FD8", Offset = "0xC09FD8", VA = "0xC09FD8")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xC12650", Offset = "0xC12650", VA = "0xC12650")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xC0A1AC", Offset = "0xC0A1AC", VA = "0xC0A1AC")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class Challenge
	{
		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ChallengeCreationType CreationType;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Description;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly DateTime EndDate;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA370A0", Offset = "0xA370A0")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly Leaderboard Leaderboard;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList ParticipantsOptional;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA370D8", Offset = "0xA370D8")]
		public readonly UserList Participants;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly DateTime StartDate;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly string Title;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly ChallengeVisibility Visibility;

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xC0A470", Offset = "0xC0A470", VA = "0xC0A470")]
		public Challenge(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class ChallengeList : DeserializableList<Challenge>
	{
		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xC0AA64", Offset = "0xC0AA64", VA = "0xC0AA64")]
		public ChallengeList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class ChallengeEntry
	{
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xC12770", Offset = "0xC12770", VA = "0xC12770")]
		public ChallengeEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class ChallengeEntryList : DeserializableList<ChallengeEntry>
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xC0A750", Offset = "0xC0A750", VA = "0xC0A750")]
		public ChallengeEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xC0AD78", Offset = "0xC0AD78", VA = "0xC0AD78")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class CloudStorageData
	{
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xC0AF44", Offset = "0xC0AF44", VA = "0xC0AF44")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xC0B3DC", Offset = "0xC0B3DC", VA = "0xC0B3DC")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xC0B0E8", Offset = "0xC0B0E8", VA = "0xC0B0E8")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xC0B5C0", Offset = "0xC0B5C0", VA = "0xC0B5C0")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA2EF80", Offset = "0xA2EF80")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x1700030B")]
		public int Count
		{
			[Token(Token = "0x6001D12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030C")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001D13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030D")]
		public T Item
		{
			[Token(Token = "0x6001D15")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001D16")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA43F54", Offset = "0xA43F54")]
		public List<T> Data
		{
			[Token(Token = "0x6001D21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001D22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000310")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001D23")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000311")]
		public string NextUrl
		{
			[Token(Token = "0x6001D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001D25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D14")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001D17")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001D18")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D19")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1A")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001D1B")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001D1C")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001D1D")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1E")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001D1F")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001D20")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x200053E")]
	public class Destination
	{
		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xC1285C", Offset = "0xC1285C", VA = "0xC1285C")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xC0B764", Offset = "0xC0B764", VA = "0xC0B764")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class Error
	{
		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xC048BC", Offset = "0xC048BC", VA = "0xC048BC")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000541")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xC0BA58", Offset = "0xC0BA58", VA = "0xC0BA58")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000542")]
	public class InstalledApplication
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xC12904", Offset = "0xC12904", VA = "0xC12904")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xC0BCEC", Offset = "0xC0BCEC", VA = "0xC0BCEC")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xC125A8", Offset = "0xC125A8", VA = "0xC125A8")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000545")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xC0C010", Offset = "0xC0C010", VA = "0xC0C010")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class LaunchDetails
	{
		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DestinationApiName;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchSource;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37110", Offset = "0xA37110")]
		public readonly UserList Users;

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xC129CC", Offset = "0xC129CC", VA = "0xC129CC")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xC0C19C", Offset = "0xC0C19C", VA = "0xC0C19C")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xC0C388", Offset = "0xC0C388", VA = "0xC0C388")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xC0C570", Offset = "0xC0C570", VA = "0xC0C570")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class Leaderboard
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xC126E8", Offset = "0xC126E8", VA = "0xC126E8")]
		public Leaderboard(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xC12AE8", Offset = "0xC12AE8", VA = "0xC12AE8")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xC0C7C4", Offset = "0xC0C7C4", VA = "0xC0C7C4")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class LinkedAccount
	{
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xC12BD4", Offset = "0xC12BD4", VA = "0xC12BD4")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xC0CB38", Offset = "0xC0CB38", VA = "0xC0CB38")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xC0CE5C", Offset = "0xC0CE5C", VA = "0xC0CE5C")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xC0D034", Offset = "0xC0D034", VA = "0xC0D034")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xC0D1A8", Offset = "0xC0D1A8", VA = "0xC0D1A8")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xC0D3CC", Offset = "0xC0D3CC", VA = "0xC0D3CC")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xC0D560", Offset = "0xC0D560", VA = "0xC0D560")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xC12E54", Offset = "0xC12E54", VA = "0xC12E54")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xC12C7C", Offset = "0xC12C7C", VA = "0xC12C7C")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xC0D780", Offset = "0xC0D780", VA = "0xC0D780")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000557")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37148", Offset = "0xA37148")]
		public readonly User User;

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xC12F20", Offset = "0xC12F20", VA = "0xC12F20")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000558")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xC13004", Offset = "0xC13004", VA = "0xC13004")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37180", Offset = "0xA37180")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xC0D94C", Offset = "0xC0D94C", VA = "0xC0D94C")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xC0DB84", Offset = "0xC0DB84", VA = "0xC0DB84")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xC0E18C", Offset = "0xC0E18C", VA = "0xC0E18C")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class NetSyncConnection
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncDisconnectReason DisconnectReason;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly NetSyncConnectionStatus Status;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string ZoneId;

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xC0E350", Offset = "0xC0E350", VA = "0xC0E350")]
		public NetSyncConnection(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class NetSyncSession
	{
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool Muted;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VoipGroup;

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xC131DC", Offset = "0xC131DC", VA = "0xC131DC")]
		public NetSyncSession(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class NetSyncSessionList : DeserializableList<NetSyncSession>
	{
		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xC0E564", Offset = "0xC0E564", VA = "0xC0E564")]
		public NetSyncSessionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class NetSyncSessionsChangedNotification
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncSessionList Sessions;

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xC0E828", Offset = "0xC0E828", VA = "0xC0E828")]
		public NetSyncSessionsChangedNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class NetSyncSetSessionPropertyResult
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly NetSyncSession Session;

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xC0EA30", Offset = "0xC0EA30", VA = "0xC0EA30")]
		public NetSyncSetSessionPropertyResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class NetSyncVoipAttenuationValue
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float Decibels;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float Distance;

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xC132A8", Offset = "0xC132A8", VA = "0xC132A8")]
		public NetSyncVoipAttenuationValue(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class NetSyncVoipAttenuationValueList : DeserializableList<NetSyncVoipAttenuationValue>
	{
		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xC0EC28", Offset = "0xC0EC28", VA = "0xC0EC28")]
		public NetSyncVoipAttenuationValueList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class NetworkingPeer
	{
		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA371B8", Offset = "0xA371B8")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA371C8", Offset = "0xA371C8")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x17000313")]
		public ulong ID
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xC13350", Offset = "0xC13350", VA = "0xC13350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42ECC", Offset = "0xA42ECC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xC13340", Offset = "0xC13340", VA = "0xC13340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42EDC", Offset = "0xA42EDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xC13358", Offset = "0xC13358", VA = "0xC13358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42EEC", Offset = "0xA42EEC")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xC13348", Offset = "0xC13348", VA = "0xC13348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42EFC", Offset = "0xA42EFC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xC0EF10", Offset = "0xC0EF10", VA = "0xC0EF10")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x2000564")]
	public class OrgScopedID
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xC0F038", Offset = "0xC0F038", VA = "0xC0F038")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000565")]
	public class Party
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA371D8", Offset = "0xA371D8")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37210", Offset = "0xA37210")]
		public readonly User Leader;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37248", Offset = "0xA37248")]
		public readonly Room Room;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37280", Offset = "0xA37280")]
		public readonly UserList Users;

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xC0F20C", Offset = "0xC0F20C", VA = "0xC0F20C")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000566")]
	public class PartyID
	{
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xC0F578", Offset = "0xC0F578", VA = "0xC0F578")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xC0F7D8", Offset = "0xC0F7D8", VA = "0xC0F7D8")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class Pid
	{
		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xC13360", Offset = "0xC13360", VA = "0xC13360")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xC0F9AC", Offset = "0xC0F9AC", VA = "0xC0F9AC")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class PingResult
	{
		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA372B8", Offset = "0xA372B8")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x17000315")]
		public ulong ID
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xC133F0", Offset = "0xC133F0", VA = "0xC133F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F0C", Offset = "0xA42F0C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xC133E8", Offset = "0xC133E8", VA = "0xC133E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F1C", Offset = "0xA42F1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xC133F8", Offset = "0xC133F8", VA = "0xC133F8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000317")]
		public bool IsTimeout
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xC13474", Offset = "0xC13474", VA = "0xC13474")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xC0FCF0", Offset = "0xC0FCF0", VA = "0xC0FCF0")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class PlatformInitialize
	{
		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xC0FE1C", Offset = "0xC0FE1C", VA = "0xC0FE1C")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200056C")]
	public class Product
	{
		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xC134D0", Offset = "0xC134D0", VA = "0xC134D0")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xC0FF90", Offset = "0xC0FF90", VA = "0xC0FF90")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class Purchase
	{
		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xC10284", Offset = "0xC10284", VA = "0xC10284")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xC10428", Offset = "0xC10428", VA = "0xC10428")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000570")]
	public class Room
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA372C8", Offset = "0xA372C8")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37300", Offset = "0xA37300")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37338", Offset = "0xA37338")]
		public readonly User Owner;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA37370", Offset = "0xA37370")]
		public readonly TeamList Teams;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA373A8", Offset = "0xA373A8")]
		public readonly UserList Users;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xC0DD50", Offset = "0xC0DD50", VA = "0xC0DD50")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xC10CA0", Offset = "0xC10CA0", VA = "0xC10CA0")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xC10808", Offset = "0xC10808", VA = "0xC10808")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xC109AC", Offset = "0xC109AC", VA = "0xC109AC")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class SdkAccount
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xC13760", Offset = "0xC13760", VA = "0xC13760")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xC1116C", Offset = "0xC1116C", VA = "0xC1116C")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000576")]
	public class ShareMediaResult
	{
		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xC11430", Offset = "0xC11430", VA = "0xC11430")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000577")]
	public class SystemPermission
	{
		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xC116BC", Offset = "0xC116BC", VA = "0xC116BC")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class SystemVoipState
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xC11844", Offset = "0xC11844", VA = "0xC11844")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class Team
	{
		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xC137F8", Offset = "0xC137F8", VA = "0xC137F8")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xC13588", Offset = "0xC13588", VA = "0xC13588")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class User
	{
		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DisplayName;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string ImageURL;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string InviteToken;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string OculusID;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Presence;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string PresenceDestinationApiName;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xC119C8", Offset = "0xC119C8", VA = "0xC119C8")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xC11EC0", Offset = "0xC11EC0", VA = "0xC11EC0")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200057D")]
	public class UserAndRoom
	{
		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA373E0", Offset = "0xA373E0")]
		public readonly Room Room;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xC138D4", Offset = "0xC138D4", VA = "0xC138D4")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xC11BCC", Offset = "0xC11BCC", VA = "0xC11BCC")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class UserProof
	{
		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xC121B4", Offset = "0xC121B4", VA = "0xC121B4")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class UserReportID
	{
		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xC12388", Offset = "0xC12388", VA = "0xC12388")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x2000581")]
	public class P2PManager
	{
		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x17000318")]
		public bool Connected
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xE767E4", Offset = "0xE767E4", VA = "0xE767E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000319")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x6001D78")]
			[Address(RVA = "0xE76FC0", Offset = "0xE76FC0", VA = "0xE76FC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xE764D8", Offset = "0xE764D8", VA = "0xE764D8")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xE76640", Offset = "0xE76640", VA = "0xE76640")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xE767B0", Offset = "0xE767B0", VA = "0xE767B0")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xE767F4", Offset = "0xE767F4", VA = "0xE767F4")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xE76A24", Offset = "0xE76A24", VA = "0xE76A24")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xE77004", Offset = "0xE77004", VA = "0xE77004")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xE7724C", Offset = "0xE7724C", VA = "0xE7724C")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xE772F4", Offset = "0xE772F4", VA = "0xE772F4")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x2000582")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000583")]
		public enum State
		{
			[Token(Token = "0x400190B")]
			INITIALIZING,
			[Token(Token = "0x400190C")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x400190D")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x400190E")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x400190F")]
			HANGUP
		}

		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EFB8", Offset = "0xA2EFB8")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xE795F0", Offset = "0xE795F0", VA = "0xE795F0")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0xE79604", Offset = "0xE79604", VA = "0xE79604")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x1700031A")]
		public static State CurrentState
		{
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0xE787CC", Offset = "0xE787CC", VA = "0xE787CC")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x1700031B")]
		public static ulong MyID
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xE766D4", Offset = "0xE766D4", VA = "0xE766D4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700031C")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xE78844", Offset = "0xE78844", VA = "0xE78844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xE77814", Offset = "0xE77814", VA = "0xE77814")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xE77AA4", Offset = "0xE77AA4", VA = "0xE77AA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xE7826C", Offset = "0xE7826C", VA = "0xE7826C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xE78308", Offset = "0xE78308", VA = "0xE78308")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xE784BC", Offset = "0xE784BC", VA = "0xE784BC")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xE78634", Offset = "0xE78634", VA = "0xE78634")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xE78404", Offset = "0xE78404", VA = "0xE78404")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xE78968", Offset = "0xE78968", VA = "0xE78968")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xE78AAC", Offset = "0xE78AAC", VA = "0xE78AAC")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xE78AD8", Offset = "0xE78AD8", VA = "0xE78AD8")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xE78AE0", Offset = "0xE78AE0", VA = "0xE78AE0")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xE77CA8", Offset = "0xE77CA8", VA = "0xE77CA8")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xE76CE8", Offset = "0xE76CE8", VA = "0xE76CE8")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xE78D90", Offset = "0xE78D90", VA = "0xE78D90")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xE795F8", Offset = "0xE795F8", VA = "0xE795F8")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public class RoomManager
	{
		[Token(Token = "0x2000586")]
		public struct Invite
		{
			[Token(Token = "0x4001917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4001918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x905218", Offset = "0x905218", VA = "0x905218")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User m_remoteUser;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x1700031D")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xE78C98", Offset = "0xE78C98", VA = "0xE78C98")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700031E")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xE7966C", Offset = "0xE7966C", VA = "0xE7966C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xE77920", Offset = "0xE77920", VA = "0xE77920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xE780E4", Offset = "0xE780E4", VA = "0xE780E4")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xE796D0", Offset = "0xE796D0", VA = "0xE796D0")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xE7860C", Offset = "0xE7860C", VA = "0xE7860C")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xE789F4", Offset = "0xE789F4", VA = "0xE789F4")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xE79834", Offset = "0xE79834", VA = "0xE79834")]
		private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xE79984", Offset = "0xE79984", VA = "0xE79984")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xE77960", Offset = "0xE77960", VA = "0xE77960")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xE79A10", Offset = "0xE79A10", VA = "0xE79A10")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xE79E70", Offset = "0xE79E70", VA = "0xE79E70")]
		private void GetRoomInfoCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xE78BE0", Offset = "0xE78BE0", VA = "0xE78BE0")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xE7A108", Offset = "0xE7A108", VA = "0xE7A108")]
		private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xE7A750", Offset = "0xE7A750", VA = "0xE7A750")]
		private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xE786A4", Offset = "0xE786A4", VA = "0xE786A4")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public class VoipManager
	{
		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x17000320")]
		public bool Connected
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0xE78D80", Offset = "0xE78D80", VA = "0xE78D80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xE781AC", Offset = "0xE781AC", VA = "0xE781AC")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xE78CB0", Offset = "0xE78CB0", VA = "0xE78CB0")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xE7871C", Offset = "0xE7871C", VA = "0xE7871C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xE7B328", Offset = "0xE7B328", VA = "0xE7B328")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xE7B5F4", Offset = "0xE7B5F4", VA = "0xE7B5F4")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
	[Token(Token = "0x2000588")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xE7ADF4", Offset = "0xE7ADF4", VA = "0xE7ADF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xE7B028", Offset = "0xE7B028", VA = "0xE7B028")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x2000589")]
	public class AchievementsManager
	{
		[Token(Token = "0x400191E")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x17000321")]
		public bool LikesToWin
		{
			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0xE6A83C", Offset = "0xE6A83C", VA = "0xE6A83C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xE6A844", Offset = "0xE6A844", VA = "0xE6A844")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xE6A964", Offset = "0xE6A964", VA = "0xE6A964")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xE6A9C0", Offset = "0xE6A9C0", VA = "0xE6A9C0")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xE6A9C8", Offset = "0xE6A9C8", VA = "0xE6A9C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F2C", Offset = "0xA42F2C")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x200058A")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xE6A460", Offset = "0xE6A460", VA = "0xE6A460")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xE6A7C8", Offset = "0xE6A7C8", VA = "0xE6A7C8")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xE6AC54", Offset = "0xE6AC54", VA = "0xE6AC54")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xE6AC5C", Offset = "0xE6AC5C", VA = "0xE6AC5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xE6AF48", Offset = "0xE6AF48", VA = "0xE6AF48")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x200058E")]
		private enum BasketPhase
		{
			[Token(Token = "0x4001923")]
			NONE,
			[Token(Token = "0x4001924")]
			TOP,
			[Token(Token = "0x4001925")]
			BOTH,
			[Token(Token = "0x4001926")]
			BOTTOM
		}

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x17000322")]
		public Player Player
		{
			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xE6AF50", Offset = "0xE6AF50", VA = "0xE6AF50")]
			set
			{
			}
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xE6AF58", Offset = "0xE6AF58", VA = "0xE6AF58")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xE6B060", Offset = "0xE6B060", VA = "0xE6B060")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xE6B25C", Offset = "0xE6B25C", VA = "0xE6B25C")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x200058F")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x4001927")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xE6B264", Offset = "0xE6B264", VA = "0xE6B264")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xE6B334", Offset = "0xE6B334", VA = "0xE6B334")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xE6B498", Offset = "0xE6B498", VA = "0xE6B498")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x2000590")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x400192C")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x17000323")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0xE6B534", Offset = "0xE6B534", VA = "0xE6B534")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0xE6B540", Offset = "0xE6B540", VA = "0xE6B540")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0xE6B54C", Offset = "0xE6B54C", VA = "0xE6B54C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xE6B558", Offset = "0xE6B558", VA = "0xE6B558")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0xE6B564", Offset = "0xE6B564", VA = "0xE6B564")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0xE6B570", Offset = "0xE6B570", VA = "0xE6B570")]
			set
			{
			}
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xE6B57C", Offset = "0xE6B57C", VA = "0xE6B57C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xE6B714", Offset = "0xE6B714", VA = "0xE6B714")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xE6BAE0", Offset = "0xE6BAE0", VA = "0xE6BAE0")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class LeaderboardManager
	{
		[Token(Token = "0x2000592")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x2000593")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x4001930")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x4001931")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x4001932")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x4001933")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x17000326")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0xE6BD80", Offset = "0xE6BD80", VA = "0xE6BD80")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xE6C984", Offset = "0xE6C984", VA = "0xE6C984")]
			set
			{
			}
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xE6BAF8", Offset = "0xE6BAF8", VA = "0xE6BAF8")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xE6BB60", Offset = "0xE6BB60", VA = "0xE6BB60")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xE6BD88", Offset = "0xE6BD88", VA = "0xE6BD88")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xE6BC70", Offset = "0xE6BC70", VA = "0xE6BC70")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xE6C98C", Offset = "0xE6C98C", VA = "0xE6C98C")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xE6D4E0", Offset = "0xE6D4E0", VA = "0xE6D4E0")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xE6D594", Offset = "0xE6D594", VA = "0xE6D594")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x17000328")]
		public override uint Score
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0xE6D61C", Offset = "0xE6D61C", VA = "0xE6D61C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xE6D984", Offset = "0xE6D984", VA = "0xE6D984")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xE6DB38", Offset = "0xE6DB38", VA = "0xE6DB38")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x2000595")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x2000596")]
		private enum State
		{
			[Token(Token = "0x400194D")]
			UNKNOWN,
			[Token(Token = "0x400194E")]
			NONE,
			[Token(Token = "0x400194F")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4001950")]
			PRACTICING,
			[Token(Token = "0x4001951")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4001952")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4001953")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4001954")]
			PLAYING_MATCH,
			[Token(Token = "0x4001955")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x17000329")]
		public float MatchStartTime
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xE6E404", Offset = "0xE6E404", VA = "0xE6E404")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xE6E424", Offset = "0xE6E424", VA = "0xE6E424")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xE6DB3C", Offset = "0xE6DB3C", VA = "0xE6DB3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xE6E12C", Offset = "0xE6E12C", VA = "0xE6E12C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xE6DDFC", Offset = "0xE6DDFC", VA = "0xE6DDFC")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xE6E150", Offset = "0xE6E150", VA = "0xE6E150")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xE6E1FC", Offset = "0xE6E1FC", VA = "0xE6E1FC")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xE6E42C", Offset = "0xE6E42C", VA = "0xE6E42C")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xE6E750", Offset = "0xE6E750", VA = "0xE6E750")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xE6EF44", Offset = "0xE6EF44", VA = "0xE6EF44")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xE6E508", Offset = "0xE6E508", VA = "0xE6E508")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xE6E894", Offset = "0xE6E894", VA = "0xE6E894")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xE6F2CC", Offset = "0xE6F2CC", VA = "0xE6F2CC")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xE6F2E4", Offset = "0xE6F2E4", VA = "0xE6F2E4")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xE6F4A4", Offset = "0xE6F4A4", VA = "0xE6F4A4")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xE6F4B8", Offset = "0xE6F4B8", VA = "0xE6F4B8")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xE6F5BC", Offset = "0xE6F5BC", VA = "0xE6F5BC")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xE6FC2C", Offset = "0xE6FC2C", VA = "0xE6FC2C")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xE6EA64", Offset = "0xE6EA64", VA = "0xE6EA64")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xE6F09C", Offset = "0xE6F09C", VA = "0xE6F09C")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xE70364", Offset = "0xE70364", VA = "0xE70364")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class MatchmakingManager
	{
		[Token(Token = "0x2000598")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x2000599")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x4001956")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x1700032A")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xE704B8", Offset = "0xE704B8", VA = "0xE704B8")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xE6DD64", Offset = "0xE6DD64", VA = "0xE6DD64")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0xE704C0", Offset = "0xE704C0", VA = "0xE704C0")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xE6DD7C", Offset = "0xE6DD7C", VA = "0xE6DD7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xE703D0", Offset = "0xE703D0", VA = "0xE703D0")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xE6F3C0", Offset = "0xE6F3C0", VA = "0xE6F3C0")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xE704C8", Offset = "0xE704C8", VA = "0xE704C8")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xE709F0", Offset = "0xE709F0", VA = "0xE709F0")]
		private void MatchFoundCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xE70B00", Offset = "0xE70B00", VA = "0xE70B00")]
		private void MatchmakingJoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xE71680", Offset = "0xE71680", VA = "0xE71680")]
		private void MatchmakingRoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xE6EDDC", Offset = "0xE6EDDC", VA = "0xE6EDDC")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xE6F47C", Offset = "0xE6F47C", VA = "0xE6F47C")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x200059A")]
	public class P2PManager
	{
		[Token(Token = "0x200059B")]
		private class RemotePlayerData
		{
			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xE7341C", Offset = "0xE7341C", VA = "0xE7341C")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x200059C")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x400195D")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x400195E")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x400195F")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4001960")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x4001961")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4001962")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x4001963")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x4001964")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x4001965")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x4001966")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x4001967")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4001968")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x1700032C")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xE7412C", Offset = "0xE7412C", VA = "0xE7412C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xE6DD94", Offset = "0xE6DD94", VA = "0xE6DD94")]
			set
			{
			}
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xE71E2C", Offset = "0xE71E2C", VA = "0xE71E2C")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xE71FA4", Offset = "0xE71FA4", VA = "0xE71FA4")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xE7143C", Offset = "0xE7143C", VA = "0xE7143C")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xE71B94", Offset = "0xE71B94", VA = "0xE71B94")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xE7348C", Offset = "0xE7348C", VA = "0xE7348C")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xE7371C", Offset = "0xE7371C", VA = "0xE7371C")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xE73BAC", Offset = "0xE73BAC", VA = "0xE73BAC")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xE721E0", Offset = "0xE721E0", VA = "0xE721E0")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xE74068", Offset = "0xE74068", VA = "0xE74068")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xE73E54", Offset = "0xE73E54", VA = "0xE73E54")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xE72934", Offset = "0xE72934", VA = "0xE72934")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xE745B8", Offset = "0xE745B8", VA = "0xE745B8")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xE729A0", Offset = "0xE729A0", VA = "0xE729A0")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xE6DA74", Offset = "0xE6DA74", VA = "0xE6DA74")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xE74AB0", Offset = "0xE74AB0", VA = "0xE74AB0")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xE72FEC", Offset = "0xE72FEC", VA = "0xE72FEC")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xE72B00", Offset = "0xE72B00", VA = "0xE72B00")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xE6D7A4", Offset = "0xE6D7A4", VA = "0xE6D7A4")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xE72F2C", Offset = "0xE72F2C", VA = "0xE72F2C")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xE74818", Offset = "0xE74818", VA = "0xE74818")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xE74868", Offset = "0xE74868", VA = "0xE74868")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xE75354", Offset = "0xE75354", VA = "0xE75354")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xE73D20", Offset = "0xE73D20", VA = "0xE73D20")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xE73DC8", Offset = "0xE73DC8", VA = "0xE73DC8")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xE74584", Offset = "0xE74584", VA = "0xE74584")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xE74BDC", Offset = "0xE74BDC", VA = "0xE74BDC")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xE74D0C", Offset = "0xE74D0C", VA = "0xE74D0C")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xE75224", Offset = "0xE75224", VA = "0xE75224")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xE752C4", Offset = "0xE752C4", VA = "0xE752C4")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xE74B78", Offset = "0xE74B78", VA = "0xE74B78")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xE74CAC", Offset = "0xE74CAC", VA = "0xE74CAC")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200059D")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x1700032D")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xE74C7C", Offset = "0xE74C7C", VA = "0xE74C7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xE75488", Offset = "0xE75488", VA = "0xE75488")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xE74B3C", Offset = "0xE74B3C", VA = "0xE74B3C")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xE75058", Offset = "0xE75058", VA = "0xE75058")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xE754F8", Offset = "0xE754F8", VA = "0xE754F8")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xE75634", Offset = "0xE75634", VA = "0xE75634")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xE75784", Offset = "0xE75784", VA = "0xE75784")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xE757AC", Offset = "0xE757AC", VA = "0xE757AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xE757F4", Offset = "0xE757F4", VA = "0xE757F4")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x1700032E")]
		public bool SendUpdates
		{
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xE757FC", Offset = "0xE757FC", VA = "0xE757FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xE75808", Offset = "0xE75808", VA = "0xE75808")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xE75878", Offset = "0xE75878", VA = "0xE75878")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xE75958", Offset = "0xE75958", VA = "0xE75958")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xE748C8", Offset = "0xE748C8", VA = "0xE748C8")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xE75A70", Offset = "0xE75A70", VA = "0xE75A70")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20005A0")]
		public enum State
		{
			[Token(Token = "0x4001981")]
			INITIALIZING,
			[Token(Token = "0x4001982")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4001983")]
			MATCH_TRANSITION,
			[Token(Token = "0x4001984")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x4001985")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x1700032F")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xE6DCF4", Offset = "0xE6DCF4", VA = "0xE6DCF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xE6D73C", Offset = "0xE6D73C", VA = "0xE6D73C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xE6DD9C", Offset = "0xE6DD9C", VA = "0xE6DD9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xE702FC", Offset = "0xE702FC", VA = "0xE702FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public static State CurrentState
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xE6B1FC", Offset = "0xE6B1FC", VA = "0xE6B1FC")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000334")]
		public static ulong MyID
		{
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xE6C1A8", Offset = "0xE6C1A8", VA = "0xE6C1A8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000335")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xE6EE6C", Offset = "0xE6EE6C", VA = "0xE6EE6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xE75A78", Offset = "0xE75A78", VA = "0xE75A78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xE75AC0", Offset = "0xE75AC0", VA = "0xE75AC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xE75C7C", Offset = "0xE75C7C", VA = "0xE75C7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xE75D18", Offset = "0xE75D18", VA = "0xE75D18")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xE75DF4", Offset = "0xE75DF4", VA = "0xE75DF4")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xE71ADC", Offset = "0xE71ADC", VA = "0xE71ADC")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xE75EEC", Offset = "0xE75EEC", VA = "0xE75EEC")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xE75EF4", Offset = "0xE75EF4", VA = "0xE75EF4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xE6E684", Offset = "0xE6E684", VA = "0xE6E684")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xE75F28", Offset = "0xE75F28", VA = "0xE75F28")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x4001986")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x4001987")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x4001988")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x17000336")]
		public virtual uint Score
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xE6D79C", Offset = "0xE6D79C", VA = "0xE6D79C", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xE6D670", Offset = "0xE6D670", VA = "0xE6D670", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xE75F30", Offset = "0xE75F30", VA = "0xE75F30")]
			set
			{
			}
		}

		[Token(Token = "0x17000338")]
		protected bool HasBall
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xE6A4C4", Offset = "0xE6A4C4", VA = "0xE6A4C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xE75F38", Offset = "0xE75F38", VA = "0xE75F38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xE74D98", Offset = "0xE74D98", VA = "0xE74D98")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xE6A74C", Offset = "0xE6A74C", VA = "0xE6A74C")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xE6A534", Offset = "0xE6A534", VA = "0xE6A534")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xE76018", Offset = "0xE76018", VA = "0xE76018")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xE6A7CC", Offset = "0xE6A7CC", VA = "0xE6A7CC")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x17000339")]
		public Player Player
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xE7029C", Offset = "0xE7029C", VA = "0xE7029C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public Text NameText
		{
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xE7035C", Offset = "0xE7035C", VA = "0xE7035C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xE76154", Offset = "0xE76154", VA = "0xE76154")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E56")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xE76284", Offset = "0xE76284", VA = "0xE76284")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x1700033B")]
		public User User
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xE6F094", Offset = "0xE6F094", VA = "0xE6F094")]
			set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public ulong ID
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xE733F0", Offset = "0xE733F0", VA = "0xE733F0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700033D")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xE748C0", Offset = "0xE748C0", VA = "0xE748C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xE7628C", Offset = "0xE7628C", VA = "0xE7628C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public override uint Score
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xE76294", Offset = "0xE76294", VA = "0xE76294", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xE75350", Offset = "0xE75350", VA = "0xE75350")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xE76298", Offset = "0xE76298", VA = "0xE76298")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xE7629C", Offset = "0xE7629C", VA = "0xE7629C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xE764D0", Offset = "0xE764D0", VA = "0xE764D0")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x20005A5")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37578", Offset = "0xA37578")]
		public int x;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA375B8", Offset = "0xA375B8")]
		public int y;

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xE63ECC", Offset = "0xE63ECC", VA = "0xE63ECC")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xE63ED4", Offset = "0xE63ED4", VA = "0xE63ED4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xE6495C", Offset = "0xE6495C", VA = "0xE6495C")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x20005A8")]
		private struct PositionInfo
		{
			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x40019A0")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x40019A1")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x40019A2")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xE64964", Offset = "0xE64964", VA = "0xE64964")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xE64C0C", Offset = "0xE64C0C", VA = "0xE64C0C")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xE64D1C", Offset = "0xE64D1C", VA = "0xE64D1C")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xE64E00", Offset = "0xE64E00", VA = "0xE64E00")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xE64EE4", Offset = "0xE64EE4", VA = "0xE64EE4")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xE657CC", Offset = "0xE657CC", VA = "0xE657CC")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xE658F0", Offset = "0xE658F0", VA = "0xE658F0")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xE65B74", Offset = "0xE65B74", VA = "0xE65B74")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xE651D8", Offset = "0xE651D8", VA = "0xE651D8")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xE65D44", Offset = "0xE65D44", VA = "0xE65D44")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xE653B0", Offset = "0xE653B0", VA = "0xE653B0")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xE65D98", Offset = "0xE65D98", VA = "0xE65D98")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20005AA")]
		private enum GameState
		{
			[Token(Token = "0x40019BE")]
			None,
			[Token(Token = "0x40019BF")]
			PracticingMyTurn,
			[Token(Token = "0x40019C0")]
			PracticingAiTurn,
			[Token(Token = "0x40019C1")]
			OnlineMatchMyTurn,
			[Token(Token = "0x40019C2")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xE65E70", Offset = "0xE65E70", VA = "0xE65E70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xE65FF4", Offset = "0xE65FF4", VA = "0xE65FF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xE65E98", Offset = "0xE65E98", VA = "0xE65E98")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xE665E4", Offset = "0xE665E4", VA = "0xE665E4")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xE65FF8", Offset = "0xE65FF8", VA = "0xE65FF8")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xE66F0C", Offset = "0xE66F0C", VA = "0xE66F0C")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xE668F8", Offset = "0xE668F8", VA = "0xE668F8")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xE67064", Offset = "0xE67064", VA = "0xE67064")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xE670CC", Offset = "0xE670CC", VA = "0xE670CC")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xE6719C", Offset = "0xE6719C", VA = "0xE6719C")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xE671B0", Offset = "0xE671B0", VA = "0xE671B0")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xE64574", Offset = "0xE64574", VA = "0xE64574")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xE6456C", Offset = "0xE6456C", VA = "0xE6456C")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xE6457C", Offset = "0xE6457C", VA = "0xE6457C")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xE64888", Offset = "0xE64888", VA = "0xE64888")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xE66B4C", Offset = "0xE66B4C", VA = "0xE66B4C")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xE66C58", Offset = "0xE66C58", VA = "0xE66C58")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xE6749C", Offset = "0xE6749C", VA = "0xE6749C")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xE674A4", Offset = "0xE674A4", VA = "0xE674A4")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xE65EA0", Offset = "0xE65EA0", VA = "0xE65EA0")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xE660B0", Offset = "0xE660B0", VA = "0xE660B0")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xE67624", Offset = "0xE67624", VA = "0xE67624")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x20005AC")]
		public enum Piece
		{
			[Token(Token = "0x40019C9")]
			A,
			[Token(Token = "0x40019CA")]
			B,
			[Token(Token = "0x40019CB")]
			PowerBall
		}

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x1700033F")]
		public Piece Type
		{
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xE67234", Offset = "0xE67234", VA = "0xE67234")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x17000340")]
		public BoardPosition Position
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xE6722C", Offset = "0xE6722C", VA = "0xE6722C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0xE65D3C", Offset = "0xE65D3C", VA = "0xE65D3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public GameObject Prefab
		{
			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xE67038", Offset = "0xE67038", VA = "0xE67038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xE67174", Offset = "0xE67174", VA = "0xE67174")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xE67688", Offset = "0xE67688", VA = "0xE67688")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x40019CE")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xE67690", Offset = "0xE67690", VA = "0xE67690")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xE676B4", Offset = "0xE676B4", VA = "0xE676B4")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xE67880", Offset = "0xE67880", VA = "0xE67880")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xE677D4", Offset = "0xE677D4", VA = "0xE677D4")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xE67D8C", Offset = "0xE67D8C", VA = "0xE67D8C")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xE681C8", Offset = "0xE681C8", VA = "0xE681C8")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xE68280", Offset = "0xE68280", VA = "0xE68280")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xE6838C", Offset = "0xE6838C", VA = "0xE6838C")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x20005AF")]
		private enum MatchRoomState
		{
			[Token(Token = "0x40019D9")]
			None,
			[Token(Token = "0x40019DA")]
			Queued,
			[Token(Token = "0x40019DB")]
			Configuring,
			[Token(Token = "0x40019DC")]
			MyTurn,
			[Token(Token = "0x40019DD")]
			RemoteTurn
		}

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x40019D2")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x40019D6")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xE68394", Offset = "0xE68394", VA = "0xE68394")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xE68604", Offset = "0xE68604", VA = "0xE68604")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xE68730", Offset = "0xE68730", VA = "0xE68730")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xE666EC", Offset = "0xE666EC", VA = "0xE666EC")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xE687F0", Offset = "0xE687F0", VA = "0xE687F0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xE68454", Offset = "0xE68454", VA = "0xE68454")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xE6882C", Offset = "0xE6882C", VA = "0xE6882C")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xE68C30", Offset = "0xE68C30", VA = "0xE68C30")]
		private void MatchFoundCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xE68DE8", Offset = "0xE68DE8", VA = "0xE68DE8")]
		private void MatchmakingJoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xE69774", Offset = "0xE69774", VA = "0xE69774")]
		private void MatchmakingRoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xE691E8", Offset = "0xE691E8", VA = "0xE691E8")]
		private void ProcessRoomData(Oculus.Platform.Models.Room room)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xE69CC8", Offset = "0xE69CC8", VA = "0xE69CC8")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xE6723C", Offset = "0xE6723C", VA = "0xE6723C")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xE69F5C", Offset = "0xE69F5C", VA = "0xE69F5C")]
		private void UpdateDataStoreCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xE69C70", Offset = "0xE69C70", VA = "0xE69C70")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xE69FA0", Offset = "0xE69FA0", VA = "0xE69FA0")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xE6A078", Offset = "0xE6A078", VA = "0xE6A078")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x17000342")]
		public static ulong MyID
		{
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xE68748", Offset = "0xE68748", VA = "0xE68748")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000343")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0xE6754C", Offset = "0xE6754C", VA = "0xE6754C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xE6A080", Offset = "0xE6A080", VA = "0xE6A080")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xE6A1C0", Offset = "0xE6A1C0", VA = "0xE6A1C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xE6A25C", Offset = "0xE6A25C", VA = "0xE6A25C")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xE6A338", Offset = "0xE6A338", VA = "0xE6A338")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xE67CD4", Offset = "0xE67CD4", VA = "0xE67CD4")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xE6A458", Offset = "0xE6A458", VA = "0xE6A458")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x20005B1")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xE5EDFC", Offset = "0xE5EDFC", VA = "0xE5EDFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xE5EF08", Offset = "0xE5EF08", VA = "0xE5EF08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xE5EFE8", Offset = "0xE5EFE8", VA = "0xE5EFE8")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xE60E20", Offset = "0xE60E20", VA = "0xE60E20")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xE60D04", Offset = "0xE60D04", VA = "0xE60D04")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xE60C48", Offset = "0xE60C48", VA = "0xE60C48")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xE60B60", Offset = "0xE60B60", VA = "0xE60B60")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xE60AAC", Offset = "0xE60AAC", VA = "0xE60AAC")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xE6098C", Offset = "0xE6098C", VA = "0xE6098C")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xE6086C", Offset = "0xE6086C", VA = "0xE6086C")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xE5EE6C", Offset = "0xE5EE6C", VA = "0xE5EE6C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xE607B0", Offset = "0xE607B0", VA = "0xE607B0")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xE5F8FC", Offset = "0xE5F8FC", VA = "0xE5F8FC")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xE5FA0C", Offset = "0xE5FA0C", VA = "0xE5FA0C")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xE5FACC", Offset = "0xE5FACC", VA = "0xE5FACC")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xE5FBCC", Offset = "0xE5FBCC", VA = "0xE5FBCC")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xE5FCD0", Offset = "0xE5FCD0", VA = "0xE5FCD0")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xE5FDD0", Offset = "0xE5FDD0", VA = "0xE5FDD0")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xE5FF00", Offset = "0xE5FF00", VA = "0xE5FF00")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xE5FFBC", Offset = "0xE5FFBC", VA = "0xE5FFBC")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xE600B8", Offset = "0xE600B8", VA = "0xE600B8")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xE60174", Offset = "0xE60174", VA = "0xE60174")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xE60234", Offset = "0xE60234", VA = "0xE60234")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xE6034C", Offset = "0xE6034C", VA = "0xE6034C")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xE60464", Offset = "0xE60464", VA = "0xE60464")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xE60EE0", Offset = "0xE60EE0", VA = "0xE60EE0")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xE612D0", Offset = "0xE612D0", VA = "0xE612D0")]
		private void outputRoomDetails(Oculus.Platform.Models.Room room)
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xE619F0", Offset = "0xE619F0", VA = "0xE619F0")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xE61F34", Offset = "0xE61F34", VA = "0xE61F34")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xE62048", Offset = "0xE62048", VA = "0xE62048")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xE620CC", Offset = "0xE620CC", VA = "0xE620CC")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xE626F4", Offset = "0xE626F4", VA = "0xE626F4")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xE62914", Offset = "0xE62914", VA = "0xE62914")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xE629E8", Offset = "0xE629E8", VA = "0xE629E8")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xE62ABC", Offset = "0xE62ABC", VA = "0xE62ABC")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xE62B90", Offset = "0xE62B90", VA = "0xE62B90")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xE62F60", Offset = "0xE62F60", VA = "0xE62F60")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xE633A8", Offset = "0xE633A8", VA = "0xE633A8")]
		private void createAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xE634B8", Offset = "0xE634B8", VA = "0xE634B8")]
		private void getCurrentRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xE635C8", Offset = "0xE635C8", VA = "0xE635C8")]
		private void joinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xE636D8", Offset = "0xE636D8", VA = "0xE636D8")]
		private void leaveRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xE637E8", Offset = "0xE637E8", VA = "0xE637E8")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xE63BD0", Offset = "0xE63BD0", VA = "0xE63BD0")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xE63CE0", Offset = "0xE63CE0", VA = "0xE63CE0")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xE63DF0", Offset = "0xE63DF0", VA = "0xE63DF0")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xE63EC4", Offset = "0xE63EC4", VA = "0xE63EC4")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x20005B2")]
	internal enum states
	{
		[Token(Token = "0x40019E3")]
		NOT_INIT,
		[Token(Token = "0x40019E4")]
		IDLE,
		[Token(Token = "0x40019E5")]
		REQUEST_FIND,
		[Token(Token = "0x40019E6")]
		FINDING_ROOM,
		[Token(Token = "0x40019E7")]
		REQUEST_CREATE,
		[Token(Token = "0x40019E8")]
		REQUEST_JOIN,
		[Token(Token = "0x40019E9")]
		REQUEST_LEAVE,
		[Token(Token = "0x40019EA")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x40019EB")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x20005B3")]
	public static class Constants
	{
		[Token(Token = "0x40019EC")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x40019ED")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x40019EE")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x20005B4")]
	public class chatPacket
	{
		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA377A8", Offset = "0xA377A8")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA377B8", Offset = "0xA377B8")]
		private string <textString>k__BackingField;

		[Token(Token = "0x17000344")]
		public int packetID
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xE5E788", Offset = "0xE5E788", VA = "0xE5E788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F3C", Offset = "0xA42F3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0xE5E790", Offset = "0xE5E790", VA = "0xE5E790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F4C", Offset = "0xA42F4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public string textString
		{
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xE5E798", Offset = "0xE5E798", VA = "0xE5E798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F5C", Offset = "0xA42F5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0xE5E7A0", Offset = "0xE5E7A0", VA = "0xE5E7A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F6C", Offset = "0xA42F6C")]
			set
			{
			}
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xE5E7A8", Offset = "0xE5E7A8", VA = "0xE5E7A8")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xE5EB18", Offset = "0xE5EB18", VA = "0xE5EB18")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xE5EDF4", Offset = "0xE5EDF4", VA = "0xE5EDF4")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Oculus.Platform.Models.Room currentRoom;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xC18370", Offset = "0xC18370", VA = "0xC18370")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xC184F0", Offset = "0xC184F0", VA = "0xC184F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xC185D4", Offset = "0xC185D4", VA = "0xC185D4")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xC19B08", Offset = "0xC19B08", VA = "0xC19B08")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xC1845C", Offset = "0xC1845C", VA = "0xC1845C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xC19BD0", Offset = "0xC19BD0", VA = "0xC19BD0")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xC19CC8", Offset = "0xC19CC8", VA = "0xC19CC8")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xC18B14", Offset = "0xC18B14", VA = "0xC18B14")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xC19E0C", Offset = "0xC19E0C", VA = "0xC19E0C")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xC18C94", Offset = "0xC18C94", VA = "0xC18C94")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xC1908C", Offset = "0xC1908C", VA = "0xC1908C")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xC19204", Offset = "0xC19204", VA = "0xC19204")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xC19F6C", Offset = "0xC19F6C", VA = "0xC19F6C")]
		private void foundMatch(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xC1A0D0", Offset = "0xC1A0D0", VA = "0xC1A0D0")]
		private void joinRoomResponse(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xC18F14", Offset = "0xC18F14", VA = "0xC18F14")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xC1A434", Offset = "0xC1A434", VA = "0xC1A434")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xC1A510", Offset = "0xC1A510", VA = "0xC1A510")]
		private void updateRoom(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xC1958C", Offset = "0xC1958C", VA = "0xC1958C")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xC18954", Offset = "0xC18954", VA = "0xC18954")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xC196D4", Offset = "0xC196D4", VA = "0xC196D4")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xC1A8C0", Offset = "0xC1A8C0", VA = "0xC1A8C0")]
		private void leaveRoomResponse(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xC19808", Offset = "0xC19808", VA = "0xC19808")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xC1A9A0", Offset = "0xC1A9A0", VA = "0xC1A9A0")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xC19918", Offset = "0xC19918", VA = "0xC19918")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xC1AA7C", Offset = "0xC1AA7C", VA = "0xC1AA7C")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xC1AB44", Offset = "0xC1AB44", VA = "0xC1AB44")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x20005B6")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x1400001B")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xC17B48", Offset = "0xC17B48", VA = "0xC17B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F7C", Offset = "0xA42F7C")]
			add
			{
			}
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xC17C44", Offset = "0xC17C44", VA = "0xC17C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F8C", Offset = "0xA42F8C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xC17D40", Offset = "0xC17D40", VA = "0xC17D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42F9C", Offset = "0xA42F9C")]
			add
			{
			}
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xC17E40", Offset = "0xC17E40", VA = "0xC17E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42FAC", Offset = "0xA42FAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xC17F40", Offset = "0xC17F40", VA = "0xC17F40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xC18324", Offset = "0xC18324", VA = "0xC18324")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xC180A8", Offset = "0xC180A8", VA = "0xC180A8")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xC18360", Offset = "0xC18360", VA = "0xC18360")]
		public EntitlementCheck()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20005B7")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2EFC8", Offset = "0xA2EFC8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xCE523C", Offset = "0xCE523C", VA = "0xCE523C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xCE5244", Offset = "0xCE5244", VA = "0xCE5244")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x40019FB")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float X;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Y;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Z;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Yaw;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Pitch;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float Roll;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float FieldOfVision;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float NearClip;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float FarClip;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float HMDOffset;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float NearOffset;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x17000346")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xCE4524", Offset = "0xCE4524", VA = "0xCE4524")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000347")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xCE45B4", Offset = "0xCE45B4", VA = "0xCE45B4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1400001D")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xCE42CC", Offset = "0xCE42CC", VA = "0xCE42CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42FBC", Offset = "0xA42FBC")]
			add
			{
			}
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xCE43F8", Offset = "0xCE43F8", VA = "0xCE43F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42FCC", Offset = "0xA42FCC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xCE4660", Offset = "0xCE4660", VA = "0xCE4660")]
		static Calibration()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xCE5088", Offset = "0xCE5088", VA = "0xCE5088")]
		private static void Reset()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xCE48B4", Offset = "0xCE48B4", VA = "0xCE48B4")]
		public static void Read()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xCE5150", Offset = "0xCE5150", VA = "0xCE5150")]
		private static bool TryParseInvariantFloat(string number, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005B9")]
	public static class Extensions
	{
		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xCE52A0", Offset = "0xCE52A0", VA = "0xCE52A0")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xCE535C", Offset = "0xCE535C", VA = "0xCE535C")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xCE5528", Offset = "0xCE5528", VA = "0xCE5528")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA2EFE8", Offset = "0xA2EFE8")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F020", Offset = "0xA2F020")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrackedDevicePose_t, int, <>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xCE611C", Offset = "0xCE611C", VA = "0xCE611C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0xCE6124", Offset = "0xCE6124", VA = "0xCE6124")]
			internal <>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0xCE61D0", Offset = "0xCE61D0", VA = "0xCE61D0")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xCE6240", Offset = "0xCE6240", VA = "0xCE6240")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xCE6394", Offset = "0xCE6394", VA = "0xCE6394")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xCE6424", Offset = "0xCE6424", VA = "0xCE6424")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0xCE6620", Offset = "0xCE6620", VA = "0xCE6620")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA377F8", Offset = "0xA377F8")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x17000348")]
		public bool IsValid
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xCE5564", Offset = "0xCE5564", VA = "0xCE5564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000349")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xCE5574", Offset = "0xCE5574", VA = "0xCE5574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA42FFC", Offset = "0xA42FFC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xCE557C", Offset = "0xCE557C", VA = "0xCE557C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4300C", Offset = "0xA4300C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xCE5584", Offset = "0xCE5584", VA = "0xCE5584")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xCE5614", Offset = "0xCE5614", VA = "0xCE5614")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xCE5668", Offset = "0xCE5668", VA = "0xCE5668")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xCE56F0", Offset = "0xCE56F0", VA = "0xCE56F0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xCE566C", Offset = "0xCE566C", VA = "0xCE566C")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xCE56F4", Offset = "0xCE56F4", VA = "0xCE56F4")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xCE57D4", Offset = "0xCE57D4", VA = "0xCE57D4")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xCE55F0", Offset = "0xCE55F0", VA = "0xCE55F0")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xCE5A6C", Offset = "0xCE5A6C", VA = "0xCE5A6C")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xCE5F40", Offset = "0xCE5F40", VA = "0xCE5F40")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xCE6048", Offset = "0xCE6048", VA = "0xCE6048")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA2F030", Offset = "0xA2F030")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string text;

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xCE67C4", Offset = "0xCE67C4", VA = "0xCE67C4")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x20005BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA2F06C", Offset = "0xA2F06C")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37808", Offset = "0xA37808")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37840", Offset = "0xA37840")]
		public Camera HMDCamera;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37850", Offset = "0xA37850")]
		public bool DisableStandardAssets;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37860", Offset = "0xA37860")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool WasActive;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x1700034A")]
		public Transform Origin
		{
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0xCE67F0", Offset = "0xCE67F0", VA = "0xCE67F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xCE6898", Offset = "0xCE6898", VA = "0xCE6898")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xCE697C", Offset = "0xCE697C", VA = "0xCE697C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xCE6AC4", Offset = "0xCE6AC4", VA = "0xCE6AC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xCE6B20", Offset = "0xCE6B20", VA = "0xCE6B20")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xCE698C", Offset = "0xCE698C", VA = "0xCE698C")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xCE6C98", Offset = "0xCE6C98", VA = "0xCE6C98")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xCE7174", Offset = "0xCE7174", VA = "0xCE7174")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xCE6D08", Offset = "0xCE6D08", VA = "0xCE6D08")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xCE72EC", Offset = "0xCE72EC", VA = "0xCE72EC")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xCE6DE0", Offset = "0xCE6DE0", VA = "0xCE6DE0")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xCE7220", Offset = "0xCE7220", VA = "0xCE7220")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xCE7578", Offset = "0xCE7578", VA = "0xCE7578")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA2F0A4", Offset = "0xA2F0A4")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F0DC", Offset = "0xA2F0DC")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F45")]
				[Address(RVA = "0x1E22C24", Offset = "0x1E22C24", VA = "0x1E22C24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F47")]
				[Address(RVA = "0x1E22C94", Offset = "0x1E22C94", VA = "0x1E22C94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x1E22ACC", Offset = "0x1E22ACC", VA = "0x1E22ACC")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x1E22AF8", Offset = "0x1E22AF8", VA = "0x1E22AF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x1E22AFC", Offset = "0x1E22AFC", VA = "0x1E22AFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x1E22C2C", Offset = "0x1E22C2C", VA = "0x1E22C2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSetup;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LIV _liv;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _mrCamera;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _hmd;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _clipQuad;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _clipMaterial;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blitMaterial;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xCE73B8", Offset = "0xCE73B8", VA = "0xCE73B8")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xCE75AC", Offset = "0xCE75AC", VA = "0xCE75AC")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xCE78B0", Offset = "0xCE78B0", VA = "0xCE78B0")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xCE7B10", Offset = "0xCE7B10", VA = "0xCE7B10")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xCE7EFC", Offset = "0xCE7EFC", VA = "0xCE7EFC")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xCE8204", Offset = "0xCE8204", VA = "0xCE8204")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xCE8540", Offset = "0xCE8540", VA = "0xCE8540")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xCE8984", Offset = "0xCE8984", VA = "0xCE8984")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xCE8A08", Offset = "0xCE8A08", VA = "0xCE8A08")]
		private void Composite()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xCE8B14", Offset = "0xCE8B14", VA = "0xCE8B14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xCE8B40", Offset = "0xCE8B40", VA = "0xCE8B40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4301C", Offset = "0xA4301C")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xCE8BB4", Offset = "0xCE8BB4", VA = "0xCE8BB4")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA2F0EC", Offset = "0xA2F0EC")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA2F124", Offset = "0xA2F124")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x17000350")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F57")]
				[Address(RVA = "0x1E23160", Offset = "0x1E23160", VA = "0x1E23160", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000351")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F59")]
				[Address(RVA = "0x1E231D0", Offset = "0x1E231D0", VA = "0x1E231D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x1E23060", Offset = "0x1E23060", VA = "0x1E23060")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x1E23094", Offset = "0x1E23094", VA = "0x1E23094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x1E23098", Offset = "0x1E23098", VA = "0x1E23098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x1E23168", Offset = "0x1E23168", VA = "0x1E23168", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public static bool IsActive
		{
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x1E22C20", Offset = "0x1E22C20", VA = "0x1E22C20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034E")]
		public static int TextureWidth
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x1E22F70", Offset = "0x1E22F70", VA = "0x1E22F70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034F")]
		public static int TextureHeight
		{
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x1E22F74", Offset = "0x1E22F74", VA = "0x1E22F74")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x1E22C9C", Offset = "0x1E22C9C", VA = "0x1E22C9C")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x1E22D28", Offset = "0x1E22D28", VA = "0x1E22D28")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x1E22DBC", Offset = "0x1E22DBC", VA = "0x1E22DBC")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x1E22E48", Offset = "0x1E22E48", VA = "0x1E22E48")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x1E22ED4", Offset = "0x1E22ED4", VA = "0x1E22ED4")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x1E22F78", Offset = "0x1E22F78", VA = "0x1E22F78")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x1E22FC0", Offset = "0x1E22FC0", VA = "0x1E22FC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x1E22FEC", Offset = "0x1E22FEC", VA = "0x1E22FEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA430D0", Offset = "0xA430D0")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x1E2308C", Offset = "0x1E2308C", VA = "0x1E2308C")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRCamera;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Type SteamVRFade;

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1E231D8", Offset = "0x1E231D8", VA = "0x1E231D8")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1E23230", Offset = "0x1E23230", VA = "0x1E23230")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20005C3")]
	public struct IVRSystem
	{
		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F134", Offset = "0xA2F134")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F148", Offset = "0xA2F148")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F15C", Offset = "0xA2F15C")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F170", Offset = "0xA2F170")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F184", Offset = "0xA2F184")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F198", Offset = "0xA2F198")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F1AC", Offset = "0xA2F1AC")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F1C0", Offset = "0xA2F1C0")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F1D4", Offset = "0xA2F1D4")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F1E8", Offset = "0xA2F1E8")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F1FC", Offset = "0xA2F1FC")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F210", Offset = "0xA2F210")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F224", Offset = "0xA2F224")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F238", Offset = "0xA2F238")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F24C", Offset = "0xA2F24C")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F260", Offset = "0xA2F260")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F274", Offset = "0xA2F274")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F288", Offset = "0xA2F288")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F29C", Offset = "0xA2F29C")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F2B0", Offset = "0xA2F2B0")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F2C4", Offset = "0xA2F2C4")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F2D8", Offset = "0xA2F2D8")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F2EC", Offset = "0xA2F2EC")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F300", Offset = "0xA2F300")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F314", Offset = "0xA2F314")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F328", Offset = "0xA2F328")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F33C", Offset = "0xA2F33C")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F350", Offset = "0xA2F350")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F364", Offset = "0xA2F364")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F378", Offset = "0xA2F378")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F38C", Offset = "0xA2F38C")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F3A0", Offset = "0xA2F3A0")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F3B4", Offset = "0xA2F3B4")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F3C8", Offset = "0xA2F3C8")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F3DC", Offset = "0xA2F3DC")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F3F0", Offset = "0xA2F3F0")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F404", Offset = "0xA2F404")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F418", Offset = "0xA2F418")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F42C", Offset = "0xA2F42C")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F440", Offset = "0xA2F440")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F454", Offset = "0xA2F454")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F468", Offset = "0xA2F468")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F47C", Offset = "0xA2F47C")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F490", Offset = "0xA2F490")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F4A4", Offset = "0xA2F4A4")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F4B8", Offset = "0xA2F4B8")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F4CC", Offset = "0xA2F4CC")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x20005F3")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F4E0", Offset = "0xA2F4E0")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F4F4", Offset = "0xA2F4F4")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F508", Offset = "0xA2F508")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x20005F7")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F51C", Offset = "0xA2F51C")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F530", Offset = "0xA2F530")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F544", Offset = "0xA2F544")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F558", Offset = "0xA2F558")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F56C", Offset = "0xA2F56C")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F580", Offset = "0xA2F580")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F594", Offset = "0xA2F594")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F5A8", Offset = "0xA2F5A8")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F5BC", Offset = "0xA2F5BC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F5D0", Offset = "0xA2F5D0")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F5E4", Offset = "0xA2F5E4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F5F8", Offset = "0xA2F5F8")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x2000604")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F60C", Offset = "0xA2F60C")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F620", Offset = "0xA2F620")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F634", Offset = "0xA2F634")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F648", Offset = "0xA2F648")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F65C", Offset = "0xA2F65C")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F670", Offset = "0xA2F670")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F684", Offset = "0xA2F684")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F698", Offset = "0xA2F698")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F6AC", Offset = "0xA2F6AC")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F6C0", Offset = "0xA2F6C0")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F6D4", Offset = "0xA2F6D4")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F6E8", Offset = "0xA2F6E8")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F6FC", Offset = "0xA2F6FC")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F710", Offset = "0xA2F710")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F724", Offset = "0xA2F724")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F738", Offset = "0xA2F738")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F74C", Offset = "0xA2F74C")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F760", Offset = "0xA2F760")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F774", Offset = "0xA2F774")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F788", Offset = "0xA2F788")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F79C", Offset = "0xA2F79C")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F7B0", Offset = "0xA2F7B0")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F7C4", Offset = "0xA2F7C4")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F7D8", Offset = "0xA2F7D8")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F7EC", Offset = "0xA2F7EC")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F800", Offset = "0xA2F800")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F814", Offset = "0xA2F814")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F828", Offset = "0xA2F828")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F83C", Offset = "0xA2F83C")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F850", Offset = "0xA2F850")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F864", Offset = "0xA2F864")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000624")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F878", Offset = "0xA2F878")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F88C", Offset = "0xA2F88C")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F8A0", Offset = "0xA2F8A0")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F8B4", Offset = "0xA2F8B4")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F8C8", Offset = "0xA2F8C8")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F8DC", Offset = "0xA2F8DC")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F8F0", Offset = "0xA2F8F0")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F904", Offset = "0xA2F904")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x200062D")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F918", Offset = "0xA2F918")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F92C", Offset = "0xA2F92C")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F940", Offset = "0xA2F940")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F954", Offset = "0xA2F954")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F968", Offset = "0xA2F968")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F97C", Offset = "0xA2F97C")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F990", Offset = "0xA2F990")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F9A4", Offset = "0xA2F9A4")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F9B8", Offset = "0xA2F9B8")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F9CC", Offset = "0xA2F9CC")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F9E0", Offset = "0xA2F9E0")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2F9F4", Offset = "0xA2F9F4")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FA08", Offset = "0xA2FA08")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FA1C", Offset = "0xA2FA1C")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FA30", Offset = "0xA2FA30")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FA44", Offset = "0xA2FA44")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FA58", Offset = "0xA2FA58")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FA6C", Offset = "0xA2FA6C")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FA80", Offset = "0xA2FA80")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FA94", Offset = "0xA2FA94")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x2000642")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FAA8", Offset = "0xA2FAA8")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FABC", Offset = "0xA2FABC")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FAD0", Offset = "0xA2FAD0")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FAE4", Offset = "0xA2FAE4")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FAF8", Offset = "0xA2FAF8")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FB0C", Offset = "0xA2FB0C")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FB20", Offset = "0xA2FB20")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FB34", Offset = "0xA2FB34")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FB48", Offset = "0xA2FB48")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FB5C", Offset = "0xA2FB5C")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FB70", Offset = "0xA2FB70")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FB84", Offset = "0xA2FB84")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FB98", Offset = "0xA2FB98")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FBAC", Offset = "0xA2FBAC")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FBC0", Offset = "0xA2FBC0")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FBD4", Offset = "0xA2FBD4")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FBE8", Offset = "0xA2FBE8")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FBFC", Offset = "0xA2FBFC")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FC10", Offset = "0xA2FC10")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FC24", Offset = "0xA2FC24")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FC38", Offset = "0xA2FC38")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FC4C", Offset = "0xA2FC4C")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FC60", Offset = "0xA2FC60")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FC74", Offset = "0xA2FC74")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FC88", Offset = "0xA2FC88")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FC9C", Offset = "0xA2FC9C")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FCB0", Offset = "0xA2FCB0")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FCC4", Offset = "0xA2FCC4")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FCD8", Offset = "0xA2FCD8")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FCEC", Offset = "0xA2FCEC")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FD00", Offset = "0xA2FD00")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FD14", Offset = "0xA2FD14")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FD28", Offset = "0xA2FD28")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FD3C", Offset = "0xA2FD3C")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FD50", Offset = "0xA2FD50")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FD64", Offset = "0xA2FD64")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FD78", Offset = "0xA2FD78")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FD8C", Offset = "0xA2FD8C")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FDA0", Offset = "0xA2FDA0")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FDB4", Offset = "0xA2FDB4")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FDC8", Offset = "0xA2FDC8")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FDDC", Offset = "0xA2FDDC")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FDF0", Offset = "0xA2FDF0")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x200066E")]
	public struct IVROverlay
	{
		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FE04", Offset = "0xA2FE04")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FE18", Offset = "0xA2FE18")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FE2C", Offset = "0xA2FE2C")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FE40", Offset = "0xA2FE40")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FE54", Offset = "0xA2FE54")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FE68", Offset = "0xA2FE68")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FE7C", Offset = "0xA2FE7C")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FE90", Offset = "0xA2FE90")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FEA4", Offset = "0xA2FEA4")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FEB8", Offset = "0xA2FEB8")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FECC", Offset = "0xA2FECC")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FEE0", Offset = "0xA2FEE0")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FEF4", Offset = "0xA2FEF4")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FF08", Offset = "0xA2FF08")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FF1C", Offset = "0xA2FF1C")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FF30", Offset = "0xA2FF30")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FF44", Offset = "0xA2FF44")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FF58", Offset = "0xA2FF58")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FF6C", Offset = "0xA2FF6C")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FF80", Offset = "0xA2FF80")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FF94", Offset = "0xA2FF94")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FFA8", Offset = "0xA2FFA8")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FFBC", Offset = "0xA2FFBC")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FFD0", Offset = "0xA2FFD0")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FFE4", Offset = "0xA2FFE4")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA2FFF8", Offset = "0xA2FFF8")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3000C", Offset = "0xA3000C")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30020", Offset = "0xA30020")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30034", Offset = "0xA30034")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30048", Offset = "0xA30048")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3005C", Offset = "0xA3005C")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30070", Offset = "0xA30070")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30084", Offset = "0xA30084")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30098", Offset = "0xA30098")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA300AC", Offset = "0xA300AC")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA300C0", Offset = "0xA300C0")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA300D4", Offset = "0xA300D4")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA300E8", Offset = "0xA300E8")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA300FC", Offset = "0xA300FC")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30110", Offset = "0xA30110")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30124", Offset = "0xA30124")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30138", Offset = "0xA30138")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3014C", Offset = "0xA3014C")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30160", Offset = "0xA30160")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30174", Offset = "0xA30174")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30188", Offset = "0xA30188")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3019C", Offset = "0xA3019C")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA301B0", Offset = "0xA301B0")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA301C4", Offset = "0xA301C4")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA301D8", Offset = "0xA301D8")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA301EC", Offset = "0xA301EC")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30200", Offset = "0xA30200")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30214", Offset = "0xA30214")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30228", Offset = "0xA30228")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3023C", Offset = "0xA3023C")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30250", Offset = "0xA30250")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30264", Offset = "0xA30264")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30278", Offset = "0xA30278")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x20006A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3028C", Offset = "0xA3028C")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA302A0", Offset = "0xA302A0")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA302B4", Offset = "0xA302B4")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA302C8", Offset = "0xA302C8")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA302DC", Offset = "0xA302DC")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA302F0", Offset = "0xA302F0")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30304", Offset = "0xA30304")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30318", Offset = "0xA30318")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3032C", Offset = "0xA3032C")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30340", Offset = "0xA30340")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30354", Offset = "0xA30354")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30368", Offset = "0xA30368")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3037C", Offset = "0xA3037C")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30390", Offset = "0xA30390")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA303A4", Offset = "0xA303A4")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA303B8", Offset = "0xA303B8")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA303CC", Offset = "0xA303CC")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA303E0", Offset = "0xA303E0")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA303F4", Offset = "0xA303F4")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30408", Offset = "0xA30408")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3041C", Offset = "0xA3041C")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30430", Offset = "0xA30430")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30444", Offset = "0xA30444")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30458", Offset = "0xA30458")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x20006C1")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3046C", Offset = "0xA3046C")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30480", Offset = "0xA30480")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30494", Offset = "0xA30494")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x20006C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA304A8", Offset = "0xA304A8")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA304BC", Offset = "0xA304BC")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA304D0", Offset = "0xA304D0")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA304E4", Offset = "0xA304E4")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA304F8", Offset = "0xA304F8")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3050C", Offset = "0xA3050C")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30520", Offset = "0xA30520")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30534", Offset = "0xA30534")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30548", Offset = "0xA30548")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3055C", Offset = "0xA3055C")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30570", Offset = "0xA30570")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30584", Offset = "0xA30584")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30598", Offset = "0xA30598")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA305AC", Offset = "0xA305AC")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA305C0", Offset = "0xA305C0")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x20006D4")]
	public struct IVRNotifications
	{
		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA305D4", Offset = "0xA305D4")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA305E8", Offset = "0xA305E8")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x20006D7")]
	public struct IVRSettings
	{
		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA305FC", Offset = "0xA305FC")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30610", Offset = "0xA30610")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30624", Offset = "0xA30624")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30638", Offset = "0xA30638")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3064C", Offset = "0xA3064C")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x20006DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30660", Offset = "0xA30660")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30674", Offset = "0xA30674")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30688", Offset = "0xA30688")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3069C", Offset = "0xA3069C")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA306B0", Offset = "0xA306B0")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA306C4", Offset = "0xA306C4")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA306D8", Offset = "0xA306D8")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x20006E4")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA306EC", Offset = "0xA306EC")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30700", Offset = "0xA30700")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30714", Offset = "0xA30714")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30728", Offset = "0xA30728")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3073C", Offset = "0xA3073C")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30750", Offset = "0xA30750")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30764", Offset = "0xA30764")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20006EC")]
	public struct IVRResources
	{
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30778", Offset = "0xA30778")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3078C", Offset = "0xA3078C")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20006EF")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA307A0", Offset = "0xA307A0")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA307B4", Offset = "0xA307B4")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA307C8", Offset = "0xA307C8")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x20006F3")]
	public class CVRSystem
	{
		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA307DC", Offset = "0xA307DC")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20006F5")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA307F0", Offset = "0xA307F0")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x20006F7")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30804", Offset = "0xA30804")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x20006F9")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1EF857C", Offset = "0x1EF857C", VA = "0x1EF857C")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1EF8664", Offset = "0x1EF8664", VA = "0x1EF8664")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1EF86B4", Offset = "0x1EF86B4", VA = "0x1EF86B4")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x1EF8714", Offset = "0x1EF8714", VA = "0x1EF8714")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x1EF878C", Offset = "0x1EF878C", VA = "0x1EF878C")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x1EF87EC", Offset = "0x1EF87EC", VA = "0x1EF87EC")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x1EF8834", Offset = "0x1EF8834", VA = "0x1EF8834")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x1EF8884", Offset = "0x1EF8884", VA = "0x1EF8884")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x1EF88B4", Offset = "0x1EF88B4", VA = "0x1EF88B4")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x1EF88F0", Offset = "0x1EF88F0", VA = "0x1EF88F0")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x1EF8944", Offset = "0x1EF8944", VA = "0x1EF8944")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x1EF8974", Offset = "0x1EF8974", VA = "0x1EF8974")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x1EF89AC", Offset = "0x1EF89AC", VA = "0x1EF89AC")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x1EF8A1C", Offset = "0x1EF8A1C", VA = "0x1EF8A1C")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x1EF8A4C", Offset = "0x1EF8A4C", VA = "0x1EF8A4C")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x1EF8A84", Offset = "0x1EF8A84", VA = "0x1EF8A84")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x1EF8ABC", Offset = "0x1EF8ABC", VA = "0x1EF8ABC")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x1EF8B24", Offset = "0x1EF8B24", VA = "0x1EF8B24")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x1EF8B5C", Offset = "0x1EF8B5C", VA = "0x1EF8B5C")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x1EF8BAC", Offset = "0x1EF8BAC", VA = "0x1EF8BAC")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x1EF8BE4", Offset = "0x1EF8BE4", VA = "0x1EF8BE4")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x1EF8C1C", Offset = "0x1EF8C1C", VA = "0x1EF8C1C")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x1EF8C54", Offset = "0x1EF8C54", VA = "0x1EF8C54")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x1EF8C8C", Offset = "0x1EF8C8C", VA = "0x1EF8C8C")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x1EF8CDC", Offset = "0x1EF8CDC", VA = "0x1EF8CDC")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x1EF8D2C", Offset = "0x1EF8D2C", VA = "0x1EF8D2C")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x1EF8D7C", Offset = "0x1EF8D7C", VA = "0x1EF8D7C")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x1EF8DCC", Offset = "0x1EF8DCC", VA = "0x1EF8DCC")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x1EF8E2C", Offset = "0x1EF8E2C", VA = "0x1EF8E2C")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x1EF8EA4", Offset = "0x1EF8EA4", VA = "0x1EF8EA4")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x1EF8F0C", Offset = "0x1EF8F0C", VA = "0x1EF8F0C")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x1EF8FA8", Offset = "0x1EF8FA8", VA = "0x1EF8FA8")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x1EF95D4", Offset = "0x1EF95D4", VA = "0x1EF95D4")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x1EF9634", Offset = "0x1EF9634", VA = "0x1EF9634")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x1EF96D0", Offset = "0x1EF96D0", VA = "0x1EF96D0")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x1EF9718", Offset = "0x1EF9718", VA = "0x1EF9718")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x1EF9DAC", Offset = "0x1EF9DAC", VA = "0x1EF9DAC")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x1EFA4B0", Offset = "0x1EFA4B0", VA = "0x1EFA4B0")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x1EFA500", Offset = "0x1EFA500", VA = "0x1EFA500")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x1EFA59C", Offset = "0x1EFA59C", VA = "0x1EFA59C")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x1EFA638", Offset = "0x1EFA638", VA = "0x1EFA638")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x1EFA668", Offset = "0x1EFA668", VA = "0x1EFA668")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x1EFA698", Offset = "0x1EFA698", VA = "0x1EFA698")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0x1EFA6C8", Offset = "0x1EFA6C8", VA = "0x1EFA6C8")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x1EFA6F8", Offset = "0x1EFA6F8", VA = "0x1EFA6F8")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x1EFA758", Offset = "0x1EFA758", VA = "0x1EFA758")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x1EFA790", Offset = "0x1EFA790", VA = "0x1EFA790")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x1EFA7C0", Offset = "0x1EFA7C0", VA = "0x1EFA7C0")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x1E00EA8", Offset = "0x1E00EA8", VA = "0x1E00EA8")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x1E00F90", Offset = "0x1E00F90", VA = "0x1E00F90")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x1E01000", Offset = "0x1E01000", VA = "0x1E01000")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x1E01078", Offset = "0x1E01078", VA = "0x1E01078")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20006FB")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x1EFAB70", Offset = "0x1EFAB70", VA = "0x1EFAB70")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1EFAC58", Offset = "0x1EFAC58", VA = "0x1EFAC58")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x1EFACF4", Offset = "0x1EFACF4", VA = "0x1EFACF4")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x1EFAD40", Offset = "0x1EFAD40", VA = "0x1EFAD40")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x1EFADB4", Offset = "0x1EFADB4", VA = "0x1EFADB4")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x1EFAE14", Offset = "0x1EFAE14", VA = "0x1EFAE14")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1EFAE7C", Offset = "0x1EFAE7C", VA = "0x1EFAE7C")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x1EFAEC8", Offset = "0x1EFAEC8", VA = "0x1EFAEC8")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x1EFAF00", Offset = "0x1EFAF00", VA = "0x1EFAF00")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x1EFAF78", Offset = "0x1EFAF78", VA = "0x1EFAF78")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x1EFAFE8", Offset = "0x1EFAFE8", VA = "0x1EFAFE8")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x1EFB060", Offset = "0x1EFB060", VA = "0x1EFB060")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x1EFB0CC", Offset = "0x1EFB0CC", VA = "0x1EFB0CC")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20006FC")]
	public class CVRApplications
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x1DFECE0", Offset = "0x1DFECE0", VA = "0x1DFECE0")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1DFEDC8", Offset = "0x1DFEDC8", VA = "0x1DFEDC8")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1DFEE10", Offset = "0x1DFEE10", VA = "0x1DFEE10")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x1DFEE48", Offset = "0x1DFEE48", VA = "0x1DFEE48")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x1DFEE80", Offset = "0x1DFEE80", VA = "0x1DFEE80")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x1DFEEB0", Offset = "0x1DFEEB0", VA = "0x1DFEEB0")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x1DFEF00", Offset = "0x1DFEF00", VA = "0x1DFEF00")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1DFEF50", Offset = "0x1DFEF50", VA = "0x1DFEF50")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1DFEF88", Offset = "0x1DFEF88", VA = "0x1DFEF88")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1DFEFF0", Offset = "0x1DFEFF0", VA = "0x1DFEFF0")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x1DFF038", Offset = "0x1DFF038", VA = "0x1DFF038")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x1DFF070", Offset = "0x1DFF070", VA = "0x1DFF070")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1DFF0A8", Offset = "0x1DFF0A8", VA = "0x1DFF0A8")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1DFF0F0", Offset = "0x1DFF0F0", VA = "0x1DFF0F0")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1DFF128", Offset = "0x1DFF128", VA = "0x1DFF128")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1DFF1C4", Offset = "0x1DFF1C4", VA = "0x1DFF1C4")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x1DFF22C", Offset = "0x1DFF22C", VA = "0x1DFF22C")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1DFF27C", Offset = "0x1DFF27C", VA = "0x1DFF27C")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x1DFF2CC", Offset = "0x1DFF2CC", VA = "0x1DFF2CC")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1DFF314", Offset = "0x1DFF314", VA = "0x1DFF314")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x1DFF34C", Offset = "0x1DFF34C", VA = "0x1DFF34C")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x1DFF394", Offset = "0x1DFF394", VA = "0x1DFF394")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x1DFF3E4", Offset = "0x1DFF3E4", VA = "0x1DFF3E4")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1DFF434", Offset = "0x1DFF434", VA = "0x1DFF434")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1DFF484", Offset = "0x1DFF484", VA = "0x1DFF484")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1DFF4D4", Offset = "0x1DFF4D4", VA = "0x1DFF4D4")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x1DFF51C", Offset = "0x1DFF51C", VA = "0x1DFF51C")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1DFF54C", Offset = "0x1DFF54C", VA = "0x1DFF54C")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x1DFF584", Offset = "0x1DFF584", VA = "0x1DFF584")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x1DFF620", Offset = "0x1DFF620", VA = "0x1DFF620")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x1DFF650", Offset = "0x1DFF650", VA = "0x1DFF650")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x1DFF6A0", Offset = "0x1DFF6A0", VA = "0x1DFF6A0")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20006FD")]
	public class CVRChaperone
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x1DFF6D0", Offset = "0x1DFF6D0", VA = "0x1DFF6D0")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x1DFF7B8", Offset = "0x1DFF7B8", VA = "0x1DFF7B8")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x1DFF7E8", Offset = "0x1DFF7E8", VA = "0x1DFF7E8")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x1DFF838", Offset = "0x1DFF838", VA = "0x1DFF838")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x1DFF870", Offset = "0x1DFF870", VA = "0x1DFF870")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1DFF8A0", Offset = "0x1DFF8A0", VA = "0x1DFF8A0")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x1DFF900", Offset = "0x1DFF900", VA = "0x1DFF900")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1DFF960", Offset = "0x1DFF960", VA = "0x1DFF960")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1DFF990", Offset = "0x1DFF990", VA = "0x1DFF990")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20006FE")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x1DFF9C8", Offset = "0x1DFF9C8", VA = "0x1DFF9C8")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x1DFFAB0", Offset = "0x1DFFAB0", VA = "0x1DFFAB0")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x1DFFAE8", Offset = "0x1DFFAE8", VA = "0x1DFFAE8")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x1DFFB18", Offset = "0x1DFFB18", VA = "0x1DFFB18")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x1DFFB68", Offset = "0x1DFFB68", VA = "0x1DFFB68")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x1DFFBA0", Offset = "0x1DFFBA0", VA = "0x1DFFBA0")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x1DFFC58", Offset = "0x1DFFC58", VA = "0x1DFFC58")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x1DFFD10", Offset = "0x1DFFD10", VA = "0x1DFFD10")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x1DFFD48", Offset = "0x1DFFD48", VA = "0x1DFFD48")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1DFFD80", Offset = "0x1DFFD80", VA = "0x1DFFD80")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x1DFFDC8", Offset = "0x1DFFDC8", VA = "0x1DFFDC8")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x1DFFE18", Offset = "0x1DFFE18", VA = "0x1DFFE18")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x1DFFE50", Offset = "0x1DFFE50", VA = "0x1DFFE50")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x1DFFE88", Offset = "0x1DFFE88", VA = "0x1DFFE88")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x1DFFEC0", Offset = "0x1DFFEC0", VA = "0x1DFFEC0")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x1DFFEF8", Offset = "0x1DFFEF8", VA = "0x1DFFEF8")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x1DFFF48", Offset = "0x1DFFF48", VA = "0x1DFFF48")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x1E00000", Offset = "0x1E00000", VA = "0x1E00000")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x1E00050", Offset = "0x1E00050", VA = "0x1E00050")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x1E00108", Offset = "0x1E00108", VA = "0x1E00108")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x1E00154", Offset = "0x1E00154", VA = "0x1E00154")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006FF")]
	public class CVRCompositor
	{
		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x1E0019C", Offset = "0x1E0019C", VA = "0x1E0019C")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x1E00284", Offset = "0x1E00284", VA = "0x1E00284")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x1E002BC", Offset = "0x1E002BC", VA = "0x1E002BC")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x1E002EC", Offset = "0x1E002EC", VA = "0x1E002EC")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x1E00360", Offset = "0x1E00360", VA = "0x1E00360")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x1E003D4", Offset = "0x1E003D4", VA = "0x1E003D4")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x1E00424", Offset = "0x1E00424", VA = "0x1E00424")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x1E00484", Offset = "0x1E00484", VA = "0x1E00484")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x1E004B4", Offset = "0x1E004B4", VA = "0x1E004B4")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x1E004E4", Offset = "0x1E004E4", VA = "0x1E004E4")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x1E0052C", Offset = "0x1E0052C", VA = "0x1E0052C")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x1E00574", Offset = "0x1E00574", VA = "0x1E00574")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x1E005A4", Offset = "0x1E005A4", VA = "0x1E005A4")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x1E005EC", Offset = "0x1E005EC", VA = "0x1E005EC")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x1E00664", Offset = "0x1E00664", VA = "0x1E00664")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x1E0069C", Offset = "0x1E0069C", VA = "0x1E0069C")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x1E006E4", Offset = "0x1E006E4", VA = "0x1E006E4")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x1E00714", Offset = "0x1E00714", VA = "0x1E00714")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x1E00764", Offset = "0x1E00764", VA = "0x1E00764")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x1E00794", Offset = "0x1E00794", VA = "0x1E00794")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x1E007C4", Offset = "0x1E007C4", VA = "0x1E007C4")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1E007F4", Offset = "0x1E007F4", VA = "0x1E007F4")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1E00824", Offset = "0x1E00824", VA = "0x1E00824")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x1E00854", Offset = "0x1E00854", VA = "0x1E00854")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1E00884", Offset = "0x1E00884", VA = "0x1E00884")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x1E008B4", Offset = "0x1E008B4", VA = "0x1E008B4")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x1E008E4", Offset = "0x1E008E4", VA = "0x1E008E4")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x1E00914", Offset = "0x1E00914", VA = "0x1E00914")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x1E00944", Offset = "0x1E00944", VA = "0x1E00944")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x1E00974", Offset = "0x1E00974", VA = "0x1E00974")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x1E009A4", Offset = "0x1E009A4", VA = "0x1E009A4")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x1E009D4", Offset = "0x1E009D4", VA = "0x1E009D4")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x1E00A0C", Offset = "0x1E00A0C", VA = "0x1E00A0C")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x1E00A3C", Offset = "0x1E00A3C", VA = "0x1E00A3C")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x1E00A74", Offset = "0x1E00A74", VA = "0x1E00A74")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x1E00AC4", Offset = "0x1E00AC4", VA = "0x1E00AC4")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x1E00AFC", Offset = "0x1E00AFC", VA = "0x1E00AFC")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x1E00B50", Offset = "0x1E00B50", VA = "0x1E00B50")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x1E00B98", Offset = "0x1E00B98", VA = "0x1E00B98")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x1E00BD0", Offset = "0x1E00BD0", VA = "0x1E00BD0")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x1E00C08", Offset = "0x1E00C08", VA = "0x1E00C08")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1E00C50", Offset = "0x1E00C50", VA = "0x1E00C50")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1E00CA0", Offset = "0x1E00CA0", VA = "0x1E00CA0")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1E00CD8", Offset = "0x1E00CD8", VA = "0x1E00CD8")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x2000700")]
	public class CVROverlay
	{
		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA30818", Offset = "0xA30818")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000702")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x1E01264", Offset = "0x1E01264", VA = "0x1E01264")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x1E0134C", Offset = "0x1E0134C", VA = "0x1E0134C")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x1E01398", Offset = "0x1E01398", VA = "0x1E01398")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1E013EC", Offset = "0x1E013EC", VA = "0x1E013EC")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x1E01424", Offset = "0x1E01424", VA = "0x1E01424")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x1E0145C", Offset = "0x1E0145C", VA = "0x1E0145C")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x1E0148C", Offset = "0x1E0148C", VA = "0x1E0148C")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x1E014EC", Offset = "0x1E014EC", VA = "0x1E014EC")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1E0154C", Offset = "0x1E0154C", VA = "0x1E0154C")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x1E01594", Offset = "0x1E01594", VA = "0x1E01594")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x1E01604", Offset = "0x1E01604", VA = "0x1E01604")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1E016A0", Offset = "0x1E016A0", VA = "0x1E016A0")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x1E016E8", Offset = "0x1E016E8", VA = "0x1E016E8")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1E01720", Offset = "0x1E01720", VA = "0x1E01720")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x1E01770", Offset = "0x1E01770", VA = "0x1E01770")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x1E017C4", Offset = "0x1E017C4", VA = "0x1E017C4")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1E01824", Offset = "0x1E01824", VA = "0x1E01824")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x1E01890", Offset = "0x1E01890", VA = "0x1E01890")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x1E018D8", Offset = "0x1E018D8", VA = "0x1E018D8")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1E01924", Offset = "0x1E01924", VA = "0x1E01924")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1E0196C", Offset = "0x1E0196C", VA = "0x1E0196C")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1E019B8", Offset = "0x1E019B8", VA = "0x1E019B8")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x1E01A00", Offset = "0x1E01A00", VA = "0x1E01A00")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1E01A4C", Offset = "0x1E01A4C", VA = "0x1E01A4C")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1E01A94", Offset = "0x1E01A94", VA = "0x1E01A94")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1E01AE0", Offset = "0x1E01AE0", VA = "0x1E01AE0")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x1E01B30", Offset = "0x1E01B30", VA = "0x1E01B30")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1E01B88", Offset = "0x1E01B88", VA = "0x1E01B88")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1E01BD0", Offset = "0x1E01BD0", VA = "0x1E01BD0")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1E01C18", Offset = "0x1E01C18", VA = "0x1E01C18")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x1E01C60", Offset = "0x1E01C60", VA = "0x1E01C60")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1E01CA8", Offset = "0x1E01CA8", VA = "0x1E01CA8")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1E01D10", Offset = "0x1E01D10", VA = "0x1E01D10")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1E01D60", Offset = "0x1E01D60", VA = "0x1E01D60")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x1E01DA8", Offset = "0x1E01DA8", VA = "0x1E01DA8")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x1E01DF8", Offset = "0x1E01DF8", VA = "0x1E01DF8")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x1E01E48", Offset = "0x1E01E48", VA = "0x1E01E48")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x1E01E98", Offset = "0x1E01E98", VA = "0x1E01E98")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x1E01EEC", Offset = "0x1E01EEC", VA = "0x1E01EEC")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x1E01F3C", Offset = "0x1E01F3C", VA = "0x1E01F3C")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x1E01FA0", Offset = "0x1E01FA0", VA = "0x1E01FA0")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x1E01FF4", Offset = "0x1E01FF4", VA = "0x1E01FF4")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x1E02044", Offset = "0x1E02044", VA = "0x1E02044")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x1E0207C", Offset = "0x1E0207C", VA = "0x1E0207C")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x1E020B4", Offset = "0x1E020B4", VA = "0x1E020B4")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x1E020EC", Offset = "0x1E020EC", VA = "0x1E020EC")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x1E02154", Offset = "0x1E02154", VA = "0x1E02154")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x1E027C4", Offset = "0x1E027C4", VA = "0x1E027C4")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x1E0280C", Offset = "0x1E0280C", VA = "0x1E0280C")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x1E02854", Offset = "0x1E02854", VA = "0x1E02854")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x1E0289C", Offset = "0x1E0289C", VA = "0x1E0289C")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x1E028E4", Offset = "0x1E028E4", VA = "0x1E028E4")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x1E02934", Offset = "0x1E02934", VA = "0x1E02934")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x1E0296C", Offset = "0x1E0296C", VA = "0x1E0296C")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x1E0299C", Offset = "0x1E0299C", VA = "0x1E0299C")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x1E029D4", Offset = "0x1E029D4", VA = "0x1E029D4")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x1E02A24", Offset = "0x1E02A24", VA = "0x1E02A24")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x1E02A6C", Offset = "0x1E02A6C", VA = "0x1E02A6C")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x1E02ACC", Offset = "0x1E02ACC", VA = "0x1E02ACC")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x1E02B30", Offset = "0x1E02B30", VA = "0x1E02B30")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x1E02B78", Offset = "0x1E02B78", VA = "0x1E02B78")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x1E02BB0", Offset = "0x1E02BB0", VA = "0x1E02BB0")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x1E02C18", Offset = "0x1E02C18", VA = "0x1E02C18")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x1E02C60", Offset = "0x1E02C60", VA = "0x1E02C60")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x1E02CFC", Offset = "0x1E02CFC", VA = "0x1E02CFC")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x1E02D44", Offset = "0x1E02D44", VA = "0x1E02D44")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x1E02D9C", Offset = "0x1E02D9C", VA = "0x1E02D9C")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x1E02E04", Offset = "0x1E02E04", VA = "0x1E02E04")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x1E02E34", Offset = "0x1E02E34", VA = "0x1E02E34")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x1E02E6C", Offset = "0x1E02E6C", VA = "0x1E02E6C")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x1E02EB4", Offset = "0x1E02EB4", VA = "0x1E02EB4")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x1E02F00", Offset = "0x1E02F00", VA = "0x1E02F00")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x1E02F38", Offset = "0x1E02F38", VA = "0x1E02F38")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x1E02F68", Offset = "0x1E02F68", VA = "0x1E02F68")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x1E02FE8", Offset = "0x1E02FE8", VA = "0x1E02FE8")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x1E03074", Offset = "0x1E03074", VA = "0x1E03074")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x1E030BC", Offset = "0x1E030BC", VA = "0x1E030BC")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x1E030EC", Offset = "0x1E030EC", VA = "0x1E030EC")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1E03134", Offset = "0x1E03134", VA = "0x1E03134")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1E0319C", Offset = "0x1E0319C", VA = "0x1E0319C")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1E031FC", Offset = "0x1E031FC", VA = "0x1E031FC")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x1E03248", Offset = "0x1E03248", VA = "0x1E03248")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1E032C0", Offset = "0x1E032C0", VA = "0x1E032C0")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x2000703")]
	public class CVRRenderModels
	{
		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xA3082C", Offset = "0xA3082C")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x2000705")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1E03414", Offset = "0x1E03414", VA = "0x1E03414")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x1E034FC", Offset = "0x1E034FC", VA = "0x1E034FC")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x1E03544", Offset = "0x1E03544", VA = "0x1E03544")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x1E0357C", Offset = "0x1E0357C", VA = "0x1E0357C")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x1E035C4", Offset = "0x1E035C4", VA = "0x1E035C4")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x1E035FC", Offset = "0x1E035FC", VA = "0x1E035FC")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x1E0364C", Offset = "0x1E0364C", VA = "0x1E0364C")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x1E03694", Offset = "0x1E03694", VA = "0x1E03694")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x1E036CC", Offset = "0x1E036CC", VA = "0x1E036CC")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x1E0371C", Offset = "0x1E0371C", VA = "0x1E0371C")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x1E0374C", Offset = "0x1E0374C", VA = "0x1E0374C")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x1E03784", Offset = "0x1E03784", VA = "0x1E03784")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x1E037E4", Offset = "0x1E037E4", VA = "0x1E037E4")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x1E0382C", Offset = "0x1E0382C", VA = "0x1E0382C")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x1E0388C", Offset = "0x1E0388C", VA = "0x1E0388C")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x1E04208", Offset = "0x1E04208", VA = "0x1E04208")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x1E04250", Offset = "0x1E04250", VA = "0x1E04250")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x1E042B0", Offset = "0x1E042B0", VA = "0x1E042B0")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x1E04310", Offset = "0x1E04310", VA = "0x1E04310")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x2000706")]
	public class CVRNotifications
	{
		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x1E010C8", Offset = "0x1E010C8", VA = "0x1E010C8")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x1E011A8", Offset = "0x1E011A8", VA = "0x1E011A8")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x1E0122C", Offset = "0x1E0122C", VA = "0x1E0122C")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x2000707")]
	public class CVRSettings
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x1EF8040", Offset = "0x1EF8040", VA = "0x1EF8040")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x1EF8128", Offset = "0x1EF8128", VA = "0x1EF8128")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x1EF81C4", Offset = "0x1EF81C4", VA = "0x1EF81C4")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x1EF820C", Offset = "0x1EF820C", VA = "0x1EF820C")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x1EF826C", Offset = "0x1EF826C", VA = "0x1EF826C")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x1EF82CC", Offset = "0x1EF82CC", VA = "0x1EF82CC")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1EF832C", Offset = "0x1EF832C", VA = "0x1EF832C")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x1EF838C", Offset = "0x1EF838C", VA = "0x1EF838C")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x1EF83DC", Offset = "0x1EF83DC", VA = "0x1EF83DC")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x1EF842C", Offset = "0x1EF842C", VA = "0x1EF842C")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x1EF847C", Offset = "0x1EF847C", VA = "0x1EF847C")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x1EF84E4", Offset = "0x1EF84E4", VA = "0x1EF84E4")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x1EF852C", Offset = "0x1EF852C", VA = "0x1EF852C")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x2000708")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x1E04684", Offset = "0x1E04684", VA = "0x1E04684")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1E04774", Offset = "0x1E04774", VA = "0x1E04774")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x1E047D8", Offset = "0x1E047D8", VA = "0x1E047D8")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x1E04828", Offset = "0x1E04828", VA = "0x1E04828")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x1E04870", Offset = "0x1E04870", VA = "0x1E04870")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x1DEF0A0", Offset = "0x1DEF0A0", VA = "0x1DEF0A0")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x1E048D8", Offset = "0x1E048D8", VA = "0x1E048D8")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x1E0492C", Offset = "0x1E0492C", VA = "0x1E0492C")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x2000709")]
	public class CVRResources
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x1E044F4", Offset = "0x1E044F4", VA = "0x1E044F4")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x1E045D4", Offset = "0x1E045D4", VA = "0x1E045D4")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x1E04624", Offset = "0x1E04624", VA = "0x1E04624")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200070A")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x1E00D08", Offset = "0x1E00D08", VA = "0x1E00D08")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x1E00DF0", Offset = "0x1E00DF0", VA = "0x1E00DF0")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x1E00E20", Offset = "0x1E00E20", VA = "0x1E00E20")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x1E00E70", Offset = "0x1E00E70", VA = "0x1E00E70")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x200070B")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6002528")]
		[Address(RVA = "0x1E1D3B8", Offset = "0x1E1D3B8", VA = "0x1E1D3B8")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6002529")]
		[Address(RVA = "0x1E1D46C", Offset = "0x1E1D46C", VA = "0x1E1D46C")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x600252A")]
		[Address(RVA = "0x1E1D500", Offset = "0x1E1D500", VA = "0x1E1D500")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x600252B")]
		[Address(RVA = "0x1E1D59C", Offset = "0x1E1D59C", VA = "0x1E1D59C")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x600252C")]
		[Address(RVA = "0x1E1D6AC", Offset = "0x1E1D6AC", VA = "0x1E1D6AC")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x600252D")]
		[Address(RVA = "0x1E1D750", Offset = "0x1E1D750", VA = "0x1E1D750")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x600252E")]
		[Address(RVA = "0x1E1D81C", Offset = "0x1E1D81C", VA = "0x1E1D81C")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x600252F")]
		[Address(RVA = "0x1E1D8DC", Offset = "0x1E1D8DC", VA = "0x1E1D8DC")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x1E1EA4C", Offset = "0x1E1EA4C", VA = "0x1E1EA4C")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public enum EVREye
	{
		[Token(Token = "0x4001B6E")]
		Eye_Left,
		[Token(Token = "0x4001B6F")]
		Eye_Right
	}
	[Token(Token = "0x200070D")]
	public enum ETextureType
	{
		[Token(Token = "0x4001B71")]
		DirectX,
		[Token(Token = "0x4001B72")]
		OpenGL,
		[Token(Token = "0x4001B73")]
		Vulkan,
		[Token(Token = "0x4001B74")]
		IOSurface,
		[Token(Token = "0x4001B75")]
		DirectX12,
		[Token(Token = "0x4001B76")]
		DXGISharedHandle
	}
	[Token(Token = "0x200070E")]
	public enum EColorSpace
	{
		[Token(Token = "0x4001B78")]
		Auto,
		[Token(Token = "0x4001B79")]
		Gamma,
		[Token(Token = "0x4001B7A")]
		Linear
	}
	[Token(Token = "0x200070F")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4001B7C")]
		Uninitialized = 1,
		[Token(Token = "0x4001B7D")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4001B7E")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4001B7F")]
		Running_OK = 200,
		[Token(Token = "0x4001B80")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x2000710")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4001B82")]
		Invalid,
		[Token(Token = "0x4001B83")]
		HMD,
		[Token(Token = "0x4001B84")]
		Controller,
		[Token(Token = "0x4001B85")]
		GenericTracker,
		[Token(Token = "0x4001B86")]
		TrackingReference,
		[Token(Token = "0x4001B87")]
		DisplayRedirect
	}
	[Token(Token = "0x2000711")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4001B89")]
		Invalid,
		[Token(Token = "0x4001B8A")]
		LeftHand,
		[Token(Token = "0x4001B8B")]
		RightHand,
		[Token(Token = "0x4001B8C")]
		OptOut
	}
	[Token(Token = "0x2000712")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4001B8E")]
		TrackingUniverseSeated,
		[Token(Token = "0x4001B8F")]
		TrackingUniverseStanding,
		[Token(Token = "0x4001B90")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x2000713")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4001B92")]
		Prop_Invalid = 0,
		[Token(Token = "0x4001B93")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4001B94")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001B95")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4001B96")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001B97")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001B98")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001B99")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4001B9A")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4001B9B")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4001B9C")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4001B9D")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4001B9E")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4001B9F")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4001BA0")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4001BA1")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4001BA2")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4001BA3")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4001BA4")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001BA5")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001BA6")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001BA7")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001BA8")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001BA9")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001BAA")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4001BAB")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001BAC")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001BAD")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001BAE")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x4001BAF")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4001BB0")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4001BB1")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4001BB2")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4001BB3")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4001BB4")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001BB5")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001BB6")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001BB7")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001BB8")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001BB9")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x4001BBA")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001BBB")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001BBC")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001BBD")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001BBE")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001BBF")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4001BC0")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4001BC1")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4001BC2")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x4001BC3")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x4001BC4")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4001BC5")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001BC6")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001BC7")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001BC8")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001BC9")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001BCA")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001BCB")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001BCC")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001BCD")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001BCE")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001BCF")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4001BD0")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4001BD1")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4001BD2")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x4001BD3")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x4001BD4")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4001BD5")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001BD6")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001BD7")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001BD8")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001BD9")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001BDA")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001BDB")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001BDC")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001BDD")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001BDE")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001BDF")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4001BE0")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4001BE1")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4001BE2")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x4001BE3")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x4001BE4")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4001BE5")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4001BE6")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001BE7")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001BE8")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001BE9")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001BEA")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001BEB")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001BEC")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001BED")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001BEE")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4001BEF")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x4001BF0")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x4001BF1")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x4001BF2")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x4001BF3")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x4001BF4")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x4001BF5")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x4001BF6")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x4001BF7")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001BF8")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001BF9")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001BFA")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4001BFB")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4001BFC")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001BFD")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001BFE")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4001BFF")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4001C00")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4001C01")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4001C02")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4001C03")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4001C04")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001C05")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001C06")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001C07")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001C08")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001C09")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001C0A")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4001C0B")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4001C0C")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001C0D")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001C0E")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4001C0F")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4001C10")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4001C11")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4001C12")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4001C13")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4001C14")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4001C15")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4001C16")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4001C17")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4001C18")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4001C19")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4001C1A")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4001C1B")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001C1C")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001C1D")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x2000714")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4001C1F")]
		TrackedProp_Success,
		[Token(Token = "0x4001C20")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4001C21")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4001C22")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4001C23")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4001C24")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4001C25")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4001C26")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4001C27")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4001C28")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4001C29")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4001C2A")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4001C2B")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x2000715")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4001C2D")]
		Submit_Default = 0,
		[Token(Token = "0x4001C2E")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4001C2F")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4001C30")]
		Submit_Reserved = 4,
		[Token(Token = "0x4001C31")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4001C32")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x2000716")]
	public enum EVRState
	{
		[Token(Token = "0x4001C34")]
		Undefined = -1,
		[Token(Token = "0x4001C35")]
		Off,
		[Token(Token = "0x4001C36")]
		Searching,
		[Token(Token = "0x4001C37")]
		Searching_Alert,
		[Token(Token = "0x4001C38")]
		Ready,
		[Token(Token = "0x4001C39")]
		Ready_Alert,
		[Token(Token = "0x4001C3A")]
		NotReady,
		[Token(Token = "0x4001C3B")]
		Standby,
		[Token(Token = "0x4001C3C")]
		Ready_Alert_Low
	}
	[Token(Token = "0x2000717")]
	public enum EVREventType
	{
		[Token(Token = "0x4001C3E")]
		VREvent_None = 0,
		[Token(Token = "0x4001C3F")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4001C40")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4001C41")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4001C42")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4001C43")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4001C44")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4001C45")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4001C46")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4001C47")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4001C48")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4001C49")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4001C4A")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4001C4B")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4001C4C")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4001C4D")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4001C4E")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4001C4F")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4001C50")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4001C51")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4001C52")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001C53")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4001C54")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4001C55")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4001C56")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4001C57")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4001C58")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4001C59")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4001C5A")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4001C5B")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4001C5C")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4001C5D")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4001C5E")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4001C5F")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4001C60")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4001C61")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4001C62")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4001C63")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4001C64")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4001C65")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4001C66")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4001C67")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4001C68")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4001C69")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x4001C6A")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4001C6B")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4001C6C")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4001C6D")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4001C6E")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4001C6F")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4001C70")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001C71")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001C72")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4001C73")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001C74")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4001C75")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4001C76")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4001C77")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4001C78")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4001C79")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4001C7A")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4001C7B")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4001C7C")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4001C7D")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4001C7E")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4001C7F")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x4001C80")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001C81")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001C82")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001C83")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4001C84")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4001C85")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4001C86")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4001C87")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4001C88")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4001C89")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4001C8A")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4001C8B")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4001C8C")]
		VREvent_Quit = 700,
		[Token(Token = "0x4001C8D")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4001C8E")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4001C8F")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4001C90")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4001C91")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4001C92")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4001C93")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4001C94")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001C95")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4001C96")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4001C97")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4001C98")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4001C99")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4001C9A")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4001C9B")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001C9C")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001C9D")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001C9E")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001C9F")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001CA0")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001CA1")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001CA2")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001CA3")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001CA4")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4001CA5")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x4001CA6")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4001CA7")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4001CA8")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4001CA9")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4001CAA")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4001CAB")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001CAC")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001CAD")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001CAE")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001CAF")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001CB0")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001CB1")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001CB2")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001CB3")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001CB4")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001CB5")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x4001CB6")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4001CB7")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4001CB8")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4001CB9")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4001CBA")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4001CBB")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001CBC")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001CBD")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001CBE")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001CBF")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001CC0")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001CC1")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001CC2")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001CC3")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001CC4")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001CC5")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4001CC6")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001CC7")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x2000718")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4001CC9")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4001CCA")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4001CCB")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001CCC")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001CCD")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000719")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001CCF")]
		k_EButton_System = 0,
		[Token(Token = "0x4001CD0")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001CD1")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001CD2")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001CD3")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001CD4")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001CD5")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4001CD6")]
		k_EButton_A = 7,
		[Token(Token = "0x4001CD7")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001CD8")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4001CD9")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4001CDA")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4001CDB")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001CDC")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001CDD")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001CDE")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001CDF")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001CE0")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x200071A")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001CE2")]
		Left = 1,
		[Token(Token = "0x4001CE3")]
		Right = 2,
		[Token(Token = "0x4001CE4")]
		Middle = 4
	}
	[Token(Token = "0x200071B")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4001CE6")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001CE7")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x200071C")]
	public enum EVRInputError
	{
		[Token(Token = "0x4001CE9")]
		None,
		[Token(Token = "0x4001CEA")]
		NameNotFound,
		[Token(Token = "0x4001CEB")]
		WrongType,
		[Token(Token = "0x4001CEC")]
		InvalidHandle,
		[Token(Token = "0x4001CED")]
		InvalidParam,
		[Token(Token = "0x4001CEE")]
		NoSteam,
		[Token(Token = "0x4001CEF")]
		MaxCapacityReached,
		[Token(Token = "0x4001CF0")]
		IPCError,
		[Token(Token = "0x4001CF1")]
		NoActiveActionSet,
		[Token(Token = "0x4001CF2")]
		InvalidDevice
	}
	[Token(Token = "0x200071D")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001CF4")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001CF5")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001CF6")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001CF7")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x200071E")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001CF9")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001CFA")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4001CFB")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4001CFC")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x200071F")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4001CFE")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4001CFF")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x2000720")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001D01")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001D02")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001D03")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001D04")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001D05")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001D06")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x2000721")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001D08")]
		None = 0,
		[Token(Token = "0x4001D09")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001D0A")]
		InvalidHandle = 11,
		[Token(Token = "0x4001D0B")]
		PermissionDenied = 12,
		[Token(Token = "0x4001D0C")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4001D0D")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4001D0E")]
		KeyTooLong = 15,
		[Token(Token = "0x4001D0F")]
		NameTooLong = 16,
		[Token(Token = "0x4001D10")]
		KeyInUse = 17,
		[Token(Token = "0x4001D11")]
		WrongTransformType = 18,
		[Token(Token = "0x4001D12")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001D13")]
		InvalidParameter = 20,
		[Token(Token = "0x4001D14")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001D15")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001D16")]
		RequestFailed = 23,
		[Token(Token = "0x4001D17")]
		InvalidTexture = 24,
		[Token(Token = "0x4001D18")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001D19")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4001D1A")]
		NoNeighbor = 27,
		[Token(Token = "0x4001D1B")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4001D1C")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4001D1D")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4001D1E")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4001D1F")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x2000722")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4001D21")]
		VRApplication_Other,
		[Token(Token = "0x4001D22")]
		VRApplication_Scene,
		[Token(Token = "0x4001D23")]
		VRApplication_Overlay,
		[Token(Token = "0x4001D24")]
		VRApplication_Background,
		[Token(Token = "0x4001D25")]
		VRApplication_Utility,
		[Token(Token = "0x4001D26")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001D27")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001D28")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4001D29")]
		VRApplication_Max
	}
	[Token(Token = "0x2000723")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4001D2B")]
		None,
		[Token(Token = "0x4001D2C")]
		Success,
		[Token(Token = "0x4001D2D")]
		Fail
	}
	[Token(Token = "0x2000724")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4001D2F")]
		OK = 0,
		[Token(Token = "0x4001D30")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4001D31")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001D32")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001D33")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x2000725")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001D35")]
		None = 0,
		[Token(Token = "0x4001D36")]
		Unknown = 1,
		[Token(Token = "0x4001D37")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001D38")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4001D39")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4001D3A")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4001D3B")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4001D3C")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4001D3D")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4001D3E")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4001D3F")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4001D40")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4001D41")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4001D42")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4001D43")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4001D44")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001D45")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001D46")]
		Init_Retry = 115,
		[Token(Token = "0x4001D47")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001D48")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4001D49")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4001D4A")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4001D4B")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001D4C")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001D4D")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001D4E")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001D4F")]
		Init_Internal = 124,
		[Token(Token = "0x4001D50")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4001D51")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001D52")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001D53")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001D54")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001D55")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4001D56")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4001D57")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4001D58")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4001D59")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4001D5A")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4001D5B")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4001D5C")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4001D5D")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4001D5E")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4001D5F")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4001D60")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x4001D61")]
		Driver_Failed = 200,
		[Token(Token = "0x4001D62")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001D63")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001D64")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001D65")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4001D66")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4001D67")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4001D68")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4001D69")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4001D6A")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4001D6B")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4001D6C")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4001D6D")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4001D6E")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4001D6F")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4001D70")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4001D71")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4001D72")]
		IPC_Failed = 305,
		[Token(Token = "0x4001D73")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001D74")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001D75")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4001D76")]
		Compositor_Failed = 400,
		[Token(Token = "0x4001D77")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4001D78")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4001D79")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4001D7A")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4001D7B")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4001D7C")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4001D7D")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4001D7E")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4001D7F")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4001D80")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001D81")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001D82")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001D83")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001D84")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001D85")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001D86")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001D87")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4001D88")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4001D89")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4001D8A")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4001D8B")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x2000726")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001D8D")]
		None,
		[Token(Token = "0x4001D8E")]
		Mono,
		[Token(Token = "0x4001D8F")]
		Stereo,
		[Token(Token = "0x4001D90")]
		Cubemap,
		[Token(Token = "0x4001D91")]
		MonoPanorama,
		[Token(Token = "0x4001D92")]
		StereoPanorama
	}
	[Token(Token = "0x2000727")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001D94")]
		Preview,
		[Token(Token = "0x4001D95")]
		VR
	}
	[Token(Token = "0x2000728")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4001D97")]
		None = 0,
		[Token(Token = "0x4001D98")]
		OperationFailed = 100,
		[Token(Token = "0x4001D99")]
		InvalidHandle = 101,
		[Token(Token = "0x4001D9A")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4001D9B")]
		OutOfHandles = 103,
		[Token(Token = "0x4001D9C")]
		IPCFailure = 104,
		[Token(Token = "0x4001D9D")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001D9E")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001D9F")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001DA0")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001DA1")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001DA2")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001DA3")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001DA4")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001DA5")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4001DA6")]
		InvalidArgument = 114,
		[Token(Token = "0x4001DA7")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000729")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4001DA9")]
		Distorted,
		[Token(Token = "0x4001DAA")]
		Undistorted,
		[Token(Token = "0x4001DAB")]
		MaximumUndistorted,
		[Token(Token = "0x4001DAC")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x200072A")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001DAE")]
		None = 0,
		[Token(Token = "0x4001DAF")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001DB0")]
		NoManifest = 101,
		[Token(Token = "0x4001DB1")]
		NoApplication = 102,
		[Token(Token = "0x4001DB2")]
		InvalidIndex = 103,
		[Token(Token = "0x4001DB3")]
		UnknownApplication = 104,
		[Token(Token = "0x4001DB4")]
		IPCFailed = 105,
		[Token(Token = "0x4001DB5")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001DB6")]
		InvalidManifest = 107,
		[Token(Token = "0x4001DB7")]
		InvalidApplication = 108,
		[Token(Token = "0x4001DB8")]
		LaunchFailed = 109,
		[Token(Token = "0x4001DB9")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001DBA")]
		LaunchInProgress = 111,
		[Token(Token = "0x4001DBB")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001DBC")]
		TransitionAborted = 113,
		[Token(Token = "0x4001DBD")]
		IsTemplate = 114,
		[Token(Token = "0x4001DBE")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001DBF")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001DC0")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001DC1")]
		UnknownProperty = 202,
		[Token(Token = "0x4001DC2")]
		InvalidParameter = 203
	}
	[Token(Token = "0x200072B")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001DC4")]
		Name_String = 0,
		[Token(Token = "0x4001DC5")]
		LaunchType_String = 11,
		[Token(Token = "0x4001DC6")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001DC7")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001DC8")]
		Arguments_String = 14,
		[Token(Token = "0x4001DC9")]
		URL_String = 15,
		[Token(Token = "0x4001DCA")]
		Description_String = 50,
		[Token(Token = "0x4001DCB")]
		NewsURL_String = 51,
		[Token(Token = "0x4001DCC")]
		ImagePath_String = 52,
		[Token(Token = "0x4001DCD")]
		Source_String = 53,
		[Token(Token = "0x4001DCE")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4001DCF")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001DD0")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001DD1")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001DD2")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001DD3")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001DD4")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x200072C")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001DD6")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001DD7")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001DD8")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001DD9")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x200072D")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4001DDB")]
		OK = 1,
		[Token(Token = "0x4001DDC")]
		Warning = 100,
		[Token(Token = "0x4001DDD")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001DDE")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4001DDF")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001DE0")]
		Error = 200,
		[Token(Token = "0x4001DE1")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001DE2")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001DE3")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001DE4")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x200072E")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001DE6")]
		Live = 1,
		[Token(Token = "0x4001DE7")]
		Temp
	}
	[Token(Token = "0x200072F")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001DE9")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x2000730")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4001DEB")]
		None = 0,
		[Token(Token = "0x4001DEC")]
		RequestFailed = 1,
		[Token(Token = "0x4001DED")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001DEE")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4001DEF")]
		InvalidTexture = 102,
		[Token(Token = "0x4001DF0")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4001DF1")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4001DF2")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001DF3")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001DF4")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001DF5")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001DF6")]
		InvalidBounds = 109
	}
	[Token(Token = "0x2000731")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001DF8")]
		Implicit,
		[Token(Token = "0x4001DF9")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001DFA")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x2000732")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4001DFC")]
		None,
		[Token(Token = "0x4001DFD")]
		Mouse,
		[Token(Token = "0x4001DFE")]
		DualAnalog
	}
	[Token(Token = "0x2000733")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4001E00")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4001E01")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4001E02")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001E03")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x2000734")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001E05")]
		None,
		[Token(Token = "0x4001E06")]
		Curved,
		[Token(Token = "0x4001E07")]
		RGSS4X,
		[Token(Token = "0x4001E08")]
		NoDashboardTab,
		[Token(Token = "0x4001E09")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4001E0A")]
		ShowGamepadFocus,
		[Token(Token = "0x4001E0B")]
		SendVRScrollEvents,
		[Token(Token = "0x4001E0C")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4001E0D")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4001E0E")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4001E0F")]
		SideBySide_Parallel,
		[Token(Token = "0x4001E10")]
		SideBySide_Crossed,
		[Token(Token = "0x4001E11")]
		Panorama,
		[Token(Token = "0x4001E12")]
		StereoPanorama,
		[Token(Token = "0x4001E13")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4001E14")]
		VisibleInDashboard
	}
	[Token(Token = "0x2000735")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001E16")]
		ButtonPress_0,
		[Token(Token = "0x4001E17")]
		ButtonPress_1,
		[Token(Token = "0x4001E18")]
		ButtonPress_2,
		[Token(Token = "0x4001E19")]
		ButtonPress_3,
		[Token(Token = "0x4001E1A")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4001E1B")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4001E1C")]
		ApplicationQuit
	}
	[Token(Token = "0x2000736")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4001E1E")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4001E1F")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4001E20")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x2000737")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4001E22")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4001E23")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000738")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001E25")]
		Up,
		[Token(Token = "0x4001E26")]
		Down,
		[Token(Token = "0x4001E27")]
		Left,
		[Token(Token = "0x4001E28")]
		Right,
		[Token(Token = "0x4001E29")]
		Count
	}
	[Token(Token = "0x2000739")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4001E2B")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4001E2C")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x200073A")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4001E2E")]
		None = 0,
		[Token(Token = "0x4001E2F")]
		Loading = 100,
		[Token(Token = "0x4001E30")]
		NotSupported = 200,
		[Token(Token = "0x4001E31")]
		InvalidArg = 300,
		[Token(Token = "0x4001E32")]
		InvalidModel = 301,
		[Token(Token = "0x4001E33")]
		NoShapes = 302,
		[Token(Token = "0x4001E34")]
		MultipleShapes = 303,
		[Token(Token = "0x4001E35")]
		TooManyVertices = 304,
		[Token(Token = "0x4001E36")]
		MultipleTextures = 305,
		[Token(Token = "0x4001E37")]
		BufferTooSmall = 306,
		[Token(Token = "0x4001E38")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4001E39")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4001E3A")]
		InvalidTexture = 400
	}
	[Token(Token = "0x200073B")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4001E3C")]
		IsStatic = 1,
		[Token(Token = "0x4001E3D")]
		IsVisible = 2,
		[Token(Token = "0x4001E3E")]
		IsTouched = 4,
		[Token(Token = "0x4001E3F")]
		IsPressed = 8,
		[Token(Token = "0x4001E40")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x200073C")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4001E42")]
		Transient,
		[Token(Token = "0x4001E43")]
		Persistent,
		[Token(Token = "0x4001E44")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x200073D")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001E46")]
		None = 0,
		[Token(Token = "0x4001E47")]
		Application = 100,
		[Token(Token = "0x4001E48")]
		Contact_Disabled = 200,
		[Token(Token = "0x4001E49")]
		Contact_Enabled = 201,
		[Token(Token = "0x4001E4A")]
		Contact_Active = 202
	}
	[Token(Token = "0x200073E")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4001E4C")]
		None,
		[Token(Token = "0x4001E4D")]
		IPCFailed,
		[Token(Token = "0x4001E4E")]
		WriteFailed,
		[Token(Token = "0x4001E4F")]
		ReadFailed,
		[Token(Token = "0x4001E50")]
		JsonParseFailed,
		[Token(Token = "0x4001E51")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x200073F")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001E53")]
		None = 0,
		[Token(Token = "0x4001E54")]
		RequestFailed = 1,
		[Token(Token = "0x4001E55")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001E56")]
		NotFound = 101,
		[Token(Token = "0x4001E57")]
		BufferTooSmall = 102,
		[Token(Token = "0x4001E58")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x2000740")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000741")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x2000742")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x2000743")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x2000744")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x2000745")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x2000746")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000747")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000748")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000749")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x200074A")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x200074B")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x200074C")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x200074D")]
	public struct Texture_t
	{
		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x200074E")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x200074F")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x2000750")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x2000751")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x2000752")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000753")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000754")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x2000755")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x2000756")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x2000757")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x2000758")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x2000759")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x200075A")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x200075B")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x200075C")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x200075D")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x200075E")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x200075F")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000760")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000761")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x2000762")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000763")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000764")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x2000765")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x2000766")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000767")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000768")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000769")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x200076A")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x200076B")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x200076C")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x200076D")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xA44574", Offset = "0xA44574", VA = "0xA44574")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xA445C8", Offset = "0xA445C8", VA = "0xA445C8")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x200076E")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x200076F")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000770")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000771")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xA4452C", Offset = "0xA4452C", VA = "0xA4452C")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xA4456C", Offset = "0xA4456C", VA = "0xA4456C")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000772")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000773")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000774")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x2000775")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x2000776")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x2000777")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x2000778")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x2000779")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x200077A")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x200077B")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x200077C")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x200077D")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x200077E")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x200077F")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000780")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xA444AC", Offset = "0xA444AC", VA = "0xA444AC")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xA444C0", Offset = "0xA444C0", VA = "0xA444C0")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000781")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000782")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xA444DC", Offset = "0xA444DC", VA = "0xA444DC")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xA44500", Offset = "0xA44500", VA = "0xA44500")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000783")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000784")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000785")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x2000786")]
	public class OpenVR
	{
		[Token(Token = "0x2000787")]
		private class COpenVRContext
		{
			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6002553")]
			[Address(RVA = "0x1E1DB1C", Offset = "0x1E1DB1C", VA = "0x1E1DB1C")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6002554")]
			[Address(RVA = "0x1E1E90C", Offset = "0x1E1E90C", VA = "0x1E1E90C")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002555")]
			[Address(RVA = "0x1E1E994", Offset = "0x1E1E994", VA = "0x1E1E994")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6002556")]
			[Address(RVA = "0x1E1DBBC", Offset = "0x1E1DBBC", VA = "0x1E1DBBC")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6002557")]
			[Address(RVA = "0x1E1DCEC", Offset = "0x1E1DCEC", VA = "0x1E1DCEC")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6002558")]
			[Address(RVA = "0x1E1DE1C", Offset = "0x1E1DE1C", VA = "0x1E1DE1C")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6002559")]
			[Address(RVA = "0x1E1DF4C", Offset = "0x1E1DF4C", VA = "0x1E1DF4C")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x600255A")]
			[Address(RVA = "0x1E1E07C", Offset = "0x1E1E07C", VA = "0x1E1E07C")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x600255B")]
			[Address(RVA = "0x1E1E13C", Offset = "0x1E1E13C", VA = "0x1E1E13C")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x600255C")]
			[Address(RVA = "0x1E1E26C", Offset = "0x1E1E26C", VA = "0x1E1E26C")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x600255D")]
			[Address(RVA = "0x1E1E39C", Offset = "0x1E1E39C", VA = "0x1E1E39C")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x600255E")]
			[Address(RVA = "0x1E1E4CC", Offset = "0x1E1E4CC", VA = "0x1E1E4CC")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x600255F")]
			[Address(RVA = "0x1E1E5FC", Offset = "0x1E1E5FC", VA = "0x1E1E5FC")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6002560")]
			[Address(RVA = "0x1E1E72C", Offset = "0x1E1E72C", VA = "0x1E1E72C")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4001F9E")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001F9F")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001FA0")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001FA1")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001FA2")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001FA3")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001FA4")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001FA5")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4001FA6")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x4001FA7")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4001FA8")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4001FA9")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4001FAA")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4001FAB")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4001FAC")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4001FAD")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4001FAE")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4001FAF")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001FB0")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001FB1")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001FB2")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001FB3")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001FB4")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001FB5")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001FB6")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001FB7")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001FB8")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001FB9")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001FBA")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4001FBB")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001FBC")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4001FBD")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001FBE")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4001FBF")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4001FC0")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001FC1")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001FC2")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001FC3")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001FC4")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001FC5")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001FC6")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001FC7")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001FC8")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001FC9")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001FCA")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4001FCB")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001FCC")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001FCD")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001FCE")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4001FCF")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4001FD0")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4001FD1")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001FD2")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001FD3")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001FD4")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001FD5")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001FD6")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001FD7")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001FD8")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001FD9")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001FDA")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001FDB")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001FDC")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001FDD")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001FDE")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4001FDF")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4001FE0")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001FE1")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001FE2")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001FE3")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001FE4")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001FE5")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001FE6")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001FE7")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001FE8")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001FE9")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001FEA")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4001FEB")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001FEC")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4001FED")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4001FEE")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4001FEF")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4001FF0")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4001FF1")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4001FF2")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4001FF3")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4001FF4")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4001FF5")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001FF6")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001FF7")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001FF8")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001FF9")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001FFA")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001FFB")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001FFC")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4001FFD")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4001FFE")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4001FFF")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4002000")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4002001")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4002002")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4002003")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4002004")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4002005")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4002006")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4002007")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4002008")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4002009")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x400200A")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x400200B")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x400200C")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x400200D")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x400200E")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x400200F")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4002010")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4002011")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4002012")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4002013")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4002014")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4002015")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4002016")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4002017")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4002018")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4002019")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x400201A")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x400201B")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x400201C")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x400201D")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x400201E")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x400201F")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4002020")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4002021")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4002022")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4002023")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4002024")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4002025")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4002026")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4002027")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4002028")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4002029")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x400202A")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x400202B")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x400202C")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x400202D")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x400202E")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x400202F")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4002030")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4002031")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4002032")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4002033")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4002034")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4002035")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4002036")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4002037")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4002038")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4002039")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x400203A")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x400203B")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x400203C")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x400203D")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x400203E")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x400203F")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4002040")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4002041")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4002042")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4002043")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4002044")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4002045")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4002046")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4002047")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4002048")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4002049")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x400204A")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x400204B")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x400204C")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x400204D")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x400204E")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x400204F")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4002050")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4002051")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4002052")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4002053")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4002054")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4002055")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x4002056")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4002057")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4002058")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x4002059")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x400205A")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x400205B")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x400205C")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37870", Offset = "0xA37870")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x400205E")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x17000352")]
		private static uint VRToken
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x1E1D96C", Offset = "0x1E1D96C", VA = "0x1E1D96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43184", Offset = "0xA43184")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x1E1D9D4", Offset = "0x1E1D9D4", VA = "0x1E1D9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43194", Offset = "0xA43194")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0x1E1DA40", Offset = "0x1E1DA40", VA = "0x1E1DA40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		public static CVRSystem System
		{
			[Token(Token = "0x6002544")]
			[Address(RVA = "0x1E1DB4C", Offset = "0x1E1DB4C", VA = "0x1E1DB4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6002545")]
			[Address(RVA = "0x1E1DC7C", Offset = "0x1E1DC7C", VA = "0x1E1DC7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6002546")]
			[Address(RVA = "0x1E1DDAC", Offset = "0x1E1DDAC", VA = "0x1E1DDAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6002547")]
			[Address(RVA = "0x1E1DEDC", Offset = "0x1E1DEDC", VA = "0x1E1DEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0x1E1E00C", Offset = "0x1E1E00C", VA = "0x1E1E00C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0x1E10458", Offset = "0x1E10458", VA = "0x1E10458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0x1E1E1FC", Offset = "0x1E1E1FC", VA = "0x1E1E1FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0x1E1E32C", Offset = "0x1E1E32C", VA = "0x1E1E32C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x600254C")]
			[Address(RVA = "0x1E1E45C", Offset = "0x1E1E45C", VA = "0x1E1E45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x600254D")]
			[Address(RVA = "0x1E1E58C", Offset = "0x1E1E58C", VA = "0x1E1E58C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0x1E1E6BC", Offset = "0x1E1E6BC", VA = "0x1E1E6BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x1E1D3B4", Offset = "0x1E1D3B4", VA = "0x1E1D3B4")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x1E1D468", Offset = "0x1E1D468", VA = "0x1E1D468")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x1E1D4FC", Offset = "0x1E1D4FC", VA = "0x1E1D4FC")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x1E1D598", Offset = "0x1E1D598", VA = "0x1E1D598")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x1E1D634", Offset = "0x1E1D634", VA = "0x1E1D634")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x1E1D74C", Offset = "0x1E1D74C", VA = "0x1E1D74C")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x1E1D818", Offset = "0x1E1D818", VA = "0x1E1D818")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x1E1D8D8", Offset = "0x1E1D8D8", VA = "0x1E1D8D8")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x1E1E7EC", Offset = "0x1E1E7EC", VA = "0x1E1E7EC")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x1E1E92C", Offset = "0x1E1E92C", VA = "0x1E1E92C")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x1E1E988", Offset = "0x1E1E988", VA = "0x1E1E988")]
		public OpenVR()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x2000788")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30840", Offset = "0xA30840")]
	public class BodyCollider : MonoBehaviour
	{
		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x1EE9674", Offset = "0x1EE9674", VA = "0x1EE9674")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x1EE96CC", Offset = "0x1EE96CC", VA = "0x1EE96CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x1EE98B4", Offset = "0x1EE98B4", VA = "0x1EE98B4")]
		public BodyCollider()
		{
		}
	}
	[Token(Token = "0x2000789")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA308A4", Offset = "0xA308A4")]
	public class CircularDrive : MonoBehaviour
	{
		[Token(Token = "0x200078A")]
		public enum Axis_t
		{
			[Token(Token = "0x4002094")]
			XAxis,
			[Token(Token = "0x4002095")]
			YAxis,
			[Token(Token = "0x4002096")]
			ZAxis
		}

		[Token(Token = "0x200078B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30908", Offset = "0xA30908")]
		private sealed class <HapticPulses>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Controller.Device controller;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float flMagnitude;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int nCount;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <nRangeMax>5__2;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private ushort <i>5__3;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002577")]
				[Address(RVA = "0x1EEC270", Offset = "0x1EEC270", VA = "0x1EEC270", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002579")]
				[Address(RVA = "0x1EEC2E0", Offset = "0x1EEC2E0", VA = "0x1EEC2E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002574")]
			[Address(RVA = "0x1EEA6C0", Offset = "0x1EEA6C0", VA = "0x1EEA6C0")]
			[DebuggerHidden]
			public <HapticPulses>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0x1EEC0FC", Offset = "0x1EEC0FC", VA = "0x1EEC0FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002576")]
			[Address(RVA = "0x1EEC100", Offset = "0x1EEC100", VA = "0x1EEC100", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002578")]
			[Address(RVA = "0x1EEC278", Offset = "0x1EEC278", VA = "0x1EEC278", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37880", Offset = "0xA37880")]
		public Axis_t axisOfRotation;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA378B8", Offset = "0xA378B8")]
		public Collider childCollider;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA378F0", Offset = "0xA378F0")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37928", Offset = "0xA37928")]
		public bool hoverLock;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37960", Offset = "0xA37960")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37960", Offset = "0xA37960")]
		public bool limited;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 frozenDistanceMinMaxThreshold;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFrozenDistanceThreshold;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA379C0", Offset = "0xA379C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA379C0", Offset = "0xA379C0")]
		public float minAngle;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37A20", Offset = "0xA37A20")]
		public bool freezeOnMin;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37A58", Offset = "0xA37A58")]
		public UnityEvent onMinAngle;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37A90", Offset = "0xA37A90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37A90", Offset = "0xA37A90")]
		public float maxAngle;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37AF0", Offset = "0xA37AF0")]
		public bool freezeOnMax;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37B28", Offset = "0xA37B28")]
		public UnityEvent onMaxAngle;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37B60", Offset = "0xA37B60")]
		public bool forceStart;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37B98", Offset = "0xA37B98")]
		public float startAngle;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37BD0", Offset = "0xA37BD0")]
		public bool rotateGameObject;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37C08", Offset = "0xA37C08")]
		public bool debugPath;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37C40", Offset = "0xA37C40")]
		public int dbgPathLimit;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37C78", Offset = "0xA37C78")]
		public TextMesh debugText;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37CB0", Offset = "0xA37CB0")]
		public float outAngle;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion start;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 worldPlaneNormal;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 localPlaneNormal;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color red;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color green;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject[] dbgHandObjects;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] dbgProjObjects;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject dbgObjectsParent;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int dbgObjectCount;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int dbgObjectIndex;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool driving;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float minMaxAngularThreshold;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool frozen;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float frozenAngle;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 frozenHandWorldPos;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 frozenSqDistanceMinMaxThreshold;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Hand handHoverLocked;

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x1EE9F24", Offset = "0x1EE9F24", VA = "0x1EE9F24")]
		private void Freeze(Hand hand)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x1EE9F9C", Offset = "0x1EE9F9C", VA = "0x1EE9F9C")]
		private void UnFreeze()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x1EE9FBC", Offset = "0x1EE9FBC", VA = "0x1EE9FBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x1EEA450", Offset = "0x1EEA450", VA = "0x1EEA450")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x1EEA608", Offset = "0x1EEA608", VA = "0x1EEA608")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA431A4", Offset = "0xA431A4")]
		private IEnumerator HapticPulses(SteamVR_Controller.Device controller, float flMagnitude, int nCount)
		{
			return null;
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x1EEA6EC", Offset = "0x1EEA6EC", VA = "0x1EEA6EC")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x1EEA828", Offset = "0x1EEA828", VA = "0x1EEA828")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x1EEA9B4", Offset = "0x1EEA9B4", VA = "0x1EEA9B4")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x1EEAC70", Offset = "0x1EEAC70", VA = "0x1EEAC70")]
		private Vector3 ComputeToTransformProjected(Transform xForm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x1EEB30C", Offset = "0x1EEB30C", VA = "0x1EEB30C")]
		private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x1EEBC34", Offset = "0x1EEBC34", VA = "0x1EEBC34")]
		private void UpdateLinearMapping()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x1EEBE14", Offset = "0x1EEBE14", VA = "0x1EEBE14")]
		private void UpdateGameObject()
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x1EEBD08", Offset = "0x1EEBD08", VA = "0x1EEBD08")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x1EEA424", Offset = "0x1EEA424", VA = "0x1EEA424")]
		private void UpdateAll()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x1EEAE64", Offset = "0x1EEAE64", VA = "0x1EEAE64")]
		private void ComputeAngle(Hand hand)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x1EEBF54", Offset = "0x1EEBF54", VA = "0x1EEBF54")]
		public CircularDrive()
		{
		}
	}
	[Token(Token = "0x200078C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30918", Offset = "0xA30918")]
	public class ComplexThrowable : MonoBehaviour
	{
		[Token(Token = "0x200078D")]
		public enum AttachMode
		{
			[Token(Token = "0x40020A7")]
			FixedJoint,
			[Token(Token = "0x40020A8")]
			Force
		}

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attachForce;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float attachForceDamper;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachMode attachMode;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Hand> holdingHands;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> holdingBodies;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> holdingPoints;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Rigidbody> rigidBodies;

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x1EEC2E8", Offset = "0x1EEC2E8", VA = "0x1EEC2E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x1EEC33C", Offset = "0x1EEC33C", VA = "0x1EEC33C")]
		private void Update()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x1EEC618", Offset = "0x1EEC618", VA = "0x1EEC618")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x1EEC6C4", Offset = "0x1EEC6C4", VA = "0x1EEC6C4")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x1EEC770", Offset = "0x1EEC770", VA = "0x1EEC770")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x1EEC7BC", Offset = "0x1EEC7BC", VA = "0x1EEC7BC")]
		private void PhysicsAttach(Hand hand)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x1EEC430", Offset = "0x1EEC430", VA = "0x1EEC430")]
		private bool PhysicsDetach(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x1EED590", Offset = "0x1EED590", VA = "0x1EED590")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x1EED8F0", Offset = "0x1EED8F0", VA = "0x1EED8F0")]
		public ComplexThrowable()
		{
		}
	}
	[Token(Token = "0x200078E")]
	public class ControllerHoverHighlight : MonoBehaviour
	{
		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material highLightMaterial;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fireHapticsOnHightlight;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer bodyMeshRenderer;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer trackingHatMeshRenderer;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool renderModelLoaded;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x1EF348C", Offset = "0x1EF348C", VA = "0x1EF348C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x1EF34E4", Offset = "0x1EF34E4", VA = "0x1EF34E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x1EF3588", Offset = "0x1EF3588", VA = "0x1EF3588")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x1EF35BC", Offset = "0x1EF35BC", VA = "0x1EF35BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x1EF35F0", Offset = "0x1EF35F0", VA = "0x1EF35F0")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x1EF369C", Offset = "0x1EF369C", VA = "0x1EF369C")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x1EF3D70", Offset = "0x1EF3D70", VA = "0x1EF3D70")]
		private void OnParentHandHoverBegin(Interactable other)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x1EF3FB4", Offset = "0x1EF3FB4", VA = "0x1EF3FB4")]
		private void OnParentHandHoverEnd(Interactable other)
		{
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x1EF40F8", Offset = "0x1EF40F8", VA = "0x1EF40F8")]
		private void OnParentHandInputFocusAcquired()
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x1EF4248", Offset = "0x1EF4248", VA = "0x1EF4248")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x1EF3E74", Offset = "0x1EF3E74", VA = "0x1EF3E74")]
		public void ShowHighlight()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x1EF3FB8", Offset = "0x1EF3FB8", VA = "0x1EF3FB8")]
		public void HideHighlight()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x1EF424C", Offset = "0x1EF424C", VA = "0x1EF424C")]
		public ControllerHoverHighlight()
		{
		}
	}
	[Token(Token = "0x200078F")]
	public static class CustomEvents
	{
		[Serializable]
		[Token(Token = "0x2000790")]
		public class UnityEventSingleFloat : UnityEvent<float>
		{
			[Token(Token = "0x6002590")]
			[Address(RVA = "0x1EF42AC", Offset = "0x1EF42AC", VA = "0x1EF42AC")]
			public UnityEventSingleFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000791")]
		public class UnityEventHand : UnityEvent<Hand>
		{
			[Token(Token = "0x6002591")]
			[Address(RVA = "0x1EF425C", Offset = "0x1EF425C", VA = "0x1EF425C")]
			public UnityEventHand()
			{
			}
		}
	}
	[Token(Token = "0x2000792")]
	public class DebugUI : MonoBehaviour
	{
		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Player player;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugUI _instance;

		[Token(Token = "0x17000361")]
		public static DebugUI instance
		{
			[Token(Token = "0x6002592")]
			[Address(RVA = "0x1EF42FC", Offset = "0x1EF42FC", VA = "0x1EF42FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x1EF43C8", Offset = "0x1EF43C8", VA = "0x1EF43C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x1EF43F0", Offset = "0x1EF43F0", VA = "0x1EF43F0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x1EF4420", Offset = "0x1EF4420", VA = "0x1EF4420")]
		public DebugUI()
		{
		}
	}
	[Token(Token = "0x2000793")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3097C", Offset = "0xA3097C")]
	public class DestroyOnDetachedFromHand : MonoBehaviour
	{
		[Token(Token = "0x6002596")]
		[Address(RVA = "0x1EF4428", Offset = "0x1EF4428", VA = "0x1EF4428")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x1EF44A4", Offset = "0x1EF44A4", VA = "0x1EF44A4")]
		public DestroyOnDetachedFromHand()
		{
		}
	}
	[Token(Token = "0x2000794")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA309E0", Offset = "0xA309E0")]
	public class DestroyOnParticleSystemDeath : MonoBehaviour
	{
		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particles;

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x1EF44AC", Offset = "0x1EF44AC", VA = "0x1EF44AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x1EF4524", Offset = "0x1EF4524", VA = "0x1EF4524")]
		private void CheckParticleSystem()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x1EF45CC", Offset = "0x1EF45CC", VA = "0x1EF45CC")]
		public DestroyOnParticleSystemDeath()
		{
		}
	}
	[Token(Token = "0x2000795")]
	public class DestroyOnTriggerEnter : MonoBehaviour
	{
		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tagFilter;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useTag;

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x1EF45D4", Offset = "0x1EF45D4", VA = "0x1EF45D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x1EF4608", Offset = "0x1EF4608", VA = "0x1EF4608")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x1EF473C", Offset = "0x1EF473C", VA = "0x1EF473C")]
		public DestroyOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x2000796")]
	public class DistanceHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30A44", Offset = "0xA30A44")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DistanceHaptics <>4__this;

			[Token(Token = "0x17000362")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025A3")]
				[Address(RVA = "0x1EF4A78", Offset = "0x1EF4A78", VA = "0x1EF4A78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000363")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025A5")]
				[Address(RVA = "0x1EF4AE8", Offset = "0x1EF4AE8", VA = "0x1EF4AE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x1EF47B8", Offset = "0x1EF47B8", VA = "0x1EF47B8")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x1EF4854", Offset = "0x1EF4854", VA = "0x1EF4854", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x1EF4858", Offset = "0x1EF4858", VA = "0x1EF4858", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025A4")]
			[Address(RVA = "0x1EF4A80", Offset = "0x1EF4A80", VA = "0x1EF4A80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform firstTransform;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform secondTransform;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve distanceIntensityCurve;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pulseIntervalCurve;

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x1EF4744", Offset = "0x1EF4744", VA = "0x1EF4744")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA43258", Offset = "0xA43258")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x1EF47E4", Offset = "0x1EF47E4", VA = "0x1EF47E4")]
		public DistanceHaptics()
		{
		}
	}
	[Token(Token = "0x2000798")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x1EF4AF0", Offset = "0x1EF4AF0", VA = "0x1EF4AF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x1EF4B58", Offset = "0x1EF4B58", VA = "0x1EF4B58")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x2000799")]
	public class EnumFlags : PropertyAttribute
	{
		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x1EF4B60", Offset = "0x1EF4B60", VA = "0x1EF4B60")]
		public EnumFlags()
		{
		}
	}
	[Token(Token = "0x200079A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30A54", Offset = "0xA30A54")]
	public class FallbackCameraController : MonoBehaviour
	{
		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftSpeed;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showInstructions;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startEulerAngles;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 startMousePosition;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float realTime;

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x1EF4C58", Offset = "0x1EF4C58", VA = "0x1EF4C58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x1EF4C80", Offset = "0x1EF4C80", VA = "0x1EF4C80")]
		private void Update()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x1EF5048", Offset = "0x1EF5048", VA = "0x1EF5048")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x1EF50FC", Offset = "0x1EF50FC", VA = "0x1EF50FC")]
		public FallbackCameraController()
		{
		}
	}
	[Token(Token = "0x200079B")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x200079C")]
		public enum HandType
		{
			[Token(Token = "0x40020DE")]
			Left,
			[Token(Token = "0x40020DF")]
			Right,
			[Token(Token = "0x40020E0")]
			Any
		}

		[Token(Token = "0x200079D")]
		[Flags]
		public enum AttachmentFlags
		{
			[Token(Token = "0x40020E2")]
			SnapOnAttach = 1,
			[Token(Token = "0x40020E3")]
			DetachOthers = 2,
			[Token(Token = "0x40020E4")]
			DetachFromOtherHand = 4,
			[Token(Token = "0x40020E5")]
			ParentToHand = 8
		}

		[Token(Token = "0x200079E")]
		public struct AttachedObject
		{
			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject attachedObject;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject originalParent;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isParentedToHand;
		}

		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30AC8", Offset = "0xA30AC8")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject objectToDetach;

			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x1E05A68", Offset = "0x1E05A68", VA = "0x1E05A68")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60025D0")]
			[Address(RVA = "0x1E05A70", Offset = "0x1E05A70", VA = "0x1E05A70")]
			internal bool <DetachObject>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30AD8", Offset = "0xA30AD8")]
		private sealed class <>c
		{
			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AttachedObject> <>9__45_0;

			[Token(Token = "0x60025D2")]
			[Address(RVA = "0x1E059F0", Offset = "0x1E059F0", VA = "0x1E059F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60025D3")]
			[Address(RVA = "0x1E059F8", Offset = "0x1E059F8", VA = "0x1E059F8")]
			internal bool <CleanUpAttachedObjectStack>b__45_0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30AE8", Offset = "0xA30AE8")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x17000368")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025D7")]
				[Address(RVA = "0x1E05FFC", Offset = "0x1E05FFC", VA = "0x1E05FFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000369")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025D9")]
				[Address(RVA = "0x1E0606C", Offset = "0x1E0606C", VA = "0x1E0606C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025D4")]
			[Address(RVA = "0x1E05B98", Offset = "0x1E05B98", VA = "0x1E05B98")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60025D5")]
			[Address(RVA = "0x1E05BC4", Offset = "0x1E05BC4", VA = "0x1E05BC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025D6")]
			[Address(RVA = "0x1E05BC8", Offset = "0x1E05BC8", VA = "0x1E05BC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x1E06004", Offset = "0x1E06004", VA = "0x1E06004", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30AF8", Offset = "0xA30AF8")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactable contacting;

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x1E05AF0", Offset = "0x1E05AF0", VA = "0x1E05AF0")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x1E05AF8", Offset = "0x1E05AF8", VA = "0x1E05AF8")]
			internal bool <UpdateHovering>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020C3")]
		public const AttachmentFlags defaultAttachmentFlags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand otherHand;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandType startingHandType;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hoverSphereTransform;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hoverSphereRadius;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hoverUpdateInterval;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera noSteamVRFallbackCamera;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float noSteamVRFallbackMaxDistanceNoItem;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float noSteamVRFallbackMaxDistanceWithItem;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float noSteamVRFallbackInteractorDistance;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SteamVR_Controller.Device controller;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject controllerPrefab;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject controllerObject;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showDebugText;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool spewDebugText;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AttachedObject> attachedObjects;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37CF8", Offset = "0xA37CF8")]
		private bool <hoverLocked>k__BackingField;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Interactable _hoveringInteractable;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TextMesh debugText;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int prevOverlappingColliders;

		[Token(Token = "0x40020D8")]
		private const int ColliderArraySize = 16;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] overlappingColliders;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player playerInstance;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject applicationLostFocusObject;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SteamVR_Events.Action inputFocusAction;

		[Token(Token = "0x17000364")]
		public ReadOnlyCollection<AttachedObject> AttachedObjects
		{
			[Token(Token = "0x60025AD")]
			[Address(RVA = "0x1EF5678", Offset = "0x1EF5678", VA = "0x1EF5678")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		public bool hoverLocked
		{
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0x1EF56D8", Offset = "0x1EF56D8", VA = "0x1EF56D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4330C", Offset = "0xA4330C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0x1EF56E0", Offset = "0x1EF56E0", VA = "0x1EF56E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4331C", Offset = "0xA4331C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public Interactable hoveringInteractable
		{
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x1EEB304", Offset = "0x1EEB304", VA = "0x1EEB304")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0x1EF56EC", Offset = "0x1EF56EC", VA = "0x1EF56EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public GameObject currentAttachedObject
		{
			[Token(Token = "0x60025B2")]
			[Address(RVA = "0x1EF5950", Offset = "0x1EF5950", VA = "0x1EF5950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x1EF5B3C", Offset = "0x1EF5B3C", VA = "0x1EF5B3C")]
		public Transform GetAttachmentTransform(string attachmentPoint = "")
		{
			return null;
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1EF5C14", Offset = "0x1EF5C14", VA = "0x1EF5C14")]
		public HandType GuessCurrentHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x1EECD18", Offset = "0x1EECD18", VA = "0x1EECD18")]
		public void AttachObject(GameObject objectToAttach, AttachmentFlags flags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand, string attachmentPoint = "")
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x1EED1A8", Offset = "0x1EED1A8", VA = "0x1EED1A8")]
		public void DetachObject(GameObject objectToDetach, bool restoreOriginalParent = true)
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x1EF64C8", Offset = "0x1EF64C8", VA = "0x1EF64C8")]
		public Vector3 GetTrackedObjectVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x1EF65C8", Offset = "0x1EF65C8", VA = "0x1EF65C8")]
		public Vector3 GetTrackedObjectAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x1EF5A38", Offset = "0x1EF5A38", VA = "0x1EF5A38")]
		private void CleanUpAttachedObjectStack()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x1EF66C8", Offset = "0x1EF66C8", VA = "0x1EF66C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x1EF684C", Offset = "0x1EF684C", VA = "0x1EF684C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4332C", Offset = "0xA4332C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x1EF5D5C", Offset = "0x1EF5D5C", VA = "0x1EF5D5C")]
		private void UpdateHovering()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x1EF68C0", Offset = "0x1EF68C0", VA = "0x1EF68C0")]
		private void UpdateNoSteamVRFallback()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x1EF6CF4", Offset = "0x1EF6CF4", VA = "0x1EF6CF4")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x1EF742C", Offset = "0x1EF742C", VA = "0x1EF742C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x1EF754C", Offset = "0x1EF754C", VA = "0x1EF754C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x1EF7590", Offset = "0x1EF7590", VA = "0x1EF7590")]
		private void Update()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x1EF76B4", Offset = "0x1EF76B4", VA = "0x1EF76B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x1EF7778", Offset = "0x1EF7778", VA = "0x1EF7778")]
		private void OnInputFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x1EF7A38", Offset = "0x1EF7A38", VA = "0x1EF7A38")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x1EF7A3C", Offset = "0x1EF7A3C", VA = "0x1EF7A3C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x1EF594C", Offset = "0x1EF594C", VA = "0x1EF594C")]
		private void HandDebugLog(string msg)
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x1EF7868", Offset = "0x1EF7868", VA = "0x1EF7868")]
		private void UpdateHandPoses()
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x1EE6D3C", Offset = "0x1EE6D3C", VA = "0x1EE6D3C")]
		public void HoverLock(Interactable interactable)
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x1EE71A8", Offset = "0x1EE71A8", VA = "0x1EE71A8")]
		public void HoverUnlock(Interactable interactable)
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x1EEABD0", Offset = "0x1EEABD0", VA = "0x1EEABD0")]
		public bool GetStandardInteractionButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x1EEB264", Offset = "0x1EEB264", VA = "0x1EEB264")]
		public bool GetStandardInteractionButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x1EEA914", Offset = "0x1EEA914", VA = "0x1EEA914")]
		public bool GetStandardInteractionButton()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x1EF7B2C", Offset = "0x1EF7B2C", VA = "0x1EF7B2C")]
		private void InitController(int index)
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x1EF7F98", Offset = "0x1EF7F98", VA = "0x1EF7F98")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20007A3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30B08", Offset = "0xA30B08")]
	public class HapticRack : MonoBehaviour
	{
		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37D08", Offset = "0xA37D08")]
		public LinearMapping linearMapping;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37D40", Offset = "0xA37D40")]
		public int teethCount;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37D78", Offset = "0xA37D78")]
		public int minimumPulseDuration;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37DB0", Offset = "0xA37DB0")]
		public int maximumPulseDuration;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37DE8", Offset = "0xA37DE8")]
		public UnityEvent onPulse;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousToothIndex;

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x1E06074", Offset = "0x1E06074", VA = "0x1E06074")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x1E06104", Offset = "0x1E06104", VA = "0x1E06104")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x1E0610C", Offset = "0x1E0610C", VA = "0x1E0610C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x1E06114", Offset = "0x1E06114", VA = "0x1E06114")]
		private void Update()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x1E061C8", Offset = "0x1E061C8", VA = "0x1E061C8")]
		private void Pulse()
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x1E062EC", Offset = "0x1E062EC", VA = "0x1E062EC")]
		public HapticRack()
		{
		}
	}
	[Token(Token = "0x20007A4")]
	public class HideOnHandFocusLost : MonoBehaviour
	{
		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x1E06310", Offset = "0x1E06310", VA = "0x1E06310")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x1E06348", Offset = "0x1E06348", VA = "0x1E06348")]
		public HideOnHandFocusLost()
		{
		}
	}
	[Token(Token = "0x20007A5")]
	public class IgnoreHovering : MonoBehaviour
	{
		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37E20", Offset = "0xA37E20")]
		public Hand onlyIgnoreHand;

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x1E06350", Offset = "0x1E06350", VA = "0x1E06350")]
		public IgnoreHovering()
		{
		}
	}
	[Token(Token = "0x20007A6")]
	public class InputModule : BaseInputModule
	{
		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject submitObject;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputModule _instance;

		[Token(Token = "0x1700036A")]
		public static InputModule instance
		{
			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x1E06360", Offset = "0x1E06360", VA = "0x1E06360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x1E0642C", Offset = "0x1E0642C", VA = "0x1E0642C", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x1E064BC", Offset = "0x1E064BC", VA = "0x1E064BC")]
		public void HoverBegin(GameObject gameObject)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x1E0657C", Offset = "0x1E0657C", VA = "0x1E0657C")]
		public void HoverEnd(GameObject gameObject)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x1E06658", Offset = "0x1E06658", VA = "0x1E06658")]
		public void Submit(GameObject gameObject)
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x1E06660", Offset = "0x1E06660", VA = "0x1E06660", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x1E0675C", Offset = "0x1E0675C", VA = "0x1E0675C")]
		public InputModule()
		{
		}
	}
	[Token(Token = "0x20007A7")]
	public class Interactable : MonoBehaviour
	{
		[Token(Token = "0x20007A8")]
		public delegate void OnAttachedToHandDelegate(Hand hand);

		[Token(Token = "0x20007A9")]
		public delegate void OnDetachedFromHandDelegate(Hand hand);

		[Token(Token = "0x1400001E")]
		[HideInInspector]
		public event OnAttachedToHandDelegate onAttachedToHand
		{
			[Token(Token = "0x60025EC")]
			[Address(RVA = "0x1E06764", Offset = "0x1E06764", VA = "0x1E06764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA433E0", Offset = "0xA433E0")]
			add
			{
			}
			[Token(Token = "0x60025ED")]
			[Address(RVA = "0x1E06850", Offset = "0x1E06850", VA = "0x1E06850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA433F0", Offset = "0xA433F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		[HideInInspector]
		public event OnDetachedFromHandDelegate onDetachedFromHand
		{
			[Token(Token = "0x60025EE")]
			[Address(RVA = "0x1E0693C", Offset = "0x1E0693C", VA = "0x1E0693C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43400", Offset = "0xA43400")]
			add
			{
			}
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0x1E06A28", Offset = "0x1E06A28", VA = "0x1E06A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43410", Offset = "0xA43410")]
			remove
			{
			}
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x1E06B14", Offset = "0x1E06B14", VA = "0x1E06B14")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x1E07258", Offset = "0x1E07258", VA = "0x1E07258")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x1E0799C", Offset = "0x1E0799C", VA = "0x1E0799C")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x20007AA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30B6C", Offset = "0xA30B6C")]
	public class InteractableButtonEvents : MonoBehaviour
	{
		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onGripDown;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onGripUp;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTouchpadDown;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTouchpadUp;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onTouchpadTouch;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onTouchpadRelease;

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x1E07A24", Offset = "0x1E07A24", VA = "0x1E07A24")]
		private void Update()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x1E07E64", Offset = "0x1E07E64", VA = "0x1E07E64")]
		public InteractableButtonEvents()
		{
		}
	}
	[Token(Token = "0x20007AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30BD0", Offset = "0xA30BD0")]
	public class InteractableHoverEvents : MonoBehaviour
	{
		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onHandHoverBegin;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHandHoverEnd;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onAttachedToHand;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDetachedFromHand;

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x1E08504", Offset = "0x1E08504", VA = "0x1E08504")]
		private void OnHandHoverBegin()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x1E08534", Offset = "0x1E08534", VA = "0x1E08534")]
		private void OnHandHoverEnd()
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x1E08564", Offset = "0x1E08564", VA = "0x1E08564")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x1E08594", Offset = "0x1E08594", VA = "0x1E08594")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x1E085C4", Offset = "0x1E085C4", VA = "0x1E085C4")]
		public InteractableHoverEvents()
		{
		}
	}
	[Token(Token = "0x20007AC")]
	public class ItemPackage : MonoBehaviour
	{
		[Token(Token = "0x20007AD")]
		public enum ItemPackageType
		{
			[Token(Token = "0x400210F")]
			Unrestricted,
			[Token(Token = "0x4002110")]
			OneHanded,
			[Token(Token = "0x4002111")]
			TwoHanded
		}

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemPackageType packageType;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemPrefab;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject otherHandItemPrefab;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject previewPrefab;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fadedPreviewPrefab;

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x1E085CC", Offset = "0x1E085CC", VA = "0x1E085CC")]
		public ItemPackage()
		{
		}
	}
	[Token(Token = "0x20007AE")]
	public class ItemPackageReference : MonoBehaviour
	{
		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage itemPackage;

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x1E085D4", Offset = "0x1E085D4", VA = "0x1E085D4")]
		public ItemPackageReference()
		{
		}
	}
	[Token(Token = "0x20007AF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30C34", Offset = "0xA30C34")]
	public class ItemPackageSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage _itemPackage;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useItemPackagePreview;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool useFadedPreview;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject previewObject;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool requireTriggerPressToTake;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool requireTriggerPressToReturn;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool showTriggerHint;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string attachmentPoint;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool takeBackItem;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool acceptDifferentItems;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject spawnedItem;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool itemIsSpawned;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent pickupEvent;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent dropEvent;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool justPickedUpItem;

		[Token(Token = "0x1700036B")]
		public ItemPackage itemPackage
		{
			[Token(Token = "0x6002604")]
			[Address(RVA = "0x1E085DC", Offset = "0x1E085DC", VA = "0x1E085DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002605")]
			[Address(RVA = "0x1E085E4", Offset = "0x1E085E4", VA = "0x1E085E4")]
			set
			{
			}
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x1E085E8", Offset = "0x1E085E8", VA = "0x1E085E8")]
		private void CreatePreviewObject()
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x1E08C28", Offset = "0x1E08C28", VA = "0x1E08C28")]
		private void Start()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x1E08C2C", Offset = "0x1E08C2C", VA = "0x1E08C2C")]
		private void VerifyItemPackage()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x1E08D08", Offset = "0x1E08D08", VA = "0x1E08D08")]
		private void ItemPackageNotValid()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x1E088C0", Offset = "0x1E088C0", VA = "0x1E088C0")]
		private void ClearPreview()
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x1E08D84", Offset = "0x1E08D84", VA = "0x1E08D84")]
		private void Update()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x1E08E38", Offset = "0x1E08E38", VA = "0x1E08E38")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x1E09060", Offset = "0x1E09060", VA = "0x1E09060")]
		private void TakeBackItem(Hand hand)
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x1E08F38", Offset = "0x1E08F38", VA = "0x1E08F38")]
		private ItemPackage GetAttachedItemPackage(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x1E09660", Offset = "0x1E09660", VA = "0x1E09660")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x1E096BC", Offset = "0x1E096BC", VA = "0x1E096BC")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x1E0944C", Offset = "0x1E0944C", VA = "0x1E0944C")]
		private void RemoveMatchingItemsFromHandStack(ItemPackage package, Hand hand)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x1E09708", Offset = "0x1E09708", VA = "0x1E09708")]
		private void RemoveMatchingItemTypesFromHand(ItemPackage.ItemPackageType packageType, Hand hand)
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x1E090DC", Offset = "0x1E090DC", VA = "0x1E090DC")]
		private void SpawnAndAttachObject(Hand hand)
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x1E098DC", Offset = "0x1E098DC", VA = "0x1E098DC")]
		public ItemPackageSpawner()
		{
		}
	}
	[Token(Token = "0x20007B0")]
	public class LinearAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation animation;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationState animState;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animLength;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastValue;

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x1E098F4", Offset = "0x1E098F4", VA = "0x1E098F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x1E09AA8", Offset = "0x1E09AA8", VA = "0x1E09AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x1E09B14", Offset = "0x1E09B14", VA = "0x1E09B14")]
		public LinearAnimation()
		{
		}
	}
	[Token(Token = "0x20007B1")]
	public class LinearAnimator : MonoBehaviour
	{
		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentLinearMapping;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int framesUnchanged;

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x1E09B1C", Offset = "0x1E09B1C", VA = "0x1E09B1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x1E09C28", Offset = "0x1E09C28", VA = "0x1E09C28")]
		private void Update()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x1E09D18", Offset = "0x1E09D18", VA = "0x1E09D18")]
		public LinearAnimator()
		{
		}
	}
	[Token(Token = "0x20007B2")]
	public class LinearAudioPitch : MonoBehaviour
	{
		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchCurve;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool applyContinuously;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x1E09D28", Offset = "0x1E09D28", VA = "0x1E09D28")]
		private void Awake()
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x1E09E08", Offset = "0x1E09E08", VA = "0x1E09E08")]
		private void Update()
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x1E09E18", Offset = "0x1E09E18", VA = "0x1E09E18")]
		private void Apply()
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x1E09EFC", Offset = "0x1E09EFC", VA = "0x1E09EFC")]
		public LinearAudioPitch()
		{
		}
	}
	[Token(Token = "0x20007B3")]
	public class LinearBlendshape : MonoBehaviour
	{
		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastValue;

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x1E09F0C", Offset = "0x1E09F0C", VA = "0x1E09F0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x1E09FEC", Offset = "0x1E09FEC", VA = "0x1E09FEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x1E0A14C", Offset = "0x1E0A14C", VA = "0x1E0A14C")]
		public LinearBlendshape()
		{
		}
	}
	[Token(Token = "0x20007B4")]
	public class LinearDisplacement : MonoBehaviour
	{
		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 displacement;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x1E0A154", Offset = "0x1E0A154", VA = "0x1E0A154")]
		private void Start()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x1E0A210", Offset = "0x1E0A210", VA = "0x1E0A210")]
		private void Update()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x1E0A384", Offset = "0x1E0A384", VA = "0x1E0A384")]
		public LinearDisplacement()
		{
		}
	}
	[Token(Token = "0x20007B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30C98", Offset = "0xA30C98")]
	public class LinearDrive : MonoBehaviour
	{
		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPosition;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPosition;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool repositionGameObject;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool maintainMomemntum;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float momemtumDampenRate;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialMappingOffset;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numMappingChangeSamples;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] mappingChangeSamples;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevMapping;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float mappingChangeRate;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleCount;

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x1E0A38C", Offset = "0x1E0A38C", VA = "0x1E0A38C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x1E0A3E4", Offset = "0x1E0A3E4", VA = "0x1E0A3E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x1E0A7B0", Offset = "0x1E0A7B0", VA = "0x1E0A7B0")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x1E0AADC", Offset = "0x1E0AADC", VA = "0x1E0AADC")]
		private void CalculateMappingChangeRate()
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x1E0A534", Offset = "0x1E0A534", VA = "0x1E0A534")]
		private void UpdateLinearMapping(Transform tr)
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x1E0A940", Offset = "0x1E0A940", VA = "0x1E0A940")]
		private float CalculateLinearMapping(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x1E0ABEC", Offset = "0x1E0ABEC", VA = "0x1E0ABEC")]
		private void Update()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x1E0AE04", Offset = "0x1E0AE04", VA = "0x1E0AE04")]
		public LinearDrive()
		{
		}
	}
	[Token(Token = "0x20007B6")]
	public class LinearMapping : MonoBehaviour
	{
		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x1E0AE24", Offset = "0x1E0AE24", VA = "0x1E0AE24")]
		public LinearMapping()
		{
		}
	}
	[Token(Token = "0x20007B7")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37E88", Offset = "0xA37E88")]
		public Transform trackingOriginTransform;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37EC0", Offset = "0xA37EC0")]
		public Transform[] hmdTransforms;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37EF8", Offset = "0xA37EF8")]
		public Hand[] hands;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37F30", Offset = "0xA37F30")]
		public Collider headCollider;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37F68", Offset = "0xA37F68")]
		public GameObject rigSteamVR;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37FA0", Offset = "0xA37FA0")]
		public GameObject rig2DFallback;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37FD8", Offset = "0xA37FD8")]
		public Transform audioListener;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool allowToggleTo2D;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Player _instance;

		[Token(Token = "0x1700036C")]
		public static Player instance
		{
			[Token(Token = "0x600262E")]
			[Address(RVA = "0x1E05F30", Offset = "0x1E05F30", VA = "0x1E05F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		public int handCount
		{
			[Token(Token = "0x600262F")]
			[Address(RVA = "0x1E07D98", Offset = "0x1E07D98", VA = "0x1E07D98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036E")]
		public Hand leftHand
		{
			[Token(Token = "0x6002631")]
			[Address(RVA = "0x1E0D030", Offset = "0x1E0D030", VA = "0x1E0D030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		public Hand rightHand
		{
			[Token(Token = "0x6002632")]
			[Address(RVA = "0x1E0D174", Offset = "0x1E0D174", VA = "0x1E0D174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public SteamVR_Controller.Device leftController
		{
			[Token(Token = "0x6002633")]
			[Address(RVA = "0x1E0D2BC", Offset = "0x1E0D2BC", VA = "0x1E0D2BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		public SteamVR_Controller.Device rightController
		{
			[Token(Token = "0x6002634")]
			[Address(RVA = "0x1E0D354", Offset = "0x1E0D354", VA = "0x1E0D354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		public Transform hmdTransform
		{
			[Token(Token = "0x6002635")]
			[Address(RVA = "0x1E0BB74", Offset = "0x1E0BB74", VA = "0x1E0BB74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public float eyeHeight
		{
			[Token(Token = "0x6002636")]
			[Address(RVA = "0x1E0D3EC", Offset = "0x1E0D3EC", VA = "0x1E0D3EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000374")]
		public Vector3 feetPositionGuess
		{
			[Token(Token = "0x6002637")]
			[Address(RVA = "0x1E0D5A4", Offset = "0x1E0D5A4", VA = "0x1E0D5A4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000375")]
		public Vector3 bodyDirectionGuess
		{
			[Token(Token = "0x6002638")]
			[Address(RVA = "0x1E0D78C", Offset = "0x1E0D78C", VA = "0x1E0D78C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x1E07C90", Offset = "0x1E07C90", VA = "0x1E07C90")]
		public Hand GetHand(int i)
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x1E0D990", Offset = "0x1E0D990", VA = "0x1E0D990")]
		private void Awake()
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x1E0DA18", Offset = "0x1E0DA18", VA = "0x1E0DA18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x1E0DCF8", Offset = "0x1E0DCF8", VA = "0x1E0DCF8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x1E0E31C", Offset = "0x1E0E31C", VA = "0x1E0E31C")]
		public void Draw2DDebug()
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x1E0DAA8", Offset = "0x1E0DAA8", VA = "0x1E0DAA8")]
		private void ActivateRig(GameObject rig)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x1E0E490", Offset = "0x1E0E490", VA = "0x1E0E490")]
		public void PlayerShotSelf()
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x1E0E494", Offset = "0x1E0E494", VA = "0x1E0E494")]
		public Player()
		{
		}
	}
	[Token(Token = "0x20007B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30CFC", Offset = "0xA30CFC")]
	public class PlaySound : MonoBehaviour
	{
		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38010", Offset = "0xA38010")]
		public AudioClip[] waveFile;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38048", Offset = "0xA38048")]
		public bool stopOnPlay;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38080", Offset = "0xA38080")]
		public bool disableOnEnd;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA380B8", Offset = "0xA380B8")]
		public bool looping;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA380F0", Offset = "0xA380F0")]
		public bool stopOnEnd;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38128", Offset = "0xA38128")]
		public bool playOnAwakeWithDelay;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38160", Offset = "0xA38160")]
		public bool useRandomVolume;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA38198", Offset = "0xA38198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38198", Offset = "0xA38198")]
		public float volMin;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA381EC", Offset = "0xA381EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA381EC", Offset = "0xA381EC")]
		public float volMax;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38240", Offset = "0xA38240")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38240", Offset = "0xA38240")]
		public bool useRandomPitch;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA382A0", Offset = "0xA382A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA382A0", Offset = "0xA382A0")]
		public float pitchMin;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA382F4", Offset = "0xA382F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA382F4", Offset = "0xA382F4")]
		public float pitchMax;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38348", Offset = "0xA38348")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38348", Offset = "0xA38348")]
		public bool useRetriggerTime;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA383A8", Offset = "0xA383A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA383A8", Offset = "0xA383A8")]
		public float timeInitial;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA38400", Offset = "0xA38400")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38400", Offset = "0xA38400")]
		public float timeMin;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA38458", Offset = "0xA38458")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38458", Offset = "0xA38458")]
		public float timeMax;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA384B0", Offset = "0xA384B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA384B0", Offset = "0xA384B0")]
		public bool useRandomSilence;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA38510", Offset = "0xA38510")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38510", Offset = "0xA38510")]
		public float percentToNotPlay;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38564", Offset = "0xA38564")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38564", Offset = "0xA38564")]
		public float delayOffsetTime;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip clip;

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x1E0CA3C", Offset = "0x1E0CA3C", VA = "0x1E0CA3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x1E0CB94", Offset = "0x1E0CB94", VA = "0x1E0CB94")]
		public void Play()
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x1E0CBA4", Offset = "0x1E0CBA4", VA = "0x1E0CBA4")]
		public void PlayWithDelay(float delayTime)
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x1E0CD18", Offset = "0x1E0CD18", VA = "0x1E0CD18")]
		public AudioClip PlayOneShotSound()
		{
			return null;
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x1E0CC1C", Offset = "0x1E0CC1C", VA = "0x1E0CC1C")]
		public AudioClip PlayLooping()
		{
			return null;
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x1E0CFA8", Offset = "0x1E0CFA8", VA = "0x1E0CFA8")]
		public void Disable()
		{
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x1E0CFE0", Offset = "0x1E0CFE0", VA = "0x1E0CFE0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x1E0CE14", Offset = "0x1E0CE14", VA = "0x1E0CE14")]
		private void SetAudioSource()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x1E0D010", Offset = "0x1E0D010", VA = "0x1E0D010")]
		public PlaySound()
		{
		}
	}
	[Token(Token = "0x20007B9")]
	public class SeeThru : MonoBehaviour
	{
		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material seeThruMaterial;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject seeThru;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable interactable;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer sourceRenderer;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer destRenderer;

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x1E0E4A4", Offset = "0x1E0E4A4", VA = "0x1E0E4A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x1E0ECEC", Offset = "0x1E0ECEC", VA = "0x1E0ECEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x1E0EDC0", Offset = "0x1E0EDC0", VA = "0x1E0EDC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x1E0EE94", Offset = "0x1E0EE94", VA = "0x1E0EE94")]
		private void AttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x1E0EEC8", Offset = "0x1E0EEC8", VA = "0x1E0EEC8")]
		private void DetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x1E0EEFC", Offset = "0x1E0EEFC", VA = "0x1E0EEFC")]
		private void Update()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x1E0F264", Offset = "0x1E0F264", VA = "0x1E0F264")]
		public SeeThru()
		{
		}
	}
	[Token(Token = "0x20007BA")]
	public class SleepOnAwake : MonoBehaviour
	{
		[Token(Token = "0x6002650")]
		[Address(RVA = "0x1E0F26C", Offset = "0x1E0F26C", VA = "0x1E0F26C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x1E0F318", Offset = "0x1E0F318", VA = "0x1E0F318")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x20007BB")]
	public class SoundDeparent : MonoBehaviour
	{
		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroyAfterPlayOnce;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x1E0F380", Offset = "0x1E0F380", VA = "0x1E0F380")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x1E0F3D8", Offset = "0x1E0F3D8", VA = "0x1E0F3D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x1E0F4EC", Offset = "0x1E0F4EC", VA = "0x1E0F4EC")]
		public SoundDeparent()
		{
		}
	}
	[Token(Token = "0x20007BC")]
	public class SoundPlayOneshot : MonoBehaviour
	{
		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] waveFiles;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volMin;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volMax;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitchMin;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitchMax;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x1E0F4FC", Offset = "0x1E0F4FC", VA = "0x1E0F4FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x1E0BE5C", Offset = "0x1E0BE5C", VA = "0x1E0BE5C")]
		public void Play()
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x1E0F56C", Offset = "0x1E0F56C", VA = "0x1E0F56C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x1E0F608", Offset = "0x1E0F608", VA = "0x1E0F608")]
		public void UnPause()
		{
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x1E0F6A4", Offset = "0x1E0F6A4", VA = "0x1E0F6A4")]
		public SoundPlayOneshot()
		{
		}
	}
	[Token(Token = "0x20007BD")]
	public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour
	{
		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemPrefab;

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x1E0F6AC", Offset = "0x1E0F6AC", VA = "0x1E0F6AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x1E0F704", Offset = "0x1E0F704", VA = "0x1E0F704")]
		private void Update()
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x1E0F934", Offset = "0x1E0F934", VA = "0x1E0F934")]
		public SpawnAndAttachAfterControllerIsTracking()
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public class SpawnAndAttachToHand : MonoBehaviour
	{
		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x1E0F93C", Offset = "0x1E0F93C", VA = "0x1E0F93C")]
		public void SpawnAndAttach(Hand passedInhand)
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x1E0FA58", Offset = "0x1E0FA58", VA = "0x1E0FA58")]
		public SpawnAndAttachToHand()
		{
		}
	}
	[Token(Token = "0x20007BF")]
	public class SpawnRenderModel : MonoBehaviour
	{
		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_RenderModel[] renderModels;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SpawnRenderModel> spawnRenderModels;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastFrameUpdated;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int spawnRenderModelUpdateIndex;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x1E0FA60", Offset = "0x1E0FA60", VA = "0x1E0FA60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x1E0FB2C", Offset = "0x1E0FB2C", VA = "0x1E0FB2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x1E0FFC8", Offset = "0x1E0FFC8", VA = "0x1E0FFC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x1E101C8", Offset = "0x1E101C8", VA = "0x1E101C8")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x1E101D0", Offset = "0x1E101D0", VA = "0x1E101D0")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x1E101D8", Offset = "0x1E101D8", VA = "0x1E101D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x1E0FBE0", Offset = "0x1E0FBE0", VA = "0x1E0FBE0")]
		private void ShowController()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x1E1007C", Offset = "0x1E1007C", VA = "0x1E1007C")]
		private void HideController()
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x1E104C8", Offset = "0x1E104C8", VA = "0x1E104C8")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x1E108EC", Offset = "0x1E108EC", VA = "0x1E108EC")]
		public SpawnRenderModel()
		{
		}
	}
	[Token(Token = "0x20007C0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30D60", Offset = "0xA30D60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30D60", Offset = "0xA30D60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30D60", Offset = "0xA30D60")]
	public class Throwable : MonoBehaviour
	{
		[Token(Token = "0x20007C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30E14", Offset = "0xA30E14")]
		private sealed class <LateDetach>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Throwable <>4__this;

			[Token(Token = "0x17000376")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002678")]
				[Address(RVA = "0x1E1A3F8", Offset = "0x1E1A3F8", VA = "0x1E1A3F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000377")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600267A")]
				[Address(RVA = "0x1E1A468", Offset = "0x1E1A468", VA = "0x1E1A468", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002675")]
			[Address(RVA = "0x1E1A1BC", Offset = "0x1E1A1BC", VA = "0x1E1A1BC")]
			[DebuggerHidden]
			public <LateDetach>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0x1E1A2F8", Offset = "0x1E1A2F8", VA = "0x1E1A2F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0x1E1A2FC", Offset = "0x1E1A2FC", VA = "0x1E1A2FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0x1E1A400", Offset = "0x1E1A400", VA = "0x1E1A400", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EnumFlags]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA385C4", Offset = "0xA385C4")]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38610", Offset = "0xA38610")]
		public string attachmentPoint;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38648", Offset = "0xA38648")]
		public float catchSpeedThreshold;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38680", Offset = "0xA38680")]
		public bool restoreOriginalParent;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool attachEaseIn;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve snapAttachEaseInCurve;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float snapAttachEaseInTime;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] attachEaseInAttachmentNames;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VelocityEstimator velocityEstimator;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool attached;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float attachTime;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 attachPosition;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion attachRotation;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform attachEaseInTransform;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onPickUp;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onDetachFromHand;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool snapAttachEaseInCompleted;

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x1E18D8C", Offset = "0x1E18D8C", VA = "0x1E18D8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x1E18E28", Offset = "0x1E18E28", VA = "0x1E18E28")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x1E18F30", Offset = "0x1E18F30", VA = "0x1E18F30")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0x1E18FBC", Offset = "0x1E18FBC", VA = "0x1E18FBC")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x1E190BC", Offset = "0x1E190BC", VA = "0x1E190BC")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x1E193FC", Offset = "0x1E193FC", VA = "0x1E193FC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0x1E19E30", Offset = "0x1E19E30", VA = "0x1E19E30")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x1E1A124", Offset = "0x1E1A124", VA = "0x1E1A124")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA43420", Offset = "0xA43420")]
		private IEnumerator LateDetach(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x1E1A1E8", Offset = "0x1E1A1E8", VA = "0x1E1A1E8")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x1E1A23C", Offset = "0x1E1A23C", VA = "0x1E1A23C")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x1E1A2A4", Offset = "0x1E1A2A4", VA = "0x1E1A2A4")]
		public Throwable()
		{
		}
	}
	[Token(Token = "0x20007C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30E24", Offset = "0xA30E24")]
	public class UIElement : MonoBehaviour
	{
		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEvents.UnityEventHand onHandClick;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand currentHand;

		[Token(Token = "0x600267B")]
		[Address(RVA = "0x1E1A470", Offset = "0x1E1A470", VA = "0x1E1A470")]
		private void Awake()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0x1E1A578", Offset = "0x1E1A578", VA = "0x1E1A578")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0x1E1A644", Offset = "0x1E1A644", VA = "0x1E1A644")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0x1E1A714", Offset = "0x1E1A714", VA = "0x1E1A714")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x1E1A800", Offset = "0x1E1A800", VA = "0x1E1A800")]
		private void OnButtonClick()
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x1E1A868", Offset = "0x1E1A868", VA = "0x1E1A868")]
		public UIElement()
		{
		}
	}
	[Token(Token = "0x20007C3")]
	public class Unparent : MonoBehaviour
	{
		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform oldParent;

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x1E1A870", Offset = "0x1E1A870", VA = "0x1E1A870")]
		private void Start()
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x1E1A9AC", Offset = "0x1E1A9AC", VA = "0x1E1A9AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x1E1AA70", Offset = "0x1E1AA70", VA = "0x1E1AA70")]
		public Transform GetOldParent()
		{
			return null;
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x1E1AA78", Offset = "0x1E1AA78", VA = "0x1E1AA78")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x20007C4")]
	public static class Util
	{
		[Token(Token = "0x20007C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30E98", Offset = "0xA30E98")]
		private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator coroutine;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCoroutineFinished;

			[Token(Token = "0x17000378")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026B6")]
				[Address(RVA = "0x1E1CA60", Offset = "0x1E1CA60", VA = "0x1E1CA60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000379")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B8")]
				[Address(RVA = "0x1E1CAD0", Offset = "0x1E1CAD0", VA = "0x1E1CAD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x1E1C05C", Offset = "0x1E1C05C", VA = "0x1E1C05C")]
			[DebuggerHidden]
			public <WrapCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x1E1C8E0", Offset = "0x1E1C8E0", VA = "0x1E1C8E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x1E1C8E4", Offset = "0x1E1C8E4", VA = "0x1E1C8E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x1E1CA68", Offset = "0x1E1CA68", VA = "0x1E1CA68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30EA8", Offset = "0xA30EA8")]
		private sealed class <>c__47<T>
		{
			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__47<T> <>9;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, T> <>9__47_0;

			[Token(Token = "0x60026BA")]
			public <>c__47()
			{
			}

			[Token(Token = "0x60026BB")]
			internal T <Median>b__47_0(T x)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4002195")]
		public const float FeetToMeters = 0.3048f;

		[Token(Token = "0x4002196")]
		public const float FeetToCentimeters = 30.48f;

		[Token(Token = "0x4002197")]
		public const float InchesToMeters = 0.0254f;

		[Token(Token = "0x4002198")]
		public const float InchesToCentimeters = 2.54f;

		[Token(Token = "0x4002199")]
		public const float MetersToFeet = 3.28084f;

		[Token(Token = "0x400219A")]
		public const float MetersToInches = 39.3701f;

		[Token(Token = "0x400219B")]
		public const float CentimetersToFeet = 0.0328084f;

		[Token(Token = "0x400219C")]
		public const float CentimetersToInches = 0.393701f;

		[Token(Token = "0x400219D")]
		public const float KilometersToMiles = 0.621371f;

		[Token(Token = "0x400219E")]
		public const float MilesToKilometers = 1.60934f;

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x1E0BC68", Offset = "0x1E0BC68", VA = "0x1E0BC68")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x1E0A078", Offset = "0x1E0A078", VA = "0x1E0A078")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x1E1AA80", Offset = "0x1E1AA80", VA = "0x1E1AA80")]
		public static float Approach(float target, float value, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x1E1AAA8", Offset = "0x1E1AAA8", VA = "0x1E1AAA8")]
		public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x1E1ABC0", Offset = "0x1E1ABC0", VA = "0x1E1ABC0")]
		public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x1E1AD98", Offset = "0x1E1AD98", VA = "0x1E1AD98")]
		public static Vector3 Vector3FromString(string szString)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x1E1AF48", Offset = "0x1E1AF48", VA = "0x1E1AF48")]
		public static Vector2 Vector2FromString(string szString)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x1E1B0E8", Offset = "0x1E1B0E8", VA = "0x1E1B0E8")]
		public static float Normalize(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x1E1B0F8", Offset = "0x1E1B0F8", VA = "0x1E1B0F8")]
		public static Vector3 Vector2AsVector3(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x1E1B134", Offset = "0x1E1B134", VA = "0x1E1B134")]
		public static Vector2 Vector3AsVector2(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x1E1B164", Offset = "0x1E1B164", VA = "0x1E1B164")]
		public static float AngleOf(Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x1E1B21C", Offset = "0x1E1B21C", VA = "0x1E1B21C")]
		public static float YawOf(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002691")]
		public static void Swap<T>(ref T lhs, ref T rhs)
		{
		}

		[Token(Token = "0x6002692")]
		public static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x6002693")]
		public static void Shuffle<T>(List<T> list)
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x1E1B2E4", Offset = "0x1E1B2E4", VA = "0x1E1B2E4")]
		public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
		{
			return default(int);
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x1E1B490", Offset = "0x1E1B490", VA = "0x1E1B490")]
		public static Transform FindChild(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6002696")]
		public static bool IsNullOrEmpty<T>(T[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x6002697")]
		public static bool IsValidIndex<T>(T[] array, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6002698")]
		public static bool IsValidIndex<T>(List<T> list, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x6002699")]
		public static int FindOrAdd<T>(List<T> list, T item)
		{
			return default(int);
		}

		[Token(Token = "0x600269A")]
		public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x600269B")]
		public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600269C")]
		public static void FastRemove<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x600269D")]
		public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x1E1B804", Offset = "0x1E1B804", VA = "0x1E1B804")]
		public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x1E172A8", Offset = "0x1E172A8", VA = "0x1E172A8")]
		public static void DrawCross(Vector3 origin, Color crossColor, float size)
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x1E0C104", Offset = "0x1E0C104", VA = "0x1E0C104")]
		public static void ResetTransform(Transform t, bool resetScale = true)
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x1E1B8FC", Offset = "0x1E1B8FC", VA = "0x1E1B8FC")]
		public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x1E1BAE8", Offset = "0x1E1BAE8", VA = "0x1E1BAE8")]
		public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x1E1BB84", Offset = "0x1E1BB84", VA = "0x1E1BB84")]
		public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x1E1BCD0", Offset = "0x1E1BCD0", VA = "0x1E1BCD0")]
		public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x1E1BE30", Offset = "0x1E1BE30", VA = "0x1E1BE30")]
		public static void IgnoreCollisions(GameObject goA, GameObject goB)
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x1E1BFC4", Offset = "0x1E1BFC4", VA = "0x1E1BFC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA434D4", Offset = "0xA434D4")]
		public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
		{
			return null;
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x1E1C088", Offset = "0x1E1C088", VA = "0x1E1C088")]
		public static Color ColorWithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x1E1C090", Offset = "0x1E1C090", VA = "0x1E1C090")]
		public static void Quit()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x1E1C108", Offset = "0x1E1C108", VA = "0x1E1C108")]
		public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
		{
			return default(decimal);
		}

		[Token(Token = "0x60026AA")]
		public static T Median<T>(this IEnumerable<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x60026AB")]
		public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x1E1C1C0", Offset = "0x1E1C1C0", VA = "0x1E1C1C0")]
		public static string FixupNewlines(string text)
		{
			return null;
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x1E1C290", Offset = "0x1E1C290", VA = "0x1E1C290")]
		public static float PathLength(NavMeshPath path)
		{
			return default(float);
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x1E1C464", Offset = "0x1E1C464", VA = "0x1E1C464")]
		public static bool HasCommandLineArgument(string argumentName)
		{
			return default(bool);
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x1E1C504", Offset = "0x1E1C504", VA = "0x1E1C504")]
		public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x1E1C5FC", Offset = "0x1E1C5FC", VA = "0x1E1C5FC")]
		public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x1E1C730", Offset = "0x1E1C730", VA = "0x1E1C730")]
		public static void SetActive(GameObject gameObject, bool active)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x1E1C7D8", Offset = "0x1E1C7D8", VA = "0x1E1C7D8")]
		public static string CombinePaths(params string[] paths)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20007C7")]
	public class AfterTimer_Component : MonoBehaviour
	{
		[Token(Token = "0x20007C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30EB8", Offset = "0xA30EB8")]
		private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AfterTimer_Component <>4__this;

			[Token(Token = "0x1700037A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026C3")]
				[Address(RVA = "0x1EE42F0", Offset = "0x1EE42F0", VA = "0x1EE42F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026C5")]
				[Address(RVA = "0x1EE4360", Offset = "0x1EE4360", VA = "0x1EE4360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0x1EE4130", Offset = "0x1EE4130", VA = "0x1EE4130")]
			[DebuggerHidden]
			public <Wait>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60026C1")]
			[Address(RVA = "0x1EE41D0", Offset = "0x1EE41D0", VA = "0x1EE41D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0x1EE41D4", Offset = "0x1EE41D4", VA = "0x1EE41D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0x1EE42F8", Offset = "0x1EE42F8", VA = "0x1EE42F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action callback;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float triggerTime;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool timerActive;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool triggerOnEarlyDestroy;

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x1EE4078", Offset = "0x1EE4078", VA = "0x1EE4078")]
		public void Init(float _time, Action _callback, bool earlydestroy)
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x1EE40BC", Offset = "0x1EE40BC", VA = "0x1EE40BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA435B8", Offset = "0xA435B8")]
		private IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x1EE415C", Offset = "0x1EE415C", VA = "0x1EE415C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x1EE41C8", Offset = "0x1EE41C8", VA = "0x1EE41C8")]
		public AfterTimer_Component()
		{
		}
	}
	[Token(Token = "0x20007C9")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x20007CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30EC8", Offset = "0xA30EC8")]
		private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x1700037C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026D1")]
				[Address(RVA = "0x1E1D33C", Offset = "0x1E1D33C", VA = "0x1E1D33C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026D3")]
				[Address(RVA = "0x1E1D3AC", Offset = "0x1E1D3AC", VA = "0x1E1D3AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0x1E1CE10", Offset = "0x1E1CE10", VA = "0x1E1CE10")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60026CF")]
			[Address(RVA = "0x1E1CE50", Offset = "0x1E1CE50", VA = "0x1E1CE50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026D0")]
			[Address(RVA = "0x1E1CE54", Offset = "0x1E1CE54", VA = "0x1E1CE54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0x1E1D344", Offset = "0x1E1D344", VA = "0x1E1D344", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA386B8", Offset = "0xA386B8")]
		public int velocityAverageFrames;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA386F0", Offset = "0xA386F0")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x1E193AC", Offset = "0x1E193AC", VA = "0x1E193AC")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x1E19A3C", Offset = "0x1E19A3C", VA = "0x1E19A3C")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x1E19A70", Offset = "0x1E19A70", VA = "0x1E19A70")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x1E19C50", Offset = "0x1E19C50", VA = "0x1E19C50")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x1E1CB4C", Offset = "0x1E1CB4C", VA = "0x1E1CB4C")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x1E1CD90", Offset = "0x1E1CD90", VA = "0x1E1CD90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x1E1CAD8", Offset = "0x1E1CAD8", VA = "0x1E1CAD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4366C", Offset = "0xA4366C")]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x1E1CE3C", Offset = "0x1E1CE3C", VA = "0x1E1CE3C")]
		public VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x20007CB")]
	public class ControllerButtonHints : MonoBehaviour
	{
		[Token(Token = "0x20007CC")]
		private enum OffsetType
		{
			[Token(Token = "0x40021CA")]
			Up,
			[Token(Token = "0x40021CB")]
			Right,
			[Token(Token = "0x40021CC")]
			Forward,
			[Token(Token = "0x40021CD")]
			Back
		}

		[Token(Token = "0x20007CD")]
		private class ButtonHintInfo
		{
			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string componentName;

			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshRenderer> renderers;

			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform localTransform;

			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject textHintObject;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform textStartAnchor;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform textEndAnchor;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 textEndOffsetDir;

			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform canvasOffset;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Text text;

			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextMesh textMesh;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Canvas textCanvas;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LineRenderer line;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float distanceFromCenter;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool textHintActive;

			[Token(Token = "0x60026F7")]
			[Address(RVA = "0x1EF0748", Offset = "0x1EF0748", VA = "0x1EF0748")]
			public ButtonHintInfo()
			{
			}
		}

		[Token(Token = "0x20007CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30ED8", Offset = "0xA30ED8")]
		private sealed class <TestButtonHints>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026FB")]
				[Address(RVA = "0x1EF2810", Offset = "0x1EF2810", VA = "0x1EF2810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026FD")]
				[Address(RVA = "0x1EF2880", Offset = "0x1EF2880", VA = "0x1EF2880", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0x1EF1158", Offset = "0x1EF1158", VA = "0x1EF1158")]
			[DebuggerHidden]
			public <TestButtonHints>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x1EF2510", Offset = "0x1EF2510", VA = "0x1EF2510", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x1EF2514", Offset = "0x1EF2514", VA = "0x1EF2514", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x1EF2818", Offset = "0x1EF2818", VA = "0x1EF2818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30EE8", Offset = "0xA30EE8")]
		private sealed class <TestTextHints>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002701")]
				[Address(RVA = "0x1EF2B04", Offset = "0x1EF2B04", VA = "0x1EF2B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002703")]
				[Address(RVA = "0x1EF2B74", Offset = "0x1EF2B74", VA = "0x1EF2B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x1EF11F8", Offset = "0x1EF11F8", VA = "0x1EF11F8")]
			[DebuggerHidden]
			public <TestTextHints>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x1EF2888", Offset = "0x1EF2888", VA = "0x1EF2888", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0x1EF288C", Offset = "0x1EF288C", VA = "0x1EF288C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0x1EF2B0C", Offset = "0x1EF2B0C", VA = "0x1EF2B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material controllerMaterial;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color flashColor;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textHintPrefab;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38728", Offset = "0xA38728")]
		public bool debugHints;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Player player;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MeshRenderer> flashingRenderers;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float tickCount;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<EVRButtonId, ButtonHintInfo> buttonHintInfos;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform textHintParent;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<string, ulong>> componentButtonMasks;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int colorID;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38760", Offset = "0xA38760")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 centerPosition;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x1700037E")]
		public bool initialized
		{
			[Token(Token = "0x60026D4")]
			[Address(RVA = "0x1EED9DC", Offset = "0x1EED9DC", VA = "0x1EED9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43720", Offset = "0xA43720")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026D5")]
			[Address(RVA = "0x1EED9E4", Offset = "0x1EED9E4", VA = "0x1EED9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43730", Offset = "0xA43730")]
			private set
			{
			}
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x1EED9F0", Offset = "0x1EED9F0", VA = "0x1EED9F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x1EEDAAC", Offset = "0x1EEDAAC", VA = "0x1EEDAAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x1EEDAD4", Offset = "0x1EEDAD4", VA = "0x1EEDAD4")]
		private void HintDebugLog(string msg)
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x1EEDAD8", Offset = "0x1EEDAD8", VA = "0x1EEDAD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x1EEDB0C", Offset = "0x1EEDB0C", VA = "0x1EEDB0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x1EEDBD0", Offset = "0x1EEDBD0", VA = "0x1EEDBD0")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x1EEDDE8", Offset = "0x1EEDDE8", VA = "0x1EEDDE8")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x1EEE0A4", Offset = "0x1EEE0A4", VA = "0x1EEE0A4")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool succeess)
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x1EEEAA0", Offset = "0x1EEEAA0", VA = "0x1EEEAA0")]
		private void CreateAndAddButtonInfo(EVRButtonId buttonID)
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x1EEFF98", Offset = "0x1EEFF98", VA = "0x1EEFF98")]
		private void ComputeTextEndTransforms()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x1EF0750", Offset = "0x1EF0750", VA = "0x1EF0750")]
		private void ShowButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x1EEDBF4", Offset = "0x1EEDBF4", VA = "0x1EEDBF4")]
		private void HideAllButtonHints()
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x1EF0BF4", Offset = "0x1EF0BF4", VA = "0x1EF0BF4")]
		private void HideButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x1EF0F2C", Offset = "0x1EF0F2C", VA = "0x1EF0F2C")]
		private bool IsButtonHintActive(EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x1EF10E4", Offset = "0x1EF10E4", VA = "0x1EF10E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA43740", Offset = "0xA43740")]
		private IEnumerator TestButtonHints()
		{
			return null;
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x1EF1184", Offset = "0x1EF1184", VA = "0x1EF1184")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA437A4", Offset = "0xA437A4")]
		private IEnumerator TestTextHints()
		{
			return null;
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x1EF1224", Offset = "0x1EF1224", VA = "0x1EF1224")]
		private void Update()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x1EF1624", Offset = "0x1EF1624", VA = "0x1EF1624")]
		private void UpdateTextHint(ButtonHintInfo hintInfo)
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x1EEDB4C", Offset = "0x1EEDB4C", VA = "0x1EEDB4C")]
		private void Clear()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x1EF1A60", Offset = "0x1EF1A60", VA = "0x1EF1A60")]
		private void ShowText(EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x1EF1CA0", Offset = "0x1EF1CA0", VA = "0x1EF1CA0")]
		private void HideText(EVRButtonId button)
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x1EEDC48", Offset = "0x1EEDC48", VA = "0x1EEDC48")]
		private void HideAllText()
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x1EF1DC4", Offset = "0x1EF1DC4", VA = "0x1EF1DC4")]
		private string GetActiveHintText(EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x1EF1EBC", Offset = "0x1EF1EBC", VA = "0x1EF1EBC")]
		private static ControllerButtonHints GetControllerButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x1EEA774", Offset = "0x1EEA774", VA = "0x1EEA774")]
		public static void ShowButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x1EEA554", Offset = "0x1EEA554", VA = "0x1EEA554")]
		public static void HideButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x1EF1FA0", Offset = "0x1EF1FA0", VA = "0x1EF1FA0")]
		public static void HideAllButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x1EF2040", Offset = "0x1EF2040", VA = "0x1EF2040")]
		public static bool IsButtonHintActive(Hand hand, EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x1EF20F8", Offset = "0x1EF20F8", VA = "0x1EF20F8")]
		public static void ShowTextHint(Hand hand, EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x1EF21C8", Offset = "0x1EF21C8", VA = "0x1EF21C8")]
		public static void HideTextHint(Hand hand, EVRButtonId button)
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x1EF227C", Offset = "0x1EF227C", VA = "0x1EF227C")]
		public static void HideAllTextHints(Hand hand)
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x1EF231C", Offset = "0x1EF231C", VA = "0x1EF231C")]
		public static string GetActiveHintText(Hand hand, EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x1EF23E4", Offset = "0x1EF23E4", VA = "0x1EF23E4")]
		public ControllerButtonHints()
		{
		}
	}
	[Token(Token = "0x20007D0")]
	public class ArcheryTarget : MonoBehaviour
	{
		[Token(Token = "0x20007D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30EF8", Offset = "0xA30EF8")]
		private sealed class <FallDown>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArcheryTarget <>4__this;

			[Token(Token = "0x40021ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Quaternion <startingRot>5__2;

			[Token(Token = "0x40021EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__3;

			[Token(Token = "0x40021EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <rotLerp>5__4;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600270C")]
				[Address(RVA = "0x1EE473C", Offset = "0x1EE473C", VA = "0x1EE473C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600270E")]
				[Address(RVA = "0x1EE47AC", Offset = "0x1EE47AC", VA = "0x1EE47AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002709")]
			[Address(RVA = "0x1EE4458", Offset = "0x1EE4458", VA = "0x1EE4458")]
			[DebuggerHidden]
			public <FallDown>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0x1EE449C", Offset = "0x1EE449C", VA = "0x1EE449C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600270B")]
			[Address(RVA = "0x1EE44A0", Offset = "0x1EE44A0", VA = "0x1EE44A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0x1EE4744", Offset = "0x1EE4744", VA = "0x1EE4744", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTakeDamage;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onceOnly;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetCenter;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform baseTransform;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform fallenDownTransform;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float fallTime;

		[Token(Token = "0x40021E8")]
		private const float targetRadius = 0.25f;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool targetEnabled;

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x1EE4378", Offset = "0x1EE4378", VA = "0x1EE4378")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x1EE43E0", Offset = "0x1EE43E0", VA = "0x1EE43E0")]
		private void FireExposure()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x1EE437C", Offset = "0x1EE437C", VA = "0x1EE437C")]
		private void OnDamageTaken()
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1EE43E4", Offset = "0x1EE43E4", VA = "0x1EE43E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA438A8", Offset = "0xA438A8")]
		private IEnumerator FallDown()
		{
			return null;
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x1EE4484", Offset = "0x1EE4484", VA = "0x1EE4484")]
		public ArcheryTarget()
		{
		}
	}
	[Token(Token = "0x20007D2")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem glintParticle;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody arrowHeadRB;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody shaftRB;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicMaterial targetPhysMaterial;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 prevPosition;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion prevRotation;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 prevVelocity;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 prevHeadPosition;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SoundPlayOneshot fireReleaseSound;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SoundPlayOneshot airReleaseSound;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundPlayOneshot hitTargetSound;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PlaySound hitGroundSound;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool inFlight;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool released;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool hasSpreadFire;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int travelledFrames;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject scaleParentObject;

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x1EE47B4", Offset = "0x1EE47B4", VA = "0x1EE47B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x1EE483C", Offset = "0x1EE483C", VA = "0x1EE483C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x1EE4960", Offset = "0x1EE4960", VA = "0x1EE4960")]
		public void ArrowReleased(float inputVelocity)
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x1EE4E1C", Offset = "0x1EE4E1C", VA = "0x1EE4E1C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x1EE56F4", Offset = "0x1EE56F4", VA = "0x1EE56F4")]
		private void StickInTarget(Collision collision, bool bSkipRayCast)
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x1EE5F8C", Offset = "0x1EE5F8C", VA = "0x1EE5F8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1EE6040", Offset = "0x1EE6040", VA = "0x1EE6040")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x20007D3")]
	public class ArrowHand : MonoBehaviour
	{
		[Token(Token = "0x20007D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30F08", Offset = "0xA30F08")]
		private sealed class <ArrowReleaseHaptics>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArrowHand <>4__this;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002725")]
				[Address(RVA = "0x1EE76A4", Offset = "0x1EE76A4", VA = "0x1EE76A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002727")]
				[Address(RVA = "0x1EE7714", Offset = "0x1EE7714", VA = "0x1EE7714", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0x1EE7344", Offset = "0x1EE7344", VA = "0x1EE7344")]
			[DebuggerHidden]
			public <ArrowReleaseHaptics>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002723")]
			[Address(RVA = "0x1EE7404", Offset = "0x1EE7404", VA = "0x1EE7404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002724")]
			[Address(RVA = "0x1EE7408", Offset = "0x1EE7408", VA = "0x1EE7408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0x1EE76AC", Offset = "0x1EE76AC", VA = "0x1EE76AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Longbow bow;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject currentArrow;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject arrowPrefab;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform arrowNockTransform;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float nockDistance;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float lerpCompleteDistance;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rotationLerpThreshold;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float positionLerpThreshold;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool allowArrowSpawn;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool nocked;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool inNockRange;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool arrowLerpComplete;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundPlayOneshot arrowSpawnSound;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AllowTeleportWhileAttachedToHand allowTeleport;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int maxArrowCount;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<GameObject> arrowList;

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x1EE6048", Offset = "0x1EE6048", VA = "0x1EE6048")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1EE60F0", Offset = "0x1EE60F0", VA = "0x1EE60F0")]
		private void OnAttachedToHand(Hand attachedHand)
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x1EE6170", Offset = "0x1EE6170", VA = "0x1EE6170")]
		private GameObject InstantiateArrow()
		{
			return null;
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x1EE6424", Offset = "0x1EE6424", VA = "0x1EE6424")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x1EE7248", Offset = "0x1EE7248", VA = "0x1EE7248")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x1EE6DB0", Offset = "0x1EE6DB0", VA = "0x1EE6DB0")]
		private void FireArrow()
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x1EE7338", Offset = "0x1EE7338", VA = "0x1EE7338")]
		private void EnableArrowSpawn()
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x1EE72C4", Offset = "0x1EE72C4", VA = "0x1EE72C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4395C", Offset = "0xA4395C")]
		private IEnumerator ArrowReleaseHaptics()
		{
			return null;
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x1EE7370", Offset = "0x1EE7370", VA = "0x1EE7370")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x1EE73A8", Offset = "0x1EE73A8", VA = "0x1EE73A8")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x1EE60F8", Offset = "0x1EE60F8", VA = "0x1EE60F8")]
		private void FindBow()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x1EE73E0", Offset = "0x1EE73E0", VA = "0x1EE73E0")]
		public ArrowHand()
		{
		}
	}
	[Token(Token = "0x20007D5")]
	public class ArrowheadRotation : MonoBehaviour
	{
		[Token(Token = "0x6002728")]
		[Address(RVA = "0x1EE771C", Offset = "0x1EE771C", VA = "0x1EE771C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x1EE77B8", Offset = "0x1EE77B8", VA = "0x1EE77B8")]
		public ArrowheadRotation()
		{
		}
	}
	[Token(Token = "0x20007D6")]
	public class Balloon : MonoBehaviour
	{
		[Token(Token = "0x20007D7")]
		public enum BalloonColor
		{
			[Token(Token = "0x4002225")]
			Red,
			[Token(Token = "0x4002226")]
			OrangeRed,
			[Token(Token = "0x4002227")]
			Orange,
			[Token(Token = "0x4002228")]
			YellowOrange,
			[Token(Token = "0x4002229")]
			Yellow,
			[Token(Token = "0x400222A")]
			GreenYellow,
			[Token(Token = "0x400222B")]
			Green,
			[Token(Token = "0x400222C")]
			BlueGreen,
			[Token(Token = "0x400222D")]
			Blue,
			[Token(Token = "0x400222E")]
			VioletBlue,
			[Token(Token = "0x400222F")]
			Violet,
			[Token(Token = "0x4002230")]
			RedViolet,
			[Token(Token = "0x4002231")]
			LightGray,
			[Token(Token = "0x4002232")]
			DarkGray,
			[Token(Token = "0x4002233")]
			Random
		}

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject popPrefab;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVelocity;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lifetime;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool burstOnLifetimeEnd;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject lifetimeEndParticlePrefab;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundPlayOneshot lifetimeEndSound;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float destructTime;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float releaseTime;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundPlayOneshot collisionSound;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastSoundTime;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float soundDelay;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody balloonRigidbody;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool bParticlesSpawned;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float s_flLastDeathSound;

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x1EE77C0", Offset = "0x1EE77C0", VA = "0x1EE77C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x1EE785C", Offset = "0x1EE785C", VA = "0x1EE785C")]
		private void Update()
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x1EE7918", Offset = "0x1EE7918", VA = "0x1EE7918")]
		private void SpawnParticles(GameObject particlePrefab, SoundPlayOneshot sound)
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x1EE7BF0", Offset = "0x1EE7BF0", VA = "0x1EE7BF0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x1EE7D20", Offset = "0x1EE7D20", VA = "0x1EE7D20")]
		private void ApplyDamage()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x1EE7DAC", Offset = "0x1EE7DAC", VA = "0x1EE7DAC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1EE8184", Offset = "0x1EE8184", VA = "0x1EE8184")]
		public void SetColor(BalloonColor color)
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1EE8250", Offset = "0x1EE8250", VA = "0x1EE8250")]
		private Color BalloonColorToRGB(BalloonColor balloonColorVar)
		{
			return default(Color);
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1EE8488", Offset = "0x1EE8488", VA = "0x1EE8488")]
		public Balloon()
		{
		}
	}
	[Token(Token = "0x20007D8")]
	public class BalloonColliders : MonoBehaviour
	{
		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] colliders;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] colliderLocalPositions;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion[] colliderLocalRotations;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1EE84B8", Offset = "0x1EE84B8", VA = "0x1EE84B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x1EE87EC", Offset = "0x1EE87EC", VA = "0x1EE87EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x1EE8C3C", Offset = "0x1EE8C3C", VA = "0x1EE8C3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x1EE8DF0", Offset = "0x1EE8DF0", VA = "0x1EE8DF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x1EE8ECC", Offset = "0x1EE8ECC", VA = "0x1EE8ECC")]
		public BalloonColliders()
		{
		}
	}
	[Token(Token = "0x20007D9")]
	public class BalloonHapticBump : MonoBehaviour
	{
		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject physParent;

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x1EE8ED4", Offset = "0x1EE8ED4", VA = "0x1EE8ED4")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x1EE9028", Offset = "0x1EE9028", VA = "0x1EE9028")]
		public BalloonHapticBump()
		{
		}
	}
	[Token(Token = "0x20007DA")]
	public class BalloonSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minSpawnTime;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpawnTime;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float nextSpawnTime;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject balloonPrefab;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool autoSpawn;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool spawnAtStartup;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool playSounds;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundPlayOneshot inflateSound;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundPlayOneshot stretchSound;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool sendSpawnMessageToParent;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float scale;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnDirectionTransform;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float spawnForce;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool attachBalloon;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Balloon.BalloonColor color;

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x1EE9030", Offset = "0x1EE9030", VA = "0x1EE9030")]
		private void Start()
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x1EE9574", Offset = "0x1EE9574", VA = "0x1EE9574")]
		private void Update()
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x1EE90EC", Offset = "0x1EE90EC", VA = "0x1EE90EC")]
		public GameObject SpawnBalloon(Balloon.BalloonColor color = Balloon.BalloonColor.Red)
		{
			return null;
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x1EE963C", Offset = "0x1EE963C", VA = "0x1EE963C")]
		public void SpawnBalloonFromEvent(int color)
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x1EE9640", Offset = "0x1EE9640", VA = "0x1EE9640")]
		public BalloonSpawner()
		{
		}
	}
	[Token(Token = "0x20007DB")]
	public class ExplosionWobble : MonoBehaviour
	{
		[Token(Token = "0x6002740")]
		[Address(RVA = "0x1EF4B68", Offset = "0x1EF4B68", VA = "0x1EF4B68")]
		public void ExplosionEvent(Vector3 explosionPos)
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x1EF4C50", Offset = "0x1EF4C50", VA = "0x1EF4C50")]
		public ExplosionWobble()
		{
		}
	}
	[Token(Token = "0x20007DC")]
	public class FireSource : MonoBehaviour
	{
		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject fireParticlePrefab;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool startActive;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject fireObject;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem customParticles;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isBurning;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float burnTime;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ignitionDelay;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float ignitionTime;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Hand hand;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource ignitionSound;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool canSpreadFromThisSource;

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x1EF5118", Offset = "0x1EF5118", VA = "0x1EF5118")]
		private void Start()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x1EF53A8", Offset = "0x1EF53A8", VA = "0x1EF53A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x1EF54B8", Offset = "0x1EF54B8", VA = "0x1EF54B8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x1EF5548", Offset = "0x1EF5548", VA = "0x1EF5548")]
		private void FireExposure()
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x1EF5128", Offset = "0x1EF5128", VA = "0x1EF5128")]
		private void StartBurning()
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x1EF5668", Offset = "0x1EF5668", VA = "0x1EF5668")]
		public FireSource()
		{
		}
	}
	[Token(Token = "0x20007DD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30F18", Offset = "0xA30F18")]
	public class Longbow : MonoBehaviour
	{
		[Token(Token = "0x20007DE")]
		public enum Handedness
		{
			[Token(Token = "0x4002282")]
			Left,
			[Token(Token = "0x4002283")]
			Right
		}

		[Token(Token = "0x20007DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30F7C", Offset = "0xA30F7C")]
		private sealed class <ResetDrawAnim>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Longbow <>4__this;

			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4002288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startLerp>5__3;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002761")]
				[Address(RVA = "0x1E0C9C4", Offset = "0x1E0C9C4", VA = "0x1E0C9C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002763")]
				[Address(RVA = "0x1E0CA34", Offset = "0x1E0CA34", VA = "0x1E0CA34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600275E")]
			[Address(RVA = "0x1E0C074", Offset = "0x1E0C074", VA = "0x1E0C074")]
			[DebuggerHidden]
			public <ResetDrawAnim>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x600275F")]
			[Address(RVA = "0x1E0C8AC", Offset = "0x1E0C8AC", VA = "0x1E0C8AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0x1E0C8B0", Offset = "0x1E0C8B0", VA = "0x1E0C8B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0x1E0C9CC", Offset = "0x1E0C9CC", VA = "0x1E0C9CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Handedness currentHandGuess;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float timeOfPossibleHandSwitch;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timeBeforeConfirmingHandSwitch;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool possibleHandSwitch;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform pivotTransform;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform handleTransform;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ArrowHand arrowHand;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform nockTransform;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform nockRestTransform;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool autoSpawnArrowHand;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ItemPackage arrowHandItemPackage;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject arrowHandPrefab;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool nocked;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool pulled;

		[Token(Token = "0x4002262")]
		private const float minPull = 0.05f;

		[Token(Token = "0x4002263")]
		private const float maxPull = 0.5f;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float nockDistanceTravelled;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float hapticDistanceThreshold;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float lastTickDistance;

		[Token(Token = "0x4002267")]
		private const float bowPullPulseStrengthLow = 100f;

		[Token(Token = "0x4002268")]
		private const float bowPullPulseStrengthHigh = 500f;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 bowLeftVector;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float arrowMinVelocity;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float arrowMaxVelocity;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float arrowVelocity;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float minStrainTickTime;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float maxStrainTickTime;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float nextStrainTick;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool lerpBackToZeroRotation;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lerpStartTime;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lerpDuration;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion lerpStartRotation;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float nockLerpStartTime;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion nockLerpStartRotation;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float drawOffset;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public LinearMapping bowDrawLinearMapping;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool deferNewPoses;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 lateUpdatePos;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion lateUpdateRot;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SoundBowClick drawSound;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float drawTension;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public SoundPlayOneshot arrowSlideSound;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SoundPlayOneshot releaseSound;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SoundPlayOneshot nockSound;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SteamVR_Events.Action newPosesAppliedAction;

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x1E0AE2C", Offset = "0x1E0AE2C", VA = "0x1E0AE2C")]
		private void OnAttachedToHand(Hand attachedHand)
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x1E0AE34", Offset = "0x1E0AE34", VA = "0x1E0AE34")]
		private void Awake()
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x1E0AED0", Offset = "0x1E0AED0", VA = "0x1E0AED0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x1E0AF04", Offset = "0x1E0AF04", VA = "0x1E0AF04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x1E0AF38", Offset = "0x1E0AF38", VA = "0x1E0AF38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x1E0AFB4", Offset = "0x1E0AFB4", VA = "0x1E0AFB4")]
		private void OnNewPosesApplied()
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x1E0B060", Offset = "0x1E0B060", VA = "0x1E0B060")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x1E0BD24", Offset = "0x1E0BD24", VA = "0x1E0BD24")]
		public void ArrowReleased()
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x1E0C000", Offset = "0x1E0C000", VA = "0x1E0C000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA43A10", Offset = "0xA43A10")]
		private IEnumerator ResetDrawAnim()
		{
			return null;
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x1E0C0A0", Offset = "0x1E0C0A0", VA = "0x1E0C0A0")]
		public float GetArrowVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x1E0C0A8", Offset = "0x1E0C0A8", VA = "0x1E0C0A8")]
		public void StartRotationLerp()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x1E0C264", Offset = "0x1E0C264", VA = "0x1E0C264")]
		public void StartNock(ArrowHand currentArrowHand)
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x1E0BA84", Offset = "0x1E0BA84", VA = "0x1E0BA84")]
		private void EvaluateHandedness()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x1E0C340", Offset = "0x1E0C340", VA = "0x1E0C340")]
		private void DoHandednessCheck()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x1E0C3C4", Offset = "0x1E0C3C4", VA = "0x1E0C3C4")]
		public void ArrowInPosition()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x1E0C464", Offset = "0x1E0C464", VA = "0x1E0C464")]
		public void ReleaseNock()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x1E0C4FC", Offset = "0x1E0C4FC", VA = "0x1E0C4FC")]
		private void ShutDown()
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x1E0C754", Offset = "0x1E0C754", VA = "0x1E0C754")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x1E0C78C", Offset = "0x1E0C78C", VA = "0x1E0C78C")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x1E0C7DC", Offset = "0x1E0C7DC", VA = "0x1E0C7DC")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x1E0C858", Offset = "0x1E0C858", VA = "0x1E0C858")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x1E0C85C", Offset = "0x1E0C85C", VA = "0x1E0C85C")]
		public Longbow()
		{
		}
	}
	[Token(Token = "0x20007E0")]
	public class SoundBowClick : MonoBehaviour
	{
		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip bowClick;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchTensionCurve;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x1E0F320", Offset = "0x1E0F320", VA = "0x1E0F320")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x1E0BC84", Offset = "0x1E0BC84", VA = "0x1E0BC84")]
		public void PlayBowTensionClicks(float normalizedTension)
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x1E0F378", Offset = "0x1E0F378", VA = "0x1E0F378")]
		public SoundBowClick()
		{
		}
	}
	[Token(Token = "0x20007E1")]
	public class ControllerHintsExample : MonoBehaviour
	{
		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30F8C", Offset = "0xA30F8C")]
		private sealed class <TestButtonHints>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002770")]
				[Address(RVA = "0x1EF3150", Offset = "0x1EF3150", VA = "0x1EF3150", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002772")]
				[Address(RVA = "0x1EF31C0", Offset = "0x1EF31C0", VA = "0x1EF31C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600276D")]
			[Address(RVA = "0x1EF2DD0", Offset = "0x1EF2DD0", VA = "0x1EF2DD0")]
			[DebuggerHidden]
			public <TestButtonHints>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0x1EF2E30", Offset = "0x1EF2E30", VA = "0x1EF2E30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0x1EF2E34", Offset = "0x1EF2E34", VA = "0x1EF2E34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0x1EF3158", Offset = "0x1EF3158", VA = "0x1EF3158", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA30F9C", Offset = "0xA30F9C")]
		private sealed class <TestTextHints>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x1700038B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002776")]
				[Address(RVA = "0x1EF3414", Offset = "0x1EF3414", VA = "0x1EF3414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002778")]
				[Address(RVA = "0x1EF3484", Offset = "0x1EF3484", VA = "0x1EF3484", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002773")]
			[Address(RVA = "0x1EF2DFC", Offset = "0x1EF2DFC", VA = "0x1EF2DFC")]
			[DebuggerHidden]
			public <TestTextHints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0x1EF31C8", Offset = "0x1EF31C8", VA = "0x1EF31C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002775")]
			[Address(RVA = "0x1EF31CC", Offset = "0x1EF31CC", VA = "0x1EF31CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002777")]
			[Address(RVA = "0x1EF341C", Offset = "0x1EF341C", VA = "0x1EF341C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine buttonHintCoroutine;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine textHintCoroutine;

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x1EF2B7C", Offset = "0x1EF2B7C", VA = "0x1EF2B7C")]
		public void ShowButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x1EF2C44", Offset = "0x1EF2C44", VA = "0x1EF2C44")]
		public void ShowTextHints(Hand hand)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x1EF2D0C", Offset = "0x1EF2D0C", VA = "0x1EF2D0C")]
		public void DisableHints()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x1EF2BD0", Offset = "0x1EF2BD0", VA = "0x1EF2BD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA43AC4", Offset = "0xA43AC4")]
		private IEnumerator TestButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x1EF2C98", Offset = "0x1EF2C98", VA = "0x1EF2C98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA43B28", Offset = "0xA43B28")]
		private IEnumerator TestTextHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x1EF2E28", Offset = "0x1EF2E28", VA = "0x1EF2E28")]
		public ControllerHintsExample()
		{
		}
	}
	[Token(Token = "0x20007E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA30FAC", Offset = "0xA30FAC")]
	public class InteractableExample : MonoBehaviour
	{
		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh textMesh;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPosition;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion oldRotation;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float attachTime;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x1E07E6C", Offset = "0x1E07E6C", VA = "0x1E07E6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x1E07EE4", Offset = "0x1E07EE4", VA = "0x1E07EE4")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x1E07F84", Offset = "0x1E07F84", VA = "0x1E07F84")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x1E07FE8", Offset = "0x1E07FE8", VA = "0x1E07FE8")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x1E082B4", Offset = "0x1E082B4", VA = "0x1E082B4")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x1E08364", Offset = "0x1E08364", VA = "0x1E08364")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x1E08404", Offset = "0x1E08404", VA = "0x1E08404")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x1E084EC", Offset = "0x1E084EC", VA = "0x1E084EC")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1E084F0", Offset = "0x1E084F0", VA = "0x1E084F0")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x1E084F4", Offset = "0x1E084F4", VA = "0x1E084F4")]
		public InteractableExample()
		{
		}
	}
	[Token(Token = "0x20007E5")]
	public class AllowTeleportWhileAttachedToHand : MonoBehaviour
	{
		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool teleportAllowed;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideHoverLock;

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x1EE4368", Offset = "0x1EE4368", VA = "0x1EE4368")]
		public AllowTeleportWhileAttachedToHand()
		{
		}
	}
	[Token(Token = "0x20007E6")]
	public class ChaperoneInfo : MonoBehaviour
	{
		[Token(Token = "0x20007E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31010", Offset = "0xA31010")]
		private sealed class <Start>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChaperoneInfo <>4__this;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRChaperone <chaperone>5__2;

			[Token(Token = "0x17000392")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002794")]
				[Address(RVA = "0x1EE9EAC", Offset = "0x1EE9EAC", VA = "0x1EE9EAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000393")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002796")]
				[Address(RVA = "0x1EE9F1C", Offset = "0x1EE9F1C", VA = "0x1EE9F1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002791")]
			[Address(RVA = "0x1EE9C14", Offset = "0x1EE9C14", VA = "0x1EE9C14")]
			[DebuggerHidden]
			public <Start>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0x1EE9CB4", Offset = "0x1EE9CB4", VA = "0x1EE9CB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0x1EE9CB8", Offset = "0x1EE9CB8", VA = "0x1EE9CB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002795")]
			[Address(RVA = "0x1EE9EB4", Offset = "0x1EE9EB4", VA = "0x1EE9EB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38770", Offset = "0xA38770")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38780", Offset = "0xA38780")]
		private float <playAreaSizeX>k__BackingField;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38790", Offset = "0xA38790")]
		private float <playAreaSizeZ>k__BackingField;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA387A0", Offset = "0xA387A0")]
		private bool <roomscale>k__BackingField;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event Initialized;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ChaperoneInfo _instance;

		[Token(Token = "0x1700038D")]
		public bool initialized
		{
			[Token(Token = "0x6002784")]
			[Address(RVA = "0x1EE98BC", Offset = "0x1EE98BC", VA = "0x1EE98BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43C2C", Offset = "0xA43C2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002785")]
			[Address(RVA = "0x1EE98C4", Offset = "0x1EE98C4", VA = "0x1EE98C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43C3C", Offset = "0xA43C3C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public float playAreaSizeX
		{
			[Token(Token = "0x6002786")]
			[Address(RVA = "0x1EE98D0", Offset = "0x1EE98D0", VA = "0x1EE98D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43C4C", Offset = "0xA43C4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x1EE98D8", Offset = "0x1EE98D8", VA = "0x1EE98D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43C5C", Offset = "0xA43C5C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public float playAreaSizeZ
		{
			[Token(Token = "0x6002788")]
			[Address(RVA = "0x1EE98E0", Offset = "0x1EE98E0", VA = "0x1EE98E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43C6C", Offset = "0xA43C6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002789")]
			[Address(RVA = "0x1EE98E8", Offset = "0x1EE98E8", VA = "0x1EE98E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43C7C", Offset = "0xA43C7C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public bool roomscale
		{
			[Token(Token = "0x600278A")]
			[Address(RVA = "0x1EE98F0", Offset = "0x1EE98F0", VA = "0x1EE98F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43C8C", Offset = "0xA43C8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600278B")]
			[Address(RVA = "0x1EE98F8", Offset = "0x1EE98F8", VA = "0x1EE98F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43C9C", Offset = "0xA43C9C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public static ChaperoneInfo instance
		{
			[Token(Token = "0x600278D")]
			[Address(RVA = "0x1EE99A0", Offset = "0x1EE99A0", VA = "0x1EE99A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x1EE9904", Offset = "0x1EE9904", VA = "0x1EE9904")]
		public static SteamVR_Events.Action InitializedAction(UnityAction action)
		{
			return null;
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x1EE9BA0", Offset = "0x1EE9BA0", VA = "0x1EE9BA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA43CAC", Offset = "0xA43CAC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x1EE9C40", Offset = "0x1EE9C40", VA = "0x1EE9C40")]
		public ChaperoneInfo()
		{
		}
	}
	[Token(Token = "0x20007E8")]
	public class IgnoreTeleportTrace : MonoBehaviour
	{
		[Token(Token = "0x6002797")]
		[Address(RVA = "0x1E06358", Offset = "0x1E06358", VA = "0x1E06358")]
		public IgnoreTeleportTrace()
		{
		}
	}
	[Token(Token = "0x20007E9")]
	public class Teleport : MonoBehaviour
	{
		[Token(Token = "0x20007EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA31020", Offset = "0xA31020")]
		private sealed class <TeleportHintCoroutine>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Teleport <>4__this;

			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <prevBreakTime>5__2;

			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <prevHapticPulseTime>5__3;

			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <pulsed>5__4;

			[Token(Token = "0x17000395")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027BD")]
				[Address(RVA = "0x1E16804", Offset = "0x1E16804", VA = "0x1E16804", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027BF")]
				[Address(RVA = "0x1E16874", Offset = "0x1E16874", VA = "0x1E16874", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x1E16168", Offset = "0x1E16168", VA = "0x1E16168")]
			[DebuggerHidden]
			public <TeleportHintCoroutine>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x1E1656C", Offset = "0x1E1656C", VA = "0x1E1656C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x1E16570", Offset = "0x1E16570", VA = "0x1E16570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x1E1680C", Offset = "0x1E1680C", VA = "0x1E1680C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask traceLayerMask;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask floorFixupTraceLayerMask;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floorFixupMaximumTraceDistance;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material areaVisibleMaterial;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material areaLockedMaterial;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material areaHighlightedMaterial;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material pointVisibleMaterial;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material pointLockedMaterial;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material pointHighlightedMaterial;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform destinationReticleTransform;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform invalidReticleTransform;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject playAreaPreviewCorner;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject playAreaPreviewSide;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color pointerValidColor;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color pointerInvalidColor;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color pointerLockedColor;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool showPlayAreaMarker;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float teleportFadeTime;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float meshFadeTime;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float arcDistance;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA387B0", Offset = "0xA387B0")]
		public Transform onActivateObjectTransform;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform onDeactivateObjectTransform;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float activateObjectTime;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float deactivateObjectTime;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA387E8", Offset = "0xA387E8")]
		public AudioSource pointerAudioSource;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioSource loopingAudioSource;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioSource headAudioSource;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioSource reticleAudioSource;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38820", Offset = "0xA38820")]
		public AudioClip teleportSound;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip pointerStartSound;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip pointerLoopSound;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip pointerStopSound;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip goodHighlightSound;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip badHighlightSound;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38858", Offset = "0xA38858")]
		public bool debugFloor;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool showOffsetReticle;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform offsetReticleTransform;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MeshRenderer floorDebugSphere;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public LineRenderer floorDebugLine;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private LineRenderer pointerLineRenderer;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject teleportPointerObject;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Transform pointerStartTransform;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Hand pointerHand;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Player player;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TeleportArc teleportArc;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool visible;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private TeleportMarkerBase[] teleportMarkers;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private TeleportMarkerBase pointedAtTeleportMarker;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private TeleportMarkerBase teleportingToMarker;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 pointedAtPosition;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 prevPointedAtPosition;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool teleporting;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float currentFadeTime;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float meshAlphaPercent;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float pointerShowStartTime;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float pointerHideStartTime;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool meshFading;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fullTintAlpha;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float invalidReticleMinScale;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float invalidReticleMaxScale;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float invalidReticleMinScaleDistance;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float invalidReticleMaxScaleDistance;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 invalidReticleScale;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion invalidReticleTargetRotation;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Transform playAreaPreviewTransform;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Transform[] playAreaPreviewCorners;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform[] playAreaPreviewSides;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float loopingAudioMaxVolume;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine hintCoroutine;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool originalHoverLockState;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Interactable originalHoveringInteractable;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private AllowTeleportWhileAttachedToHand allowTeleportWhileAttached;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 startingFeetOffset;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private bool movedFeetFarEnough;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private SteamVR_Events.Action chaperoneInfoInitializedAction;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SteamVR_Events.Event<float> ChangeScene;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SteamVR_Events.Event<TeleportMarkerBase> Player;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SteamVR_Events.Event<TeleportMarkerBase> PlayerPre;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Teleport _instance;

		[Token(Token = "0x17000394")]
		public static Teleport instance
		{
			[Token(Token = "0x600279B")]
			[Address(RVA = "0x1E10BBC", Offset = "0x1E10BBC", VA = "0x1E10BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x1E109D0", Offset = "0x1E109D0", VA = "0x1E109D0")]
		public static SteamVR_Events.Action<float> ChangeSceneAction(UnityAction<float> action)
		{
			return null;
		}

		[Token(Token = "0x6002799")]
		[Address(RVA = "0x1E10A74", Offset = "0x1E10A74", VA = "0x1E10A74")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x1E10B18", Offset = "0x1E10B18", VA = "0x1E10B18")]
		public static SteamVR_Events.Action<TeleportMarkerBase> PlayerPreAction(UnityAction<TeleportMarkerBase> action)
		{
			return null;
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x1E10CE4", Offset = "0x1E10CE4", VA = "0x1E10CE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x1E10EF8", Offset = "0x1E10EF8", VA = "0x1E10EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x1E1154C", Offset = "0x1E1154C", VA = "0x1E1154C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x1E128CC", Offset = "0x1E128CC", VA = "0x1E128CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x1E11404", Offset = "0x1E11404", VA = "0x1E11404")]
		private void CheckForSpawnPoint()
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x1E12E54", Offset = "0x1E12E54", VA = "0x1E12E54")]
		public void HideTeleportPointer()
		{
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x1E12EDC", Offset = "0x1E12EDC", VA = "0x1E12EDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x1E13C48", Offset = "0x1E13C48", VA = "0x1E13C48")]
		private void UpdatePointer()
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x1E15478", Offset = "0x1E15478", VA = "0x1E15478")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x1E1158C", Offset = "0x1E1158C", VA = "0x1E1158C")]
		private void OnChaperoneInfoInitialized()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x1E10FEC", Offset = "0x1E10FEC", VA = "0x1E10FEC")]
		private void HidePointer()
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x1E13488", Offset = "0x1E13488", VA = "0x1E13488")]
		private void ShowPointer(Hand newPointerHand, Hand oldPointerHand)
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x1E14AF8", Offset = "0x1E14AF8", VA = "0x1E14AF8")]
		private void UpdateTeleportColors()
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x1E15AEC", Offset = "0x1E15AEC", VA = "0x1E15AEC")]
		private void PlayAudioClip(AudioSource source, AudioClip clip)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x1E15C78", Offset = "0x1E15C78", VA = "0x1E15C78")]
		private void PlayPointerHaptic(bool validLocation)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x1E132F8", Offset = "0x1E132F8", VA = "0x1E132F8")]
		private void TryTeleportPlayer()
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x1E15D08", Offset = "0x1E15D08", VA = "0x1E15D08")]
		private void InitiateTeleportFade()
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x1E1290C", Offset = "0x1E1290C", VA = "0x1E1290C")]
		private void TeleportPlayer()
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x1E14F14", Offset = "0x1E14F14", VA = "0x1E14F14")]
		private void HighlightSelected(TeleportMarkerBase hitTeleportMarker)
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x1E160B8", Offset = "0x1E160B8", VA = "0x1E160B8")]
		public void ShowTeleportHint()
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x1E15FCC", Offset = "0x1E15FCC", VA = "0x1E15FCC")]
		public void CancelTeleportHint()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x1E160F4", Offset = "0x1E160F4", VA = "0x1E160F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA43D60", Offset = "0xA43D60")]
		private IEnumerator TeleportHintCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x1E16194", Offset = "0x1E16194", VA = "0x1E16194")]
		public bool IsEligibleForTeleport(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x1E15A5C", Offset = "0x1E15A5C", VA = "0x1E15A5C")]
		private bool ShouldOverrideHoverLock()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x1E13228", Offset = "0x1E13228", VA = "0x1E13228")]
		private bool WasTeleportButtonReleased(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x1E13B78", Offset = "0x1E13B78", VA = "0x1E13B78")]
		private bool IsTeleportButtonDown(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1E133B8", Offset = "0x1E133B8", VA = "0x1E133B8")]
		private bool WasTeleportButtonPressed(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x1E15B9C", Offset = "0x1E15B9C", VA = "0x1E15B9C")]
		private Transform GetPointerStartTransform(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x1E16394", Offset = "0x1E16394", VA = "0x1E16394")]
		public Teleport()
		{
		}
	}
	[Token(Token = "0x20007EB")]
	public class TeleportArc : MonoBehaviour
	{
		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float thickness;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38890", Offset = "0xA38890")]
		public float arcDuration;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA388C8", Offset = "0xA388C8")]
		public float segmentBreak;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38900", Offset = "0xA38900")]
		public float arcSpeed;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float arcTimeOffset;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prevThickness;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int prevSegmentCount;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showArc;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 startPos;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useGravity;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool arcInvalid;

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x1E1687C", Offset = "0x1E1687C", VA = "0x1E1687C")]
		private void Start()
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x1E168A4", Offset = "0x1E168A4", VA = "0x1E168A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x1E168F0", Offset = "0x1E168F0", VA = "0x1E168F0")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x1E14C24", Offset = "0x1E14C24", VA = "0x1E14C24")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x1E15B84", Offset = "0x1E15B84", VA = "0x1E15B84")]
		public void Show()
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x1E15B4C", Offset = "0x1E15B4C", VA = "0x1E15B4C")]
		public void Hide()
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x1E14C78", Offset = "0x1E14C78", VA = "0x1E14C78")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x1E17130", Offset = "0x1E17130", VA = "0x1E17130")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x1E15200", Offset = "0x1E15200", VA = "0x1E15200")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x1E16ED0", Offset = "0x1E16ED0", VA = "0x1E16ED0")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x1E15320", Offset = "0x1E15320", VA = "0x1E15320")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x1E16E30", Offset = "0x1E16E30", VA = "0x1E16E30")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x1E1759C", Offset = "0x1E1759C", VA = "0x1E1759C")]
		public TeleportArc()
		{
		}
	}
	[Token(Token = "0x20007EC")]
	public class TeleportArea : TeleportMarkerBase
	{
		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38948", Offset = "0xA38948")]
		private Bounds <meshBounds>k__BackingField;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer areaMesh;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int tintColorId;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color visibleTintColor;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color highlightedTintColor;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color lockedTintColor;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool highlighted;

		[Token(Token = "0x17000397")]
		public Bounds meshBounds
		{
			[Token(Token = "0x60027CD")]
			[Address(RVA = "0x1E175C4", Offset = "0x1E175C4", VA = "0x1E175C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43E14", Offset = "0xA43E14")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x1E175D8", Offset = "0x1E175D8", VA = "0x1E175D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43E24", Offset = "0xA43E24")]
			private set
			{
			}
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x1E175EC", Offset = "0x1E175EC", VA = "0x1E175EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x1E17784", Offset = "0x1E17784", VA = "0x1E17784")]
		public void Start()
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x1E178A0", Offset = "0x1E178A0", VA = "0x1E178A0", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x1E178A8", Offset = "0x1E178A8", VA = "0x1E178A8", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x1E178B0", Offset = "0x1E178B0", VA = "0x1E178B0", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x1E1799C", Offset = "0x1E1799C", VA = "0x1E1799C", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x1E17AD4", Offset = "0x1E17AD4", VA = "0x1E17AD4", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x1E17B98", Offset = "0x1E17B98", VA = "0x1E17B98")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x1E17660", Offset = "0x1E17660", VA = "0x1E17660")]
		private bool CalculateBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x1E17A78", Offset = "0x1E17A78", VA = "0x1E17A78")]
		private Color GetTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x1E17C74", Offset = "0x1E17C74", VA = "0x1E17C74")]
		public TeleportArea()
		{
		}
	}
	[Token(Token = "0x20007ED")]
	public abstract class TeleportMarkerBase : MonoBehaviour
	{
		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool locked;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool markerActive;

		[Token(Token = "0x17000398")]
		public virtual bool showReticle
		{
			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x1E17CE0", Offset = "0x1E17CE0", VA = "0x1E17CE0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x1E17CE8", Offset = "0x1E17CE8", VA = "0x1E17CE8")]
		public void SetLocked(bool locked)
		{
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x1E17CFC", Offset = "0x1E17CFC", VA = "0x1E17CFC", Slot = "5")]
		public virtual void TeleportPlayer(Vector3 pointedAtPosition)
		{
		}

		[Token(Token = "0x60027DD")]
		public abstract void UpdateVisuals();

		[Token(Token = "0x60027DE")]
		public abstract void Highlight(bool highlight);

		[Token(Token = "0x60027DF")]
		public abstract void SetAlpha(float tintAlpha, float alphaPercent);

		[Token(Token = "0x60027E0")]
		public abstract bool ShouldActivate(Vector3 playerPosition);

		[Token(Token = "0x60027E1")]
		public abstract bool ShouldMovePlayer();

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x1E17CD0", Offset = "0x1E17CD0", VA = "0x1E17CD0")]
		protected TeleportMarkerBase()
		{
		}
	}
	[Token(Token = "0x20007EE")]
	public class TeleportPoint : TeleportMarkerBase
	{
		[Token(Token = "0x20007EF")]
		public enum TeleportPointType
		{
			[Token(Token = "0x4002330")]
			MoveToLocation,
			[Token(Token = "0x4002331")]
			SwitchToNewScene
		}

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TeleportPointType teleportType;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string switchToScene;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color titleVisibleColor;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color titleHighlightedColor;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color titleLockedColor;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool playerSpawnPoint;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool gotReleventComponents;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer markerMesh;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshRenderer switchSceneIcon;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer moveLocationIcon;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer lockedIcon;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer pointIcon;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform lookAtJointTransform;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Animation animation;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Text titleText;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player player;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lookAtPosition;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int tintColorID;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color tintColor;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color titleColor;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float fullTitleAlpha;

		[Token(Token = "0x400232C")]
		private const string switchSceneAnimation = "switch_scenes_idle";

		[Token(Token = "0x400232D")]
		private const string moveLocationAnimation = "move_location_idle";

		[Token(Token = "0x400232E")]
		private const string lockedAnimation = "locked_idle";

		[Token(Token = "0x17000399")]
		public override bool showReticle
		{
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x1E17D00", Offset = "0x1E17D00", VA = "0x1E17D00", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x1E17D08", Offset = "0x1E17D08", VA = "0x1E17D08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x1E18044", Offset = "0x1E18044", VA = "0x1E18044")]
		private void Start()
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x1E18068", Offset = "0x1E18068", VA = "0x1E18068")]
		private void Update()
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x1E18168", Offset = "0x1E18168", VA = "0x1E18168", Slot = "9")]
		public override bool ShouldActivate(Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x1E18248", Offset = "0x1E18248", VA = "0x1E18248", Slot = "10")]
		public override bool ShouldMovePlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x1E18250", Offset = "0x1E18250", VA = "0x1E18250", Slot = "7")]
		public override void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x1E184B0", Offset = "0x1E184B0", VA = "0x1E184B0", Slot = "6")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x1E18694", Offset = "0x1E18694", VA = "0x1E18694", Slot = "8")]
		public override void SetAlpha(float tintAlpha, float alphaPercent)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x1E183AC", Offset = "0x1E183AC", VA = "0x1E183AC")]
		public void SetMeshMaterials(Material material, Color textColor)
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x1E160AC", Offset = "0x1E160AC", VA = "0x1E160AC")]
		public void TeleportToScene()
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x1E17E34", Offset = "0x1E17E34", VA = "0x1E17E34")]
		public void GetRelevantComponents()
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x1E188B0", Offset = "0x1E188B0", VA = "0x1E188B0")]
		public void ReleaseRelevantComponents()
		{
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x1E188C8", Offset = "0x1E188C8", VA = "0x1E188C8")]
		public void UpdateVisualsInEditor()
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x1E18CEC", Offset = "0x1E18CEC", VA = "0x1E18CEC")]
		public TeleportPoint()
		{
		}
	}
}
namespace AutoTiling
{
	[Token(Token = "0x20007F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA31030", Offset = "0xA31030")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA31030", Offset = "0xA31030")]
	[ExecuteInEditMode]
	public class AutoTextureTiling : MonoBehaviour
	{
		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float faceUnwrappingNormalTolerance;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool useUnifiedScaling;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 _topScale;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 _bottomScale;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 _leftScale;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _rightScale;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _frontScale;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 _backScale;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useUnifiedOffset;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector2 _topOffset;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Vector2 _bottomOffset;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector2 _leftOffset;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Vector2 _rightOffset;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Vector2 _frontOffset;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector2 _backOffset;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _topRotation;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float _bottomRotation;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float _leftRotation;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float _rightRotation;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float _frontRotation;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _backRotation;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private int _topMaterialIndex;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private int _bottomMaterialIndex;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int _leftMaterialIndex;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private int _rightMaterialIndex;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private int _frontMaterialIndex;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private int _backMaterialIndex;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private bool _topFlipX;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		[SerializeField]
		private bool _topFlipY;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		[SerializeField]
		private bool _bottomFlipX;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
		[SerializeField]
		private bool _bottomFlipY;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _leftFlipX;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[SerializeField]
		private bool _leftFlipY;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		[SerializeField]
		private bool _rightFlipX;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		[SerializeField]
		private bool _rightFlipY;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool _frontFlipX;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[SerializeField]
		private bool _frontFlipY;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		[SerializeField]
		private bool _backFlipX;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
		[SerializeField]
		private bool _backFlipY;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private bool _useBakedMesh;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private FaceData[] _faceUnwrapData;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private UnwrapType _unwrapMethod;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float scaleX;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float scaleY;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float scaleZ;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string extensionString;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string meshAssetPathString;

		[Token(Token = "0x1700039A")]
		public MeshRenderer Renderer
		{
			[Token(Token = "0x60027F2")]
			[Address(RVA = "0xB8FED0", Offset = "0xB8FED0", VA = "0xB8FED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x60027F3")]
			[Address(RVA = "0xB8FF98", Offset = "0xB8FF98", VA = "0xB8FF98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		public FaceData[] faceUnwrapData
		{
			[Token(Token = "0x60027F4")]
			[Address(RVA = "0xB90060", Offset = "0xB90060", VA = "0xB90060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		public UnwrapType unwrapMethod
		{
			[Token(Token = "0x60027F5")]
			[Address(RVA = "0xB90068", Offset = "0xB90068", VA = "0xB90068")]
			get
			{
				return default(UnwrapType);
			}
			[Token(Token = "0x60027F6")]
			[Address(RVA = "0xB90070", Offset = "0xB90070", VA = "0xB90070")]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public Vector2 topScale
		{
			[Token(Token = "0x60027F7")]
			[Address(RVA = "0xB90AA8", Offset = "0xB90AA8", VA = "0xB90AA8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60027F8")]
			[Address(RVA = "0xB90AB0", Offset = "0xB90AB0", VA = "0xB90AB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public Vector2 bottomScale
		{
			[Token(Token = "0x60027F9")]
			[Address(RVA = "0xB90AB8", Offset = "0xB90AB8", VA = "0xB90AB8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60027FA")]
			[Address(RVA = "0xB90AC0", Offset = "0xB90AC0", VA = "0xB90AC0")]
			set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public Vector2 leftScale
		{
			[Token(Token = "0x60027FB")]
			[Address(RVA = "0xB90AD4", Offset = "0xB90AD4", VA = "0xB90AD4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60027FC")]
			[Address(RVA = "0xB90ADC", Offset = "0xB90ADC", VA = "0xB90ADC")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public Vector2 rightScale
		{
			[Token(Token = "0x60027FD")]
			[Address(RVA = "0xB90AF0", Offset = "0xB90AF0", VA = "0xB90AF0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60027FE")]
			[Address(RVA = "0xB90AF8", Offset = "0xB90AF8", VA = "0xB90AF8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public Vector2 frontScale
		{
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0xB90B0C", Offset = "0xB90B0C", VA = "0xB90B0C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002800")]
			[Address(RVA = "0xB90B14", Offset = "0xB90B14", VA = "0xB90B14")]
			set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public Vector2 backScale
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0xB90B28", Offset = "0xB90B28", VA = "0xB90B28")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002802")]
			[Address(RVA = "0xB90B30", Offset = "0xB90B30", VA = "0xB90B30")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public Vector2 topOffset
		{
			[Token(Token = "0x6002803")]
			[Address(RVA = "0xB90B44", Offset = "0xB90B44", VA = "0xB90B44")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002804")]
			[Address(RVA = "0xB90B4C", Offset = "0xB90B4C", VA = "0xB90B4C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public Vector2 bottomOffset
		{
			[Token(Token = "0x6002805")]
			[Address(RVA = "0xB90B54", Offset = "0xB90B54", VA = "0xB90B54")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002806")]
			[Address(RVA = "0xB90B5C", Offset = "0xB90B5C", VA = "0xB90B5C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public Vector2 leftOffset
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0xB90B70", Offset = "0xB90B70", VA = "0xB90B70")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002808")]
			[Address(RVA = "0xB90B78", Offset = "0xB90B78", VA = "0xB90B78")]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public Vector2 rightOffset
		{
			[Token(Token = "0x6002809")]
			[Address(RVA = "0xB90B8C", Offset = "0xB90B8C", VA = "0xB90B8C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600280A")]
			[Address(RVA = "0xB90B94", Offset = "0xB90B94", VA = "0xB90B94")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public Vector2 frontOffset
		{
			[Token(Token = "0x600280B")]
			[Address(RVA = "0xB90BA8", Offset = "0xB90BA8", VA = "0xB90BA8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600280C")]
			[Address(RVA = "0xB90BB0", Offset = "0xB90BB0", VA = "0xB90BB0")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public Vector2 backOffset
		{
			[Token(Token = "0x600280D")]
			[Address(RVA = "0xB90BC4", Offset = "0xB90BC4", VA = "0xB90BC4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600280E")]
			[Address(RVA = "0xB90BCC", Offset = "0xB90BCC", VA = "0xB90BCC")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public float topRotation
		{
			[Token(Token = "0x600280F")]
			[Address(RVA = "0xB90BE0", Offset = "0xB90BE0", VA = "0xB90BE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002810")]
			[Address(RVA = "0xB90BE8", Offset = "0xB90BE8", VA = "0xB90BE8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public float bottomRotation
		{
			[Token(Token = "0x6002811")]
			[Address(RVA = "0xB90BF0", Offset = "0xB90BF0", VA = "0xB90BF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002812")]
			[Address(RVA = "0xB90BF8", Offset = "0xB90BF8", VA = "0xB90BF8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public float leftRotation
		{
			[Token(Token = "0x6002813")]
			[Address(RVA = "0xB90C00", Offset = "0xB90C00", VA = "0xB90C00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002814")]
			[Address(RVA = "0xB90C08", Offset = "0xB90C08", VA = "0xB90C08")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public float rightRotation
		{
			[Token(Token = "0x6002815")]
			[Address(RVA = "0xB90C10", Offset = "0xB90C10", VA = "0xB90C10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002816")]
			[Address(RVA = "0xB90C18", Offset = "0xB90C18", VA = "0xB90C18")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public float frontRotation
		{
			[Token(Token = "0x6002817")]
			[Address(RVA = "0xB90C20", Offset = "0xB90C20", VA = "0xB90C20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002818")]
			[Address(RVA = "0xB90C28", Offset = "0xB90C28", VA = "0xB90C28")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public float backRotation
		{
			[Token(Token = "0x6002819")]
			[Address(RVA = "0xB90C30", Offset = "0xB90C30", VA = "0xB90C30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600281A")]
			[Address(RVA = "0xB90C38", Offset = "0xB90C38", VA = "0xB90C38")]
			set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public int topMaterialIndex
		{
			[Token(Token = "0x600281B")]
			[Address(RVA = "0xB90C40", Offset = "0xB90C40", VA = "0xB90C40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600281C")]
			[Address(RVA = "0xB90C48", Offset = "0xB90C48", VA = "0xB90C48")]
			set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		public int bottomMaterialIndex
		{
			[Token(Token = "0x600281D")]
			[Address(RVA = "0xB90C50", Offset = "0xB90C50", VA = "0xB90C50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600281E")]
			[Address(RVA = "0xB90C58", Offset = "0xB90C58", VA = "0xB90C58")]
			set
			{
			}
		}

		[Token(Token = "0x170003B2")]
		public int leftMaterialIndex
		{
			[Token(Token = "0x600281F")]
			[Address(RVA = "0xB90C60", Offset = "0xB90C60", VA = "0xB90C60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002820")]
			[Address(RVA = "0xB90C68", Offset = "0xB90C68", VA = "0xB90C68")]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		public int rightMaterialIndex
		{
			[Token(Token = "0x6002821")]
			[Address(RVA = "0xB90C70", Offset = "0xB90C70", VA = "0xB90C70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002822")]
			[Address(RVA = "0xB90C78", Offset = "0xB90C78", VA = "0xB90C78")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		public int frontMaterialIndex
		{
			[Token(Token = "0x6002823")]
			[Address(RVA = "0xB90C80", Offset = "0xB90C80", VA = "0xB90C80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002824")]
			[Address(RVA = "0xB90C88", Offset = "0xB90C88", VA = "0xB90C88")]
			set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public int backMaterialIndex
		{
			[Token(Token = "0x6002825")]
			[Address(RVA = "0xB90C90", Offset = "0xB90C90", VA = "0xB90C90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002826")]
			[Address(RVA = "0xB90C98", Offset = "0xB90C98", VA = "0xB90C98")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public bool topFlipX
		{
			[Token(Token = "0x6002827")]
			[Address(RVA = "0xB90CA0", Offset = "0xB90CA0", VA = "0xB90CA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002828")]
			[Address(RVA = "0xB90CA8", Offset = "0xB90CA8", VA = "0xB90CA8")]
			set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public bool topFlipY
		{
			[Token(Token = "0x6002829")]
			[Address(RVA = "0xB90CB4", Offset = "0xB90CB4", VA = "0xB90CB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600282A")]
			[Address(RVA = "0xB90CBC", Offset = "0xB90CBC", VA = "0xB90CBC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public bool bottomFlipX
		{
			[Token(Token = "0x600282B")]
			[Address(RVA = "0xB90CC8", Offset = "0xB90CC8", VA = "0xB90CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600282C")]
			[Address(RVA = "0xB90CD0", Offset = "0xB90CD0", VA = "0xB90CD0")]
			set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public bool bottomFlipY
		{
			[Token(Token = "0x600282D")]
			[Address(RVA = "0xB90CDC", Offset = "0xB90CDC", VA = "0xB90CDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600282E")]
			[Address(RVA = "0xB90CE4", Offset = "0xB90CE4", VA = "0xB90CE4")]
			set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public bool leftFlipX
		{
			[Token(Token = "0x600282F")]
			[Address(RVA = "0xB90CF0", Offset = "0xB90CF0", VA = "0xB90CF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002830")]
			[Address(RVA = "0xB90CF8", Offset = "0xB90CF8", VA = "0xB90CF8")]
			set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public bool leftFlipY
		{
			[Token(Token = "0x6002831")]
			[Address(RVA = "0xB90D04", Offset = "0xB90D04", VA = "0xB90D04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002832")]
			[Address(RVA = "0xB90D0C", Offset = "0xB90D0C", VA = "0xB90D0C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		public bool rightFlipX
		{
			[Token(Token = "0x6002833")]
			[Address(RVA = "0xB90D18", Offset = "0xB90D18", VA = "0xB90D18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002834")]
			[Address(RVA = "0xB90D20", Offset = "0xB90D20", VA = "0xB90D20")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public bool rightFlipY
		{
			[Token(Token = "0x6002835")]
			[Address(RVA = "0xB90D2C", Offset = "0xB90D2C", VA = "0xB90D2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002836")]
			[Address(RVA = "0xB90D34", Offset = "0xB90D34", VA = "0xB90D34")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public bool frontFlipX
		{
			[Token(Token = "0x6002837")]
			[Address(RVA = "0xB90D40", Offset = "0xB90D40", VA = "0xB90D40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002838")]
			[Address(RVA = "0xB90D48", Offset = "0xB90D48", VA = "0xB90D48")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public bool frontFlipY
		{
			[Token(Token = "0x6002839")]
			[Address(RVA = "0xB90D54", Offset = "0xB90D54", VA = "0xB90D54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600283A")]
			[Address(RVA = "0xB90D5C", Offset = "0xB90D5C", VA = "0xB90D5C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public bool backFlipX
		{
			[Token(Token = "0x600283B")]
			[Address(RVA = "0xB90D68", Offset = "0xB90D68", VA = "0xB90D68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600283C")]
			[Address(RVA = "0xB90D70", Offset = "0xB90D70", VA = "0xB90D70")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public bool backFlipY
		{
			[Token(Token = "0x600283D")]
			[Address(RVA = "0xB90D7C", Offset = "0xB90D7C", VA = "0xB90D7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600283E")]
			[Address(RVA = "0xB90D84", Offset = "0xB90D84", VA = "0xB90D84")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public bool useBakedMesh
		{
			[Token(Token = "0x600283F")]
			[Address(RVA = "0xB90D90", Offset = "0xB90D90", VA = "0xB90D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002840")]
			[Address(RVA = "0xB90D98", Offset = "0xB90D98", VA = "0xB90D98")]
			set
			{
			}
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0xB90DA4", Offset = "0xB90DA4", VA = "0xB90DA4", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0xB90EC8", Offset = "0xB90EC8", VA = "0xB90EC8")]
		public void AlignOffsetCenter(Direction side)
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0xB9108C", Offset = "0xB9108C", VA = "0xB9108C")]
		public void AlignOffsetCenter(int faceIndex)
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0xB911CC", Offset = "0xB911CC", VA = "0xB911CC")]
		public void AlignOffsetTop(Direction side)
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0xB91494", Offset = "0xB91494", VA = "0xB91494")]
		public void AlignOffsetTop(int faceIndex)
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0xB91948", Offset = "0xB91948", VA = "0xB91948")]
		public void AlignOffsetBottom(Direction side)
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0xB91BE0", Offset = "0xB91BE0", VA = "0xB91BE0")]
		public void AlignOffsetBottom(int faceIndex)
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0xB91D0C", Offset = "0xB91D0C", VA = "0xB91D0C")]
		public void AlignOffsetLeft(Direction side)
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0xB91F9C", Offset = "0xB91F9C", VA = "0xB91F9C")]
		public void AlignOffsetLeft(int faceIndex)
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0xB920AC", Offset = "0xB920AC", VA = "0xB920AC")]
		public void AlignOffsetRight(Direction side)
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0xB9234C", Offset = "0xB9234C", VA = "0xB9234C")]
		public void AlignOffsetRight(int faceIndex)
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0xB9245C", Offset = "0xB9245C", VA = "0xB9245C")]
		public void SetTextureToFit(Direction side)
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0xB92950", Offset = "0xB92950", VA = "0xB92950")]
		public void SetTextureToFit(int faceIndex)
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xB915C0", Offset = "0xB915C0", VA = "0xB915C0")]
		public Rect GetFaceBounds(FaceData face)
		{
			return default(Rect);
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xB92AF4", Offset = "0xB92AF4", VA = "0xB92AF4")]
		public void ApplyFlipUVX(int faceIndex, bool newFlipX)
		{
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0xB92BA0", Offset = "0xB92BA0", VA = "0xB92BA0")]
		public void ApplyFlipUVY(int faceIndex, bool newFlipY)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0xB92C4C", Offset = "0xB92C4C", VA = "0xB92C4C")]
		public void ApplyFaceMaterial(int faceIndex, int faceMaterialIndex)
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0xB91108", Offset = "0xB91108", VA = "0xB91108")]
		public void ApplyFaceOffset(int faceIndex, Vector2 offset)
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0xB92CF4", Offset = "0xB92CF4", VA = "0xB92CF4")]
		public void ApplyFaceRotation(int faceIndex, float rotation)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0xB92DA8", Offset = "0xB92DA8", VA = "0xB92DA8")]
		public void ApplyFaceScale(int faceIndex, Vector2 scale)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0xB90078", Offset = "0xB90078", VA = "0xB90078")]
		public void CreateMeshAndUVs()
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0xB93018", Offset = "0xB93018", VA = "0xB93018")]
		private MeshData CreateStandardCubeMesh()
		{
			return null;
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0xB96CAC", Offset = "0xB96CAC", VA = "0xB96CAC")]
		private Vector2[] QuadFaceUVs(Direction dir)
		{
			return null;
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0xB93CF8", Offset = "0xB93CF8", VA = "0xB93CF8")]
		private MeshData SplitMeshForCubeProjection(MeshData data)
		{
			return null;
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0xB94344", Offset = "0xB94344", VA = "0xB94344")]
		private MeshData SplitMeshForFaceUnwrapping(MeshData meshData)
		{
			return null;
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0xB98F1C", Offset = "0xB98F1C", VA = "0xB98F1C")]
		private void LogFaceDataVertices(FaceData faceData, MeshData meshData)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0xB97714", Offset = "0xB97714", VA = "0xB97714")]
		private MeshData AddMeshDataForTriangleList(List<int> triangleIds, Vector3 normalDirection, MeshData newData, MeshData oldData, int materialIndex)
		{
			return null;
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0xB98A84", Offset = "0xB98A84", VA = "0xB98A84")]
		private MeshData AddMeshDataForFaceData(FaceData faceData, MeshData newData, MeshData oldData, out FaceData updatedFaceData)
		{
			return null;
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0xB97364", Offset = "0xB97364", VA = "0xB97364")]
		public static Direction GetCubeProjectionDirectionForNormal(Vector3 normal)
		{
			return default(Direction);
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0xB99508", Offset = "0xB99508", VA = "0xB99508")]
		private Vector2 VerticeUVByNormal(Vector3 vertex, Vector3 normal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0xB99FD4", Offset = "0xB99FD4", VA = "0xB99FD4")]
		private Vector2 VerticeUVByFace(Vector3 vertex, FaceData faceData)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0xB9A55C", Offset = "0xB9A55C", VA = "0xB9A55C")]
		public AutoTextureTiling()
		{
		}
	}
	[Token(Token = "0x20007F1")]
	public enum Direction
	{
		[Token(Token = "0x4002364")]
		Up,
		[Token(Token = "0x4002365")]
		Down,
		[Token(Token = "0x4002366")]
		Left,
		[Token(Token = "0x4002367")]
		Right,
		[Token(Token = "0x4002368")]
		Forward,
		[Token(Token = "0x4002369")]
		Back
	}
	[Serializable]
	[Token(Token = "0x20007F2")]
	public class FaceData
	{
		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 uvScale;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 uvOffset;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotation;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool flipUVx;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool flipUVy;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int materialIndex;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private int[] triangles;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		public Vector3[] normals;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Vector3 averageNormal;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		[SerializeField]
		private bool initialized;

		[Token(Token = "0x170003C3")]
		public Vector3 AverageNormal
		{
			[Token(Token = "0x6002862")]
			[Address(RVA = "0xB92AE0", Offset = "0xB92AE0", VA = "0xB92AE0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003C4")]
		public bool Initialized
		{
			[Token(Token = "0x6002863")]
			[Address(RVA = "0xB98EE0", Offset = "0xB98EE0", VA = "0xB98EE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C5")]
		public int[] Triangles
		{
			[Token(Token = "0x6002864")]
			[Address(RVA = "0xB92AEC", Offset = "0xB92AEC", VA = "0xB92AEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0xB9895C", Offset = "0xB9895C", VA = "0xB9895C")]
		public FaceData()
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0xB98F10", Offset = "0xB98F10", VA = "0xB98F10")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0xB98EE8", Offset = "0xB98EE8", VA = "0xB98EE8")]
		public void Initialize(FaceData dataForCopyingSettings)
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0xB98A10", Offset = "0xB98A10", VA = "0xB98A10")]
		public void CopySettingsFrom(FaceData dataForCopyingSettings)
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0xB98478", Offset = "0xB98478", VA = "0xB98478")]
		public void AddTriangle(int[] triangleVertexIndices, Vector3 normal)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0xB983B8", Offset = "0xB983B8", VA = "0xB983B8")]
		public bool IsWithinNormalAngleRange(Vector3 triangleNormal, float faceUnwrappingNormalTolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0xB9A524", Offset = "0xB9A524", VA = "0xB9A524")]
		public void SetTriangles(int[] newFaceTriangleIndices)
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0xB9A870", Offset = "0xB9A870", VA = "0xB9A870")]
		public string TrianglesToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20007F3")]
	public enum UnwrapType
	{
		[Token(Token = "0x4002375")]
		CubeProjection,
		[Token(Token = "0x4002376")]
		FaceDependent
	}
	[Token(Token = "0x20007F4")]
	public class DynamicTextureTiling : AutoTextureTiling
	{
		[Token(Token = "0x600286D")]
		[Address(RVA = "0xB9A6D0", Offset = "0xB9A6D0", VA = "0xB9A6D0")]
		private void Update()
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0xB9A80C", Offset = "0xB9A80C", VA = "0xB9A80C")]
		public DynamicTextureTiling()
		{
		}
	}
	[Token(Token = "0x20007F5")]
	public class MeshData
	{
		[Token(Token = "0x20007F6")]
		private class IndexTriplet : IComparable
		{
			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int y;

			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int z;

			[Token(Token = "0x6002889")]
			[Address(RVA = "0xB9AFEC", Offset = "0xB9AFEC", VA = "0xB9AFEC")]
			public IndexTriplet(int x, int y, int z)
			{
			}

			[Token(Token = "0x600288A")]
			[Address(RVA = "0xB9B02C", Offset = "0xB9B02C", VA = "0xB9B02C", Slot = "4")]
			public int CompareTo(object otherObj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector3> vertices;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3> normals;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int>[] triangles;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2> uv;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector2> uv2;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector4> tangents;

		[Token(Token = "0x170003C6")]
		public List<Vector3> Vertices
		{
			[Token(Token = "0x600286F")]
			[Address(RVA = "0xB93818", Offset = "0xB93818", VA = "0xB93818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		public List<Vector3> Normals
		{
			[Token(Token = "0x6002870")]
			[Address(RVA = "0xB9682C", Offset = "0xB9682C", VA = "0xB9682C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		public List<int>[] Triangles
		{
			[Token(Token = "0x6002871")]
			[Address(RVA = "0xB93820", Offset = "0xB93820", VA = "0xB93820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		public List<Vector2> UV
		{
			[Token(Token = "0x6002872")]
			[Address(RVA = "0xB93828", Offset = "0xB93828", VA = "0xB93828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		public List<Vector2> UV2
		{
			[Token(Token = "0x6002873")]
			[Address(RVA = "0xB9683C", Offset = "0xB9683C", VA = "0xB9683C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		public List<Vector4> Tangents
		{
			[Token(Token = "0x6002874")]
			[Address(RVA = "0xB96834", Offset = "0xB96834", VA = "0xB96834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		public int subMeshCount
		{
			[Token(Token = "0x6002875")]
			[Address(RVA = "0xB937EC", Offset = "0xB937EC", VA = "0xB937EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002876")]
			[Address(RVA = "0xB97578", Offset = "0xB97578", VA = "0xB97578")]
			set
			{
			}
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0xB92E6C", Offset = "0xB92E6C", VA = "0xB92E6C")]
		public MeshData()
		{
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0xB968CC", Offset = "0xB968CC", VA = "0xB968CC")]
		public void AddQuadTriangles()
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0xB9A988", Offset = "0xB9A988", VA = "0xB9A988")]
		public void AddTriangle(int tri)
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0xB99234", Offset = "0xB99234", VA = "0xB99234")]
		public void AddTriangle(int tri, int materialIndex)
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0xB93960", Offset = "0xB93960", VA = "0xB93960")]
		public void SetTriangles(Mesh mesh)
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0xB9AAC4", Offset = "0xB9AAC4", VA = "0xB9AAC4")]
		public void SetTriangles(int[] newTriangles)
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0xB96844", Offset = "0xB96844", VA = "0xB96844")]
		public void AddVertex(Vector3 vertex)
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0xB9ABB0", Offset = "0xB9ABB0", VA = "0xB9ABB0")]
		private void RemoveVertices(Dictionary<int, int> vertexIndexDict)
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0xB93830", Offset = "0xB93830", VA = "0xB93830")]
		public void SetVertices(Vector3[] newVertices)
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0xB99480", Offset = "0xB99480", VA = "0xB99480")]
		public void AddNormal(Vector3 normal)
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0xB938C8", Offset = "0xB938C8", VA = "0xB938C8")]
		public void SetNormals(Vector3[] newNormals)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0xB993F0", Offset = "0xB993F0", VA = "0xB993F0")]
		public void AddTangent(Vector4 tangent)
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0xB93BC8", Offset = "0xB93BC8", VA = "0xB93BC8")]
		public void SetTangents(Vector4[] newTangents)
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0xB972F4", Offset = "0xB972F4", VA = "0xB972F4")]
		public void AddUVCoordinates(Vector2[] uvCoordinates)
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0xB99EE4", Offset = "0xB99EE4", VA = "0xB99EE4")]
		public void AddUVCoordinate(Vector2 uvCoordinate)
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0xB93C60", Offset = "0xB93C60", VA = "0xB93C60")]
		public void SetUV2Coordinates(Vector2[] uvCoordinates)
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0xB99F5C", Offset = "0xB99F5C", VA = "0xB99F5C")]
		public void AddUV2Coordinate(Vector2 coordinate)
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0xB97B48", Offset = "0xB97B48", VA = "0xB97B48")]
		public void RemoveDoubles()
		{
		}
	}
}
